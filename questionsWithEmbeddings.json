[{"id":"duplicate-integer","name":"Duplicate Integer","description":"Given an integer array `nums`, return `true` if any value appears **more than once** in the array, otherwise return `false`.\n\n**Example 1:**\n\n```java\nInput: nums = [1, 2, 3, 3]\n\nOutput: true\n```\n\n**Example 2:**\n\n```java\nInput: nums = [1, 2, 3, 4]\n\nOutput: false\n```\n","difficulty":"Easy","concepts":["Hash Usage"],"solutions":{"python":"class Solution:\n    def hasDuplicate(self, nums: List[int]) -> bool:\n        hashset = set()\n\n        for n in nums:\n            if n in hashset:\n                return True\n            hashset.add(n)\n        return False\n    ","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {boolean}\n     */\n    hasDuplicate(nums) {\n        const numsSet = new Set();\n        for (const num of nums) {\n            if (numsSet.has(num)) return true;\n\n            numsSet.add(num);\n        }\n\n        return false;\n    }\n}\n","cpp":"class Solution {\npublic:\n    bool hasDuplicate(vector<int>& nums) {\n        unordered_set<int> s;\n        \n        for (int i = 0; i < nums.size(); i++) {\n            if (s.find(nums[i]) != s.end()) {\n                return true;\n            }\n            s.insert(nums[i]);\n        }\n        \n        return false;\n    }\n};\n","java":"class Solution {\n    public boolean hasDuplicate(int[] nums) {\n        Set<Integer> uniques = new HashSet<>();\n        for (int i = 0; i < nums.length; i++) {\n            if (uniques.contains(nums[i])) {\n                return true;\n            }\n            uniques.add(nums[i]);\n        }\n        return false;\n    }\n}\n","csharp":"public class Solution {\n    public bool hasDuplicate(int[] nums) {\n        HashSet<int> set = new HashSet<int>();\n        \n        foreach (int x in nums){\n            if (set.Contains(x)) return true;\n            set.Add(x);\n        }\n        return false;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def hasDuplicate(self, nums: List[int]) -> bool:\n         ","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {boolean}\n     */\n    hasDuplicate(nums) {}\n}\n","cpp":"class Solution {\npublic:\n    bool hasDuplicate(vector<int>& nums) {\n\n    }\n};\n","java":"class Solution {\n    public boolean hasDuplicate(int[] nums) {\n \n    }\n}\n","csharp":"public class Solution {\n    public bool hasDuplicate(int[] nums) {\n\n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/3OamzN90kPg","embedding":[-0.022310134,-0.026156709,0.015070682,-0.027320543,0.019637257,0.0089063,-0.0060854782,-0.010563286,0.00043458896,0.020337531,0.025781913,-0.05527232,0.0053358893,0.00027138693,0.010099724,0.0068794508,-0.03870246,-0.0020120544,0.024164379,0.020771503,0.045369856,0.07022464,0.06047999,-0.017210957,0.07389369,-0.012871231,0.034283828,-0.0064306837,0.0002642979,0.01722082,0.008329313,-0.019834517,0.00048174648,0.058625743,-0.038268488,0.007407122,0.036591776,0.024302462,-0.007698081,-0.010533697,-0.021659175,-0.03742027,0.018295888,-0.0024410954,-0.0090690395,0.027754515,0.05223451,-0.025032325,0.0057057524,0.0510904,0.012851505,0.005330958,-0.015001642,-0.0020638353,-0.017132051,-0.05065643,-0.0567715,0.05759999,-0.0034520542,0.006928766,0.027340269,-0.005528218,-0.008728766,0.067660265,-0.0121709565,0.026511777,0.026353968,-0.025959447,-0.047263555,-0.0039378074,-0.034264103,0.023750134,0.04181917,-0.0056021907,0.017427942,0.04181917,0.03690739,0.019469585,0.0033879445,0.00005667379,0.023395065,0.019469585,0.061111223,-0.0011317807,-0.00481315,-0.0018024654,-0.028859174,-0.019232873,-0.04371287,-0.048407663,0.0250126,0.038741913,0.039728213,0.031324927,0.042292595,0.008437807,0.058073416,0.004842739,0.012585203,0.06126903,0.0048452048,0.017625203,-0.008467396,0.052313417,0.0135715045,0.019084929,0.0491178,0.004292876,-0.02534794,-0.013798354,0.027557256,-0.009019724,-0.0009980135,-0.023513421,0.012762737,0.016826298,-0.034737527,0.0021908216,0.02262575,0.0045419172,0.012368217,-0.019755613,0.014597258,-0.03487561,-0.026570953,-0.013255889,0.009636163,-0.034638897,0.03394849,0.0008013697,0.0063715056,-0.021659175,0.013324929,0.03254794,-0.005972054,-0.05337862,-0.007086574,-0.0063468483,0.004305205,0.023552872,0.041661363,-0.042568758,-0.012851505,0.043791775,0.087031215,-0.01257534,-0.037380815,-0.0070126015,0.0070027383,0.011529861,0.03404712,-0.026511777,0.030851502,0.020515066,-0.019834517,-0.0020921915,-0.00309452,-0.026511777,0.026077803,0.012092053,-0.00802356,-0.02073205,-0.0045789033,-0.0029391777,0.01798027,0.014301367,-0.011312875,-0.040221363,-0.008531505,-0.013768765,0.045527663,0.021935338,0.0255452,-0.0053161634,0.033810407,-0.0010294518,-0.04174027,-0.0886093,-0.037282184,-0.033711776,0.031975884,0.0014005477,-0.0033090406,-0.054996155,0.040398896,-0.031896982,0.044975333,-0.058270674,-0.036631227,-0.0137589015,0.048644375,0.026728762,0.021027941,0.027004927,-0.009636163,-0.064701356,0.021856435,0.0567715,-0.045922183,-0.033415884,-0.023592325,0.012289313,0.011845478,0.014972053,0.018157804,-0.049827937,0.0057945196,-0.011500272,-0.023888215,-0.010464656,0.02534794,-0.0011626026,-0.010888766,-0.01974575,0.002305479,-0.00030498282,-0.0022216435,0.015080545,0.018266298,0.048407663,0.011243833,0.0032375336,0.023395065,0.025308488,0.0037553417,-0.0043964377,0.010484382,0.025032325,-0.012812053,0.032705747,-0.004066027,-0.028701365,-0.00046602733,-0.0264526,-0.05065643,-0.005301369,-0.016461367,-0.024696982,-0.023079447,0.012752875,-0.004122739,0.011352327,-0.0122005455,0.014607121,-0.005700821,0.0008673286,-0.05448328,0.067463,-0.029214242,-0.012348491,-0.012762737,0.035408214,-0.00834904,-0.07290739,-0.008738629,0.018039448,-0.036670677,-0.0031906844,0.028208215,0.011125478,-0.05448328,0.025564928,-0.050380267,-0.06253149,-0.00237452,-0.013837806,0.016964382,0.029529858,0.026768215,0.004073424,-0.031620815,-0.024184106,0.0400241,-0.02996383,-0.007698081,-0.0081024645,-0.014616984,-0.010208217,0.04872328,-0.07286793,-0.025762187,-0.036789034,0.014587395,0.04465972,0.019854244,-0.019055339,-0.014488765,0.026038352,-0.033909034,-0.030851502,-0.017181367,-0.050222456,-0.012871231,0.013837806,-0.01922301,-0.017644929,-0.023592325,0.014814244,0.008018629,-0.05992766,0.041582458,-0.021106847,0.0002029623,0.014459176,-0.05393095,-0.060795605,0.0033213692,-0.0068449304,-0.014972053,0.012023011,0.001368493,-0.009872875,-0.0341852,-0.052786842,0.043515608,-0.054404374,-0.02039671,0.012131505,0.03317917,0.008166574,0.016037257,0.024381366,0.01614575,0.05740273,-0.004292876,0.04757917,0.010045478,0.017526573,0.018295888,-0.013315066,0.006889314,0.0018431504,0.006410958,0.04970958,-0.05164273,-0.0027073969,0.005252054,-0.03953095,-0.019499175,-0.021343557,0.024164379,-0.017457532,0.031522185,0.004630684,-0.031443283,-0.0025742461,-0.03343561,0.029352324,-0.005449314,-0.010060272,0.015011504,-0.02937205,0.046119444,-0.016757257,-0.02016986,-0.022546845,-0.052313417,0.01702356,-0.010711231,0.00573041,0.01755616,0.0443441,0.048447113,0.0037109582,0.03398794,0.0026580817,-0.026926022,-0.037479445,-0.013650409,0.09318574,0.010632327,0.033336982,-0.004221369,0.0010497944,0.0040093143,0.036355063,-0.028701365,0.011372053,-0.009123286,-0.049393963,-0.030890953,-0.025564928,0.028109584,-0.012969861,0.022152325,0.070619166,-0.00625315,-0.045488212,-0.0471452,-0.04967013,-0.0074712317,-0.02629479,0.060558893,-0.004724383,0.013324929,-0.0070224646,0.007308492,0.043989033,-0.03799232,0.0070224646,0.030220268,-0.0042657526,0.0067709577,0.02659068,0.012437258,0.015366573,0.0000026270864,0.038761638,0.06434629,-0.030082187,-0.0018209586,0.04394958,-0.004598629,0.012230135,0.061505742,0.05045917,-0.03676931,0.0041819173,0.0018160271,-0.046158895,0.021955065,-0.03647342,0.012161094,-0.02242849,0.0052076704,-0.022448216,-0.030595064,-0.05854684,-0.026649859,-0.06616108,-0.05045917,-0.017457532,0.00022145544,0.053654786,-0.048999444,0.04371287,-0.02138301,0.038958896,-0.025762187,-0.05065643,-0.008048218,-0.03452054,-0.019203285,0.0057747937,-0.016027395,-0.0032572597,-0.0046380814,0.02232986,0.0529052,-0.027912324,0.0036986296,-0.02187616,0.01155945,0.05969095,0.0058043827,-0.026906297,-0.0102378065,0.0004980821,-0.036532596,-0.02584109,-0.04217424,-0.0006854793,0.0008309588,-0.014459176,0.055785198,-0.02584109,0.0038909581,-0.0013845203,0.07109259,-0.025269037,0.02187616,-0.026038352,0.035349034,0.03284383,-0.006608218,-0.0050030127,0.0380515,0.075353414,0.030279446,0.013798354,-0.004652876,-0.049275607,-0.029076159,0.02550575,0.019568216,0.011944108,0.03091068,0.02098849,-0.0028405474,-0.007145752,-0.030575337,0.0072936974,0.004702191,-0.0050695883,-0.017279997,0.025229584,0.029608762,-0.0073232865,0.022882188,0.0016557531,-0.011756711,-0.06698958,0.015701914,-0.004283013,-0.0053210948,0.011174792,-0.025860818,-0.040990677,-0.0076586287,0.08845149,-0.009167669,0.03219287,0.046158895,0.0068745194,-0.0075698616,0.02187616,0.020317804,-0.018581914,-0.01843397,-0.025979174,0.011628491,0.032528214,-0.003654246,0.013946299,0.021225201,-0.028563283,-0.02252712,-0.03268602,-0.04037917,-0.006277807,-0.00455178,0.0413852,0.011618628,0.015248217,-0.017339176,-0.0033460269,0.016816435,-0.02570301,-0.020110682,-0.027675612,-0.0001836986,0.023197804,-0.014873422,-0.015277806,0.0100652035,-0.02242849,0.025781913,-0.0129797235,-0.013679998,-0.016895339,-0.013877258,-0.0051287664,0.0061249305,-0.021935338,0.012516162,-0.038209308,-0.029095886,0.028366022,0.00492904,0.027517803,-0.027024653,0.000019880134,0.00546904,0.010622464,-0.0009376026,0.0017284929,-0.017279997,-0.0047145197,0.020613695,-0.018877804,-0.024243284,0.0012821916,0.015642738,-0.033711776,0.012762737,-0.013058628,-0.026432872,-0.015899176,-0.039313965,0.02118575,-0.016185204,-0.0482104,0.004070958,-0.02475616,-0.032330953,0.03700602,-0.012121642,0.015445476,0.027103556,-0.021698626,0.014962189,-0.010336436,0.035901364,-0.015307395,-0.007846026,-0.041345745,-0.023690956,0.014133696,0.0120526,-0.010967669,0.0031315063,0.050419718,0.017013695,-0.042095337,-0.008802738,0.016135888,0.020633422,0.034698077,0.010296985,0.024736434,-0.024973147,-0.019952873,0.00345452,0.016648764,-0.0065736976,-0.0011878766,-0.0037972596,0.040398896,-0.022093147,-0.014784655,0.044186294,0.001486849,-0.008067944,-0.010356163,-0.00032948624,0.0017223285,0.0040389034,0.025288763,-0.02678794,0.008196163,-0.04394958,-0.035842184,0.033297528,-0.016688216,-0.013246025,0.05258958,-0.016175339,0.00022607873,0.010523834,-0.00065342453,0.032409858,-0.019755613,-0.0052767117,-0.02947068,-0.00736767,-0.0094734235,-0.009532602,-0.011589039,0.019094791,-0.031167118,0.01126356,-0.0041695884,0.014607121,-0.030397803,0.0067364373,-0.0142126,-0.03690739,-0.031581365,-0.010760546,0.0064356155,0.0092663,-0.013453148,0.018641092,-0.01964712,0.010257533,-0.040911775,0.031679995,0.019015888,0.021698626,-0.002286986,-0.016382463,0.020515066,0.014399998,-0.023730407,-0.0038465746,0.04024109,0.017053148,0.006415889,-0.0453304,-0.0036320542,-0.006721643,0.009182464,-0.010563286,0.019242736,0.010168766,0.004620821,0.021205476,0.017408216,-0.021816982,-0.0022697255,-0.012654244,-0.018522736,-0.0049487664,0.002206849,0.03065424,-0.004820547,0.018710135,0.0072838343,-0.0015743834,0.012456984,0.02649205,-0.0009943149,0.020278353,0.013265751,-0.04391013,-0.010987395,0.0043175337,0.0010571916,-0.016293695,0.029648215,0.01650082,0.028109584,0.012831778,-0.002704931,-0.0142126,0.001018356,-0.045527663,-0.019775338,0.034007665,-0.022290407,0.02302027,0.031443283,-0.02524931,0.027143009,0.0020034243,0.028543556,0.018779175,-0.01381808,-0.002196986,-0.009946847,-0.024302462,-0.018719997,-0.0005689725,0.03647342,0.034915064,-0.0125063,0.012289313,0.05333917,-0.043555062,-0.028050406,-0.02852383,0.077483825,0.020219175,-0.010494245,0.0202389,0.000085761974,-0.007476163,0.033415884,-0.06430684,0.023375338,-0.03647342,0.00136726,0.039807115,0.026570953,0.009369861,0.01722082,-0.012496436,-0.0014449313,0.015021367,-0.0034989035,0.01728986,0.06324163,-0.05140602,-0.007066848,0.05255013,0.007017533,-0.022270681,0.007328218,-0.020751778,0.027774243,-0.017250407,-0.015346847,0.00023594174,-0.04241095,-0.0040487666,-0.020771503,0.0022352051,-0.017358901,-0.007407122,0.0064060264,-0.010395614,0.005059725,0.006558903,0.01634301,-0.0011724655,-0.004699725,0.0050646565,0.0010584245,0.02376986,-0.0065243826,0.004204109,0.029332597,-0.012259724,-0.007298629,0.014054792,-0.00913808,-0.0221326,-0.02217205,0.013502464,-0.011095889,-0.012634519,0.018581914,0.051129855,-0.009966574,-0.0013993148,0.007555067,0.001846849,-0.010198355,0.014409861,-0.008921094,-0.004561643,0.06182136,0.0005399999,-0.011007122,-0.007614245,0.0022327392,0.014291504,0.016944654,-0.0009511642,-0.0120131485,-0.012821916,0.022507394,0.021442188,-0.0048254784,0.043436706,-0.03824876,-0.038110677,0.0015645203,0.010306847,0.004480273,0.0028405474,0.0023289036,-0.036887664,0.018572051,-0.014745203,0.050340813,0.038189583,0.024677256,0.018177532,0.0058734235,-0.020317804,0.020100819,-0.007974246,-0.064701356,-0.011904656,0.031088214,0.009335341,-0.03173917,-0.017279997,-0.01726027,0.0110465735,0.020100819,0.037716158,-0.026432872,-0.0053358893,0.0044999993,0.009350135,0.009813697,-0.022487666,-0.019568216,0.029944105,0.004514794,0.007407122,-0.013926573,-0.0067117796,0.00982356,-0.0134926,0.0030427391,0.009853149,-0.037341364,0.017575888,0.03258739,-0.030772597,-0.020929312,-0.0030673968,0.011579176,0.029411502,0.0156526,0.010908491,-0.018907394,0.058625743,-0.004196712,-0.03205479,0.04181917,-0.028622461,-0.03343561,0.02609753,-0.026156709,-0.0090690395,-0.019903557,0.023789585,-0.009433971,-0.0069238343,-0.06888328,-0.033711776,0.018848216,0.026353968,-0.032488763,0.031581365,-0.0077720536,0.0046380814,-0.011450957,-0.009734793,0.023158353,0.014291504,0.027458625,0.008462464,0.03968876,-0.012101916,-0.00736767,0.021698626,-0.0048969854,-0.0073824646,0.018147942,0.008353971,-0.0016384929,0.008496985,0.022566572,0.0014301367,0.02763616,0.01751671,-0.0149424635,-0.033869583,-0.02088986,0.04087232,0.023690956,-0.01146082,-0.02039671,0.021422463,0.02852383,0.0462378,-0.012861367,0.0023412325,-0.02822794,-0.030082187,-0.03605917,-0.0005224314,0.013137532,0.026235612,0.0031684926,-0.01555397,0.0051189032,0.0046134237,0.00026799654,0.00067130127,-0.040142458,-0.010395614,-0.045567114,-0.0153172575,0.030141365,0.024835065,-0.038663007,0.01679671,-0.02570301,0.0028528762,-0.015672326,0.031246021,0.0089063,0.0047687665,-0.006420821,-0.0024731501,-0.008852053,0.033060815,0.005868492,0.0069731497,-0.022211503,0.019173695,0.032212596,-0.01545534,-0.065727115,0.038603827,-0.017378626,-0.003523561,-0.0041646566,-0.008319451,-0.014498628,-0.029510131,-0.0063172593,-0.0018986298,0.004359451,-0.023335887,0.03160109,0.011667944,0.006440547,0.014133696,0.02852383,0.020672873,0.025919996,0.016165476,0.027715065,0.0007649999,0.023552872,-0.011845478,-0.0199726,-0.009932053,-0.0031339722,-0.036493145,0.004901917,-0.008837258,-0.008689313,-0.005192876,-0.017546298,-0.013009313,0.02947068,0.015514518,-0.023967119,0.0654904,0.0036345199,-0.02897753,-0.0002256164,-0.0529052,-0.034421913,0.031758897,0.00005416951,0.029786296,-0.0016397258,0.053733688,0.018966572,0.01654027,-0.031127665,-0.008127122,-0.0026063009,-0.0021809586,0.0032597254,-0.0017839723,-0.030180817,-0.017270135,0.03690739,-0.008008766,0.057718348,0.011875067,-0.02390794,-0.037735883,-0.0001281421,0.004564109,0.010583011,-0.018966572,-0.043831225,0.006869588,0.004753972,-0.010888766,0.017329313,-0.014922737,0.009798902,-0.030476708,-0.005163287,-0.030634515,0.019094791,-0.05144547,-0.0029539722,-0.022073422,0.018552326,0.008388491,-0.0064306837,0.0121709565,-0.0013204108,0.034658626,0.017319448,0.011924381,0.0022820544,0.025308488,-0.014399998,-0.029589036,0.003940273,0.020534791,-0.022586297,-0.03513205,-0.032863557,-0.027143009,-0.026413146,0.014695887,-0.03402739,-0.01942027,0.006445478,-0.011628491,-0.027320543,0.010592875,-0.0039476706,0.009305752,0.0053210948,-0.011608765,-0.03264657,-0.020949038,0.017132051,0.026570953,0.036177527,0.016885476,0.005587396,-0.024736434,0.025091503,0.026511777,0.022507394,0.020791229,0.014222464,0.0390378,0.007934793,-0.02937205,-0.0009314382,-0.0015447943,0.009641094,0.02783342,0.0066526015,-0.006618081,-0.027971502,0.0076536974,0.000654041,-0.0045838347,0.03686794,-0.03870246,0.007959451,-0.012210409,-0.009705204,0.00210452,0.013403833,-0.0361578,-0.043515608,0.0038194514,-0.017625203,0.00681041,-0.01741808,0.007998902,-0.00491178,0.023533147,0.009650957,-0.062294785,-0.015948491,0.018976435,0.042923827,-0.01672767,0.033909034,0.021797257,-0.043594513,-0.009414245,-0.019311778,0.0029391777,0.029549584,-0.023039997,-0.02088986,0.0036690405,0.0069336975,0.010208217,-0.019104654,-0.018917257,-0.01791123,0.0073479437,0.022704653,0.0026679446,0.04489643,0.018197257,0.007998902,-0.010869039,-0.014972053,-0.0019997256,0.004660273,0.0017063011,0.040063556,-0.023059722,0.0075649302,-0.037163828,-0.034402184,-0.007929862,0.016915066,0.00095424644,0.007776985,-0.01650082,0.008067944,0.006415889,0.0075106835,0.03254794,-0.009128218,0.0020712325,0.008713971,0.0010781505,0.006129862,0.04892054,-0.0055726017,-0.008580821,0.011243833,0.041306295,0.0029958899,0.013354518,0.007821369,-0.029727118,0.0028528762,0.0047342456,-0.0071556154,-0.0064306837,-0.019361092,0.009172602,0.022270681,0.015790682,-0.0014954791,0.011687669,-0.01699397,0.0019109586,-0.013561642,0.005612054,0.0060263,-0.0024004106,-0.0010707532,0.014054792,-0.013453148,-0.0036591776,0.027655886,-0.04450191,-0.018986298,0.022053694,-0.008541368,0.0018702736,0.00438904,-0.006248218,0.0021489037,-0.025722735,-0.052116156,-0.031364378,-0.0404778,-0.0124175325,0.04465972,0.01944986,0.0056515057,0.010010957,0.0510115,0.0075649302,0.008965478,-0.0069928756,-0.017141914,0.038386844,0.04876273,0.013413697,-0.0011755477,-0.006928766,-0.023059722,-0.013463011,-0.004882191,0.0206926,-0.030831775,-0.000957945,-0.007944657,0.062886566,-0.0002866438,-0.006568766,0.007017533,-0.030338624,-0.009685478,0.02822794,-0.009404382,-0.03412602,0.024085475,0.04316054,-0.032528214,0.011086025,-0.006780821,0.03150246,0.019933147,-0.0048304102,-0.010957806,-0.029411502,0.0020231504,0.011372053,-0.03686794,-0.040596157,-0.0118257515,0.0127923265,-0.017003832,0.010583011,-0.03120657,-0.000113501694,-0.008659724,-0.0102378065,-0.025308488,0.025742462,-0.0012131504,0.016037257,-0.008472327,0.009167669,0.020810956,-0.027261365,0.01974575,0.017368764,-0.01218082,-0.02728109,0.02242849,0.019390682,0.00091787655,0.009685478,0.026551228,-0.017427942,-0.00681041,0.0017383558,-0.000027296655,0.02465753,-0.008452602,0.018364929,0.0055775335,0.011717258,0.020258626,0.017102463,0.034323283,0.007855889,0.017881641,-0.0010177395,0.014883285,-0.016944654,0.015909038,0.020633422,0.00661315,-0.024913969,-0.0010023286,0.024677256,0.047736976,0.013167121,-0.00038558213,-0.00789041,0.006475067,0.018858079,-0.0092564365,0.0155046545,0.04659287,-0.0023387668,-0.003225205,0.008985204,0.03454027,-0.05318136,-0.006336985,-0.01611616,0.018690407,0.039136432,-0.007944657,0.000431815,-0.039866295,-0.014104107,-0.0124175325,-0.03745972,-0.05432547,-0.011756711,-0.0038712323,0.0034890405,0.035783008,0.00054523966,0.034461364,-0.006110136,-0.04529095,-0.038879994,-0.009512875,0.029884927,0.009976436,0.032173146,-0.0004154794,-0.031265747,-0.04079342,0.025091503,0.008728766,0.0013832875,0.025624106,0.013749039,-0.002973698,-0.020968763,0.0548778,-0.00037109584,-0.021363284,-0.001068904,0.012693697,0.02158027,0.019075066,0.025091503,-0.019114517,0.04174027,-0.011293149,-0.006618081,-0.0064849304,0.011924381,-0.030239996,-0.041582458,0.0025717805,-0.008442738,0.0029983555,0.012407669,0.035506845,0.008265204,0.010395614,-0.010158902,-0.0006509588,-0.0086794505,0.015642738,-0.007850957,0.032488763,0.010356163,0.01778301,-0.006775889,0.03542794,0.027123284,-0.017181367,-0.030575337,-0.0017580818,-0.005439451,-0.024420818,0.0056515057,-0.005202739,0.0047465744,-0.005661369,0.015415887,0.04817095,-0.002426301,0.018976435,-0.0057106838,-0.03840657,-0.030516159,-0.0012371916,0.032035064,-0.0096460255,-0.00537041,0.030516159,-0.03016109,-0.0414641,0.0048772595,-0.031226296,-0.044383556,-0.0016298627,0.00020404106,0.02014027,-0.025387393,-0.015672326,-0.03775561,-0.020317804,0.03404712,-0.017921092,0.008112327,0.034066845,-0.047263555,-0.075353414,-0.023099175,-0.0102378065,0.023927666,-0.0044457526,0.022980819,0.06032218,-0.015267943,0.03215342,-0.0074712317,0.0066328757,0.015179176,0.0066328757,-0.011470683,0.008945752,-0.003932876,-0.027991228,0.01647123,-0.007910135,0.00798904,0.045369856,-0.011539724,0.026886571,-0.0274389,-0.018779175,0.051721636,-0.00013453765,0.031246021,-0.015001642,0.011362189,0.013265751,-0.01083945,0.010701368,-0.010316711,0.018443832,-0.020002188,-0.008566026,0.02956931,0.019163832,0.01672767,-0.009789039,-0.0052471226,-0.0548778,0.011135341,0.006800547,-0.043555062,0.015731504,-0.03487561,0.021659175,-0.0038194514,0.027359996,-0.0006743834,0.038386844,0.024164379,0.019982463,0.040753964,0.03483616,-0.037617527,-0.014064655,-0.013709587,0.026334243,-0.013413697,-0.017161641,0.008886574,0.043989033,-0.022961091,0.012634519,0.02783342,-0.010099724,-0.00044784238,0.017861914,0.017526573,-0.0050646565,0.015918901,0.029786296,-0.012003286,0.014981915,-0.040142458,-0.0077720536,0.008097533,0.017832326,0.028464653,0.008314519,-0.0064060264,0.013482737,-0.017802736,-0.012664108,-0.033928763,0.011707395,0.027399447,-0.004719451,0.035053145,-0.0011157532,0.03422465,0.0048945197,-0.0030106844,0.01726027,-0.023868488,-0.0120131485,-0.015208765,0.01830575,-0.00006476454,0.014261915,0.04410739,-0.041306295,-0.004233698,-0.01083945]},{"id":"string-encode-and-decode","name":"String Encode and Decode","description":"Design an algorithm to encode a list of strings to a single string. The encoded string is then decoded back to the original list of strings.\n\nPlease implement `encode` and `decode`\n\n**Example 1:**\n\n```java\nInput: [\"neet\",\"code\",\"love\",\"you\"]\n\nOutput:[\"neet\",\"code\",\"love\",\"you\"]\n```\n\n**Example 2:**\n```java\nInput: [\"we\",\"say\",\":\",\"yes\"]\n\nOutput: [\"we\",\"say\",\":\",\"yes\"]\n```\n\n**Constraints:**\n* `0 <= strs.length < 100`\n* `0 <= strs[i].length < 200`\n* `strs[i]` contains only UTF-8 characters.\n","difficulty":"Medium","concepts":[],"solutions":{"python":"class Solution:\n    \n    def encode(self, strs: List[str]) -> str:\n        res = \"\"\n        for s in strs:\n            res += str(len(s)) + \"#\" + s\n        return res\n\n    def decode(self, s: str) -> List[str]:\n        res = []\n        i = 0\n        \n        while i < len(s):\n            j = i\n            while s[j] != '#':\n                j += 1\n            length = int(s[i:j])\n            i = j + 1\n            j = i + length\n            res.append(s[i:j])\n            i = j\n            \n        return res\n","javascript":"class Solution {\n    /**\n     * @param {string[]} strs\n     * @returns {string}\n     */\n    encode(strs) {\n        let result = '';\n        for (let s of strs) {\n            result += `${s.length}#${s}`;\n        }\n        return result;\n    }\n\n    /**\n     * @param {string} str\n     * @returns {string[]}\n     */\n    decode(str) {\n        let result = [];\n        let i = 0;\n\n        while (i < str.length) {\n            let j = i;\n            while (str[j] !== '#') {\n                j++;\n            }\n            let length = parseInt(str.substring(i, j), 10);\n            i = j + 1;\n            j = i + length;\n            result.push(str.substring(i, j));\n            i = j;\n        }\n        return result;\n    }\n}\n","cpp":"class Solution {\npublic:\n\n    string encode(vector<string>& strs) {\n        string result = \"\";\n        \n        for (int i = 0; i < strs.size(); i++) {\n            string str = strs[i];\n            result += to_string(str.size()) + \"#\" + str;\n        }\n        \n        return result;\n    }\n\n    vector<string> decode(string s) {\n        vector<string> result;\n        \n        int i = 0;\n        while (i < s.size()) {\n            int j = i;\n            while (s[j] != '#') {\n                j++;\n            }\n            int length = stoi(s.substr(i, j - i));\n            string str = s.substr(j + 1, length);\n            result.push_back(str);\n            i = j + 1 + length;\n        }\n        \n        return result;\n    }\n};\n","java":"class Solution {\n\n    public String encode(List<String> strs) {\n        StringBuilder encodedString = new StringBuilder();\n        for (String str : strs) {\n            encodedString.append(str.length()).append(\"#\").append(str);\n        }\n        return encodedString.toString();\n    }\n\n    public List<String> decode(String str) {\n        List<String> list = new ArrayList<>();\n        int i = 0;\n        while (i < str.length()) {\n            int j = i;\n            while (str.charAt(j) != '#') j++;\n\n            int length = Integer.valueOf(str.substring(i, j));\n            i = j + 1 + length;\n            list.add(str.substring(j + 1, i));\n        }\n        return list;\n    }\n}\n","csharp":"public class Solution {\n\n    public string Encode(List<string> strs) {\n        return string.Concat(strs.SelectMany(s=>  $\"{s.Length}#{s}\"));\n    }\n\n    public List<string> Decode(string s) {\n        var res = new List<string>();\n        \n        var i = 0;\n        while (i < s.Length) {\n            var j = i;\n            while (s[j] != '#') {\n                ++j;\n            }\n\n            int.TryParse(s.Substring(i, j-i), out var len);\n            j++;\n            res.Add(s.Substring(j, len));\n            i = j + len;\n        }\n\n        return res;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n\n    def encode(self, strs: List[str]) -> str:\n\n    def decode(self, s: str) -> List[str]:\n","javascript":"class Solution {\n    /**\n     * @param {string[]} strs\n     * @returns {string}\n     */\n    encode(strs) {}\n\n    /**\n     * @param {string} str\n     * @returns {string[]}\n     */\n    decode(str) {}\n}\n","cpp":"class Solution {\npublic:\n\n    string encode(vector<string>& strs) {\n\n    }\n\n    vector<string> decode(string s) {\n\n    }\n};\n","java":"class Solution {\n\n    public String encode(List<String> strs) {\n\n    }\n\n    public List<String> decode(String str) {\n\n    }\n}\n","csharp":"public class Solution {\n\n    public string Encode(IList<string> strs) {\n        \n    }\n\n    public List<string> Decode(string s) {\n\n   }\n}\n"},"videoUrl":"https://www.youtube.com/embed/B1k_sxOSgv8","embedding":[0.006312698,-0.015190257,-0.02357578,-0.012258987,0.0132954,-0.014216656,-0.026486112,-0.020089664,0.003373577,0.02455985,0.014091031,-0.015807917,-0.016676828,-0.038671818,0.021209827,0.006150431,0.008741464,0.025857983,-0.0063336357,0.04999908,0.015085569,0.009720298,0.024832038,-0.0028841596,0.04043058,0.026925802,-0.019827943,0.05443786,-0.0034625619,0.0018987821,-0.05883476,-0.010463584,0.00037033448,-0.014509783,0.04610468,-0.02349203,-0.00029083688,-0.013023211,0.033353657,0.012206643,0.056782875,-0.032034587,-0.031678647,-0.0068989517,0.016163856,0.03670368,-0.012709146,0.009291077,0.03144833,0.021754205,-0.017304959,0.02330359,0.031532083,-0.01835184,-0.008458806,-0.009285842,-0.03605461,0.055191614,-0.021921707,0.03157396,0.08412743,-0.028391438,-0.013044149,-0.003310764,0.019974507,0.022591712,0.02118889,-0.015567134,-0.015933543,-0.0107724145,-0.023073277,0.018425122,0.020497948,0.029857071,-0.018142464,0.0051218695,-0.0359918,0.023240779,0.042084653,-0.054395985,0.018205276,-0.025208917,0.027260805,-0.012740552,0.01214383,0.06993171,-0.035614923,0.000840777,-0.012991805,-0.025543919,-0.03936276,-0.015609009,-0.06117978,0.008207554,0.024832038,-0.035928987,0.023806095,0.033479284,0.0037059619,0.009599907,0.02755393,-0.025187979,-0.010646789,0.029270818,0.008898497,-0.01063632,0.049622204,0.017692305,-0.03360491,0.00041024684,-0.020665448,0.026737364,0.027114242,-0.020592168,0.044890296,-0.018718248,-0.05808101,-0.009908738,0.005930586,0.0051192525,0.00015474223,-0.044806547,-0.00041482697,-0.013693215,-0.070182964,0.019587161,0.007851615,-0.0719836,0.013557121,-0.05937914,-0.017681835,-0.049496576,0.010573507,-0.0028553703,-0.0149180675,-0.014583065,-0.024832038,-0.011369137,-0.013379151,0.07763676,0.03821119,-0.04317341,-0.032076463,-0.010400772,0.037436496,-0.012342738,-0.060677275,0.0050407364,-0.037457436,0.01525307,-0.01701183,-0.01303368,-0.035049606,0.0569085,-0.030987704,-0.0494547,-0.015797447,-0.0039022523,0.03990714,0.021105139,0.011233043,0.0069565303,-0.02127264,-0.013431495,-0.017503865,-0.0032217791,0.057871632,-0.012436957,-0.011369137,-0.03006645,-0.013557121,-0.040995896,-0.01781793,0.028035497,-0.021147015,0.012730084,-0.02606736,-0.08818933,-0.062268537,0.023806095,-0.029124254,0.03687118,-0.044094667,-0.04114246,0.02109467,0.017692305,0.010133817,-0.021230765,-0.01480291,0.02083295,0.0053548007,0.029459257,0.05418661,-0.018194808,-0.023177965,0.0033029125,-0.009898269,-0.04013745,-0.020623574,0.03350022,-0.013557121,0.041624025,-0.02384797,0.011222574,0.018550748,-0.09254436,-0.055652242,-0.0004046853,0.01214383,0.010238505,0.027951747,-0.032913968,0.047277186,-0.03687118,0.02516704,-0.0004138455,0.00096247706,0.012771959,-0.0055798804,-0.033290844,-0.0070193433,0.030045511,-0.00027595152,0.03050614,0.016017294,0.0148971295,-0.03467273,0.024015471,0.048156567,-0.025104228,0.016373234,0.0053103087,0.0018425122,-0.002389508,-0.016299952,-0.022298584,-0.040702768,0.02047701,0.0052108546,-0.0034206866,0.0148866605,-0.006119025,0.033918973,0.021607643,0.0127928965,0.01676058,-0.029898947,0.01258352,0.008568728,0.032955844,0.026486112,0.03326991,-0.033814285,-0.032662716,-0.02412016,0.036724616,-0.007066453,-0.043047786,-0.019157939,0.0050564394,-0.02589986,-0.015116975,-0.018718248,-0.08563494,0.0004112283,-0.0025386887,0.004930814,0.008987481,0.008443102,-0.006092853,0.019974507,-0.036578055,0.00022131737,-0.0189695,0.007841146,-0.023638593,0.04158215,0.009312015,-0.0123218,0.01995357,-0.03180427,-0.015294945,0.039132446,-0.031511147,-0.03174146,0.029438319,0.026988616,-0.02047701,-0.045183424,-0.04493217,-0.0041849106,0.003132794,-0.030694578,0.03919526,-0.037666813,0.010128583,0.015807917,0.01587073,0.03431679,-0.039048694,0.025795171,-0.0070873904,0.004928197,-0.004143035,-0.08818933,-0.004768547,-0.034400538,-0.043927167,0.021523893,0.0043759663,0.049789704,0.055359114,-0.008526853,-0.01143195,-0.033751473,-0.06197541,0.005380973,-0.018069182,-0.007631769,-0.031134268,-0.011725077,0.05699225,0.046146553,-0.057411004,0.026025483,0.010631085,-0.0053548007,0.014970412,0.038001813,-0.0015559283,-0.019189345,-0.022905776,0.00014607274,0.02801456,-0.045267172,-0.010400772,0.001290282,-0.007851615,0.010971323,-0.011766952,0.023973595,-0.023240779,0.013347744,0.018027306,-0.09388437,0.044471543,0.039132446,0.011117886,-0.011002729,-0.01657214,0.0017024917,0.046816558,-0.032223023,-0.026213923,0.021628581,0.0056845685,-0.021502955,0.005857304,-0.019911693,-0.021586705,0.026988616,0.027114242,0.0022507962,0.005506599,-0.032306775,0.043047786,0.0056008184,-0.006736685,0.007511378,-0.026109235,-0.030464264,-0.0059724613,0.04350841,0.0067576226,0.028517064,-0.0040461984,-0.0063859797,0.012604458,-0.0072548916,-0.004077605,-0.028223936,0.0034285383,-0.015766041,0.0019341144,-0.0042529576,0.058039133,0.03232771,-0.019660443,-0.013253525,-0.041289024,0.039425574,-0.009081701,0.026004547,0.008149976,0.051590342,0.016498858,0.04164496,0.024894852,-0.05406098,0.026925802,0.01932544,-0.0077940356,0.015462446,-0.0036640866,-0.029836135,-0.017441053,-0.023115152,0.021691393,0.012405551,0.045895305,-0.010856166,-0.01879153,0.0207492,-0.018801998,-0.0008119878,0.020906232,-0.016645422,0.008631541,0.006673872,0.003363108,-0.0037504544,-0.032893028,0.011379606,-0.011138824,-0.005163745,0.011379606,-0.0019157939,-0.05983977,-0.009898269,-0.0019694467,-0.0030830672,0.026925802,-0.030631764,0.00007397693,-0.008186617,0.035573047,-0.016362764,0.07675738,0.03925807,-0.016373234,-0.02721893,-0.0014329196,-0.039404634,0.00838029,-0.01931497,-0.03467273,0.023806095,0.08136366,0.02872644,0.009154982,0.051087838,-0.054395985,-0.0064697303,-0.0028422843,0.007207782,-0.0004557208,-0.009924441,0.0056322245,0.007055984,-0.042964034,-0.006249885,-0.0062446506,-0.024978602,0.003808033,0.026192985,-0.051129714,-0.05196722,-0.013525714,0.024769226,-0.045057796,-0.00925967,-0.0019629037,-0.01940919,0.03419116,-0.016823392,-0.0019759897,0.05879289,0.05389348,0.013326807,-0.04706781,-0.036745556,-0.035845235,-0.032913968,-0.0033159985,-0.07508237,0.048617195,0.022968588,-0.069177955,-0.005569412,-0.007935365,-0.010170458,0.0030176372,0.00053587265,-0.0068727797,0.01006577,-0.016980425,-0.03448429,-0.012447426,-0.0017836251,-0.020340916,-0.018152932,-0.008003412,-0.009055529,-0.013630402,0.06331542,0.02173327,-0.00700364,0.000840777,-0.0050381194,0.051925343,-0.005242261,-0.09924441,0.018676374,-0.036222115,-0.032599904,-0.021230765,-0.029919885,-0.016519796,-0.05179972,-0.010741008,-0.003962448,-0.056741,0.050543457,0.024099221,0.03909057,-0.0072130165,-0.03429585,0.0021199358,-0.016456984,-0.022926714,-0.023743281,-0.012478832,0.0061661345,0.061137903,0.0041613556,0.012740552,0.00050479337,0.008516384,0.015263538,-0.021063264,-0.024015471,0.025418293,0.008432634,0.015818385,-0.015001818,-0.016907142,0.0029679101,0.044429667,-0.037645873,-0.01392353,0.018676374,-0.019911693,0.016247608,-0.07177422,0.014939005,-0.03050614,-0.011693671,0.013693215,0.012719615,0.042168405,-0.03331178,-0.03075739,0.029459257,0.004433545,-0.004064519,0.012667271,0.003028106,0.029898947,0.014614471,-0.029710509,-0.008244195,-0.036201175,0.016802454,-0.007678879,0.00007806631,-0.054856613,-0.023177965,-0.022947652,-0.011034136,0.011253981,-0.0162162,-0.0074799713,-0.012258987,-0.02897769,-0.021209827,-0.014761035,-0.0024902704,0.003554164,0.0008839609,-0.046774685,0.01887528,0.034253977,-0.0025347627,0.0076631755,-0.032893028,-0.010898041,-0.003933659,-0.028789252,0.0027114241,0.0108038215,0.0319299,-0.012101955,-0.008218023,0.012101955,-0.014823847,0.0008662948,0.009411468,0.003452093,-0.0013910444,0.033060532,0.020330446,0.002102924,-0.02589986,-0.007998178,0.019922163,0.021796081,-0.02039326,0.030694578,0.027239867,-0.010552569,0.04059808,0.017681835,0.025711419,0.005137573,0.0107828835,0.03362585,-0.045141548,0.0013622551,-0.022842962,0.04438779,-0.032893028,0.005506599,0.0027009554,-0.015797447,-0.011253981,0.0055118334,-0.0015677057,-0.028914878,0.037080556,-0.03331178,0.021502955,-0.043257162,0.034253977,0.013127899,-0.016456984,-0.023659531,0.018309964,-0.00075833505,0.012416019,-0.01569276,0.023827033,0.027972685,0.024832038,0.016121982,0.01613245,0.015472915,-0.042670906,-0.012269456,-0.031532083,-0.014132906,-0.01303368,-0.023429217,-0.007710285,0.0050904634,0.018770592,-0.038713694,0.022801088,-0.019995444,0.019964037,-0.01436322,-0.019608099,0.0053914418,0.05745288,-0.016781516,0.0071763755,-0.016624484,0.036138363,-0.019189345,-0.03821119,-0.00048418288,-0.020759668,0.01932544,-0.023387343,0.013421026,0.0042372546,0.0066634035,-0.02305234,0.0067942636,-0.04468092,0.007197313,-0.026758302,-0.033835225,-0.037080556,-0.01188211,0.0606354,-0.019765131,0.022654524,0.033730537,0.025774233,-0.028349562,0.020592168,-0.038336817,0.0014080561,0.0007230028,-0.027156116,-0.033395533,0.0053390977,0.010102411,-0.018906686,0.002685252,0.010468819,0.048617195,-0.02897769,0.027156116,-0.045602176,0.0017038003,0.015054162,0.0056583965,0.025585793,-0.029857071,0.010714836,0.020142008,-0.019524347,-0.019262627,-0.020989982,-0.0034992027,0.010583976,-0.0007688039,-0.015860261,0.010646789,-0.021691393,0.01728402,-0.0021173186,0.009626079,0.025837045,-0.039111506,-0.020152478,0.01657214,-0.004627218,-0.040032763,-0.020445604,0.00080151897,-0.026842052,0.02225671,0.0037740092,0.04013745,-0.029438319,0.037603997,-0.07679926,0.023743281,-0.038190253,0.0032113104,0.02242421,-0.0041456525,0.0019733724,0.03234865,0.01675011,-0.0170223,-0.011044604,-0.0011502615,-0.01869731,0.029312693,0.003232248,-0.0354893,0.006092853,0.032599904,-0.051297214,0.014049156,-0.016080106,0.013253525,-0.018037776,-0.023429217,-0.026465174,-0.009589438,-0.013787434,-0.033939913,-0.030924892,-0.011463357,0.0041587385,-0.02784706,-0.017210739,0.018299496,-0.00797724,0.008898497,0.010960854,0.026444238,-0.0049648373,-0.03360491,0.019283565,-0.06055165,0.009469047,0.0030752155,0.030338638,-0.031846147,0.031134268,-0.015284476,-0.023429217,-0.01117023,0.017723711,0.0024968134,0.0035934222,-0.00010427925,0.009207326,-0.034170225,0.010133817,-0.025753295,-0.013640871,0.015190257,-0.025837045,0.0057316786,0.016781516,0.06490668,-0.022884838,0.022968588,-0.032955844,-0.025313605,-0.04363404,0.044555295,0.003564633,0.03787619,-0.023931721,0.048617195,-0.0023868908,0.0030752155,0.021775143,-0.008568728,0.005548474,-0.01347337,0.05745288,-0.0044937404,-0.017388709,0.031971775,-0.021565767,0.018330902,0.021837957,0.044010915,0.001527139,0.028203,0.004818274,0.009683657,-0.008579197,-0.008212789,0.0057997257,-0.049538452,-0.0074433303,-0.0042922157,-0.027135178,-0.017378239,0.026402362,-0.027051428,-0.020602636,0.00031357384,0.00025174237,-0.005490896,-0.03768775,0.011306325,-0.0054071452,0.015985887,-0.02012107,0.030883016,0.047193438,0.04317341,0.00023211335,-0.019241689,-0.015766041,-0.0032086931,0.025397355,0.019838411,-0.002044037,-0.0010881029,0.0303177,0.03180427,-0.007144969,0.03366772,0.0028213467,0.005216089,0.0108142905,0.01809012,0.0226964,-0.0066372314,0.021502955,0.015012287,-0.024811102,0.020885294,0.023198903,-0.04084933,0.042231217,0.016121982,-0.009154982,-0.00633887,0.027093304,0.017336365,-0.006684341,0.012206643,0.005268433,0.019000906,-0.000047068792,-0.0039676824,0.045267172,0.0053966762,0.0128243035,0.0055275364,0.020948106,-0.03571961,0.042796534,-0.016593078,-0.01462494,-0.016477922,-0.0018726101,0.021586705,-0.020110602,-0.05033408,-0.013913061,0.029480195,0.062687285,-0.002000853,0.024978602,-0.0320974,0.028412376,0.016027762,0.031699583,-0.01613245,0.023177965,-0.0041587385,0.023680469,-0.008422165,0.002988848,-0.0071397345,0.042419653,-0.0007504835,0.017304959,-0.0079406,0.016624484,-0.041540273,-0.007474737,-0.009170686,-0.01683386,0.0051428075,-0.018812468,-0.014949474,-0.039572135,-0.029228942,-0.014698222,-0.018236684,0.013316338,-0.04585343,-0.011452888,-0.03360491,0.0081081,-0.004781633,0.012290394,0.03927901,0.009997722,-0.0012915905,-0.026716426,-0.011044604,-0.027512057,-0.011672733,0.03752025,0.024245786,-0.019964037,-0.03676649,0.013693215,-0.010044832,-0.017388709,0.0107933525,-0.011923985,-0.03990714,-0.016268546,-0.011285387,0.0032741232,-0.006119025,-0.04066089,0.024852976,0.014279469,0.028558938,0.0064173862,0.00043674605,0.027784245,0.017179333,0.024099221,-0.017001363,0.040912144,0.00008595882,-0.013253525,-0.0033709598,0.022152022,-0.006710513,0.010400772,-0.008778105,0.0324324,-0.01454119,-0.010013426,0.0097255325,-0.014834316,-0.010960854,-0.009322483,0.017514335,-0.018048244,0.025292667,-0.03366772,-0.03326991,0.026213923,0.00036771726,0.008929903,-0.0027140414,0.021963583,-0.0038315877,-0.0381065,0.025187979,-0.016059168,-0.039676823,0.013724621,-0.0066162935,0.00020185192,0.02357578,0.03262084,-0.00554324,0.016069638,-0.006668638,-0.018498404,0.005137573,-0.0010095867,0.017472459,-0.003525375,-0.011034136,-0.014091031,0.020728262,-0.013567589,0.044094667,-0.017231677,0.038357753,-0.014635409,-0.0048287427,0.0048967903,0.018948562,0.031134268,-0.011212105,-0.0058101946,0.013808372,-0.045183424,-0.025941733,-0.007888255,-0.02376422,-0.008254664,0.013284931,-0.003488734,0.0016449132,-0.001540225,-0.033709597,-0.0032531854,0.02552298,-0.019419659,-0.012740552,0.009338187,0.01032749,0.037959937,0.028035497,0.017357303,0.056406,0.015975418,0.0020191735,0.005517068,-0.029710509,0.019377785,-0.019116065,-0.04635593,-0.012279925,-0.031678647,0.010442647,-0.009720298,0.015912605,-0.010662492,-0.023408279,-0.021136547,0.014405095,-0.048868448,0.0067314506,-0.008134273,-0.01701183,0.029836135,-0.026925802,-0.034965854,0.0087466985,-0.0037216651,0.017933087,0.005268433,-0.005218706,-0.041896213,0.026548926,0.0027192757,-0.023659531,-0.0032610372,-0.0038813148,-0.047109686,-0.017168863,0.014614471,0.019587161,-0.015849791,0.0014211421,0.011065542,-0.025460169,0.033730537,-0.026842052,-0.03278834,0.014300407,-0.033542097,0.0160487,-0.0074380958,0.00314588,0.030087385,0.022822026,-0.0138711855,0.028391438,-0.017137457,-0.016530266,-0.016561672,-0.015378695,-0.005226558,0.03234865,0.033039592,0.025229855,0.012541645,0.048449695,-0.038504317,-0.019492941,0.023785157,0.019126533,-0.0073805177,0.011034136,0.021482017,-0.050752833,-0.030129261,-0.0075480184,0.010547335,0.0062027755,0.008966544,-0.02428766,-0.01462494,0.012395082,0.015944012,-0.015734635,-0.00961561,-0.00091078726,0.019932631,0.016331358,0.015137913,0.05096221,-0.00802435,-0.0053757387,-0.01684433,-0.026255798,0.008631541,-0.020403728,0.03829494,-0.014509783,-0.040995896,0.00069683074,0.013159306,0.024015471,-0.013693215,-0.013797903,0.046774685,0.01968138,0.03402366,0.028496126,0.010175692,-0.043592162,0.023785157,-0.011913517,-0.019649973,-0.02330359,0.014028218,-0.022361398,0.022822026,0.0019668294,-0.0138711855,0.008704823,0.0012209261,0.034609918,-0.014132906,-0.017786523,-0.036452428,-0.023345467,-0.0015415336,-0.01932544,-0.01870778,-0.060258523,0.028789252,0.00060490146,0.058625385,-0.008060991,0.0030124027,-0.010531632,-0.0033421705,-0.01675011,-0.017420115,0.00058167375,-0.025292667,-0.014289938,-0.017388709,-0.00016733752,-0.0680892,-0.004258192,-0.06101228,-0.009160217,-0.010971323,-0.01570323,0.033939913,-0.0028187295,0.0015690143,-0.0016318272,-0.013818841,-0.018498404,-0.0019341144,-0.038797442,0.0031118565,0.012300862,-0.005035502,-0.033186156,0.025627669,0.0073334076,-0.0019262627,-0.019576691,-0.011337731,-0.025125166,0.015274007,0.013441964,-0.020780606,-0.0128557095,-0.0005031576,-0.011944923,-0.005820663,0.013410557,0.023073277,0.008558259,-0.007401455,0.020005913,0.034756478,0.005134956,0.010950385,-0.009584204,-0.023010464,0.014562127,0.04807282,0.015200726,-0.033228032,0.060970403,0.0059986333,-0.010709601,0.045099672,-0.015567134,0.017681835,-0.06854983,0.0067837946,-0.013504776,0.021858893,0.02030951,-0.028035497,-0.007605597,-0.04493217,-0.036682744,0.015839323,-0.007500909,0.01214383,0.00017715205,-0.030087385,0.040032763,-0.011180699,0.0023947423,-0.0059986333,-0.001431611,0.00066182564,-0.01959763,0.04438779,0.020874824,-0.010489757,0.02261265,0.00041417265,-0.03270459,0.0060248054,-0.0012811217,-0.0026041188,0.0032243964,0.009610376,-0.015546196,0.020948106,-0.026004547,0.0008872324,-0.0011476442,0.00017028188,0.017838867,0.023261717,0.0148866605,0.04252434,-0.025208917,-0.0052108546,-0.00065855414,-0.051004086,-0.009955847,-0.020487478,0.012625396,-0.0039703,0.006851842,0.02516704,0.015839323,-0.00032158903,-0.00416659,0.018247152,0.0058782417,0.021482017,0.020801544,0.035238046,0.02933363,-0.033479284,0.011253981,0.014551658,-0.02073873,-0.014687753,0.012939461,-0.009851159,0.02755393,-0.014959943,-0.0014957326,-0.0034782651,-0.011725077,0.032662716,0.01214383,-0.02455985,0.007600363,0.014279469,0.0064592613,-0.029312693,-0.0015127443,-0.0024640984,0.00922303,0.03768775,0.026737364,0.020759668,-0.040284015,-0.031238956,-0.009542328,0.014959943,0.00039421648,-0.015902136,0.0065901214,0.021199359,0.00019841683,-0.008395993,-0.029626759,0.001398896,-0.001379267,-0.019744193,0.025795171,-0.02056076,-0.016676828,0.0062969946,0.041289024,-0.024852976,0.00864201,-0.025837045,0.0014826464,0.013096493,-0.02703049,0.0052344096,-0.008233726,0.0066791065,0.0162162,0.0012281233,-0.0067419196,0.013714153,-0.008469274,-0.005742147,-0.008317477,-0.005611287,0.0027402134,-0.025125166,0.01852981,-0.003886549,0.0021644284,0.03873463,0.019911693,0.008568728,-0.03553117,0.022214834,-0.0070873904,0.0069722333,0.0054647233,-0.010468819,0.0027114241,0.012520707,0.023240779,-0.020518886,0.010139051,0.0059044138,-0.014729628,0.024371412,0.046942186,0.015169319,-0.007275829,-0.020613104,0.04334091,0.026632676,-0.0007648781,0.034903042,-0.012248518,-0.0049622203,0.014258532,0.03216021,0.03636868,0.011662264,-0.024832038,-0.021586705,-0.0046717105,-0.027407369,-0.044722795,0.026883928,-0.020236228,-0.024413286,-0.04195903,-0.03555211,0.014195719,-0.0038132675,-0.03448429,0.0118402345,-0.019670911,0.017116519,-0.008652479,-0.056782875,-0.08701682,-0.014562127,0.0138502475,-0.0004158084,-0.021126077,0.049370952,0.0066005904,0.019576691,0.0398862,-0.028684564,0.01373509,0.009034591,-0.0045408504,0.0027532994,0.018665904,0.007144969,0.017629491,0.009626079,-0.0017181949,0.0324324,0.03511242,-0.0022704252,0.0010135125,0.021293579,-0.012730084,0.041917153,-0.009170686,0.0021343306,-0.013190712,-0.0016030379,0.010296084,0.01614292,0.025208917,-0.0017299723,0.0071606725,-0.01462494,-0.009966316,0.026444238,0.011128355,0.03839963,-0.012593989,0.007092625,-0.053767856,-0.013274463,-0.009285842,-0.04246153,0.014405095,-0.000705991,-0.0035855705,0.028705502,0.024099221,0.011662264,0.02615111,0.00020234265,0.03553117,0.026716426,0.010275146,-0.01986982,0.018770592,-0.0019485089,0.02606736,-0.0017653046,0.023512967,0.04484842,0.016959487,-0.036619928,0.0418334,0.015085569,-0.014227125,0.028768314,0.004140418,-0.009704595,0.017974962,0.034944918,0.030799266,-0.025816107,-0.0013648723,-0.01940919,0.01569276,0.0393837,0.02889394,0.0041508866,-0.007898724,-0.059086014,-0.007872552,-0.0028030262,0.009861628,0.038483378,0.007553253,0.02543923,-0.0021395648,0.025397355,0.026109235,0.021628581,-0.012447426,-0.00797724,0.014656346,0.0043288567,-0.00055844605,-0.010604913,-0.016446514,0.0025295285,0.005857304,0.015462446,-0.025690483,-0.02242421,-0.006317932]},{"id":"count-connected-components","name":"Count Connected Components","description":"There is an undirected graph with `n` nodes. There is also an `edges` array, where `edges[i] = [a, b]` means that there is an edge between node `a` and node `b` in the graph.\n\nThe nodes are numbered from `0` to `n - 1`.\n\nReturn the total number of connected components in that graph.\n\n**Example 1:**\n\n```java\nInput:\nn=3\nedges=[[0,1], [0,2]]\n\nOutput:\n1\n```\n\n**Example 2:**\n\n```java\nInput:\nn=6\nedges=[[0,1], [1,2], [2,3], [4,5]]\n\nOutput:\n2\n```\n\n**Constraints:**\n* `1 <= n <= 100`\n* `0 <= edges.length <= n * (n - 1) / 2`\n","difficulty":"Medium","concepts":["Union-Find"],"solutions":{"python":"class UnionFind:\n\n    def __init__(self):\n        self.f = {}\n\n    def findParent(self, x: int) -> int:\n        y = self.f.get(x, x)\n        if x != y:\n            y = self.f[x] = self.findParent(y)\n        return y\n\n    def union(self, x: int, y: int):\n\n        self.f[self.findParent(x)] = self.findParent(y)\n\nclass Solution:\n    def countComponents(self, n: int, edges: List[List[int]]) -> int:\n        dsu = UnionFind()\n        for a, b in edges:\n            dsu.union(a, b)\n        return len(set(dsu.findParent(x) for x in range(n)))\n    ","javascript":"class Solution {\n    constructor() {\n        this.parent = [];\n        this.rank = [];\n    }\n\n    /**\n     * @param {number} n\n     * @param {number[][]} edges\n     * @returns {number}\n     */\n    countComponents(n, edges) {\n        this.parent = new Array(n);\n        this.rank = new Array(n);\n\n        for (let i = 0; i < n; i++) {\n            this.parent[i] = i;\n            this.rank[i] = 1;\n        }\n\n        let result = n;\n        for (let i = 0; i < edges.length; i++) {\n            if (this.union(edges[i][0], edges[i][1]) === 1) {\n                result--;\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @param {number} node\n     * @returns {number}\n     */\n    find(node) {\n        let result = node;\n\n        while (this.parent[result] !== result) {\n            this.parent[result] = this.parent[this.parent[result]];\n            result = this.parent[result];\n        }\n\n        return result;\n    }\n\n    /**\n     * @param {number} n1\n     * @param {number} n2\n     * @returns {number}\n     */\n    union(n1, n2) {\n        let p1 = this.find(n1);\n        let p2 = this.find(n2);\n\n        if (p1 === p2) {\n            return 0;\n        }\n\n        if (this.rank[p2] > this.rank[p1]) {\n            this.parent[p1] = p2;\n            this.rank[p2] += this.rank[p1];\n        } else {\n            this.parent[p2] = p1;\n            this.rank[p1] += this.rank[p2];\n        }\n\n        return 1;\n    }\n}\n","cpp":"class Solution {\npublic:\n    int countComponents(int n, vector<vector<int>>& edges) {\n        vector<int> parents;\n        vector<int> ranks;\n        for (int i = 0; i < n; i++) {\n            parents.push_back(i);\n            ranks.push_back(1);\n        }\n        \n        int result = n;\n        for (int i = 0; i < edges.size(); i++) {\n            int n1 = edges[i][0];\n            int n2 = edges[i][1];\n            result -= doUnion(parents, ranks, n1, n2);\n        }\n        return result;\n    }\n    \nprivate:\n    int doFind(vector<int>& parents, int n) {\n        int p = parents[n];\n        while (p != parents[p]) {\n            parents[p] = parents[parents[p]];\n            p = parents[p];\n        }\n        return p;\n    }\n    \n    int doUnion(vector<int>& parents, vector<int>& ranks, int n1, int n2) {\n        int p1 = doFind(parents, n1);\n        int p2 = doFind(parents, n2);\n        if (p1 == p2) {\n            return 0;\n        }\n        \n        if (ranks[p1] > ranks[p2]) {\n            parents[p2] = p1;\n            ranks[p1] += ranks[p2];\n        } else {\n            parents[p1] = p2;\n            ranks[p2] += ranks[p1];\n        }\n        \n        return 1;\n    }\n};\n","java":"class Solution {\n\n    private int[] parent;\n    private int[] rank;\n\n    public int countComponents(int n, int[][] edges) {\n        parent = new int[n];\n        rank = new int[n];\n\n        for (int i = 0; i < n; i++) {\n            parent[i] = i;\n            rank[i] = 1;\n        }\n\n        int result = n;\n        for (int i = 0; i < edges.length; i++) {\n            if (union(edges[i][0], edges[i][1]) == 1) {\n                result--;\n            }\n        }\n\n        return result;\n    }\n\n    private int find(int node) {\n        int result = node;\n\n        while (parent[result] != result) {\n            parent[result] = parent[parent[result]];\n            result = parent[result];\n        }\n\n        return result;\n    }\n\n    private int union(int n1, int n2) {\n        int p1 = this.find(n1);\n        int p2 = this.find(n2);\n\n        if (p1 == p2) {\n            return 0;\n        }\n\n        if (rank[p2] > rank[p1]) {\n            parent[p1] = p2;\n            rank[p2] += rank[p1];\n        } else {\n            parent[p2] = p1;\n            rank[p1] += rank[p2];\n        }\n\n        return 1;\n    }\n}\n","csharp":"public class Solution {\n\n    private int[] parent;\n    private int[] rank;\n\n    public int CountComponents(int n, int[][] edges) {\n        parent = new int[n];\n        rank = new int[n];\n\n        for (int i = 0; i < n; i++) {\n            parent[i] = i;\n            rank[i] = 1;\n        }\n\n        int result = n;\n        for (int i = 0; i < edges.Length; i++) {\n            if (Union(edges[i][0], edges[i][1]) == 1) {\n                result--;\n            }\n        }\n\n        return result;\n    }\n\n    private int Find(int node) {\n        int result = node;\n\n        while (parent[result] != result) {\n            parent[result] = parent[parent[result]];\n            result = parent[result];\n        }\n\n        return result;\n    }\n\n    private int Union(int n1, int n2) {\n        int p1 = Find(n1);\n        int p2 = Find(n2);\n\n        if (p1 == p2) {\n            return 0;\n        }\n\n        if (rank[p2] > rank[p1]) {\n            parent[p1] = p2;\n            rank[p2] += rank[p1];\n        } else {\n            parent[p2] = p1;\n            rank[p1] += rank[p2];\n        }\n\n        return 1;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def countComponents(self, n: int, edges: List[List[int]]) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number} n\n     * @param {number[][]} edges\n     * @returns {number}\n     */\n    countComponents(n, edges) {}\n}\n","cpp":"class Solution {\npublic:\n    int countComponents(int n, vector<vector<int>>& edges) {\n\n    }\n};\n","java":"class Solution {\n    public int countComponents(int n, int[][] edges) {\n\n    }\n}\n","csharp":"public class Solution {\n    public int CountComponents(int n, int[][] edges) {\n\n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/8f1XPm4WOUc","embedding":[-0.032622237,-0.02232161,0.031654537,-0.01932174,0.013451028,0.023375327,-0.04111649,-0.033245865,-0.025117187,0.03879401,0.03408454,-0.05999739,-0.014762798,-0.034622148,-0.027590197,-0.026106391,-0.0007949923,0.03202011,0.0008931063,0.044342156,0.021310901,0.014827312,0.102361135,-0.012601602,0.054707296,0.024536567,0.017020764,0.00808567,0.043202423,-0.021601211,0.077502005,-0.0016813785,0.00898348,0.050019328,0.0011135268,0.019579792,-0.0052900924,0.03264374,-0.019472271,-0.020493733,0.014257444,-0.002434034,0.0037794055,-0.031310465,-0.030278252,-0.043998085,-0.039632685,0.013160718,0.024300018,0.037009142,0.028256835,0.0057846946,0.0035804894,-0.04053587,-0.047868885,0.0009845002,-0.018773377,0.053288005,-0.00724162,0.022364618,0.03821339,-0.007031952,0.04247127,0.027461171,0.031482503,-0.0039917617,0.018762624,-0.017117534,-0.00704808,-0.06700784,-0.051051542,0.022063555,0.01665519,0.0023238235,-0.0023547362,0.023525858,0.00033499885,0.020644262,-0.011472619,0.029138517,0.042363748,-0.021149617,0.06184677,-0.0025617166,-0.022988247,-0.04726676,0.036880117,-0.0464926,-0.028815951,-0.06188978,-0.031783562,-0.01288116,-0.019375501,0.040062774,0.026321435,0.03268675,0.009010361,0.008725427,-0.0020832426,-0.02097758,-0.016085321,-0.017182048,0.0032471705,0.043955076,0.006962063,0.0043627135,-0.014515498,0.0052363314,-0.035396308,0.039288614,-0.022558158,-0.008849077,0.004134229,0.02673002,0.00028745388,-0.049116142,-0.06950235,0.019429263,-0.0012559937,0.017848685,0.021687228,-0.012666116,0.0171928,0.020848555,-0.007230868,0.018794881,0.018536828,-0.021945281,-0.013838108,-0.010107087,0.024945151,-0.0028251458,0.00023957291,0.037933834,-0.044342156,-0.010230738,-0.00360737,0.019020678,-0.003908432,-0.020343201,0.023203291,-0.011730673,-0.013192974,0.018483067,0.014364966,0.060943585,-0.024837628,0.048212957,-0.0020765224,0.026988072,0.0058438317,-0.01825727,0.010445782,-0.0104511585,0.012214522,-0.027826747,0.017956208,0.01346178,0.07178182,0.0017889007,0.028407365,-0.033632945,-0.021278644,0.0059352256,0.029267544,0.009720007,-0.045503397,-0.025848338,-0.03492321,-0.023525858,0.0152574,-0.02328931,0.028729932,0.011064035,0.072857045,-0.024321523,-0.05677172,-0.035267282,-0.04954623,-0.035267282,-0.0101124635,0.0014784302,-0.06404022,-0.04657862,0.017085278,0.0295471,0.038127374,-0.03683711,-0.010359764,0.017472358,0.019085191,0.027052587,-0.0037471487,0.05152464,-0.0027767608,0.013214479,0.043589503,-0.062405888,0.011171557,-0.039589673,-0.06451332,-0.009134011,-0.00566642,0.023912938,0.010714588,-0.041847643,-0.010246866,0.004290136,0.022644175,-0.019461518,0.018848643,-0.022622671,-0.0098221535,-0.051438622,0.03331038,-0.0075964434,0.006945934,0.00024545303,0.016311118,0.07874926,0.003029438,-0.022794707,0.041051976,0.019214218,0.046406582,0.03180507,-0.017687403,-0.023504354,-0.03221365,0.009569476,-0.008854453,-0.013934878,-0.007381399,-0.0020402337,-0.011150053,-0.015278905,-0.037998345,-0.026579488,-0.01670895,0.0309879,-0.017407844,-0.05191172,-0.019052934,0.038901534,0.025160195,0.024127983,-0.009284542,0.054750305,-0.020332448,0.040406846,-0.018558333,0.01346178,0.024515063,-0.02125714,-0.039009057,-0.003274051,0.005421807,0.002095339,0.06614766,0.00096837187,-0.042363748,0.02974064,-0.0489011,-0.09840432,-0.03879401,-0.008241577,0.007370647,0.039396137,-0.0430949,0.0043654013,0.01665519,-0.025396744,0.011676911,-0.039073568,-0.00013591479,-0.016687445,0.013483284,-0.0030616948,0.03350392,-0.090490684,-0.014644524,0.027633207,0.014300453,0.01133284,0.007273877,-0.027676215,-0.014859568,0.000070561444,-0.01626811,0.039245605,-0.024127983,0.0011934964,0.009881291,-0.00095896365,-0.020988334,-0.012655363,-0.035202768,0.01530041,0.043524988,-0.0042121825,-0.009418945,-0.055567473,0.0013399954,0.044041093,-0.020848555,-0.046621628,0.045073308,0.027375152,-0.020009883,0.024665594,-0.007612572,-0.02348285,-0.029224535,0.0022835028,-0.024429044,-0.006241664,-0.0099189235,0.0000925699,-0.013192974,0.020622758,0.0031584648,0.0021894209,0.065502524,0.010521048,0.04176162,0.015182135,-0.019526033,-0.027052587,0.0003134944,-0.05109455,-0.010128591,-0.0022243655,-0.01419293,0.029805155,-0.00016691141,-0.03354693,0.054019153,0.0003608714,-0.0022539343,0.0062739206,0.0018480378,0.0025294598,0.03225666,0.014117666,-0.0057416856,0.0007392151,-0.016149836,0.054363225,0.045159325,0.016493905,-0.006531974,-0.035202768,0.038772505,0.0026154777,0.033912502,-0.0020859307,-0.036321,0.011107043,-0.0039380006,-0.00017388356,-0.016450897,-0.022257095,-0.0068061557,-0.019386252,0.00753193,0.00045696937,-0.008289962,0.07066359,0.04812694,0.023891434,-0.016601428,0.051567648,0.012730629,-0.0029246039,0.029805155,-0.0162251,0.014397223,0.017665898,-0.027353648,0.05948128,0.0353533,0.021031342,0.030471792,-0.0008084326,0.0037874696,0.03214914,0.012063991,-0.031267457,-0.040406846,-0.029719137,-0.03253622,-0.050664462,0.042836845,0.0015536959,0.01288116,-0.04765384,0.06404022,0.06361014,-0.019450767,0.036966134,0.011354345,-0.027074091,0.015074613,0.011569389,-0.010558681,0.024214,0.0048008664,0.04881508,0.011397353,-0.010515671,-0.004593886,-0.0027391282,0.018246518,-0.007902882,0.05844907,-0.014859568,-0.034170557,-0.006005115,-0.03118144,-0.00077886396,0.013719833,0.036729585,0.05191172,0.015558463,0.0010301971,0.006693257,-0.011461867,-0.0059406017,0.029504092,-0.044299148,0.0021208755,0.050535437,0.00714485,0.040879942,-0.021472184,-0.027246127,0.022149574,0.02997719,0.0140424,0.0055535217,0.003701452,0.0029971814,0.042234723,-0.009945803,-0.012526337,-0.015235896,-0.0006962063,0.017472358,0.0005399631,-0.0064728367,-0.009230781,0.006505093,0.040901445,0.0411595,-0.0016276174,0.017407844,-0.007703966,0.06029845,0.0155477105,-0.010564056,0.010397397,0.1045976,-0.03326737,0.031310465,-0.0052578356,0.03374047,-0.022407627,-0.024235504,0.049030125,-0.0046449592,-0.013633816,-0.0150101,0.018493818,-0.01510687,0.010311379,0.017730411,0.0005288748,0.04077242,-0.006058876,0.017031517,-0.038966045,-0.05991137,0.019536784,0.019956121,-0.007107218,-0.0015348794,0.03466516,0.026708515,0.0056933006,0.010886623,-0.0021585082,0.0009824841,0.052427825,-0.007655581,-0.0038681112,0.005612659,-0.010424278,-0.021128112,-0.007951267,0.0045051803,-0.03219215,0.003325124,-0.053761102,-0.021870015,0.019730324,-0.0037901576,0.0033439405,-0.01142961,-0.010289875,-0.0003558313,0.03288029,0.04735278,0.026364444,0.025117187,-0.019977625,0.005714805,-0.0018466938,-0.0075373063,-0.023805415,-0.0027955773,0.028213827,-0.014171426,-0.008730803,0.01171992,-0.017730411,-0.029224535,-0.012354301,-0.034815688,-0.024235504,0.011343593,-0.007359895,0.003029438,0.011139301,0.017063774,-0.019956121,-0.037525248,0.0464926,-0.03548233,-0.019526033,-0.033826485,0.002099371,0.023719398,-0.006198655,-0.031009404,-0.018988421,0.020902317,0.010349012,0.023310814,-0.0026020373,-0.00016187131,-0.0031127678,-0.043654013,0.0044245385,-0.0032848034,-0.036407016,0.019579792,-0.03380498,0.049761277,-0.019429263,-0.00044688914,-0.01384886,-0.034063034,-0.008284586,0.012504832,0.0023224796,-0.0007909602,-0.005854584,-0.007763103,-0.00086286565,0.004064339,0.0048169945,-0.03543932,-0.00536267,-0.049632248,0.016139083,-0.008005028,-0.0040724035,-0.018590588,-0.055825528,-0.0059406017,-0.012096248,-0.019246474,0.000587676,0.01201023,-0.054535262,-0.025074178,-0.0036772594,0.041417554,0.024773115,0.010284498,-0.0046046386,0.022923734,0.026278427,-0.002727032,-0.016784215,-0.043137908,-0.024859134,0.022493646,0.008295338,0.025289223,-0.0054298714,0.054320216,0.043266933,-0.025590284,-0.021192627,-0.052169774,0.024730107,0.050922517,-0.054535262,0.034557637,-0.013386514,0.006671753,0.021891521,0.0093383035,0.037009142,-0.008703922,0.011289831,0.0017929327,0.024041964,0.0030159978,0.049245168,-0.029719137,-0.020988334,0.039589673,0.036191974,-0.010418901,0.003558985,0.033482414,0.038299408,0.007236244,-0.049847294,0.013934878,-0.024687098,0.0011457835,-0.030579314,0.008048037,-0.0029944933,-0.029418075,0.015655233,0.0049729017,0.008252329,-0.021805502,0.008881334,-0.015816515,-0.008042661,0.035030734,-0.052083757,0.011902708,0.011107043,-0.015859526,0.018182004,0.016794968,0.024773115,0.00090923463,-0.00030778232,-0.017762668,-0.0021827007,-0.017268065,-0.028106304,0.025805328,-0.0037955337,0.004873444,0.028364357,-0.024859134,0.0035966176,-0.014881073,0.019042183,0.02087006,0.02978365,-0.005400303,-0.011289831,0.04053587,-0.006397571,0.0017781485,-0.006913678,-0.018956164,0.021999042,0.044428173,-0.04464322,0.002740472,0.019300235,0.014182178,0.001170648,0.021525946,0.016192844,-0.01326824,-0.031697545,-0.007128722,-0.0152574,-0.006843788,0.01612833,-0.028837455,0.007580315,-0.005217515,0.010187728,-0.01777342,0.0076287,0.02847188,0.0122790355,-0.06141668,0.007859873,0.042965874,0.0060212435,0.01670895,-0.016870234,-0.011010273,-0.028428871,0.052771896,0.0014609579,0.021095857,0.016257357,0.0057255575,-0.0012270971,-0.0004734337,-0.0019353996,0.00714485,0.018859394,-0.010542552,0.038815517,-0.036493037,-0.04881508,0.00888671,-0.014053152,0.007107218,0.016988508,0.0094350735,0.039525162,0.0062309117,0.011934965,0.025654798,-0.018128244,0.006736266,-0.026966568,0.025267718,-0.0065588546,0.02270869,0.0117951855,0.024386035,-0.036987636,-0.024708603,-0.051309597,0.01670895,0.054535262,-0.036299497,-0.003849295,0.041267022,-0.034557637,-0.0054943846,-0.059696328,0.022773203,-0.047309767,0.004384218,-0.012719877,-0.01603156,-0.0022324298,0.01014472,-0.033525422,0.007284629,0.044471182,0.026493471,-0.004534749,-0.009311423,0.0023144155,-0.020708777,0.028127808,0.019579792,-0.0049594617,-0.043783043,-0.00013381474,-0.013106956,0.007026576,-0.025869843,0.018085234,-0.020601254,-0.026859047,-0.028493384,-0.01757988,-0.024859134,-0.016149836,-0.005228267,0.015149878,-0.004730977,0.02924604,-0.02498816,0.01516063,0.029289048,0.016450897,-0.00027989372,0.020816298,-0.04580446,-0.008574896,0.005233643,-0.06773899,0.016880985,0.034600645,0.009526467,0.010370516,-0.043503482,-0.002546932,-0.0010127247,-0.022816211,-0.023719398,-0.001663906,0.012096248,0.0015039669,0.012322044,0.050578445,-0.027783737,0.014752046,0.014924082,0.00065655744,0.06842713,-0.009972684,0.019837847,0.033525422,0.024084974,-0.023697894,0.018805632,0.01903143,0.021300148,-0.04576145,0.01448324,0.013988638,-0.016569171,-0.027074091,0.017375588,0.03724569,0.0012479295,0.015805764,0.0066126157,0.008574896,0.01530041,-0.0022270535,0.015483197,0.031934094,0.025117187,0.001170648,0.0152574,0.028321348,-0.013031691,-0.021396918,-0.012698372,-0.013730586,-0.049417205,-0.025547275,0.020009883,-0.0020093212,-0.03470817,-0.0121822655,-0.040750913,0.02978365,0.004798178,-0.00878994,-0.026880551,-0.03180507,0.029138517,0.011483371,0.007752351,-0.010010317,-0.0119887255,0.029289048,-0.020536741,0.020568997,0.010956513,0.008440493,-0.014590763,-0.014354214,0.016117578,-0.024300018,-0.038234897,-0.016547667,0.03079436,-0.014504746,-0.031547014,-0.012601602,0.022773203,-0.043202423,0.0022861909,0.0036960756,-0.00012869063,0.024644088,-0.018483067,0.0140424,0.02445055,0.009203901,-0.048643045,0.041245516,0.007037328,0.018794881,-0.03647153,0.032127634,-0.01980559,0.03466516,-0.01593479,-0.02154745,-0.0041584214,0.047395788,-0.017300323,0.029030995,0.017558375,-0.021504441,-0.027353648,0.029267544,0.016569171,-0.028815951,-0.03664357,-0.030772854,0.009789896,-0.005026663,-0.052384816,-0.016590675,-0.029912677,-0.0047471053,0.04580446,0.014891825,0.022407627,0.0093383035,-0.0017472358,0.04692269,0.052169774,0.006193279,-0.016827226,-0.018794881,0.0014246692,-0.00028039774,0.00760182,-0.01355855,0.01062857,0.04343897,0.0063115535,0.03898755,0.011999478,0.0026584864,-0.0028762189,-0.03515976,-0.015139126,-0.024945151,0.0040670275,-0.001317819,0.009392064,-0.025633292,-0.0038331666,0.036729585,-0.03492321,0.028149312,0.044815253,0.012773638,-0.011418858,0.026751524,0.045632422,0.024622584,0.011730673,-0.012762886,-0.008144807,-0.029332057,-0.021149617,0.029568605,-0.003472967,0.009134011,-0.0031450244,0.022214087,-0.00224587,0.025117187,-0.019644307,0.009236157,0.0066126157,0.016579924,0.028213827,0.024364531,-0.047868885,0.047180742,0.017149791,0.00022546062,0.014752046,0.018708864,-0.025224708,-0.0031638409,-0.008327595,0.003274051,0.007972771,0.00084068923,0.041632596,-0.022880726,0.027052587,-0.024192495,0.049417205,0.0013715801,0.01970882,0.015827268,0.052427825,0.008634033,0.052513845,0.017848685,-0.07462041,-0.022536654,0.023955947,-0.0020792107,0.027955772,-0.01181669,0.009144763,-0.017063774,-0.016246606,-0.002102059,0.012020982,0.001415261,-0.049374197,0.0032874914,0.0036369385,0.02963312,0.015558463,-0.020665767,0.00085076946,0.016590675,0.011300583,0.013526293,0.015139126,0.024192495,-0.0048868842,-0.03374047,-0.01506386,0.00067940593,-0.015730498,0.0067631467,-0.0024152175,-0.019052934,-0.007526554,0.0055911546,0.020622758,0.0037901576,0.022343114,0.012451071,0.00031534245,-0.0104995435,0.0171928,-0.002104747,0.003653067,0.014321958,-0.015289657,0.006795403,0.027719224,0.0037202681,0.00743516,-0.0049540857,-0.0004784738,0.03202011,-0.00033449486,-0.030385774,0.0261494,0.016332623,0.037804805,-0.047094725,0.03356843,-0.03376197,-0.027224623,0.02367639,-0.0059889867,0.034106042,0.023547363,-0.007177107,-0.006193279,-0.006919054,-0.0012062647,0.019052934,0.01506386,-0.031073917,0.013709081,0.016730456,-0.038858525,-0.005026663,-0.016472401,0.007897506,0.007746975,-0.045503397,0.013322001,0.004497116,-0.0055750264,-0.027095595,0.007849121,0.028622411,-0.008897462,-0.002530804,0.01771966,-0.0076448284,-0.0047094724,0.0068599167,0.026514975,-0.011096291,0.0045535653,-0.04541738,0.014375718,0.014257444,0.049503222,0.007623324,-0.009171644,-0.011139301,0.013977886,0.004846563,0.016397135,0.005421807,0.0053814864,-0.03709516,0.024235504,0.005419119,-0.031009404,-0.026321435,-0.02498816,-0.035396308,0.042772334,-0.018676607,-0.016956251,0.009553348,0.0042740074,0.008918967,0.008725427,-0.025719311,-0.055137385,0.024622584,0.00866629,-0.0014945586,0.0067147617,-0.013106956,-0.009988813,0.017128287,0.04726676,-0.0200959,-0.026988072,-0.0064728367,-0.006354562,0.004300888,0.020203423,-0.03268675,-0.03492321,-0.033138342,0.015870277,0.01471979,0.011160805,0.00724162,-0.034170557,-0.011762929,0.006773899,-0.02363338,-0.020547492,-0.020009883,-0.013128461,0.018676607,-0.0041584214,0.017461605,0.041869145,0.012752133,-0.015246648,0.0011511596,0.034063034,0.030772854,-0.03012772,-0.02212807,0.05457827,-0.019504528,0.0015362235,0.011257575,-0.019934617,-0.029009491,-0.0037740294,-0.001998569,-0.0022055493,0.006445956,0.0010026445,0.0016760023,0.019773332,0.007225492,0.012999434,0.022945238,0.047481805,-0.028127808,0.020106653,0.054062165,0.03257923,0.004306264,0.020106653,0.045933485,-0.006849164,-0.0114081055,0.0024945152,-0.003610058,0.037568256,-0.026170904,-0.0117951855,-0.027590197,-0.033912502,0.008096422,0.063567124,0.013644568,0.040471356,-0.032858785,-0.018407801,0.00818244,-0.010117839,0.0053922385,-0.025633292,0.00458851,0.009569476,-0.015504702,-0.03457914,-0.013096204,0.018601341,-0.0032095378,-0.018343288,-0.006048124,-0.033396397,-0.009590981,-0.025482763,0.025697807,0.027482675,0.00331706,-0.022020547,-0.0027713848,-0.0035858655,-0.015192887,-0.01845081,-0.02885896,-0.0011363752,0.0097253835,0.014569258,0.0054728803,-0.0051771943,-0.01288116,0.003370821,-0.03645003,-0.007865249,-0.01675196,0.0023278557,-0.006822284,-0.009413569,-0.042385254,0.02576232,0.034794185,-0.0052632117,0.018020721,-0.016257357,0.061244648,-0.02193453,-0.008972728,0.011418858,-0.013343506,0.00084270525,-0.03036427,0.020396963,0.004876132,0.01152638,-0.017999217,-0.015859526,-0.0130747,0.0104027735,-0.02363338,-0.0055911546,0.008940471,0.007155603,0.019784085,-0.012676868,0.007849121,-0.00576319,-0.0421487,-0.014504746,0.04606251,-0.022751698,0.004050899,-0.03277277,-0.014698285,0.032708254,-0.053115968,-0.015945543,0.0006568935,0.022429131,0.018246518,0.0105963135,0.002294255,-0.0007425752,0.004400346,-0.00644058,0.02305276,-0.018902402,-0.020934572,0.029955685,0.023783911,-0.03664357,0.002145068,-0.018730368,0.0040132664,-0.0026033814,0.014590763,-0.03645003,0.004333145,-0.000055357134,0.026278427,0.02963312,-0.0065642307,0.026751524,0.023117274,0.0032874914,0.005384174,-0.0015832644,0.003612746,0.00006312729,-0.007816864,0.00017069149,0.0013467156,0.014440232,-0.01413917,0.023590371,-0.006392195,0.06468536,-0.006101885,0.020085147,-0.00615027,0.003513288,-0.052169774,-0.00743516,0.012537089,0.006429828,-0.000018259874,-0.01048879,-0.022773203,-0.010784477,-0.030041704,0.019375501,-0.055825528,0.011074787,0.02692356,-0.025095683,-0.006542726,-0.017665898,-0.024149487,-0.015235896,-0.026192408,-0.05264287,-0.012031735,-0.009198524,-0.03161153,0.036105957,0.008408236,0.014343462,-0.01713904,-0.009881291,-0.0045670057,-0.019095942,0.015719745,0.007908258,0.045245342,0.025998868,-0.023461346,-0.041869145,-0.0029219158,0.011784433,-0.03548233,0.031848077,0.022923734,-0.020257182,0.013311248,0.05148163,-0.025654798,0.005502449,0.016644437,-0.031934094,0.018612094,0.003857359,0.007193235,0.0022781268,0.022214087,0.017751915,0.015085365,0.008284586,0.012020982,-0.054019153,-0.01506386,-0.01670895,-0.03801985,-0.0065588546,-0.03509525,0.037740294,-0.024751611,-0.023267806,0.038686488,-0.010961888,-0.015375675,-0.041439056,-0.019300235,-0.0032848034,0.01835404,-0.008166311,0.025289223,-0.03414905,0.021966785,-0.002201517,-0.024106478,0.003913808,0.01757988,0.0013856924,-0.030643828,0.024364531,0.009682374,0.0057846946,0.048212957,0.023891434,-0.028235331,0.02348285,0.0028923473,-0.00067570986,-0.03171905,0.023074266,0.015913285,-0.015752003,0.016665941,0.03840693,-0.013020939,-0.0055965306,0.022816211,-0.025912851,0.01249408,-0.009257662,0.0014918706,-0.020708777,0.018300278,-0.04490127,-0.005126121,0.012709124,-0.0012311293,-0.055309422,-0.0067631467,0.03393401,-0.006499717,-0.012440319,-0.009123259,-0.012773638,0.04571844,-0.012042487,0.018020721,0.007225492,0.01072534,0.037718788,0.047524814,-0.016386384,-0.023353823,0.017730411,-0.037718788,-0.037353214,0.0003800238,0.013139213,0.017859438,-0.0015590719,0.014461736,0.028901968,-0.00519601,0.016300365,0.003029438,0.031740554,-0.014493993,0.030278252,0.027568692,-0.0020630823,-0.015902534,0.013063948,-0.0039810096,0.014881073,-0.0044164746,0.025934355,-0.011859699,-0.015321914,0.0060750046,0.035847902,0.02125714,0.0154509405,0.013322001,-0.020612007,-0.005811575,0.003274051,-0.018138995,0.026751524,-0.035912417,0.013354258,0.0015442877,-0.016214348,0.01394563,0.0047659217,0.024966655,0.044729237,-0.009789896,0.0044110985,0.00077348785,0.042578794,-0.006596487,-0.01048879,0.03705215,-0.015117622,-0.012354301,0.034557637,-0.012440319,0.014805808,0.0050696717,0.017687403,0.009693126,-0.015719745,-0.030643828,0.02068727,0.017311074,0.027203117,-0.012236027,-0.009510339,-0.005018599,-0.034643654,0.018579837,0.033718962,-0.010478038,0.01438647,0.024579575,-0.031783562,0.009187772,0.008203944,-0.009789896,0.01990236,0.0013124429,0.048212957,0.027848251,0.007526554,-0.027289135,-0.031245952,0.035955425,0.017343331,0.0114081055,-0.0003618794,-0.029482588,0.013515541,-0.0155477105,-0.022644175,0.04072941,0.010031821,-0.02406347,0.030880377]},{"id":"valid-tree","name":"Valid Tree","description":"Given `n` nodes labeled from `0` to `n - 1` and a list of **undirected** edges (each edge is a pair of nodes), write a function to check whether these edges make up a valid tree.\n\n**Example 1:**\n\n```java\nInput:\nn = 5\nedges = [[0, 1], [0, 2], [0, 3], [1, 4]]\n\nOutput:\ntrue\n```\n\n**Example 2:**\n\n```java\nInput:\nn = 5\nedges = [[0, 1], [1, 2], [2, 3], [1, 3], [1, 4]]\n\nOutput:\nfalse\n```\n\n**Note:**\n* You can assume that no duplicate edges will appear in edges. Since all edges are `undirected`, `[0, 1]` is the same as `[1, 0]` and thus will not appear together in edges.\n\n**Constraints:**\n* `1 <= n <= 100`\n* `0 <= edges.length <= n * (n - 1) / 2`\n","difficulty":"Medium","concepts":["Adjacency List"],"solutions":{"python":"class Solution:\n    def validTree(self, n: int, edges: List[List[int]]) -> bool:\n        if not n:\n            return True\n        adj = {i: [] for i in range(n)}\n        for n1, n2 in edges:\n            adj[n1].append(n2)\n            adj[n2].append(n1)\n\n        visit = set()\n\n        def dfs(i: int, prev: int) -> bool:\n            if i in visit:\n                return False\n\n            visit.add(i)\n            for j in adj[i]:\n                if j == prev:\n                    continue\n                if not dfs(j, i):\n                    return False\n            return True\n\n        return dfs(0, -1) and n == len(visit)\n    ","javascript":"class Solution {\n    constructor() {\n        this.adjacencyList = new Map();\n    }\n\n    /**\n     * @param {number} n\n     * @param {number[][]} edges\n     * @returns {boolean}\n     */\n    validTree(n, edges) {\n        this.adjacencyList.clear();\n\n        if (n == 1) return edges.length == 0;\n\n        if (edges.length == 0) return false;\n\n        for (let edge of edges) {\n            let node1 = edge[0];\n            let node2 = edge[1];\n            if (!this.adjacencyList.has(node1))\n                this.adjacencyList.set(node1, []);\n            if (!this.adjacencyList.has(node2))\n                this.adjacencyList.set(node2, []);\n            this.adjacencyList.get(node1).push(node2);\n            this.adjacencyList.get(node2).push(node1);\n        }\n\n        let visited = new Set();\n\n        if (!this.depthFirstSearch(0, -1, visited)) return false;\n\n        return visited.size === n;\n    }\n\n    /**\n     * @param {number} node\n     * @param {number} previous\n     * @param {Set} visited\n     * @returns {boolean}\n     */\n    depthFirstSearch(node, previous, visited) {\n        if (visited.has(node)) return false;\n\n        visited.add(node);\n\n        for (let neighbor of this.adjacencyList.get(node)) {\n            if (neighbor === previous) continue;\n\n            if (!this.depthFirstSearch(neighbor, node, visited)) return false;\n        }\n\n        return true;\n    }\n}\n","cpp":"class Solution {\npublic:\n    bool validTree(int n, vector<vector<int>>& edges) {\n        vector<vector<int>> adj(n);\n        for (int i = 0; i < edges.size(); i++) {\n            vector<int> edge = edges[i];\n            adj[edge[0]].push_back(edge[1]);\n            adj[edge[1]].push_back(edge[0]);\n        }\n        \n        vector<bool> visited(n);\n        if (hasCycle(adj, visited, -1, 0)) {\n            return false;\n        }\n        \n        for (int i = 0; i < visited.size(); i++) {\n            if (!visited[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    \nprivate:\n    bool hasCycle(vector<vector<int>>& adj, vector<bool>& visited, int parent, int child) {\n        if (visited[child]) {\n            return true;\n        }\n        visited[child] = true;\n    \n        for (int i = 0; i < adj[child].size(); i++) {\n            int curr = adj[child][i];\n            if (curr != parent && hasCycle(adj, visited, child, curr)) {\n                return true;\n            }\n        }\n        return false;\n    }\n};\n","java":"class Solution {\n\n    private Map<Integer, List<Integer>> adjacencyList = new HashMap<>();\n\n    public boolean validTree(int n, int[][] edges) {\n        adjacencyList.clear();  \n    \n        if (n == 1) return edges.length == 0;\n    \n        if (edges.length == 0) return false;\n    \n        for (int[] edge : edges) {\n            int node1 = edge[0];\n            int node2 = edge[1];\n            adjacencyList.putIfAbsent(node1, new ArrayList<>());\n            adjacencyList.putIfAbsent(node2, new ArrayList<>());\n            adjacencyList.get(node1).add(node2);\n            adjacencyList.get(node2).add(node1);\n        }\n    \n        Set<Integer> visited = new HashSet<>();\n    \n        if (!depthFirstSearch(edges[0][0], -1, visited)) return false;\n    \n        return visited.size() == n;\n    }\n\n    private boolean depthFirstSearch(int node, int previous, Set<Integer> visited) {\n        if (visited.contains(node)) return false;\n\n        visited.add(node);\n\n        for (int neighbor : adjacencyList.get(node)) {\n            if (neighbor == previous) continue;\n\n            if (!depthFirstSearch(neighbor, node, visited)) return false;\n        }\n\n        return true;\n    }\n}\n","csharp":"public class Solution {\n   \n    public bool ValidTree(int n, int[][] edges) {\n            if (n == 0) return true;\n\n            var adj = new HashSet<int>[n];\n\n            for (int i = 0; i < n; i++) {\n                adj[i] = new HashSet<int>();\n            }\n            foreach (var edge in edges) {\n                var e1 = edge[0];\n                var e2 = edge[1];\n                adj[e1].Add(e2); adj[e2].Add(e1);\n            }\n            var visited = new bool[n];\n\n            var res = DfsValidTree(adj, 0, visited);\n\n            if (visited.Any(c => !c)) return false;\n            return res;\n    }\n\n    private bool DfsValidTree(HashSet<int>[] adj, int current, bool[] visited) {\n        if (visited[current]) return false;\n        visited[current] = true;\n\n        var nextLevel = adj[current];\n        foreach (var level in nextLevel) {\n            adj[level].Remove(current);\n            if (!DfsValidTree(adj, level, visited)) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def validTree(self, n: int, edges: List[List[int]]) -> bool:\n        ","javascript":"class Solution {\n    /**\n     * @param {number} n\n     * @param {number[][]} edges\n     * @returns {boolean}\n     */\n    validTree(n, edges) {}\n}\n","cpp":"class Solution {\npublic:\n    bool validTree(int n, vector<vector<int>>& edges) {\n\n    }\n};\n","java":"class Solution {\n    public boolean validTree(int n, int[][] edges) {\n\n    }\n}\n","csharp":"public class Solution {\n    public bool ValidTree(int n, int[][] edges) {\n\n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/bXsUuownnoQ","embedding":[-0.004895152,-0.03809763,0.027227787,-0.029674035,0.013475628,0.03163103,-0.0074450984,-0.025568595,-0.027546864,0.08410834,0.034375083,-0.038416706,-0.046117067,-0.018197948,-0.008795852,-0.010486953,0.026887441,-0.012677939,0.019899683,0.05628494,0.044628046,0.06198576,0.10252964,-0.030269641,0.09087274,-0.012358863,0.009987067,-0.012178053,0.04394735,-0.0060411654,0.020995177,0.003150872,-0.0071047507,0.041288387,-0.0023265933,-0.012433314,0.007599318,0.018899914,-0.0059454427,-0.021175986,-0.001005753,0.0014876901,-0.024738997,0.004187868,-0.0007013017,-0.0075089135,-0.0009465911,0.030312186,-0.0028637038,0.0021497721,-0.034396354,0.035651386,0.040352434,0.02650455,-0.09282974,-0.0028929524,-0.03424745,0.040543877,-0.009290419,0.03309878,0.042734865,0.0034539937,-0.0000017137852,0.021612057,-0.002163067,-0.010582675,-0.016730199,-0.02614293,-0.009503136,-0.037416935,-0.05037141,0.020920726,-0.0054561934,-0.05390251,0.012050423,0.031418316,0.022994718,-0.0035337626,0.041883994,-0.024845356,0.008514002,-0.015613435,0.028333917,-0.037672196,-0.007897122,-0.022548012,-0.008194926,-0.015996326,-0.0756422,-0.04581926,0.04518111,0.021697143,0.026547093,0.02788721,0.024568824,0.029971838,0.057944138,-0.004187868,-0.015421989,-0.010332732,-0.0068388544,0.012039787,0.009625449,0.032056466,0.016102685,0.04041625,-0.0008076602,0.020686736,-0.073983006,0.021239802,-0.021569513,-0.04281995,0.027312875,0.01029019,0.05003106,-0.012794933,-0.042862494,-0.047478456,0.04632978,-0.017719334,0.040139716,-0.020814367,-0.022867087,-0.005865674,-0.03399219,0.025866399,-0.009434003,-0.009891345,0.0076950407,0.039629195,-0.0077003585,0.05836957,0.045010936,0.04243706,-0.07432335,0.00035929246,-0.005030759,0.012986379,0.03720422,0.016081411,0.005166366,0.005913535,-0.023101076,0.012763025,0.046372324,0.010678398,0.020240031,0.040905498,-0.012560944,0.04281995,0.011465452,0.024313563,-0.0006428045,0.0072004735,-0.029822936,-0.030780163,0.012603488,0.001937055,0.060879633,-0.029652763,-0.003945902,-0.04354319,-0.0064878715,0.021122808,0.023909401,0.051222276,-0.019846505,-0.0053019733,-0.016336672,0.011901521,0.029354958,-0.019803962,0.027121428,0.02624929,0.059177894,0.010923022,-0.0237605,-0.024483737,0.0063123796,0.00075780466,-0.02863172,0.012975743,-0.053689793,-0.04539383,0.017230084,-0.01554962,-0.00047163368,-0.013815975,-0.010912387,0.00024329517,-0.021931132,0.032758433,-0.005410991,0.05862483,-0.014900832,-0.04256469,0.03643844,0.0023212752,-0.0021351478,-0.010891115,-0.021441882,-0.047180653,-0.024526281,0.04254342,0.026610909,-0.008083249,-0.037884913,-0.0066314554,0.013347997,-0.057603788,0.019825233,0.0034300631,-0.003355612,-0.0012231233,0.042883765,0.019740146,0.05152008,-0.016517483,0.028972069,0.07419572,-0.06879271,-0.020484656,0.02514316,0.059518244,0.032652073,0.045096025,0.015836788,-0.030631261,0.023824314,-0.0041559604,-0.039033588,-0.033396583,0.015794244,-0.03643844,-0.037991274,-0.029716577,-0.029588947,-0.029929295,-0.02091009,0.04403244,-0.009242558,0.013071465,-0.002991334,-0.02624929,0.017517252,-0.026419463,-0.033673115,0.037672196,-0.05347708,0.036417168,0.0013706958,0.001457112,0.004512261,-0.07989654,-0.041543648,-0.023228707,-0.024313563,-0.034438897,0.044330243,-0.01506037,-0.0042011626,0.014858289,-0.033311497,-0.12431187,-0.02437738,-0.032694615,0.019814597,0.053434532,-0.010252964,0.011018746,-0.016655749,0.0059454427,0.012688574,-0.05041395,0.0049244007,-0.01809159,0.0146243,0.022569284,0.014805109,-0.05700818,-0.016708927,-0.019155174,0.03160976,-0.023909401,-0.0072855605,0.005573188,-0.029163513,-0.007391919,-0.013326726,-0.013433084,-0.018017137,0.0031960744,-0.024100846,0.035396125,-0.018868007,-0.010875162,-0.024760269,0.029908024,0.06390022,-0.06462345,0.0028185016,0.0011559845,-0.01693228,0.06658045,-0.042479604,-0.074280806,-0.000749163,0.005275384,-0.005126482,0.021686507,-0.029099697,0.013869154,-0.027780851,0.035885375,-0.01816604,-0.0694734,0.0023957263,-0.000047404337,0.012412042,0.02750432,-0.009226603,-0.013635166,0.035502482,0.07308959,0.02401576,0.035545025,-0.021590784,0.06632519,0.033630572,-0.012252505,-0.03122687,-0.016762108,0.008136429,0.012146146,-0.035906646,-0.011497359,0.03856561,-0.009529726,-0.011997244,0.034289997,0.002072662,-0.016751472,0.05130736,0.028886981,-0.048584584,0.03382202,-0.036523525,0.01493274,0.02624929,0.03258826,-0.042522147,-0.019995406,0.058029223,0.03448144,-0.01798523,-0.0033237045,-0.072493985,0.03622572,-0.033928376,0.030929064,0.019633787,-0.03943775,-0.034141093,0.029057154,-0.012103602,0.020463385,-0.056838006,0.037480753,0.012763025,0.023101076,0.0074025546,0.082917124,0.052328404,-0.0060305297,-0.00070263114,-0.017102454,-0.022569284,-0.013167188,0.019920956,0.0019569972,-0.053221818,0.020176217,-0.030843979,0.020633558,-0.018719103,0.008997933,-0.012709846,-0.034396354,-0.03212028,0.0036826646,0.011040017,-0.04445787,0.031524673,0.00659423,0.051605165,-0.041607462,0.0038608152,0.005732726,0.001870581,0.012316319,-0.008561863,0.0024967669,-0.029057154,0.008418279,0.0028371143,0.0025472871,0.026802354,0.008806488,-0.0032040512,-0.04394735,-0.006955849,-0.024866628,0.018995637,-0.035289764,0.016623842,0.0042942264,-0.036991503,0.010912387,-0.0036321443,-0.02303726,0.009269147,-0.01100811,0.031545945,-0.043734632,-0.0078386245,-0.014347767,-0.0061049806,0.019442342,-0.006392149,-0.0102263745,0.029035883,0.053945053,0.0076418617,0.037991274,-0.0062432466,0.012039787,0.020718645,0.0387996,-0.0076737693,-0.0035603524,-0.032332998,-0.07006901,0.030142011,-0.00915747,0.0168791,-0.007413191,0.0084608225,0.010768803,0.013730888,-0.02388813,0.0022401768,0.025440965,0.005238158,-0.03858688,-0.046925392,0.026547093,0.01157181,0.04518111,0.01318846,-0.01629413,-0.034438897,0.016134592,-0.00320671,0.008806488,0.031014152,0.020335754,0.009269147,0.02316489,0.04581926,-0.014847653,0.015166729,-0.035013232,0.022080034,-0.014773202,0.026291832,0.020739917,0.01080071,0.0315034,0.008944754,-0.034438897,-0.05028632,-0.021122808,0.025823856,0.029333686,0.027206516,0.009067066,0.038374163,0.0104337735,-0.019686967,0.023313792,-0.0106411725,-0.006323016,0.012390771,-0.0071898378,0.0146243,-0.004262319,-0.022377837,0.022314023,-0.018687196,-0.021069627,-0.042032897,0.049052563,-0.01269921,-0.0008934118,0.015645342,-0.081810996,-0.028185016,-0.008402325,0.005347176,0.009013887,-0.029971838,0.010247646,-0.0044803536,0.0069026696,0.022505468,0.00718452,-0.022867087,0.032800976,-0.023611598,0.0081577,0.03660861,-0.023420151,0.006051801,0.017070547,0.012720482,-0.024526281,-0.023356337,-0.031056695,-0.06160287,-0.0076418617,-0.026568364,-0.000053303913,0.03435381,0.02837646,-0.013145916,-0.0057274075,0.008971344,0.008604406,-0.021378068,-0.025334606,0.024462465,0.021931132,-0.04256469,-0.01318846,-0.012816205,-0.0059613967,-0.006658045,-0.010013657,-0.032971147,0.013794703,0.020176217,-0.014720023,-0.024781542,-0.003804977,-0.0041586193,0.009306373,-0.013560714,-0.003140236,-0.017676791,0.0465425,-0.042245615,-0.0024435876,0.006817583,-0.0073387395,0.0206761,-0.0074397805,-0.02021876,0.026589636,0.017740605,0.015889967,0.01387979,-0.012486493,-0.015166729,-0.045478914,0.052200776,-0.021197258,0.010061518,-0.0033369993,-0.016708927,-0.0066739987,-0.02042084,-0.023590326,-0.013124645,-0.024185933,-0.022718186,0.005466829,0.005557234,0.020080494,0.019133903,-0.045776717,-0.002157749,0.01736835,0.03735312,-0.013560714,0.0039911047,-0.044713132,-0.017591704,0.027419234,0.011678169,0.00039685032,-0.0015648002,0.011848342,0.043649547,0.0063283336,0.01924026,0.011454815,-0.006806947,0.04403244,0.027483048,-0.0000027420563,-0.026695995,-0.017581068,-0.0050892564,0.013114009,0.003653416,-0.015538984,0.019591244,0.033247683,0.037991274,-0.029057154,0.023547782,0.033928376,-0.010311461,-0.009354234,-0.009231922,-0.0061741136,0.011359093,0.032971147,-0.011391,0.004626597,-0.042883765,0.009657356,-0.0026217382,-0.0015116208,-0.041862722,-0.012539673,0.0074025546,-0.027908482,-0.030524902,-0.0020700032,0.019867776,-0.057518702,0.020537835,-0.011635625,0.0098807085,0.025440965,-0.03109924,0.030971609,-0.018304305,0.0048659034,-0.0009871402,0.044500414,0.024845356,-0.0036853235,-0.0003026233,0.047648627,-0.047138106,-0.054455575,-0.008742672,0.02129298,0.024100846,-0.021186622,0.011603718,0.023696683,-0.022292752,-0.033034965,0.0040043993,0.014049964,0.039778095,-0.022058763,-0.02414339,0.021239802,0.01088048,-0.04320284,0.028397731,-0.026781082,0.0026828942,-0.02316489,-0.046202153,-0.023122348,-0.003727867,0.026462005,-0.025079345,0.042926308,0.004033648,-0.00041579545,-0.009822212,-0.00746637,-0.034779243,0.00094991474,-0.0053578117,-0.013624529,-0.028674264,-0.0015475168,-0.002042084,0.027185244,0.033502944,0.02886571,0.017559797,-0.060624372,0.007370647,0.008737355,0.02352651,-0.021803502,-0.0015209272,-0.0012065048,-0.007546139,0.011188919,0.040267345,-0.023207435,0.004958967,0.008918164,-0.017676791,0.016411124,-0.04841441,0.016889738,0.014837017,0.014156323,0.012965106,-0.03611936,-0.016974824,0.02265437,-0.014549849,0.03548121,-0.010742214,0.02912097,-0.0059082173,0.0019556677,-0.0075089135,-0.024185933,-0.041118212,0.015251815,0.020878183,0.029227328,0.017059911,-0.0060252114,-0.022952175,0.016708927,0.00024911165,-0.011167647,-0.047861345,0.015879331,0.00962013,-0.014975283,-0.0051637073,-0.0025911601,-0.045478914,0.026185473,-0.071004964,0.029503861,-0.0017017367,0.004456423,-0.010013657,-0.008099203,-0.034672886,0.0135500785,-0.020750552,0.0055891415,0.02675981,-0.013922334,0.015613435,0.013103372,-0.012156782,-0.006806947,0.02388813,0.0075567747,-0.017815057,0.007918394,0.020484656,0.03733185,0.0055146907,-0.0006906658,0.038629424,-0.01598569,-0.019197717,0.018931821,0.008077932,-0.036821328,0.00438729,-0.016219677,0.0025007552,0.001313528,-0.018070318,-0.0039884453,0.015113549,0.026589636,0.009200014,0.0039990814,0.022292752,-0.024100846,-0.023186162,0.00320671,-0.061049804,0.016081411,0.013794703,-0.025355877,-0.038033817,-0.023462696,0.0104337735,-0.008556545,0.021409975,0.0105029065,0.012454586,-0.016389852,-0.019442342,0.055434074,-0.014262681,-0.020995177,0.005599777,0.025334606,-0.026185473,0.07083479,-0.019665696,0.0033157277,0.024228476,0.02054847,-0.015411354,0.012092967,0.022101305,0.022186393,0.008242787,0.009753078,-0.0037225492,0.00049755856,-0.020048587,-0.022675643,0.031524673,0.0047037066,0.022930903,0.034609072,0.0093276445,0.0423307,-0.058327027,0.030418545,-0.004990875,0.029546404,0.004036307,-0.006057119,0.040607695,0.022845816,-0.015443261,0.014996555,-0.014156323,-0.044372786,-0.0337582,0.01747471,-0.026313104,-0.011114468,0.013869154,-0.034545254,0.00031209586,-0.0023624892,0.021495063,-0.0037464797,-0.020197488,0.015677249,0.0074450984,0.010609265,0.01569852,-0.015624071,0.03307751,0.03012074,-0.020771824,-0.031077968,0.017612975,-0.003363589,-0.033928376,-0.030099468,-0.030801434,-0.011550538,-0.01703864,0.006482553,-0.024972986,-0.000078023964,0.010311461,0.004911106,-0.010986838,-0.0034805834,0.017081182,0.005982668,0.045606546,-0.020314483,0.007243017,0.061560325,-0.0064506456,-0.035587568,0.027100157,0.013996785,0.008833077,-0.041373473,0.02009113,0.0031694847,0.029482588,-0.03112051,-0.039373934,0.015198636,0.012263141,0.013358633,0.03188629,-0.01010938,-0.0008156371,-0.034864333,0.02314362,0.022101305,0.01582615,-0.0292486,-0.018570201,0.0027387326,-0.009295737,-0.0019902342,-0.009221286,-0.014422219,-0.03139704,0.038608152,0.028716808,0.03099288,0.018761648,0.03548121,0.029354958,0.0012676609,0.0045760763,-0.012529037,-0.030695077,0.00003022494,-0.020505928,-0.015889967,-0.008886256,-0.009614812,0.01798523,-0.010923022,0.012412042,0.007413191,-0.019442342,0.02627056,-0.029354958,-0.006583594,-0.029397503,0.0012304354,0.01585806,0.0015980372,-0.021452518,0.0019636448,-0.030524902,-0.025440965,0.006291108,-0.010189149,0.027206516,-0.019123267,0.017751241,0.04356446,0.01831494,-0.013964877,-0.004974921,0.014124415,-0.013092737,-0.036651153,-0.0005520673,0.011391,-0.02227148,-0.009566952,0.022633098,-0.008306602,0.007227063,0.0024342812,0.042905036,0.014358404,0.038267806,-0.025866399,0.04069278,-0.023313792,0.010455045,-0.001688442,0.014698751,-0.000023806035,0.019920956,0.0042676367,-0.01667702,-0.020325119,0.028759351,0.003227982,0.00037591098,0.04141602,-0.030524902,0.0018665924,0.0037092543,0.026525822,0.0022534716,0.013156552,-0.003921971,0.03597046,0.01318846,0.063815124,0.037629653,-0.04828678,-0.02650455,0.020856911,-0.014390311,0.0042277523,-0.004150642,0.023186162,-0.01582615,-0.011997244,0.020059222,0.024717726,-0.0141031435,-0.030269641,0.0153475385,0.028185016,-0.017868236,-0.0013208402,-0.04539383,-0.0097424425,0.0005095239,0.047138106,0.01929344,0.019335983,0.025781311,0.005482783,-0.0153156305,-0.008976662,-0.008450187,-0.02424975,0.016740834,0.012720482,0.004528215,0.004235729,-0.008482094,-0.008625678,-0.024568824,0.03024837,-0.01095493,0.008955389,0.0018665924,-0.008838396,0.03633208,0.001495667,0.007870533,-0.039650466,-0.026781082,-0.00024346136,-0.0049057878,0.023547782,-0.00009256517,0.00088942336,-0.00002937324,0.009939206,-0.048882388,-0.007971573,-0.0039964225,0.00027836027,-0.06024148,0.00774822,-0.023951944,0.016304765,0.030695077,-0.02054847,0.039395206,0.012901291,-0.013039558,-0.0005148418,-0.020612286,-0.015421989,0.024079574,0.0013334702,-0.003299774,0.017921414,0.0019663037,-0.022080034,0.0013334702,-0.008508684,0.00044072323,0.0054561934,-0.03186502,-0.0058390843,-0.029737849,-0.029631492,-0.020335754,-0.003275843,-0.02414339,0.008891574,0.03622572,-0.0094659105,-0.0021058992,0.0163154,-0.023909401,-0.0018599451,-0.007227063,0.019101994,-0.005637003,0.0005617061,-0.008535273,0.012114238,0.006482553,-0.00049124355,0.023505239,0.006870762,-0.012146146,0.011082561,-0.014018056,-0.0016897714,-0.027568135,0.008572499,-0.00951909,-0.029099697,-0.025568595,-0.016570661,-0.02201622,0.007232381,-0.019431707,-0.030205827,0.0034274042,-0.014507306,0.031822477,0.023313792,-0.00425966,-0.03139704,-0.008109839,-0.0358641,0.0055359625,0.00015729431,-0.0035204678,-0.009008569,0.026589636,0.012018516,-0.034119822,-0.017091818,-0.01182707,-0.0043447465,0.0050041694,0.02650455,0.011210191,-0.02427102,-0.030312186,-0.02624929,0.0056635924,-0.0011094526,-0.003217346,-0.014571121,-0.0017083841,0.013262911,-0.013784068,-0.025440965,0.0062219747,0.022399109,0.028589178,-0.026036572,-0.00079237117,0.042522147,0.028567905,-0.026398191,0.0060837087,0.021484427,0.02837646,-0.01680465,-0.0102263745,0.023973215,-0.017953323,-0.029695306,-0.021505699,-0.007407873,-0.04179891,-0.002003529,-0.003658734,-0.026100388,-0.022803273,0.02414339,-0.013050194,0.0011353774,0.015475169,0.0068601263,0.030078197,0.036013003,0.008008799,0.021931132,0.029525133,0.0018280376,0.0024329517,0.0028131835,0.02047402,-0.00064779003,0.0141031435,0.0019915637,-0.023249978,-0.025483508,0.022080034,-0.027270332,0.016177135,-0.029695306,0.015432625,0.016464302,0.011316549,0.043862265,0.0076524974,-0.030078197,0.0019649742,-0.024313563,0.0030631262,-0.029057154,-0.0047914525,0.01021042,-0.019335983,-0.013018286,-0.021994947,0.032694615,-0.032332998,0.009019204,0.004621279,-0.0014105802,-0.013507536,-0.0039060176,0.046627585,0.013677709,-0.009806258,-0.012667303,0.03931012,-0.031333227,0.019718874,0.017251356,-0.040884227,0.020867547,-0.005557234,0.02047402,0.033205137,-0.015188,0.01978269,-0.016815286,0.008104521,0.01829367,-0.011348457,-0.010869843,-0.029184785,-0.038629424,-0.008955389,0.01598569,0.024696454,0.00036959595,-0.014890197,0.01936789,0.048627127,0.01051886,0.0036454392,0.035927918,0.0033981556,-0.014783838,-0.022718186,-0.012433314,-0.013050194,0.04841441,-0.013252275,-0.04320284,-0.01916581,0.012518401,0.013028922,-0.01711309,-0.013124645,0.033673115,-0.0018732399,-0.0050254413,-0.017751241,-0.027397962,-0.023420151,-0.030078197,0.03073762,-0.026462005,-0.01927217,-0.022399109,0.004472377,0.01698546,-0.013124645,-0.05390251,-0.028397731,0.012954471,0.0034141093,-0.00005243144,0.04964817,0.009859437,-0.02134616,0.007099433,0.0057008183,-0.012901291,0.029269872,0.02176096,0.0345878,-0.018836098,0.009221286,-0.0031588487,0.012124875,0.009045795,0.009678627,-0.027163973,-0.037906185,-0.009758397,-0.010529496,0.013486263,0.026355648,0.03163103,0.06487871,0.014071235,-0.01667702,0.012805569,-0.01760234,0.009971114,0.0048366548,0.021803502,0.021537606,0.0060996627,-0.017070547,-0.012805569,0.016868465,0.04679776,0.0021737027,-0.025249518,-0.017634246,0.009790304,0.009008569,0.0013281524,0.01041782,0.023441423,0.013996785,0.014081871,-0.0074291443,-0.0077960812,-0.026057843,0.022356566,-0.054200314,0.0047037066,0.028333917,-0.009497819,0.0028371143,-0.017846964,-0.030035654,-0.028567905,-0.012890656,-0.042288158,-0.011869614,-0.011157012,0.02152697,0.02814247,0.013773432,-0.006806947,-0.01095493,-0.02763195,0.0009964466,-0.038140174,-0.02824883,0.012997014,0.01218869,0.033779476,-0.045266196,-0.03735312,0.015443261,0.0027227788,0.004094804,0.003068444,-0.00006659873,-0.013858519,0.047180653,0.016666384,-0.033885833,-0.01331609,-0.024717726,-0.0017948005,0.035566296,0.018442571,-0.0153156305,0.02265437,0.029971838,0.00387411,-0.031354498,0.015039098,-0.002996652,-0.021388704,-0.024079574,0.012603488,-0.010944295,-0.030971609,-0.049690712,0.030142011,0.0023505238,0.0034726064,-0.015336902,-0.0049483315,-0.011603718,-0.008944754,0.015039098,0.0015980372,0.016794015,-0.008710765,-0.001426534,0.01667702,0.0077375844,-0.0022494833,-0.037778556,-0.005046713,-0.0011413601,-0.012146146,0.014858289,0.0042516827,-0.010853889,0.0146243,0.011476087,0.046967935,-0.0042782724,0.015581527,0.0032120282,-0.024185933,-0.037629653,0.029057154,0.017815057,-0.011199554,0.04492585,0.014954012,-0.03382202,0.004193186,-0.0046452093,0.011454815,-0.0046983887,0.0056742285,0.00081297813,-0.014922104,0.010252964,-0.02863172,-0.013635166,-0.011295278,0.03943775,-0.019314712,-0.016687656,0.015081642,0.009370188,-0.02129298,-0.0103646405,0.0011639614,0.0051557305,-0.02999311,0.019431707,0.02339888,-0.028419003,0.02627056,-0.010614583,0.00880117,0.010837936,0.036821328,-0.050584126,-0.0054561934,0.00050653255,0.018985001,0.0047249785,-0.061305065,0.007891804,0.029929295,-0.0145179415,0.017081182,-0.016857829,-0.0070834793,-0.011146376,0.032439355,-0.045734175,-0.023803042,0.003220005,0.03494942,-0.02352651,0.023313792,0.003432722,-0.023930673,-0.0075089135,-0.011316549,0.010247646,0.014145686,0.022718186,-0.010322097,-0.011380364,-0.013262911,0.0012231233,-0.007317468,-0.008662904,0.031843748,0.003733185,0.024994258,-0.0031296003,0.0045760763,0.02016558,0.023951944,-0.01691101,0.04518111,0.032694615,0.034396354,0.004605325,0.024547553,-0.0021138762,-0.0038448614,-0.004243706,0.0047063655,0.014741294,0.013454356,-0.021463154,0.0138266105,0.045223653,0.0096733095,0.017134361,-0.010731577,-0.02788721,-0.017570432,-0.014486034,0.03431127,-0.006519779,-0.028929524,-0.009976432,0.0076950407,0.0018306965,0.0552639,-0.0036161905,-0.024909172,-0.009806258,-0.01811286,0.0009911287,-0.013794703,-0.0135500785,0.017687427,0.023547782,0.040905498,0.020388933,-0.01749598,0.017049275,-0.022314023,0.005344517,0.018697832,0.021750323,0.005206251,-0.046755217,0.015900603,-0.023590326,-0.01375216,0.08334256,0.019282805,-0.005488101,-0.006514461]},{"id":"foreign-dictionary","name":"Foreign Dictionary","description":"There is a foreign language which uses the latin alphabet, but the order among letters is *not* \"a\", \"b\", \"c\" ... \"z\" as in English.\n\nYou receive a list of *non-empty* strings `words` from the dictionary, where the words are **sorted lexicographically** based on the rules of this new language. \n\nDerive the order of letters in this language. If the order is invalid, return an empty string. If there are multiple valid order of letters, return **any** of them.\n\nA string `a` is lexicographically smaller than a string `b` if either of the following is true:\n* The first letter where they differ is smaller in `a` than in `b`.\n* There is no index `i` such that `a[i] != b[i]` *and* `a.length < b.length`.\n\n**Example 1:**\n\n```java\nInput: [\"z\",\"o\"]\n\nOutput: \"zo\"\n```\n\nExplanation:\nFrom \"z\" and \"o\", we know 'z' < 'o', so return \"zo\".\n\n**Example 2:**\n\n```java\nInput: [\"hrn\",\"hrf\",\"er\",\"enn\",\"rfnn\"]\n\nOutput: \"hernf\"\n```\n\nExplanation:\n* from \"hrn\" and \"hrf\", we know 'n' < 'f'\n* from \"hrf\" and \"er\", we know 'h' < 'e'\n* from \"er\" and \"enn\", we know get 'r' < 'n'\n* from \"enn\" and \"rfnn\" we know 'e'<'r'\n* so one possibile solution is \"hernf\"\n\n**Constraints:**\n* The input `words` will contain characters only from lowercase `'a'` to `'z'`.\n* `1 <= words.length <= 100`\n* `1 <= words[i].length <= 100`\n","difficulty":"Hard","concepts":["Adjacency List","Topological Sort"],"solutions":{"python":"class Solution:\n    def foreignDictionary(self, words: List[str]) -> str:\n        adj = {char: set() for word in words for char in word}\n\n        for i in range(len(words) - 1):\n            w1, w2 = words[i], words[i + 1]\n            minLen = min(len(w1), len(w2))\n            if len(w1) > len(w2) and w1[:minLen] == w2[:minLen]:\n                return \"\"\n            for j in range(minLen):\n                if w1[j] != w2[j]:\n                    adj[w1[j]].add(w2[j])\n                    break\n\n        visited = {}  # {char: bool} False visited, True current path\n        res = []\n\n        def dfs(char):\n            if char in visited:\n                return visited[char]\n\n            visited[char] = True\n\n            for neighChar in adj[char]:\n                if dfs(neighChar):\n                    return True\n\n            visited[char] = False\n            res.append(char)\n\n        for char in adj:\n            if dfs(char):\n                return \"\"\n\n        res.reverse()\n        return \"\".join(res)\n","javascript":"class Solution {\n    /**\n     * @param {string[]} words\n     * @returns {string}\n     */\n    foreignDictionary(words) {\n        let adj = {};\n        words.forEach(word => {\n            for (let char of word) {\n                adj[char] = new Set();\n            }\n        });\n\n        for (let i = 0; i < words.length - 1; i++) {\n            let w1 = words[i],\n                w2 = words[i + 1];\n            let minLen = Math.min(w1.length, w2.length);\n            if (\n                w1.length > w2.length &&\n                w1.substring(0, minLen) === w2.substring(0, minLen)\n            ) {\n                return '';\n            }\n            for (let j = 0; j < minLen; j++) {\n                if (w1[j] !== w2[j]) {\n                    adj[w1[j]].add(w2[j]);\n                    break;\n                }\n            }\n        }\n\n        let state = {}; // 0 = unvisited, 1 = visiting, 2 = visited\n        let res = [];\n\n        /**\n         * @param {string} char\n         * @returns {boolean}\n         */\n        function dfs(char) {\n            if (state[char] === 1) {\n                // Node is being visited, found a cycle\n                return true;\n            }\n            if (state[char] === 2) {\n                // Node has already been visited, no need to visit again\n                return false;\n            }\n\n            state[char] = 1; // Mark as visiting\n            for (let neighChar of adj[char]) {\n                if (dfs(neighChar)) {\n                    return true;\n                }\n            }\n            state[char] = 2; // Mark as visited\n            res.push(char);\n            return false;\n        }\n\n        for (let char in adj) {\n            if (!state[char] && dfs(char)) {\n                return '';\n            }\n        }\n\n        res.reverse();\n        return res.join('');\n    }\n}\n","cpp":"class Solution {\npublic:\n    unordered_map<char, unordered_set<char>> adj;\n    unordered_map<char, bool> visited;\n    string result;\n\n    string foreignDictionary(vector<string>& words) {\n        for (const auto& word : words) {\n            for (char ch : word) {\n                adj[ch];\n            }\n        }\n\n        for (size_t i = 0; i < words.size() - 1; ++i) {\n            const string& w1 = words[i], & w2 = words[i + 1];\n            size_t minLen = min(w1.length(), w2.length());\n            if (w1.length() > w2.length() && w1.substr(0, minLen) == w2.substr(0, minLen)) {\n                return \"\";\n            }\n            for (size_t j = 0; j < minLen; ++j) {\n                if (w1[j] != w2[j]) {\n                    adj[w1[j]].insert(w2[j]);\n                    break;\n                }\n            }\n        }\n\n        for (const auto& pair : adj) {\n            if (dfs(pair.first)) {\n                return \"\";\n            }\n        }\n\n        reverse(result.begin(), result.end());\n        return result;\n    }\n\n    bool dfs(char ch) {\n        if (visited.find(ch) != visited.end()) {\n            return visited[ch];\n        }\n\n        visited[ch] = true;\n        for (char next : adj[ch]) {\n            if (dfs(next)) {\n                return true;\n            }\n        }\n        visited[ch] = false;\n        result.push_back(ch);\n        return false;\n    }\n};\n","java":"class Solution {\n    private Map<Character, Set<Character>> adj;\n    private Map<Character, Boolean> visited;\n    private List<Character> result;\n\n    public String foreignDictionary(String[] words) {\n        adj = new HashMap<>();\n        for (String word : words) {\n            for (char c : word.toCharArray()) {\n                adj.putIfAbsent(c, new HashSet<>());\n            }\n        }\n\n        for (int i = 0; i < words.length - 1; i++) {\n            String w1 = words[i], w2 = words[i + 1];\n            int minLen = Math.min(w1.length(), w2.length());\n            if (w1.length() > w2.length() && w1.substring(0, minLen).equals(w2.substring(0, minLen))) {\n                return \"\";\n            }\n            for (int j = 0; j < minLen; j++) {\n                if (w1.charAt(j) != w2.charAt(j)) {\n                    adj.get(w1.charAt(j)).add(w2.charAt(j));\n                    break;\n                }\n            }\n        }\n\n        visited = new HashMap<>();\n        result = new ArrayList<>();\n        for (char c : adj.keySet()) {\n            if (dfs(c)) {\n                return \"\";\n            }\n        }\n\n        Collections.reverse(result);\n        StringBuilder sb = new StringBuilder();\n        for (char c : result) {\n            sb.append(c);\n        }\n        return sb.toString();\n    }\n\n    private boolean dfs(char ch) {\n        if (visited.containsKey(ch)) {\n            return visited.get(ch);\n        }\n\n        visited.put(ch, true);\n        for (char next : adj.get(ch)) {\n            if (dfs(next)) {\n                return true;\n            }\n        }\n        visited.put(ch, false);\n        result.add(ch);\n        return false;\n    }\n}\n","csharp":"public class Solution {\n    private Dictionary<char, HashSet<char>> adj;\n    private Dictionary<char, bool> visited;\n    private List<char> result;\n\n    public string foreignDictionary(string[] words) {\n        adj = new Dictionary<char, HashSet<char>>();\n        foreach (var word in words) {\n            foreach (var c in word) {\n                if (!adj.ContainsKey(c)) {\n                    adj[c] = new HashSet<char>();\n                }\n            }\n        }\n\n        for (int i = 0; i < words.Length - 1; i++) {\n            var w1 = words[i];\n            var w2 = words[i + 1];\n            int minLen = Math.Min(w1.Length, w2.Length);\n            if (w1.Length > w2.Length && w1.Substring(0, minLen) == w2.Substring(0, minLen)) {\n                return \"\";\n            }\n            for (int j = 0; j < minLen; j++) {\n                if (w1[j] != w2[j]) {\n                    adj[w1[j]].Add(w2[j]);\n                    break;\n                }\n            }\n        }\n\n        visited = new Dictionary<char, bool>();\n        result = new List<char>();\n        foreach (var c in adj.Keys) {\n            if (dfs(c)) {\n                return \"\";\n            }\n        }\n\n        result.Reverse();\n        var sb = new StringBuilder();\n        foreach (var c in result) {\n            sb.Append(c);\n        }\n        return sb.ToString();\n    }\n\n    private bool dfs(char ch) {\n        if (visited.ContainsKey(ch)) {\n            return visited[ch];\n        }\n\n        visited[ch] = true;\n        foreach (var next in adj[ch]) {\n            if (dfs(next)) {\n                return true;\n            }\n        }\n        visited[ch] = false;\n        result.Add(ch);\n        return false;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def foreignDictionary(self, words: List[str]) -> str:\n        ","javascript":"class Solution {\n    /**\n     * @param {string[]} words\n     * @returns {string}\n     */\n    foreignDictionary(words) {}\n}\n","cpp":"class Solution {\npublic:\n    string foreignDictionary(vector<string>& words) {\n        \n    }\n};\n","java":"class Solution {\n    public String foreignDictionary(String[] words) {\n      \n    }\n}\n","csharp":"public class Solution {\n    public string foreignDictionary(string[] words) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/6kTZYvNNyps","embedding":[0.019234687,-0.021641733,0.029665222,-0.006960918,-0.016502364,0.01966839,0.0000024935753,-0.0048845694,-0.061282102,0.070216365,-0.0151036745,-0.03684299,-0.025892014,-0.0016494232,-0.0014705211,-0.008690305,0.02519809,0.03402393,0.018323913,0.044714686,0.0420691,0.01253399,0.007801216,0.031378344,0.05009259,0.022682618,-0.016643317,0.01700112,0.007486782,-0.00089857646,0.020557478,-0.0014352828,0.021706788,-0.0137808835,0.032809563,0.013694143,0.030901272,-0.01601445,-0.01631804,-0.020579163,-0.0020383997,-0.025848644,-0.0052505056,-0.017217971,-0.0033123996,0.03317821,-0.024200575,0.030771162,0.023636764,0.0033666124,-0.055340383,0.042806394,-0.015407266,-0.01937564,-0.016393939,-0.039033186,0.013921836,-0.023311486,-0.0011845488,-0.008516825,0.0559042,-0.0167409,0.030857902,0.03977048,-0.030836217,-0.0010225881,0.030489257,0.045148388,0.014041104,-0.022791045,-0.007324144,0.024872813,0.0077741095,-0.03692973,-0.044931535,-0.008928841,0.003122655,-0.0013722605,0.025610108,-0.05629453,-0.07138736,-0.01809622,-0.00077930844,-0.014539862,0.0141170025,-0.00012824706,-0.026932899,0.039575316,0.0006441153,-0.08301058,0.020514108,-0.019408168,-0.0021129423,-0.0041011954,0.033807077,0.0153205255,0.0010551158,0.044714686,-0.013108646,-0.03875128,0.037536915,-0.011775011,0.029036354,0.056251157,0.0026957295,-0.055817455,0.026325716,-0.023896985,-0.029405,-0.016252985,-0.05629453,-0.010744968,0.05486331,-0.005659812,0.047490377,-0.009639028,-0.015114517,0.0061585694,0.023550022,-0.01461576,0.024070466,-0.028732762,0.021988695,0.001096453,0.0000933476,0.054039277,0.008977633,-0.034414258,0.0004455611,-0.02608718,0.020590005,-0.024894498,-0.024374057,0.02630403,-0.05586083,0.0028624337,-0.013737513,-0.017608304,-0.013813411,0.067180455,0.015428951,-0.015331368,-0.011010611,-0.026477512,-0.00083826476,0.03157351,-0.012436407,0.0087499395,-0.019982822,0.023788558,0.009546867,-0.022769358,0.014344696,0.08704401,-0.0034940124,-0.06015448,-0.010658229,-0.013889309,0.057508893,0.011189514,-0.035715364,-0.027323231,-0.040681254,-0.019538278,0.027691877,-0.040724624,0.016426466,0.020459896,-0.02901467,-0.06952244,-0.038295895,-0.04801082,-0.011569003,0.06028459,0.003927714,-0.02086107,-0.0048168036,-0.047316898,-0.042394377,-0.015483164,-0.041028216,0.044627942,-0.03619244,-0.03534672,-0.00395211,-0.033676967,0.031118123,-0.03486965,0.0061585694,0.040269237,-0.012447249,0.04406413,0.056251157,0.0022593169,-0.022617564,0.000044598466,0.026260661,-0.04434604,-0.025002925,-0.009893829,-0.016524049,-0.019321427,-0.036214124,-0.00089044456,-0.010766654,0.008234918,-0.0053047184,0.028147265,0.0050851568,-0.045018274,0.034175724,-0.038382635,0.0038545271,-0.0045348974,0.0072807735,0.009503497,0.037450176,-0.032484286,0.005995931,0.014030262,0.011053981,0.027561767,0.008999318,-0.000726451,-0.038512744,-0.015645802,-0.019646704,-0.02706301,0.0074976245,0.0253282,0.027279861,-0.037341747,0.0065326374,-0.08843185,-0.028580967,-0.0681346,-0.026065495,-0.006429633,-0.0061043566,0.018291386,-0.03428415,-0.0079801185,0.029643537,0.030814532,0.008646935,-0.009443862,-0.023051266,0.0031036804,-0.015027777,0.0015193126,0.0053128502,0.0151036745,0.0045674248,-0.007920484,-0.01678427,0.028646022,-0.047533747,-0.053518835,0.010305845,0.044758055,-0.04287145,0.007367514,-0.0025954358,-0.023419911,0.015071147,-0.057769116,0.005681497,0.0083162375,0.008359607,0.029860388,0.009172799,-0.029123094,0.022704303,-0.009443862,-0.009649871,-0.06488183,0.0010063243,-0.019852713,0.019646704,-0.058202818,-0.001894736,0.013509819,0.022205546,-0.03840432,0.0030006762,0.008630672,-0.0036376761,0.017770942,-0.029123094,-0.012447249,-0.0015369317,-0.0000672577,-0.028797818,0.013629087,-0.038230836,-0.01992861,-0.027344916,0.018074535,0.055123534,-0.0391633,0.016567418,-0.011623216,-0.009807088,0.09307247,-0.069956146,0.006863335,0.008375871,-0.040898107,0.052434582,0.021554993,0.007963854,-0.04137518,0.023831928,0.029101409,-0.027626822,-0.049615517,0.0064567397,-0.029882073,0.034934703,0.002838038,-0.016437309,0.007681948,0.06240973,-0.0011859041,-0.0071289777,-0.0026794656,-0.018031163,0.01597108,0.0015979211,-0.019614177,0.017510721,-0.032137323,0.033546854,0.028797818,-0.061889287,0.0008348765,0.01966839,0.023550022,-0.008110229,0.022552507,-0.0167409,0.028971298,0.013878467,0.03879465,-0.01920216,0.034782905,0.03135666,0.066182934,0.00086740416,-0.032874618,-0.011362994,0.02205375,-0.012241241,0.0040686675,-0.026932899,-0.019993665,-0.006310365,0.05646801,0.006429633,0.031378344,0.0371249,0.010950977,0.0011011966,-0.012273769,-0.089342624,-0.021186346,-0.01397605,0.022032065,0.058376297,0.019028679,-0.014095318,-0.03259271,-0.008088544,0.016621633,0.011731641,0.0062561524,-0.031486772,0.040009018,0.023766873,0.01155816,-0.021576678,-0.018627504,-0.09420009,-0.02825569,0.027084695,-0.0042204633,-0.03640929,0.0035590676,0.007584365,-0.0457122,0.0036512294,0.006527216,0.040984847,0.035064813,-0.02061169,0.011178671,0.028364116,0.015981922,0.014225428,-0.0077795307,0.013672458,-0.008272867,0.010511854,-0.018616661,0.00029444305,0.034305833,-0.019711759,0.05256469,0.014257955,0.031161495,0.07498709,0.004215042,0.02923152,0.044627942,0.018410653,0.018887725,-0.030575996,-0.032614395,0.05009259,-0.009373386,0.025740217,-0.0068470715,-0.015277156,-0.029209835,0.047316898,0.028797818,0.019603334,-0.019831028,0.0133471815,-0.015461479,-0.044172555,0.022064593,0.011775011,0.030662736,0.00837045,0.018421495,-0.0025601976,0.061455585,0.023593392,-0.023398226,-0.035888847,-0.029556796,-0.015071147,-0.0027106379,0.021067077,-0.009096901,0.01818296,0.015786756,0.0441075,0.0041418546,0.05854978,-0.001920487,0.0051691867,-0.017879369,-0.014973564,-0.005751974,-0.033091467,0.03194216,0.009920935,-0.014865139,-0.008793309,0.006521795,-0.044454463,-0.029925443,-0.0036078591,-0.018009478,-0.013835096,0.009346279,0.039423518,0.0015355764,-0.0048032505,0.05477657,-0.055080164,-0.032527655,-0.019711759,-0.0004967244,0.0592437,-0.04287145,-0.041787196,0.0045023696,-0.010858816,-0.022151334,0.032917988,-0.025263146,-0.047056675,0.014030262,-0.030901272,-0.014995249,-0.0028109315,0.0044888165,-0.011905122,0.00033679677,0.012544832,-0.0074596754,0.039792165,0.013271283,-0.015125359,-0.03985722,0.05586083,-0.025263146,-0.01108651,-0.03007724,-0.019364798,0.028277375,0.013878467,0.0022877785,-0.023766873,-0.03849106,-0.0018093508,0.06015448,-0.022248916,-0.0049225185,-0.017857682,-0.018052848,0.018681716,0.02026473,0.003602438,-0.02409215,-0.0054700673,-0.03170362,0.0049875737,-0.04779397,-0.01452902,0.017521564,0.022639249,-0.0008280999,-0.033199895,-0.018074535,-0.053041764,0.0099534625,-0.018800985,0.03411067,0.0072428244,0.027930414,0.014713343,-0.021468252,-0.013574875,-0.0031551826,0.0011872594,0.01831307,0.007622314,0.03339506,0.013184543,-0.011016033,-0.0017226104,0.040139128,0.040399347,0.039531942,0.00022684652,0.0031389187,-0.010143207,-0.019820185,-0.040767994,-0.04345695,-0.010614858,0.0060067736,-0.0123605095,-0.0014908509,0.012414722,-0.009649871,0.0002905465,-0.01202439,-0.028602652,-0.015569905,0.0008321658,0.025371572,0.022530822,0.03378539,-0.014941037,-0.040117443,0.016556576,-0.07398957,-0.0025981464,-0.016404781,0.009080637,-0.05013596,0.005838714,0.008164441,-0.010604016,0.006337472,0.030901272,0.0024124677,0.008072279,-0.0055269906,0.007898799,-0.0151036745,0.040767994,0.010094415,0.0031578932,-0.02493787,0.015450636,0.03189879,0.033763707,-0.007871693,-0.020600848,-0.005472778,0.017131232,0.01461576,0.0026116997,0.021045392,0.015873495,0.03135666,0.013054432,0.0016168955,0.009275803,-0.0093029095,0.043413576,-0.0058061867,0.0058224504,0.049138445,0.0013559966,-0.027843673,-0.037146583,-0.0076548415,-0.0052532163,-0.0034072718,-0.055166904,0.01669753,0.011850909,-0.071474105,0.0056327055,0.0049306503,0.00007767672,0.007584365,0.025002925,0.018660031,-0.045408607,0.040312607,-0.028017154,-0.01712039,-0.047577117,-0.0073458287,0.004610795,0.0033476378,-0.028429171,0.0010036137,0.0023108188,-0.016112031,0.029665222,0.006462161,-0.0038436847,-0.05807271,-0.0043695485,0.0027729827,0.0022850677,-0.0146699725,-0.018594977,0.030922959,0.027691877,0.018237172,0.02901467,0.0324626,0.050959993,-0.0059471396,-0.0005946462,-0.009861301,0.000068528316,0.017391453,-0.029535111,-0.021576678,-0.0054619354,-0.021717632,0.019831028,-0.012761683,0.009926356,-0.025610108,-0.0012441828,0.020459896,0.00484391,0.0072861947,-0.032701135,-0.031508457,0.051220216,-0.002043821,-0.028385801,-0.035975587,0.033850446,-0.042893134,-0.012599045,-0.004746327,0.0375586,0.008614408,-0.026108865,0.041396864,0.00055127597,0.013444765,0.023831928,-0.003984638,-0.043326836,0.0041960673,-0.026997954,-0.007909642,-0.04636275,-0.015559061,0.03012061,0.013162858,0.008565616,0.042155843,-0.02723649,-0.0522611,0.021294773,-0.036951415,-0.02936163,0.033460114,0.008885471,-0.05377906,0.011590688,0.010056467,0.015049462,-0.01601445,-0.03679962,0.0391633,-0.043955706,0.02209712,-0.033004727,0.021424882,0.0005661845,0.01508199,0.014388067,-0.026629306,-0.019104576,0.008240339,0.017586619,-0.010923871,-0.03400224,0.017011965,0.024395742,-0.0029139358,0.009817931,0.002838038,-0.010262475,0.020926125,0.015428951,0.015006091,-0.01627467,0.0018825381,-0.0034072718,0.0009819285,-0.061629064,-0.008191548,0.0029844125,0.023896985,0.00327174,0.013488134,-0.011081088,0.032440916,0.0014772977,0.040290922,-0.126641,-0.012089445,-0.039965644,0.0049902843,0.0057682376,-0.004998416,0.009443862,0.00968782,0.0027174146,0.012252084,-0.01780347,-0.05373569,0.0005272191,-0.0063212076,-0.011265411,-0.012772526,-0.0046758503,0.02604381,-0.020318942,-0.006115199,0.0027458763,0.010571488,-0.010522696,-0.037233323,0.013238756,-0.008885471,-0.0139001515,-0.012100288,-0.037992302,-0.009915514,0.017922739,-0.029947128,-0.01687101,0.0013417657,-0.032809563,-0.0049170973,0.016339725,-0.033698652,0.029947128,-0.00892342,0.03870791,-0.04430267,0.017727572,-0.0045538717,-0.024027094,0.04128844,0.011167828,-0.0070259734,-0.00033984624,-0.049138445,0.01835644,0.003369323,0.025913699,0.022964524,0.026499197,-0.018660031,0.0005380616,0.015298841,-0.005714025,-0.005773659,-0.01452902,0.0029437528,-0.04579894,0.039618686,0.017629988,0.016079504,0.0013770041,0.012230398,-0.038187467,-0.03322158,0.03402393,0.032310806,-0.03773208,-0.0028543018,0.015721701,-0.016350567,0.006527216,-0.021771844,0.00026598136,-0.013325497,-0.019917767,-0.018800985,-0.03174699,0.003152472,-0.020492423,0.04189562,0.048964962,0.022574194,-0.032007214,0.02847254,0.0044752634,-0.008890892,-0.017109547,0.02710638,-0.009747454,-0.022379028,-0.0018974466,-0.021468252,-0.029405,-0.06236636,0.027713563,0.0044671316,-0.012403879,0.028060524,0.0036051485,-0.014084475,-0.0035346719,0.009487233,0.01414953,0.010522696,-0.009850458,0.015992764,0.062973544,0.0143338535,0.0047653015,0.02163089,-0.019191317,0.018757615,0.014995249,0.0039954805,-0.03692973,0.014897666,-0.0051258164,0.025176406,0.009568552,-0.011720799,-0.002905804,0.004643323,0.0074054627,0.014507335,0.034891333,-0.0021129423,0.03844769,-0.0034858803,0.0069500757,0.016903538,0.031486772,-0.054603092,0.030749477,0.03335169,-0.002455838,-0.028038839,-0.00458911,-0.0131303305,0.029405,-0.019115418,0.000029414658,0.0320289,-0.018454023,0.010181156,0.04618927,0.008495139,-0.025935384,-0.0162313,0.022487452,0.0034316676,0.01478924,0.0040605357,0.01818296,0.00025598588,-0.00021905343,-0.042806394,0.036951415,-0.046536233,-0.03684299,0.02688953,0.055253644,0.0077741095,-0.003122655,-0.05438624,0.04827104,0.03016398,-0.00052552496,0.0074163056,-0.0008463967,-0.006283259,0.005196293,-0.01249062,0.008690305,-0.009611922,-0.01563496,-0.034370888,0.03322158,0.0047571696,0.025545051,-0.014388067,0.0074163056,0.0017781785,0.051870767,-0.0045918208,0.01806369,0.028364116,-0.041526973,-0.018811828,-0.0004682627,-0.013921836,-0.014160372,-0.041483603,0.0024612593,-0.016350567,0.030445885,0.026672678,0.0052911653,0.019744286,0.010343795,-0.010647386,-0.030142294,0.007546416,0.012631573,-0.011959335,0.013986892,0.018334756,0.03131329,0.03816578,0.00007335664,-0.008603564,-0.020156303,0.0016141849,0.021598363,-0.012523147,-0.010137786,-0.06483846,0.034696165,0.018334756,0.04122338,0.035758737,-0.06466498,0.034219094,0.0063916845,0.0028543018,0.028689392,-0.0031551826,0.003624123,-0.028038839,-0.009590237,0.01410616,-0.01308696,-0.007508467,0.0110594025,0.017315555,0.0055893357,0.008348765,0.02320306,0.023745188,-0.013206228,-0.007969276,0.006489267,0.018627504,-0.01410616,-0.037103213,-0.04313167,0.005413144,-0.011915964,-0.043153357,0.021641733,0.006901284,0.012273769,-0.012154501,0.03432752,-0.029535111,-0.00015077923,0.0060664075,-0.015125359,-0.00032205766,-0.0070259734,0.05208762,0.023940355,0.013770041,-0.0038816335,-0.016285513,0.024113836,0.009552288,0.011623216,-0.004665008,-0.011438892,-0.0136833,0.011254569,0.03183373,0.015298841,-0.0228561,0.0011296584,0.019614177,0.0066302205,-0.028385801,-0.05052629,0.050699774,0.006548901,0.019484065,0.06336387,-0.021208031,-0.014355538,-0.011200356,-0.021240558,-0.011043139,-0.031465087,-0.02851591,0.0340673,-0.017738415,-0.012967692,0.024699332,-0.017640831,0.005838714,0.007850007,-0.014008577,-0.03352517,0.010208262,0.031161495,-0.0017605594,0.07299206,0.03486965,0.03352517,0.02039484,-0.0064946883,0.011053981,0.018811828,-0.020145461,-0.029838702,-0.0031443401,0.008999318,-0.028277375,0.017098704,0.008896314,-0.015222942,0.028060524,-0.022422398,-0.014832611,-0.015374739,0.0019625018,-0.014377223,-0.0017415849,-0.005315561,0.0060393014,0.02145741,0.020134619,0.0070422376,-0.005578493,-0.007248246,0.011948492,-0.0060826717,-0.018172117,-0.027496712,0.0022376317,0.032787878,-0.0040307185,-0.008012646,-0.012273769,-0.0022810018,0.0099534625,-0.0062019397,-0.042351007,0.02745334,0.020557478,-0.015179573,0.037255008,-0.0112762535,0.014247113,-0.044627942,-0.0059037693,-0.005399591,0.015461479,-0.01958165,0.016513206,-0.021739317,-0.015689172,-0.0067494884,0.024352372,0.002404336,-0.031031383,0.010045624,-0.021403197,0.016166246,0.022064593,0.014398909,0.03038083,0.010061888,0.047273528,0.0033639017,-0.009416756,-0.026542567,0.02128393,0.008169862,-0.0013404104,-0.027930414,-0.05495005,-0.01839981,-0.039922275,0.00050180685,0.023788558,-0.01410616,0.0010632478,-0.002758074,0.03113981,-0.017098704,-0.008603564,0.000316467,-0.00981251,0.038057357,0.028797818,0.030229034,0.055383753,0.025848644,-0.020850226,0.020177988,-0.0137808835,-0.008077702,-0.02936163,-0.0072265607,-0.0024341529,-0.032310806,0.016339725,-0.012946007,0.032202378,-0.027301546,0.013965207,0.038144097,-0.015830126,-0.005383327,0.001072735,0.00858188,-0.0057031824,0.0018554317,-0.004819514,0.006055565,-0.012458092,0.018692559,-0.0084138205,-0.00027767097,0.0071235565,-0.000913485,0.035715364,-0.00061328185,0.0031849996,-0.041310124,0.010029361,-0.0023365698,0.011926807,-0.027800303,-0.0461459,0.025740217,-0.049572147,0.008093965,-0.0075301523,0.042285953,-0.003819289,-0.009931778,-0.024677647,-0.0082674455,-0.0203081,-0.029535111,0.035021443,-0.024569223,-0.0037054422,-0.005600178,0.0058278716,-0.045061644,0.023680134,-0.035325035,0.0017741126,0.0064350544,-0.0043993653,-0.010099837,0.015114517,-0.008348765,0.014095318,-0.05009259,-0.01461576,-0.0077795307,-0.03768871,0.0050580506,-0.03122655,-0.016383097,-0.0441075,0.009275803,0.005676076,-0.01262073,-0.053952537,-0.033004727,-0.031508457,-0.0044888165,0.0002551388,-0.010885922,-0.027214805,-0.0076927906,0.010864237,-0.040312607,-0.00040727336,-0.0009690531,0.024569223,0.015418109,0.008972212,0.011883437,-0.0013736158,-0.005751974,0.0019611465,-0.0051122634,0.002179353,0.04295819,-0.025436627,-0.029860388,0.037450176,-0.0052450844,-0.020167146,-0.0026564251,0.012338824,0.00030257498,-0.03896813,0.054689832,0.0077470033,0.00018262923,0.02289947,-0.016003607,-0.00577908,-0.029773647,-0.005600178,-0.0145507045,-0.013412236,0.013824253,-0.009579395,-0.015233785,0.017499879,-0.008674041,-0.012609888,0.0005682175,0.023441598,0.021901954,0.020752644,0.028429171,0.012197871,-0.0030386252,-0.011395522,-0.005876663,0.0020899018,0.015797598,-0.008207812,-0.014474806,0.021956168,0.018074535,0.013368866,-0.018215487,-0.016946908,0.001414953,-0.006760331,0.022487452,0.03274451,-0.0035753315,0.029947128,-0.015775913,0.009492654,-0.012805054,-0.017640831,-0.02905804,-0.031768676,-0.005150212,0.0043614167,0.0098558795,-0.0034831697,0.032983042,-0.008760782,-0.007611471,0.0054754885,0.022791045,0.01912626,-0.013802568,0.00048113824,0.014431437,-0.020373154,0.0009670201,0.012653258,0.02901467,0.021435725,0.02502461,0.0012333402,-0.019939452,0.01308696,-0.006857914,-0.009579395,-0.019115418,-0.010316688,0.019820185,-0.026022125,-0.010137786,0.026564252,0.01534221,-0.03411067,-0.022292286,0.004670429,-0.01920216,-0.015277156,0.008560195,0.03207227,-0.0015220232,-0.005773659,-0.017998636,-0.008603564,-0.00904811,-0.0477506,0.007844586,-0.015906023,0.041353494,0.0028136421,-0.0094004925,-0.01359656,0.018117905,-0.023810243,-0.0025629082,-0.014713343,-0.03875128,-0.04558209,-0.032983042,0.04118001,-0.015613275,0.013314653,-0.008663199,0.0025601976,0.015201258,-0.01147142,-0.019006994,-0.020828541,0.005714025,-0.014442279,-0.022444082,0.014897666,0.029405,-0.030554311,-0.03016398,-0.012599045,0.007291616,-0.035259977,-0.033460114,0.032354176,-0.011417207,-0.03491302,0.00624531,-0.015916865,0.021522466,-0.042351007,0.0263474,-0.0046135057,0.06327713,0.0013166923,-0.011189514,0.038295895,0.011688271,-0.006272416,0.023788558,0.011742484,0.021294773,-0.010332952,0.018714244,0.02307295,-0.0228561,-0.0073729353,-0.02422226,0.027908728,-0.021804372,0.0010795116,0.021077922,-0.026911214,0.0066139568,-0.0005902414,0.0090860585,-0.045538716,-0.024027094,0.00058380363,-0.025892014,-0.0410499,0.0030196507,-0.04588568,0.014182058,0.0021657997,-0.0197985,-0.003092838,-0.0008098031,-0.019137103,-0.022313971,0.01712039,0.01627467,0.0060772505,-0.005497174,0.009118586,-0.03428415,-0.040074073,-0.023463283,0.004065957,-0.005128527,-0.010804603,0.03914161,0.0012075892,0.022032065,0.011449735,-0.010956398,0.0279521,-0.0023460572,0.033460114,0.03135666,0.02851591,0.0054077227,0.003870791,-0.0076927906,-0.0279521,0.010782918,0.039662056,-0.02706301,-0.0073458287,0.013954364,-0.0126641,0.028494226,-0.044280984,0.011178671,-0.034045614,-0.012718313,0.0053751953,-0.0064458973,0.007508467,-0.008863786,0.011699113,-0.028429171,-0.0077307397,0.028906243,0.0031849996,-0.001793087,-0.009129428,-0.0021210741,-0.0033476378,-0.008928841,-0.035108183,-0.0033476378,0.0068091224,0.024721019,0.015797598,0.04317504,-0.015721701,0.0066735907,0.017987793,-0.033720337,0.041960675,0.032289118,-0.0077686883,-0.0037677868,0.028906243,0.022964524,0.008272867,-0.00063496694,0.023788558,0.00083555415,-0.01806369,-0.039184984,0.019104576,-0.0003679691,0.005196293,-0.006212782,0.009367965,0.013152015,0.04274134,-0.011840067,-0.009758296,-0.0238753,-0.032939672,-0.04562546,0.007665684,-0.020112934,0.028364116,0.028927928,-0.024309002,-0.0014759423,-0.03322158,-0.035194922,-0.0060718292,0.00077185413,0.031963844,-0.0042069103,0.03534672,0.025176406,0.023398226,-0.02825569,-0.019104576,-0.0051908717,0.004412919,0.02719312,0.010186577,-0.0021468252,-0.030771162,-0.014561547,-0.0014271509,0.017564934,-0.025176406,-0.0045918208,-0.021132134]},{"id":"meeting-schedule","name":"Meeting Schedule","description":"Given an array of meeting time interval objects consisting of start and end times `[[start_1,end_1],[start_2,end_2],...] (start_i < end_i)`, determine if a person could add all meetings to their schedule without any conflicts.\n\n**Example 1:**\n\n```java\nInput: intervals = [(0,30),(5,10),(15,20)]\n\nOutput: false\n```\n\nExplanation:\n* `(0,30)` and `(5,10)` will conflict\n* `(0,30)` and `(15,20)` will conflict\n\n**Example 2:**\n\n```java\nInput: intervals = [(5,8),(9,15)]\n\nOutput: true\n```\n\n**Note:**\n* (0,8),(8,10) is not considered a conflict at 8\n\n**Constraints:**\n* `0 <= intervals.length <= 500`\n* `0 <= intervals[i].start < intervals[i].end <= 1,000,000`\n","difficulty":"Easy","concepts":[],"solutions":{"python":"\"\"\"\nDefinition of Interval:\nclass Interval(object):\n    def __init__(self, start, end):\n        self.start = start\n        self.end = end\n\"\"\"\n\nclass Solution:\n    def canAttendMeetings(self, intervals: List[Interval]) -> bool:\n        intervals.sort(key=lambda i: i.start)\n\n        for i in range(1, len(intervals)):\n            i1 = intervals[i - 1]\n            i2 = intervals[i]\n\n            if i1.end > i2.start:\n                return False\n        return True\n","javascript":"/**\n * Definition of Interval:\n * class Interval {\n *   constructor(start, end) {\n *     this.start = start;\n *     this.end = end;\n *   }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {Interval[]} intervals\n     * @returns {boolean}\n     */\n    canAttendMeetings(intervals) {\n        intervals.sort((a, b) => a.start - b.start);\n        for (let i = 1; i < intervals.length; i++) {\n            if (intervals[i].start < intervals[i - 1].end) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n","cpp":"/**\n * Definition of Interval:\n * class Interval {\n * public:\n *     int start, end;\n *     Interval(int start, int end) {\n *         this->start = start;\n *         this->end = end;\n *     }\n * }\n */\n\nclass Solution {\npublic:\n    bool canAttendMeetings(vector<Interval>& intervals) {\n        sort(intervals.begin(), intervals.end(),\n             [](const Interval& x, const Interval& y) { return x.start < y.start; });\n        for (int i = 1; i < intervals.size(); ++i) {\n            if (intervals[i].start < intervals[i - 1].end) {\n                return false;\n            }\n        }\n        return true;\n    }\n};\n","java":"/**\n * Definition of Interval:\n * public class Interval {\n *     public int start, end;\n *     public Interval(int start, int end) {\n *         this.start = start;\n *         this.end = end;\n *     }\n * }\n */\n\nclass Solution {\n    public boolean canAttendMeetings(List<Interval> intervals) {\n        Collections.sort(intervals, Comparator.comparingInt(i -> i.start));\n\n        for (int i = 1; i < intervals.size(); i++) {\n            Interval i1 = intervals.get(i - 1);\n            Interval i2 = intervals.get(i);\n\n            if (i1.end > i2.start) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n}\n","csharp":"/**\n * Definition of Interval:\n * public class Interval {\n *     public int start, end;\n *     public Interval(int start, int end) {\n *         this.start = start;\n *         this.end = end;\n *     }\n * }\n */\n\npublic class Solution {\n    public bool CanAttendMeetings(List<Interval> intervals) {\n        intervals.Sort((i1, i2) => i1.start.CompareTo(i2.start));\n\n        for (int i = 1; i < intervals.Count; i++) {\n            Interval i1 = intervals[i - 1];\n            Interval i2 = intervals[i];\n\n            if (i1.end > i2.start) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n}\n"},"starterCode":{"python":"\"\"\"\nDefinition of Interval:\nclass Interval(object):\n    def __init__(self, start, end):\n        self.start = start\n        self.end = end\n\"\"\"\n\nclass Solution:\n    def canAttendMeetings(self, intervals: List[Interval]) -> bool:\n","javascript":"/**\n * Definition of Interval:\n * class Interval {\n *   constructor(start, end) {\n *     this.start = start;\n *     this.end = end;\n *   }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {Interval[]} intervals\n     * @returns {boolean}\n     */\n    canAttendMeetings(intervals) {}\n}\n","cpp":"/**\n * Definition of Interval:\n * class Interval {\n * public:\n *     int start, end;\n *     Interval(int start, int end) {\n *         this->start = start;\n *         this->end = end;\n *     }\n * }\n */\n\nclass Solution {\npublic:\n    bool canAttendMeetings(vector<Interval>& intervals) {\n        \n    }\n};\n","java":"/**\n * Definition of Interval:\n * public class Interval {\n *     public int start, end;\n *     public Interval(int start, int end) {\n *         this.start = start;\n *         this.end = end;\n *     }\n * }\n */\n\nclass Solution {\n    public boolean canAttendMeetings(List<Interval> intervals) {\n\n    }\n}\n","csharp":"/**\n * Definition of Interval:\n * public class Interval {\n *     public int start, end;\n *     public Interval(int start, int end) {\n *         this.start = start;\n *         this.end = end;\n *     }\n * }\n */\n\npublic class Solution {\n    public bool CanAttendMeetings(List<Interval> intervals) {\n\n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/PaJxqZVPhbg","embedding":[-0.04385122,-0.010154355,0.040365137,-0.0063873245,-0.025824515,0.01512546,0.007872349,-0.0034058087,0.03272787,0.059400972,0.0033857408,-0.028737227,0.013221877,-0.021902675,-0.010137154,0.004979705,-0.023290226,0.06655661,0.01538921,0.069446385,0.041030247,0.09178482,-0.025090603,-0.0055502066,0.0114215,0.005633345,0.013153072,0.040112857,0.055226848,-0.020216972,0.0424522,-0.0043346654,-0.0364433,-0.010727724,-0.009827536,0.049447294,-0.00756273,0.065272264,-0.013898451,-0.04249807,-0.03369113,0.010819463,-0.015205732,-0.049309686,-0.0043117306,-0.018324856,0.023381965,0.03311776,0.037773512,0.0108768,-0.013348018,-0.02318702,0.008365446,-0.05068577,-0.010544246,-0.0032051296,0.019895885,0.019655071,0.03020505,0.0063299877,0.018359257,-0.0110144075,0.031351786,0.015687361,-0.055685543,-0.01126669,0.05687815,-0.014815841,0.0070008286,-0.04089264,-0.042268723,0.048208818,-0.011937531,0.015412144,-0.0468098,-0.004856431,0.012487965,0.05774967,-0.0149878515,-0.005504337,-0.015102525,0.003709694,0.009615389,0.025526363,0.0015050921,-0.012969594,-0.02493006,-0.012556769,-0.008273707,-0.04655752,-0.010888267,0.02584745,0.0056734807,0.026879514,0.069675736,0.0060605044,0.052887507,-0.022166423,-0.011903129,-0.035755258,-0.001988155,-0.031214178,-0.022143489,0.00897895,-0.034356236,0.000413542,0.020251373,0.017556543,-0.047658384,0.008399848,-0.012075139,0.00407665,-0.007362051,-0.011754054,-0.007946887,-0.024219083,-0.040686224,-0.0092426995,0.019012898,-0.034379173,0.02749875,0.005576008,-0.009856204,-0.015240134,-0.014001657,-0.018256051,-0.04109905,-0.0014054694,-0.06279531,0.014735569,0.0021888341,-0.026466688,0.03412689,0.019230777,-0.039241336,-0.014838776,-0.043209046,-0.021421045,-0.049309686,-0.011100413,-0.026879514,-0.02986103,-0.030342659,0.0055903425,0.005386797,0.0033771403,-0.0027048658,0.011461635,-0.022521913,0.0065708025,0.04641991,-0.012981062,-0.009317237,0.016065784,0.02044632,-0.0039648428,-0.043002635,0.038163405,0.05242881,-0.00074179546,-0.0055817417,-0.0146897,-0.024907125,-0.016639153,0.011238022,0.030067442,0.028232662,0.04802534,-0.025021799,-0.0604101,0.028278532,-0.029218856,0.023485173,0.0014305543,0.050089467,0.023645716,0.01582497,-0.013864049,-0.003961976,0.034929607,0.009758731,0.060822926,-0.02933353,-0.037635904,-0.0050943787,-0.010635985,0.037475362,0.008044359,0.032888416,-0.020687133,-0.04061742,-0.0054240655,0.018886756,0.07040965,0.01394432,-0.0614651,0.029539943,-0.01626073,0.035273626,-0.023508107,-0.013405355,-0.016730892,0.016146056,-0.00843425,0.0063873245,-0.014448885,-0.0063701235,0.026168536,-0.00041067516,-0.027017122,0.0419247,-0.009466313,0.019895885,-0.029310595,0.0560525,-0.020125233,-0.02105409,0.0015609956,-0.0070237634,0.027407013,-0.013680572,0.02096235,0.062153142,0.06316227,0.0266731,0.011111881,-0.016834097,-0.021891208,-0.0018663143,-0.0054269326,-0.0020569593,-0.03470026,-0.017636813,-0.022762727,0.01778589,-0.058254234,-0.022326967,-0.040066987,-0.00093889085,0.0098848725,0.043530133,0.032269176,0.00512018,0.01377231,0.0035290828,-0.029425269,-0.020125233,0.035158955,-0.019150507,-0.0031305917,0.027475815,-0.01882942,0.020939415,0.0003687476,-0.031214178,0.010819463,-0.019460125,0.009982345,-0.008503054,0.012935192,-0.025962124,0.050364684,-0.018405126,-0.012510899,0.006157977,-0.051373813,0.00255579,0.020366047,-0.026007993,0.031076571,0.011513239,0.019288115,-0.006026102,-0.010527045,0.0074251215,-0.032590263,0.016421273,0.02754462,-0.0024153145,-0.081647664,-0.043736547,0.028393205,0.0060375696,-0.022109088,0.027475815,-0.0029700487,-0.031260047,-0.01691437,-0.003853036,0.005203319,-0.030457333,-0.0034115424,-0.0020569593,-0.02043485,-0.039172534,-0.016650619,0.050456423,-0.039172534,0.06540988,0.00062532997,0.029172987,-0.00075899647,-0.062244877,0.03291135,-0.012224215,0.005048509,-0.0031850617,0.03795699,-0.006123575,-0.0031191243,0.0008837041,0.03548004,-0.019815614,0.01708638,-0.029906899,-0.034677323,0.0023393433,0.008824141,0.026741905,-0.031053636,-0.030961897,0.03291135,-0.0018878157,0.051970117,0.03795699,0.021868274,-0.006633873,-0.0027148996,-0.0049911723,-0.03882851,-0.02405854,0.016971705,0.010383703,0.016616218,-0.0032452655,0.046924476,0.00073964533,0.017029043,-0.036580905,0.0635751,0.020343112,-0.054080114,-0.025526363,-0.014597961,-0.0028338735,-0.018554203,-0.023462238,0.010028214,0.022384305,0.025526363,-0.010234627,-0.041351333,0.007511127,0.0013302148,-0.021524252,-0.007906751,0.027957445,0.011364163,-0.055547934,0.000153824,-0.034493845,0.0479336,-0.01826752,-0.02531995,-0.01839366,0.012763182,-0.040938508,-0.013714973,-0.057015758,0.03770471,0.040135793,-0.009982345,0.027269404,-0.028737227,0.007820746,0.016673554,-0.031672873,0.023049412,0.028209727,0.022579249,-0.024815386,0.017418934,0.012281552,-0.015286003,0.028255597,0.001599698,-0.03499841,-0.0402734,-0.028324401,-0.019184908,0.042612743,0.027957445,0.011633646,-0.0424522,0.0089388145,-0.0050427755,0.005725084,0.046488713,-0.008503054,-0.032337982,-0.033370044,0.0032223307,-0.036672644,0.035984606,-0.043392524,-0.00397631,0.0053093918,0.049355555,0.021386644,0.0025385888,-0.01159351,-0.053208593,-0.0015280269,0.024677778,-0.0023364765,0.033438846,-0.055272717,0.0026159936,0.0396771,-0.061144013,0.013141605,-0.0544012,0.024723647,0.009993812,0.028095054,0.0016699356,0.03504428,-0.03364526,0.008457185,-0.0560525,-0.045364913,0.018187247,0.031879287,-0.0007690304,-0.02575571,0.0016154656,0.0604101,-0.0044235378,-0.023060879,-0.013061333,-0.05426359,-0.06554748,0.01590524,-0.05164903,-0.045571323,0.00963259,-0.0062210476,0.03570939,0.06687769,0.065868564,0.0021888341,0.016788227,0.034103956,0.012017802,-0.0054470003,0.03403515,-0.03169581,-0.0047016214,0.04802534,-0.003365673,-0.087748304,-0.019574799,-0.015721763,0.07279486,0.0046758195,0.016409805,0.014919047,-0.013061333,0.0041855895,-0.02205175,0.003325537,0.036099277,0.044172306,0.020950884,-0.009718595,0.012453563,0.036236886,0.011822858,-0.044355784,-0.0074996594,-0.0014413049,-0.052337073,0.057061628,0.0429797,0.047245562,-0.005816823,-0.01822165,-0.00947778,0.023049412,-0.03713134,0.018359257,0.026512558,-0.009982345,-0.010549979,0.010693322,0.019139038,-0.014850243,-0.0007220859,0.021776535,-0.016857032,-0.026948318,-0.08618875,0.02405854,-0.0030187848,0.017499205,0.012212748,-0.026696036,-0.056602933,-0.02846201,0.011822858,-0.050960988,0.018370725,0.009311504,0.029241791,-0.021501318,0.003652357,0.015847905,0.018772082,-0.004853564,0.02889777,-0.011530439,-0.018416595,-0.03552591,0.0030245185,-0.010469708,0.004509543,-0.009345906,-0.011392831,-0.030617876,-0.0272006,0.031305917,0.013084268,-0.010951337,0.010871066,0.014173668,0.018382192,0.011616445,0.008812673,-0.00930577,-0.005037042,0.018416595,0.04894273,-0.032934282,0.032016896,-0.018061107,-0.01982708,0.0049940394,0.0046242164,-0.018657409,0.001448472,-0.03848449,-0.028553749,0.03490667,-0.02976929,0.002134364,0.00023597696,-0.00045726134,-0.040135793,0.020343112,0.015549752,-0.00865213,-0.042337526,-0.015928175,0.034493845,-0.025572233,0.029310595,-0.00561041,-0.02986103,-0.01817578,0.017281326,0.023175552,-0.013623235,-0.016467141,-0.032200374,0.009105091,-0.042773288,0.013474159,-0.042199917,-0.034310367,0.008611994,-0.006140776,-0.016226327,-0.043484263,-0.008514522,-0.030617876,-0.011960465,-0.022453109,0.050364684,0.019081702,0.00075684633,0.02392093,0.009902073,0.03025092,-0.013542963,-0.025663972,-0.03848449,-0.006760014,0.025251146,-0.02933353,0.012350356,0.014219537,0.010091284,0.015974045,-0.043117307,-0.046740998,0.014219537,-0.006123575,0.014448885,-0.015790567,-0.016467141,0.014093396,0.007958354,0.034379173,-0.039264273,-0.029539943,0.004340399,-0.02148985,0.022739792,0.044608064,-0.01573323,0.029471138,0.0043948693,-0.010704789,0.027636359,0.049493164,0.015217199,-0.020411916,-0.037062537,0.0055846088,0.022946205,0.020560993,0.0030818554,-0.012407693,-0.009718595,-0.015423612,-0.038369816,-0.019574799,0.039952315,-0.0017975101,-0.011891661,0.013003997,-0.03570939,-0.040686224,-0.032590263,-0.0065191993,0.013818179,-0.018129911,-0.014506222,0.028072119,0.009070689,-0.01834779,-0.022854466,-0.00913376,-0.023553977,0.027040057,0.0009224065,-0.005452734,-0.018233117,0.012923725,0.01100294,0.00843425,0.023221422,0.047199693,0.022154957,0.01943719,-0.0070352308,0.021856805,0.015974045,0.02323289,0.015182797,-0.04742904,0.036259823,0.002647529,-0.012510899,0.018118443,0.004283062,0.0034144092,0.017556543,0.0031535265,0.01800377,-0.0034918138,0.03359939,-0.00974153,0.053162724,-0.009661258,0.012430628,0.014575026,0.014815841,-0.017717086,0.008583326,-0.005295058,-0.005894228,-0.030617876,0.00035280077,0.00071921904,0.026856579,0.018118443,0.03770471,0.00946058,-0.0326132,0.0069492254,0.0065880036,0.017166652,0.020022027,-0.022705391,0.018989963,0.0115648415,0.010142888,0.002859675,-0.037888188,0.0074652573,0.017877629,-0.007866615,0.020148167,0.015802035,-0.012923725,0.010372235,-0.017235456,0.019712407,-0.012763182,-0.014850243,0.000013281543,0.01856567,0.029654616,0.0009697094,0.014127798,0.04355307,0.03997525,-0.010641718,-0.04091557,-0.0049854387,0.004251527,-0.00020766689,-0.0077404743,-0.0057394183,0.010945604,-0.01399019,0.03653504,-0.04694741,-0.0018018103,0.050089467,0.0114215,0.027773967,-0.002964315,0.0014198036,0.021455448,-0.045296106,0.04999773,-0.04664926,0.04119079,-0.013370953,0.005705016,-0.010383703,-0.023347564,0.03784232,0.0027536019,0.0012198414,0.010475442,-0.042245787,0.008887211,0.010022481,-0.024081474,-0.033324175,0.011553374,0.00424866,0.01839366,-0.021168763,-0.01651301,-0.0075856647,0.02371452,0.02493006,-0.02981516,-0.0032567328,-0.0074767247,0.026994187,0.013130138,-0.017625347,-0.016673554,-0.02483832,0.008514522,0.020102298,0.015607089,0.0070237634,0.0025887585,-0.0009718595,0.011690983,-0.0032509991,-0.015091058,-0.01364617,-0.023255825,-0.003328404,0.0092426995,-0.024104409,-0.018416595,0.0043145977,-0.027017122,-0.006507732,-0.013898451,0.011329761,-0.038025796,-0.0006081289,0.010945604,0.0031477928,-0.004440739,-0.0049883057,0.015836436,-0.034723192,-0.027728098,-0.038186338,0.009168161,-0.011903129,0.0077003385,0.015813502,-0.029448204,0.04511263,0.025709841,0.027636359,0.026558427,0.0013287814,0.02205175,0.03256733,0.027865706,0.025870385,-0.004779026,-0.014964917,-0.011088946,0.035411235,0.013026931,0.004492342,0.05265816,0.010366501,0.01290079,0.0370396,0.027429946,0.03146646,-0.012694377,0.021742132,0.0056992825,-0.0022132022,0.056235977,0.0027722365,0.026879514,0.020411916,-0.019219311,-0.0058827605,0.016799696,0.00006235382,-0.018106977,0.015859371,0.0045840805,0.012476497,0.04201644,0.061740316,0.007144171,0.021340774,0.020767406,-0.0011410032,0.033186566,-0.013187475,0.021065557,0.027085926,-0.024196148,0.03639743,0.018668877,-0.010727724,-0.01882942,-0.0069664265,-0.0021472648,-0.034012217,-0.019161973,-0.008084496,0.04162655,-0.00012542435,0.023301695,-0.001790343,0.0075856647,0.020366047,0.019712407,0.004380535,0.022326967,0.036076345,0.027911576,0.005234854,0.022063218,-0.038232207,-0.01983855,-0.016685022,0.020950884,0.05949271,0.0034832133,0.04389709,0.007809278,0.027017122,-0.024127344,-0.021421045,0.0408697,0.010131421,-0.014116331,0.03417276,0.033415914,-0.018049639,-0.02536582,-0.021868274,-0.0009238399,0.005707883,-0.016409805,0.007826479,0.013932853,0.0017229721,-0.031420592,-0.012969594,-0.035113085,-0.032108635,0.044470455,-0.035227757,0.019070234,0.0050599766,-0.008503054,0.0087553365,0.004349,-0.060089014,-0.013864049,-0.024998864,0.011645113,0.0063127866,-0.029929833,-0.037635904,0.032246243,0.032131568,-0.017728552,0.034058087,0.012969594,-0.007895283,0.0038817045,-0.007872349,-0.017223988,0.027177665,-0.009128026,-0.0419247,0.022063218,-0.0053896634,-0.012143943,-0.061694447,-0.052107725,-0.032406785,-0.037314817,0.031397656,-0.01826752,-0.036168084,-0.027085926,0.020847676,-0.03582406,0.041420136,-0.0064045256,-0.014999319,-0.018944094,-0.014724102,0.029172987,0.032269176,-0.016857032,0.03474613,-0.021719197,0.010079817,-0.05242881,0.046190564,0.02676484,0.012063672,-0.023290226,-0.028989509,-0.0029815158,-0.04885099,-0.008818407,0.04022753,0.019723875,-0.025297016,0.011324027,0.01202927,-0.007287513,0.01272878,0.006393058,-0.0018204448,0.016547414,-0.02488419,0.022556314,0.012442095,-0.007906751,0.02332463,0.049584903,0.05068577,0.035204824,0.023026478,0.0090592215,0.030021572,-0.0070581655,0.0058311573,0.00097544305,-0.005295058,0.0034545448,0.029654616,-0.020343112,-0.028347336,0.0020655598,0.017281326,0.036099277,-0.040066987,-0.07527181,-0.007138437,0.005105846,-0.018600073,-0.026076797,-0.036145147,-0.013107203,0.026741905,0.0111692175,-0.016042849,0.011616445,0.0315582,0.010079817,-0.018233117,0.0010284797,0.040158726,0.010234627,0.03387461,0.006651074,0.016501544,-0.02166186,0.019517463,0.043828286,-0.015217199,-0.00043360988,0.01044104,-0.0005644096,-0.010951337,0.03857623,-0.044608064,-0.008141832,0.0068574864,-0.0064962646,-0.005759486,0.0020125234,0.0028224061,-0.005802489,-0.027108861,0.037681773,-0.025274081,-0.0010119954,-0.008457185,0.017292792,0.025480494,0.0081533,0.031260047,0.022120554,-0.016019914,0.0066797426,0.015710296,-0.022911804,-0.010435306,0.0086635975,-0.0018706146,0.009925008,-0.014586493,-0.065364,-0.029264726,0.012831986,0.02401267,0.03307189,-0.008525989,-0.03242972,-0.03238385,-0.01926518,-0.023553977,-0.0032108633,-0.018668877,0.028049184,0.017292792,0.006484797,-0.018382192,-0.01268291,0.0034832133,0.023829192,0.01895556,0.02366865,0.005796755,-0.011450168,0.0020755937,-0.0036982265,-0.046144694,0.0050255745,0.029562877,0.016730892,0.012533834,0.017671216,-0.0016111654,0.00445794,-0.0026632964,-0.010314899,0.024356691,0.014173668,-0.044264045,-0.0030187848,0.03073255,0.020044962,0.027636359,-0.03722308,0.009592454,-0.030365594,0.01377231,-0.027567554,-0.01490758,0.035342433,-0.003273934,0.0108768,-0.0008385514,0.003144926,-0.048575774,-0.010911202,0.022120554,-0.03311776,0.02035458,-0.013198942,0.037200145,-0.014380081,0.0023307428,0.012935192,0.00019960389,0.017682683,-0.045823608,0.014506222,0.014414483,-0.0021773668,0.0018777817,-0.029058313,-0.03286548,-0.025090603,0.01590524,0.010418105,0.034012217,-0.02088208,0.003236665,0.0077175396,0.011799923,0.01926518,-0.0073161814,-0.013520028,0.025778646,-0.04995186,-0.00522052,0.04671806,0.012958127,-0.0048764986,-0.010056882,0.045915347,0.020973818,0.012671443,-0.0010578647,-0.017648282,-0.026696036,-0.01983855,0.0009998112,-0.0037297618,-0.026466688,-0.010005279,0.013015464,0.026512558,-0.021604523,-0.0029327797,0.0012958127,0.009798867,0.02091648,-0.0021788,0.006375857,0.03412689,-0.00767167,-0.025480494,0.016696488,0.015435079,-0.017373065,0.008789739,0.015492416,-0.011346961,-0.008973217,0.0089388145,-0.022258162,-0.06307053,0.024333756,0.030847223,-0.008159033,-0.010991473,-0.012361824,-0.0012807618,-0.0038387019,-0.010412371,-0.026168536,-0.023783322,0.02531995,-0.015572687,-0.012166878,-0.0020311577,-0.010779327,0.04249807,-0.006565069,-0.040411007,-0.028622553,0.016329534,0.0006708411,0.01699464,0.01447182,0.0012291586,0.0027751033,0.056557063,0.0017860427,0.015182797,-0.0027851372,-0.019379854,-0.030273855,-0.025778646,-0.02296914,0.030801354,-0.019758277,0.029517008,0.020320177,-0.015033721,0.020755937,0.0010743492,0.0054326663,0.008835608,-0.062749445,-0.005834024,-0.047704253,-0.013416822,-0.019012898,-0.0631164,0.0069836276,-0.004305997,0.020469254,-0.0077232732,-0.0026948317,-0.015767632,0.06256597,0.0028195393,-0.032246243,0.016409805,-0.01538921,-0.011582043,0.028255597,-0.028645488,0.0057136165,0.05678641,-0.012831986,-0.02205175,-0.005851225,-0.0008650696,0.03692493,0.004042248,-0.013038399,-0.032796677,-0.02323289,-0.044241108,-0.02136371,-0.00085575244,-0.014976384,0.012315954,0.02628321,-0.017980834,0.0034631453,-0.010962805,-0.026604297,0.0479336,0.022579249,-0.023508107,0.055593804,-0.0012313088,-0.004002112,0.017934965,0.003362806,-0.034333304,0.00096540916,0.013290681,0.038392752,0.011650847,-0.008749602,0.010475442,0.02981516,0.013221877,0.0043690675,-0.021856805,-0.007792077,-0.0037412292,0.016685022,-0.02681071,0.006565069,0.0066109383,-0.016547414,-0.037337754,0.014724102,-0.0163066,0.034493845,-0.025067668,0.0013832514,0.0085718585,-0.00015328647,-0.022843,0.0006608071,0.026581362,0.015033721,-0.031305917,-0.023095282,0.011054544,0.0066224057,0.010412371,0.0070352308,0.020859145,0.020090831,0.009540851,0.02981516,-0.0217536,-0.005702149,-0.008067294,0.0039562425,0.0065191993,-0.03164994,0.028874835,-0.043025568,-0.01399019,-0.07187747,0.015721763,-0.010899735,0.013451224,0.003672425,-0.0017874761,0.006674009,-0.02541169,0.008302375,-0.0045840805,-0.016409805,-0.015435079,0.009139493,0.005145982,-0.005421199,-0.006731346,0.0005751602,-0.012075139,-0.021203166,0.014724102,0.016123122,0.0041368534,0.0074021867,-0.015091058,-0.051970117,-0.03029679,-0.008554657,0.0293794,0.00865213,0.03160407,0.016925836,-0.014460352,0.024150278,0.0063471887,-0.053850766,-0.03965416,-0.055456195,0.013015464,0.021845339,0.017418934,0.021478383,-0.015939644,-0.015710296,-0.029494073,-0.050364684,0.008491587,-0.040066987,-0.020905014,-0.0038071666,-0.0034488111,-0.036259823,-0.038232207,-0.008835608,-0.020687133,-0.002372312,0.01377231,0.0011840059,-0.020870611,-0.033530585,0.00071456045,0.027017122,-0.0016943038,0.025572233,-0.015974045,0.031489395,0.03795699,0.0019422857,-0.018450996,-0.031122439,-0.0062611834,0.03302602,-0.030847223,0.011272424,0.027017122,-0.014701167,0.0113526955,0.0024024139,0.0058454913,0.023336096,-0.014884645,0.00011386739,-0.0005683515,0.04646578,0.014185135,0.04268155,-0.02240724,0.059125755,-0.0070925676,-0.027819837,-0.020388981,-0.00015669085,-0.016088719,0.0028166724,-0.008646396,0.022636587,-0.022693923,-0.02454017,-0.022223761,-0.01590524,-0.0013087135,-0.010165823,0.055410326,-0.020079363,0.018187247,-0.047153823,0.0023794791,-0.013244811,-0.020664198,0.015194264,0.00413972,-0.0025199542,0.029035378,-0.044906218,0.03871384,0.004257261,0.06430901,-0.02044632,0.026925383,0.008250772,-0.0000800924,-0.027773967,-0.0027650693,-0.004922368,-0.016788227,0.008405581,0.04908034,-0.019425724,0.012648508,0.02637495,-0.021982946,0.038209274,0.010555713,0.013703506,-0.03394341,0.0068746875,-0.0066109383,-0.013313616,0.01595111,0.02976929,-0.015033721,-0.00658227,-0.017281326,0.0396771,-0.032498524,-0.005429799,0.0022246696,-0.035342433,-0.025044734,-0.0015323272,0.020595394,0.00532946,0.040732093,-0.030136246,0.024861256,-0.0056562796,-0.004939569,0.011822858,0.01822165,0.031282984,0.008910146,0.008101696,0.01163938,-0.015435079,-0.0059400974,-0.009798867,0.022498978,0.007430855,-0.021214632,0.0018046772,0.0062382487,-0.021914143,-0.010481175,0.0070581655,0.0136003,0.04119079,0.0051660496,0.001394002,-0.0062382487,-0.005888494,0.01061305,-0.015159862,-0.0019996224,0.016535945,0.00016152865,-0.012132476,-0.0025486227,0.017705617,-0.012992529,-0.022865934,-0.023852127,0.011209353,-0.0006780082,-0.0004640701,0.006616672,0.006215314,0.030526137,0.011937531,-0.005360995,0.005403998,-0.0088470755,0.0380946,-0.01122082,0.0001787297,-0.010527045,-0.032108635,0.04162655,-0.002171633,0.0114387,0.011507505,-0.011392831,-0.004664352,-0.037773512]},{"id":"meeting-schedule-ii","name":"Meeting Schedule II","description":"Given an array of meeting time interval objects consisting of start and end times `[[start_1,end_1],[start_2,end_2],...] (start_i < end_i)`, find the minimum number of days required to schedule all meetings without any conflicts.\n\n**Example 1:**\n\n```java\nInput: intervals = [(0,40),(5,10),(15,20)]\n\nOutput: 2\n```\n\nExplanation:\nday1: (0,40)\nday2: (5,10),(15,20)\n\n**Example 2:**\n\n```java\nInput: intervals = [(4,9)]\n\nOutput: 1\n```\n\n**Note:**\n* (0,8),(8,10) is not considered a conflict at 8\n\n**Constraints:**\n* `0 <= intervals.length <= 500`\n* `0 <= intervals[i].start < intervals[i].end <= 1,000,000`\n","difficulty":"Medium","concepts":[],"solutions":{"python":"\"\"\"\nDefinition of Interval:\nclass Interval(object):\n    def __init__(self, start, end):\n        self.start = start\n        self.end = end\n\"\"\"\n\nclass Solution:\n    def minMeetingRooms(self, intervals: List[Interval]) -> int:\n        time = []\n        for i in intervals:\n            start, end = i.start, i.end\n            time.append((start, 1))\n            time.append((end, -1))\n        \n        time.sort(key=lambda x: (x[0], x[1]))\n        \n        count = 0\n        max_count = 0\n        for t in time:\n            count += t[1]\n            max_count = max(max_count, count)\n        return max_count\n","javascript":"/**\n * Definition of Interval:\n * class Interval {\n *   constructor(start, end) {\n *     this.start = start;\n *     this.end = end;\n *   }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {Interval[]} intervals\n     * @returns {number}\n     */\n    minMeetingRooms(intervals) {\n        const time = [];\n        for (const interval of intervals) {\n            const { start, end } = interval;\n            time.push([start, 1]);\n            time.push([end, -1]);\n        }\n\n        time.sort((a, b) => a[0] - b[0] || a[1] - b[1]);\n\n        let count = 0;\n        let maxCount = 0;\n        for (const t of time) {\n            count += t[1];\n            maxCount = Math.max(maxCount, count);\n        }\n\n        return maxCount;\n    }\n}\n","cpp":"/**\n * Definition of Interval:\n * class Interval {\n * public:\n *     int start, end;\n *     Interval(int start, int end) {\n *         this->start = start;\n *         this->end = end;\n *     }\n * }\n */\n\nclass Solution {\npublic:\n    int minMeetingRooms(vector<Interval>& intervals) {\n        vector<int> starts, ends;\n        for (const auto& i : intervals) {\n            starts.emplace_back(i.start);\n            ends.emplace_back(i.end);\n        }\n        \n        sort(starts.begin(), starts.end());\n        sort(ends.begin(), ends.end());\n        \n        int min_rooms = 0, cnt_rooms = 0;\n        int s = 0, e = 0;\n        while (s < starts.size()) {\n            if (starts[s] < ends[e]) {\n                ++cnt_rooms;  \n                \n                min_rooms = max(min_rooms, cnt_rooms);\n                ++s;\n            } else {\n                --cnt_rooms;  \n                ++e;\n            }\n        }\n        return min_rooms;\n    }\n};\n","java":"/**\n * Definition of Interval:\n * public class Interval {\n *     public int start, end;\n *     public Interval(int start, int end) {\n *         this.start = start;\n *         this.end = end;\n *     }\n * }\n */\n\nclass Solution {\n    public int minMeetingRooms(List<Interval> intervals) {\n        if (intervals.size() == 0) {\n            return 0;\n        }\n\n        int len = intervals.size();\n        int[] startTime = new int[len];\n        int[] endTime = new int[len];\n\n        for (int i = 0; i < len; i++) {\n            startTime[i] = intervals.get(i).start;\n            endTime[i] = intervals.get(i).end;\n        }\n\n        Arrays.sort(startTime);\n        Arrays.sort(endTime);\n\n        int res = 0;\n        int count = 0;\n        int s = 0;\n        int e = 0;\n\n        while (s < len) {\n            if (startTime[s] < endTime[e]) {\n                s++;\n                count++;\n            } else {\n                e++;\n                count--;\n            }\n            res = Math.max(res, count);\n        }\n\n        return res;\n    }\n}\n","csharp":"/**\n * Definition of Interval:\n * public class Interval {\n *     public int start, end;\n *     public Interval(int start, int end) {\n *         this.start = start;\n *         this.end = end;\n *     }\n * }\n */\n\npublic class Solution {\n    public int MinMeetingRooms(List<Interval> intervals) {\n        if (intervals == null || intervals.Count == 0) {\n            return 0;\n        }    \n\n        int result = 0;\n        List<int> start = new List<int>(), end = new List<int>();\n\n        foreach (Interval interval in intervals) {\n            start.Add(interval.start);\n            end.Add(interval.end);\n        }\n\n        start.Sort();\n        end.Sort();\n\n        for (int s = 0, e = 0; s < start.Count; s++) {\n            if (start[s] < end[e]) {\n                result++;\n            } else {\n                e++;\n            }       \n        }\n        return result;\n    }\n}\n"},"starterCode":{"python":"\"\"\"\nDefinition of Interval:\nclass Interval(object):\n    def __init__(self, start, end):\n        self.start = start\n        self.end = end\n\"\"\"\n\nclass Solution:\n    def minMeetingRooms(self, intervals: List[Interval]) -> int:\n        ","javascript":"/**\n * Definition of Interval:\n * class Interval {\n *   constructor(start, end) {\n *     this.start = start;\n *     this.end = end;\n *   }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {Interval[]} intervals\n     * @returns {number}\n     */\n    minMeetingRooms(intervals) {}\n}\n","cpp":"/**\n * Definition of Interval:\n * class Interval {\n * public:\n *     int start, end;\n *     Interval(int start, int end) {\n *         this->start = start;\n *         this->end = end;\n *     }\n * }\n */\n\nclass Solution {\npublic:\n    int minMeetingRooms(vector<Interval>& intervals) {\n        \n    }\n};\n","java":"/**\n * Definition of Interval:\n * public class Interval {\n *     public int start, end;\n *     public Interval(int start, int end) {\n *         this.start = start;\n *         this.end = end;\n *     }\n * }\n */\n\nclass Solution {\n    public int minMeetingRooms(List<Interval> intervals) {\n\n    }\n}\n","csharp":"/**\n * Definition of Interval:\n * public class Interval {\n *     public int start, end;\n *     public Interval(int start, int end) {\n *         this.start = start;\n *         this.end = end;\n *     }\n * }\n */\n\npublic class Solution {\n    public int MinMeetingRooms(List<Interval> intervals) {\n\n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/FdzJmTCVyJU","embedding":[-0.06814292,-0.036383223,0.045587055,-0.037549905,-0.039062273,-0.0013665314,0.0035351573,-0.0023725254,0.02899423,0.026401602,0.011882882,-0.028605336,-0.00084462983,-0.033790592,0.020200899,-0.0035162526,-0.0037350056,0.060105775,0.022004936,0.07000098,0.007270163,0.039861664,-0.027892364,-0.006324934,0.035432592,0.006994696,0.0210327,0.018991005,0.058550198,-0.020957083,0.034006648,-0.0025561699,0.009895199,-0.012196157,0.016549613,0.0002921771,-0.01331963,0.05967367,-0.0010215227,-0.037355457,-0.017273389,0.008264004,-0.020265713,-0.043404926,-0.014389089,-0.019887622,0.025558997,0.0177271,0.046710525,-0.010186871,-0.036966562,-0.022944763,0.0002531864,-0.084562905,-0.0104029225,-0.00072647614,0.026790496,0.013859761,0.04878463,0.016365968,0.037139405,-0.016344363,0.02201574,0.03283996,0.005493132,-0.0024481437,0.048438944,-0.007205347,0.03971043,-0.036858536,-0.06567992,0.034395542,-0.031608466,0.0072269524,-0.010100449,-0.00013992768,-0.013881366,0.05409952,-0.022383027,-0.017953953,-0.025040472,-0.017781112,0.032926384,0.04964884,-0.033509724,-0.05885267,-0.016031086,0.008485458,-0.0040077716,-0.033336885,-0.04874142,0.023376869,0.0067354334,0.014129826,0.038284484,-0.016560415,0.056864988,-0.005876625,-0.006519381,0.00027782988,-0.0042373273,-0.033336885,-0.007729274,-0.027028155,-0.07419239,-0.010624376,-0.018634519,0.012693078,-0.08110607,0.037096195,-0.00404018,0.004801764,-0.0116884345,-0.03517333,-0.018623715,0.01039212,-0.06701945,-0.019369097,0.0035810682,-0.046667315,0.030398572,0.0069298805,0.019433912,-0.008679905,-0.0064167557,-0.02577505,-0.037463482,-0.03121957,-0.054488413,-0.004539801,0.044420373,-0.025515787,0.035972722,0.0007231003,-0.030528203,-0.025580604,0.01624714,0.004223824,-0.006081875,-0.018407663,-0.027200995,0.00063566666,-0.043772213,0.0047639553,-0.00197958,-0.01674406,-0.004466883,0.033401698,-0.03456838,0.029944861,0.037852377,-0.044982105,0.0008655599,0.03621038,0.044463582,-0.02008207,-0.037420273,0.058247723,0.06524782,0.0072107483,-0.017997164,-0.017770309,-0.021745672,-0.025947891,0.020470964,0.045759898,0.0032569896,0.06593919,-0.0371178,-0.031910937,0.03456838,-0.049605627,0.01806198,0.0035270553,0.02251266,0.013978589,-0.023333658,-0.007718472,-0.017748704,0.065420665,-0.01109429,0.03357454,-0.055914357,-0.019487925,0.022663895,0.022966368,0.015210088,-0.03770114,0.016884495,-0.024737999,-0.035389382,-0.000023039962,-0.0008912161,0.061099615,0.030376965,-0.017046534,0.030247334,-0.031154754,0.04038019,-0.014313471,-0.041028347,-0.009679147,0.017565059,-0.014399892,-0.0063519403,-0.04900068,0.0049016885,0.022112962,0.00037471586,-0.010381318,0.034676407,0.010138258,0.04133082,-0.043815423,0.027913969,-0.029793624,-0.0030868484,0.011926092,0.011267132,0.010980862,-0.017511046,0.0011457528,0.03707459,0.04964884,0.055439044,0.0027951777,-0.02107591,-0.024629973,0.01831044,0.011234724,-0.024997262,-0.033401698,-0.045457423,-0.027719522,0.014745575,-0.008555675,-0.026660865,-0.035648644,-0.030204125,0.009495502,0.04519816,0.013103577,-0.0048800833,0.011893684,0.017457033,-0.04085551,-0.03802522,0.018180808,-0.013017156,-0.00919843,0.016722456,-0.012185355,0.027784336,-0.02519171,-0.01377334,0.025105288,-0.003764713,0.019250268,-0.0127794985,0.01175325,-0.023895394,0.040488217,-0.020233307,-0.03277515,0.0031948746,-0.062828034,-0.032710332,0.029642388,-0.035540618,0.037722748,-0.019433912,0.0007494317,0.004871981,0.0010532554,-0.0024981056,-0.033207253,0.00399967,0.044117898,-0.013308827,-0.09748284,-0.015771825,0.027568284,0.02532134,-0.02396021,0.038543746,-0.020870661,0.012898328,0.010926849,-0.008647497,0.00017908718,-0.036858536,0.016484797,-0.02841089,-0.028151626,-0.034957275,-0.0021942821,0.030593019,-0.0367073,0.07734676,-0.0130819725,0.0027951777,-0.03476283,-0.026207155,0.028108416,-0.046667315,0.014367484,-0.010743205,0.034827646,0.009517108,0.013611301,-0.0045587053,0.060062565,-0.007972334,0.0020511474,-0.024543552,-0.019379899,0.0034541376,-0.0034487362,-0.0058388156,-0.02717939,-0.018699335,0.011483184,0.032018963,0.037787564,0.034460355,0.00676244,0.0020876061,-0.014637549,-0.030593019,-0.049432788,-0.0139029715,0.003356914,0.01290913,0.039494377,-0.015663799,0.022361422,-0.0026749987,0.026617654,-0.027309023,0.059155144,0.04433395,-0.030160913,-0.0313492,-0.0072107483,0.043815423,-0.0169061,0.04627842,0.024846025,0.04792042,0.018569702,-0.0042292257,-0.028756574,0.00713513,-0.012347394,0.0035702658,0.029059047,0.047185842,0.031414017,-0.06334656,0.02194012,-0.07069234,0.02668247,0.010786415,-0.05967367,0.0009398279,0.011061883,-0.034611594,0.0007622598,-0.04437716,0.029275099,0.02070862,-0.024543552,0.0037377062,-0.003121957,0.007707669,0.010602771,-0.023031184,0.051506888,0.02066541,0.008609688,-0.036469642,0.010986264,0.038327694,-0.015253299,0.06066751,-0.013352037,-0.02450034,-0.02800039,-0.04869821,-0.012098934,0.04161169,0.03307762,0.0177271,-0.04359937,0.019477123,0.014853601,0.032883175,0.046148792,-0.01241221,-0.004250831,-0.025710234,0.005101537,-0.0059846514,0.028518915,-0.074451655,-0.014972431,0.005741592,0.04029377,0.013189998,-0.00779409,0.0055417437,-0.047013,-0.016463192,0.012768696,-0.019703979,0.010705396,-0.034957275,0.00107216,0.0052284678,-0.03984006,0.01579343,-0.013189998,0.037420273,0.026898522,0.026898522,0.029685598,0.040185746,-0.042713556,-0.007772485,-0.03426591,-0.037873983,0.003575667,0.016484797,0.02251266,-0.011439974,0.04977847,0.026444813,0.0018634519,-0.02668247,-0.009803377,-0.053883467,-0.06447003,0.014594339,-0.035194933,-0.05634646,0.026034312,-0.0011335999,0.069007136,0.06706266,0.062093455,-0.013838155,-0.0015110164,0.03988327,0.034460355,-0.021129923,-0.01996324,-0.0045235967,0.00064984505,0.025667023,-0.0008209991,-0.056432884,-0.0076644584,-0.02082745,0.06287125,0.02754668,0.012044921,0.012801104,-0.019531136,-0.011569605,-0.03344491,-0.01447551,0.009036391,0.002272601,0.029447941,-0.021745672,0.0047639553,0.006524782,-0.0077022677,-0.014615944,0.015156075,0.013557287,-0.059932932,0.029663993,0.0040050712,0.037830774,-0.025602208,-0.03942956,-0.040682666,0.010057239,-0.02536455,-0.0011302241,0.03599433,-0.0065301834,-0.007567235,0.00437236,0.049821682,-0.005719987,-0.0012051673,0.013125183,0.022901554,-0.035043698,-0.0750566,0.026660865,0.034870856,0.03385541,0.032062173,-0.015944667,-0.06922319,-0.029275099,0.009598128,-0.04359937,0.007086518,-0.024197867,0.012098934,-0.008058754,0.030182518,0.016074298,0.00758884,-0.004615419,0.018526493,-0.018537294,-0.028086811,-0.019077426,0.016301153,0.00746461,0.029793624,-0.016279548,-0.016646836,-0.03232144,-0.0025804758,0.03938635,0.013913774,-0.035627037,0.044938896,-0.0038862424,0.01789994,0.010024831,0.023398474,0.011926092,-0.006643611,0.00837203,0.04057464,-0.037312247,-0.0010323253,-0.0040941928,-0.01311438,0.015004839,0.022858342,-0.01806198,-0.0063627427,-0.027892364,-0.0010822874,0.01789994,-0.041546874,-0.03080907,-0.015652996,0.004226525,-0.028151626,0.026423207,0.018666927,-0.022447843,-0.044117898,-0.012693078,0.016830482,-0.036815327,0.016344363,0.008226194,0.008150577,-0.019984845,-0.0069784923,0.020352134,-0.02437071,0.0148860095,-0.046408053,0.007551031,-0.046451263,0.040963534,-0.05064268,-0.028842993,0.006000855,-0.007907517,-0.002941013,-0.002664196,0.0008128971,-0.022210186,-0.022037344,-0.032256622,0.035648644,0.0148319965,-0.017186968,0.0092956545,0.027654706,0.03331528,-0.019509532,-0.01331963,-0.022534264,-0.006697624,0.021475608,-0.035065304,0.004664031,-0.0004523597,0.025645418,0.014335076,-0.026250366,-0.021248752,0.020676214,-0.015339719,0.031824518,-0.016517205,0.0033434108,0.022923158,0.00073525327,0.031284384,-0.042238243,-0.033012804,-0.0036026735,0.00064646924,-0.0076968665,0.028691757,-0.0075942413,0.019412307,0.0051123397,0.0035945717,0.022296606,0.058334146,0.017078942,-0.06053788,-0.023268843,0.011364356,0.0073619853,-0.00034905964,0.023744157,-0.04152527,-0.015620587,-0.019887622,-0.04260553,0.006378947,0.024759604,-0.00610348,-0.015642192,0.04455,-0.018418467,-0.033164043,-0.025062077,-0.0025143097,0.028691757,-0.009824982,-0.014335076,0.012682275,0.009090404,-0.026617654,-0.008528668,-0.018234821,-0.032256622,0.028302863,0.017478637,0.015372127,-0.015253299,0.014972431,0.0057794014,-0.01001943,0.028821388,0.03227823,0.028216442,0.02899423,0.011277935,0.014594339,0.006524782,0.016441587,0.008976976,-0.024629973,0.0127254855,0.0030841478,-0.011277935,0.010840429,0.012520236,0.01331963,0.008426043,-0.010014028,-0.0030328354,0.016798073,0.020395346,0.0010951156,0.052543942,-0.017219376,-0.00799934,0.03204057,0.013643708,-0.012131342,-0.017273389,0.0050340206,-0.0044398764,-0.039364744,0.0006100104,0.0027600692,0.030160913,0.0010809371,0.03567025,0.00391865,-0.045154948,0.019887622,0.008004741,0.0066220057,0.022750316,-0.028216442,0.03385541,-0.0013293973,0.012628262,0.009090404,-0.030873887,0.02251266,-0.0013104927,-0.018872175,-0.0077994913,-0.003786318,0.017921546,0.01760827,0.005817211,0.014659154,-0.014313471,-0.020146886,0.009970818,0.026336785,0.007950728,-0.0090742,-0.026012708,0.021637646,0.010905244,0.008118168,-0.031932544,0.0030139307,0.018623715,-0.013881366,-0.0017824322,0.001513717,0.005182557,-0.029447941,0.033920225,-0.032364648,0.006692223,0.016506402,0.010413725,0.017521849,-0.014248655,0.014443102,0.03327207,-0.026941733,0.0139029715,-0.051506888,0.02363613,-0.0354542,0.004861179,-0.00367019,-0.025883077,0.04279998,0.01735981,0.002895102,0.03357454,-0.031284384,0.005233869,0.0030301348,-0.019444715,-0.060365036,0.017597467,0.013730129,0.0038673377,-0.02486763,-0.017208572,-0.017349007,0.011213119,0.014788786,-0.04787721,-0.010959257,-0.0041293013,0.016560415,-0.0056659738,-0.029750414,0.002379277,-0.041460454,0.010748606,-0.0062385127,0.013449261,0.0058658225,-0.004639725,-0.0044722846,0.020676214,0.011980105,-0.0047288467,0.022793528,-0.029145468,0.013179196,-0.028778179,0.020200899,-0.02090307,-0.0002942026,-0.016193127,-0.0015083158,-0.015609785,0.014745575,-0.059587248,-0.003991568,0.00857728,0.00072512584,-0.033639356,-0.009960015,0.012325789,-0.013913774,-0.034589987,-0.03690175,-0.0003369067,-0.013578893,0.015015641,0.0040833903,0.00060899765,0.06874787,0.00820459,-0.003653986,0.005039422,0.013881366,0.03117636,0.024262683,-0.011396764,0.011191513,0.010727001,-0.026120733,0.0081343725,0.021129923,0.019660767,0.0012740339,0.029015835,0.02854052,-0.019066622,0.04057464,0.029966466,0.028842993,0.008118168,0.05340815,0.0027641202,0.00034568383,0.06071072,0.011591211,0.012293381,0.0039159497,-0.010424527,-0.037506696,-0.002841089,0.017435428,0.0010492044,0.016257942,-0.004739649,0.0042103208,0.038781404,0.053710625,0.020924674,0.021886107,0.01035431,0.010332705,0.046148792,0.007637452,0.017878335,0.013438459,-0.022426238,0.032926384,-0.0023374169,-0.03502209,-0.011699237,-0.00042906654,-0.027417049,-0.022339817,-0.03621038,-0.003419029,0.029512756,-0.00898778,0.039083876,0.018342847,-0.016182324,-0.0037134003,-0.0026061318,-0.01266067,0.016484797,0.013784142,0.033099227,-0.018645322,0.017327402,-0.017997164,-0.017705493,-0.010716198,0.03072265,0.028842993,-0.007912919,0.054013096,-0.0177379,0.032883175,-0.020146886,-0.019142242,0.018040374,0.013989392,-0.010797218,0.0313492,0.030463386,-0.034006648,-0.005930638,0.015156075,0.0012382503,0.011180711,-0.017845927,-0.01617152,0.018375255,0.0058442173,-0.037960406,-0.005774,-0.030679438,-0.010240884,0.021832094,-0.022966368,0.004561406,-0.001905312,-0.017986361,-0.010797218,0.0148860095,-0.033466514,-0.022080554,-0.017186968,0.009133615,0.035864696,-0.02903744,-0.037463482,0.03867338,0.042087004,0.0113859605,0.030204125,-0.0066112033,0.011083487,0.0012632313,-0.014151432,-0.008355826,0.0149940355,0.0012159698,0.0047099423,0.01377334,-0.0014570033,-0.026920127,-0.058420565,-0.046710525,-0.013492472,-0.035821486,0.03603754,-0.025148498,-0.008264004,-0.008139774,0.011818065,-0.03979685,0.035540618,-0.027892364,-0.026401602,-0.019293478,-0.03076586,0.029188678,0.02754668,-0.01765148,0.045803107,0.00428864,0.015285706,-0.04284319,0.018342847,0.0053337933,0.01129954,0.015145272,-0.0022361423,-0.020265713,-0.04405308,-0.0023522703,0.03108994,0.013330433,-0.03283996,0.013146788,0.008890556,-0.013535682,0.00886355,0.004434475,-0.015015641,0.00028019294,-0.025299735,-0.021097517,0.01826723,0.0052392706,0.008793333,0.037052985,0.029339915,0.033682566,0.04133082,0.016592823,0.030679438,0.007405196,-0.008917563,-0.012477025,-0.013514077,0.05146368,0.016452389,-0.0181484,-0.027395442,-0.04627842,-0.0053716027,0.0057848026,-0.006449164,-0.071945444,-0.00011663453,0.0038754398,-0.032213412,-0.010872836,-0.037636325,-0.023117606,0.014205445,-0.009344266,-0.021929318,-0.009311858,0.0101166535,0.01064058,-0.028065205,0.008517865,0.035605434,0.017100547,0.022750316,-0.0070109,0.0008689357,-0.012541841,0.029707203,0.022404633,-0.015285706,-0.002531864,-0.013449261,0.0022118364,0.02094628,0.043210477,-0.032429464,-0.0019498728,-0.015048048,0.023981815,-0.0033542134,-0.0036863938,-0.00011005168,-0.012844315,-0.006324934,0.044139504,-0.023830578,0.0026628457,-0.00101072,0.005876625,0.041287612,0.017629875,0.040725876,0.022253396,-0.019055821,0.001596087,-0.014162234,0.0021956323,-0.008895957,0.010208475,-0.016614428,0.010743205,-0.023225632,-0.06624166,-0.024046632,0.007864307,0.010408324,0.023571316,-0.012228565,-0.034049857,-0.038327694,-0.0049097906,-0.031414017,0.015869047,-0.013578893,0.028216442,0.023484895,0.005133945,-0.014734773,-0.023117606,0.017802717,0.015123667,0.03108994,0.03331528,0.00428864,-0.0023077095,0.0006738134,0.01872094,-0.020633003,0.0009438789,0.00015604722,0.003159766,0.017640678,0.024910841,-0.0041671107,0.013665314,-0.0153505225,-0.02255587,0.040985137,-0.0015420739,-0.025494182,0.0064221574,0.030420177,0.033056017,0.039904878,-0.055827938,0.025148498,-0.048655,0.013222407,-0.014151432,-0.0030490393,0.032256622,-0.0055903555,-0.02012528,-0.021065108,0.023830578,-0.040985137,-0.013384446,0.0408339,-0.01835365,0.022858342,-0.008771727,0.022275,-0.016301153,0.002668247,0.044982105,0.0017837825,0.010656784,-0.006330335,0.017759506,0.010332705,-0.002849191,-0.016808877,-0.03966722,-0.04020735,-0.03471962,0.0071729394,0.012239368,0.021043502,-0.034611594,0.0065679927,0.016517205,0.009225437,-0.018126795,-0.0037890188,-0.03372578,0.03942956,-0.02767631,0.016916903,0.041266005,0.022166975,-0.018980203,0.0148319965,0.049043894,0.04597595,0.010618974,0.017338203,-0.007253959,-0.05038342,-0.007075716,-0.013427656,0.00014819844,-0.01629035,-0.02767631,0.020611398,0.022987975,-0.007286367,-0.019628359,0.017165363,0.028518915,0.014313471,-0.010332705,0.0055741514,0.015523364,0.014713167,-0.03199736,0.020816648,0.013384446,-0.00507183,0.0031408616,-0.0034082264,-0.010743205,-0.017338203,0.020892266,-0.013308827,-0.04070427,0.022102159,0.0009803377,-0.015815035,-0.0055849543,-0.00437236,0.00063229084,-0.0050799316,-0.006330335,-0.014140629,-0.013913774,0.005806408,-0.014896812,0.006330335,-0.017176164,-0.011267132,0.03076586,-0.012304183,-0.043318503,-0.022080554,0.015955469,0.0012544541,0.021205543,0.030873887,-0.005936039,-0.00923624,0.022383027,0.010068041,0.0029194078,0.00202144,-0.053494573,-0.001253779,-0.036426432,-0.029620783,0.0131359855,-0.013384446,0.002656094,0.0181484,0.0024400416,-0.003967262,-0.0045100935,0.0019255669,-0.009160621,-0.026855312,0.006243914,-0.044463582,-0.031522043,-0.026596049,-0.050296996,-0.005611961,0.03525975,0.044636425,-0.008571878,-0.008723116,-0.005298685,0.038565353,-0.028151626,-0.045716684,0.012055723,-0.0017257185,-0.016149916,0.055439044,-0.025645418,0.010980862,0.052111834,-0.029339915,-0.013049564,-0.016387574,-0.0016892597,0.04338332,0.025796656,-0.002499456,-0.028562127,0.0018945094,-0.0072485576,-0.022404633,0.011774855,-0.012822709,-0.003929453,0.023895394,-0.015102062,-0.0091174105,-0.008798733,-0.028734967,0.04709942,0.021670055,-0.0036809926,0.004202219,-0.00812357,-0.0071243276,0.002565622,0.00915522,-0.030160913,0.01575022,-0.015112865,0.014659154,0.024846025,0.0047720573,0.005741592,0.011839671,-0.0003885567,0.022426238,-0.0047072414,0.014799588,-0.0008635344,0.032191806,-0.025213314,0.00077103695,0.007075716,-0.025515787,-0.040358584,0.010030232,0.013967787,-0.006578795,-0.047142632,-0.017046534,0.012120539,0.013762537,-0.011569605,0.01125633,0.011418369,-0.0087069115,0.0026047817,0.0022536966,0.021821292,-0.005790204,0.020438556,0.022102159,0.04087711,0.009203832,0.014205445,0.016344363,-0.0020984088,0.014453905,-0.03871659,0.015166878,-0.0054040104,-0.02255587,0.027870758,-0.024521947,-0.010997066,-0.07738996,0.018537294,0.015069654,0.0039699627,0.015015641,0.029707203,0.02313921,-0.0235065,-0.005557948,-0.029296704,-0.011548,0.015188483,0.0036350815,0.02949115,-0.009414483,0.013751735,-0.0013050914,-0.0084746545,-0.040358584,0.0042751366,0.02532134,-0.022836737,0.02313921,-0.00556875,-0.054661255,-0.03204057,0.0010248985,0.0025777752,-0.0101166535,0.0404234,0.02949115,0.008966174,0.009819581,-0.00054992083,-0.041762926,-0.011213119,-0.012595855,0.013481669,0.011310343,0.0005576852,0.03208378,-0.033012804,-0.0054256157,-0.014529523,-0.02300958,-0.023290448,-0.022058949,-0.019315084,-0.005622763,0.005007014,-0.025580604,-0.034330726,-0.026271971,-0.0036242788,-0.00189721,0.0025413162,-0.0063573415,-0.011310343,-0.025710234,-0.015199286,0.039688826,0.012585051,0.024781208,0.0135464845,0.027697917,0.018882979,-0.01315759,-0.021183936,-0.023376869,-0.006821854,0.043080848,-0.030117704,0.017262585,0.023182422,-0.0025048575,0.019844413,-0.03534617,0.018461676,0.017338203,-0.0016176923,-0.010122054,0.007934524,0.058377355,0.0018621015,0.022491053,-0.03694496,0.03996969,0.013103577,-0.026920127,-0.017575862,0.0024886534,-0.015728613,0.02119474,-0.023722552,0.021853698,-0.0061844997,-0.034049857,-0.022361422,-0.0068272557,0.014194642,-0.010149061,0.049087103,-0.04061785,0.024392314,-0.015188483,-0.0015555772,-0.018407663,-0.019898426,0.012768696,0.00017790563,0.011764052,0.01934749,-0.038414113,0.03394183,0.0066760187,0.06066751,0.00018567003,0.005101537,-0.0052257674,0.0010708097,-0.013535682,0.0062493156,0.0086528985,-0.0012416261,0.024759604,0.027438654,-0.008555675,0.017100547,0.021540424,-0.0021105618,0.038262878,0.014799588,0.028086811,-0.032602306,-0.014129826,0.007621248,-0.0010660836,-0.00030213577,0.003699897,0.004161709,0.0014934621,-0.05137726,0.04029377,-0.033207253,-0.0276331,0.007291768,0.0010573064,-0.031478833,0.025494182,0.025926286,0.009457693,0.019239465,-0.012196157,0.023592921,0.008161379,-0.03789559,-0.022404633,0.0044101696,0.023787368,0.02194012,0.0024886534,0.01175325,-0.021616042,0.021216344,-0.019844413,0.023031184,0.013384446,-0.015372127,0.032191806,-0.013514077,-0.0034460356,0.014324273,-0.0149400225,0.026963338,0.0416549,0.026898522,0.0055525466,0.024802813,0.0037593115,-0.02218858,-0.0068812687,-0.023031184,0.0037350056,-0.031003518,-0.012585051,-0.009808779,0.01665764,-0.011558803,-0.013211603,-0.03085228,0.0019377199,0.024759604,0.019045018,0.016139114,0.017370611,0.007885912,0.0005475578,0.012844315,0.021183936,-0.017835125,0.024521947,0.00041623844,0.022858342,0.011396764,-0.027352232,0.022123765,0.015534167,0.02573184,0.008512464,-0.02069782,0.003184072,-0.013924576]},{"id":"is-anagram","name":"Is Anagram","description":"Given two strings `s` and `t`, return `true` if the two strings are anagrams of each other, otherwise return `false`.\n\nAn **anagram** is a string that contains the exact same characters as another string, but the order of the characters can be different.\n\n**Example 1:**\n\n```java\nInput: s = \"racecar\", t = \"carrace\"\n\nOutput: true\n```\n\n**Example 2:**\n\n```java\nInput: s = \"jar\", t = \"jam\"\n\nOutput: false\n```\n\n**Constraints:**\n* `s` and `t` consist of lowercase English letters.\n","difficulty":"Easy","concepts":["Hash Usage"],"solutions":{"python":"class Solution:\n    def isAnagram(self, s: str, t: str) -> bool:\n        if len(s) != len(t):\n            return False\n\n        countS, countT = {}, {}\n\n        for i in range(len(s)):\n            countS[s[i]] = 1 + countS.get(s[i], 0)\n            countT[t[i]] = 1 + countT.get(t[i], 0)\n        return countS == countT\n","javascript":"class Solution {\n    /**\n     * @param {string} s\n     * @param {string} t\n     * @return {boolean}\n     */\n    isAnagram(s, t) {\n        if (s.length !== t.length) {\n            return false;\n        }\n\n        const countS = {};\n        const countT = {};\n\n        for (let i = 0; i < s.length; i++) {\n            countS[s[i]] = 1 + (countS[s[i]] || 0);\n            countT[t[i]] = 1 + (countT[t[i]] || 0);\n        }\n\n        for (const key in countS) {\n            if (countS[key] !== countT[key]) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n}\n","cpp":"class Solution {\npublic:\n    bool isAnagram(string s, string t) {\n        if(s.size() != t.size()) return false;\n        \n        unordered_map<char,int> s_count;\n        unordered_map<char,int> t_count;\n        \n        for(int i = 0; i < s.size(); i++){\n            s_count[s[i]]++;\n            t_count[t[i]]++;\n        }\n        \n        for(int i = 0; i < s_count.size(); i++){\n            if(s_count[i] != t_count[i]) return false;\n        }\n        return true;\n    }\n};","java":"class Solution {\n    public boolean isAnagram(String s, String t) {\n        if (s.length() != t.length()) return false;\n\n        int[] store = new int[26];\n\n        for (int i = 0; i < s.length(); i++) {\n            store[s.charAt(i) - 'a']++;\n            store[t.charAt(i) - 'a']--;\n        }\n\n        for (int n : store) if (n != 0) return false;\n\n        return true;\n    }\n}\n","csharp":"public class Solution {\n    public bool IsAnagram(string s, string t) {\n        if (s.Length != t.Length) return false;\n\n        int[] store = new int[26];\n\n        for (int i = 0; i < s.Length; i++) {\n            store[s[i] - 'a']++;\n            store[t[i] - 'a']--;\n        }\n\n        foreach (int n in store) if (n != 0) return false;\n\n        return true;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def isAnagram(self, s: str, t: str) -> bool:\n        ","javascript":"class Solution {\n    /**\n     * @param {string} s\n     * @param {string} t\n     * @return {boolean}\n     */\n    isAnagram(s, t) {}\n}\n","cpp":"class Solution {\npublic:\n    bool isAnagram(string s, string t) {\n        \n    }\n};\n","java":"class Solution {\n    public boolean isAnagram(String s, String t) {\n\n    }\n}\n","csharp":"public class Solution {\n    public bool IsAnagram(string s, string t) {\n\n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/9UtInBqnCgA","embedding":[0.025664544,-0.023227246,0.0017068901,-0.020456642,-0.005411011,0.014655039,0.027206084,-0.023748036,0.0030908904,0.036288667,-0.0014920641,-0.040454987,0.01105117,0.008431595,-0.009056543,-0.016884021,-0.047037777,-0.0033096222,0.028143506,0.016717367,0.048371002,0.021789866,0.013436389,0.008181615,0.077410266,0.020571215,0.013207241,0.0032002563,0.02100868,0.011478217,0.008983633,-0.01959213,0.005515169,-0.014613375,-0.004111639,0.059411753,-0.011728197,0.0046324297,0.012821857,-0.06370307,-0.011780276,-0.014175911,0.007124411,-0.011509465,-0.037309416,-0.017206911,-0.032434817,0.0455379,-0.05091246,0.03491378,-0.00073626725,0.0053276843,-0.015290403,-0.060994957,-0.046746135,-0.029414235,-0.071452424,0.015936183,0.03180987,-0.02520625,-0.018779697,-0.0055412087,-0.009369017,0.023518888,-0.010108539,-0.020581631,0.0072650244,-0.009244028,-0.041600727,-0.052287344,-0.039517567,0.034205504,0.007655617,-0.02235232,-0.07511879,0.041309085,-0.029372571,0.05349558,0.06941093,-0.016529884,-0.018144334,-0.02314392,0.07391056,0.01286352,-0.03208068,0.034226336,-0.03697611,0.017831858,-0.04745441,-0.050495826,-0.024456311,0.0038173927,0.012165661,-0.024185501,0.053328924,-0.03428883,0.05016252,-0.009072167,-0.0030179797,-0.001446495,0.013821774,-0.018519303,0.013165578,0.06528627,0.014186327,0.016529884,0.042871457,-0.0078326855,0.0050620814,-0.035267916,-0.012603125,-0.0063744728,0.053870548,-0.016915267,0.020154584,-0.009702323,-0.056328677,0.009556501,0.016061172,-0.01467587,0.022477308,-0.014644623,0.028122675,-0.039100934,-0.02572704,0.013571794,-0.046121188,-0.03620534,-0.012717699,0.015259155,-0.0013566586,-0.06624452,0.011363644,0.020550383,-0.018550549,-0.010613706,-0.023518888,0.018415144,-0.037267752,0.048287675,0.024810448,0.0051688435,-0.04099661,0.03037249,0.01053038,-0.026331156,0.013957179,0.04010085,0.0016795486,0.01176986,0.0023435561,-0.029539224,0.040684137,0.035767876,-0.007785815,-0.054370504,0.0128739355,-0.018019343,0.043246426,0.025310406,-0.00871803,-0.03464297,0.016498636,0.013873853,-0.012571877,-0.017300652,0.0014803463,-0.016425725,-0.01604034,-0.059786722,-0.023560552,-0.019237993,-0.06370307,0.037184425,0.009452344,-0.018290155,-0.061619904,-0.04239233,-0.03712193,-0.012603125,-0.016967347,0.033434734,0.007785815,-0.02987253,0.03453881,0.000046016703,0.043371413,-0.005267794,0.0042131934,0.021706538,0.021935686,0.03608035,0.05741192,-0.018415144,-0.029893361,-0.037559394,0.042350665,0.011728197,-0.06891097,0.018613044,0.00073431426,-0.06453633,-0.0020792552,0.022393981,-0.01571745,-0.0504125,0.0018904686,-0.012842688,-0.02158155,-0.0035569975,0.027310241,-0.019123418,0.0102804,-0.015436224,0.022602297,-0.0076087457,-0.04470464,-0.0067234025,0.013696784,0.009035711,-0.093325615,0.056578655,0.009723155,0.04887096,-0.032601472,0.04074663,0.0072858557,-0.0007942052,0.014540465,-0.03026833,-0.009764818,0.0019516615,0.014071753,-0.017936017,0.0076243696,-0.05291229,-0.0029632966,-0.046204515,-0.01005646,0.01867554,0.03672613,-0.0006083481,0.03401802,-0.013478052,-0.010967843,0.011467801,-0.014175911,0.045871206,-0.00024135374,-0.0151966605,-0.0005465043,0.049745888,0.010519964,-0.032039016,-0.00024037727,0.03235149,0.027331073,-0.032809786,0.0020441017,0.0021078987,-0.0076868646,0.06170323,-0.05212069,-0.048454326,-0.009092998,-0.006848392,0.0245813,0.028435148,0.02508126,0.012373977,-0.011676118,0.00022849673,0.017842274,-0.019029677,0.018592212,-0.0115823755,-0.036413655,0.004017897,0.017821442,-0.03255981,-0.03926759,-0.01241564,0.011801108,-0.011790692,-0.019633794,-0.0025635902,0.029914193,-0.0072754403,-0.06607787,-0.044079687,0.0071973214,0.04076746,0.026601966,0.062411506,-0.045079608,-0.00653071,-0.037705217,0.02689361,-0.010978259,-0.047871042,0.01589452,-0.009056543,0.010118955,0.06157824,-0.029622551,-0.017092336,-0.027060263,-0.0060724146,0.013488468,0.01907134,0.0066817394,-0.0073743905,0.007764983,0.021227412,-0.020394146,-0.077076964,-0.00235918,-0.053078946,0.009707531,-0.011415723,-0.013280152,0.004616806,0.049329255,-0.0023292345,-0.0016860585,0.042267337,0.0019373398,0.007764983,0.017602712,0.004549103,0.006259899,0.020529553,0.025310406,0.027393568,-0.03247648,0.037163593,0.0073066875,0.03437216,0.013228073,0.048537653,-0.01318641,-0.010462676,0.027226916,0.018394312,-0.03799686,-0.0006705175,-0.002307101,0.0012694263,0.016331984,-0.002409957,0.048412662,0.012561461,0.0020727452,-0.027581053,-0.034601305,0.0063067703,-0.06978589,0.047996033,0.009827312,-0.0058172275,0.0386843,0.0029294454,-0.019529635,-0.0066296603,-0.018842192,0.028768456,-0.0045881625,0.052537322,0.02974754,-0.010894933,-0.007848309,0.019560883,-0.00015379587,-0.02560205,0.0037991651,0.01358221,-0.006801521,0.013030172,-0.0062442753,0.035976194,-0.014509217,0.030414151,-0.009749194,0.011613623,0.025852028,0.030393321,0.0439547,-0.023039762,0.017154831,-0.04033,-0.0077910223,0.0010415806,-0.029914193,0.029560056,-0.0233939,0.0044944203,0.0028435148,0.021873191,-0.03772605,0.047412746,-0.0025766098,0.011332396,-0.015946599,-0.030434983,-0.03516376,0.027560221,0.0018448995,0.046079524,0.00717649,0.013478052,0.01596743,0.019977516,0.02520625,-0.022456476,-0.010780359,0.0031247416,-0.009671075,0.026268661,0.025102092,-0.027247747,0.0016352815,-0.051704057,0.025310406,-0.008415971,0.03272646,-0.010447053,0.0023422542,-0.011853186,-0.007973299,-0.03412218,-0.0025948375,0.023581384,0.028601801,-0.049745888,-0.019977516,0.052870627,0.011801108,0.07232735,-0.009598165,-0.0062859384,-0.03322642,-0.0455379,0.026081176,0.0032783747,-0.005900554,-0.027101927,0.016988179,0.034601305,0.04214235,-0.0144258905,0.0048954287,-0.01681111,0.009280482,-0.010353311,0.0067806896,0.017342316,-0.016706953,0.0048147063,0.059536744,-0.025414566,-0.009150285,-0.043871373,-0.050495826,0.013675952,0.065411255,-0.004874597,-0.014738365,-0.02172737,0.020258741,-0.006744234,0.006895263,-0.027747706,0.025664544,-0.01857138,-0.0023253285,0.0063328096,0.007916012,0.01661321,-0.0041715303,-0.049245927,0.001550653,-0.033143092,0.00009846191,0.013613458,-0.058995124,-0.042704802,0.020612879,-0.038580142,0.028330991,-0.028164338,-0.0026430106,-0.014342564,0.010441845,-0.006254691,0.0069837975,0.011686534,0.035392907,-0.033830535,0.02664363,-0.031101596,-0.011269902,-0.01857138,0.018269323,0.0043043317,0.010337687,0.016019508,0.028268496,-0.038538482,0.0018422956,0.03801769,0.02443548,-0.03451798,0.010863685,0.002674258,0.0015181036,-0.03774688,-0.049204264,0.011301149,-0.014457138,0.030809952,0.0057391087,-0.057495248,0.0021716955,0.03272646,0.031122427,-0.02018583,-0.0065619573,-0.013592626,-0.08699281,0.020977432,0.0143009005,-0.016175745,0.0054266346,0.011155328,-0.022977266,-0.03349723,-0.0076295775,0.009775233,-0.0020519136,-0.0054995455,0.011874018,-0.0011307659,0.004124659,-0.009499215,-0.0016977763,-0.0002699972,0.02028999,0.015498718,0.011655286,-0.017613128,0.029205918,-0.0024880755,0.026560305,-0.01480086,-0.008155576,-0.023748036,-0.0020076465,-0.00091333594,-0.009332562,0.0045777466,-0.030580806,-0.024852112,0.0008475862,-0.025185417,-0.0029737125,0.042600643,-0.018560965,0.020800363,-0.009806481,0.029018434,0.048829295,0.012801025,-0.012926014,-0.01072828,0.015290403,-0.019644208,-0.009290898,-0.0018514094,-0.020029593,0.012446888,-0.008431595,0.0026391046,-0.00047847605,0.01018145,-0.044912953,-0.0038199967,-0.025497891,0.027976854,0.0022159626,-0.03153906,0.003265355,0.035892867,0.06811937,-0.0163424,-0.022748118,-0.03208068,-0.011280317,-0.048704308,-0.00013272015,0.018925518,0.0431631,0.0022589278,0.035726212,-0.017613128,-0.024810448,-0.0037028189,0.0066140364,0.05987005,0.0016378855,0.03130991,0.027997686,-0.012686451,0.009431512,0.014905018,0.030664131,0.0034658592,0.0014556089,0.027956022,0.012176077,0.004674093,0.025997851,0.020144168,0.035372075,0.0019972308,0.023331404,0.018081838,-0.032122344,0.021831527,-0.0431631,0.022081507,-0.031955693,0.030289162,0.019060925,0.003856452,-0.0070410846,-0.003976234,0.0011854488,0.02637282,-0.012155245,-0.007509796,0.017988097,-0.033268083,0.02100868,-0.019008845,-0.023289742,0.013300983,0.025935356,0.018331818,0.024539638,-0.011780276,0.025935356,0.022977266,0.039205093,-0.016331984,0.0072441925,0.00044787963,-0.030601636,-0.041017443,-0.0080930805,-0.012832272,-0.0005289276,0.011884434,0.015186245,-0.009853352,0.0054422584,-0.063453086,-0.024914607,0.0010767339,0.00063634064,0.002676862,-0.011457386,-0.025372902,0.055120442,-0.015915351,-0.027143588,-0.022289824,0.016581962,-0.040684137,-0.030351657,0.031893197,0.015061255,0.0031820287,0.0045074397,0.0233939,-0.004955319,-0.007103579,-0.010717864,0.0072962716,-0.045454577,-0.0326848,-0.02612284,0.00089055137,-0.058870133,-0.029685045,0.032518145,-0.026914442,-0.0043668263,0.035997022,0.03645532,-0.04253815,-1.8817617e-7,0.025372902,0.017883938,0.01306142,-0.017508969,-0.026039513,0.05349558,0.012196908,-0.016467389,0.018248491,-0.01919633,-0.0070462925,-0.009676283,0.038205173,-0.018404728,0.0034580475,-0.0041064313,-0.0060515827,0.008134744,-0.018435976,-0.012311482,0.05212069,-0.042558983,0.01991502,-0.0042418367,-0.018415144,0.02845598,-0.0036845913,-0.019873356,0.014196743,-0.015113334,0.035267916,-0.021644045,-0.020300405,0.013946763,-0.011259486,-0.008369099,0.04628784,-0.04449632,-0.053578902,-0.017029842,0.0142904855,-0.009004463,0.01539456,-0.035372075,0.012384392,-0.030955775,0.020852443,-0.021519054,0.02068579,-0.010249153,0.003161197,0.00096216,-0.04887096,-0.031851534,0.04470464,0.034976274,-0.0027549805,-0.0013566586,0.02987253,0.04707944,-0.021560717,-0.062911466,0.009473175,0.035955362,0.024102174,-0.010410598,0.022331487,-0.0128739355,0.00088534347,-0.011280317,-0.024414647,0.030080846,-0.029455898,-0.023164751,-0.033851366,0.0023748036,-0.0024802636,0.019946268,-0.037267752,-0.035663716,0.0146862855,-0.039580062,0.028810117,0.032663967,0.026331156,-0.009764818,-0.005989088,0.037788544,0.013405141,-0.013478052,0.019633794,-0.03372638,-0.031351574,0.0021313343,-0.0078326855,0.017873522,-0.000267556,-0.0010454864,0.0015675788,0.01415508,-0.0053745555,0.034184672,0.019185914,-0.006858808,0.01057725,0.00014191536,-0.017748533,-0.0023839176,-0.02520625,-0.013040588,0.027226916,-0.032434817,-0.013561379,-0.0069317184,0.03933008,-0.030164173,0.04591287,0.03012251,0.027310241,-0.004403282,0.0050021904,0.0041611143,0.020404562,0.025560386,-0.035642885,0.0031221376,-0.010358519,0.017925601,0.046746135,0.023810532,-0.00588493,-0.0050620814,0.041434076,0.04257981,0.058870133,0.019269241,0.010894933,-0.028685128,0.035497066,-0.010905349,0.0439547,-0.020664958,-0.07491047,-0.04707944,0.0022537198,0.001975097,-0.049620897,0.040559147,-0.041954864,0.037934363,0.014540465,0.0072962716,-0.019873356,-0.016644457,0.00869199,-0.0010519964,0.005299041,0.009316938,0.016123667,0.027289411,0.03455964,-0.008139952,-0.03530958,0.012582293,0.037101097,-0.010894933,0.026601966,-0.05378722,0.00278102,0.0060619987,0.028101843,0.0036559477,-0.029622551,0.019987931,-0.032143176,0.059661735,0.017029842,0.023185583,-0.009764818,0.033934694,-0.0027367529,-0.030080846,0.035476234,-0.020914938,-0.035392907,0.010519964,0.00022475356,-0.003002356,0.026039513,0.03493461,0.0066036205,0.021935686,-0.0054943375,-0.004322559,0.023935521,-0.005832851,-0.036059517,0.05195404,0.019540051,0.009217988,0.009129453,-0.0017771968,0.0108011905,0.020050425,0.009572125,-0.00089706125,0.012728115,-0.0048355376,-0.002997148,-0.06778606,-0.03943424,-0.035580393,0.035372075,0.015082086,-0.006525502,-0.012071919,-0.0019152062,0.043413077,0.026601966,-0.01557163,-0.013238489,-0.007744151,-0.040538315,0.03191403,0.008124328,0.014905018,0.028122675,-0.030080846,-0.01467587,-0.0047808546,0.007910804,0.017498553,-0.021435728,-0.016050756,-0.02508126,-0.026997767,-0.0030882864,0.011207406,-0.030872447,-0.006848392,-0.023498056,-0.06624452,-0.020914938,-0.01306142,-0.040434156,0.009540878,-0.050995782,0.03491378,0.03918426,0.062661484,-0.015821608,-0.014519633,-0.021706538,0.012155245,-0.018040175,-0.019623378,-0.0068796393,0.013561379,0.0016873605,0.017873522,-0.03089328,0.012842688,-0.014832107,-0.012457304,0.030289162,-0.018435976,-0.029768372,-0.012926014,-0.074202195,-0.016592378,0.0022081507,-0.022664793,0.02406051,0.007160866,-0.016821526,0.006197404,0.012915599,0.025747871,-0.034726296,-0.0006698665,-0.004608994,-0.014259238,0.024539638,-0.0048589734,-0.009540878,0.0026690501,-0.01403009,0.034038853,0.025414566,0.011269902,-0.019529635,0.028935108,0.005291229,-0.029393403,0.0067702737,-0.0039189467,-0.025831198,0.008712822,0.008014962,-0.029685045,-0.0051506157,0.023893857,0.015925767,-0.02726858,-0.030601636,-0.008384723,0.000127024,-0.016821526,0.03762189,-0.0148112755,0.006004712,-0.0034918988,0.0020115525,0.0048251217,0.016873606,0.0072962716,-0.036288667,-0.003158593,-0.025164586,-0.018342234,-0.0007766285,-0.003257543,-0.000006362389,0.017633958,-0.013498884,-0.026539473,0.008249318,-0.007384806,0.019810863,-0.0006041167,0.013498884,0.037705217,0.020300405,-0.010686616,0.011988592,0.025685376,0.012842688,-0.004439737,-0.017227743,-0.005043854,0.009764818,-0.0018566173,-0.0098950155,-0.0052261306,0.05003753,0.026518641,0.010853269,0.0092492355,-0.004598578,-0.01057725,0.037184425,-0.00824411,-0.005030834,0.021414896,-0.016321568,0.02185236,0.019654624,0.019113002,0.03012251,0.0039840457,-0.010842853,-0.034726296,-0.008332645,-0.007546251,-0.009697115,-0.00107413,-0.019925436,-0.016738199,0.024123006,0.009660659,0.013738448,-0.03335141,-0.018279739,0.00675465,-0.0120927505,-0.053745557,0.00015599297,0.017290236,-0.027831033,0.007478548,0.005525585,0.0017967265,-0.010212697,0.01758188,-0.0041376785,-0.031372406,-0.025581218,-0.032497313,-0.009207572,0.00082545256,0.042871457,0.0011105853,0.013696784,0.005994296,0.0030336033,-0.0014660247,-0.020831611,-0.019529635,0.0150716705,-0.0060619987,0.012311482,0.020321237,-0.043913037,-0.057370257,0.007879557,-0.038205173,0.005890138,-0.0169361,0.027956022,0.011655286,0.026601966,-0.018217243,0.020321237,0.0027081093,-0.020414978,0.0002172672,-0.009650243,-0.01939423,0.02301893,0.021914855,0.00591097,0.049037613,0.02612284,-0.039767545,-0.028914277,-0.020404562,0.039517567,0.0005181863,0.014519633,0.022289824,-0.03926759,-0.03258064,-0.020477474,-0.030684963,0.0054735057,-0.018654708,-0.023581384,0.011342812,0.011415723,0.0060828305,0.0036142846,-0.004551707,-0.017769365,0.020717038,0.03283062,0.029330907,0.052204017,-0.014707117,-0.006869224,-0.0018071423,-0.00080982887,0.0027107133,-0.034330495,-0.016821526,0.013603042,-0.009790857,0.020248326,-0.0009784347,-0.0199671,-0.012832272,-0.042704802,0.03476796,-0.009014879,0.012040671,0.045621227,0.0016535091,-0.016311152,0.0021703935,-0.01403009,0.01944631,-0.010311647,0.011676118,0.005728693,0.006811937,-0.02353972,0.014988344,0.0045256675,0.021748202,-0.008103496,-0.040184177,-0.001070224,-0.037538562,-0.048537653,-0.026351988,-0.03312226,-0.033559725,-0.01882136,0.027914358,-0.01306142,0.0076764487,0.01576953,-0.010863685,0.02038373,-0.029060097,-0.0074733403,-0.033809703,0.006916095,-0.023748036,-0.015425808,-0.012790609,-0.013748863,-0.023435563,0.0032445234,-0.040538315,0.020133752,-0.017477721,0.012446888,-0.006598413,0.0038929074,-0.007702488,-0.02495627,-0.026414482,-0.052453995,-0.022268992,-0.056828633,0.03141407,0.028643465,-0.0017472514,0.014196743,-0.027372736,0.003971026,0.018633876,-0.012728115,-0.007072332,-0.029289246,-0.005619327,0.009743986,-0.011040754,-0.061744895,-0.0063796807,-0.010905349,0.004726172,0.011738612,0.00014411243,-0.016436141,-0.04357973,-0.0063588494,-0.01571745,0.008728445,0.01112408,0.026914442,-0.02649781,0.014332148,0.029935025,0.018019343,-0.009233612,0.055662066,0.007483756,-0.014477969,0.021071175,-0.016217409,0.0207587,-0.037871867,0.0082180705,0.026581135,-0.02145656,0.012394808,-0.0041689263,-0.020894106,-0.0102908155,0.005343308,-0.0034111764,-0.008139952,0.009577333,-0.000028724839,-0.05495379,0.010426221,-0.034268,-0.050495826,0.023060594,0.041788213,0.01887344,-0.0013436389,0.037580226,0.021435728,-0.009228404,0.020310821,-0.009863768,0.031247417,-0.006541126,0.05612036,0.012498966,0.03324725,0.03543457,0.0022055467,0.0069473423,0.02753939,-0.0029919401,-0.017988097,0.00995751,0.023123087,0.022977266,0.004931884,0.037434407,0.004924072,-0.01539456,0.036017854,-0.046662807,-0.017196495,-0.012311482,-0.020217078,-0.008264942,-0.01435298,0.034351327,0.021956518,0.013561379,-0.007218153,0.007228569,-0.0118427705,0.0028695543,-0.014238406,-0.0013110895,0.020581631,-0.011488633,-0.0042470447,-0.016738199,0.006525502,-0.0137801105,0.015634123,-0.0018826568,0.019529635,-0.02235232,-0.009530462,-0.0016873605,0.011874018,0.033413906,0.017727701,-0.022289824,-0.036517814,-0.012623956,-0.02793519,-0.03593453,0.004637637,-0.008181615,-0.053037282,0.014186327,0.02831016,-0.006957758,-0.0011301149,-0.016852774,-0.02870596,-0.02406051,-0.014363396,-0.009421096,-0.0052131107,0.014009259,-0.017977681,-0.022227328,-0.011144912,-0.014707117,-0.019685872,-0.01060329,0.010040836,0.001876147,0.003377325,-0.01817558,0.055662066,-0.00056635943,-0.00079485617,-0.02935174,-0.020571215,-0.004327767,-0.008754484,-0.01557163,0.0346638,0.0019139042,-0.022289824,-0.00675465,0.021373233,-0.0046350337,-0.049412582,-0.001977701,-0.043371413,-0.02806018,-0.026331156,0.0063848887,0.029018434,-0.020248326,0.024414647,0.0036325122,0.0029685046,0.018529719,-0.04574622,0.010363727,0.015269571,0.023977185,-0.014519633,0.023748036,0.03274729,0.04070497,-0.017613128,0.0037340662,-0.011717781,-0.02081078,0.013051004,0.0270186,0.022664793,-0.0021274283,-0.02406051,0.0075618746,0.022456476,0.0036741754,0.030434983,0.013071836,0.0017511573,-0.0043147476,-0.0036325122,0.017561048,-0.0048980326,0.005197487,0.008176407,-0.0013189013,-0.0021131064,-0.04524626,-0.02897677,-0.0023878233,-0.025331238,-0.00869199,-0.017550632,0.0016756427,-0.0009484893,-0.029372571,-0.025581218,0.018810945,-0.019279655,-0.0028721583,0.027101927,-0.07041085,-0.06253649,-0.03568455,0.0047730426,-0.0030570389,0.0020232701,0.023831364,0.03193486,-0.0110615855,0.046079524,-0.012186493,0.031247417,0.011530297,-0.022268992,0.023518888,-0.0019373398,0.014113416,0.015154997,0.0073223114,-0.008983633,0.011811524,0.021706538,-0.02468546,0.0010500434,-0.024331322,-0.02870596,0.046829462,0.013978011,0.010473092,0.01338431,0.04307977,-0.028435148,0.0034918988,0.031018268,0.015436224,-0.022893941,-0.0060724146,0.036163677,0.037767712,0.027435232,0.027601885,-0.026560305,-0.0027185252,-0.057203602,0.015811192,0.0146862855,0.01241564,0.038434323,-0.007556667,0.018446391,0.000023679682,0.009223196,0.026956104,-0.0013657724,-0.014582127,0.036163677,0.008395139,0.01072828,-0.01817558,-0.025685376,0.0155924605,0.019894188,0.001014239,0.017842274,-0.015488302,0.029643383,-0.019852525,0.026622798,0.031226585,-0.0015792965,0.0131343305,0.024477143,-0.009358602,-0.0113219805,-0.017800612,0.022227328,-0.022539804,-0.033393074,-0.02364388,0.0169361,-0.0075202114,0.035267916,0.018644292,-0.013415557,-0.033268083,-0.0072129453,0.01661321,0.030830784,-0.015342481,0.02326891,0.015613292,0.033809703,0.01609242,0.02560205,0.0044163014,-0.007811854,0.015790362,-0.01738398,0.012238571,0.0057234853,0.0033903448,-0.025539555,-0.006791105,0.010426221,0.051329087,0.012478135,0.006962966,0.012634372]},{"id":"two-integer-sum","name":"Two Integer Sum","description":"Given an array of integers `nums` and an integer `target`, return the indices `i` and `j` such that `nums[i] + nums[j] == target` and `i != j`.\n    \nYou may assume that *every* input has exactly one pair of indices `i` and `j` that satisfy the condition.\n\nReturn the answer with the smaller index first. \n\n**Example 1:**\n\n```java\nInput: \nnums = [3,4,5,6], target = 7\n\nOutput: [0,1]\n```\n\nExplanation: `nums[0] + nums[1] == 7`, so we return `[0, 1]`.\n\n**Example 2:**\n\n```java\nInput: nums = [4,5,6], target = 10\n\nOutput: [0,2]\n```\n\n**Example 3:**\n\n```java\nInput: nums = [5,5], target = 10\n\nOutput: [0,1]\n```\n\n**Constraints:**\n* `2 <= nums.length <= 1000`\n* `-10,000,000 <= nums[i] <= 10,000,000`\n* `-10,000,000 <= target <= 10,000,000`\n","difficulty":"Easy","concepts":["Hash Usage"],"solutions":{"python":"class Solution:\n    def twoSum(self, nums: List[int], target: int) -> List[int]:\n        prevMap = {}  # val -> index\n\n        for i, n in enumerate(nums):\n            diff = target - n\n            if diff in prevMap:\n                return [prevMap[diff], i]\n            prevMap[n] = i\n","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @param {number} target\n     * @return {number[]}\n     */\n    twoSum(nums, target) {\n        const map = new Map();\n\n        for (let index = 0; index < nums.length; index++) {\n            const num = nums[index];\n            const complement = target - num;\n            const sumIndex = map.get(complement);\n\n            const isTarget = map.has(complement);\n            if (isTarget) {\n                return [index, sumIndex];\n            }\n\n            map.set(num, index);\n        }\n\n        return [-1, -1];\n    }\n}\n","cpp":"class Solution {\npublic:\n    vector<int> twoSum(vector<int>& nums, int target) {\n        int n = nums.size();\n        unordered_map<int, int> mp; \n\n        for (int i = 0; i < n; i++) {\n            int complement = target - nums[i];\n            if (mp.find(complement) != mp.end()) {\n                return {mp[complement], i};\n            }\n            mp.insert({nums[i], i});\n        }\n        return {};\n    }\n};\n","java":"class Solution {\n    public int[] twoSum(int[] nums, int target) {\n        HashMap<Integer, Integer> prevMap = new HashMap<>();\n\n        for (int i = 0; i < nums.length; i++) {\n            int num = nums[i];\n            int diff = target - num;\n\n            if (prevMap.containsKey(diff)) {\n                return new int[] { prevMap.get(diff), i };\n            }\n\n            prevMap.put(num, i);\n        }\n\n        return new int[] {};\n    }\n}\n","csharp":"public class Solution {\n    public int[] TwoSum(int[] nums, int target) {\n        Dictionary<int, int> indices = new Dictionary<int, int>();\n\n        for (int i = 0; i < nums.Length; i++) {\n            var diff = target - nums[i];\n            if (indices.ContainsKey(diff)) {\n                return new int[] {indices[diff], i};\n            }\n            indices[nums[i]] = i;\n        }\n        return null;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def twoSum(self, nums: List[int], target: int) -> List[int]:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @param {number} target\n     * @return {number[]}\n     */\n    twoSum(nums, target) {}\n}\n","cpp":"class Solution {\npublic:\n    vector<int> twoSum(vector<int>& nums, int target) {\n        \n    }\n};\n","java":"class Solution {\n    public int[] twoSum(int[] nums, int target) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int[] TwoSum(int[] nums, int target) {\n\n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/KLlXCFG5TnA","embedding":[-0.013984267,-0.012107971,0.013075436,-0.05355261,0.0050278865,0.008633892,-0.0357278,0.02779263,-0.012498866,0.017697768,0.0007225449,-0.028828504,0.007607793,-0.01687689,0.030059822,0.02704993,0.0033030624,0.019329756,0.015215586,0.058477886,-0.01717006,0.056171604,0.037037298,-0.0108668795,0.0852151,-0.04870551,-0.0018103323,0.02321916,-0.0106812045,-0.026092239,0.04514837,-0.01494196,0.020287449,0.039539024,0.0100020245,0.011805028,0.018753186,0.01844047,0.016495768,-0.021675125,0.013026575,-0.0017370394,0.026659036,0.0044317716,-0.010300082,-0.008941722,0.014277439,0.009757715,0.04667286,0.027245378,0.04245119,-0.0051109516,-0.006220116,0.025251815,-0.002026546,-0.029942553,-0.040535808,0.02359051,-0.006449767,-0.0041434867,-0.007260874,-0.0064595393,0.011160051,0.02742128,0.015147179,-0.0018274339,0.028789414,-0.01148254,-0.021968296,-0.06813299,-0.03977356,-0.0012850672,0.009171373,-0.010651887,0.0065474906,0.05429531,0.007803241,0.016720532,0.047063753,-0.012938623,0.01745346,-0.011541174,0.015635798,-0.0015635798,-0.015792156,-0.020658799,-0.049330942,-0.031721126,-0.008067095,-0.04647741,-0.019319983,-0.0036964004,0.0054529845,0.054568935,0.034652837,-0.001789566,0.016720532,-0.0027851267,0.026580857,0.048236437,0.004964366,0.02914122,0.0040384335,-0.042881176,0.027264923,0.018889999,0.036587767,0.012010247,0.008062208,-0.015332854,0.026991297,0.02873078,0.035375994,-0.01761959,0.0034398756,-0.017560955,-0.018704323,-0.0140331285,0.036333688,-0.011472767,0.028066257,-0.04741556,-0.0016222141,-0.037682272,-0.018147299,0.011971158,0.008848884,-0.054451667,0.034594204,-0.015303537,0.025447262,-0.026444044,0.0016136633,0.061605044,-0.05269264,-0.035923246,0.020267904,0.010407578,0.0066549866,0.02470456,0.04397568,-0.006449767,-0.027108565,0.020795612,0.034476936,-0.008897747,-0.028554877,0.033831958,-0.006097961,-0.0067282794,0.030372538,-0.0060735303,0.027851265,0.007363484,-0.009659992,-0.01996496,-0.011335954,-0.01337838,0.0059709204,0.0021792394,-0.0019092775,-0.014404479,-0.0057608145,-0.005516505,0.040887613,0.029532114,-0.027988078,-0.017717313,-0.010026456,-0.05351352,0.009977594,-0.01490287,-0.011521629,-0.002533488,0.058712423,-0.0344183,-0.023805503,-0.08388606,-0.07208103,0.011902751,-0.057969723,-0.006635442,-0.014062447,-0.033871047,0.03279609,0.0018091107,0.013720413,-0.053865325,-0.023004169,-0.010710522,0.03449648,0.028750325,0.072589196,0.011824572,-0.034222852,-0.023316884,0.000875849,0.061448686,-0.0070263366,-0.012098199,-0.001436539,-0.004917947,0.04268573,0.044483848,-0.007153378,-0.0379559,0.0051060654,0.010153497,0.011218686,-0.011941841,0.03363651,-0.01025122,0.021733759,-0.017277557,-0.03297199,0.025329994,-0.023180071,0.0012404807,-0.009376593,0.053318072,0.025818612,0.015235131,0.015567392,0.003454534,0.03453557,0.02671767,-0.02531045,0.0010951166,0.00018872897,-0.014414252,0.004365808,-0.0043829097,0.022261469,-0.024352755,0.0007616344,-0.0450311,0.00034020076,-0.025036821,0.0032297696,0.0129972575,0.01646645,0.00994339,0.031838395,-0.0037745794,-0.014345845,-0.004761589,-0.0465165,0.032581095,0.0017492549,-0.00726576,0.037076388,0.023414608,0.0059758066,-0.028926227,-0.012274101,0.0008996692,0.006606125,-0.0027997852,-0.032835178,0.019789057,-0.01062257,0.0025823498,-0.043662965,-0.06375497,-0.005311285,-0.052536283,-0.041591223,0.034731016,0.03996901,0.015792156,-0.009850553,-0.023903226,0.042724818,-0.012508638,-0.02839852,-0.013896315,-0.010466212,-0.0022525322,0.04405386,-0.10546346,-0.0228869,-0.031877484,0.035473716,-0.009845667,0.021108327,-0.03263973,-0.007446549,0.050777256,0.014639016,-0.028007623,-0.027714452,-0.008843998,-0.027362647,-0.0019324869,-0.0028120007,0.029082585,-0.022710998,-0.0364705,-0.011795255,-0.034731016,-0.014609699,-0.01614396,-0.016349182,0.012195922,-0.030098911,-0.057266112,0.009088308,0.036626857,-0.029864375,0.01630032,-0.01198093,-0.008668096,-0.0066501005,0.008360266,0.043780234,-0.08584053,-0.01646645,-0.0010163268,0.0059953514,0.055350725,0.028007623,0.0450311,0.04049672,0.057031576,0.04593016,0.030392082,0.033323795,0.0028901796,0.03955857,-0.0019715764,-0.012860444,-0.049174584,-0.021264685,0.037565004,-0.06488856,0.030978424,0.028828504,-0.025916336,0.012518411,0.027108565,0.023473242,-0.013671551,0.02321916,-0.009063877,0.026229052,-0.04186485,0.025017276,0.025505897,0.024020495,-0.025720889,0.023375519,-0.014717195,0.04108306,0.0064106775,-0.051089972,0.020267904,-0.044288397,-0.013534738,0.017355736,0.019349301,-0.0071142884,-0.000106503605,0.021968296,-0.026971752,0.008443331,0.04589107,0.0005292351,-0.037037298,0.0071973535,0.054608025,0.029278032,0.017130971,-0.005389464,-0.0072559877,-0.022789177,0.016583718,0.022906445,-0.0042436533,0.013388152,-0.031232508,-0.041278508,-0.02128423,-0.017101655,0.010046001,-0.008316291,0.039910376,0.010603026,-0.029356211,-0.013612917,-0.048979137,-0.013573827,-0.038112257,-0.015870335,0.0037061728,0.019486114,-0.008135501,0.053122625,0.056171604,-0.00281933,-0.019935643,0.015743295,-0.021186506,0.033245616,0.007578476,0.0044268854,-0.02704993,-0.008130615,0.05828244,0.06348134,-0.026913118,-0.025916336,-0.015010366,0.018391607,0.03695912,0.034613747,0.0042192223,-0.0117463935,0.0124890935,-0.0020326537,-0.045265637,-0.009850553,0.0072022397,0.06516219,-0.033851504,0.0022696338,-0.038600877,-0.01222524,-0.026698126,-0.0004702955,-0.03330425,-0.0480019,-0.009782147,-0.035434626,0.029004406,-0.085605994,0.062347747,-0.011130734,0.07946894,-0.007417232,-0.034594204,-0.025759978,-0.053826235,-0.014375162,-0.010583481,-0.009728398,-0.01704302,-0.012655225,0.07427004,0.052497193,0.025877247,0.011883207,0.022163743,0.006474198,0.042060297,-0.008032891,-0.006557263,0.050034553,0.014971277,-0.015489212,0.02296508,-0.025994515,-0.017277557,-0.01585079,-0.01897795,0.0349851,-0.023121437,0.0066256695,0.005619115,0.01938839,0.013065664,0.053904414,0.043584786,-0.022437371,0.014453341,-0.043662965,-0.01333929,0.043819323,0.059298765,0.026404954,0.035884157,-0.024215942,-0.038268615,-0.011384816,-0.008663209,-0.015801929,-0.04022309,0.020795612,0.0104955295,0.045226548,-0.033265162,-0.003237099,-0.012860444,0.010925514,-0.004055535,0.00923978,0.033519242,0.0017687997,0.020404717,-0.02247646,0.01333929,0.019730423,-0.09850553,0.01877273,0.02013109,0.042177565,-0.009440113,-0.008975926,-0.026522223,-0.0112675475,0.042763907,-0.022730542,-0.023649145,-0.018225478,-0.027264923,0.006723393,0.023825048,-0.009464544,-0.010055773,0.03353879,-0.012049337,-0.003136932,0.019662017,0.011150279,0.008018233,-0.0064057913,-0.007075199,-0.047454648,-0.018616373,-0.06269955,-0.013994039,-0.00617614,0.0035669166,-0.014492431,0.029571204,-0.012938623,0.014961504,0.027343102,-0.010642115,-0.043741144,-0.023492787,0.009327731,0.0053992365,-0.0019361515,-0.025623165,-0.009435227,-0.0016857345,0.020404717,0.022320103,0.0017700213,-0.017473005,-0.000477014,-0.0465165,0.028378975,-0.011023237,0.021753304,-0.05902514,-0.0020399832,0.050972704,0.0028559763,-0.010642115,-0.0521063,-0.0264245,0.023473242,-0.0035644735,0.0075980206,0.011677987,0.015909424,-0.0057559283,0.0036426524,-0.000940591,0.022124654,0.030333448,0.022398282,-0.038268615,0.03404695,0.0045930156,-0.0329329,-0.024821829,-0.04030127,0.042881176,-0.008990584,-0.016349182,-0.017961623,-0.06297318,-0.00709963,-0.0001364315,-0.005037659,-0.01395495,0.031994753,-0.031642947,0.040809434,-0.003630437,0.034359667,0.036783215,-0.021714214,-0.041278508,-0.0163785,-0.022417827,0.03951948,-0.009102967,0.027440825,0.016515313,-0.016945297,-0.011296865,-0.029356211,0.032209743,0.00019346246,0.01955452,-0.018665234,0.028789414,-0.001762692,-0.018450242,-0.012205695,-0.0054578707,-0.033616967,-0.0119320685,0.04440567,0.028066257,-0.014863781,0.0056826356,0.014922415,-0.005281968,0.010632343,-0.013642234,0.012371825,-0.011580263,-0.055194367,0.040653076,-0.0019434809,-0.0022073349,-0.054060772,-0.01337838,0.022535095,-0.015147179,-0.03977356,0.019857464,-0.02396186,-0.021381954,-0.010739839,-0.037936356,0.030450717,0.012752948,0.008971039,-0.049995463,-0.0033592535,0.015117862,0.00019300438,0.024313666,0.03279609,-0.026698126,-0.034594204,0.0046467637,0.010876652,-0.030157546,0.01008509,-0.009313072,0.0009466987,-0.030001188,-0.0089514945,0.005042545,-0.031173874,-0.012762721,-0.0070312233,0.0089514945,0.01605601,-0.024880463,0.032463826,0.00065658137,0.03699821,-0.014678106,-0.017512094,-0.00454904,0.003373912,-0.002770468,0.0015782384,0.031095695,0.003061196,0.022007385,-0.012371825,-0.011423905,0.021108327,-0.020776067,-0.020815156,0.030802522,0.011677987,0.038659513,-0.0051598134,0.0045343814,-0.016241685,-0.005418781,-0.0052624233,-0.016769394,-0.008824454,-0.0154696675,0.02980574,-0.045969248,0.03922631,0.018176615,-0.018127754,0.005198903,-0.021733759,-0.02396186,0.015538075,0.01754141,-0.039578114,-0.027206289,0.010036228,0.00028065036,0.0271672,0.016632581,0.0041337144,0.018802047,0.021929206,0.0070019057,-0.032776542,0.012283874,0.0044293283,0.02284781,-0.018684778,-0.030040277,-0.031877484,0.017922534,-0.02564271,0.022046475,-0.00804755,0.016906207,-0.014414252,-0.00049258873,0.04589107,-0.0016234356,0.016700987,-0.018889999,-0.040008098,0.025623165,0.0015501428,-0.025877247,-0.040105823,0.031193418,-0.04104397,-0.02560362,-0.010329399,-0.0056582047,0.014981049,-0.014150398,0.02359051,0.028672146,-0.028984861,0.0279099,-0.06344225,0.023825048,-0.044562027,0.0013265997,0.032620184,0.005643546,0.034691926,0.029453935,-0.0026189962,0.018655462,-0.0009576926,0.022574184,-0.006474198,0.018635917,-0.012879989,0.0043535926,0.03050935,0.010319627,-0.014766057,0.06277773,-0.0118148,0.016847573,-0.020482896,-0.017766176,0.017238468,-0.030294359,0.029786196,-0.025662255,-0.047689185,-0.03709593,-0.013407697,0.00889286,0.001988678,0.00522822,0.023414608,0.032092474,0.033245616,-0.010534619,0.043780234,-0.0056484323,0.025779523,-0.023199616,-0.0143263005,-0.0012887318,-0.059963286,-0.005716839,0.057696097,0.03297199,-0.018166844,-0.0020729648,0.015635798,-0.026365865,-0.0047005117,0.011013465,0.02445048,-0.022085564,0.0035937906,-0.020854246,-0.03881587,-0.0061614816,-0.0020949526,-0.026326776,-0.03297199,0.025720889,-0.00946943,-0.041513044,0.03244428,-0.003684185,-0.00037287714,0.012723631,0.0065230597,-0.017189605,-0.008052436,0.006293409,0.014511975,0.031134784,0.024255032,-0.024548203,-0.014296983,0.040692165,0.027694907,0.0035351564,0.01527422,-0.0031931233,-0.035395537,0.022339648,0.028476698,0.021772848,0.04944821,0.035708256,-0.0065474906,0.031994753,0.00039761348,0.048392795,0.010563936,-0.01576284,0.006122392,0.036607314,-0.02333643,-0.009371706,0.025486352,-0.016769394,-0.030235725,-0.012078654,0.009459658,0.011824572,-0.036157783,0.014209032,0.028672146,0.0027435939,-0.014971277,-0.02128423,0.02087379,-0.0051011792,-0.001183068,-0.03215111,-0.031857938,0.026932662,-0.026072694,-0.037232745,0.0135836,-0.039304487,0.021772848,0.03289381,-0.016417589,-0.036783215,0.023844592,-0.01555762,0.016495768,-0.011502084,0.023766413,-0.014795374,0.048940048,0.019036584,-0.018303657,0.03230747,0.01642736,-0.031056603,0.0143263005,0.012498866,-0.009718626,-0.02165558,0.00008405768,-0.04108306,0.0010273209,-0.0061810263,-0.015117862,-0.015586937,0.03504373,0.025916336,0.043858413,-0.022320103,-0.00495948,-0.03836634,0.026893573,0.045461085,0.02984483,0.0096306745,0.0045270524,0.03222929,-0.014306756,-0.04096579,0.01992587,0.0044562025,0.039441302,0.0124109145,0.002794899,0.01979883,-0.015381716,0.008145274,0.03725229,-0.0024785183,-0.002506614,-0.024763195,0.018577283,0.009948277,0.049174584,0.00281933,-0.009684423,0.0024320995,-0.019241804,0.041630313,0.06578762,0.01239137,0.023492787,-0.03416422,-0.039421756,-0.01371064,0.0047005117,0.011922296,0.00975283,-0.0024479798,-0.04878369,0.012381597,-0.02708902,-0.006347157,0.0026776304,-0.0015538074,0.007876533,-0.012166605,0.008448217,0.02564271,0.032757,-0.015342627,-0.0029683586,-0.035297815,-0.014932187,-0.013622689,0.007109402,0.008203908,0.021030148,0.00410684,0.024313666,-0.036490045,-0.016896434,0.005560481,0.0014377605,-0.028633056,0.002897509,0.031310685,-0.0135542825,-0.0457738,0.02255464,-0.0178639,-0.018000713,0.0034032292,-0.048314616,0.011844117,-0.034066495,0.0009241001,-0.008164818,-0.013632461,0.02742128,0.026619947,-0.036900483,0.009015015,-0.042099386,0.011844117,-0.01490287,-0.009762602,0.00064803055,0.0035400426,0.04256846,0.018616373,-0.0044781906,-0.023043258,-0.0015342627,0.014023356,-0.05976784,0.016515313,-0.038757235,-0.014101536,-0.009884756,-0.056132514,-0.008267429,0.0049619228,0.0040164455,-0.023727324,0.03453557,0.0008776813,-0.014687878,-0.027186744,-0.011765938,-0.019290667,-0.021929206,0.006557263,0.011140507,-0.005521391,0.04335025,-0.018489331,-0.0054529845,-0.037467282,-0.02712811,0.0030489806,-0.018889999,0.02902395,-0.03133023,-0.0070654266,0.0013265997,0.016280776,0.007856988,0.025955426,-0.007212012,-0.009376593,0.012205695,-0.0024003393,-0.027558094,0.029923009,0.0036231077,-0.021909662,0.029258488,-0.0047664754,-0.033128347,-0.011042782,0.0032346558,0.01263568,0.0034716357,-0.015792156,0.009787032,-0.008697413,-0.04194303,0.01280181,-0.01547944,0.0068357754,-0.01618305,-0.022710998,0.006254319,0.018753186,0.03025527,0.029317122,0.005037659,0.008438445,0.023199616,-0.037291378,-0.038679056,0.0062592053,-0.0024211057,0.0030465375,-0.03680276,-0.044835653,-0.039265398,-0.0329329,0.012694314,-0.009019901,-0.030978424,0.04120033,0.00037898487,-0.011384816,-0.02704993,-0.01988678,0.019095218,0.044366576,0.015498985,-0.028457154,-0.0109743755,-0.010984148,0.011668215,0.008819567,-0.0058878553,-0.017463231,-0.016398044,0.016886663,0.010212131,0.04245119,0.01806912,0.018166844,0.015616254,-0.0047982354,-0.015039683,-0.013759502,0.0066989623,0.010788701,0.014511975,-0.011326182,0.01321225,-0.02329734,-0.0023514775,-0.0035204978,-0.021968296,0.029590748,-0.013065664,-0.022808721,0.0052135615,-0.0047909063,-0.014756285,0.012440232,-0.03692003,-0.053826235,-0.0036524248,-0.0015562505,0.00043670295,-0.0024699676,0.02321916,-0.012508638,0.0032859608,0.033577878,-0.063989505,-0.023453698,-0.023160527,0.04667286,-0.022281013,0.04338934,-0.013466331,-0.04022309,-0.046751037,-0.009674651,-0.0063520432,-0.010094862,-0.0034130015,-0.030235725,-0.0100166835,0.018499104,0.018733641,-0.004285186,-0.020267904,-0.004524609,0.021401498,0.0019581395,0.0049765813,0.047102842,-0.009132284,0.019994278,0.017072337,-0.017815039,0.055546172,-0.006742938,-0.020600164,0.021929206,-0.037310924,-0.009620902,0.000843478,-0.0032713022,-0.008775592,0.01025122,0.0008104963,0.015821474,0.029199854,0.008868429,-0.01198093,-0.008267429,0.023492787,-0.02370778,-0.0041434867,-0.000980902,0.020189725,-0.016603263,0.027401736,-0.014951732,-0.009015015,-0.012772493,0.033851504,-0.0019239361,0.026365865,0.027773086,-0.036744125,-0.0032028956,0.008887975,-0.016271003,-0.010573708,-0.018489331,0.040887613,0.011531401,-0.017482776,0.003872303,-0.004172804,-0.009166487,0.01749255,-0.014287211,0.009156714,-0.024470024,-0.01099392,0.031154329,0.0016698544,0.0013998926,-0.0030660823,0.021030148,-0.02746037,-0.0041117263,0.013251339,0.00454904,-0.0090736495,-0.018870454,-0.0007921731,-0.011541174,-0.020776067,-0.036450956,-0.022730542,-0.016485995,-0.030372538,-0.0034960667,0.00032981762,-0.01473674,-0.019447025,0.08208794,0.016329637,-0.01674985,0.005145155,-0.0031711354,0.016163506,0.04264664,0.03215111,0.01395495,-0.020111546,-0.037310924,-0.036568224,-0.0025505896,0.023375519,-0.013446786,0.0044537596,0.012264329,0.018176615,-0.01782481,-0.0076517686,-0.0021890118,-0.0014169943,0.0014707423,0.008414014,-0.0021169404,-0.03099797,0.016554402,0.03709593,0.0054236674,0.021460133,-0.0031076148,0.009132284,-0.010300082,0.02746037,0.017365508,-0.020267904,0.0093033,0.007935167,-0.01144345,-0.046946485,-0.027010841,0.031056603,0.014336073,0.0060735303,0.0035082821,-0.015968058,-0.0007469758,-0.012645452,-0.00784233,0.008619234,-0.009674651,0.020776067,-0.013505421,0.047063753,0.00027133606,-0.0057119527,0.04886187,0.019955188,-0.015997376,-0.031154329,0.03717411,0.03091979,0.008541055,0.014854008,0.03285472,0.01416017,-0.020033367,-0.009464544,-0.009332617,0.054608025,-0.049291853,0.028496243,0.020697888,-0.007685972,0.0316234,-0.0073879147,0.04194303,0.010632343,0.0024931768,-0.014893098,-0.0034960667,-0.009894528,-0.02980574,0.004624776,0.025896791,0.017844355,0.00059947406,0.01144345,0.004258312,0.008883088,-0.012078654,-0.007104516,0.006097961,0.008414014,-0.015831245,-0.009513406,0.029923009,0.0094303405,-0.02296508,-0.005169586,-0.0025799067,-0.03625551,0.016681442,0.012723631,0.008516624,0.058477886,-0.008677868,0.0071387193,-0.049291853,0.033773325,0.013290429,0.010182814,-0.035786435,-0.019359073,0.006537718,0.01029031,0.037721362,0.009914073,-0.00003970027,-0.009425455,-0.0016429804,-0.020267904,0.003290847,0.046242874,-0.020482896,0.083338805,0.032991536,-0.036568224,-0.028672146,0.038346794,0.005858538,-0.0029488138,0.015225358,-0.0051353825,-0.017306874,-0.0047151702,0.04409295,0.005545822,-0.019368846,0.029688472,0.01630032,0.0100166835,0.028711235,0.014560837,0.016730305,0.034652837,-0.007128947,-0.014521748,-0.014101536,-0.0007158264,-0.017590273,-0.03897223,0.00008069843,-0.0063618156,-0.03688094,0.000440673,0.02169467,-0.0016295434,-0.0031198303,0.028926227,0.0017394825,-0.017199378,0.022456916,0.008443331,0.04194303,0.034144673,-0.00056588155,0.00057748624,-0.0068357754,0.02222238,-0.0081941355,-0.007554045,-0.0052966266,-0.0052966266,-0.04037945,0.012645452,-0.023473242,0.007343939,-0.009186031,-0.014130853,0.0543344,0.008702299,0.019486114,-0.00048281634,-0.019319983,-0.00923978,0.011248003,0.026326776,-0.021381954,-0.015215586,0.026111783,-0.010857107,-0.00790585,0.0020045582,-0.003058753,0.0006309289,0.010329399,0.013407697,-0.009635561,-0.023942316,-0.010397806,-0.055858888,-0.0075735897,0.032170653,-0.029610293,-0.016906207,0.022710998,-0.018010486,-0.060627807,-0.020697888,-0.019192941,0.00889286,-0.021088783,0.027558094,0.01750232,0.0279099,0.032542005,-0.024919553,0.046047427,-0.009156714,0.0025041709,-0.02161649,0.00076224515,-0.010319627,-0.040653076,0.0040164455,-0.00940591,0.024489569,0.03371469,-0.044483848,0.04937003,-0.020072456,-0.0064351084,0.031857938,-0.03166249,0.009195804,-0.022574184,-0.0077348338,0.042060297,-0.013720413,0.0061321645,0.007607793,0.022241924,-0.031818848,-0.022378737,0.014893098,0.00825277,0.017306874,-0.004913061,-0.011736621,-0.005770587,0.012537955,-0.021675125,-0.02984483,0.011961386,-0.002091288,0.017052792,0.029238943,0.015215586,0.028515788,0.010593253,0.03992992,0.020424262,0.01144345,0.031232508,-0.0279099,-0.002160916,0.001360803,0.017942078,-0.0023575851,0.00095463876,0.03963675,0.00431206,-0.0025212725,-0.0033494812,0.022085564,0.0032322127,0.022632819,0.0321902,0.015498985,-0.0010218238,0.01959361,0.025955426,-0.021147417,0.03363651,-0.038698602,-0.029414846,0.03527827,0.039265398,0.036548678,0.020619709,0.0033372657,-0.02013109,0.0029537,-0.011590036,-0.042138476,0.016593492,0.015880108,0.010593253,0.026444044,-0.007260874,0.030313903,-0.012156833,-0.020521985,-0.016886663,-0.017668452,0.0074416627,-0.016642353,0.00821368,-0.012371825,0.017316647,0.03832725,-0.02564271,-0.00078240066,0.005438326]},{"id":"is-palindrome","name":"Is Palindrome","description":"Given a string `s`, return `true` if it is a **palindrome**, otherwise return `false`.\n    \nA **palindrome** is a string that reads the same forward and backward. It is also case-insensitive and ignores all non-alphanumeric characters.\n\n**Example 1:**\n\n```java\nInput: s = \"Was it a car or a cat I saw?\"\n\nOutput: true\n```\n\nExplanation: After considering only alphanumerical characters we have \"wasitacaroracatisaw\", which is a palindrome.\n\n**Example 2:**\n\n```java\nInput: s = \"tab a cat\"\n\nOutput: false\n```\n\nExplanation: \"tabacat\" is not a palindrome.\n\n**Constraints:**\n* `1 <= s.length <= 1000`\n* `s` is made up of only printable ASCII characters.\n","difficulty":"Easy","concepts":["Two Pointers"],"solutions":{"python":"class Solution:\n    def isPalindrome(self, s: str) -> bool:\n        l, r = 0, len(s) - 1\n\n        while l < r:\n            while l < r and not self.alphaNum(s[l]):\n                l += 1\n            while r > l and not self.alphaNum(s[r]):\n                r -= 1\n            if s[l].lower() != s[r].lower():\n                return False\n            l, r = l + 1, r - 1\n        return True\n    \n    def alphaNum(self, c):\n        return (ord('A') <= ord(c) <= ord('Z') or \n                ord('a') <= ord(c) <= ord('z') or \n                ord('0') <= ord(c) <= ord('9'))\n","javascript":"class Solution {\n    /**\n     * @param {string} s\n     * @return {boolean}\n     */\n    isPalindrome(s) {\n        let l = 0;\n        let r = s.length - 1;\n\n        while (l < r) {\n            while (l < r && !this.alphaNum(s[l])) {\n                l++;\n            }\n            while (r > l && !this.alphaNum(s[r])) {\n                r--;\n            }\n            if (s[l].toLowerCase() !== s[r].toLowerCase()) {\n                return false;\n            }\n            l++;\n            r--;\n        }\n        return true;\n    }\n\n    /**\n     * @param {string} c\n     * @return {boolean}\n     */\n    alphaNum(c) {\n        const charCode = c.charCodeAt(0);\n        return (\n            (65 <= charCode && charCode <= 90) ||\n            (97 <= charCode && charCode <= 122) ||\n            (48 <= charCode && charCode <= 57)\n        );\n    }\n}\n","cpp":"class Solution {\npublic:\n    bool isPalindrome(string s) {\n        int l = 0;\n        int r = s.size() - 1;\n        \n        while (l < r) {\n            while (!isalnum(s[l]) && l < r) {\n                l++;\n            }\n            while (!isalnum(s[r]) && l < r) {\n                r--;\n            }\n            if (tolower(s[l]) != tolower(s[r])) {\n                return false;\n            }\n            l++;\n            r--;\n        }\n        return true;\n    }\n};\n","java":"class Solution {\n    public boolean isPalindrome(String s) {\n        int l = 0;\n        int r = s.length() - 1;\n        while (l < r) {      \n            while (l < r && !Character.isLetterOrDigit(s.charAt(l))) {\n                l++;\n            }\n            while (l < r && !Character.isLetterOrDigit(s.charAt(r))) {\n                r--;\n            }\n            if (Character.toLowerCase(s.charAt(l)) != Character.toLowerCase(s.charAt(r))) {\n                return false;\n            }\n            l++;\n            r--;    \n        }  \n        return true;\n    }\n}\n","csharp":"public class Solution {\n    public bool IsPalindrome(string s) {\n        int left = 0;\n        int right = s.Length - 1;\n\n        while (left < right) {\n            if (!char.IsLetterOrDigit(s[left])) {\n                left++;\n            } else if (!char.IsLetterOrDigit(s[right])) {\n                right--;\n            } else {\n                if (char.ToLower(s[left]) != char.ToLower(s[right])) {\n                    return false;\n                }\n                left++;\n                right--;\n            }\n        }\n        return true;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def isPalindrome(self, s: str) -> bool:\n        ","javascript":"class Solution {\n    /**\n     * @param {string} s\n     * @return {boolean}\n     */\n    isPalindrome(s) {}\n}\n","cpp":"class Solution {\npublic:\n    bool isPalindrome(string s) {\n        \n    }\n};\n","java":"class Solution {\n    public boolean isPalindrome(String s) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public bool IsPalindrome(string s) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/jJXJ16kPFWg","embedding":[0.06237154,-0.020605259,0.006307411,0.007198733,0.027935067,0.04150413,-0.012856003,-0.002407879,0.014093367,0.03452036,0.018979907,-0.0599807,-0.012960864,0.031584244,0.022335472,0.035170503,-0.020856926,0.02575395,-0.021517552,0.036303006,0.0649721,0.01476448,0.034855917,-0.020447966,0.04150413,0.007990436,0.023048528,-0.0066901552,-0.023488946,-0.024600476,0.014103853,-0.004018812,0.010391762,-0.03542217,-0.03487689,0.018843587,-0.0011023551,-0.011608153,0.023635752,-0.022398388,-0.04097982,-0.026613815,0.003754037,-0.020940814,-0.002739503,0.017249694,0.010564783,0.027012287,-0.044167608,0.030787297,0.013642464,0.03542217,0.015938928,-0.0033529422,-0.051717624,-0.023300195,-0.013663435,0.017585251,0.033178136,0.031227715,0.010239712,0.0009352323,0.008797868,-0.0029518474,-0.004034541,0.02030116,-0.012300238,0.027997984,-0.024306864,-0.03026299,-0.025586173,0.016536636,0.012562391,-0.011786417,-0.047858726,0.026152425,0.014879827,0.04974623,0.05712847,0.012216349,-0.022838805,-0.013747325,0.07906547,-0.012069543,-0.009794052,0.049872067,-0.043244828,0.06820183,-0.05566041,-0.03735162,-0.00042403315,-0.020290675,0.0032061362,-0.02296464,0.049494565,-0.007466129,0.053395405,0.001474613,0.020972272,0.015697746,-0.010916068,-0.014984689,0.05305985,0.085105486,-0.012405099,0.023740614,0.08867077,0.023467973,-0.020259216,0.0011941087,-0.036386892,0.024852144,0.02529256,-0.037058007,0.034918834,0.009468981,-0.0012091827,-0.055786245,-0.002464242,-0.00061868207,0.0012668563,-0.013076212,-0.010197768,-0.07755546,-0.052011237,-0.028081873,-0.018361226,-0.052808184,0.04236399,-0.010585755,-0.02934021,-0.024432698,0.0058093197,0.010197768,0.004642737,0.02252422,0.0123212105,-0.03135355,-0.04261566,0.07063462,0.016840735,-0.0046689524,-0.0027499893,0.031311605,0.026236314,-0.02024873,-0.022629082,0.0004538531,-0.024558531,0.043790106,0.024726309,-0.016515665,0.022943666,0.05591208,0.003567908,-0.013118157,0.03284258,-0.025208673,0.01139843,0.053563185,-0.00061835436,-0.015246842,-0.0035967447,-0.002031689,0.014596702,-0.028501319,0.026823537,-0.010182039,0.010417976,-0.022209637,0.014093367,-0.04852984,-0.050249565,-0.05452791,-0.0037278214,-0.0026595464,0.028081873,-0.02915146,-0.04559372,-0.022440333,-0.024705337,-0.017847404,0.012247807,-0.06279098,0.021192482,0.008383666,0.03775009,-0.044628996,-0.02445367,0.011901765,0.032737717,0.040371627,0.012625309,0.0022178178,-0.010653915,-0.028836876,0.022650056,-0.00784363,-0.030451741,-0.03236022,-0.029487016,-0.0132649625,-0.018770184,0.004427771,0.03496078,-0.057715695,-0.016830249,-0.036932174,-0.013495658,0.00028345338,-0.015299273,-0.0039349226,0.019357407,0.013233504,0.046977893,-0.009353634,0.027452705,-0.008855542,0.016033303,0.002339719,-0.047103725,0.05897403,0.02785118,0.07214462,0.012677739,0.026425064,0.029864516,-0.00089590927,0.030661464,-0.024411725,-0.010999957,0.005678243,0.028417429,0.012856003,0.010029989,-0.047900673,0.0020605258,-0.022167692,-0.013202046,-0.012688225,-0.006962795,0.013946561,0.023153389,-0.015750177,-0.023237279,-0.004100079,0.001283241,0.042867325,-0.01397802,-0.014932258,0.01008242,0.005056939,0.012163918,-0.044587053,-0.011566209,0.05415041,-0.005856507,-0.04798456,0.043622326,-0.046935946,-0.072564065,0.014229687,-0.034855917,-0.08502159,0.0036255817,-0.020447966,-0.007303594,0.024936033,0.0062811957,-0.034247722,-0.033618554,-0.00032113792,0.018717753,-0.004021433,-0.016683443,-0.013967534,-0.010690616,0.023866447,-0.018843587,0.0011121859,-0.045635667,0.00096144766,0.024411725,0.0033765358,-0.037603285,0.026676731,-0.0049311058,-0.0033267268,-0.07310934,-0.05897403,-0.025355479,0.00079432485,0.0003820886,0.04890734,-0.03793884,-0.011083846,0.0068684192,0.012289752,-0.04509039,-0.0011442996,0.055115134,-0.025963673,0.027641457,0.02971771,-0.019284004,-0.02371964,-0.035002723,-0.01126211,-0.009820267,0.012604336,-0.034184806,-0.011251625,0.0076496364,0.01905331,-0.042154267,-0.07449351,-0.04125246,-0.028270625,-0.0076758517,-0.023467973,-0.010192525,0.0061134174,0.037120923,0.041650932,0.022335472,0.023195334,0.014282118,0.023488946,0.014659619,-0.035736755,-0.014816911,-0.032045633,0.023488946,0.025271589,-0.06979573,0.043077048,-0.020510882,0.0603582,-0.020332618,-0.016631013,0.010632942,0.008892244,0.026446037,0.066649884,-0.05092068,-0.011251625,-0.014586216,0.000026112937,0.014082882,-0.0024524452,-0.007869845,0.029696738,-0.015372676,-0.0082735615,-0.008808355,0.021559497,-0.021402204,0.029004654,-0.028039929,-0.017406987,0.046852056,-0.041042738,-0.036219116,-0.005463277,0.020521369,0.01068013,-0.036680505,-0.0075762337,-0.0017800217,-0.013831214,-0.03227633,0.018256364,0.014407951,0.01061197,0.04722956,-0.0014588838,-0.042217184,0.0129503785,-0.029969377,0.056247637,-0.010758776,0.03378633,-0.0007432049,0.01226878,0.03286355,0.06702738,0.023908392,-0.02915146,-0.050333455,-0.02934021,-0.00685269,-0.012541419,0.002093295,0.0035259633,0.026592841,-0.0135795465,0.0037566584,0.04293024,-0.03582064,0.025040895,0.03338786,-0.008976133,0.0037723875,0.0023541376,-0.043118995,0.0033739144,-0.023195334,0.034918834,0.013757811,0.04200746,0.02176922,-0.013170588,0.03938593,0.025166728,0.03072438,0.008651063,-0.027641457,-0.023467973,0.03414286,-0.012226835,0.026047563,-0.049536508,0.011922738,-0.014607188,0.0415251,0.011828362,-0.027641457,-0.0038379258,0.0026529925,-0.032129522,0.024348808,0.012488988,0.027473677,-0.017511848,-0.06333626,0.025103811,0.01642129,0.05561847,-0.017815946,-0.03726773,-0.03770815,-0.022712972,-0.0133803105,-0.004142024,0.019556645,-0.024306864,0.0085462015,0.042238157,-0.0067897732,-0.011104818,0.016347887,-0.0031982716,0.02176922,-0.01978734,0.0022047102,-0.0024209868,0.017102888,0.017469903,0.024013253,-0.00019940044,-0.019525185,-0.020657688,-0.04844595,0.018822614,0.05951931,0.03139549,-0.03970051,0.020972272,-0.00043353622,-0.028480347,0.017186778,-0.0018023048,0.0037959814,-0.020196298,-0.021936998,-0.0039375443,0.01726018,0.0730674,-0.023782557,-0.046726223,-0.045803443,-0.017826432,0.014565243,0.025921728,-0.012782601,-0.026823537,0.011041902,-0.02418103,-0.0067163706,-0.008420368,0.030095212,-0.016347887,-0.0073455386,-0.006742586,0.010937041,-0.030242018,0.043035105,-0.021276372,0.0006645589,-0.022125747,-0.028354513,-0.012310724,0.03210855,0.0054160897,0.030850213,-0.0107482895,-0.015855039,-0.03147938,-0.0007949802,0.04106371,0.0064280014,-0.006616752,0.009238286,-0.016159136,0.008986619,-0.03275869,-0.024873115,-0.008672035,-0.032150496,-0.004959943,0.024894089,-0.016001845,0.016484207,-0.02250325,0.0079589775,-0.04089593,-0.0173965,-0.012216349,-0.0376662,-0.0011698595,-0.004349125,-0.010968499,-0.0067530717,0.010155823,-0.010171552,0.0064856755,-0.008383666,0.0002691988,-0.042322047,-0.057547916,0.028585209,-0.024747282,0.004472337,0.013558574,-0.0030907886,-0.0040109474,0.004710897,0.015834065,-0.0042049405,-0.028627153,0.0026254663,0.017438445,-0.02024873,-0.006286439,-0.010711588,-0.023971308,-0.0063178972,-0.013034267,0.0033896435,0.048487894,-0.015844552,-0.013317393,0.052011237,0.0031327333,0.038484123,0.01430309,-0.028081873,0.0079013035,-0.0024157437,0.014722535,0.03546411,0.0075972057,-0.035652865,-0.037813008,0.02361478,-0.028752986,-0.039448846,-0.01582358,-0.014942745,0.016777819,-0.0073612677,-0.014240174,-0.015529968,-0.016400317,-0.03533828,-0.007298351,-0.01449184,-0.004978293,-0.005243068,0.008152971,-0.021140052,0.040665235,0.04097982,-0.019336436,-0.01411434,-0.032297302,-0.010643428,-0.004742355,0.009935615,-0.024139086,0.010029989,0.007896061,0.01587601,0.04559372,-0.007120087,-0.028794931,0.023656724,0.029759655,0.010155823,0.020018034,0.017658655,0.016735874,-0.0046217646,-0.0008225063,0.026089508,-0.008824084,0.022314498,0.0503754,0.007371754,-0.01102093,0.0044094203,0.022482276,0.04832012,0.03110188,0.014177256,-0.014219201,-0.0085462015,0.036009394,-0.018413655,0.01023447,-0.008069082,0.014187743,-0.004367476,0.0037514153,0.030409796,0.022209637,0.015278301,0.0026005618,0.018791156,-0.0390294,0.010832179,-0.013369824,0.007455643,-0.039323013,-0.025439367,0.012625309,0.015896983,0.020217272,0.009427037,-0.0062340084,0.013181074,0.03974246,0.06400738,0.017648168,0.0022820455,0.003111761,-0.04030871,-0.018896017,-0.021895053,0.010040476,0.031605214,-0.0020998488,0.01397802,-0.016305942,0.0007674541,-0.07243823,-0.0002724757,0.0027421247,0.046474557,-0.008866028,0.013359338,0.021433663,0.049578454,-0.02934021,-0.034289666,-0.023488946,0.029864516,-0.0034525604,-0.032905497,0.03462522,0.0039978395,0.012300238,-0.01791032,0.01970345,-0.034205776,0.008451826,-0.014554758,0.03487689,-0.01669393,-0.014366007,0.00014434822,-0.019388866,-0.060945425,-0.001823277,0.03810662,-0.03514953,0.02722201,0.020175327,0.02136026,-0.086321875,0.007230191,-0.01563483,0.04328677,-0.002633331,-0.026970344,-0.049788177,0.022356443,-0.020143868,-0.044670943,0.016924623,-0.019860743,0.012929406,-0.001936003,0.018822614,-0.033849247,-0.03590453,0.0022401009,0.0067950166,0.0022204395,-0.028962709,-0.00022479655,0.006821232,-0.0027709615,-0.001970083,-0.012205862,-0.0015335975,-0.000108384054,0.020143868,-0.0064384877,0.005610083,-0.008037624,-0.010580512,0.0018324524,0.017700598,0.019598588,-0.031164797,0.014282118,0.026446037,-0.025502283,-0.03248605,-0.042112324,0.0033975083,0.01148232,0.00897089,-0.009243529,0.02371964,-0.03655467,0.043706216,-0.039595652,0.019682478,0.009531898,0.0037802523,0.038400233,-0.024831172,-0.005987584,0.019493727,0.023195334,0.002616291,-0.027242983,0.023195334,-0.01397802,-0.0033975083,-0.030304935,-0.007366511,0.0007681095,0.034897864,-0.0073612677,0.0010872813,0.013663435,0.0076129353,-0.012960864,0.01918963,0.0055786246,-0.0054213325,-0.0064961617,-0.0035888802,-0.022083804,-0.023635752,0.047565114,-0.03707898,-0.031143826,0.004603414,0.011136277,0.006480432,0.033094246,-0.00008937793,0.0014169392,-0.028249651,0.041588016,0.0052483114,-0.011639612,-0.0056362986,-0.03617717,-0.013191559,-0.0003817609,-0.009846482,0.019063797,-0.014691077,0.031143826,0.00181148,0.036365923,0.00810054,0.024936033,0.006774044,-0.030116184,-0.04429344,-0.026467009,0.0146386465,0.022629082,-0.018770184,0.0015427729,0.063420154,-0.04391594,0.0180781,-0.012572878,0.039847318,-0.021391718,0.03758231,0.02407617,0.044880666,-0.012363154,0.022230608,-0.002807663,0.0023187469,0.011713014,-0.014617674,0.012845517,-0.0072564064,-0.0074399137,0.059938755,-0.022985611,0.027935067,-0.006747829,0.0010223984,0.0032664316,0.021895053,0.035757724,-0.0006704574,-0.011817876,-0.004343882,-0.015991358,0.013715867,-0.0074923444,-0.044670943,0.02583784,0.002920389,-0.0033634282,-0.050962623,0.039323013,-0.031710077,0.008483284,-0.0036203386,0.0040476485,-0.023216305,-0.014890314,-0.014607188,-0.00086838315,0.022629082,-0.00832075,0.008278805,0.051633734,0.031961743,0.0071934895,-0.053353462,-0.00016777818,0.022398388,0.0073140804,0.010412733,-0.049242895,0.031437438,0.0028941736,0.0039139506,0.0044382573,-0.021538524,-0.012279266,0.0036413108,0.0071882466,0.0020303782,-0.0009883184,-0.02787215,0.013149615,-0.0376662,-0.022335472,0.044419274,-0.007198733,-0.08414076,-0.015152467,0.009212071,-0.0058093197,-0.01604379,0.007062413,-0.028018957,0.009411307,0.0063913004,-0.00010699136,0.020856926,0.0012360533,-0.03439453,0.034079943,-0.021297343,-0.016022816,0.015393648,-0.0038274399,0.00014508553,0.0042678574,0.0036150955,-0.006758315,0.009594815,-0.006601023,-0.01655761,-0.047271505,-0.03236022,-0.027893122,0.06660794,0.059729032,-0.023488946,0.0030173857,-0.0007012604,0.029591877,0.014533785,0.012405099,-0.0390294,-0.022020886,-0.023782557,0.016463235,0.004354368,-0.005583868,0.037414536,0.002369867,0.008367937,-0.01604379,0.0028155276,0.023195334,-0.002791934,-0.026907425,-0.013401282,-0.038001757,0.010926554,0.042112324,-0.018854074,-0.0026202234,-0.007120087,-0.04087496,-0.028794931,0.013453713,-0.040791072,-0.011010443,-0.052346792,-0.0021929133,0.01604379,0.00869825,-0.012782601,-0.0032061362,0.00024216421,-0.0049678073,-0.0036937415,-0.01620108,0.022985611,0.029403126,0.0014444652,-0.004598171,-0.025040895,0.015844552,0.022985611,0.020940814,0.0012432626,0.002278113,-0.00857766,-0.011272597,-0.014680591,-0.016075248,-0.03322008,-0.0376662,0.02499895,0.025229644,-0.025900757,0.018875046,0.032150496,0.037687175,-0.027977012,0.01365295,0.000037705035,-0.0047790566,0.024873115,-0.0043517468,0.011545236,-0.0015650559,0.0071567884,0.034772027,0.025061866,0.025166728,0.03147938,-0.0061606052,0.012174404,0.006375571,-0.011220166,-0.0076915813,-0.021622414,0.024957005,0.007927519,0.0018861938,-0.002177184,0.022922695,0.03921815,-0.029948406,-0.04668428,-0.021874081,0.0088031115,-0.032234382,0.037603285,-0.020479424,-0.0027814477,-0.024957005,0.014093367,0.021381233,0.029507987,0.013831214,0.019923659,-0.0038143322,-0.046810113,-0.0041079437,0.014848369,-0.010874123,0.0013854807,-0.007523803,-0.003651797,-0.021538524,0.04328677,-0.023950337,0.051340126,-0.009925128,0.0137368385,-0.022335472,0.030787297,0.0072826217,0.028836876,0.05129818,-0.028417429,-0.025774924,0.012101001,0.01791032,0.019084768,0.014145798,-0.029487016,-0.030661464,0.002183738,-0.002807663,-0.023405056,-0.01987123,-0.013023782,-0.021664359,0.05813514,-0.01720775,-0.0062811957,-0.02030116,-0.010874123,0.022125747,-0.009054779,0.011408917,0.033366885,-0.019441297,0.0052509326,0.010695859,-0.012541419,0.04408372,-0.029948406,0.012835031,0.01837171,-0.046894003,-0.005520951,-0.001302247,0.017815946,-0.050123733,-0.000014295553,-0.017763516,-0.0087454375,-0.02703326,0.008105784,-0.0131076705,-0.007067656,0.047942616,-0.019588104,-0.013254477,0.002689694,-0.0036413108,0.0047633275,-0.026089508,-0.015865525,-0.03634495,-0.016263997,0.021014217,-0.002160144,0.011104818,0.008420368,-0.02575395,-0.016819762,-0.005384631,-0.010113878,-0.01753282,0.016117191,0.00094440766,0.03496078,0.02160144,-0.03443647,-0.040518433,-0.0016895788,-0.056247637,-0.014449896,-0.014733022,-0.021643385,0.032339245,0.04198649,-0.02062623,0.01068013,0.004134159,-0.008708736,-0.015813094,0.012153432,-0.025502283,-0.011775931,0.03294744,-0.01021874,0.011461347,0.0089604035,-0.01837171,-0.02288075,0.0019713936,0.035443142,0.0037330645,0.028752986,0.013600519,-0.015980871,-0.03655467,0.015855039,0.020584285,0.01896942,0.025963673,-0.016924623,-0.010213497,0.027242983,0.01430309,0.00929596,0.00029295645,-0.01107336,0.038819678,0.027242983,0.0028679583,0.043873996,0.012960864,0.02575395,-0.018046642,-0.016033303,0.011933223,0.0067688012,-0.0083312355,0.00910721,-0.030451741,0.01970345,0.005709701,-0.035401195,0.0151105225,-0.026928399,0.023782557,0.009154397,0.022020886,0.014733022,-0.002182427,-0.011366972,0.009526655,0.0079013035,-0.020584285,0.0027893123,-0.009421794,-0.01476448,0.020039007,-0.054108463,0.0025310912,0.006464703,0.024118114,0.006700641,-0.024852144,0.002369867,-0.021664359,-0.008724466,-0.011733986,0.006307411,-0.032737717,-0.01642129,0.034834944,-0.020668175,0.008179187,0.01536219,-0.018298307,-0.005835535,-0.023929363,0.023551863,-0.020122895,-0.005056939,-0.004393691,-0.0273059,0.009128182,0.013831214,0.018529003,0.012824545,-0.005846021,0.0155823985,-0.015194411,-0.027431734,0.02409714,0.0063913004,0.015005661,0.019965604,-0.0016122435,-0.030934103,0.01148232,-0.105700254,0.009877941,0.005182773,0.0031484624,-0.015676774,-0.012614822,0.014177256,0.04836206,-0.020668175,-0.0033608067,-0.053101797,0.0230695,0.036009394,-0.0066377246,-0.0056415414,-0.0089027295,-0.04041357,0.014890314,0.0047843,0.024516586,0.009379849,-0.03156327,-0.027242983,0.037246756,0.00006537451,0.014628161,0.017543307,-0.010916068,-0.006197307,0.05784153,0.01213246,-0.002549442,0.06769849,0.0069680377,-0.032716747,-0.02260811,-0.00791179,-0.027997984,-0.027138121,-0.012698711,-0.00138417,-0.034352582,0.0100614475,0.020563314,-0.013936075,-0.003646554,-0.005583868,-0.025921728,-0.0037383076,0.036680505,0.011723501,-0.01180739,0.030011322,0.004912755,-0.010417976,0.00012239287,0.004063378,0.03644981,-0.0074189417,0.03173105,0.033849247,-0.011083846,0.026383119,-0.01015058,0.007681095,0.027997984,0.027830206,0.013600519,-0.01001426,0.0023829746,0.021140052,-0.01791032,0.0007209219,-0.019294491,0.026928399,-0.018466087,0.0054108463,0.017375529,0.025166728,0.023845475,-0.011576694,0.020080952,-0.0014706806,-0.055324856,0.0026529925,-0.037603285,-0.03338786,0.0034053728,0.007466129,0.047900673,-0.00044238387,0.008603875,0.00011649442,-0.014869342,0.020007549,-0.021098107,-0.04521622,-0.0096472455,0.016127678,-0.0063965432,-0.022922695,0.011377458,-0.00061081746,0.001196075,-0.017899835,-0.01126211,0.05654125,-0.048697617,-0.017113375,0.018979907,-0.021853108,0.009474224,0.017050458,0.0025809004,-0.005353173,-0.04188163,-0.008551444,-0.021664359,0.010197768,-0.0035076127,-0.024432698,0.018633865,0.028752986,-0.013013295,0.010197768,-0.01688268,-0.024936033,-0.007214462,-0.0075657475,-0.027536595,-0.008651063,-0.00540036,-0.013296421,-0.020101923,-0.025355479,0.009982802,-0.05222096,-0.03546411,0.023027556,-0.013411769,0.014512813,-0.031437438,0.02787215,-0.02999035,-0.028249651,-0.017375529,0.003607231,-0.0035259633,-0.013443227,-0.0074871015,-0.00030147642,0.042301074,-0.011891278,-0.01508955,0.015540455,-0.007764984,-0.04420955,0.007995679,-0.056331526,-0.06618849,-0.028438402,-0.0072668926,0.05058512,-0.006836961,0.0032507023,-0.01153475,-0.0020631473,0.005746403,-0.009322176,-0.009988045,0.0024458913,0.007875089,0.011775931,0.020206785,0.04412566,0.017459417,0.017406987,0.016956083,-0.0042966944,-0.0016974433,-0.023467973,0.029466044,0.030556602,0.01102093,0.016515665,0.012541419,0.066146545,0.008939431,0.0326748,-0.03248605,-0.009867455,-0.01881213,-0.012415586,0.012908434,0.01324399,0.010339331,0.011629125,0.0042809653,-0.009841239,-0.034772027,-0.025019921,-0.025313534,-0.037875924,-0.013464199,0.0020041629,0.01910574,0.01259385,-0.008603875,-0.028564235,0.019126713,0.019168658,0.0109055815,0.02399228,-0.03542217,-0.06677572,-0.025439367,-0.025921728,0.007371754,-0.010045718,0.027452705,0.026550898,0.010444192,0.025942702,-0.01107336,0.012174404,0.009652489,-0.013684408,-0.0039925966,0.01365295,-0.0012648902,0.005227339,0.01517344,-0.03349272,-0.0021011597,0.01204857,0.00087755854,0.015781635,-0.018025668,-0.028249651,0.022650056,0.015603371,-0.012499475,0.017511848,0.01153475,0.004412042,0.018004697,0.032213412,0.037519395,-0.012971351,0.006055744,0.012814059,0.030892158,-0.01153475,0.048739564,-0.007151545,0.031772994,-0.05977098,0.040455513,-0.03110188,0.021706302,0.051130403,0.017008513,0.005431819,0.004629629,0.03347175,0.028312568,0.011408917,0.0021457258,0.03617717,0.0008329925,0.0039821104,-0.018067613,-0.016410803,-0.0064909183,0.02546034,-0.019063797,-0.0013920346,0.010470407,0.029235348,-0.02445367,0.014670105,0.01813053,0.014449896,0.020752065,0.0132649625,0.029256321,-0.007864602,-0.009799294,-0.004629629,-0.010643428,-0.046055112,0.005709701,-0.0082735615,0.009830753,0.024558531,0.020531856,-0.014890314,-0.034918834,-0.0043124235,0.02016484,0.015477537,-0.004742355,-0.010821693,0.04030871,0.05154985,0.0051250993,0.0150685785,0.022398388,0.00507529,0.0070991144,-0.0020054737,0.042783435,-0.008163457,0.0052011237,-0.0038353044,-0.0043124235,-0.0021916025,0.03607231,0.033094246,-0.009421794,0.0054265754]},{"id":"islands-and-treasure","name":"Islands and Treasure","description":"You are given a $m \\times n$ 2D `grid` initialized with these three possible values:\n\n1. `-1` - A water cell that *can not* be traversed.\n2. `0` - A treasure chest.\n3. `INF` - A land cell that *can* be traversed. We use the integer `2^31 - 1 = 2147483647` to represent `INF`.\n\nFill each land cell with the distance to its nearest treasure chest. If a land cell cannot reach a treasure chest than the value should remain `INF`.\n\nAssume the grid can only be traversed up, down, left, or right.\n\n**Example 1:**\n\n```java\nInput: [\n  [2147483647,-1,0,2147483647],\n  [2147483647,2147483647,2147483647,-1],\n  [2147483647,-1,2147483647,-1],\n  [0,-1,2147483647,2147483647]\n]\n\nOutput: [\n  [3,-1,0,1],\n  [2,2,1,-1],\n  [1,-1,2,-1],\n  [0,-1,3,4]\n]\n```\n\n**Example 2:**\n\n```java\nInput: [\n  [0,-1],\n  [2147483647,2147483647]\n]\n\nOutput: [\n  [0,-1],\n  [1,2]\n]\n```\n\n**Constraints:**\n* `m == grid.length`\n* `n == grid[i].length`\n* `1 <= m, n <= 100`\n* `grid[i][j]` is one of `{-1, 0, 2147483647}`\n","difficulty":"Medium","concepts":["Matrix BFS"],"solutions":{"python":"class Solution:\n    def islandsAndTreasure(self, grid: List[List[int]]) -> None:\n        ROWS, COLS = len(grid), len(grid[0])\n        visit = set()\n        q = deque()\n\n        def addCell(r, c):\n            if (\n                min(r, c) < 0\n                or r == ROWS\n                or c == COLS\n                or (r, c) in visit\n                or grid[r][c] == -1\n            ):\n                return\n            visit.add((r, c))\n            q.append([r, c])\n\n        for r in range(ROWS):\n            for c in range(COLS):\n                if grid[r][c] == 0:\n                    q.append([r, c])\n                    visit.add((r, c))\n\n        dist = 0\n        while q:\n            for i in range(len(q)):\n                r, c = q.popleft()\n                grid[r][c] = dist\n                addCell(r + 1, c)\n                addCell(r - 1, c)\n                addCell(r, c + 1)\n                addCell(r, c - 1)\n            dist += 1\n","javascript":"class Solution {\n    /**\n     * @param {number[][]} grid\n     */\n    islandsAndTreasure(grid) {\n        let ROWS = grid.length;\n        let COLS = grid[0].length;\n        let visit = new Set();\n        let q = [];\n\n        /**\n         * @param {number} r\n         * @param {number} c\n         */\n        function addCell(r, c) {\n            if (\n                Math.min(r, c) < 0 ||\n                r === ROWS ||\n                c === COLS ||\n                visit.has(r + ',' + c) ||\n                grid[r][c] === -1\n            ) {\n                return;\n            }\n            visit.add(r + ',' + c);\n            q.push([r, c]);\n        }\n\n        for (let r = 0; r < ROWS; r++) {\n            for (let c = 0; c < COLS; c++) {\n                if (grid[r][c] === 0) {\n                    q.push([r, c]);\n                    visit.add(r + ',' + c);\n                }\n            }\n        }\n\n        let dist = 0;\n        while (q.length > 0) {\n            for (let i = 0, len = q.length; i < len; i++) {\n                let [r, c] = q.shift();\n                grid[r][c] = dist;\n                addCell(r + 1, c);\n                addCell(r - 1, c);\n                addCell(r, c + 1);\n                addCell(r, c - 1);\n            }\n            dist += 1;\n        }\n    }\n}\n","cpp":"class Solution {\npublic:\n    void islandsAndTreasure(vector<vector<int>>& grid) {\n        int m = grid.size();\n        int n = grid[0].size();\n        \n        queue<pair<int, int>> q;\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                if (grid[i][j] == 0) {\n                    q.push({i, j});\n                }\n            }\n        }\n        \n        vector<vector<int>> dirs = {{-1, 0}, {1, 0}, {0, -1}, {0, 1}};\n        while (!q.empty()) {\n            int row = q.front().first;\n            int col = q.front().second;\n            q.pop();\n            \n            for (int i = 0; i < 4; i++) {\n                int x = row + dirs[i][0];\n                int y = col + dirs[i][1];\n                \n                if (x < 0 || x >= m || y < 0 || y >= n || grid[x][y] != INT_MAX) {\n                    continue;\n                }\n                \n                grid[x][y] = grid[row][col] + 1;\n                q.push({x, y});\n            }\n        }\n    }\n};\n","java":"class Solution {\n    public void islandsAndTreasure(int[][] grid) {\n        Queue<int[]> q = new LinkedList<>();\n        int m = grid.length;\n        int n = grid[0].length;\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                if (grid[i][j] == 0) q.add(new int[] { i, j });\n            }\n        }\n        if (q.size() == 0) return;\n        int[][] dirs = { { -1, 0 }, { 0, -1 }, { 1, 0 }, { 0, 1 } };\n        while (!q.isEmpty()) {\n            int[] cur = q.poll();\n            int row = cur[0];\n            int col = cur[1];\n            for (int[] dir : dirs) {\n                int x = row + dir[0];\n                int y = col + dir[1];\n                if (\n                    x >= m ||\n                    y >= n ||\n                    x < 0 ||\n                    y < 0 ||\n                    grid[x][y] != Integer.MAX_VALUE\n                ) continue;\n                q.add(new int[] { x, y });\n\n                grid[x][y] = grid[row][col] + 1;\n            }\n        }\n    }\n}\n","csharp":"public class Solution {\n    public void islandsAndTreasure(int[][] grid) {\n        Queue<int[]> q = new Queue<int[]>();\n        int m = grid.Length;\n        int n = grid[0].Length;\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                if (grid[i][j] == 0) q.Enqueue(new int[] { i, j });\n            }\n        }\n\n        if (q.Count == 0) return;\n        \n        int[][] dirs = { new int[] { -1, 0 }, new int[] { 0, -1 }, new int[] { 1, 0 }, new int[] { 0, 1 } };\n        while (q.Count > 0) {\n            int[] cur = q.Dequeue();\n            int row = cur[0];\n            int col = cur[1];\n            foreach (int[] dir in dirs) {\n                int x = row + dir[0];\n                int y = col + dir[1];\n                if (\n                    x >= m ||\n                    y >= n ||\n                    x < 0 ||\n                    y < 0 ||\n                    grid[x][y] != int.MaxValue\n                ) continue;\n                q.Enqueue(new int[] { x, y });\n\n                grid[x][y] = grid[row][col] + 1;\n            }\n        }\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def islandsAndTreasure(self, grid: List[List[int]]) -> None:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[][]} grid\n     */\n    islandsAndTreasure(grid) {}\n}\n","cpp":"class Solution {\npublic:\n    void islandsAndTreasure(vector<vector<int>>& grid) {\n        \n    }\n};\n","java":"class Solution {\n    public void islandsAndTreasure(int[][] grid) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public void islandsAndTreasure(int[][] grid) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/e69C6xhiSQE","embedding":[-0.024955673,-0.025487158,0.06928641,0.008781594,-0.043195296,-0.009602982,0.014470908,-0.014362195,-0.024194682,0.02031725,-0.0035694102,-0.048220254,0.013758234,0.0010176745,0.03193746,-0.022745175,-0.010424368,-0.0027389636,0.023095472,0.04660164,0.018179229,0.00015467066,0.017116258,0.009035258,0.0073260483,0.034401625,0.0053843134,0.055032935,0.030995283,-0.012538233,0.029569935,-0.0053359964,0.007048226,-0.00791793,0.019314677,0.033290334,0.025028149,0.027782211,-0.006148324,-0.0077609,0.011583974,-0.010231101,-0.00047071217,-0.017514871,0.017418237,0.0076038702,-0.008600406,-0.002221067,-0.02094537,0.037663013,0.040296283,0.027443992,-0.026767556,-0.03169588,-0.064792946,-0.057690363,-0.080930784,0.010671993,0.007875653,0.015642593,-0.0042458465,0.0048075304,0.029473301,0.02512478,-0.012163777,0.060637694,-0.008878228,-0.028627755,-0.020365568,0.001072031,-0.09851813,-0.026960824,0.025318049,-0.04454817,-0.0059973337,-0.008552089,0.017055862,-0.0059973337,0.061507396,-0.018734872,0.039837275,-0.054984618,0.058270168,-0.010442487,-0.009874764,-0.017007545,-0.010841101,0.012308727,-0.033483602,-0.030004788,-0.049404018,-0.024762405,-0.015920414,0.0028673054,-0.016029127,0.006196641,0.07208879,0.037977073,-0.03742143,0.0004239052,0.009264763,-0.038870934,-0.015316454,0.012326846,0.03959569,0.012864372,-0.020208538,0.027951319,-0.0025547554,-0.0042488663,-0.04986303,-0.019435467,0.029400826,0.00082742673,0.029376667,-0.00042881237,-0.029304193,-0.0270333,0.06783691,0.012900609,-0.019218042,0.0028446568,-0.015654672,-0.010653874,-0.023192106,-0.013891106,0.014374274,-0.051940653,-0.010110308,0.014531304,-0.01428972,0.02514894,0.021392303,0.026429338,-0.055902638,0.007440801,-0.016572693,0.03435331,0.00963318,0.01460378,-0.006975751,0.020872895,-0.014929919,-0.0062691164,0.0039529256,-0.020522598,0.008099118,0.049959663,0.028506964,0.006087928,0.03867767,0.0024853,0.019640815,0.040417075,0.0029926272,-0.05266541,0.02964241,0.029690728,0.007833376,-0.0041612918,-0.027951319,-0.07262028,-0.016077444,-0.014941998,-0.01443467,-0.015715068,-0.028217062,0.0020081706,-0.06459968,-0.005043075,0.016234474,-0.06633909,0.004239807,-0.020244775,0.008244069,-0.027443992,-0.04445154,0.0024384928,-0.03333865,-0.014519225,-0.009409714,-0.022419035,-0.046360053,-0.008835951,0.043171138,0.022865968,0.030367164,-0.052762043,-0.026211912,0.02500399,-0.011100805,-0.016065365,0.0040465393,0.013444174,-0.010925656,0.009301001,0.04099688,0.015799623,-0.026018644,0.002578914,0.009186248,-0.01351665,-0.029135084,0.03850856,-0.0018088635,-0.030028947,-0.03589945,0.026284387,0.0366242,-0.04326777,-0.0004084287,-0.0013400387,-0.035682023,-0.028289538,0.026477655,0.0058976803,0.012876451,0.048800055,0.002698196,0.04846184,-0.041939057,0.034619052,0.008431297,0.041190147,0.028603598,0.034208357,0.001799804,0.0071810973,0.046698272,0.016741801,0.019822003,-0.024085969,0.019846162,-0.026381021,0.0017424278,-0.0049736197,-0.030753698,-0.03751806,-0.0052363425,0.052085605,0.05024956,0.0083225835,0.0009716224,-0.039958067,-0.0076521873,-0.014325957,-0.002376587,0.039209154,0.02981152,0.023880621,0.012489916,0.013830709,0.016838435,-0.039499056,-0.011100805,0.01753903,-0.030173896,-0.048365206,0.024907356,-0.032009937,-0.0036298062,0.042977873,-0.078949794,-0.07793514,0.0054688677,-0.008364861,-0.0040103015,0.020281013,-0.03087449,-0.002859756,-0.011432984,-0.009542585,-0.0009920062,-0.061893933,0.010750508,-0.015594276,-0.016826356,0.01801012,0.0054749073,-0.07228206,-0.03196162,0.0238927,0.0034486179,0.03401509,0.0012660534,0.014313878,-0.01569091,-0.006752285,0.0045689656,-0.037204005,-0.0136978375,0.017973883,-0.024593296,0.037324797,0.00042050792,-0.015147344,-0.045997676,-0.024593296,0.034715682,-0.058898285,0.026743397,-0.0057980265,-0.032565583,0.04300203,-0.041794106,-0.032517266,-0.012948926,-0.000737965,0.034232516,0.016427742,-0.0012600138,-0.018952299,0.016995465,0.034812316,-0.01955626,-0.07001117,0.0070723845,-0.023361215,0.017659822,-0.008588327,0.030850332,-0.008624565,0.068416715,0.0666773,-0.013081797,-0.049766395,0.00003352456,0.008739317,0.0046384213,-0.014772888,-0.028676072,-0.017104179,0.026767556,0.028168745,-0.049621444,-0.01894022,0.014664175,0.011994667,-0.0072112954,-0.001675992,0.012193974,0.02281765,0.016983386,0.0019538142,-0.01443467,0.033314493,0.015437245,0.03817034,-0.0008259168,-0.025511317,-0.0063597104,-0.00075532886,-0.019000616,-0.023252502,-0.038315292,-0.0017152495,-0.043726783,0.028531123,-0.0063415915,0.044644803,-0.059043236,-0.035126377,-0.012659024,-0.015582196,-0.0027434933,0.019133488,-0.025680427,0.01693507,0.041625,0.054308183,0.0065952553,0.04764045,-0.04314698,-0.02746815,-0.014821205,-0.00481659,0.012948926,0.039788958,-0.02266062,0.010581398,-0.03631014,0.038315292,0.0038593113,-0.003599608,0.044379063,0.006945553,0.00931912,-0.005961096,-0.07387652,-0.018964378,0.04239807,0.009542585,0.020401806,0.009204367,0.051457487,-0.023397453,0.022576066,0.024303395,0.0062389183,0.040924404,0.010738429,-0.01941131,-0.027709736,-0.029787362,-0.009760011,-0.026042802,0.029231718,0.037590537,-0.03278301,-0.033435285,-0.029521618,-0.037324797,0.022467352,-0.013891106,0.0065469383,-0.02483488,-0.056868978,-0.0012215113,-0.0018979477,0.011583974,-0.0035512913,-0.00745288,0.028917657,-0.017007545,0.020293092,0.027202409,0.011632291,0.0034757962,-0.014893681,-0.050974317,0.0059188185,0.058511753,0.027347358,0.027057458,0.030198054,0.011233676,0.033749346,0.0016488138,0.0009829467,-0.051312536,-0.038436085,-0.052423824,0.007489118,0.05126422,-0.0012766228,-0.022890126,0.06822345,0.04918659,0.025873693,-0.0083225835,0.011922192,-0.027154092,0.021476857,0.005480947,0.030028947,0.007374365,-0.013118035,0.01225437,-0.018203387,0.016234474,-0.031744197,0.019483784,-0.0042790645,0.059043236,0.04875174,0.019906558,-0.029110925,0.0037354995,0.037034895,-0.0020051508,-0.031502612,-0.008437336,0.007791098,0.02606696,-0.031091917,0.019435467,-0.015751306,0.021645965,-0.007869613,-0.012526154,-0.0032191128,-0.008678921,-0.015147344,-0.016838435,0.007954167,0.010430408,-0.019024774,-0.04609431,-0.024810722,-0.05575769,-0.042011533,0.014205165,-0.0132750645,-0.011523577,0.001958344,-0.00017184581,-0.03507806,0.02082458,-0.0040616384,-0.0086306045,0.027903004,-0.02345785,-0.032227363,0.030198054,0.008256149,-0.011656449,-0.009977438,-0.017780615,0.03043964,0.055177886,0.002746513,0.023711512,-0.005973175,-0.013601204,0.015908334,0.01629487,-0.009415753,-0.0013868457,-0.009458031,-0.007555553,0.0069636717,-0.023771908,0.0003555821,-0.03087449,0.031285185,-0.008250109,-0.03945074,-0.059671357,-0.041528367,0.0087936735,-0.041576684,-0.020848736,-0.004517629,0.058463436,-0.010702191,-0.019471705,-0.01396358,-0.013420016,0.013359619,-0.019568339,0.014229324,0.023022996,-0.0077669397,0.012900609,-0.013359619,-0.012876451,0.014023976,-0.013142194,-0.021960026,-0.007247533,0.0017771556,-0.037832122,-0.0073200087,-0.04065866,0.018420814,0.030608749,0.010792784,0.018722795,-0.006740206,0.044958863,-0.041214306,-0.008195752,-0.01443467,-0.02669508,0.015171503,0.060782645,0.005136689,0.005915799,0.025897851,0.0019205963,0.016657246,-0.026139436,-0.014313878,-0.0023388395,0.02328874,-0.0023856463,-0.031236868,-0.049404018,-0.023687353,0.01941131,-0.017333683,-0.017599426,-0.02327666,0.0062389183,-0.021984184,-0.011825559,-0.01908517,0.01815507,0.041818265,-0.014036056,-0.0036449053,0.035657864,-0.006257037,0.009264763,-0.023808146,-0.01460378,0.0013173901,0.042108167,0.0018405714,0.009252684,0.007658227,0.0057225316,0.0006858733,0.022382798,-0.03993391,-0.017828932,0.04285708,0.04532124,-0.005034016,-0.030512115,-0.025607951,-0.0397648,-0.0013105955,-0.014772888,0.0032221326,-0.02327666,-0.03152677,0.04273629,0.03089865,-0.020474281,-0.01926636,0.033797663,0.03413588,0.008395059,-0.017333683,0.012936846,-0.022394877,0.018831506,-0.022080818,0.004405896,-0.045901045,-0.0028491865,-0.012610707,-0.0019945814,-0.0021380223,-0.0052816398,-0.0012615237,0.014229324,0.043847576,0.016717643,0.013142194,-0.022926364,0.001366462,-0.03940242,0.019737449,0.028845182,0.042446386,0.017635664,0.016077444,0.013214669,-0.003164756,0.0024868099,0.039958067,-0.02857944,0.026574288,0.020582994,-0.0105512,-0.05169907,0.0068972358,0.0046354015,-0.019979034,0.0059882742,0.0083709005,0.0060667894,-0.019785766,-0.011064568,-0.01102229,0.0047078766,0.05575769,0.009029218,0.025704585,-0.011493379,0.022600224,-0.0017409179,-0.008497733,0.012314767,0.014495066,-0.02391686,-0.03135766,-0.0018692596,0.020256855,0.027443992,-0.011451103,0.034594893,-0.0037505985,0.00147593,-0.0050853523,0.00009965358,-0.0015778483,-0.020111905,0.0054084715,0.041214306,-0.01195239,-0.025583792,0.0070361467,0.01474873,0.038291134,-0.00047712927,0.0033459445,-0.13151857,0.0076461476,0.006788523,0.016512297,0.0018254725,-0.0051517882,-0.022853889,0.004049559,-0.000061292616,0.023639038,0.0041612918,0.060154524,-0.0013732566,-0.01691091,0.018746952,-0.030681225,0.027419833,0.031889144,0.031623404,0.0030696322,-0.030729542,-0.009560704,0.028482806,-0.024049731,-0.025269732,-0.023590721,0.008443376,-0.008642684,-0.031116076,0.0051668873,-0.025535475,0.01024922,-0.010853181,0.030318847,0.0030847313,-0.0020595074,-0.019616656,-0.0033791624,0.01801012,0.012985163,-0.006432186,-0.043098666,0.027105775,0.0071750577,-0.0030922808,0.00024800154,0.03167172,-0.03894341,-0.019846162,-0.074649595,0.021331906,-0.03449826,0.008219911,0.023469929,-0.047567975,0.004475352,0.029521618,0.0019387151,0.0137461545,0.024085969,-0.0127556585,0.007730702,0.02686419,-0.021488937,0.0050853523,0.04585273,0.018952299,-0.034594893,-0.0060003535,0.0032100533,-0.0066496115,-0.009717734,-0.013444174,0.009174169,0.0045266883,0.0018919081,-0.0689482,-0.008056841,-0.0036630242,-0.033314493,-0.03908836,-0.055226203,0.018444972,-0.008328623,0.036865786,0.00026951765,-0.013407936,0.017055862,0.011928231,0.0153526915,-0.036092713,-0.010587438,0.006383869,-0.0019764628,0.027661419,0.004300203,-0.022733096,-0.012242291,-0.05479135,-0.010025755,0.011088726,0.033604395,0.0021938886,0.0341842,0.01755111,-0.0005095922,0.021162797,-0.0031798552,-0.03756638,-0.02095745,0.052762043,-0.026308546,0.0018798289,-0.017176654,0.0142655615,0.031188551,0.019979034,0.0076280287,-0.026018644,0.010684072,0.038242817,0.006263077,-0.04032044,-0.02886934,0.011922192,-0.02623607,-0.016874673,0.008805753,0.015461404,0.011040409,0.015243978,0.008884268,-0.0009859665,-0.026815873,0.027975477,0.04826857,0.022914285,0.021416461,-0.021380223,-0.014567542,0.033966772,0.009488229,0.021017846,0.015364771,-0.027613102,-0.0310436,-0.0030182956,-0.0056953533,-0.0013619323,0.027613102,-0.023506166,0.03196162,0.016826356,-0.01117932,0.022539828,0.02031725,-0.015908334,-0.0037777766,0.022406956,0.0072716917,0.016947148,0.021368144,-0.004599164,-0.0005760279,-0.013226748,-0.020570915,0.019230122,-0.019979034,-0.022588145,-0.025076466,-0.020196458,0.017152496,0.014627938,-0.03367687,0.009856645,-0.015618434,0.0344741,-0.01647606,-0.016355267,0.018505368,0.005360155,0.034377467,0.013939423,-0.019858241,0.019604577,0.006444265,-0.030536273,0.041552525,0.031913303,0.003045474,-0.023071313,0.0086306045,-0.024291316,0.03138182,-0.05788363,-0.032179046,0.010913577,0.040924404,-0.027129933,0.04674659,0.02872439,0.0002398858,-0.028748548,0.050346196,0.015159423,-0.018855665,-0.008358821,-0.037373114,-0.0053329766,-0.0012056574,-0.027492309,-0.021416461,-0.023192106,-0.013190511,-0.0017771556,0.026429338,0.04396837,-0.023856463,0.028217062,0.00033180113,0.010291497,-0.03894341,0.011571894,-0.010194863,0.0033006475,0.0047380747,-0.008340702,0.0011928232,0.053293526,0.008950704,0.015074869,0.04314698,0.02450874,0.03493311,-0.0032644097,-0.006583176,-0.022443194,-0.0041824304,-0.010394171,0.009258724,-0.019858241,-0.031333502,-0.0074106026,-0.046118468,0.00465956,-0.0073200087,-0.06228047,0.034377467,0.0039952025,0.02746815,0.02049844,-0.00030839763,-0.009337239,0.049959663,-0.0088419905,-0.025849534,0.010382092,-0.022286164,-0.012961005,0.010442487,-0.01211546,-0.049283225,-0.025873693,-0.021923788,0.026719239,0.012791896,0.006945553,0.0035694102,-0.0031949542,0.024762405,-0.04408916,0.041238464,0.0005107246,-0.01584794,0.018372497,-0.027903004,-0.0056591155,0.013105956,-0.017563188,0.039040044,-0.024206761,0.011674568,0.035488755,-0.03198578,0.011112885,-0.012477837,0.0026030724,-0.01040625,0.013721996,-0.0036660437,-0.010376052,0.041673318,0.07522939,0.0068549584,-0.0056742146,-0.013154273,0.034087565,-0.017587347,0.030705383,0.011185359,0.021935867,-0.013927343,-0.029521618,0.03307291,0.0030862412,0.0030802016,-0.033411127,-0.0076159495,-0.019773686,-0.007815257,-0.002731414,-0.025487158,0.0033429246,0.05740046,-0.004982679,0.0060486705,-0.0273232,0.0077729793,0.007833376,-0.06344008,-0.04099688,-0.016621009,0.003983123,0.0047773323,0.018891903,0.0040586186,-0.037904598,-0.00026064695,0.030632908,0.028506964,0.0026000526,-0.0000045326574,-0.00023497861,0.027903004,0.027274882,-0.016017048,0.055322837,0.04024797,0.008419218,-0.0076884245,-0.00036992616,0.00016448503,0.008002484,-0.0023252503,0.017913487,0.00027272617,0.00823199,0.0036600044,0.0017816853,-0.012218133,-0.0029141123,0.009047337,0.029231718,-0.037904598,0.023349136,-0.00047901666,0.00062170246,-0.0031919344,-0.0091500105,0.024085969,-0.005634957,-0.0068308,-0.027999636,0.008986942,-0.003149657,-0.011753083,-0.011203478,0.023651117,-0.013323382,-0.03430499,-0.016862594,-0.014917839,-0.00014863105,-0.021343986,-0.0063415915,-0.008763475,-0.0121698165,-0.07001117,-0.029086767,0.025438841,0.0024551018,0.026042802,-0.03227568,0.01241744,0.036213506,-0.02374775,0.01706794,0.0025200276,0.003647925,-0.019169725,-0.024460424,0.009210407,0.03768717,0.020305172,-0.010696151,-0.0077729793,0.057497095,0.011529617,0.0035603507,0.008763475,0.0003710586,-0.007205256,-0.0013694818,-0.013226748,-0.036914103,0.004532728,0.011819519,-0.007078424,0.02250359,0.0006028287,0.010261299,-0.034836475,-0.0010033303,0.0059671355,0.04251886,0.0044330745,-0.04966976,-0.010841101,-0.030995283,0.023759829,0.027758053,-0.00022969395,-0.048775896,0.032734692,0.030125579,-0.007217335,0.002545696,-0.014833285,-0.0018405714,0.00051827414,0.034836475,-0.007440801,-0.05058778,-0.02251567,-0.03430499,-0.0087936735,0.004870946,-0.010943775,-0.028603598,-0.017104179,0.011916152,-0.02173052,-0.04007886,0.013154273,-0.025221415,0.016439822,0.01117932,0.031309344,0.05295531,0.041238464,-0.043726783,-0.013154273,0.028676072,0.015775464,0.014023976,-0.019073091,0.026840031,-0.02128359,-0.01832418,-0.058173534,0.027878845,-0.022153294,-0.007821296,-0.0056228777,-0.030149737,-0.007839415,0.004285104,-0.024098048,0.009675457,-0.019628735,0.014652097,0.0127315,0.012683183,0.010889418,0.013190511,0.020933291,0.004085797,0.0413351,0.005731591,0.0074287215,0.009065456,-0.025245573,-0.008038722,-0.010013675,-0.022141214,-0.01257447,-0.010853181,-0.0011822538,-0.021488937,0.028023794,-0.012381203,0.025028149,-0.016633088,0.024013493,-0.0068972358,0.009397634,-0.0118134795,-0.022092897,-0.0045236684,0.00621476,-0.017224971,0.00009540698,-0.026743397,-0.053969964,0.025052307,-0.02144062,0.017599426,0.009355358,-0.039329946,-0.02127151,-0.014579621,0.01708002,-0.013552887,-0.03087449,-0.05126422,-0.01970121,-0.027371516,-0.015195661,0.00072437583,-0.026356863,0.0045840647,0.026815873,-0.005323917,0.02932835,-0.018964378,0.027685577,-0.03587529,0.008020603,0.030777857,-0.004176391,-0.011940311,-0.029618252,-0.037663013,-0.007827336,-0.0039227274,0.0010267339,-0.005157828,0.010829022,-0.012091301,0.018698636,-0.000014379464,-0.016802197,0.027347358,-0.033459444,-0.012308727,0.019834083,0.017901408,-0.013359619,0.047519658,0.020148141,-0.006468423,0.03275885,0.0014714003,0.026840031,-0.011414865,-0.011916152,0.00932516,0.004732035,0.004490451,0.005290699,-0.04268797,-0.00022157823,0.0063536707,0.02094537,0.00007639164,0.0018043338,-0.00037049237,-0.03321786,0.023337057,-0.00853397,-0.020752104,-0.012622787,0.033966772,0.012091301,0.024291316,0.023941018,0.010502883,-0.013685758,0.0017982941,0.020510519,0.0038442123,0.017937645,0.0061422843,-0.0026423298,-0.020413885,-0.0014049645,-0.00014976348,0.003122479,-0.029110925,0.004889065,-0.006643572,0.0028204983,0.016729722,0.010653874,0.0008017584,0.002886934,0.020365568,0.00884803,0.018239625,-0.045997676,-0.038411926,-0.010635755,-0.009947239,0.017780615,-0.010889418,-0.0015869078,0.019242201,-0.015594276,-0.020438043,0.019966954,-0.008775555,-0.026743397,0.008304465,0.00080628804,-0.008443376,0.0005413001,-0.058125217,-0.003913668,-0.02327666,-0.00823199,-0.0076763458,-0.022757255,0.066628985,-0.032203205,0.0050491146,-0.04085193,-0.032058254,0.0413351,-0.0024868099,0.023155868,-0.0057466896,0.010581398,-0.013673679,0.0030047065,-0.025535475,-0.007730702,-0.01865032,0.017490713,0.033483602,0.019000616,0.04032044,-0.04708481,-0.040175494,-0.019532101,0.0015612395,0.031333502,-0.017647743,0.07020444,0.03865351,-0.02065547,-0.011692687,0.017647743,0.012224172,-0.023312898,0.033797663,0.012290608,0.017297447,-0.011662489,0.038242817,-0.07199217,-0.009874764,0.02187547,0.006601295,0.017128337,0.033169545,0.007470999,0.0076763458,0.013311302,-0.0039770836,-0.029304193,-0.032565583,0.0057466896,-0.0270333,-0.025559634,0.00310436,-0.037807964,-0.055467788,-0.04623926,0.0057406505,-0.02512478,-0.0032009939,-0.008612486,0.0042911437,-0.010206942,0.013866947,-0.0014985785,0.012997243,0.0028129488,0.01040625,0.01320259,0.012985163,-0.033773504,-0.015739227,-0.03155093,0.004176391,0.0041854503,0.009059416,0.009790209,0.0270333,0.023663197,-0.00073721004,0.01085922,0.025728744,-0.004529708,0.004372678,-0.001878319,-0.017442396,-0.031164393,0.017780615,0.013383778,-0.008980902,-0.0061724824,0.04411332,0.005444709,-0.035657864,0.013311302,0.02500399,-0.041769948,-0.022431115,-0.008527931,-0.02780637,0.015243978,-0.024762405,-0.026381021,-0.033459444,0.027878845,-0.02809627,-0.007839415,0.030946966,-0.01941131,-0.026284387,-0.03416004,0.002560795,0.014482987,-0.012719421,0.02780637,0.030922808,0.0068972358,0.04829273,0.014422591,0.016101602,-0.0155218,0.011904073,-0.058608387,0.001366462,0.0049162433,0.018517448,0.025221415,-0.004052579,0.0069213943,0.01614992,-0.05213392,0.04360599,-0.019846162,-0.023856463,0.012610707,-0.033266176,-0.015642593,-0.0018043338,0.030946966,0.035319645,0.0060365913,-0.0000066530088,0.010001596,0.02483488,-0.0011852736,-0.031236868,0.019362994,0.0010018204,0.029352508,-0.014869522,-0.014664175,-0.032179046,0.0010675013,-0.010967934,-0.021972105,0.008992981,0.021972105,0.021017846,0.0027299041,-0.016210316,-0.031599246,0.018722795,-0.02809627,0.036696676,-0.00037086985,-0.011269914,-0.018408734,0.046674114,0.021090321,-0.016174078,0.034063406,0.008020603,0.0009829467,0.021863392,0.022986759,0.016959228,0.010110308,-0.016234474,0.0072898106,0.0183121,0.015594276,0.042905398,-0.031575087,0.04568362,0.006329512,-0.0016624029,-0.013444174,-0.022298243,0.008340702,0.028386172,-0.024569137,-0.017321603,0.015509721,-0.008135356,-0.027105775,-0.007984365,-0.004683718,0.027999636,0.015654672,0.02669508,0.034619052,0.03430499,-0.012465757,-0.037348956,0.02005151,-0.0024158445,0.021694282,0.019507943,0.012163777,0.017442396,-0.03710737,0.023530325,-0.0007315479,-0.022020422,0.02328874,-0.004644461]},{"id":"buy-and-sell-crypto","name":"Buy and Sell Crypto","description":"You are given an integer array `prices` where `prices[i]` is the price of NeetCoin on the `ith` day.\n\nYou may choose a **single day** to buy one NeetCoin and choose a **different day in the future** to sell it.\n\nReturn the maximum profit you can achieve. You may choose to **not make any transactions**, in which case the profit would be `0`.\n\n**Example 1:**\n\n```java\nInput: prices = [10,1,5,6,7,1]\n\nOutput: 6\n```\nExplanation: Buy `prices[1]` and sell `prices[4]`, `profit = 7 - 1 = 6`.\n\n**Example 2:**\n\n```java\nInput: prices = [10,8,7,5,2]\n\nOutput: 0\n```\n\nExplanation: No profitable transactions can be made, thus the max profit is 0.\n\n**Constraints:**\n* `1 <= prices.length <= 100`\n* `0 <= prices[i] <= 100`\n","difficulty":"Easy","concepts":["Sliding Window Fixed Size","Sliding Window Variable Size"],"solutions":{"python":"class Solution:\n    def maxProfit(self, prices: List[int]) -> int:\n        res = 0\n        \n        lowest = prices[0]\n        for price in prices:\n            if price < lowest:\n                lowest = price\n            res = max(res, price - lowest)\n        return res\n","javascript":"class Solution {\n    /**\n     * @param {number[]} prices\n     * @return {number}\n     */\n    maxProfit(prices) {\n        let min = prices[0];\n        let max = min;\n        let value = 0;\n        for (let i = 0; i < prices.length; i++) {\n            if (i != prices.length - 1 && prices[i] <= min) {\n                max = min = prices[i];\n            } else if (prices[i] > max) {\n                max = prices[i];\n            }\n            value = max - min > value ? max - min : value;\n        }\n        return value;\n    }\n}\n","cpp":"class Solution {\npublic:\n    int maxProfit(vector<int>& prices) {\n        int maxP = 0, l = 0, r = 0;\n        while (r < prices.size()){\n            if (prices[r] > prices[l])\n                maxP = max(maxP, prices[r] - prices[l]);\n            else\n                l = r;\n            ++r;\n        }\n        return maxP;\n    }\n};\n","java":"class Solution {\n    public int maxProfit(int[] prices) {\n        int left = 0;\n        int right = 1;\n        int maxProfit = 0;\n        while (right < prices.length) {\n            if (prices[left] < prices[right]) {\n                maxProfit = Math.max(maxProfit, prices[right] - prices[left]);\n            } else {\n                left = right;\n            }\n            right++;\n        }\n        return maxProfit;\n    }\n}\n","csharp":"public class Solution {\n    public int MaxProfit(int[] prices) {\n        int maxProfit = 0;\n        int minPrice = prices[0];\n\n        for (int i = 1; i < prices.Length; i++) {\n            int currPrice = prices[i];\n            minPrice = Math.Min(minPrice, currPrice);\n            maxProfit = Math.Max(maxProfit, currPrice - minPrice);\n        }\n        return maxProfit;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def maxProfit(self, prices: List[int]) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} prices\n     * @return {number}\n     */\n    maxProfit(prices) {}\n}\n","cpp":"class Solution {\npublic:\n    int maxProfit(vector<int>& prices) {\n        \n    }\n};\n","java":"class Solution {\n    public int maxProfit(int[] prices) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int MaxProfit(int[] prices) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/1pkOgXD63yU","embedding":[0.0049470644,-0.031591598,0.06150432,-0.026165953,0.00038005123,-0.0006993199,-0.010820583,0.053560354,0.007201779,0.014546878,0.07649139,-0.04060022,-0.01743373,-0.04039548,0.041869618,0.033311427,0.019481145,0.027087288,-0.059006475,0.028889013,-0.0077289883,-0.0010940869,-0.031960133,0.022439659,0.018703127,0.008512124,-0.00192201,0.032881472,-0.0042586215,0.003690464,0.02368858,0.0005163322,0.0045171073,-0.011926187,-0.028500004,-0.058474146,-0.013390088,0.010278019,0.051349144,-0.0066336216,0.002774246,-0.0121616395,-0.01775108,-0.023217676,0.015417028,-0.017484916,0.027230607,-0.027558194,-0.0048830826,0.013318429,-0.006178072,-0.020351296,0.007698277,-0.002299502,-0.007601025,-0.018303882,0.017095909,0.05601725,0.052987076,0.014894938,0.00028663798,0.0017658947,0.02600216,0.024732763,0.0047960677,0.033639014,0.022828666,0.035747852,0.0019104932,-0.042258628,-0.05433837,-0.03327048,0.026923496,-0.022316813,-0.0226444,0.007764818,0.03382328,0.03292242,0.05773708,-0.000059462986,-0.03296337,-0.044224143,0.0280291,0.028848065,-0.0011068833,-0.025326513,-0.020105606,0.0062394943,-0.021231685,-0.08148708,-0.041071128,-0.037754316,0.043773714,-0.017095909,0.006485184,-0.014280713,0.03193966,0.014598062,0.007380928,0.04217673,0.008440465,-0.026125005,0.032103453,0.024998926,-0.022951512,0.050202593,0.017157331,-0.021436425,-0.04275001,0.0065619624,-0.024384702,-0.007867189,0.02313578,0.00028439861,0.007447469,-0.0034857225,-0.07133191,-0.0250194,0.031816814,-0.02110884,0.025838366,-0.006531251,0.018969292,0.010042566,-0.027906254,0.007913255,-0.012345907,-0.049260784,0.03613686,-0.019020477,0.02239871,0.02956466,0.02002371,0.021436425,-0.016522631,-0.037201513,0.014679959,0.01334914,0.027107762,0.014157869,0.02630927,0.014055498,-0.067564666,-0.006684807,-0.010769398,-0.031018324,0.02180496,-0.0070431046,-0.031714443,0.050734922,0.039678887,-0.040804964,0.016031252,0.050366387,-0.0017953262,-0.010257545,0.011639549,0.02714871,0.00009421304,-0.023463367,-0.0028100759,-0.0072632018,-0.04389656,-0.025940737,-0.0071403566,0.03228772,-0.009274786,-0.00080872857,-0.016860455,-0.022931037,-0.003613686,-0.0067257555,0.024712289,-0.055034492,0.00845582,-0.047827594,-0.07104527,-0.007601025,-0.029605608,0.018058192,-0.050939664,-0.025797417,-0.022234917,-0.081650876,0.008194775,0.04434699,-0.01806843,-0.038839445,-0.016430499,0.021272633,0.034048498,-0.0268416,0.041419186,-0.010150055,-0.020177266,0.0104111,0.015672956,0.017167568,-0.035891168,-0.00331937,-0.028848065,-0.009146823,0.019245693,0.04434699,0.012233299,-0.032246772,-0.004970098,0.001135675,-0.023320047,-0.04414225,0.02897091,0.025244616,0.014352373,-0.029380392,0.00035317894,-0.027947202,0.024978451,0.03296337,0.002051253,0.0656401,0.014393321,0.026780177,-0.017495153,0.017044723,0.007903018,0.017761318,0.027353453,0.032594834,0.04938363,-0.014843753,0.0034217408,-0.018426728,-0.011004851,0.027640091,0.017085671,-0.022357762,0.004552937,-0.032942895,-0.011803342,-0.023565736,0.014659485,-0.025224142,-0.005364225,0.020985994,0.009228719,-0.015713904,-0.048318975,0.013584592,-0.020085132,-0.0026769938,0.029298496,0.030547418,0.0125097,-0.05429742,0.015079205,0.0062394943,-0.014659485,-0.0070789345,0.011926187,-0.04365087,-0.016655713,0.007821122,-0.035317894,-0.05147199,0.031878237,-0.040231686,-0.013359377,-0.004550378,0.010738687,0.0049470644,0.0076829214,0.0014229529,-0.011465519,0.00029239632,0.008348331,-0.032226298,0.053846993,0.008025863,-0.025572203,-0.045452595,-0.059702594,0.036403023,0.01471067,-0.017290412,0.045002162,-0.01806843,0.05552587,0.012612071,-0.023176728,-0.004494074,-0.009075163,-0.01691164,0.026145479,-0.005507544,0.044387937,-0.030834056,-0.021395478,-0.026677806,0.055239234,-0.04389656,0.026329745,-0.014587825,-0.034785565,0.029237073,-0.033168107,-0.042381473,0.0066029103,-0.019859917,-0.03677156,-0.0025669455,0.01520205,0.016676188,0.038532335,0.010370152,-0.028070047,-0.04770475,0.029585134,-0.043978456,-0.018641705,-0.0012431643,0.02714871,0.024487073,0.035317894,0.04242242,0.02030011,0.0005684773,-0.011475756,0.008537717,-0.004207436,-0.038389016,-0.026964445,0.031714443,-0.03974031,0.022603452,-0.07301079,0.04340518,0.0608082,0.033168107,-0.005840249,-0.015509162,0.034601297,0.021026943,-0.040170263,0.009407868,0.044756472,-0.018181037,0.06924354,0.012243536,0.013717675,0.014270476,0.005758352,0.00014427872,0.062200442,0.019644938,-0.0027051459,0.0285819,-0.018017244,0.010646554,-0.09721122,-0.0045938855,-0.045165956,-0.019307114,0.012376619,-0.045206904,-0.004281655,0.040825438,0.006863956,-0.021006469,0.009658676,0.019000003,0.038000006,0.0057327594,-0.010503234,0.0076829214,-0.007125001,-0.06150432,-0.032860998,0.03969936,-0.0025068026,-0.026473064,-0.016788796,0.024794186,-0.020463904,0.019061426,0.020873386,0.022337288,0.042381473,0.0018362745,-0.012632545,-0.041337293,0.08525433,-0.025142245,0.046394404,-0.013748386,-0.0000761782,0.01285776,0.062077597,0.05220906,-0.015478451,0.045452595,-0.017546339,-0.029667031,0.030465523,0.013625541,-0.018283408,-0.035461213,-0.017873926,0.04737716,-0.016921878,-0.042586215,0.054911647,0.034724142,-0.012325433,-0.01002721,-0.0058248932,0.03462177,0.010656791,0.026370693,-0.025142245,-0.031366386,0.022071125,-0.011537178,0.061135784,0.05388794,-0.019726835,0.02512177,0.038389016,-0.050448284,-0.025572203,0.01184429,0.011782868,-0.009198008,-0.033250004,0.0016814389,-0.052987076,0.03322953,-0.027660565,0.01300108,-0.007554958,-0.038880393,-0.03179634,-0.047090523,0.05818751,0.008660561,-0.014096446,-0.01855981,0.018754313,0.050980613,0.0002949556,-0.018262934,0.036812507,0.018600756,0.029994616,0.017771555,-0.039965525,0.007278557,0.06478018,0.05507544,-0.033741385,0.060685355,-0.025531255,0.040375005,0.006091057,0.00045267047,0.006541488,-0.024650866,0.019624464,0.016174572,-0.0020627696,-0.0151406275,-0.021026943,-0.0024824897,-0.05319182,0.013144399,-0.008691273,0.011598601,-0.02624785,0.026575435,0.00943346,-0.016205283,0.019419722,-0.011127695,-0.00010293054,-0.0016878371,-0.0047474415,-0.00066029106,0.026575435,-0.039515093,-0.031182118,0.0092952605,-0.01876455,0.012438041,0.020504853,-0.0059733307,-0.0021638607,-0.004913794,0.022705823,0.011885239,0.024139013,-0.004668104,0.013318429,-0.053314663,-0.025817892,0.0057225223,0.025060348,0.016850218,0.03318858,-0.050448284,0.0038235458,0.07239656,-0.06936639,-0.0040589985,-0.009510239,0.017136857,0.0008157666,0.013881467,-0.0074525876,-0.028766168,-0.0007940128,0.015294183,0.010922954,-0.020484379,-0.019624464,0.047090523,-0.00029575537,0.0036085674,-0.04004742,0.014669722,-0.027414875,-0.038839445,0.0016673629,0.00471673,-0.004888201,0.0548707,-0.011752157,0.023094831,0.00028599816,0.0032451514,-0.0063162725,-0.0059528565,-0.025244616,0.036607765,-0.028295264,0.030506471,0.005405173,-0.05654958,0.08332975,0.044387937,-0.031468756,-0.0043302807,0.0226444,0.019296877,-0.014475218,-0.02110884,0.038389016,-0.04137824,-0.035174575,0.03529742,0.051553886,-0.012345907,-0.015273709,-0.036218755,0.026759703,-0.0076675657,0.015478451,0.013113688,0.020914335,0.011936424,-0.01691164,-0.0031018325,0.010288256,0.031612072,-0.0063418653,-0.05032544,0.02079149,0.011752157,0.014250002,-0.023012934,0.038655177,0.013625541,-0.021661641,0.03128449,-0.006828126,0.012530174,0.014741382,-0.013820046,0.005538255,0.025469832,0.008732221,-0.030711211,-0.043200437,-0.0066131474,0.026493538,0.006121768,-0.017136857,-0.024200436,-0.0047474415,0.057286646,-0.018129852,-0.0034754854,-0.0011177602,0.037979532,-0.0030813583,0.02079149,-0.039515093,0.0034498929,0.0061064125,0.048237078,-0.0021152347,0.0039054423,0.0070431046,0.003938713,-0.01604149,-0.013994075,-0.026268324,-0.016584054,0.012223062,0.032635782,0.017740844,-0.0032477106,0.007718751,-0.0014830956,0.02215302,0.010564657,0.026084056,-0.021272633,-0.021518322,0.01893858,0.03435561,0.032103453,0.014884701,0.03836854,-0.0038619349,0.0008330416,-0.0017966059,-0.026862074,0.010943429,-0.016266705,0.014147632,-0.026268324,0.051635783,-0.00663874,-0.039474145,-0.016696662,-0.018651942,0.002907328,0.0121616395,0.0063367467,0.010339442,-0.01376886,-0.020985994,0.041255396,-0.0073860465,-0.0024760915,0.014505929,0.043732766,-0.011107221,-0.029728454,-0.022808192,0.015191813,0.0077955294,0.0119568985,0.019399248,-0.00094756886,0.025674572,-0.04881035,-0.008686154,0.03683298,0.06907975,-0.0044300924,-0.038839445,0.031509705,0.028889013,-0.005497307,-0.023033408,0.010667028,0.009218482,-0.038081903,-0.033413798,0.0024888879,-0.0088294735,0.049219836,-0.026575435,0.017904636,-0.033024788,-0.0032630663,-0.008568428,0.014884701,-0.006664333,0.026350219,-0.0074218763,0.024528021,-0.030035565,0.015222524,0.00852748,-0.025469832,-0.0013129043,0.04287285,-0.0051364503,-0.06367458,-0.0049854536,-0.03494936,0.011731683,-0.009464172,-0.051390093,0.037938584,0.013922416,0.015048494,0.027128236,0.00021337894,0.019491382,-0.0050801462,0.0009533272,-0.0050724684,-0.0094436975,0.07415734,0.0132877175,0.0024696933,0.017587287,-0.05908837,-0.009551187,0.035113152,-0.007938848,-0.0071301195,-0.022275865,-0.016901404,-0.012294722,0.021334056,0.010283138,-0.0005131332,-0.004988013,-0.02284914,-0.028602375,0.018007006,0.014147632,-0.05839225,-0.011066273,-0.0038286643,-0.013512933,-0.029871771,0.0030915954,0.019470908,0.0016276942,-0.0063623395,0.0067462297,0.012683731,-0.027455823,0.021825435,-0.05319182,-0.010656791,-0.0011830215,0.0029124466,0.020678883,0.021497848,0.04148061,0.038470913,-0.012253773,0.020259162,0.01034456,-0.011526941,-0.013062502,0.048278026,-0.013748386,0.03421229,0.009643321,0.004043643,-0.027947202,0.015744615,0.015887933,0.0010121904,-0.00912123,-0.022521555,0.01285776,0.0064237616,-0.021170262,0.0033500814,-0.0075293654,0.0020563717,-0.015017782,-0.013574355,-0.0012597995,0.025449358,-0.026473064,0.0012732357,-0.01436261,-0.028233841,0.023504313,-0.0034268594,0.03312716,-0.038532335,0.028008625,-0.05749139,-0.0375291,0.0037928347,0.017157331,0.0075703138,-0.010221715,0.0068127704,0.00765221,-0.04434699,-0.027496772,0.021784486,-0.008046337,-0.013482222,-0.016184809,0.00025528696,0.012448278,-0.005059672,-0.03435561,0.016440736,-0.017904636,0.017832978,-0.024712289,0.0078108846,0.03711962,-0.006608029,-0.01691164,-0.0429138,-0.00642888,0.02428233,0.002012864,0.008727103,-0.0031760512,-0.011363149,0.037160568,0.026862074,0.030219832,0.010083514,0.0122640105,0.036075436,0.026370693,-0.009878773,-0.018262934,0.021395478,0.029974142,0.025920263,0.01838578,-0.01569343,0.010405982,0.020637935,0.010994614,0.009438579,0.012816812,-0.021088365,-0.011291489,0.00506735,-0.007314387,0.038941815,0.013512933,-0.016993538,0.0035650597,0.023074357,0.0025426324,-0.0007255524,0.0064032874,-0.006367458,0.0050161644,0.032103453,-0.011537178,-0.01869289,-0.007201779,-0.0066592144,0.0066438587,-0.02714871,-0.03480604,-0.004273977,-0.020146554,-0.0134208,0.015161102,0.004486396,0.051594835,0.006608029,-0.023115305,0.0015790681,0.01750539,0.023340521,-0.00008413592,-0.0071761864,-0.0058760783,0.016522631,0.025592677,0.02886854,-0.021088365,0.021825435,0.016573817,-0.025633624,0.022521555,0.012898709,0.003347522,-0.0072529647,0.03343427,-0.012345907,0.016092675,0.00011844611,-0.02205065,-0.02624785,0.004532463,-0.013605067,0.047254317,0.025695046,0.047500007,-0.00040628374,-0.005758352,0.004895879,0.029933194,0.015365843,-0.030731685,0.015980067,-0.007125001,0.01240733,0.019839443,-0.021497848,-0.014413795,0.021047417,-0.025306039,0.0081589455,0.028622849,0.004808864,0.021825435,0.009325971,-0.013093214,-0.009796876,-0.013379851,-0.017955821,0.04602587,0.0013205821,-0.01436261,0.020177266,0.008087286,0.0028868539,0.04315949,-0.0072529647,0.010912717,0.004407059,-0.019296877,0.0428319,-0.004140895,-0.008507006,0.006101294,-0.024364227,-0.006367458,-0.022521555,-0.024139013,-0.00824596,0.01142457,-0.040866386,0.04148061,-0.03501078,0.035932116,0.013605067,0.030485997,-0.06052156,0.0068895486,-0.030363152,0.00062222197,-0.02012608,-0.022808192,0.020320585,0.043773714,0.010022092,0.017362071,-0.05573061,0.0034268594,-0.0013282599,-0.02456897,0.019573279,0.011445045,-0.01107651,0.014516166,-0.032226298,-0.024343753,0.017044723,-0.004657867,0.0022649518,-0.0054717143,-0.03668966,0.029093755,-0.010380389,-0.0025387935,-0.014393321,0.0027665682,-0.027824357,-0.03605496,0.0035266709,0.027660565,0.030117461,-0.045247853,-0.038941815,-0.0027025866,0.024466598,0.057000007,0.027087288,0.047745697,0.03372091,0.0068486,-0.02669828,-0.0055689663,0.017075434,0.011967136,-0.00041748054,0.01443427,-0.04315949,-0.0093873935,-0.018631468,-0.050857767,-0.014659485,0.01967565,0.011178881,-0.04127587,-0.0351541,-0.030567892,-0.019378774,-0.017935347,0.00063789746,0.0051646023,-0.034273714,0.019102374,-0.014997308,-0.01942996,0.008573547,-0.016573817,-0.016481685,-0.013246769,0.058269404,-0.019030714,0.01471067,0.033311427,0.034642246,0.005013605,0.014915411,0.039658412,0.024200436,-0.052741386,0.013113688,0.0057174037,0.035727378,0.013062502,-0.01048276,0.002666757,-0.006521014,-0.033209056,0.037037723,0.002285426,-0.018600756,0.01792511,0.0056713372,-0.04451078,-0.0019181711,0.027189659,-0.010006736,0.029155176,0.024036642,-0.039822206,0.011926187,-0.016133623,-0.006377695,-0.01478233,0.02372953,-0.023852374,0.004688578,-0.0048011863,-0.0007044384,0.018774787,-0.014198817,0.03885992,-0.018744076,0.022603452,0.039228454,-0.02659591,0.0008445583,-0.021129314,0.0345194,-0.0030864768,0.054174576,0.003155577,-0.034294188,-0.031100221,-0.017699895,0.009945314,-0.0005230503,0.021129314,0.026821125,-0.0031709326,0.005630389,-0.009346445,0.01387123,0.017310886,0.011250541,-0.012919183,0.0013065061,0.035665955,0.004171606,0.014342136,0.032901946,-0.028459055,-0.019972526,0.042299576,0.026186427,-0.009991381,-0.0013692082,0.029216599,0.028745694,0.0059886863,-0.06281467,0.012120691,-0.029339444,-0.018877158,0.033557117,-0.0070226304,-0.048278026,0.033639014,0.0057174037,-0.011311963,0.02289009,-0.00971498,-0.026739229,0.023074357,0.024179962,0.011219829,-0.0009488485,0.0018874599,-0.005394936,0.013994075,0.02981035,-0.026043108,0.031714443,-0.00919289,0.014157869,0.019000003,-0.00018618672,-0.024835134,-0.013052265,-0.028643323,-0.06514872,-0.02428233,-0.022009702,-0.0280291,-0.010585131,-0.030731685,0.02313578,-0.027926728,-0.030731685,0.0051671616,-0.02886854,0.058064666,-0.0031606955,0.0129806055,0.050407335,0.028889013,-0.0006750068,0.01743373,0.034498926,0.062323287,0.005758352,0.022501081,0.021129314,-0.044019405,0.000019304476,-0.022214442,-0.013471985,0.002257274,-0.004724408,0.017966058,0.019440196,-0.015529636,0.0006059066,-0.016891167,-0.012448278,-0.020771015,-0.0014766974,-0.000090774025,0.007488417,0.008435346,-0.040272634,0.03945367,0.015417028,-0.0051799575,0.031857762,0.01876455,0.009402749,0.021252159,0.014157869,-0.004186962,0.005850486,-0.0136972,0.0048370156,-0.011158407,-0.041214447,0.03400755,-0.021252159,0.029953668,0.0040129316,0.020484379,0.011885239,0.023750003,-0.014403558,-0.015632007,-0.023401944,-0.008399516,0.009279905,-0.0109331915,-0.043282334,0.007498654,0.025879314,0.014536641,-0.011137933,0.035235997,-0.001701913,-0.021375004,0.0012098937,0.03851186,0.032492463,-0.0043277214,-0.03980173,0.0032579477,-0.014813041,-0.019296877,0.0078978995,0.015795799,-0.010697739,-0.009100756,0.041071128,0.0020602106,-0.032881472,0.021067891,-0.043200437,-0.016799033,0.024200436,-0.00018634668,-0.034294188,-0.034068972,-0.039003238,-0.011864765,0.0023647633,0.040313583,-0.03382328,-0.0154477395,0.002148505,0.030977376,-0.019235456,-0.027332978,-0.02358621,-0.024405176,0.0121616395,0.03580927,-0.014608299,-0.013789334,0.025428884,0.008957436,0.011250541,0.0006839643,-0.0043456363,0.028929962,0.009781521,0.037610997,0.010109107,-0.032553885,0.02155927,0.013983838,0.01718804,-0.0172597,-0.03969936,0.010257545,-0.031407334,-0.03490841,0.005615033,-0.03599354,0.02624785,-0.008798762,0.01680927,0.028848065,-0.00075946265,0.03885992,-0.010963903,0.038696125,-0.009622847,0.0019898305,0.020310348,0.040702593,0.014260239,0.0145264035,0.029400866,0.012560885,-0.0047935084,0.03114117,0.0054000546,0.016399788,-0.019706361,-0.016788796,-0.0081589455,-0.011230066,0.005840249,0.0087731695,-0.014813041,-0.0066029103,-0.0017530983,-0.003278422,-0.005384699,-0.014679959,0.014372847,0.00587096,-0.0043021287,0.010677265,-0.021334056,0.0053028027,0.0053488696,-0.009761047,-0.0039566276,0.019020477,-0.004798627,0.019788258,-0.006147361,-0.027517246,0.0025823012,0.014147632,0.008834592,0.014598062,-0.0065158955,0.0046527484,0.010922954,0.0061320052,0.034171343,-0.0066131474,0.0008221647,-0.016184809,-0.02019774,0.021764012,0.02002371,-0.0031427806,-0.0214569,0.0011580687,-0.010395745,0.0043584327,-0.031304963,-0.013891704,0.012100218,0.007380928,0.035706904,0.0144240325,0.040231686,-0.033311427,0.0048830826,0.0043737884,-0.004169047,-0.013799571,-0.029339444,0.025572203,0.014659485,-0.017423494,-0.04103018,0.010395745,-0.020576512,-0.012898709,0.026984919,-0.004245825,0.020412719,0.019245693,0.003155577,-0.008184538,-0.017914873,0.014700433,0.0018030041,0.0060091605,0.01883621,0.003347522,-0.032492463,0.0116497865,0.02313578,-0.005968212,-0.0099555515,0.060112078,-0.010165411,-0.0044735996,0.03707867,0.0022163258,-0.046926733,-0.04934268,-0.004668104,-0.019839443,-0.013932653,-0.0052823285,0.029687505,-0.021334056,-0.03910561,0.0030583248,0.03554311,-0.0065158955,0.027189659,0.0129806055,-0.006618266,-0.012397093,0.011209592,-0.03415087,0.022910563,0.00044531256,-0.004455685,-0.0048907604,0.05720475,0.04029311,-0.014065735,-0.0080565745,0.032451514,0.0012041355,0.017341597,-0.00073067093,-0.032103453,0.0153453685,0.007892781,0.010994614,-0.019092137,-0.0004990572,0.009658676,-0.0068997857,-0.046558198,0.010349678,-0.013379851,0.0036853454,-0.01429095,0.008967673,-0.0014856549,-0.04594397,-0.049711216,-0.019000003,0.008660561,-0.014884701,-0.009177534,-0.040334057,0.021231685,0.0029098873,-0.021088365,-0.018262934,-0.038839445,0.0040794727,0.010994614,0.015355606,0.046353456,0.0042611808,0.04385561,0.016686425,0.03480604,-0.0062702056,0.01198761,-0.021927806,0.016962826,-0.01775108,0.0321444,-0.015263472,0.004867727,0.00004590686,0.011967136,-0.018181037,0.020330822,0.015754852,0.03580927,0.0273944,-0.009945314,0.04127587,-0.03001509,-0.02229634,0.034232765,0.02585884,0.0020870827,-0.010564657,0.0035445858,-0.0049496237,-0.04360992,0.013359377,0.022931037,-0.006275324,-0.0062599685,0.019941814,-0.025142245,-0.0039668647,0.015079205,0.0109331915,-0.010851295,-0.014925648,0.015591059,-0.013748386,0.006874193,0.01649192,0.01191595,0.010370152,0.023709055,0.010882006,0.004005254,-0.018754313,0.021620693,-0.0068997857,-0.00157267,-0.005441003,0.0072427276,0.009070044,0.035317894,-0.013830283,-0.00044339313,0.026043108,-0.0005108938,0.02624785,-0.030096987,-0.010047684,0.0053488696,-0.008732221,0.0015547551,-0.0145264035,-0.0010179487,0.0035241116,-0.034130394,0.025797417,0.011793105,0.011445045,-0.0052260244,-0.025654098,-0.020187503,-0.019880392,0.0007185144,-0.010416219,0.05167673,0.028807117,0.009950433,0.0035061967,0.011506467,0.052577596,-0.034335136,0.038429964,0.032123927,0.023197202,-0.024036642,-0.0061627165,0.0154477395,-0.002572064,0.003815868,0.0056559816,-0.0028459057,0.030363152,0.01757705]},{"id":"validate-parentheses","name":"Validate Parentheses","description":"You are given a string `s` consisting of the following characters: `'('`, `')'`, `'{'`, `'}'`, `'['` and `']'`.\n\nThe input string `s` is valid if and only if:\n\n1. Every open bracket is closed by the same type of close bracket.\n2. Open brackets are closed in the correct order.\n3. Every close bracket has a corresponding open bracket of the same type.\n\nReturn `true` if `s` is a valid string, and `false` otherwise.\n\n**Example 1:**\n\n```java\nInput: s = \"[]\"\n\nOutput: true\n```\n\n**Example 2:**\n\n```java\nInput: s = \"([{}])\"\n\nOutput: true\n```\n\n**Example 3:**\n\n```java\nInput: s = \"[(])\"\n\nOutput: false\n```\n\nExplanation: The brackets are not closed in the correct order.\n\n**Constraints:**\n* `1 <= s.length <= 1000`\n","difficulty":"Easy","concepts":["Stacks"],"solutions":{"python":"class Solution:\n    def isValid(self, s: str) -> bool:\n        Map = {\")\": \"(\", \"]\": \"[\", \"}\": \"{\"}\n        stack = []\n\n        for c in s:\n            if c not in Map:\n                stack.append(c)\n                continue\n            if not stack or stack[-1] != Map[c]:\n                return False\n            stack.pop()\n\n        return not stack\n    ","javascript":"class Solution {\n    /**\n     * @param {string} s\n     * @return {boolean}\n     */\n    isValid(s) {\n        const stack = [];\n        const map = {\n            '}': '{',\n            ']': '[',\n            ')': '(',\n        };\n\n        for (const char of s) {\n            const isBracket = char in map;\n            if (!isBracket) {\n                stack.push(char);\n                continue;\n            }\n\n            const isEqual = stack[stack.length - 1] === map[char];\n            if (isEqual) {\n                stack.pop();\n                continue;\n            }\n\n            return false;\n        }\n\n        return stack.length === 0;\n    }\n}\n","cpp":"class Solution {\npublic:\n    bool isValid(string s) {\n        stack<char> open;\n        unordered_map<char, char> parens = {\n            {')', '('},\n            {']', '['},\n            {'}', '{'},\n        };\n        \n        for (const auto& c : s) {\n            if (parens.find(c) != parens.end()) {\n                if (open.empty()) {\n                    return false;\n                }\n\n                if (open.top() != parens[c]) {\n                    return false;\n                }\n\n                open.pop();\n            } else {\n                open.push(c);\n            }\n        }\n        \n        return open.empty();\n    }\n};\n","java":"class Solution {\n    public boolean isValid(String s) {\n        Stack<Character> brackets = new Stack<>();\n        Map<Character, Character> bracketLookup = new HashMap<>(3);\n\n        bracketLookup.put(')', '(');\n        bracketLookup.put('}', '{');\n        bracketLookup.put(']', '[');\n\n        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n            if (bracketLookup.containsKey(c)) {\n                if (!brackets.isEmpty() && bracketLookup.get(c).equals(brackets.peek())) {\n                    brackets.pop();\n                } else {\n                    return false;\n                }\n            } else {\n                brackets.push(c);\n            }\n        }\n\n        return brackets.isEmpty();\n    }\n}\n","csharp":"public class Solution {\n    public bool IsValid(string s) {\n        var stack = new Stack<char>();\n        var pairs = new Dictionary<char, char>() {\n            [')'] = '(',\n            [']'] = '[',\n            ['}'] = '{'\n        };\n\n        foreach (char c in s) {\n            if (!pairs.ContainsKey(c)) {\n                stack.Push(c);\n            } else if (stack.Count == 0 || stack.Pop() != pairs[c]) {\n                return false;\n            }\n        }\n\n        return stack.Count == 0;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def isValid(self, s: str) -> bool:\n        ","javascript":"class Solution {\n    /**\n     * @param {string} s\n     * @return {boolean}\n     */\n    isValid(s) {}\n}\n","cpp":"class Solution {\npublic:\n    bool isValid(string s) {\n        \n    }\n};\n","java":"class Solution {\n    public boolean isValid(String s) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public bool IsValid(string s) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/WTzjTskDFMg","embedding":[0.015358904,-0.006352345,-0.0060636024,-0.024010088,-0.0076128193,0.02629782,-0.020245325,-0.036004025,-0.005552749,0.07476222,0.008673394,-0.048464395,-0.015070162,0.03278343,-0.019745577,0.05881472,-0.04095708,0.055305384,-0.012327104,0.035115585,0.06538918,0.0038341733,0.0146481525,0.0019434623,0.09026549,-0.000027243177,-0.016858147,0.009423016,0.005355627,0.019012613,-0.013770819,-0.02148914,0.008329124,0.0008676171,-0.031361926,0.0129823275,-0.007335182,0.008129225,-0.00706865,-0.061302353,-0.0063467924,-0.016391715,0.003884148,-0.0034954557,0.01815749,0.012638058,-0.02916304,0.034693576,-0.039157987,-0.01470368,-0.020167585,0.014503781,0.03924683,-0.0609914,-0.044621892,-0.05948105,-0.041556776,0.023787977,0.010705701,0.012393736,0.03367187,-0.011355372,-0.04497727,0.036603723,-0.0029540625,0.034604732,0.032228157,-0.034671366,-0.044421993,-0.014326093,-0.061391197,0.040002007,0.008245832,0.0018990403,-0.024387674,-0.0037481058,0.030251378,0.064545155,0.049130727,-0.039557785,-0.04426652,-0.03926904,0.01704694,-0.05148509,-0.018523972,0.05988085,-0.057970703,0.016513877,-0.027697114,-0.038247336,-0.008495706,0.023343759,0.037136786,-0.02649772,0.047798067,-0.048064597,0.025476014,0.0064911637,-0.023232702,-0.018790504,-0.015347799,-0.024409886,0.048020177,0.05166278,-0.00017100733,0.036181714,0.060325067,0.022210997,-0.03138414,-0.05206258,0.0072019156,0.009695101,0.023543658,-0.004808681,0.035470963,0.010344772,-0.02783038,-0.044621892,0.00034305578,-0.008490154,0.021900043,-0.021255923,0.034204938,-0.04320039,-0.036714777,0.016813725,-0.0027958092,-0.018179702,-0.006552244,-0.010411405,-0.054017145,-0.06547802,0.045621388,0.022510845,-0.003778646,-0.025054004,-0.046909627,-0.0012403454,-0.015270061,0.07907115,0.008584551,0.0032261473,-0.03500453,0.011893989,0.05184047,-0.047309425,-0.029962635,0.045621388,-0.027674902,0.037292264,0.061346773,0.034427047,0.0034787974,0.058237236,-0.009800603,-0.043289233,0.02405451,-0.001236875,0.07382935,0.04970821,-0.016691564,0.009983843,0.005033567,-0.008256938,-0.014625941,-0.016169606,0.056016136,-0.029918212,0.005549973,-0.06916504,-0.0072407853,-0.03700352,-0.042311948,0.013082277,-0.012127205,0.016402822,0.009323066,-0.03678141,-0.03005148,0.00020354296,-0.015225639,0.0015519934,0.0013840228,-0.07356282,0.019112563,-0.03607066,0.0112443175,-0.013493181,-0.0105946455,-0.0036176161,-0.010639068,0.0043811193,0.06530033,0.024809685,0.008184752,-0.08853304,0.02005653,-0.02894093,-0.033360917,0.027208472,-0.03491569,-0.009833919,-0.03342755,0.0074351314,0.0053611794,-0.0065633496,-0.02809691,0.024543151,-0.017180206,-0.055749603,0.02203331,0.00953407,0.0029262989,0.00928975,0.06747701,0.010544671,0.020567384,-0.022011098,0.027319526,-0.004711508,-0.039335676,0.057348795,0.046243295,0.05321755,-0.018346284,0.01714689,0.02718626,0.0066355355,0.012293787,-0.012049466,0.013115594,0.022199892,0.016047446,-0.017169101,-0.0007350452,-0.066544145,-0.03382735,0.013881873,-0.040823814,0.02894093,-0.016958097,0.008007064,0.016780408,-0.0023626948,-0.00029603095,0.007646136,0.001660272,0.039157987,-0.0010390582,0.008601208,0.03587076,0.00091342727,-0.036670357,-0.062057525,-0.023343759,0.056238245,0.00864563,-0.045976765,0.030095901,-0.02215547,-0.044510838,0.03604845,-0.03476021,-0.102614805,-0.006313476,-0.021777883,0.006574455,0.027452793,0.013681974,-0.01645835,-0.0086845,0.0068132235,0.015481065,-0.048953038,-0.033782925,0.0003786281,0.030917708,0.037292264,-0.003542654,0.011383136,-0.08382431,-0.05081876,0.036559302,0.0020114835,-0.0058137286,0.026475508,0.017924275,-0.04053507,-0.054061566,-0.024831895,0.033982825,0.029096406,0.0069742533,0.040801603,-0.03249469,-0.025653701,-0.012005044,0.035981815,0.0038508317,-0.046954047,0.026475508,0.02237758,0.01850176,0.03480463,-0.048642084,-0.04628772,0.015358904,-0.027785957,-0.0025306656,0.025986867,-0.015658753,-0.018657237,-0.00690762,0.008567892,-0.030206956,-0.09039876,-0.0414013,0.004772588,0.025653701,0.013604236,0.015636543,0.035715282,0.03342755,0.0122493645,-0.009012112,0.046598673,0.00840131,0.03609287,-0.013637552,-0.011155473,-0.021811198,-0.02405451,0.009700653,-0.002734729,-0.054639053,-0.009373041,-0.0006677181,0.024321042,-0.02015648,0.042356372,-0.003942452,-0.017435633,0.0075628445,0.0680545,-0.054772317,-0.025675913,-0.022633007,-0.015858652,0.006957595,0.0041173636,0.009972738,0.043999985,-0.013326598,-0.047798067,0.018790504,-0.006618877,-0.06250174,0.066011086,-0.01268248,-0.009278644,0.07418473,0.027897013,-0.0105002485,0.0034621393,-0.05619382,0.034338202,0.0029151933,-0.030206956,-0.010827861,-0.0065466915,-0.018812714,0.009822814,0.024343252,0.0073185237,0.015270061,-0.005341745,-0.03249469,0.038158495,0.0005934501,0.026719829,-0.01803533,0.058503766,-0.023765767,0.006174657,-0.011166579,0.029873792,0.028763242,-0.022544162,0.013282176,-0.042489637,0.0022433107,-0.015669858,-0.0070519918,-0.0038036332,0.06299039,-0.0047420477,0.016658248,0.05081876,-0.04077939,0.024765262,0.009389699,0.008673394,-0.009922763,0.010122662,-0.021133764,-0.012404842,-0.0062357374,0.019623416,0.021100447,0.016502772,0.0027180708,-0.019323567,0.016225133,-0.02407672,-0.007335182,0.018146385,-0.022566373,0.005214032,0.033782925,-0.00751287,0.016969202,-0.041312456,-0.017513372,-0.006113577,0.018224124,0.00093633233,0.023721345,-0.052506797,-0.017735481,-0.012693585,-0.0048808665,0.043244813,-0.0016186264,0.012971222,-0.033560816,0.02982937,-0.011427558,0.017968697,-0.0026292268,-0.029007562,-0.04704289,-0.018357389,0.004772588,0.011194343,-0.007479553,-0.024010088,0.014870263,0.048064597,0.04650983,-0.0060636024,0.01983442,-0.0017727152,0.016491665,-0.025675913,-0.018468443,-0.032117102,0.0034315991,-0.009839471,0.03118424,0.0012868496,-0.004875314,-0.0009404969,-0.026919728,0.04344471,0.03138414,-0.013426548,-0.018268546,-0.0022627453,0.0126158465,-0.026342243,-0.0033732953,-0.008273597,0.040846024,0.040157482,0.010428064,-0.049352836,0.020778388,0.004036849,-0.019567888,-0.056726888,-0.02627561,-0.01058354,0.00059969694,0.0029179698,-0.01700252,0.020867232,-0.006802118,0.0006684122,-0.0015450525,0.00601918,-0.0014409384,-0.0024681971,-0.019745577,-0.009178694,0.0051085292,-0.0051390696,0.016136289,-0.048242286,0.0062190793,-0.021622406,-0.0038064097,-0.03340534,-0.025875812,-0.013204438,0.038425025,-0.04406662,-0.0151479,-0.037492163,0.0124381585,-0.01213831,-0.017257946,-0.017657742,0.0258536,0.002179454,-0.03074002,-0.052417953,-0.0006531421,0.011771829,-0.042289738,0.045621388,-0.002348813,-0.041068133,0.012371525,0.0033455314,-0.019156985,-0.021777883,-0.002822185,0.014081772,-0.027341738,-0.019823315,-0.019234724,-0.017080257,0.0026916952,0.023410391,-0.00503912,-0.032205947,-0.022310946,0.010355878,0.019567888,-0.009595151,0.025786968,0.0002490061,0.008628973,0.013648658,-0.003303886,0.022322053,0.00039702156,0.010983338,-0.013104488,-0.02962947,0.013693079,0.0010071299,0.00773498,-0.011982833,0.02538717,-0.0024237751,-0.0076961108,-0.0082902545,-0.026453298,0.021900043,0.0012639445,-0.030384645,0.029007562,-0.013259965,0.0040451777,-0.017679954,-0.010161531,0.03005148,-0.013071172,-0.005996969,0.025076216,-0.005802623,-0.025942445,-0.024809685,0.025720336,-0.038380604,-0.0053917198,0.005780412,-0.015514381,0.0082902545,-0.0010925034,0.033560816,-0.021922255,-0.024165565,-0.029562837,-0.0021128212,-0.005047449,-0.011760723,-0.015103478,-0.0393801,-0.0011424782,0.028319022,0.041356876,0.016236238,0.008506812,-0.031539615,-0.024876317,-0.015991919,-0.022455318,-0.022988383,0.023032805,-0.018768292,0.034493677,0.012049466,0.013237754,0.010933364,0.02651993,0.039691053,0.0032733458,0.0005667275,0.005061331,-0.012749112,-0.014426042,-0.02920746,0.023987876,0.01074457,-0.029318517,0.03849166,0.034893475,-0.027763747,0.012871273,0.040157482,0.016991412,0.016091868,0.017157996,0.005908125,-0.021911148,0.020522961,-0.053306393,0.03298333,-0.005713779,0.028385654,0.015625436,-0.009872789,0.0024126696,0.015125689,0.016969202,-0.022877326,-0.0044421996,-0.0035537595,0.02632003,-0.044399783,0.024609786,-0.022533057,0.0011272081,0.02472084,-0.009100956,-0.0023057791,0.028963141,-0.020556279,0.02017869,0.0072741015,0.005158504,-0.021056026,-0.00093494414,0.029296305,-0.038691558,-0.027763747,-0.015292272,0.016813725,0.02294396,-0.0064134253,0.018879348,-0.010716806,-0.0035093375,-0.048908617,0.020345272,-0.0074517895,0.009678442,-0.025076216,0.004389448,-0.008601208,0.01672488,-0.036026236,0.0055805133,-0.017691059,0.020489644,-0.033383127,-0.039979793,0.044177674,-0.008695605,0.00975618,-0.028896507,0.0048947483,-0.018124174,0.016958097,-0.019256935,0.015092373,-0.037603218,-0.013215544,-0.008839977,-0.031917203,-0.040846024,-0.011416453,0.0038730425,0.00063440163,0.04051286,0.03740332,0.046954047,-0.04206763,0.021089341,-0.019467939,0.013060066,-0.013870767,-0.043955564,-0.029696103,0.03389398,-0.016291767,0.00038348674,0.019190302,-0.014592625,0.0091176145,-0.0018782174,0.025031794,-0.025542647,-0.014592625,-0.001527006,-0.024498729,0.04628772,-0.016402822,0.0073629455,0.000046374134,-0.026208976,-0.011805145,-0.03591518,0.011094393,0.009911657,0.013881873,-0.010222611,-0.012449264,-0.019179195,-0.005647146,-0.011277634,0.002186395,0.025875812,-0.022588585,-0.0024043405,0.025609279,-0.009439674,-0.03162846,-0.02213326,0.022099942,0.021533562,0.015159005,-0.03786975,0.0064911637,-0.025231693,0.042000994,-0.059792005,0.030251378,-0.02128924,0.0054000486,0.03342755,-0.03627056,0.003764764,0.025986867,0.020534066,0.021922255,-0.023343759,0.0026944715,0.033227652,0.03380514,-0.0185795,-0.0049530524,0.032805644,0.03940231,-0.01882382,0.039313465,0.018890454,0.015458854,-0.020001004,-0.022077732,0.03140635,0.010666831,-0.017313473,0.0054416945,-0.0052806647,-0.017757691,0.022144364,-0.03276122,0.02193336,0.0013090606,-0.0046282164,0.007551739,-0.007940431,0.03962442,-0.0074740006,0.0100504765,0.075650655,-0.0494861,-0.017446738,0.0027527756,-0.041756675,-0.00846239,0.003215042,-0.015281166,0.006024733,-0.023565868,0.009728417,-0.015581015,0.019745577,0.009162037,0.038780402,-0.025031794,0.009867235,-0.012471475,-0.015059056,0.012005044,0.013404337,-0.019667838,0.019678943,0.029451782,-0.046687517,0.01007824,0.005355627,0.008318018,-0.0216113,0.051618356,-0.0010931975,0.002786092,0.025942445,0.04293386,0.0014631494,-0.005388943,0.0059747584,-0.04406662,0.014892474,-0.0060080746,-0.0033760716,0.03456031,-0.018979298,0.0052723354,-0.04404441,0.043422498,0.058503766,0.046954047,0.009928316,0.035781916,-0.0023002264,0.03742553,-0.033161018,0.0126158465,-0.009267539,-0.04984148,-0.008878846,-0.0037453293,-0.01973447,-0.062057525,0.014592625,-0.025920235,-0.016769303,0.0031484088,0.025253903,-0.016214028,0.011183237,0.0030401303,0.014326093,-0.019001508,-0.01684704,0.0058803614,0.039335676,0.041534565,-0.0025903576,-0.011605246,-0.006196868,-0.0044699633,-0.00097173115,-0.0010265645,-0.03813628,-0.0057193316,0.01815749,-0.0014714786,-0.0015020187,-0.016391715,-0.01795759,-0.014614836,0.046420984,-0.006818776,0.0129823275,-0.024143353,0.046687517,-0.020200903,-0.00020874866,0.03851387,-0.0017463396,-0.029140828,-0.017224628,-0.0033871771,-0.0006514069,-0.01628066,0.005602724,0.0020559055,-0.000044508757,-0.007707216,-0.02492074,0.035271063,0.0014270566,-0.010566882,0.047531534,0.019212512,0.01460373,-0.010061582,0.001972614,0.025564859,-0.003839726,-0.006441189,0.04031296,0.013493181,-0.024409886,-0.012104994,-0.027519425,-0.014570414,-0.00785714,0.06476727,0.004553254,0.00864563,0.022644112,0.01684704,0.037558798,0.013892978,-0.010405852,-0.023365969,-0.006224632,-0.004283946,0.024809685,-0.04255627,-0.019323567,0.012549213,0.0036259452,-0.029762736,0.025587069,0.031983837,0.0023613067,0.008395757,0.00033108267,-0.011216554,-0.0236325,-0.009467438,0.0075628445,-0.0052889935,-0.03402725,-0.032317,-0.056993417,-0.031295296,-0.004839221,-0.033716295,0.014292777,-0.034338202,-0.0076516885,0.013048961,-0.013137805,0.014048455,-0.027497215,-0.027363949,-0.012127205,-0.02829681,-0.04055728,-0.020112058,0.038180705,-0.0017157996,-0.0058970195,-0.0051335166,0.016025234,-0.010627962,0.019290252,0.01371529,0.03400504,-0.037136786,0.0049530524,-0.0389803,-0.028008068,-0.041356876,-0.0018115845,0.010350325,0.016402822,-0.010444721,0.031961624,0.036892466,0.017857641,-0.01847955,-0.006868751,0.040601704,0.001504795,0.012116099,-0.01569207,-0.01702473,0.0032039364,0.0094952015,0.031939413,0.017857641,0.00031615965,-0.002061458,0.018224124,-0.01096668,0.0034232698,-0.021444717,0.0013909637,0.018435128,0.017202416,0.0077238744,-0.015669858,-0.0035148903,0.043489132,0.026453298,-0.033982825,-0.064456314,-0.02213326,0.003981321,-0.033161018,0.03298333,-0.023876822,-0.011294292,-0.018568393,0.027563848,-0.0035093375,0.03140635,-0.0049835923,0.0118828835,-0.006424531,-0.022066625,0.011172132,-0.015647648,0.00082388916,-0.0012917083,0.0048669847,0.005824834,-0.011427558,0.016325083,-0.031517405,0.04186773,-0.02037859,0.0038258443,-0.010289244,0.03831397,-0.011088841,0.048020177,0.04877535,-0.013904084,-0.033205442,0.0124270525,0.0141373,0.014015139,0.0007218574,-0.0067410376,-0.025920235,0.008445731,0.027030783,-0.022877326,0.002179454,0.009906105,-0.011727407,0.039535575,-0.02763048,0.008656736,0.0102170585,-0.022333158,0.03609287,0.021533562,-0.009739522,0.030406855,0.019978791,-0.01726905,-0.010344772,-0.00091273314,0.02084502,-0.019656733,-0.0057970705,0.015258955,-0.028452286,-0.002615345,-0.017369,-0.013959612,0.0060136276,-0.012415947,-0.030162534,-0.002135032,-0.029451782,-0.0106890425,-0.0036176161,0.014337199,0.017824326,-0.009911657,-0.033205442,0.011760723,-0.038691558,0.0046198876,-0.041245822,-0.0038119624,-0.0650338,-0.017890958,-0.011527508,0.006618877,-0.0013250248,0.009761733,-0.0010348937,-0.007623925,-0.019623416,0.0006527951,-0.017202416,0.03382735,0.011177684,-0.0071908105,0.01128874,-0.035559807,-0.0056582517,-0.0025750876,-0.032094892,0.0049475,-0.036892466,-0.007124177,0.026786463,0.0074906587,-0.01803533,0.025009584,0.012671374,-0.02227763,-0.021866728,-0.015903074,-0.01559212,-0.013693079,0.0094008045,-0.013115594,0.017124679,0.016247345,-0.04408883,-0.022266524,-0.011166579,0.006485611,0.0044560814,-0.0044061067,0.007646136,-0.029274095,-0.037536584,-0.039069142,-0.004017414,-0.0019517913,0.006046944,-0.01524785,0.0034926792,-0.022122154,0.008778896,0.01128874,-0.014004034,-0.0038119624,0.0148258405,0.016491665,0.000807925,0.054505788,0.037692063,0.013137805,0.015825335,0.008662289,-0.009883894,-0.002475138,0.016214028,0.016269555,-0.00057401543,0.005127964,-0.026697619,-0.045110535,-0.014892474,-0.022310946,0.032428056,-0.02540938,0.016136289,0.020489644,-0.0027749864,-0.0031678434,-0.00009925539,0.011716301,0.0034482572,-0.014892474,0.021033814,-0.034826845,-0.0050418964,-0.030229168,0.0100393705,0.0071019665,0.028563343,-0.013237754,-0.023232702,-0.025609279,-0.040201906,-0.017580004,-0.005549973,-0.013615341,0.00052438775,-0.041801095,0.014548203,-0.010539118,0.032228157,0.039335676,0.008356888,-0.009417463,-0.041512355,-0.003831397,-0.004128469,-0.015625436,-0.033316497,-0.00026705253,-0.002437657,0.002150302,-0.020067636,0.004358908,-0.04371124,0.007124177,-0.0064356364,-0.005697121,0.011088841,0.03516001,0.025920235,0.010416958,-0.00020250183,-0.04075718,0.015636543,-0.077694066,0.024143353,0.01704694,0.01203836,-0.019456834,-0.0026792015,0.022488635,0.018623922,0.008512365,0.00028145497,-0.05192931,0.02259969,0.017302366,-0.046687517,-0.021056026,-0.007396262,0.012104994,0.004067389,0.009239775,-0.003853608,0.0028652186,-0.021011604,0.013371021,0.0014631494,0.01694699,-0.00039979795,0.011760723,-0.0050641075,-0.010416958,0.027363949,0.017990908,-0.026630986,0.09381925,-0.0038869246,-0.0069909114,0.017013624,0.00091481546,0.003126198,-0.026542142,-0.009528518,-0.0074073677,-0.038225126,0.016102973,-0.0074129202,-0.010305903,-0.0040424014,-0.019656733,-0.012849062,-0.026475508,0.024187775,-0.010106004,-0.058281656,0.023321547,-0.010006054,-0.020400802,-0.005497222,0.0058303867,0.022877326,0.0024404333,0.046909627,0.019012613,-0.022988383,0.025276115,0.015225639,0.0034149408,0.019756682,0.04184552,-0.012482581,0.01157193,0.00048413032,-0.025986867,-0.0014617613,0.0028957587,0.025054004,-0.014348304,-0.004542149,0.004950276,0.010000502,-0.009989396,0.028985351,-0.020112058,0.015447749,0.010516907,-0.055705182,-0.024432097,-0.010877836,-0.022832906,0.03273901,-0.013704185,0.03380514,0.00039181588,-0.004103482,0.016780408,0.027808169,0.007262996,0.038602713,-0.0034121645,0.009683995,0.018213017,0.007479553,0.018757187,0.021244818,0.000073487165,-0.017380105,0.017791009,0.01302675,0.026630986,-0.018535078,-0.003986874,0.0065411385,-0.013504286,0.0128046395,0.005150175,-0.006929831,-0.0062801596,-0.029718313,-0.015092373,-0.010411405,0.0016769302,-0.015547698,-0.024854105,0.017157996,0.011088841,0.0013437653,-0.025675913,0.0011674656,-0.018235229,-0.012971222,-0.021211503,-0.011161027,0.031228662,0.0015533816,-0.032672375,-0.068454295,0.0057470957,-0.003481574,-0.022677429,-0.024098933,-0.027052995,-0.00067465904,-0.009872789,-0.005869256,0.05099645,-0.0051029767,-0.005891467,-0.03471579,0.013226649,0.018779399,-0.007812718,-0.02316607,0.019390201,0.007090861,-0.022077732,-0.023943456,0.01096668,-0.008256938,-0.010250376,0.000027590224,-0.017791009,-0.054683477,-0.009178694,-0.026453298,0.04315597,-0.02718626,0.017369,-0.021877833,0.007124177,-0.003112316,-0.020911654,0.017646637,0.009622915,-0.006530033,0.025564859,0.03093992,0.042711746,0.012171626,0.0077849547,-0.012216048,-0.008045934,0.020689543,0.0047170604,0.028185755,0.02985158,0.0040562833,0.010466932,-0.0103114555,0.04186773,-0.01052246,0.0030956578,-0.0007940431,-0.017724376,-0.041601196,0.0031650672,0.02074507,0.018002013,0.022011098,-0.010106004,-0.027941434,-0.020089846,-0.033094388,-0.022266524,0.000755868,0.00957294,-0.036825832,-0.013015645,0.0008356888,0.010661279,-0.031028762,-0.000064680855,0.0049169594,0.0043255915,0.0059692054,0.0020697874,-0.044932846,-0.0672549,-0.031228662,-0.018279651,0.020933865,-0.023410391,0.03609287,0.022655217,-0.025142848,0.001726905,-0.03140635,0.026919728,-0.0016186264,-0.00840131,0.012515897,0.022810694,0.0013979046,-0.023121648,-0.0020933864,-0.023454813,-0.0011521955,0.000043554377,-0.013704185,0.0028360668,-0.0062079737,-0.03296112,-0.010794545,0.0329167,0.010550223,-0.0038730425,0.0027652693,-0.014659259,-0.0068465397,-0.008356888,0.008490154,-0.016880358,-0.0031595144,0.0019851078,0.04566581,0.028430076,0.0304957,-0.0087511325,0.03942452,-0.064456314,0.0015950273,-0.016835935,-0.024298832,0.023787977,0.02249974,0.010816756,-0.0034232698,0.01124987,0.033960614,0.015647648,-0.02094497,0.025675913,0.000036288086,-0.0061857626,-0.019256935,0.016991412,-0.0028207966,0.011344267,-0.0069353837,0.004039625,0.0040507307,0.02296617,-0.03813628,0.014170616,0.0054333652,-0.008312466,-0.0056304876,0.033560816,-0.025542647,0.0011716301,0.0037841985,-0.0013368244,-0.03318323,-0.04762038,-0.0033177678,0.010572434,0.014770313,0.033272073,0.026009077,-0.009395252,-0.024343252,-0.046731938,0.0029179698,-0.020167585,-0.002616733,-0.002051741,0.033094388,0.038691558,0.015525487,0.023899034,0.00025091486,0.0026000747,0.012649163,0.0037009073,-0.00069617596,0.029118618,-0.008767791,0.011982833,0.0038869246,-0.011827356,0.01102776,0.0035981815,-0.034893475,-0.017402316]},{"id":"find-minimum-in-rotated-sorted-array","name":"Find Minimum in Rotated Sorted Array","description":"You are given an array of length `n` which was originally sorted in ascending order. It has now been **rotated** between `1` and `n` times. For example, the array `nums = [1,2,3,4,5,6]` might become:\n\n* `[3,4,5,6,1,2]` if it was rotated `4` times.\n* `[1,2,3,4,5,6]` if it was rotated `6` times.\n\nNotice that rotating the array `4` times moves the last four elements of the array to the beginning. Rotating the array `6` times produces the original array.\n\nAssuming all elements in the rotated sorted array `nums` are **unique**, return the minimum element of this array.\n\nA solution that runs in `O(n)` time is trivial, can you write an algorithm that runs in `O(log n) time`?\n\n**Example 1:**\n\n```java\nInput: nums = [3,4,5,6,1,2]\n\nOutput: 1\n```\n\n**Example 2:**\n\n```java\nInput: nums = [4,5,0,1,2,3]\n\nOutput: 0\n```\n\n**Example 3:**\n\n```java\nInput: nums = [4,5,6,7]\n\nOutput: 4\n```\n\n**Constraints:**\n* `1 <= nums.length <= 1000`\n* `-1000 <= nums[i] <= 1000`\n","difficulty":"Medium","concepts":["Search Array"],"solutions":{"python":"class Solution:\n    def findMin(self, nums: List[int]) -> int:\n        start , end = 0, len(nums) - 1 \n        curr_min = float(\"inf\")\n        \n        while start  <  end :\n            mid = start + (end - start ) // 2\n            curr_min = min(curr_min,nums[mid])\n            \n            # right has the min \n            if nums[mid] > nums[end]:\n                start = mid + 1\n                \n            # left has the  min \n            else:\n                end = mid - 1 \n                \n        return min(curr_min,nums[start])\n    ","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {number}\n     */\n    findMin(nums) {\n        let [left, right] = [0, nums.length - 1];\n\n        while (left < right) {\n            const mid = (left + right) >> 1;\n            const guess = nums[mid];\n            const [leftNum, rightNum] = [nums[left], nums[right]];\n\n            const isTarget = leftNum < rightNum;\n            if (isTarget) return leftNum;\n\n            const isTargetGreater = leftNum <= guess;\n            if (isTargetGreater) left = mid + 1;\n\n            const isTargetLess = guess < leftNum;\n            if (isTargetLess) right = mid;\n        }\n\n        return nums[left];\n    }\n}\n","cpp":"class Solution {\npublic:\n    int findMin(vector<int> &nums) {\n        int res = nums[0];\n        int l = 0;\n        int r = nums.size() - 1;\n\n        while (l <= r) {\n            if (nums[l] < nums[r]) {\n                res = min(res, nums[l]);\n                break;\n            }\n            int mid = l + (r - l) / 2;\n            res = min(res, nums[mid]);\n\n            if (nums[mid] >= nums[l]) {\n                l = mid + 1; \n            }\n            else {\n                r = mid - 1;\n            }\n        }\n\n        return res;\n    }\n};\n","java":"class Solution {\n    public int findMin(int[] nums) {\n        int l = 0;\n        int r = nums.length - 1;\n\n        while (l <= r) {\n            if (nums[l] <= nums[r]) {\n                return nums[l];\n            }\n\n            int mid = (l + r) / 2;\n            if (nums[mid] >= nums[l]) {\n                l = mid + 1;\n            } else {\n                r = mid;\n            }\n        }\n        return 0;\n    }\n}\n","csharp":"public class Solution {\n    public int FindMin(int[] nums) {\n        int left = 0, right = nums.Length - 1;\n        while (left <= right) {\n            if (nums[left] <= nums[right]) {\n                return nums[left];\n            }\n            int mid = (left + right) / 2;\n            if (nums[mid] >= nums[left]) {\n                left = mid + 1;\n            }\n            else {\n                right = mid;\n            }\n        }\n        return 0;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def findMin(self, nums: List[int]) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {number}\n     */\n    findMin(nums) {}\n}\n","cpp":"class Solution {\npublic:\n    int findMin(vector<int> &nums) {\n        \n    }\n};\n","java":"class Solution {\n    public int findMin(int[] nums) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int FindMin(int[] nums) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/nIVW4P8b1VA","embedding":[-0.03059863,0.00932044,0.018291181,-0.039768502,0.042468954,-0.04553853,-0.0525325,0.00058222393,-0.020768212,0.03327965,0.021001345,-0.050201178,-0.048957806,0.012152027,0.070522554,0.015959857,-0.017261513,0.008907601,0.006940546,0.047209315,0.0175335,0.04647106,-0.0061294395,-0.013327403,0.09286441,-0.024381764,0.0148136215,0.026421674,0.023857217,-0.0040992447,0.020515652,0.0049249223,-0.013065129,0.018757446,0.0002885317,-0.0036645501,0.009708993,-0.038389135,0.023390952,-0.030540345,-0.040875882,-0.03118146,-0.01352168,-0.014803908,0.034270465,0.015833577,0.018310608,0.0027903034,0.050822865,0.012229738,0.018330036,0.002545029,-0.028500438,0.00958757,-0.011336063,0.0049516354,-0.021273332,0.037301186,0.029471822,0.013813095,0.00459708,-0.017514072,-0.017096376,0.064655386,0.028869564,0.044334013,0.032657966,0.0067899814,0.00720282,-0.04647106,-0.059798464,-0.0059983027,0.0027174496,-0.037689738,0.0054446133,0.024945168,0.02956896,0.03753432,-0.012783427,-0.022672126,0.014794194,0.0051677683,0.02747077,0.000022368416,-0.02366294,0.0042546666,-0.019000292,0.0068579786,-0.0124531565,-0.05847738,-0.02416806,-0.0392051,0.004640792,0.04950178,0.024828602,-0.0067074136,0.047364734,-0.007465094,0.055291235,0.03151173,-0.002205044,0.0021334044,0.025100589,-0.0025741705,0.019651119,0.014687342,0.011734331,0.018903153,-0.03329908,-0.0066977,0.013249692,0.014259933,-0.015474164,-0.021409327,-0.002865586,-0.004125958,-0.04860811,-0.0031011468,0.04386775,-0.0031594299,-0.004601937,-0.00563889,0.0089610275,-0.04149757,-0.039904498,0.0044489433,0.020185381,-0.06547135,0.05257136,0.0026178828,0.014337643,-0.02898613,-0.000081884726,0.014114224,-0.029024985,-0.046237927,0.009762419,-0.015007899,0.023099536,0.026713088,0.048802383,-0.024440048,-0.03557212,0.018980864,0.034328748,-0.013502252,-0.048957806,0.0629069,-0.0038175432,0.038136575,0.049035516,-0.012200596,0.016746677,0.041886125,0.025799986,-0.0038418279,-0.011190356,-0.017115805,0.03423161,-0.011170928,0.0028704428,-0.025508571,-0.0070279706,-0.020845924,0.029160978,0.012122885,0.017300367,-0.014638772,-0.021079056,0.02222529,0.045810517,-0.030132364,0.007338814,-0.003207999,0.028791852,-0.0042012404,-0.028830709,-0.069318034,-0.04899666,0.012404587,-0.042546663,0.0015505734,-0.015367311,-0.03236655,0.020263093,0.037242904,0.019466557,-0.05672889,-0.020826496,-0.027529052,0.024692608,0.024828602,0.005774884,0.019398559,-0.010889227,0.031200888,0.01415308,0.045188833,0.021856163,0.004116244,-0.035086427,0.03516414,0.025625138,0.011374919,0.013511966,-0.0535816,-0.002819445,0.01702838,0.017465504,-0.03584411,0.008572473,0.0026518812,0.035708115,-0.026441101,-0.023896072,0.044644855,0.016931241,0.0019852682,-0.021409327,0.04775329,0.041264437,-0.013783954,0.009903271,0.037806306,0.060847558,-0.017504359,-0.008625899,0.014376499,0.017397506,0.034328748,0.0018164901,-0.043634616,0.0072416756,0.019505411,-0.0027830182,-0.010607525,-0.02535315,-0.01364796,-0.011928609,0.005527181,-0.0029335828,-0.024537187,0.0144153545,-0.012938849,0.00020262485,-0.015153606,-0.049229793,0.03549441,-0.00950986,-0.018310608,0.017242085,0.0069016907,0.02956896,-0.04992919,-0.0018808442,0.04860811,-0.018135758,-0.0033245652,0.006955117,-0.012705716,-0.05630148,0.0005627962,-0.011034934,-0.0848602,0.020573935,-0.06302346,-0.022361284,0.032502543,0.014638772,0.0037762593,-0.034251038,-0.017164374,0.02747077,-0.01551302,-0.004006963,-0.011180642,0.008475334,-0.0020034816,0.011666334,-0.076234296,-0.024070922,-0.016892387,0.034833867,0.027101643,0.023585228,-0.025877697,0.01415308,-0.006153724,0.0020411229,-0.008310199,-0.029976942,-0.042041544,-0.007091111,0.006819123,-0.011005793,-0.010228684,0.00085542595,-0.01584329,0.016260985,-0.067219846,0.005332904,-0.045616243,-0.018184328,-0.00475493,-0.04056504,-0.047015037,0.018835155,0.032813385,-0.04596594,0.014046228,-0.013443969,0.055213526,0.00360141,-0.024886886,0.03617438,-0.07347556,-0.019155713,-0.023041254,-0.009660425,-0.0044198018,-0.010626952,0.0046262215,0.04876353,0.05222166,0.05047317,0.010374392,0.031667154,0.026033118,-0.00938358,-0.044372868,-0.011588624,-0.018631166,-0.0072853877,0.04005992,-0.04841383,0.046082508,0.00595459,-0.004116244,0.013055415,0.021448182,0.03642694,0.00788279,0.028830709,0.011462344,0.020185381,-0.0078099356,0.0131914085,0.000356984,0.024906313,-0.01107379,-0.008033355,0.002855872,0.047015037,-0.00595459,-0.028170167,0.0187963,-0.02010767,0.0023191818,-0.03246369,0.02568342,-0.02636339,-0.007975072,0.0054154717,-0.03357107,0.02939411,-0.02442062,-0.018572882,-0.045188833,-0.026926793,0.056223765,0.03767031,0.039166246,0.012909708,-0.016620398,-0.04328492,-0.017601497,-0.03153116,-0.004883638,-0.012725144,-0.0046577915,-0.040720463,-0.00713968,0.0024478904,-0.042468954,0.02914155,0.036154952,-0.0102189705,-0.050939433,-0.023138393,-0.0065957042,-0.009019311,-0.023274386,0.049579494,0.0010096333,0.01415308,0.022458423,0.054902684,0.035183568,-0.035863537,0.01833975,0.03252197,-0.0026445957,0.0016768534,0.026674233,-0.02855872,-0.023060681,-0.01947627,0.057272863,0.020340802,-0.05338732,0.012763999,-0.005536895,0.011918895,-0.0075719464,0.012870852,0.01246287,-0.00469179,0.029452395,-0.028034173,-0.00085664017,-0.009417578,-0.0015311457,0.016659254,0.020321375,0.029860375,-0.009354438,0.00023859645,-0.059526477,-0.0124240145,-0.02712107,-0.009092164,-0.020923633,-0.044644855,0.010908654,-0.08672526,0.047481302,-0.028791852,0.06706443,-0.021448182,-0.08400538,-0.032308266,-0.051133707,0.022264145,-0.011102931,0.013968517,-0.014143366,0.006299432,0.060381293,0.032832816,0.017805489,0.06317888,-0.03473673,0.06896834,0.043712325,-0.018077476,0.017416934,0.057311717,0.004121101,-0.017115805,0.021098483,-0.06481081,0.03118146,-0.0038248287,0.044761423,0.014735911,-0.037748024,-0.015250745,-0.01589186,0.041730702,0.02815074,0.022031013,-0.013958803,0.001443721,0.053853586,-0.050939433,-0.024109777,0.028383872,0.05400901,0.04876353,0.01470677,0.029802093,-0.033163086,-0.018485457,-0.035261277,0.02096249,-0.017650066,0.02172017,0.008888173,0.008863889,0.005114342,-0.047015037,-0.009024167,-0.02172017,-0.004021534,0.009126162,0.011588624,0.009456433,0.012142313,-0.01699924,0.023002397,0.017640352,-0.05136684,0.035222422,0.03261911,0.009281584,0.0021115483,-0.007591374,-0.016562115,-0.0023823217,0.07705026,-0.018825442,0.018621452,-0.0047330735,-0.0047695003,0.0071105384,0.061741233,0.022808122,-0.022594417,-0.008431622,0.000996884,0.0021479751,0.015736438,0.035902392,-0.0046699336,-0.0015566446,-0.01672725,-0.029316401,-0.011598337,-0.06251834,-0.004101673,0.014395926,0.01892258,0.009932412,0.051017143,-0.02923869,0.014337643,0.033687633,-0.00095681427,-0.021409327,-0.035474982,0.0067122704,0.008587044,-0.013210837,-0.013696529,0.001097058,0.0058040256,0.006309146,0.031162033,-0.03582468,0.011054362,0.014619345,-0.017135233,-0.00233011,-0.011287495,0.0037228332,-0.036018956,-0.007887647,0.023643512,0.021584176,0.026343962,-0.046626482,-0.016707823,0.019864824,0.009597284,0.0038029724,-0.008548188,-0.0021346186,-0.0056146057,-0.013881092,-0.01930142,0.0056680315,-0.005192053,0.033007663,-0.045499675,0.017446075,-0.006037158,-0.033415645,-0.011102931,-0.026751945,0.03201685,-0.011773187,-0.010840657,-0.016027853,-0.014483351,-0.011229211,-0.0011261995,-0.040526185,0.014162794,0.019417986,-0.017038094,0.015853005,0.004215811,0.045421965,0.016620398,-0.024032066,-0.046082508,-0.04961835,0.026499383,0.04099245,-0.014580489,0.015581016,0.034775585,0.016532974,0.0061440105,-0.0057457425,-0.008358768,0.02848101,0.023002397,0.00745538,0.027004505,-0.03059863,-0.022749837,0.016668968,0.0024806745,-0.0038709694,-0.028442154,0.013725671,0.029763239,-0.013152554,0.013239978,0.0058040256,-0.018145472,0.014133653,0.013065129,0.010354965,-0.0503566,-0.04849154,0.035766397,-0.013706243,-0.035863537,-0.036038384,0.014133653,-0.0021686172,-0.040021066,-0.0021564749,-0.0010527385,-0.007333957,-0.032813385,-0.02442062,-0.022536132,0.013317689,0.026343962,-0.00092463713,-0.05630148,0.0033221368,-0.013910234,0.0020119813,-0.016115278,-0.011685763,-0.01657183,-0.0044319443,0.011938322,0.017523786,-0.023080109,0.0068434076,-0.0022184006,0.008863889,-0.019621978,-0.004883638,-0.023429807,0.0043858034,0.00439066,0.030656911,0.033163086,0.04141986,-0.06554906,0.040331908,0.018155187,0.056379188,0.0004941921,-0.029024985,0.0138325235,0.010452103,-0.04107016,0.01932085,0.018553454,0.026421674,0.01258915,-0.01836889,0.018660307,0.021098483,-0.00098717,-0.012103458,0.043556906,-0.010937796,0.0040021064,0.021273332,0.027839895,-0.0008815319,-0.019165426,0.01647469,-0.012938849,-0.0017873485,-0.02956896,0.027004505,-0.017795773,0.011394346,0.048297264,0.017805489,-0.040254198,0.0070279706,-0.0056874594,0.032910526,0.027703902,-0.061702378,-0.011559482,0.0034411314,-0.008455907,0.0030914329,0.026343962,0.022827549,0.014939902,0.019058574,-0.017892912,-0.03355164,0.013958803,0.0057505993,0.007717654,-0.0021674028,-0.040293053,-0.022905258,0.02873357,-0.019757971,-0.013793668,0.0035042716,0.019417986,0.024945168,-0.0008760679,0.025275439,0.014483351,0.0038442563,-0.02704336,-0.008475334,0.038427994,0.0062848614,-0.036077242,0.0054640407,0.0076253726,-0.036640644,-0.024362337,-0.020437941,0.03277453,0.035941247,-0.012783427,0.0130068455,0.023293814,-0.023760078,0.0069211186,-0.07487436,0.030676339,-0.024712035,0.0010612381,0.023643512,-0.0021273333,0.050084613,0.031647723,0.0066637015,0.011093217,0.012812569,-0.001963412,-0.0048496397,0.030210074,-0.02762619,-0.0059643043,0.03819486,0.0020435513,-0.02855872,0.041109014,0.005192053,0.003176429,-0.016620398,-0.025042307,0.000060483897,-0.027062787,0.018446602,-0.026635379,-0.036077242,-0.006974545,-0.044334013,0.000656292,-0.031434022,-0.007377669,0.030384924,0.00031843217,0.019010006,0.012190882,0.040603895,-0.005396044,0.011180642,-0.024381764,0.0046796473,0.0047476445,-0.02956896,-0.033920765,0.002996723,0.008591901,-0.03741775,-0.008528761,0.028500438,-0.07899303,0.004866639,0.030851189,0.0024175346,-0.018223183,0.010180116,0.0148136215,0.028772425,-0.035941247,0.006056586,0.010500672,-0.01082123,0.05871051,0.02459547,0.020904206,0.010607525,0.022322427,-0.00055884995,0.0021516178,0.017591784,0.008140206,0.0023653226,0.00513377,-0.0012196953,-0.0038078295,0.020049388,-0.012569723,-0.012035461,0.017348938,0.014852477,0.04048733,0.02010767,0.009801275,-0.023041254,0.016960382,-0.021176195,0.027412485,0.04429516,0.011821756,0.0026057404,0.017766632,0.005012347,0.011336063,-0.00049267436,-0.012404587,-0.0037446893,0.0120548885,-0.01208403,0.005721458,0.0035236992,-0.03203628,-0.014191936,0.0134051135,0.0079605,-0.00031721793,0.0014449352,-0.009708993,0.022536132,0.01904886,-0.028403299,-0.028073028,0.030093508,-0.012356018,0.013667388,-0.02467318,-0.048802383,0.017038094,-0.037573174,-0.019884251,-0.009029024,-0.029355256,0.03937995,0.03153116,-0.03100661,-0.014677628,0.031200888,0.0037301185,-0.029335828,-0.02492574,0.01221031,-0.017115805,0.040176485,0.02459547,-0.014114224,0.0471316,-0.0045655095,-0.061158404,0.014425068,0.020554507,0.0008742465,-0.009956697,0.03557212,-0.039302237,-0.009301011,0.00017105484,-0.010675522,0.013570249,0.027004505,0.0022499706,0.041109014,-0.016950669,-0.025275439,-0.0032784245,0.015950143,0.011238925,0.013414827,0.005794312,-0.0061634383,0.0133954,0.0150273265,-0.0051629115,0.0061197258,-0.0120257465,0.029452395,0.010986364,0.0197774,0.024012638,-0.0010843086,-0.018330036,0.023740651,0.009582713,0.019864824,-0.040953595,-0.032075133,-0.0054834685,0.056495756,-0.0075622327,-0.02653824,0.0034629877,0.021195622,0.0040166774,0.047908712,-0.009631283,0.015542161,-0.037009772,-0.016358124,-0.017504359,0.010044121,0.0035528408,0.021953302,-0.0064694243,-0.00080624956,-0.015940428,-0.0049152086,-0.029452395,0.019913394,-0.011763473,0.028364444,-0.025469717,-0.026868511,0.021992158,0.026207969,-0.027140498,0.0032347122,-0.016086137,-0.028675286,0.0005679567,-0.004237667,0.043051787,0.016863244,0.0050220606,0.018232897,-0.01014126,0.012317162,-0.01440564,0.008402481,-0.043129496,0.023760078,0.021292761,0.004225525,-0.036116097,0.012122885,-0.00526005,-0.0092670135,0.014007373,-0.019311136,-0.015804434,-0.007892503,-0.009004739,-0.00707654,0.0060128733,0.028092455,-0.0024503188,0.0020690502,-0.033435073,0.0006544707,0.01947627,-0.00889303,0.00165864,0.028675286,0.009475861,0.039943352,0.033085376,-0.0054057576,-0.029199835,0.013453683,-0.014114224,-0.05804997,0.02754848,-0.006692843,-0.012268594,0.018067762,-0.05474726,-0.037378896,0.014745625,0.033940192,-0.033590496,0.0035674116,0.006158581,-0.012346304,-0.015182748,-0.037048627,0.003926824,0.0029360114,0.013764526,0.029432967,-0.011656621,0.039360523,-0.0018237755,0.004179384,0.004827784,-0.022303,-0.002761162,0.0185146,0.033493355,-0.03710691,-0.02704336,0.017426647,0.046548773,0.0059983027,0.023896072,-0.015406167,0.0059497333,-0.020748785,0.004269237,-0.0023641083,0.039826788,0.00025453322,-0.0028048742,0.025819415,0.0066637015,-0.021992158,0.0062265783,0.0018759874,0.012754286,-0.020729357,-0.004609222,-0.018164901,-0.00802364,-0.025780559,0.003953537,-0.016513545,0.00851419,0.017378079,-0.016377551,-0.025547426,0.0064111413,0.017290654,0.011462344,0.0048884954,0.0138325235,-0.011792614,-0.0359801,-0.020321375,0.009699279,0.013385686,-0.022808122,-0.026246823,-0.02442062,-0.04223582,-0.022885831,-0.007377669,-0.001412151,-0.025625138,0.040759318,-0.005114342,-0.027781613,-0.052882202,-0.014493065,0.00472336,0.021428755,0.03017122,-0.007295102,-0.0013320118,-0.029063841,0.014852477,0.02078764,0.0052843345,-0.01745579,-0.009912984,-0.0062265783,0.004235239,0.035649832,0.01491076,0.031395163,0.015095323,-0.01077266,0.016882673,-0.0028364444,-0.0015785007,-0.0023811075,0.039341096,0.0031327168,-0.0037544032,-0.03767031,0.023701794,-0.018679734,0.006294575,0.050822865,-0.0014376498,-0.02449833,-0.0016392122,0.009058165,-0.0108309435,-0.00098717,-0.04417859,-0.035183568,0.0007133609,0.01082123,-0.011481771,-0.012754286,0.0138033815,-0.035144713,0.00808678,0.030229503,-0.051871963,-0.027956462,0.014259933,0.03141459,-0.014250219,0.012016033,-0.024226343,-0.035008717,-0.04876353,-0.007319386,0.008281058,0.0071008247,0.024051493,-0.013657674,0.001805562,0.014454209,0.041691847,-0.045499675,-0.009412721,-0.00775651,0.026985077,0.018058049,0.022905258,0.042818654,0.008208204,0.0013477968,0.04180841,0.006241149,0.028908418,0.022497278,-0.01579472,0.041691847,-0.035708115,0.015707295,-0.005536895,-0.010704664,-0.005794312,-0.0021394757,-0.01796091,0.0014315787,-0.00933501,-0.009252443,0.002598455,-0.0050414884,0.04192498,0.012200596,0.012579436,-0.0044440865,0.006250863,-0.03430932,0.046548773,-0.020010533,0.0029481535,0.005313476,0.032735676,0.0027830182,0.01609585,0.01644555,-0.013579963,-0.0023070395,0.012948562,-0.00013728403,0.0038224002,-0.033648778,0.027956462,0.030540345,0.0071736784,-0.025042307,0.0033051376,-0.011608051,0.003999678,-0.003154573,-0.0007321815,-0.0018723446,0.02255556,0.0027708758,-0.004762215,-0.036290944,-0.0133954,0.051094852,-0.015066182,0.0074408096,0.0024746035,0.021195622,-0.025508571,-0.021584176,0.00085603306,-0.011326349,-0.008591901,-0.060964126,0.0059983027,-0.021273332,-0.037145764,-0.00353827,-0.017222656,-0.0046699336,-0.00018152758,0.07297044,0.00369612,-0.022788692,0.00028063921,-0.021681314,-0.0087181805,0.038427994,0.025897125,-0.017718064,-0.034775585,-0.052415937,-0.016154133,0.019952249,0.044877987,-0.009315583,-0.007193106,-0.0044440865,0.050395455,-0.02704336,-0.025197728,-0.034523025,-0.015746152,-0.042468954,0.05587407,-0.0011614122,-0.01251144,0.020301947,0.01758207,-0.018436888,-0.019243138,0.0016999239,-0.0019706974,0.025955409,-0.01082123,0.011724617,-0.0029408683,0.031842,0.005585464,-0.019291706,-0.025081161,-0.019991104,0.015853005,0.004193955,0.015678154,0.008179062,-0.009223301,0.011918895,-0.020165954,0.015066182,0.001086737,-0.007533091,0.034095615,-0.009140734,0.028655859,-0.00075160916,-0.00055581436,0.03355164,0.00084631925,-0.011491485,0.004062818,0.043906603,0.0030137221,-0.0012882994,0.019845396,0.015153606,0.0068434076,-0.017650066,0.009441863,-0.027529052,-0.010286967,-0.012268594,-0.008582187,-0.008077066,0.021759026,0.020884778,-0.0025474573,-0.003217713,0.0054154717,0.025625138,-0.015260459,-0.006241149,-0.0095438585,-0.017076949,-0.008460764,0.021253904,0.006105155,-0.004446515,-0.009252443,0.030618057,0.024634324,0.009199017,-0.03566926,0.004167242,0.01609585,0.0057408856,0.010908654,0.0006068121,0.010549242,-0.00781965,0.014269646,0.005313476,-0.054280996,0.0030428637,-0.038117148,-0.029899232,0.038583413,-0.032308266,-0.014347357,-0.00663456,0.019029433,0.023934927,-0.010558955,-0.070872255,-0.010685235,0.044411723,0.0027101643,0.007465094,-0.00682398,0.005833167,-0.0131914085,0.0023349668,-0.023643512,-0.02467318,0.005090058,-0.018135758,0.052765634,0.030190647,-0.01195775,-0.046859615,0.009519573,-0.022322427,-0.020010533,0.01364796,0.0068676923,-0.004827784,-0.031375736,0.024556614,-0.013842237,0.0005348689,0.03708748,0.014444496,0.023934927,-0.0048957807,0.015338169,-0.030443206,0.051444553,0.0045727952,0.005153198,-0.0280536,0.019952249,-0.031492304,-0.023293814,0.010529814,-0.011394346,-0.027529052,-0.026227396,0.02416806,-0.009169875,-0.022516705,0.02661595,0.016872957,-0.012686289,0.022652699,0.016795248,0.045072265,0.015386739,0.02626625,0.020146526,0.007654514,0.020651646,0.0065422785,-0.012880566,0.0013210836,-0.0019561267,-0.025158873,0.024323482,0.017737491,0.0019245566,0.0022754695,-0.0069016907,0.05991503,0.009772134,0.014123939,-0.007217391,0.0077516525,-0.017514072,0.020360231,0.020321375,-0.0058428813,0.016154133,0.018252324,-0.01864088,-0.06477196,0.027839895,-0.0063285735,-0.0065034227,-0.009247585,0.0033002808,-0.0047063604,-0.039768502,-0.017193515,-0.046082508,0.014386212,0.03118146,-0.032424834,-0.0071639647,0.045732807,-0.02424577,-0.057661418,-0.010626952,-0.03277453,0.021914447,-0.039671365,0.030909473,0.025139445,0.0033294223,0.051017143,0.0029481535,0.017523786,0.0047160746,-0.0047282167,-0.0354167,0.022283573,-0.013638246,-0.033726487,-0.004456229,-0.00011110216,0.0006696486,0.043634616,-0.01685353,0.027354203,-0.020243665,0.013628532,0.038583413,-0.0030890044,0.03945766,-0.021389898,-0.008125636,0.045188833,-0.006624846,0.025256012,-0.024809174,0.0040603895,-0.014978757,-0.04417859,0.011744046,0.010578383,-0.0034362746,-0.008421908,0.01190918,-0.053115334,0.0050269174,-0.013356544,-0.043751184,0.019689975,-0.025197728,0.029296974,0.019534552,-0.01034525,0.005473755,0.021564748,0.057428285,0.05295991,0.041264437,0.0055611795,-0.022846976,0.019796828,-0.017018666,0.0056048916,-0.020010533,-0.018883726,0.040798172,0.033726487,-0.0026203112,-0.0012379088,0.020127099,0.016678682,0.021817308,0.033668205,0.023216102,-0.00074493093,0.017290654,0.037981156,-0.018320322,-0.0025013166,-0.019738544,-0.03574697,0.010733805,0.009038738,0.026343962,0.012006319,-0.027140498,-0.01107379,-0.013152554,-0.0037544032,-0.00807221,-0.024070922,0.008567616,0.0042765224,0.01566844,-0.0046820757,0.053542744,0.00032632466,-0.004162385,0.008154778,0.018378604,0.0019451985,-0.014463923,0.0072271046,-0.018815728,0.013609105,0.050317746,-0.01756264,0.0029335828,0.025722276]},{"id":"reverse-a-linked-list","name":"Reverse a Linked List","description":"Given the beginning of a singly linked list `head`, reverse the list, and return the new beginning of the list.\n\n**Example 1:**\n\n```java\nInput: head = [0,1,2,3]\n\nOutput: [3,2,1,0]\n```\n\n**Example 2:**\n\n```java\nInput: head = []\n\nOutput: []\n```\n\n**Constraints:**\n* `0 <= The length of the list <= 1000`.\n* `-1000 <= Node.val <= 1000`\n","difficulty":"Easy","concepts":["Singly Linked Lists"],"solutions":{"python":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\n\nclass Solution:\n    def reverseList(self, head: ListNode) -> ListNode:\n        prev, curr = None, head\n\n        while curr:\n            temp = curr.next\n            curr.next = prev\n            prev = curr\n            curr = temp\n        return prev\n","javascript":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     constructor(val = 0, next = null) {\n *         this.val = val;\n *         this.next = next;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {ListNode} head\n     * @return {ListNode}\n     */\n    reverseList(head) {\n        let [prev, curr, next] = [null, head, null];\n\n        while (curr) {\n            next = curr.next;\n            curr.next = prev;\n\n            prev = curr;\n            curr = next;\n        }\n\n        return prev;\n    }\n}\n","cpp":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n\nclass Solution {\npublic:\n    ListNode* reverseList(ListNode* head) {\n        if (head == NULL || head->next == NULL)\n            return head;\n\n        ListNode *prev = NULL;\n        ListNode *curr = head;\n\n        while (curr != NULL) {\n            ListNode *temp = curr->next;\n            curr->next = prev;\n            prev = curr;\n            curr = temp;\n        }\n        return prev;\n    }\n};\n","java":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\n\nclass Solution {\n    public ListNode reverseList(ListNode head) {\n        ListNode current = head;\n        ListNode previous = null;\n        ListNode nextCurrent = null;\n    \n        while (current != null) {\n            nextCurrent = current.next;\n            current.next = previous;\n            previous = current;\n            current = nextCurrent;\n        }\n\n        return previous;\n    }\n}\n","csharp":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     public int val;\n *     public ListNode next;\n *     public ListNode(int val=0, ListNode next=null) {\n *         this.val = val;\n *         this.next = next;\n *     }\n * }\n */\n \npublic class Solution {\n    public ListNode ReverseList(ListNode head) {\n        ListNode prev = null, curr = head;\n\n        while (curr != null) {\n            var temp = curr.next;\n            curr.next = prev;\n            prev = curr;\n            curr = temp;\n        }\n        return prev;\n    }\n}\n"},"starterCode":{"python":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\n\nclass Solution:\n    def reverseList(self, head: Optional[ListNode]) -> Optional[ListNode]:\n        ","javascript":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     constructor(val = 0, next = null) {\n *         this.val = val;\n *         this.next = next;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {ListNode} head\n     * @return {ListNode}\n     */\n    reverseList(head) {}\n}\n","cpp":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n\nclass Solution {\npublic:\n    ListNode* reverseList(ListNode* head) {\n        \n    }\n};\n","java":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\n\nclass Solution {\n    public ListNode reverseList(ListNode head) {\n        \n    }\n}\n","csharp":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     public int val;\n *     public ListNode next;\n *     public ListNode(int val=0, ListNode next=null) {\n *         this.val = val;\n *         this.next = next;\n *     }\n * }\n */\n \npublic class Solution {\n    public ListNode ReverseList(ListNode head) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/G0_I-ZF0S38","embedding":[0.035451934,-0.028609652,-0.0001316697,-0.033901274,0.0038184968,0.04155765,-0.06795762,-0.02859027,0.007506157,0.00250286,0.021360323,-0.023608778,-0.042371746,-0.032273084,-0.03927043,0.0062995506,0.0056938245,0.0016899756,0.008174879,0.048458084,0.0065854536,-0.009274877,0.07291973,-0.0014052844,0.05454442,0.0017602398,0.039735626,0.02128279,-0.0070458055,-0.00199405,0.024093358,-0.02331803,0.0047440464,0.06377084,-0.02308543,0.03620788,0.037099507,-0.021728605,0.015719801,0.020255478,-0.009308797,-0.015593811,-0.017163852,-0.04903958,-0.0058973487,-0.0021781907,0.01151364,-0.0064788456,0.032214932,0.03093564,0.019683674,0.0038063824,0.028377052,0.05004751,-0.064972594,-0.007360783,0.018782353,0.05671534,-0.0060233395,0.038223736,0.005858582,-0.015758568,-0.0018074865,0.005228627,0.011940071,-0.02967573,0.006241401,0.02182552,0.015312755,-0.034909204,-0.05311006,0.0011617825,0.0006796246,0.0052916226,-0.043495975,0.010680161,0.039735626,0.05000874,-0.006391621,-0.030121544,-0.0009806704,0.03130392,0.02733036,0.009614084,-0.046674825,-0.022445783,-0.012298661,-0.04047219,0.0126960175,-0.03793299,-0.012027296,-0.02188367,-0.0067889774,0.019315392,0.04113122,0.0043079234,0.031730354,0.03116824,0.010505713,0.04299201,-0.021379706,-0.020177945,0.028997317,-0.00058028556,-0.0004933638,-0.016979713,0.044271305,-0.019170018,-0.053032525,-0.0033484534,-0.002854181,-0.0519083,0.04539553,-0.0026482341,-0.012579719,0.0005221358,-0.039638713,-0.009943599,0.0051510944,-0.010815844,0.030431677,-0.0354907,-0.03428894,-0.03657616,-0.06528273,0.008727301,0.036673076,-0.043612275,0.023279263,-0.011077518,0.06078582,0.014934781,-0.018859886,0.02835767,-0.012463419,0.02451979,0.0056211376,-0.020429928,0.022910982,0.028028155,0.03277705,-0.031129472,-0.048186716,-0.03671184,0.042294215,0.019887198,0.01671804,0.004853077,-0.01588456,0.046015795,0.01834623,0.0069682724,0.021980586,0.05663781,-0.02446164,0.0007196025,0.0065321494,0.0008080385,-0.009531705,-0.0045453683,0.027718022,-0.0075206943,0.010505713,-0.023938293,0.011998221,-0.003641625,-0.023104813,-0.020798208,-0.008252411,-0.10040515,0.017842267,-0.044814035,-0.01102906,-0.010059898,0.028008772,0.051714465,-0.014750641,-0.018123323,0.022891598,0.007981046,-0.0028420666,0.03302903,-0.044348836,-0.020158563,-0.02649688,0.007893821,-0.014779715,-0.038049288,-0.029830797,-0.0068132062,0.003842726,0.09358225,-0.0038184968,0.03669246,-0.04023959,0.035762064,0.010001748,-0.011940071,0.014479275,-0.025896,-0.01115505,0.010137431,-0.02841582,0.008441398,0.021476623,-0.0027378816,-0.0013277514,0.019751515,0.022562083,-0.054893315,0.05268363,0.005359464,0.02116649,-0.006314088,0.01655328,-0.032757662,0.01797795,-0.023434328,0.019741822,0.033532992,0.0070118844,0.028842252,-0.015390287,0.036052812,0.01661143,-0.024733005,0.019422,-0.01744491,0.009124657,-0.010748003,0.014401742,-0.009807916,0.011649323,-0.037448406,0.011639631,-0.09094613,-0.008131267,-0.047566455,-0.035820216,0.0256634,-0.0028033,0.03308718,-0.016204383,0.05450565,0.016824646,-0.02859027,-0.0076999892,0.004099554,-0.01067047,0.032389384,-0.014828173,0.0033654138,-0.011261659,-0.020061646,-0.011436108,0.033494227,0.018598212,-0.018365614,0.011542715,-0.023938293,-0.016931254,-0.022814065,0.014401742,-0.05004751,-0.0024713622,-0.038999066,0.03099379,0.02446164,0.007176642,0.04078232,0.008174879,-0.035025503,0.023453712,-0.026225515,-0.004877306,0.014236985,0.04322461,-0.028183222,-0.012250204,-0.06524396,0.01894711,-0.0029850178,0.026574412,-0.0079762,-0.017367376,0.022329485,-0.031614054,0.005267394,-0.036769994,-0.016185,-0.0033920659,-0.007811443,-0.031943567,0.014527733,-0.0032539603,0.044387605,0.022620233,0.014702182,0.032641366,-0.04826425,0.021011425,-0.04659729,-0.018336538,0.024771772,-0.010234347,-0.045473065,-0.005645367,0.0160687,-0.04981491,0.0257797,-0.0645074,0.014547116,0.03465722,0.0023720232,-0.014440509,-0.016572664,-0.04969861,-0.044891566,-0.023453712,0.004608364,-0.0009400868,0.016698655,0.016834337,0.07377259,0.017784117,0.02985018,-0.021534773,0.021747988,0.034211405,-0.0053400807,-0.00803435,-0.030082777,-0.04748892,0.0043539586,-0.03477352,-0.022930365,-0.010680161,0.030179694,-0.041053686,0.008945362,0.05342019,0.019770898,0.008068271,0.03663431,-0.05714177,-0.027679257,0.016136542,0.010883685,-0.015477512,-0.011242275,-0.03452154,-0.025624635,0.029656347,0.00030316587,-0.0015736762,0.03122639,-0.025527718,0.04454267,-0.039541796,0.02391891,-0.04861315,-0.015777951,-0.05186953,0.012143595,0.026710095,0.034036957,0.0058537363,-0.024752388,-0.0027911856,0.006493383,0.04089862,0.005126865,0.0043563815,0.017125087,-0.0025682785,-0.017357685,-0.0035689378,0.028629035,-0.035529464,0.038747083,-0.04066602,-0.018084556,-0.026167365,-0.0093911765,0.009667387,0.020701293,0.027601724,-0.03675061,-0.03397881,-0.020584993,0.022465168,-0.04562813,0.05113297,0.016378831,0.06648449,-0.0076466855,-0.0042521968,0.014992931,-0.010961219,0.01781319,0.028086305,0.00596519,-0.0051898607,-0.016495131,-0.03027661,-0.055048384,-0.004446029,0.02572155,0.033532992,-0.035607,-0.010428179,0.02320173,0.001870482,0.03279643,0.02099204,0.027117142,0.02362816,0.0032297312,0.028764717,0.011746239,0.014644032,-0.028047537,-0.0035713606,0.058188464,0.051714465,0.051753234,0.0038718008,0.032059867,0.041518886,-0.0011339191,-0.048845746,0.010428179,-0.02056561,-0.018627288,-0.026593795,0.04190655,0.012957691,0.035781447,0.004148012,-0.04442637,-0.02314358,-0.005989419,-0.015865177,0.002599776,0.015981475,-0.031827267,-0.022503933,0.029501282,-0.0112132,-0.03657616,0.020313628,0.07303602,0.056754105,0.017900417,0.033009645,-0.009846683,0.0051171733,-0.0046907426,0.00051819865,-0.0037555015,-0.0448528,0.031381454,0.0144502,0.0072929417,0.010757694,-0.039406113,0.017037861,0.020294245,0.009507475,-0.032408766,0.035800833,0.06962457,-0.011387649,-0.00070627657,-0.03735149,0.055474814,0.009148886,0.045318,-0.040200826,-0.010147123,-0.015913634,-0.011843155,0.01990658,-0.020100413,-0.034928586,-0.02769864,0.017832575,0.014896015,-0.01414976,0.023007898,0.078191966,0.000050426694,0.019325083,-0.0035544003,0.014052844,0.0045599057,-0.02056561,-0.0446202,0.010476638,-0.026206132,0.005180169,-0.047799055,-0.013684562,-0.016805263,0.033494227,-0.057568204,0.0058973487,-0.0031909647,0.014401742,0.04682989,-0.025372652,-0.011910996,0.0017154161,-0.018898653,0.011697781,-0.005228627,-0.011358575,-0.043922406,0.030896874,-0.022019353,0.0133259725,-0.008819371,-0.0040535186,-0.027407892,-0.0026361197,0.022116268,0.0144502,0.022988515,-0.010224655,-0.022697765,0.0046350155,-0.00086679397,-0.022271335,0.03452154,0.021844903,-0.0057713576,-0.00038705894,-0.032815814,-0.029540047,-0.05012504,0.03440524,0.03488982,0.009328181,-0.022251952,0.0053400807,-0.039309196,0.017784117,0.0019976844,-0.00085770804,0.012880159,0.0013859011,0.00827664,-0.018956803,-0.043379676,-0.01864667,-0.028086305,-0.03411449,-0.00707488,0.032990262,0.028318904,-0.0031812731,-0.028008772,0.023880143,0.008441398,0.01727046,0.013587646,-0.017958565,-0.004198893,0.013335665,-0.0089599,0.05520345,-0.013703946,0.02440349,-0.017454602,-0.003539863,-0.022891598,-0.044387605,-0.03673123,0.002095812,0.018259006,-0.0068616644,-0.052063365,-0.027659874,-0.0023162963,-0.0020812748,-0.00067356735,-0.014973547,0.00265308,-0.008664305,-0.021806138,0.015729494,0.025799083,0.011862539,0.05287746,-0.0059409607,-0.034327704,0.020972658,-0.014459892,-0.0013871127,-0.026244897,-0.03541317,0.05594001,-0.0064303875,0.030237844,-0.020759443,0.005000874,0.01414976,0.024190275,-0.0004985125,0.011135668,0.012792934,0.024655472,0.017115396,0.003641625,0.001591848,0.009148886,0.027970005,0.04923341,0.03254445,-0.034075722,0.02930745,-0.012676635,0.020526843,0.028977934,0.002977749,-0.0018377728,-0.058072165,0.0320211,-0.0013749981,0.009022895,-0.016795572,-0.009400868,0.005136557,-0.011949764,0.016320683,0.004218276,0.0011327077,-0.015341829,-0.02205812,-0.0354907,0.03159467,-0.017096011,-0.012986766,-0.0321374,-0.008882366,-0.0133259725,-0.014033461,0.014644032,-0.015012314,0.0018850195,0.01648544,-0.011145359,0.06156115,-0.012657251,0.025043137,0.03944488,0.013161215,-0.0046132095,0.0021212525,0.030780574,-0.017173545,-0.027388508,0.012075754,-0.0004215853,-0.0112132,-0.0321374,0.006391621,-0.01462465,0.017280152,-0.03508365,-0.05729684,0.0144502,0.03835942,-0.018491605,-0.043728575,-0.023608778,0.018220238,0.018326847,-0.010205273,-0.01528368,0.0010497232,0.019751515,-0.037681006,0.02967573,0.0027984544,-0.012783242,-0.045162935,0.0012278067,-0.034133874,-0.0176872,-0.0018486759,-0.02105019,-0.021437855,-0.007501311,0.0030795112,0.006745365,0.043612275,0.06505013,0.011184125,-0.032466915,0.005078407,-0.027407892,0.011833464,0.007302633,-0.02056561,0.018375305,-0.0073947036,0.030024627,0.00010433631,-0.03944488,-0.00749162,-0.0068132062,-0.023608778,0.01102906,0.007966509,0.017890723,0.014663416,-0.020875743,0.02099204,-0.022193803,-0.047140025,0.0017166276,0.014033461,-0.011058134,-0.023124197,0.016281916,-0.03430832,0.038281884,-0.015981475,-0.012948,-0.012822009,0.02194182,-0.02105019,0.02105019,-0.009764303,0.03376559,-0.06090212,0.006246247,-0.033009645,0.00449691,-0.020236095,-0.019887198,0.037215807,0.039483644,0.01721231,0.00953655,-0.007355937,0.03411449,-0.07536201,0.011058134,-0.03551008,0.0007771465,0.0015579273,-0.014585883,0.028144455,0.0025658554,0.0067308275,-0.009459018,0.020061646,-0.010466946,-0.043379676,-0.008097346,-0.026651945,-0.029171767,0.022251952,-0.010980601,-0.010302189,0.01234712,0.013451964,0.0038112283,0.004242505,0.018191164,0.03333916,0.003382374,0.0036319334,0.00018747221,-0.0065806075,0.04047219,-0.016495131,-0.014682799,0.017183237,0.0072493292,0.005892503,-0.01001144,0.004148012,0.01631099,0.016873104,0.024965605,-0.03934796,-0.03673123,-0.01379117,-0.03465722,0.026593795,-0.040510956,0.024888072,-0.008925979,-0.006701753,0.011949764,0.009841837,-0.0519083,-0.04605456,0.04330214,0.019615833,-0.026051065,-0.034269556,0.044387605,-0.03638233,-0.02847397,-0.02451979,0.0017868918,-0.05419552,0.04004576,-0.02391891,0.01900526,-0.001832927,0.032873962,-0.047140025,-0.011290734,0.036188494,0.0036319334,-0.0015470242,-0.010244039,-0.007898668,0.014818482,0.026710095,-0.0020933892,0.03717704,0.015865177,0.008126421,-0.00995329,-0.0018753278,0.0138977785,-0.025372652,0.032951497,-0.018627288,-0.021069575,0.040084526,-0.014934781,-0.0099920565,0.032525066,0.0040244437,-0.001806275,-0.003992946,-0.049194645,0.004649553,0.007874439,0.032214932,0.005713208,0.015971784,-0.037021976,-0.023841377,0.0144986585,-0.01721231,0.0059991106,-0.038999066,0.04927218,0.04927218,0.025450185,0.006314088,-0.03946426,0.04551183,0.005383693,0.012240511,-0.018976185,-0.00265308,-0.028570885,-0.0015191609,0.02764049,-0.008809679,-0.021903053,0.021418473,0.020371778,-0.007229946,0.008683688,-0.013403506,0.020584993,-0.0010206484,0.051947065,-0.04617086,-0.032641366,0.025333885,-0.03795237,-0.010050206,0.011736548,-0.00413832,-0.04334091,0.04124752,-0.0018668476,-0.02170922,-0.004874883,0.01744491,0.0043442673,0.03824312,-0.009168269,-0.0383788,-0.0015857908,-0.025527718,-0.02062376,0.034463387,-0.0013677294,-0.020313628,-0.005577525,0.003869378,0.006546687,0.04465897,-0.04396117,0.0011484566,-0.030024627,-0.0046035177,-0.04737262,0.019092485,0.017163852,-0.01552597,0.056250144,0.03357176,-0.00061541767,0.0051171733,-0.00206068,-0.012860775,0.019024644,0.016107466,-0.019170018,-0.0071136467,0.037777923,0.0079762,-0.033125944,-0.004070479,0.014779715,0.020720676,-0.00857708,-0.008872675,0.006895585,0.0006293493,-0.029811412,-0.034618456,0.047023725,0.028183222,0.0019298431,-0.018307464,0.0012865621,-0.022251952,-0.03477352,-0.017774425,0.026361197,0.007961663,-0.029520664,0.03219555,-0.0028759872,0.029055467,-0.02248455,0.021786753,-0.007985892,0.022639615,-0.0018620018,-0.02128279,-0.015933018,-0.022329485,-0.041518886,0.019373542,0.020177945,-0.0064885374,-0.04113122,0.0033944887,0.014828173,0.04903958,-0.015487203,0.013510114,-0.015118922,0.029985862,-0.026186747,0.00015408156,-0.02841582,-0.03694444,0.011474874,0.0223101,-0.0027233441,-0.021321556,-0.007312325,0.012279279,-0.006905277,0.02985018,0.008722455,0.0015603503,0.0034332552,-0.026962077,0.008271795,-0.0007177853,-0.02451979,0.011843155,0.01565196,0.008625539,0.02199997,0.02955943,0.012444036,-0.0129383085,0.0023914063,-0.01852068,0.022814065,0.019586757,0.010544479,-0.009706154,-0.009759458,0.022290718,-0.0257797,0.01901495,-0.032602597,0.024190275,0.016873104,-0.024655472,0.001616077,-0.011281041,-0.031788502,0.0016233458,0.05330389,-0.014731257,-0.02428719,0.008213645,-0.0144695835,-0.008465627,-0.057568204,0.044891566,-0.02044931,0.0018389842,0.049776144,-0.027504807,-0.014217601,0.021961203,0.011852847,0.016088083,0.01193038,0.0059312694,0.005475763,-0.015496895,0.007738756,-0.029869562,-0.0065854536,-0.006105718,-0.03855325,-0.012298661,-0.00926034,-0.02068191,-0.002288433,0.009255494,0.020274863,-0.030199077,-0.015060772,-0.031691585,-0.01426606,0.000038804323,0.0069634267,-0.0090907365,0.0026724632,-0.03033476,-0.012211436,0.0037676159,0.043922406,0.03411449,0.013694254,0.011503949,0.002315085,-0.0012768705,-0.034909204,0.03343608,0.012909234,0.040549725,0.0028033,0.016436981,-0.012986766,-0.010796461,-0.03969686,0.01894711,0.0010176197,-0.026535647,0.015933018,0.005388539,-0.026419347,-0.021728605,0.007055497,-0.008082808,-0.04334091,0.005785895,-0.008591618,-0.0024398644,0.023162963,0.05252856,-0.0070070387,-0.0064110043,0.01379117,-0.011058134,-0.016989404,0.05000874,0.020798208,0.009657696,0.04132505,-0.0034502156,-0.032331232,-0.010205273,-0.014178835,0.016495131,-0.003137661,0.0035931668,0.013975311,0.0019492264,-0.031633437,-0.041596416,-0.008611001,-0.008572235,0.025275735,-0.013752404,-0.03913475,0.01462465,-0.023240497,-0.026303047,0.018733894,-0.013694254,-0.024655472,0.010069589,-0.02440349,-0.018249314,-0.0041770865,0.0020025303,0.023162963,-0.014081919,0.01067047,-0.037099507,-0.01672773,-0.021573538,0.014392051,0.03386251,0.00961893,-0.00039675055,-0.017473985,-0.04136382,-0.002832375,-0.023821993,0.006551533,0.011736548,0.015816718,-0.014789407,0.039851926,0.04562813,0.011901305,0.01774535,-0.02469424,0.01876297,0.024151508,0.012385886,0.027795557,0.0094202515,-0.014692491,0.03938673,-0.003435678,0.00014734286,-0.017338302,-0.0019056142,-0.018733894,-0.026109215,-0.012637868,-0.027446657,-0.002602199,-0.010331263,0.007782368,-0.023007898,0.017793808,-0.005955498,0.012579719,-0.027058993,0.0015797334,0.03423079,-0.02248455,-0.018656362,-0.025430802,-0.008698226,-0.0077969055,0.03105194,0.01414976,-0.0048240023,0.030974407,0.044271305,0.015962092,-0.008669151,0.013451964,-0.027562957,0.0012090291,-0.010748003,0.01049602,-0.0032563831,-0.040627256,0.015613195,0.0062026344,0.006294705,0.0032055022,0.00097582466,-0.029365597,0.019082792,0.0022823757,0.012812317,-0.014236985,-0.008494702,0.0100211315,0.002229072,0.010050206,-0.031187622,0.01828808,-0.012221129,0.020313628,0.011823772,-0.04989244,0.0029632119,-0.05617261,0.031071322,0.036479246,-0.010418488,-0.015836101,0.00079834694,-0.023957675,-0.031633437,0.033804357,-0.02105019,0.01288985,0.00941056,-0.009899986,0.010844919,-0.0067114444,-0.009604392,-0.023531245,0.008271795,0.01384932,0.043263376,0.010767386,-0.028202605,-0.03134269,-0.010350646,0.009240956,0.02529512,0.0010582034,-0.031013172,0.02331803,0.068384044,-0.0010903069,-0.05671534,0.0036440478,-0.0085189305,-0.0020812748,0.018142706,-0.035238717,-0.038630784,0.058304764,-0.03698321,-0.004879729,0.000935241,0.0025343578,0.02523697,-0.030664274,-0.008858138,-0.020546228,-0.037448406,0.037196424,0.0048555,-0.028493352,-0.0058973487,-0.013936545,-0.00023426455,-0.0150704635,0.025488952,-0.01300615,-0.013481039,0.027970005,-0.0036513165,-0.02895855,0.016204383,0.007937434,0.012540951,0.012114521,0.039851926,0.0014900861,-0.023453712,0.012424652,-0.008102192,0.0009170692,0.042177916,0.01025373,0.057994634,-0.04148012,0.022465168,-0.013287206,0.00863523,-0.02824137,0.00338722,0.017299535,0.022135653,-0.02643873,0.014033461,0.017881032,0.03752594,0.04605456,0.016814955,-0.0035519775,-0.023298645,-0.0070409593,-0.026884545,0.026109215,0.010515404,0.008315407,-0.011358575,0.020410545,-0.024151508,0.010263422,0.004850654,0.020933893,0.00014408708,0.014779715,-0.014004386,0.007559461,0.00995329,0.011920689,0.0070991092,-0.022872215,-0.0015724648,0.00413832,-0.010757694,0.016688963,-0.036653694,0.0018353498,-0.03452154,-0.0144695835,0.031090707,-0.007404395,0.024907455,-0.0049717994,-0.054583184,-0.069702104,-0.02170922,-0.0360722,0.00707488,-0.008984129,0.02930745,0.018394688,0.015923327,-0.002907485,-0.005868274,-0.025333885,0.019547991,0.02595415,-0.024015825,-0.024170892,0.02996648,0.037021976,-0.038165584,-0.018152397,0.009541396,-0.018133014,-0.032835197,0.0044314917,-0.025896,0.028629035,-0.0014925089,0.0070458055,-0.02835767,-0.06264661,-0.02033301,-0.02105019,0.033416692,-0.0074383155,0.020856358,-0.010079281,0.02271715,-0.022755915,0.003590744,-0.0178035,0.014896015,-0.038456336,-0.004220699,-0.01253126,-0.012269586,-0.06330564,-0.025023755,0.01828808,0.000096461874,0.0009194921,0.005029949,0.025585867,-0.02661318,-0.010660778,0.0025173973,0.023938293,0.023007898,0.053265125,0.023104813,0.0035059422,0.022581467,-0.005984573,0.03566515,0.025333885,0.051404335,-0.017570902,0.05462195,-0.0010666836,0.02134094,0.03262198,0.016388524,0.040627256,0.0020170677,0.0039347964,0.03459907,0.0022629926,0.04066602,0.015719801,0.022814065,-0.008194262,-0.0026724632,-0.0068277437,-0.02638058,-0.025818467,-0.02961758,-0.016136542,0.01162994,-0.017706584,0.004896689,0.0036004356,-0.0062268637,-0.006246247,0.0062995506,-0.020720676,-0.013587646,0.00035313828,-0.0099920565,0.034812286,-0.016533898,-0.03322286,0.012463419,-0.0023296224,-0.0066339117,-0.04066602,-0.0027112297,0.038708318,0.030780574,0.03818497,0.026341815,0.04299201,0.019392924,0.011106593,-0.039406113,0.008887213,0.0058779656,0.0020933892,0.016233457,-0.021437855,0.019770898,-0.0015082578,-0.012570026,0.019092485,-0.008514085,-0.012143595,0.019499533,0.004441183,-0.022891598,-0.01426606,-0.019654598,-0.002020702,0.04287571,0.024752388,0.030044012,-0.0042085843,0.0073850118,-0.025372652,0.018278388,0.01708632,0.005805278,0.04078232,0.047527686,-0.02919115,0.025585867,0.012298661,0.01732861,0.02068191,0.023221113,-0.010515404,-0.012521569,0.027834322,0.0013435003,0.035529464,0.04795412,0.03903783,-0.004521139,0.04671359,0.0029365597,0.031575285,0.02236825,0.007811443,-0.018811427,0.01450835,-0.008892058,0.030586742,-0.036847524,0.016029933,0.015031697,0.008107037,0.01528368,-0.012269586,-0.0026555029,0.05101667,0.008422015,0.02979203,-0.036014047,-0.02099204,-0.031633437,-0.02374446,0.023414945,-0.00035283543,-0.03614973,-0.008906595,-0.0260123,-0.018297773,-0.0068568187,-0.0132678235,-0.003183696,0.035800833,0.023880143,0.009899986,-0.0047101257,-0.0067065987,0.01349073,0.021922437,0.01151364,0.032156784,0.017357685,-0.0013955928,-0.030373527,0.0138687035,-0.023124197,0.014246676,0.007603073,0.037739154,-0.0015397556,-0.004751315]},{"id":"invert-a-binary-tree","name":"Invert a Binary Tree","description":"You are given the root of a binary tree `root`. Invert the binary tree and return its root.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/ac124ee6-207f-41f6-3aaa-dfb35815f200/public)\n\n```java\nInput: root = [1,2,3,4,5,6,7]\n\nOutput: [1,3,2,7,6,5,4]\n```\n\n**Example 2:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/e39e8d4f-9946-4f99-ee3d-0d4df08d4d00/public)\n\n```java\nInput: root = [3,2,1]\n\nOutput: [3,1,2]\n```\n\n**Example 3:**\n\n```java\nInput: root = []\n\nOutput: []\n```\n\n**Constraints:**\n* `0 <= The number of nodes in the tree <= 100`.\n* `-100 <= Node.val <= 100`\n","difficulty":"Easy","concepts":["Binary Tree","Depth-First Search"],"solutions":{"python":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nclass Solution:\n    def invertTree(self, root: Optional[TreeNode]) -> Optional[TreeNode]:\n        if not root: return None\n\n        root.left, root.right = root.right, root.left\n        \n        self.invertTree(root.left)\n        self.invertTree(root.right)\n        \n        return root\n","javascript":"/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     constructor(val = 0, left = null, right = null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {TreeNode} root\n     * @return {TreeNode}\n     */\n    invertTree(root) {\n        if (root === null) return null;\n\n        const node = new TreeNode(root.val);\n\n        node.right = this.invertTree(root.left);\n        node.left = this.invertTree(root.right);\n\n        return node;\n    }\n}\n","cpp":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n\nclass Solution {\npublic:\n    TreeNode* invertTree(TreeNode* root) {\n        if (root == nullptr) return nullptr;\n\n        TreeNode* node = new TreeNode(root->val);\n        \n        node->right = invertTree(root->left);\n        node->left = invertTree(root->right);\n\n        return node;\n    }\n};\n","java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    public TreeNode invertTree(TreeNode root) {\n        if (root == null) return null;\n        \n        TreeNode node = new TreeNode(root.val);\n\n        node.right = invertTree(root.left);\n        node.left = invertTree(root.right);\n        \n        return node;\n    }\n}\n","csharp":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\npublic class Solution {\n    public TreeNode InvertTree(TreeNode root) {\n        if (root == null) return null;\n\n        TreeNode node = new TreeNode(root.val);\n        \n        node.right = InvertTree(root.left);\n        node.left = InvertTree(root.right);\n\n        return node;\n    }\n}\n"},"starterCode":{"python":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nclass Solution:\n    def invertTree(self, root: Optional[TreeNode]) -> Optional[TreeNode]:\n        ","javascript":"/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     constructor(val = 0, left = null, right = null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {TreeNode} root\n     * @return {TreeNode}\n     */\n    invertTree(root) {}\n}\n","cpp":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n\nclass Solution {\npublic:\n    TreeNode* invertTree(TreeNode* root) {\n        \n    }\n};\n","java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    public TreeNode invertTree(TreeNode root) {\n        \n    }\n}\n","csharp":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\npublic class Solution {\n    public TreeNode InvertTree(TreeNode root) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/OnSn2XEQ4MY","embedding":[0.007816057,0.0043024835,-0.016469723,-0.024095856,0.019800676,0.032043397,-0.030679848,-0.016070398,-0.010538285,0.038510516,0.029783802,0.015310706,-0.017891709,-0.046204828,-0.00799624,-0.025478885,0.006603472,-0.009096819,0.00064646825,0.055360083,0.016908005,-0.01145381,0.07889104,-0.05781447,0.029004632,-0.015359404,0.013382258,0.01942083,0.002637006,-0.0053129704,0.016148314,-0.013888719,-0.01384976,0.05571071,-0.013869239,0.017735874,0.059294894,0.00639894,0.016128834,0.028205981,-0.01622623,-0.0019114033,-0.019060465,-0.010703858,-0.012612826,-0.009242913,-0.05142527,0.017463164,-0.014706848,-0.00179818,-0.026004825,-0.019917553,0.03198496,0.0056782067,-0.070514955,-0.026199616,-0.030679848,-0.0051181777,-0.017112538,0.029082548,0.031575896,-0.016547639,0.02397898,0.030562973,0.047607332,-0.0049915626,-0.0027295325,0.013216684,-0.008716973,-0.04819171,-0.03143954,-0.0060580526,-0.022790745,-0.0036669723,0.018700099,0.043594602,0.025887948,0.036173,0.01438544,-0.04908776,-0.0048284237,0.0044339686,0.063580334,-0.00007875408,-0.0036840166,-0.0037278451,-0.030991517,-0.04180251,-0.021232404,-0.07464456,-0.015846385,-0.045191903,0.025907427,0.013275121,0.00078282313,-0.02319981,-0.0033674787,0.021933656,0.0017251328,0.030173387,-0.013187465,-0.056450922,0.057775512,0.026608681,0.013518613,0.0053908876,0.054541953,-0.010820734,-0.04129605,0.0069346195,-0.0020453231,-0.06587889,0.04737358,-0.017765094,-0.012174543,-0.06576201,-0.053957574,-0.031790167,0.008040069,-0.04363356,0.0691514,-0.053996533,-0.04823067,-0.00532758,-0.019255258,0.011950531,-0.0012661525,0.009393877,0.020940214,0.018300774,0.0341082,0.0463217,-0.031264227,0.018252075,-0.032082357,0.0135770505,-0.009939297,0.02242064,0.0038155017,0.0035184429,-0.011220059,-0.017989105,-0.015076954,-0.026706077,-0.02561524,-0.0004303701,-0.0024312562,0.028205981,-0.040672712,0.0186514,0.03732228,-0.015466539,-0.007226809,0.014482836,-0.017979365,0.016810609,-0.0013525918,0.02849817,0.01917734,-0.030835683,0.00853679,-0.014745806,0.01147329,-0.0013087634,-0.0007359511,0.01680087,-0.01253491,0.00016085614,0.01571003,-0.0207649,0.015310706,-0.025907427,0.025926907,0.016089875,-0.0073193354,0.011629123,-0.032043397,0.0085854875,0.017141758,0.011755738,-0.022712827,0.009452315,-0.022284284,-0.009992865,0.04133501,-0.01756056,-0.001053098,-0.019547446,-0.019868854,0.015174351,0.0013270252,0.032608297,0.03882218,0.04639962,-0.002318033,0.02372575,0.0116193835,-0.00850757,0.0011261452,0.043828353,0.026277535,-0.0006945577,0.011297976,0.02693983,0.0442569,0.007903714,-0.047880042,0.022595951,-0.0117070405,-0.059061144,0.050529223,0.0127784,-0.0064330287,0.016547639,0.02744629,0.013771843,0.051542144,-0.031517457,-0.013898458,0.048074834,-0.008551399,0.01838843,0.033445906,0.03895854,0.041958347,0.012466732,-0.02027792,-0.04184147,0.010869432,-0.009004292,0.020940214,-0.00063125003,-0.0014073772,0.00439014,-0.012135585,-0.017891709,-0.011609645,-0.0131777255,-0.04082855,-0.021758344,-0.005439586,0.04375044,-0.001425639,-0.023316685,-0.031264227,-0.011229798,0.022518035,0.005303231,-0.0415298,0.01145381,-0.0118823545,-0.011687561,-0.031634334,-0.016313888,-0.025926907,-0.01224272,0.04371148,-0.014404919,0.014443878,-0.031575896,-0.023082934,-0.0207649,-0.0059752655,-0.061749283,-0.016888525,-0.062956996,0.039542917,0.018291034,0.015028256,0.013304341,0.028361816,-0.036406755,0.04476336,-0.04055584,-0.028011188,-0.0045922375,0.014697108,-0.00037984573,-0.015398362,-0.0410623,-0.017385248,0.06903453,0.027407331,0.004957474,-0.023784187,0.040400002,-0.015836645,-0.032627776,-0.004343877,-0.0067885253,-0.029861718,0.008278689,-0.017219674,-0.0020063648,-0.03330955,-0.006019094,0.0064865965,0.03171225,0.022576472,-0.0654893,-0.013245903,-0.04873713,-0.0074995183,0.04417898,0.028225461,-0.062450536,0.01970328,0.027134622,-0.0139374165,0.017414466,-0.071605794,0.01598274,0.004779726,0.022479076,-0.023316685,-0.049477343,-0.010070782,-0.079592295,-0.004097951,0.0245244,-0.01253491,-0.017706655,0.012963453,0.058827393,0.04928255,0.034789976,-0.06100907,0.025965866,0.037400197,0.0062041474,0.0009654413,-0.042231057,0.032569338,-0.0059314375,-0.011814177,-0.00613597,-0.000074607124,-0.011151882,-0.042464808,-0.019566925,0.040633757,-0.01944031,0.04523086,-0.022440119,-0.02185574,-0.024972422,0.012301158,0.06587889,0.00493069,0.027543686,-0.02693983,-0.031205788,0.018583223,-0.04776317,-0.0018420083,0.025400966,-0.028381296,0.06287908,-0.001412247,0.036075607,-0.06880078,-0.01942083,-0.03734176,-0.02210897,0.017472904,0.0035890553,-0.033367988,-0.0011858005,0.011502508,0.016080137,0.020063646,0.013460175,0.00031562502,0.0027270976,-0.00746056,-0.009822422,0.017920928,0.004080907,-0.0017373073,0.02849817,-0.027329415,0.02027792,-0.0065401644,-0.002661355,-0.03406924,0.0012929365,0.03775082,-0.033757575,-0.002505521,0.011064225,0.025946386,-0.019070204,0.019907814,0.014005594,0.020686984,-0.008945854,0.00126737,0.046010032,0.035257477,0.0372054,0.007699181,0.030251306,-0.04484128,0.015018516,-0.03704957,-0.021758344,0.0627622,-0.013810801,0.0017884404,-0.04324398,0.0032700822,0.001369636,-0.014745806,-0.0213298,0.015037996,-0.01172652,0.02319981,-0.027368372,-0.020667505,0.006579123,0.00021381541,0.009695807,-0.015174351,0.024836067,0.056178212,0.025887948,-0.014044553,0.004419359,0.04417898,-0.00018200942,0.038510516,0.030621411,-0.03806249,-0.001974711,0.0063551115,0.014434138,0.037166446,0.042815432,-0.014044553,-0.0139374165,-0.02238168,-0.017404728,0.03646519,-0.0017726135,-0.025634717,0.03679634,0.016606078,0.03884166,0.0031385971,-0.06393096,0.022225846,0.04721775,0.0022388985,-0.03644571,0.003839851,-0.014317263,0.013771843,0.053373195,0.004645806,-0.0048284237,-0.04959422,0.026530765,0.018563744,0.015641853,-0.0022851618,-0.021115528,0.021368759,0.029102027,0.02025844,-0.05298361,0.044880237,0.014015334,0.017716395,-0.0014767721,-0.022790745,0.012291418,0.03971823,0.04016625,-0.02639441,-0.014609451,-0.008488092,-0.0051814853,0.03780926,-0.019868854,0.01944031,-0.040945422,0.0325109,0.015680812,-0.030952558,-0.010976568,0.03574446,-0.0010762296,-0.012768661,-0.0032603426,0.06973578,0.016021699,-0.022556994,-0.024310127,0.02530357,-0.004507016,-0.007372903,-0.01384976,-0.0017287851,0.009018902,-0.0008430871,-0.054308202,-0.019898074,0.009423097,-0.013781583,0.055905502,-0.016956704,-0.020453233,-0.026024302,0.016343107,0.018554004,0.009140647,-0.02053115,-0.028809838,0.00933057,-0.031770688,0.009018902,-0.016011959,0.024446482,0.0117070405,-0.0072949864,0.02154407,-0.01359653,0.00306068,-0.0367379,-0.007372903,0.019303955,0.013216684,0.029063068,0.02397898,-0.00904812,0.011434331,0.01064542,0.03642623,-0.006832354,0.002583438,0.0007237766,0.003834981,-0.00024744758,-0.04149084,-0.021719385,0.0071537616,0.011521988,-0.027738478,0.007908584,0.016576858,0.010353232,-0.027115142,-0.02505034,-0.04285439,-0.008863067,-0.012963453,0.0013818106,-0.012505691,0.017005403,0.009983125,-0.019898074,-0.00932083,0.009033511,0.011658343,0.020472711,0.0037254102,-0.028011188,0.008239731,0.0018176592,0.023647832,0.076358736,0.003674277,0.012768661,0.012719963,0.027543686,-0.0223622,0.0058973487,-0.0755406,-0.0020879342,-0.006549904,-0.012905016,-0.029783802,-0.049672134,0.032316107,-0.015544456,0.009910078,0.012281679,0.011677822,0.0051035685,-0.036328837,0.002588308,0.04398419,0.04978901,0.020881776,-0.056840505,-0.01279788,-0.010002605,-0.016041178,-0.0035257477,-0.001876097,0.0019345349,0.010489587,0.033406947,0.03708853,0.021271361,-0.0016204317,0.02397898,0.01571977,-0.011775218,0.008142334,0.0053714085,-0.033387467,0.02423221,0.008643925,-0.013167986,0.007674832,-0.0025444794,0.054580912,0.017365769,-0.026258055,0.0019540142,-0.008161814,0.014512056,0.022985537,-0.0027904052,0.0052594026,-0.021154486,0.045932118,0.0080059795,0.0043804008,-0.03669894,0.01701514,0.007533607,0.015145131,0.008838718,-0.05329528,-0.031829126,-0.002739272,-0.022849182,0.0014804244,0.00021457633,0.010294793,-0.020609066,-0.028303377,-0.028089106,0.019625364,0.0056343786,0.04897088,-0.013294601,-0.025537321,-0.0059022186,0.011638863,0.015398362,0.0120187085,0.010616202,0.022966059,-0.026511285,-0.054502994,-0.02692035,0.0138010625,0.011531727,-0.009900338,0.017141758,0.01994677,-0.03412768,-0.007533607,0.007246288,0.035023727,-0.013674446,-0.031088913,-0.010431148,0.016167793,0.006846963,-0.03948448,-0.05138631,-0.023414081,0.01918708,-0.008337127,-0.015232788,-0.017511863,0.016937224,0.02561524,-0.030251306,0.04484128,0.012885536,0.01781379,-0.010061042,-0.0027587514,-0.015369143,-0.033621218,-0.008064417,-0.020570109,-0.035510708,-0.017735874,-0.016567118,0.006812874,0.018261814,0.065645136,0.030407138,-0.06400888,-0.013138767,-0.0003600621,-0.011317455,0.014697108,-0.017959885,0.022693349,0.0048576426,0.06922932,0.04043896,-0.039796147,-0.0010987525,-0.01572951,0.0098759895,0.03753655,0.014901641,0.00373028,0.029861718,0.040633757,0.04554253,-0.03806249,-0.023336165,0.004480232,0.020667505,0.029024111,0.0109473495,0.0071732407,-0.039601352,0.012174543,-0.027543686,-0.016635295,-0.059645522,0.002449518,-0.015447061,0.0075871754,-0.019557185,0.020589586,-0.034712058,0.03749759,-0.0035354872,-0.003569576,-0.0017872229,0.0022255066,0.021972615,-0.027757958,-0.03541331,0.0019028811,-0.030485056,0.022206366,-0.0442569,0.05091881,0.009963646,0.0012503256,-0.031595375,-0.04503607,0.017005403,0.00008164553,-0.0018834018,-0.027913792,0.009150387,-0.007358294,-0.04523086,-0.0047383322,-0.007893974,-0.02481659,-0.007494649,0.0050207814,-0.008186162,-0.0077235303,-0.0049477345,0.047061913,0.007002797,-0.013294601,0.03907541,-0.022031054,0.0108596925,-0.0016922614,-0.007251158,-0.028537128,-0.013616009,-0.058983225,0.004343877,0.007928062,0.023511477,-0.019040985,0.016567118,-0.0016058222,0.0049696486,0.01649894,-0.02374523,-0.02690087,-0.014297783,-0.03782874,-0.0019686236,-0.029550051,0.02397898,0.025264611,-0.0261217,0.01065516,-0.024602316,-0.045737322,-0.023803666,0.04429586,0.00412717,-0.02183626,-0.025907427,0.060268857,-0.0045971074,-0.053412154,-0.025439925,-0.0033066059,-0.03488737,0.05193173,-0.0116193835,0.01596326,-0.03545227,0.0007949977,-0.019586405,-0.028225461,0.025478885,0.017502123,0.013382258,0.0039104633,0.0035257477,0.027524207,-0.021524591,-0.013976376,0.026686598,-0.010888912,0.0009410922,-0.015203569,0.034458827,-0.003834981,-0.018972808,0.04803588,-0.030991517,-0.0045630187,0.04507503,-0.0042927437,-0.0071001933,0.017414466,-0.009632498,-0.012203762,0.018485826,-0.060424693,0.006267455,0.023550436,0.012681004,0.00034575703,0.016606078,-0.06498284,-0.014911381,-0.007855015,0.0011596252,0.021738864,-0.028946193,0.02877088,0.012651785,0.02210897,0.007007667,-0.009510753,0.027407331,0.00067994825,-0.0057999524,-0.0410623,-0.012544649,-0.036893737,-0.023940021,-0.015378883,-0.0008516093,0.01572951,0.011424591,0.0016764345,-0.017998844,-0.007928062,-0.010830473,-0.036095086,-0.03323163,0.020375315,-0.008307908,0.0036036647,0.023141371,-0.013781583,0.020842819,-0.006715478,-0.003218949,-0.04577628,0.018778015,0.04180251,-0.0015486019,-0.016683994,-0.0052301837,0.021446675,0.013703666,-0.025108777,-0.003355304,0.0047285925,-0.0065450342,-0.014161428,0.038529992,-0.04051688,-0.01144407,0.00666191,0.03192652,0.02448544,0.0377703,-0.04336085,-0.00493069,-0.009661717,-0.024115335,-0.031361625,-0.018456608,0.007377773,-0.023141371,0.045737322,0.0155834155,0.011687561,-0.0196838,0.029627968,-0.05298361,0.014249085,-0.019274736,-0.0017774833,-0.034458827,0.022167409,-0.024037417,-0.029160466,-0.028615046,0.029335778,0.003116683,-0.0022522905,0.010002605,0.017161235,-0.0060824016,-0.009155257,0.006174928,0.017209934,-0.015865864,-0.04850338,0.0010062259,-0.04659441,0.0025590889,-0.052944653,-0.035608105,-0.023940021,-0.02214793,0.0041515194,-0.030972037,-0.032958925,0.0313811,-0.010187658,0.034789976,0.006184668,0.030972037,-0.023336165,-0.004229436,-0.05087985,-0.004536235,-0.0170541,0.013294601,0.004899036,0.0002063585,-0.02879036,0.031030476,0.03837416,0.04258168,0.021096049,0.01252517,-0.010567503,0.030601932,-0.02693983,0.0047066784,0.0073047257,-0.005176616,-0.0015522542,0.023569915,-0.014054293,-0.051814854,0.003598795,0.0018980113,0.039796147,0.023647832,0.013440696,-0.04078959,-0.0102363555,0.027855355,0.027095662,0.01146355,-0.032919966,-0.013236163,0.030796723,-0.010596722,0.0458542,0.054814663,-0.029647447,0.006876182,0.04121813,-0.017433945,0.04024417,-0.013401737,-0.02664764,-0.03145902,-0.024913985,-0.001666695,-0.030153908,0.035510708,-0.016450243,-0.0029267601,0.02877088,0.0044899713,0.0006300326,-0.007402122,-0.011775218,0.01914812,0.043282937,-0.006710608,-0.011590165,0.03755603,-0.016158054,-0.019040985,-0.03385497,0.003961596,-0.0186027,0.033971846,0.05165902,0.0106649,0.0020136693,0.02267387,-0.02505034,0.023121892,-0.0054298462,0.010070782,-0.008234861,0.04390627,0.00084369583,-0.03488737,-0.011483029,0.02156355,-0.024349086,-0.013557571,0.014580233,-0.01759952,-0.029861718,-0.02181678,0.04176355,-0.062177826,-0.0072073294,-0.032666735,-0.030796723,0.007139152,0.042776473,-0.014005594,0.02318033,0.006340502,-0.0055321124,0.009505883,0.012038188,0.044685442,0.016557379,0.039289687,0.020979173,-0.05306153,-0.022829704,0.0018846192,0.04772421,0.016187273,0.011551207,0.00826895,-0.02399846,-0.009389007,-0.038763747,0.028946193,0.011599905,-0.03895854,-0.014979558,0.0053665387,-0.026199616,-0.02481659,-0.013197205,-0.03198496,-0.007884234,0.05489258,-0.0007487344,-0.009004292,0.04908776,-0.006978448,-0.02505034,0.03539383,0.0024750845,-0.008434524,-0.0067739156,0.017667698,0.02162199,-0.004745637,0.008999422,0.0045849327,0.00851244,-0.007348554,0.010957088,0.022498555,-0.021193445,-0.00506948,-0.0009654413,0.014794505,-0.03299788,-0.028965672,-0.017492384,-0.007109933,0.031790167,0.011580425,-0.033738095,0.020414274,0.004643371,-0.01974224,0.023628354,-0.029666927,-0.003116683,-0.011142142,-0.016216492,-0.010791515,-0.00090456853,0.01893385,0.015174351,0.020570109,0.013986115,-0.031205788,-0.008712103,-0.0008698711,-0.014745806,0.023608875,0.050217554,-0.034283515,-0.007007667,-0.014180908,0.016187273,-0.0018286164,-0.0070174066,-0.0047821607,-0.022167409,-0.015943782,-0.0017482644,0.031575896,-0.015057475,0.0023691661,-0.009929557,0.04725671,0.016479462,0.009642238,0.03654311,0.0033358247,-0.02664764,0.012632306,0.017677436,-0.012836838,-0.014765286,-0.015661333,0.02454388,-0.012593348,-0.02879036,-0.041373968,-0.0031045084,-0.029374737,0.011375893,-0.0103240125,0.00014000725,0.012622566,-0.008955594,0.0065158154,0.019226039,0.03973771,-0.011064225,-0.006851833,-0.012836838,0.006574253,-0.025985345,0.01278814,0.0055223727,0.007781968,0.016830089,0.0072121993,0.021407716,-0.0031045084,-0.0014280739,-0.003486789,-0.03749759,-0.016927484,-0.0069930577,0.008395565,-0.016946964,0.037127487,0.0026857043,0.009111428,-0.0026029174,0.01331408,-0.031030476,-0.0049745184,-0.008595227,-0.0011748434,-0.03675738,0.014375701,-0.011668082,-0.0069054007,-0.0005673337,-0.024388045,0.029238382,-0.021115528,0.030368181,-0.025186695,-0.03441987,0.0006933402,-0.013508873,0.03886114,0.04156876,-0.052360274,-0.0056684674,-0.033484865,0.00070734095,-0.0015242528,0.024154294,-0.023823146,0.016567118,-0.033114757,-0.018515045,0.011483029,0.001369636,-0.016898265,-0.00045837153,0.0154081015,0.018592963,0.0013245903,0.0052837515,-0.028186502,-0.023043975,-0.00559542,0.00080778095,-0.007777098,0.0022790744,-0.028342336,0.0031239877,0.072151214,0.0078696245,-0.009734765,0.010781775,0.0037716734,0.013927678,-0.0034989638,-0.03200444,0.03223819,0.03541331,-0.028050147,-0.024952944,0.017356029,0.007231679,0.0072121993,-0.0032652125,0.016343107,-0.0016545204,-0.02370627,0.006846963,0.009106558,-0.008454002,0.01119084,0.0034746146,0.027660562,0.019518228,0.031478498,0.016362585,0.026335971,-0.002374036,-0.013781583,-0.023043975,0.016050918,0.0062431055,0.026355451,0.0021354149,0.055009454,0.025771072,-0.0072949864,0.013284861,0.00505487,-0.0051133083,0.021096049,0.016158054,0.05835989,-0.032335587,0.013771843,-0.052594025,0.025439925,-0.02023896,0.014521795,0.023141371,-0.00021168486,0.002875627,-0.0059509166,0.017414466,0.046750244,0.03831572,0.022518035,0.02530357,-0.027348893,-0.014346481,-0.040361047,0.019508488,-0.044646483,0.0058096917,-0.04293231,-0.0016058222,-0.034692578,0.02129084,0.037419677,0.058437806,-0.032374546,-0.003547662,-0.008629316,0.0027003137,0.026355451,0.0048479033,-0.006715478,-0.0025128257,-0.0051133083,0.011025266,-0.008556269,-0.0048892964,-0.02429065,0.030601932,-0.05726905,-0.01147329,-0.015037996,0.027719,0.026160657,0.002039236,-0.04078959,-0.080644175,0.010518805,-0.03404976,0.0006586428,0.0011103183,-0.0003466701,0.018252075,0.01914812,0.031225268,-0.0063745906,-0.02131032,0.023530956,-0.013216684,-0.016742432,-0.03465362,0.05200965,0.04686712,-0.02427117,0.000988573,-0.01569055,-0.011093443,-0.012593348,0.033718616,0.0070709744,0.029374737,0.015300966,0.018203378,-0.028868277,-0.03223819,-0.03701061,0.010051303,0.035004247,-0.0014110295,-0.0041685635,-0.011268757,0.015612634,-0.0045411047,-0.0071829804,0.003917768,0.0009082209,-0.034497786,-0.01676191,-0.032296628,-0.03642623,-0.015378883,-0.031342145,0.022284284,-0.022440119,0.01890463,0.015524977,0.015300966,-0.010168178,0.0048503377,0.00057220354,0.02799171,0.027309936,0.025245132,0.02208949,-0.029511092,0.039289687,-0.015632113,-0.0067836554,0.0074995183,0.009934427,-0.030562973,0.03330955,-0.004363356,0.00060355297,0.0061408393,0.011385633,0.023082934,-0.014989298,0.0033139107,0.014249085,0.0018286164,0.021466155,0.04803588,0.02559576,-0.0042976136,-0.000029884699,0.008166684,-0.022167409,0.0018334861,-0.0044875364,-0.050178595,0.017502123,0.01676191,-0.022790745,-0.01065516,-0.016323628,-0.016966444,0.024407525,-0.020920735,0.0335433,-0.010538285,-0.037633948,0.03911437,-0.013372518,-0.04324398,-0.025439925,0.015563936,0.0064671175,-0.03989354,-0.0040322086,0.009827292,-0.0029486744,0.02053115,0.024349086,0.021680426,0.0113466745,-0.014687369,-0.03352382,-0.0059314375,0.0043268325,-0.01144407,0.0010324012,-0.02559576,0.013460175,0.0041612587,-0.013762103,0.015115913,0.0040273387,-0.01093761,0.010830473,0.011142142,0.0026053523,-0.026238576,-0.010966828,0.02318033,0.00479677,-0.0065401644,0.019625364,0.0109473495,0.020453233,-0.018826714,-0.01146355,0.028615046,0.0041515194,0.015787948,0.058048222,-0.014268564,-0.019635104,-0.012125845,0.02051167,-0.01119084,0.036874257,0.01998573,-0.013362778,0.00306555,-0.004209957,0.04982797,0.019040985,0.012476472,-0.021738864,0.0313811,0.004643371,0.01838843,0.011823916,0.00505487,-0.022031054,0.00930135,-0.014726328,-0.00005132331,-0.018261814,0.0015851255,0.046010032,0.026511285,0.03975719,-0.0070320163,-0.0474515,0.0293163,-0.017414466,0.0165379,-0.008103376,-0.040088337,0.009345179,-0.031478498,0.0076845717,0.008746192,-0.0415298,-0.021738864,-0.0048625125,-0.008751062,-0.0012058885,-0.015047736,-0.0213298,0.009983125,0.019089684,0.031127872,-0.010820734,-0.011405112,0.019586405,0.0011541467,0.05010068,0.012583608,0.030270783,0.024310127,-0.0041515194,-0.0027319675,-0.03671842,-0.01838843,0.053178404,0.044412732,0.04215314,0.004558149]},{"id":"implement-prefix-tree","name":"Implement Prefix Tree","description":"A **prefix tree** (also known as a trie) is a tree data structure used to efficiently store and retrieve keys in a set of strings. Some applications of this data structure include auto-complete and spell checker systems.\n\nImplement the PrefixTree class:\n* `PrefixTree()` Initializes the prefix tree object.\n* `void insert(String word)` Inserts the string `word` into the prefix tree.\n* `boolean search(String word)` Returns `true` if the string `word` is in the prefix tree (i.e., was inserted before), and `false` otherwise.\n* `boolean startsWith(String prefix)` Returns `true` if there is a previously inserted string `word` that has the prefix `prefix`, and `false` otherwise.\n\n**Example 1:**\n\n```java\nInput: \n[\"Trie\", \"insert\", \"dog\", \"search\", \"dog\", \"search\", \"do\", \"startsWith\", \"do\", \"insert\", \"do\", \"search\", \"do\"]\n\nOutput:\n[null, null, true, false, true, null, true]\n\nExplanation:\nPrefixTree prefixTree = new PrefixTree();\nprefixTree.insert(\"dog\");\nprefixTree.search(\"dog\");    // return true\nprefixTree.search(\"do\");     // return false\nprefixTree.startsWith(\"do\"); // return true\nprefixTree.insert(\"do\");\nprefixTree.search(\"do\");     // return true\n```\n\n**Constraints:**\n* `1 <= word.length, prefix.length <= 1000`\n* `word` and `prefix` are made up of lowercase English letters.\n","difficulty":"Medium","concepts":["Trie"],"solutions":{"python":"class PrefixTreeNode:\n    def __init__(self):\n        self.children = [None] * 26\n        self.end = False\n\nclass PrefixTree:\n    def __init__(self):\n        self.root = PrefixTreeNode()\n\n    def insert(self, word: str) -> None:\n        curr = self.root\n        for c in word:\n            i = ord(c) - ord(\"a\")\n            if curr.children[i] == None:\n                curr.children[i] = PrefixTreeNode()\n            curr = curr.children[i]\n        curr.end = True\n\n    def search(self, word: str) -> bool:\n        curr = self.root\n        for c in word:\n            i = ord(c) - ord(\"a\")\n            if curr.children[i] == None:\n                return False\n            curr = curr.children[i]\n        return curr.end\n\n    def startsWith(self, prefix: str) -> bool:\n        curr = self.root\n        for c in prefix:\n            i = ord(c) - ord(\"a\")\n            if curr.children[i] == None:\n                return False\n            curr = curr.children[i]\n        return True\n","javascript":"class PrefixTreeNode {\n    constructor() {\n        this.children = {};\n        this.isWord = false;\n    }\n}\n\nclass PrefixTree {\n    constructor() {\n        this.root = new PrefixTreeNode();\n    }\n\n    /**\n     * @param {string} word\n     * @return {void}\n     */\n    insert(word) {\n        let node = this.root;\n\n        for (const char of word) {\n            const child = node.children[char] || new PrefixTreeNode();\n            node.children[char] = child;\n            node = child;\n        }\n\n        node.isWord = true;\n    }\n\n    /**\n     * @param {string} word\n     * @return {boolean}\n     */\n    search(word) {\n        let node = this.root;\n\n        for (const char of word) {\n            const child = node.children[char] || null;\n\n            if (!child) return false;\n\n            node = child;\n        }\n\n        return node.isWord;\n    }\n\n    /**\n     * @param {string} prefix\n     * @return {boolean}\n     */\n    startsWith(prefix) {\n        let node = this.root;\n\n        for (const char of prefix) {\n            const child = node.children[char] || null;\n\n            if (!child) return false;\n\n            node = child;\n        }\n\n        return true;\n    }\n}\n","cpp":"class PrefixTreeNode {\npublic:\n    PrefixTreeNode* children[26];\n    bool isWord;\n    \n    PrefixTreeNode() {\n        for (int i = 0; i < 26; i++) {\n            children[i] = NULL;\n        }\n        isWord = false;\n    }\n};\n\nclass PrefixTree {\npublic:\n    PrefixTree() {\n        root = new PrefixTreeNode();\n    }\n    \n    void insert(string word) {\n        PrefixTreeNode* node = root;\n        int curr = 0;\n        \n        for (int i = 0; i < word.size(); i++) {\n            curr = word[i] - 'a';\n            if (node->children[curr] == NULL) {\n                node->children[curr] = new PrefixTreeNode();\n            }\n            node = node->children[curr];\n        }\n        \n        node->isWord = true;\n    }\n    \n    bool search(string word) {\n        PrefixTreeNode* node = root;\n        int curr = 0;\n        \n        for (int i = 0; i < word.size(); i++) {\n            curr = word[i] - 'a';\n            if (node->children[curr] == NULL) {\n                return false;\n            }\n            node = node->children[curr];\n        }\n        \n        return node->isWord;\n    }\n    \n    bool startsWith(string prefix) {\n        PrefixTreeNode* node = root;\n        int curr = 0;\n        \n        for (int i = 0; i < prefix.size(); i++) {\n            curr = prefix[i] - 'a';\n            if (node->children[curr] == NULL) {\n                return false;\n            }\n            node = node->children[curr];\n        }\n        \n        return true;\n    }\n    \nprivate:\n    PrefixTreeNode* root;\n};\n","java":"class PrefixTree {\n    \n    PrefixTreeNode root;\n\n    public PrefixTree() {\n        root = new PrefixTreeNode('\\0'); \n    }\n\n    class PrefixTreeNode {\n\n        private char value;\n        private boolean isWord;\n        private PrefixTreeNode[] children;\n\n        public PrefixTreeNode(char val) {\n            this.value = val;\n            this.isWord = false;\n            this.children = new PrefixTreeNode[26];\n        }\n    }\n\n    public void insert(String word) {\n        PrefixTreeNode curr = root;\n        for (char x : word.toCharArray()) {\n            if (curr.children[x - 'a'] == null) {\n                curr.children[x - 'a'] = new PrefixTreeNode(x);\n            }\n            curr = curr.children[x - 'a'];\n        }\n        curr.isWord = true;\n    }\n\n    public boolean search(String word) {\n        PrefixTreeNode res = getLast(word);\n        return (res != null && res.isWord);\n    }\n\n    //helper method\n    private PrefixTreeNode getLast(String word) {\n        PrefixTreeNode curr = root;\n        for (char x : word.toCharArray()) {\n            if (curr.children[x - 'a'] == null) {\n                return null;\n            }\n\n            curr = curr.children[x - 'a'];\n        }\n        return curr;\n    }\n\n    public boolean startsWith(String prefix) {\n        PrefixTreeNode res = getLast(prefix);\n        if (res == null) return false;\n        return true;\n    }\n}\n","csharp":"public class PrefixTreeNode {\n    public PrefixTreeNode() {\n        childrenMap = new Dictionary<char, PrefixTreeNode>();\n    }\n    public Dictionary<char, PrefixTreeNode> childrenMap { get; set; }\n    public bool isWord{ get; set; }\n}\n\npublic class PrefixTree {\n\n    private PrefixTreeNode root;\n\n    public PrefixTree() {\n        root = new PrefixTreeNode();\n    }\n    \n    public void Insert(string word) {\n        var cur = root;\n        foreach(var c in word) {\n            if(!cur.childrenMap.ContainsKey(c)) {\n                cur.childrenMap[c] = new PrefixTreeNode();\n            }\n            cur = cur.childrenMap[c];\n        }\n        cur.isWord = true;\n    }\n    \n    public bool Search(string word) {\n        var node = traverse(word);\n        return node != null && node.isWord;\n    }\n    \n    public bool StartsWith(string prefix) {\n        var node = traverse(prefix);\n        return node!= null;\n    }\n    \n    private PrefixTreeNode traverse(string path) {\n        var cur = root;\n        \n        foreach(var c in path) {\n            if(cur.childrenMap.ContainsKey(c)){\n                cur = cur.childrenMap[c];\n            }\n            else {\n                return null;\n            }\n        }\n        return cur;\n    }\n}\n"},"starterCode":{"python":"class PrefixTree:\n\n    def __init__(self):\n        \n\n    def insert(self, word: str) -> None:\n\n\n    def search(self, word: str) -> bool:\n        \n\n    def startsWith(self, prefix: str) -> bool:\n        \n        ","javascript":"class PrefixTree {\n    constructor() {}\n\n    /**\n     * @param {string} word\n     * @return {void}\n     */\n    insert(word) {}\n\n    /**\n     * @param {string} word\n     * @return {boolean}\n     */\n    search(word) {}\n\n    /**\n     * @param {string} prefix\n     * @return {boolean}\n     */\n    startsWith(prefix) {}\n}\n","cpp":"class PrefixTree {\npublic:\n    PrefixTree() {\n        \n    }\n    \n    void insert(string word) {\n        \n    }\n    \n    bool search(string word) {\n        \n    }\n    \n    bool startsWith(string prefix) {\n        \n    }\n};\n","java":"class PrefixTree {\n\n    public PrefixTree() {\n         \n    }\n\n    public void insert(String word) {\n\n    }\n\n    public boolean search(String word) {\n\n    }\n\n    public boolean startsWith(String prefix) {\n\n    }\n}\n","csharp":"public class PrefixTree {\n\n    public PrefixTree() {\n        \n    }\n    \n    public void Insert(string word) {\n        \n    }\n    \n    public bool Search(string word) {\n        \n    }\n    \n    public bool StartsWith(string prefix) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/oobqoCJlHA0","embedding":[0.029727714,-0.006771786,0.023211468,-0.015587885,0.015353641,0.028833328,0.024659522,0.06724937,-0.03196368,0.08577596,-0.02429751,-0.014821268,0.029365702,-0.01896313,-0.018462699,-0.0654606,0.0190909,0.019058958,-0.0010833793,0.061797872,0.08730919,0.021774061,-0.023211468,0.014512491,0.02966383,0.010269477,0.023892906,0.036307845,0.009263292,-0.009380414,0.015012922,0.007410634,-0.022082837,0.07457483,-0.029365702,0.005840133,0.0072988356,0.027576927,0.049489405,-0.0019870827,-0.030196203,-0.004988336,0.0178345,-0.022040246,-0.025873333,-0.033113606,-0.008869336,0.012457531,-0.012894076,0.0041525103,-0.011392784,-0.0003829759,-0.010775232,0.018633058,-0.046209987,-0.05702781,-0.05609083,-0.054429825,0.0018992411,0.01262789,0.030345267,0.020443127,0.0146402605,0.014555081,-0.0036121516,-0.019112194,-0.015002274,0.00861912,0.011307605,-0.020549603,-0.015779538,0.032240514,-0.012223287,-0.021071328,-0.015183281,0.047232144,0.029344406,0.025575204,-0.0010620843,0.0026951388,0.012180697,0.0058188383,0.051491126,-0.0077460287,-0.0012284509,-0.00016545158,-0.024318803,0.0174086,-0.025937218,-0.08884242,-0.0028854623,-0.043399055,-0.0239142,0.024638228,0.020475069,-0.0080867475,-0.008544588,0.0061116433,-0.010924296,-0.033007134,0.024467869,-0.025511319,-0.034455188,-0.012255229,-0.020900968,-0.031282242,0.029216636,0.010184297,-0.021667585,-0.0095241545,-0.07521367,-0.011094656,0.029024983,-0.0041658194,0.04859502,-0.027044553,-0.057112988,-0.026150167,0.014629613,-0.013415802,0.048424657,-0.033007134,-0.016673926,-0.031495195,0.017142415,0.03390152,-0.01892054,0.005600565,0.024531754,-0.018473348,0.015012922,-0.006867613,-0.038224388,0.019953344,-0.035498638,0.0013442421,-0.026214052,0.0028881242,-0.02156111,-0.005483443,-0.01779191,-0.037521657,-0.0032155337,-0.0018539893,-0.024489162,-0.038032737,-0.027768582,-0.0027789876,-0.0474025,0.006707901,0.027363978,-0.027087145,-0.0064044483,0.04552855,-0.013884291,0.014650908,0.03865029,0.037606835,-0.015406878,-0.04506006,-0.005946608,-0.013969471,0.0268529,0.0070379726,0.03260253,-0.0003749903,0.018515937,0.010370628,-0.010934943,-0.0039927983,0.022806864,-0.038203094,0.013745873,-0.020166293,0.035839356,-0.0021827298,-0.050085664,0.030302677,-0.03434871,-0.05332249,-0.0063778297,0.022487441,-0.01250012,0.0095241545,0.04324999,0.022551324,-0.0013974794,0.018026153,-0.026150167,0.022551324,0.024638228,0.021774061,0.07380821,-0.006670635,0.0032740945,-0.026661245,0.051363356,-0.0013029831,0.00790574,0.018047448,-0.01795162,0.029961959,-0.06196823,-0.0032527996,-0.006702577,-0.043526825,0.017940974,0.013969471,-0.016684573,-0.07206202,0.0058507803,-0.01472544,-0.013916233,-0.012201992,-0.042313013,0.0015452129,0.011829331,-0.04561373,0.049617175,-0.0052518607,0.01351163,0.027470453,0.02261521,0.01937838,0.015247166,0.026256641,-0.004652941,0.005648479,-0.015513352,0.00799092,0.02412715,-0.01653551,0.00771941,-0.006297974,-0.030068433,-0.020837083,-0.011605734,-0.029024983,0.02173147,-0.03447648,-0.04454898,0.008576531,0.0167804,-0.014501844,0.004338841,-0.011658971,-0.030323973,0.012638537,0.0006365186,0.0068196994,0.043612003,-0.020741256,-0.0007047289,0.0076395543,0.015907308,-0.007107181,-0.035051446,-0.026980668,0.04233431,0.018281693,-0.015119396,0.019080251,-0.012606596,-0.052683644,-0.01472544,-0.066695705,0.029727714,-0.0033299937,0.012574653,0.013458393,0.03485979,-0.012872782,0.018196512,-0.04859502,0.008411495,0.010780555,0.005406249,0.02663995,-0.024233624,-0.015119396,-0.046934012,0.017483134,0.019293202,-0.01640774,-0.012574653,0.040630717,-0.014001413,-0.052854,0.0046582646,-0.018111333,-0.016471624,-0.0028135919,-0.013458393,-0.016056374,-0.046508115,-0.031282242,0.012936667,0.054515008,0.024574343,-0.025085421,0.013117674,-0.018611765,-0.01824975,0.010525016,-0.0017142415,-0.019868165,0.009252645,-0.01405465,-0.0018207161,0.008895955,0.011690914,0.04518783,-0.009353795,-0.025362255,0.0053184074,-0.03177203,0.038991008,-0.019995933,0.005462148,0.021167155,-0.028875917,0.002158773,0.07789683,0.03813921,0.018153923,0.05557975,-0.046976604,0.024936356,0.03437001,0.0031410013,-0.006952793,-0.03268771,0.06290521,0.037947554,-0.027151028,0.005323731,0.037628133,0.041631576,-0.05000048,0.0043707835,-0.015917957,-0.030494332,0.033113606,0.036265258,-0.052428104,0.04429344,-0.016120257,0.049744945,-0.009444299,0.034412596,-0.0377559,-0.02013435,0.0478284,0.014821268,-0.024467869,-0.004833948,-0.01749378,0.028812032,-0.006255384,0.024829881,-0.015843423,-0.001702263,-0.012159402,-0.027044553,0.00033556143,-0.0049776887,-0.043952722,0.00597855,0.01413983,0.0026206067,-0.016216084,-0.005994521,0.079046756,0.005781572,-0.04137604,0.031111885,-0.030685985,-0.039864097,0.028343545,0.0011306274,-0.0116376765,0.009029048,-0.025958512,-0.00049776887,-0.005637831,0.002017694,0.03243217,0.0063618585,0.0050389115,-0.017909031,0.02144399,0.01107336,0.06243672,0.037138347,0.002731074,0.0015851409,0.0025167938,0.017930327,0.017153062,0.02663995,-0.004932437,-0.00044885708,-0.071380585,-0.0031197064,-0.008038834,0.041631576,0.029046277,0.03805403,0.011733503,-0.05298177,0.03415706,0.034881085,0.016013782,0.031580374,0.008794804,0.030685985,-0.05059674,-0.024020676,-0.032666415,-0.044037905,0.0015571914,-0.015098101,-0.03428483,-0.0055207093,0.022168016,0.022295786,0.015364288,-0.0076395543,0.01627997,0.014395369,0.060136866,0.01954874,-0.017813204,0.0052545224,0.014363427,-0.0014773353,-0.005797543,0.092675515,-0.020315358,-0.017632198,0.0069155265,-0.052385513,0.030685985,-0.015161986,0.0046635885,-0.04727473,0.0059891976,0.04514524,-0.023807725,-0.03243217,0.014129182,0.010801851,-0.037500363,-0.021007443,0.02529837,-0.007250922,-0.018398814,0.050085664,0.04808394,-0.046252575,-0.022040246,0.008667034,-0.046976604,0.0132135,0.028662968,0.00910358,0.0034417922,0.0066440166,0.06171269,-0.031452604,0.025852038,-0.020326005,-0.0043867542,-0.034071878,0.026214052,0.019112194,-0.010178974,0.038075324,-0.034455188,-0.035136625,-0.034582958,-0.06443844,0.06788822,-0.015864719,-0.043058336,0.040162228,0.024787292,0.019048309,-0.027278798,0.001782119,-0.007522432,0.01829234,0.031580374,-0.0071178284,0.023467006,-0.0057283347,-0.012808897,-0.005637831,0.0075703454,-0.034646843,-0.004131215,-0.009662572,0.043548122,0.006218118,-0.019431619,-0.046934012,-0.011935805,0.01034401,0.00012410949,0.063458875,-0.02827966,-0.031495195,-0.006058406,0.029472176,0.030323973,0.036691155,-0.021752765,0.017781261,-0.0054381914,-0.033326555,0.030004548,-0.012351057,-0.005504738,0.00036534105,-0.025830744,-0.0041338773,-0.063586645,-0.027960235,-0.049020916,-0.004274956,0.0043308553,0.025234485,0.029408291,0.0018819389,-0.060009096,0.022955928,-0.005009631,0.0021867226,-0.034071878,-0.0058880467,-0.012351057,0.027747286,-0.012702422,-0.010248182,-0.0018167233,0.019516798,0.0000572717,-0.046678476,-0.028918507,0.029131457,0.011722856,-0.028961098,-0.013948175,-0.0448897,-0.0045863944,-0.011488612,-0.008283726,-0.012180697,0.0040034456,-0.008762862,-0.028088005,-0.015832776,0.021997657,0.01013106,0.021529168,0.013639399,-0.020709313,0.015800834,-0.004453301,-0.013469039,0.04821171,-0.06648275,-0.032900658,-0.014618966,0.001800752,-0.038117915,-0.00068409945,-0.03666986,-0.010796526,-0.05557975,-0.0075703454,-0.025809448,0.017728025,0.021869887,-0.03079246,0.011094656,-0.012255229,0.042121362,0.042227834,0.015076807,0.023679957,0.0036174753,0.05626119,-0.031495195,-0.019452913,-0.030771166,-0.0015398893,-0.055281624,-0.005126753,0.040332586,-0.011424727,0.023552187,0.025277074,0.0428028,-0.0011226418,-0.014980979,0.039629854,0.007266893,0.010423865,0.0061329384,0.004652941,0.01766414,-0.019176079,0.020368595,0.020666724,0.0044053877,-0.024531754,-0.020155646,-0.0029413614,-0.013479687,0.042824093,-0.00799092,-0.03243217,0.019878812,-0.018494641,-0.012351057,0.0015292418,0.009423004,0.048807967,0.015598532,-0.0041045966,0.010157679,0.041546397,0.019112194,-0.018654354,-0.036435615,0.033454325,0.0026206067,-0.015193929,0.015758244,-0.0050788396,0.022551324,-0.0011139908,-0.011861273,-0.00891725,0.0110520655,-0.024148444,0.044463802,0.029003687,0.00065182435,0.0008098726,0.02244485,0.06686606,-0.0098808445,-0.013245443,0.0074479,-0.032155335,-0.020357948,-0.011307605,0.004208409,-0.009976672,0.006952793,0.027257504,-0.0072775404,-0.02806671,0.0106953755,0.012170049,0.02987678,0.03528569,0.0064044483,-0.04510265,0.036989283,0.029174047,-0.016801696,-0.020453775,-0.029046277,0.0111159505,-0.02274298,-0.00455179,0.0026086282,0.023019813,0.033709865,-0.0049803504,0.054387238,0.029216636,0.0042696325,-0.017302126,-0.0060690534,-0.021582406,-0.018228455,0.007916388,-0.01627997,-0.006713225,0.00029696437,-0.01061552,0.007682144,-0.007895093,0.028897213,0.0027603547,-0.058348093,0.013937528,-0.0145763755,-0.009226026,0.04133345,-0.0035961804,0.03394411,0.011020123,0.058944352,-0.022785569,0.0019524784,-0.010567606,0.010333362,-0.01262789,0.037436478,-0.0064257435,0.01351163,0.012276524,-0.039629854,-0.017110473,-0.048978325,-0.023552187,0.031708144,0.057453707,0.021358809,0.0028934479,-0.0029413614,0.058135144,-0.0073307776,0.0024981608,0.03611619,-0.014618966,0.0013708607,-0.02538355,0.04821171,-0.04442121,0.020592192,-0.020634782,0.030132318,-0.012574653,-0.0031862531,-0.0141185345,0.011020123,0.011382137,0.009577393,-0.036563385,0.0046050274,-0.04224913,0.033156198,-0.05063933,0.0074319285,-0.00089039403,0.004243014,0.005084163,-0.039289135,0.0038756763,0.01942097,-0.028300954,-0.0026445633,-0.0037292736,0.003327332,0.009449623,-0.021763412,-0.03402929,-0.01942097,-0.027278798,0.008635092,-0.04043906,-0.015066159,-0.030643396,0.02970642,0.046806242,-0.03645691,0.047019195,0.0051507098,-0.014427312,0.007868474,0.01409724,-0.0071817134,0.004591718,-0.026214052,-0.012223287,0.036648564,-0.010290773,-0.010652786,0.007714086,-0.015928604,-0.008065453,0.011318252,-0.030451741,-0.03151649,0.004674236,-0.014288894,0.012244581,-0.01338386,0.028343545,-0.009758399,-0.0019644569,-0.021784708,-0.010498398,-0.029344406,0.028662968,0.011744151,-0.01984687,0.015534648,-0.01824975,0.03741518,0.006830347,-0.012297818,-0.008693653,-0.0029200665,-0.017280832,0.04314352,0.0047194874,0.017099824,-0.018633058,0.016673926,-0.010503721,-0.0057283347,0.039885394,0.04765804,-0.024765996,0.0027443834,0.012468178,-0.017728025,-0.014320836,-0.015705006,0.040630717,-0.024915062,0.0059891976,0.0011951777,0.053961337,0.0167804,-0.016748458,0.013170911,0.011595086,0.03498756,-0.035818063,-0.0025447435,0.012414941,-0.012883429,-0.00094762415,-0.0132028535,0.016173495,-0.049489405,0.0015598532,-0.004863228,-0.020336652,-0.0015199252,0.01042919,-0.022423556,0.019463561,0.06984735,0.017632198,-0.020613486,-0.014214362,0.005203947,0.021039385,0.019165432,-0.007836532,0.014288894,0.034412596,-0.009609334,-0.03813921,0.009619982,-0.00276834,0.0070858863,-0.0037133025,0.007948331,-0.023658661,0.014778677,0.0113289,0.028662968,-0.009071638,-0.026533475,-0.029280521,0.01401206,-0.024191035,0.013745873,-0.011477964,0.02374384,0.027534338,0.025085421,-0.006399125,0.012926019,-0.024595637,0.009891492,0.007996244,0.047317322,0.03326267,-0.021518521,0.004455963,0.024765996,0.008267755,0.015151339,-0.0146402605,0.019878812,0.011403432,0.00019697806,0.039502084,-0.009481565,-0.02253003,-0.023509597,0.024361394,0.031708144,0.040226113,-0.012233934,-0.006148909,0.04454898,-0.0047194874,-0.0074372524,-0.008693653,-0.056729678,-0.04565632,0.031346127,0.024446573,-0.0060317875,0.02101809,-0.022231901,0.0537058,0.03117577,-0.033496916,-0.04007705,-0.04808394,0.0024395997,-0.02073061,-0.025766859,-0.05532421,0.02949347,0.016833637,-0.030111022,-0.0031543106,0.02270039,-0.0023078374,0.000031796815,0.0019644569,-0.038330864,-0.015800834,0.014352779,0.01078588,-0.027406568,-0.0011153216,-0.018356225,-0.016610041,-0.054557595,-0.025064126,-0.0008883976,-0.029898074,-0.0010221563,0.03788367,0.010152355,-0.0008012215,-0.044847112,-0.011094656,0.014033355,-0.004809991,-0.02374384,-0.03733,-0.003069131,-0.0031383394,0.041801937,0.0058720754,0.019516798,0.014150477,0.0073946626,0.043420352,0.022764275,0.0048073293,0.027449157,0.036478207,0.0019498165,0.009619982,0.0226578,0.0034125117,0.013362565,0.00091168896,-0.01963392,0.027044553,0.00906099,0.02555391,0.001802083,0.027001964,0.036393024,-0.02118845,-0.002458233,-0.0017661478,0.009359119,-0.0033353176,0.01539623,-0.039246544,0.026001103,0.01137149,0.024361394,-0.0021614349,0.027576927,0.0030212174,0.021955067,-0.021380104,-0.010556959,0.03801144,-0.0019524784,-0.0042217188,-0.036861513,-0.011435375,0.0050735157,-0.011296958,-0.0015691697,0.036201373,0.030089729,-0.041525103,-0.024829881,-0.011818683,-0.034306124,0.02009176,0.020645428,0.013277385,-0.009476242,0.030345267,-0.05864622,0.015545295,-0.0020336653,-0.0028961098,-0.015151339,0.024191035,0.020485718,0.0190909,0.039757624,-0.01422501,-0.018824713,-0.00780459,0.023765136,-0.0033299937,-0.0035988423,-0.00027067846,0.024105854,0.028535198,-0.011233073,0.0016703206,-0.019932048,-0.01736601,0.008986458,0.009497536,0.0024103192,-0.0093218535,-0.021955067,-0.028130595,-0.012606596,-0.03424224,0.026235348,-0.021869887,0.025788153,-0.0049670413,0.01867565,-0.020602839,-0.0071550948,0.036648564,-0.03796885,0.04220654,0.023978084,0.02987678,0.028428724,-0.022849454,-0.018590469,-0.002792297,-0.0029919369,0.029812895,-0.0023477655,0.001839349,-0.058220323,0.006771786,-0.013500982,0.02702326,-0.0067824335,-0.075256266,0.015470763,-0.011744151,0.008661711,-0.033241376,-0.013000552,-0.007911065,0.0020496366,0.057538886,-0.009854226,0.014086593,0.021891182,-0.015417526,-0.042781502,0.042185247,-0.01707853,-0.024467869,0.007623583,0.029301817,0.028897213,0.01695076,0.022061542,-0.019165432,0.008997106,-0.023019813,0.024361394,0.022466145,0.008635092,0.0025207866,0.024254918,-0.005802867,-0.026427,-0.08075035,-0.02399938,-0.0012311129,0.006851642,0.028556494,0.0019138813,0.003939561,0.004416035,0.0081506325,0.013841701,-0.016311912,-0.025702974,-0.037692018,-0.019122843,-0.028662968,0.02819448,0.016077667,0.008454085,0.043356467,0.025873333,-0.0046209986,0.0065641603,-0.0127450125,-0.024510458,0.004732797,0.009971349,0.0047886963,-0.060307227,0.0072881877,-0.030387858,-0.01837752,0.02538355,0.01191451,-0.011062713,0.0034976914,0.0008790811,0.008331639,-0.0004531826,0.028130595,0.023403121,0.026405707,0.026427,0.014363427,0.043824956,-0.02214672,-0.032645117,0.02412715,-0.00022941954,-0.009939406,-0.020890322,-0.021848593,0.026150167,0.009577393,-0.013351917,0.025766859,0.007618259,-0.040502947,0.027683401,0.018153923,-0.010855088,0.009178112,-0.0093325,0.00007286857,0.021507874,0.043548122,-0.0020097084,0.023530891,-0.0027550308,0.004112582,-0.03875676,-0.0048605665,-0.011733503,-0.0015398893,0.041929707,0.0032394903,-0.0051640193,-0.0047221496,-0.007224303,-0.020485718,-0.032794185,-0.018090038,-0.01582213,0.035519935,0.008113367,0.031899795,0.027875056,0.02974901,-0.023062402,-0.00660675,0.004517186,-0.0003536954,-0.016460976,-0.004317546,0.016801696,0.006399125,-0.049915303,-0.02572427,0.019953344,-0.016205437,-0.024765996,0.012361703,0.0033406413,-0.023360532,-0.03268771,-0.01867565,0.020879673,-0.026661245,0.02253003,-0.033156198,0.0004149183,0.017291479,-0.038905825,0.0018273707,-0.02282816,-0.03196368,0.010274801,0.002712441,-0.0007499806,0.027704697,-0.022593915,0.0050628684,-0.0057762484,0.027044553,0.042355604,-0.015971193,-0.03960856,0.016439682,-0.011935805,-0.007511785,0.0027656783,-0.005584594,-0.009806313,-0.02244485,-0.046039626,0.046550706,0.025042832,0.016492918,-0.0109881805,-0.0007446569,-0.009923435,0.017089177,-0.018686296,-0.007820561,0.020837083,0.0038144533,-0.046508115,-0.00245424,-0.025575204,-0.0064843046,-0.0034710728,0.019239964,-0.0005040908,-0.009002429,-0.015300403,-0.006803728,-0.0018832699,-0.009763723,0.024936356,0.032240514,-0.04005575,-0.016269322,0.009593364,-0.0071550948,0.016748458,-0.054131698,-0.010871059,0.017909031,0.027683401,0.008672358,-0.010546312,-0.0054568243,-0.016216084,0.017898384,-0.010354657,-0.024915062,-0.007756676,0.016439682,0.017919678,-0.004559776,0.013128321,0.024318803,-0.014799972,-0.009513508,0.007442576,0.02051766,0.006415096,-0.006713225,0.010061852,-0.011137245,0.03935302,0.023530891,-0.034519073,0.0081506325,-0.028002826,0.00048878504,-0.016620688,0.008470057,0.032538645,-0.0126811275,0.023126287,0.0043441644,-0.008762862,-0.013745873,-0.016801696,0.007767324,0.015886014,-0.017866442,0.021390751,0.037521657,-0.001565177,0.009183436,0.023403121,0.0012437567,0.029685125,0.011946453,-0.020741256,-0.016130906,-0.017174356,-0.026086282,-0.016429035,-0.00399546,0.029429585,-0.017632198,0.00430956,-0.016982703,0.020794494,-0.04224913,-0.03784108,-0.010945591,0.0115099065,-0.03138872,-0.002970642,0.022317082,-0.007815237,-0.0040433737,0.0070912098,-0.018846009,-0.044634163,-0.00034338064,-0.011488612,-0.014661555,-0.012329761,0.010306743,0.041184384,0.0063725063,0.008246459,0.019601978,0.0015026231,0.0029413614,-0.0042669703,0.02668254,-0.0076342304,-0.012862135,0.023658661,-0.010934943,-0.019687157,-0.051491126,0.012830192,0.026916785,-0.018696943,-0.023147583,-0.024148444,0.0042270427,0.0005007635,-0.011382137,0.010647462,0.0041631577,-0.020475069,-0.0024648875,-0.056942627,-0.015854072,-0.020581545,0.012244581,0.009092933,-0.031984977,-0.0068729366,0.005840133,-0.007756676,0.027555631,0.0297916,0.023488302,0.029983254,0.018846009,0.0036920076,-0.011265015,0.0034737345,0.015790187,-0.019995933,-0.015321698,0.023360532,0.016460976,-0.026810309,0.013980118,0.03709576,-0.042589847,-0.012979256,-0.022189312,0.048680197,-0.034966268,0.013117674,-0.001999061,0.016727163,-0.00051340734,0.001485321,-0.0023903553,0.009800989,0.023722546,-0.008768185,0.003942223,-0.01581148,0.007245598,-0.038799353,0.018324282,0.0070379726,0.017674787,-0.027662106,-0.01334127,-0.020336652,-0.01481062,-0.022338375,0.014831915,0.0012344401,-0.0115737915,0.026661245,-0.04116309,-0.0057176873,-0.0063618585,0.026533475,0.012819544,0.019239964,0.010551635,0.008549912,-0.020656077,0.032794185,0.024105854,0.052470695,0.015140691,-0.0074479,-0.032709002,-0.029152751,0.021774061,-0.035051446,-0.006202147,-0.016397092,0.023019813,0.035051446,-0.014512491,0.0022452837,0.003857043,0.0041471864,0.009609334,0.0013948176,0.0070965337,-0.024212329,0.026512181,0.018941835,-0.01967651,0.0033539506,0.030771166,-0.02282816,-0.00038530503,-0.01724889,0.019580683,0.035647705,0.02689549,0.0011339547,0.04787099,-0.054515008,-0.038927123,-0.032879364,0.042781502,0.011179836,-0.0011925157,0.025106715,0.040332586,0.041439924,-0.0015478748,-0.0028348868,-0.012223287,0.01753637,-0.043420352,0.05643155,0.013628752,-0.020144999,0.020996796,0.02806671,0.022359671,0.06848448,0.026171463,-0.014778677,-0.01338386,0.011339547,0.0012710408,0.024340099,0.02772599,-0.005227904,-0.012478826,0.011605734,0.006867613,0.012127459,-0.0069261743,-0.03884194,-0.026831605,0.0029413614,0.028875917,-0.0043281936,0.01837752,-0.030664692,-0.022977224,-0.032879364,-0.0036946693,-0.0033645981,-0.0045571136,-0.0010973541,0.028918507,0.030366562,-0.0053663207,-0.025532614,0.041056614,-0.044123083,0.02663995,0.00073600584,0.04727473,-0.012191344,-0.022210605,0.006856966,-0.013969471,-0.031133179,0.047104374,0.013405154,0.013064436,-0.040950138]},{"id":"find-median-in-a-data-stream","name":"Find Median in a Data Stream","description":"The **[median](https://en.wikipedia.org/wiki/Median)** is the middle value in a sorted list of integers. For lists of *even* length, there is no middle value, so the median is the [mean](https://en.wikipedia.org/wiki/Mean) of the two middle values.\n\nFor example:\n* For `arr = [1,2,3]`, the median is `2`.\n* For `arr = [1,2]`, the median is `(1 + 2) / 2 = 1.5`\n\nImplement the MedianFinder class:\n\n* `MedianFinder()` initializes the `MedianFinder` object.\n* `void addNum(int num)` adds the integer `num` from the data stream to the data structure.\n* `double findMedian()` returns the median of all elements so far.\n\n**Example 1:**\n\n```java\nInput:\n[\"MedianFinder\", \"addNum\", \"1\", \"findMedian\", \"addNum\", \"3\" \"findMedian\", \"addNum\", \"2\", \"findMedian\"]\n\nOutput:\n[null, null, 1.0, null, 2.0, null, 2.0]\n\nExplanation:\nMedianFinder medianFinder = new MedianFinder();\nmedianFinder.addNum(1);    // arr = [1]\nmedianFinder.findMedian(); // return 1.0\nmedianFinder.addNum(3);    // arr = [1, 3]\nmedianFinder.findMedian(); // return 2.0\nmedianFinder.addNum(2);    // arr[1, 2, 3]\nmedianFinder.findMedian(); // return 2.0\n```\n\n**Constraints:**\n* `-100,000 <= num <= 100,000`\n* `findMedian` will only be called after adding at least one integer to the data structure.\n","difficulty":"Hard","concepts":["Heap Properties","Push and Pop","Two Heaps"],"solutions":{"python":"class MedianFinder:\n    def __init__(self):\n        # two heaps, large, small, minheap, maxheap\n        # heaps should be equal size\n        self.small, self.large = [], []  # maxHeap, minHeap (python default)\n\n    def addNum(self, num: int) -> None:\n        if self.large and num > self.large[0]:\n            heapq.heappush(self.large, num)\n        else:\n            heapq.heappush(self.small, -1 * num)\n\n        if len(self.small) > len(self.large) + 1:\n            val = -1 * heapq.heappop(self.small)\n            heapq.heappush(self.large, val)\n        if len(self.large) > len(self.small) + 1:\n            val = heapq.heappop(self.large)\n            heapq.heappush(self.small, -1 * val)\n\n    def findMedian(self) -> float:\n        if len(self.small) > len(self.large):\n            return -1 * self.small[0]\n        elif len(self.large) > len(self.small):\n            return self.large[0]\n        return (-1 * self.small[0] + self.large[0]) / 2.0\n","javascript":"/**\n * const { PriorityQueue, MaxPriorityQueue, MinPriorityQueue } = require('@datastructures-js/priority-queue');\n */\n\nclass MedianFinder {\n    constructor() {\n        this.small = new PriorityQueue((a, b) => b - a); // Max heap for smaller half\n        this.large = new PriorityQueue((a, b) => a - b); // Min heap for larger half\n    }\n\n    /**\n     * Adds a number into the data structure.\n     * @param {number} num\n     */\n    addNum(num) {\n        if (this.large.isEmpty() || num > this.large.front()) {\n            this.large.enqueue(num);\n        } else {\n            this.small.enqueue(num);\n        }\n\n        // Balance the heaps to make sure their sizes differ by no more than 1\n        if (this.small.size() > this.large.size() + 1) {\n            this.large.enqueue(this.small.dequeue());\n        } else if (this.large.size() > this.small.size() + 1) {\n            this.small.enqueue(this.large.dequeue());\n        }\n    }\n\n    /**\n     * Finds the median of all numbers added so far.\n     * @return {number}\n     */\n    findMedian() {\n        if (this.small.size() > this.large.size()) {\n            return this.small.front();\n        } else if (this.large.size() > this.small.size()) {\n            return this.large.front();\n        } else {\n            // If both heaps are of the same size, the median is the average of the two heap tops\n            return (this.small.front() + this.large.front()) / 2.0;\n        }\n    }\n}\n","cpp":"class MedianFinder {\npublic:\n    MedianFinder() {\n        \n    }\n    \n    void addNum(int num) {\n        if (lower.empty()) {\n            lower.push(num);\n            return;\n        }\n        \n        if (lower.size() > higher.size()) {\n            if (lower.top() > num) {\n                higher.push(lower.top());\n                lower.pop();\n                lower.push(num);\n            } else {\n                higher.push(num);\n            }\n        } else {\n            if (num > higher.top()) {\n                lower.push(higher.top());\n                higher.pop();\n                higher.push(num);\n            } else {\n                lower.push(num);\n            }\n        }\n    }\n    \n    double findMedian() {\n        double result = 0.0;\n        \n        if (lower.size() == higher.size()) {\n            result = lower.top() + (higher.top() - lower.top()) / 2.0;\n        } else {\n            if (lower.size() > higher.size()) {\n                result = lower.top();\n            } else {\n                result = higher.top();\n            }\n        }\n        \n        return result;\n    }\nprivate:\n    priority_queue<int> lower;\n    priority_queue<int, vector<int>, greater<int>> higher;\n};\n","java":"class MedianFinder {\n\n    private Queue<Integer> smallHeap; //small elements - maxHeap\n    private Queue<Integer> largeHeap; //large elements - minHeap\n\n    public MedianFinder() {\n        smallHeap = new PriorityQueue<>((a, b) -> b - a);\n        largeHeap = new PriorityQueue<>((a, b) -> a - b);\n    }\n\n    public void addNum(int num) {\n        smallHeap.add(num);\n        if (\n            smallHeap.size() - largeHeap.size() > 1 ||\n            !largeHeap.isEmpty() &&\n            smallHeap.peek() > largeHeap.peek()\n        ) {\n            largeHeap.add(smallHeap.poll());\n        }\n        if (largeHeap.size() - smallHeap.size() > 1) {\n            smallHeap.add(largeHeap.poll());\n        }\n    }\n\n    public double findMedian() {\n        if (smallHeap.size() == largeHeap.size()) {\n            return (double) (largeHeap.peek() + smallHeap.peek()) / 2;\n        } else if (smallHeap.size() > largeHeap.size()) {\n            return (double) smallHeap.peek();\n        } else {\n            return (double) largeHeap.peek();\n        }\n    }\n}\n","csharp":"public class MedianFinder {\n\n    private PriorityQueue<int, int> small; // Max heap for the smaller half\n    private PriorityQueue<int, int> large; // Min heap for the larger half\n\n    public MedianFinder() {\n        small = new PriorityQueue<int, int>(Comparer<int>.Create((a, b) => b.CompareTo(a)));\n        large = new PriorityQueue<int, int>();\n    }\n    \n    public void AddNum(int num) {\n        if (large.Count != 0 && num > large.Peek()) {\n            large.Enqueue(num, num);\n        } else {\n            small.Enqueue(num, num);\n        }\n\n        // Ensure the heaps are balanced\n        if (small.Count > large.Count + 1) {\n            int val = small.Dequeue();\n            large.Enqueue(val, val);\n        } else if (large.Count > small.Count + 1) {\n            int val = large.Dequeue();\n            small.Enqueue(val, val);\n        }\n    }\n    \n    public double FindMedian() {\n        if (small.Count > large.Count) {\n            return small.Peek();\n        } else if (large.Count > small.Count) {\n            return large.Peek();\n        }\n        \n        int smallTop = small.Peek();\n        return (smallTop + large.Peek()) / 2.0;\n    }\n}\n"},"starterCode":{"python":"class MedianFinder:\n\n    def __init__(self):\n        \n\n    def addNum(self, num: int) -> None:\n        \n\n    def findMedian(self) -> float:\n        \n        ","javascript":"class MedianFinder {\n    constructor() {}\n\n    /**\n     *\n     * @param {number} num\n     * @return {void}\n     */\n    addNum(num) {}\n\n    /**\n     * @return {number}\n     */\n    findMedian() {}\n}\n","cpp":"class MedianFinder {\npublic:\n    MedianFinder() {\n        \n    }\n    \n    void addNum(int num) {\n        \n    }\n    \n    double findMedian() {\n        \n    }\n};\n","java":"class MedianFinder {\n\n    public MedianFinder() {\n        \n    }\n    \n    public void addNum(int num) {\n        \n    }\n    \n    public double findMedian() {\n        \n    }\n}\n","csharp":"public class MedianFinder {\n\n    public MedianFinder() {\n        \n    }\n    \n    public void AddNum(int num) {\n        \n    }\n    \n    public double FindMedian() {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/itmhHWaHupI","embedding":[0.0005752799,-0.047407027,0.035573572,-0.028009916,0.0045473417,-0.0039373697,-0.026033606,0.03754988,-0.017408602,0.04340561,0.023898706,-0.06870725,-0.003080359,-0.03840384,0.047651015,-0.001657599,0.03628114,-0.015615284,-0.059630867,0.071342334,0.00016812354,0.0524088,-0.013419385,-0.02226398,0.061924364,-0.010284129,0.025472432,-0.0073440634,0.048407383,0.005303707,0.020019284,0.0028104463,0.0058984295,0.043503206,-0.021580812,-0.015627485,-0.011815159,0.016286254,0.04757782,-0.0133095905,-0.026789973,0.007966235,0.009722955,-0.050505687,0.053823933,-0.057142183,0.05387273,-0.0100950375,0.058557317,-0.0015905021,0.017359804,0.009527763,0.004278954,0.007350163,-0.0014601205,0.023752311,0.013065602,-0.005148164,0.024106095,-0.013175396,0.020007083,0.011680964,0.00021692131,0.03186494,0.019726496,0.011583369,0.0018695643,0.0048553776,0.030352209,-0.004166109,-0.08251702,-0.01660344,0.029547047,-0.07246468,-0.03384125,0.011626068,-0.012760615,0.03298729,-0.05650781,-0.013138798,0.01068061,-0.01004624,0.011308881,0.028766282,-0.028839478,-0.016115462,-0.008368816,0.017884381,-0.02315454,-0.07080556,-0.034182835,-0.037232693,-0.035305183,0.064559445,0.016054465,-0.045747902,0.06748731,-0.03515879,-0.0069902795,-0.009228877,0.03013262,0.024874661,0.019531306,0.008557908,0.019031128,-0.040404547,-0.035231985,0.0055110976,-0.01199205,0.015786076,-0.03662272,0.0029583646,-0.0030010624,-0.027131557,-0.010637913,0.0045015938,0.016932825,0.03320688,0.007478257,0.025448034,-0.0090031875,-0.024289086,0.019262917,-0.011973752,-0.030986581,-0.029620243,0.028839478,-0.053726338,-0.035573572,0.008429814,-0.02120263,0.00029964876,-0.043161623,-0.0065754987,-0.026082406,-0.030083822,-0.05084727,-0.014724725,0.019799693,-0.030376608,0.0144319385,0.013712171,-0.02508205,0.03337767,-0.008417615,0.04035575,-0.047992602,0.048675768,0.003449392,0.036573924,-0.008137027,-0.013529181,0.025594428,0.031742945,-0.021556413,0.017542796,0.019140923,-0.05543426,0.03032781,-0.02291055,-0.0008470987,-0.026741175,-0.035036795,-0.022166384,0.048822165,0.04513793,-0.027351147,-0.012894809,-0.030547401,-0.023654716,0.03994097,0.0013396511,0.05406792,-0.052360002,0.03796466,-0.05914289,-0.011052693,-0.06094841,-0.037623078,-0.0107172085,-0.0262044,-0.011949353,0.036842313,0.0196167,-0.017774586,0.034329228,0.03367046,-0.019531306,0.055775844,-0.011058793,0.039477393,0.058801305,0.005523297,0.043820392,-0.0050353194,0.025545629,0.037232693,-0.01831136,0.02444768,0.014541734,-0.030279012,0.014163551,0.0327433,-0.0007026116,-0.0019961335,-0.04184408,-0.022129785,0.020995239,0.0068865847,-0.010637913,0.01222994,-0.033524062,0.040136162,-0.0060173743,0.030742591,0.04277124,-0.03162095,0.029571446,-0.06524261,0.07495336,0.014334343,0.04604069,-0.00094011944,0.066852935,-0.02116603,-0.029400652,0.011650466,-0.029742237,0.041551296,-0.0122177405,0.060411632,-0.04045335,-0.038745426,-0.004065464,-0.0024337885,0.0070756758,-0.07051277,-0.0057489867,0.015310299,-0.0022599464,-0.007771044,-0.044308368,-0.04647987,-0.017945377,-0.028278304,-0.015090709,-0.031498957,0.03203573,0.0130900005,-0.008448113,0.008381016,-0.020482862,0.022251781,-0.03225532,-0.042258862,0.026058005,-0.011967652,0.015590886,0.021934595,-0.03164535,-0.039013814,-0.0133705875,-0.023996301,-0.017445201,0.006532801,-0.056263823,-0.015627485,0.029717838,-0.053531148,0.045381922,0.027131557,-0.014078155,-0.007222069,0.0067767897,0.023471724,-0.0016591239,-0.0093447715,0.026911967,0.012955806,-0.046772655,-0.053970326,0.025692023,0.026911967,-0.008643304,0.026936365,0.011955452,0.006459604,0.007252568,0.017140215,-0.026448388,-0.028766282,-0.03835504,0.006221715,-0.055092677,-0.009222778,0.0106867105,0.0036567824,-0.0524088,-0.020434063,-0.0043795994,0.03794026,-0.030474205,-0.026545983,0.003211503,-0.03364606,-0.04103892,-0.021239227,0.02552123,-0.04455236,0.0007270104,-0.027058361,0.02315454,-0.0093142735,0.008234623,0.0000131882625,-0.031108575,-0.0068011885,-0.027887922,-0.028766282,-0.025228444,0.013285192,-0.03471961,0.041746486,0.010442722,0.030815788,0.002752499,0.010314628,-0.04413758,-0.02552123,-0.056654204,-0.008039432,-0.03386565,-0.005538546,0.02639959,0.016176458,-0.018909134,0.03520759,-0.00088445947,0.0084420135,0.049139347,0.06441305,-0.032645702,-0.01679863,0.028961472,-0.007270867,-0.040014166,0.025472432,0.042014875,0.016518043,0.0056727403,-0.04035575,-0.0109367985,0.005602593,0.016932825,-0.039209004,-0.0117175635,0.0010178909,-0.041404903,-0.0023285684,0.028107513,-0.044869546,-0.019116525,0.0016713234,-0.02815631,0.023300933,-0.017481798,-0.031938136,-0.015029712,0.005148164,0.06577939,-0.03320688,0.051188856,0.0040471647,-0.025374837,0.019116525,-0.03425603,0.01156507,0.027863523,0.0002237835,0.022642162,0.0068560857,-0.0011490348,0.0023880405,0.01593247,0.04955413,0.026033606,0.03730589,-0.00046129138,-0.053970326,-0.0058008344,0.0052061114,-0.009241076,0.07143993,0.025496831,0.007886939,-0.031572152,-0.004715084,0.04191728,0.012846012,0.036720317,0.023593718,-0.016713234,-0.009027586,-0.016896226,0.013834166,0.00958876,-0.0030635847,0.04125851,0.041575696,-0.035036795,0.020373067,0.011290583,0.02703396,-0.008771398,-0.019824091,-0.0033822951,-0.025594428,0.05743497,0.005541596,-0.01814057,-0.0045534414,-0.044015583,0.018299162,0.007905237,0.059484474,-0.033353273,0.020409664,-0.019397112,0.03340207,-0.056800596,-0.024496477,-0.0031901537,0.006605997,0.010546417,-0.0139317615,0.0008775973,0.026594782,0.041087717,0.0015561912,-0.004233206,-0.012168942,-0.005193912,0.04103892,-0.0155542875,0.0075575537,0.006874385,0.0047028847,0.021849198,0.03640313,0.050359294,0.020482862,-0.015102908,0.036159143,0.06738971,0.011662666,0.008338318,0.019921687,0.05133525,0.014688127,-0.02334973,0.022690961,0.062363543,-0.0480414,0.04167329,-0.012894809,0.004992621,-0.010491519,-0.021861399,0.007551454,0.016908426,0.058166936,-0.022288378,0.023447325,-0.0027159005,-0.016469246,-0.041600093,-0.040624138,0.00850911,0.042454056,-0.00026114428,-0.008686002,-0.02421589,0.03318248,0.0037665775,-0.0893487,0.0829074,0.04909055,0.029839832,0.0283515,-0.019592302,-0.032279722,-0.022727558,0.028961472,-0.011906655,-0.026375191,0.013638975,0.021885797,-0.0036750815,-0.027863523,0.010528117,0.015224902,-0.0027463993,0.0025451083,-0.0144319385,0.030986581,0.011211286,-0.025862815,-0.021483216,-0.01046102,0.020678053,0.0040014167,0.047895007,-0.016103262,0.014017158,-0.010875802,0.043283615,0.035866357,-0.017042618,-0.007960135,0.026570383,0.014980913,0.020507261,-0.03142576,-0.012351934,-0.0035042895,-0.019580103,-0.032596905,-0.051140055,-0.015261501,-0.027863523,0.010515918,0.0123397345,-0.0027098008,0.03686671,-0.040404547,0.02009248,0.00392212,-0.037671875,-0.02486246,-0.06968321,0.008905592,0.017689189,-0.03669592,-0.0107172085,0.0007403536,0.022337176,-0.019262917,0.026619181,0.011241785,-0.019677699,0.007825942,-0.015468891,0.005565995,0.019311715,0.0014075105,0.017311007,-0.029278658,-0.008649404,0.025057651,-0.024911258,-0.014797922,0.0009370696,0.03579316,0.02009248,-0.013431584,-0.017859982,-0.0035927354,0.010869702,-0.005279308,-0.04689465,0.04257605,-0.023959702,-0.027643934,-0.039843373,-0.029571446,0.01351698,-0.006398607,-0.03032781,0.021678407,0.009503365,-0.022849552,-0.0018665144,-0.016664436,-0.017750187,-0.00784424,-0.0077832434,-0.02966904,0.050359294,-0.0027616485,0.013346189,0.01025973,0.007789343,0.0719767,0.020434063,-0.025667625,-0.0044649956,-0.002142527,-0.03757428,0.0067096925,0.011613868,-0.016042264,0.0051207156,-0.019531306,-0.011144189,-0.009070285,0.017981976,0.073099054,0.042820036,-0.010271929,0.014102554,-0.024154894,-0.008271221,-0.0021776003,-0.034890402,0.0033121482,0.00043384262,0.024606273,0.0029629392,0.0029812383,-0.017189013,-0.008545709,-0.02708276,-0.015395694,0.028229507,-0.011979851,-0.041795284,0.00827732,-0.00851521,0.025862815,-0.0036537326,-0.040746134,0.0001007407,-0.0019915588,-0.014285546,-0.010662312,-0.019604502,-0.011583369,-0.023239935,-0.009485065,0.0054622996,0.039843373,0.020141277,-0.008234623,0.001113199,-0.026301995,-0.01418795,0.0004102062,-0.01287041,0.0017978926,-0.020153476,-0.008905592,-0.004102062,0.013565779,-0.020446263,0.02489906,0.0022568966,-0.013333989,-0.031401362,-0.027790327,0.031572152,0.0006153093,0.026326394,-0.007026878,-0.0050810673,0.02291055,-0.017920978,0.032645702,0.01637165,0.06948802,0.013504781,0.024508677,0.0036384834,0.013041203,-0.0062308647,-0.058557317,-0.034987997,0.0006454267,0.018713942,-0.06924403,-0.037208296,0.04252725,0.0074904566,-0.032572508,0.0010384774,0.0047974302,-0.01417575,0.013712171,0.017737987,-0.003967868,0.004910275,0.0155542875,-0.029400652,0.033890046,-0.06577939,0.016274054,0.008155326,-0.0028668686,0.017689189,-0.005434851,-0.047699813,0.0058435323,0.016762031,0.011754162,0.03162095,-0.012565425,-0.0019061627,-0.047260635,0.027253551,0.017798984,-0.020983038,0.0152737005,-0.02510645,0.025179647,-0.018591948,-0.025277242,0.010278029,0.006221715,-0.008990988,0.0022446972,0.007026878,0.0024932607,0.027692731,0.016286254,0.019287316,-0.037135098,0.017213412,-0.0026930266,-0.0063559087,-0.00939357,-0.025252843,0.005913679,0.00029354906,0.011443076,0.03991657,0.002661003,-0.021080634,0.016542442,0.023483925,-0.025911612,0.0071183736,-0.0027784228,0.03474401,0.046406675,-0.02292275,-0.019153122,0.013016803,-0.011607768,0.0048279287,-0.047333833,0.021471016,-0.018518751,0.008673803,-0.004169159,0.054458305,0.038672227,-0.004620538,-0.020068081,0.026716776,-0.012492227,0.033426467,-0.023935303,0.040258154,-0.027351147,-0.027814725,0.004031915,-0.032572508,-0.036573924,-0.048675768,-0.023971902,-0.027570738,0.02510645,-0.0036994806,0.01396836,0.007752745,0.010601315,-0.009912046,0.018616347,-0.048480578,-0.060411632,-0.026667979,-0.0060082246,0.021910196,0.041624494,-0.007661249,0.017298808,0.022788556,0.000079915866,-0.02469167,0.01875054,-0.0021897997,-0.014053756,-0.015420093,0.0014387716,-0.016688835,-0.004346051,0.017286608,-0.001319827,-0.039184604,-0.020507261,0.0021486266,-0.0061210697,0.039355397,0.007136673,0.019128723,0.016115462,0.0033487466,-0.018835938,-0.023252135,0.011815159,0.019726496,0.027570738,-0.0059990752,0.02818071,0.004687635,0.018713942,0.024533076,-0.0044466965,-0.027546339,0.013187596,0.022349376,-0.033890046,0.014700326,0.0026274547,-0.020897642,0.0061698672,-0.018945731,0.0044405963,-0.0040624137,0.029083468,0.03820865,0.0006431393,0.010997796,0.010833103,0.04821219,0.024484279,0.00007295838,-0.011107591,-0.027985517,-0.01723781,-0.012144543,0.021873597,0.0019625851,0.03318248,0.016615639,-0.0055080475,-0.0038885719,-0.0068194875,0.018421156,-0.008320019,-0.011534572,0.0040959623,0.015481091,-0.011516272,0.016286254,0.00893609,0.005111566,0.028107513,0.022251781,-0.0050932667,0.030401006,0.0028744934,-0.004458896,0.0104366215,-0.023361929,-0.027619535,-0.012053047,0.033304475,-0.022166384,0.024081696,0.016042264,0.0174574,0.06538901,0.006392507,-0.0028821179,0.01332179,-0.011613868,-0.044405967,-0.01373657,-0.032474913,-0.010558616,-0.007222069,-0.017091418,0.0039617685,0.009515564,0.006740191,-0.001309915,0.030083822,0.01875054,0.007954036,-0.008265121,0.060606822,-0.010137736,-0.008923891,-0.021422219,-0.0021486266,0.0031322064,0.049602926,-0.008978789,0.018835938,0.023093542,-0.019921687,0.020336468,0.036183544,-0.00077008974,-0.049602926,-0.0038977214,-0.017554997,0.01635945,0.03969698,-0.01942151,-0.024362283,-0.018091772,0.0051085157,-0.005434851,-0.006313211,0.0010567766,-0.003757428,-0.0018527901,0.04321042,0.020007083,-0.018213766,-0.048724566,-0.022654362,-0.019750895,0.06094841,0.0118090585,-0.0046540867,0.025716422,0.032230925,-0.010320727,0.019519106,0.016945023,-0.002856194,-0.0053586042,-0.026692377,0.026009208,0.0023438176,-0.0012717918,0.0022751957,0.021532014,-0.0028866928,-0.022873951,-0.0018314411,-0.024533076,-0.019750895,0.0036720317,0.0054074023,-0.04030695,-0.009722955,-0.0036689818,-0.023191137,-0.033328872,0.020263271,0.010381725,0.026741175,0.014980913,-0.021227028,0.006313211,0.05348235,0.018518751,0.0075026564,0.001014841,-0.014139152,0.018482152,0.0053281058,0.0090641845,0.013285192,0.028400298,-0.051823225,0.0019000629,0.01440754,0.008631105,-0.0012085071,-0.014224548,-0.010942899,-0.04884656,0.024716068,0.022300579,0.010217031,0.017615993,0.011089292,0.004864527,-0.012162843,-0.01766479,-0.047285035,0.03186494,0.0009896796,0.010613514,0.009302074,0.021324623,0.019799693,0.03379245,-0.024398882,-0.020385265,0.0079418365,-0.031938136,-0.0070207785,0.014248947,-0.010735508,0.031889338,0.040062964,-0.028400298,-0.0043765493,0.000025685542,0.0075026564,-0.049139347,0.02791232,-0.010875802,-0.0041142614,-0.0055568456,-0.029473849,-0.0027814726,0.0012580673,-0.0059289285,0.018225964,-0.010534218,0.03208453,0.029766636,-0.022129785,-0.016054465,-0.024984455,-0.01047932,0.015798276,-0.016762031,0.0019564854,-0.005648341,0.009161781,0.011272283,0.04011176,0.022666562,-0.025618827,-0.016408248,-0.022227382,0.015883673,-0.02076345,0.028644288,-0.027546339,0.014736924,0.014810122,0.00073196646,-0.013553579,-0.024484279,0.0058343825,-0.013346189,-0.02466727,-0.010827004,-0.028571092,0.012528826,0.018201565,-0.0039160205,-0.026667979,0.040087365,-0.010137736,-0.019982684,0.0050475188,0.018848136,0.0075392546,0.017189013,-0.017591594,0.0038458738,0.0037452283,0.00065915106,-0.018823737,-0.0142123485,0.013724371,-0.042014875,0.007368462,-0.052701585,-0.007222069,-0.033328872,-0.015237102,-0.008411515,-0.02160521,0.040550943,0.035719965,0.0001746998,-0.011632167,0.007789343,0.0014753699,-0.004193558,0.044308368,0.0033670457,0.017603794,0.00742336,-0.012589823,0.03357286,0.028302703,-0.018128369,-0.0028028216,0.02008028,0.02703396,0.018677345,-0.018250363,-0.016957223,0.0034219432,-0.032401714,0.023630317,0.015078509,-0.010881902,0.021068435,-0.026619181,-0.031889338,0.011870056,-0.045455117,-0.0056605404,-0.039843373,0.03225532,-0.0012359559,0.028839478,0.00036941434,0.01921412,0.021702806,0.009942545,-0.0069719804,-0.029351855,-0.022178585,0.019287316,0.02793672,0.011863956,0.011870056,0.0046174885,-0.051628035,0.016957223,0.02683877,-0.00058900425,0.0018405906,-0.008905592,-0.0059533273,0.037037503,0.008740899,-0.003757428,-0.045650307,-0.039843373,-0.04011176,-0.019336114,0.02574082,0.0033670457,0.02053166,-0.024508677,0.034378026,-0.009918146,-0.02903467,0.0054196017,0.0010834628,0.032548107,0.011205186,-0.0109367985,0.054848686,0.022190783,-0.049871314,0.027546339,0.045503914,0.03210893,-0.0005360129,0.003973968,0.022727558,-0.0029751386,-0.0082224235,0.034353625,0.010845304,0.0022782455,0.026082406,0.034378026,0.015127307,0.0036171342,-0.010772106,0.0024337885,0.003903821,0.009204478,0.02378891,-0.019824091,-0.027448742,-0.0054074023,-0.0069475817,0.031889338,-0.02925426,0.006392507,0.0021776003,0.011906655,0.035183188,-0.0010224656,-0.042746842,-0.013553579,-0.012943607,0.007002479,0.0011208237,0.011174688,-0.03379245,-0.008984888,0.02049506,-0.015359096,-0.016310653,0.0025268092,-0.0064657037,-0.014383141,0.003946519,-0.01222994,0.018286962,0.0036964307,-0.03032781,-0.041795284,-0.006154618,0.0026274547,0.0327189,0.040624138,-0.020751249,0.009613159,0.008905592,-0.027107159,-0.02337413,0.020617055,0.02513085,-0.007679548,-0.010942899,-0.021044036,0.025228444,-0.0262044,-0.033158083,0.018433355,0.0019717347,-0.031986933,0.031498957,0.006423006,-0.010784306,-0.010003542,-0.022215182,-0.00436435,0.05416552,0.025008854,0.0044893944,-0.03398764,-0.04972492,-0.037379086,0.014663728,0.00349209,-0.01550549,0.01699382,-0.044771947,0.051188856,-0.015224902,0.010985597,-0.020885443,-0.0024734368,-0.028449096,0.04604069,0.0045107435,0.027692731,-0.0016316753,0.017128015,-0.02358152,-0.024362283,-0.009027586,0.0047425325,-0.0065815984,0.0019961335,0.010003542,-0.004565641,0.022202983,-0.01266302,0.044918343,-0.018177167,-0.01417575,0.012144543,-0.015468891,0.0024307386,0.011180787,-0.034207232,0.012907009,0.011070993,0.017140215,-0.007850341,-0.0008402365,0.016713234,0.001168859,0.010351226,-0.0196411,0.035012394,-0.009661958,-0.00960706,0.061485182,0.011882256,-0.033963244,0.0064901025,-0.02944945,0.0040166657,0.035012394,0.0043765493,-0.008155326,0.0034158435,0.016725434,-0.00675849,-0.02576522,0.012931407,-0.0071671717,0.0062064654,-0.010637913,0.0016652237,0.0018009425,0.017811185,-0.011754162,-0.0018177168,-0.031938136,0.015188304,-0.011229586,-0.046723858,0.0072586676,-0.0017978926,-0.00024532314,-0.0050810673,0.009253276,-0.03337767,-0.019677699,0.007697847,-0.020812247,-0.004458896,-0.003011737,0.01593247,-0.017774586,-0.015834874,-0.030523002,-0.016335052,0.003598835,-0.036720317,-0.014602731,-0.027887922,-0.02532604,0.021141632,-0.01766479,-0.004343001,0.0109672975,-0.0056269923,0.0028622937,-0.0008135502,-0.0007445471,-0.027253551,0.021837,-0.0047638817,0.027351147,-0.0013152523,0.022166384,-0.023520522,-0.010070639,-0.014968714,-0.01789658,0.013199795,0.0048340284,0.031279366,0.036134746,0.01047932,-0.029815434,0.003449392,-0.0017048719,-0.027643934,0.018823737,-0.00055126223,0.024642872,0.0013899738,0.039184604,-0.015078509,-0.032548107,0.06412026,0.010540317,0.03137696,-0.017725788,0.003470741,-0.0029583646,-0.009539963,0.012480028,0.015322498,-0.0001957629,0.032352917,-0.038599033,-0.030840186,0.00039953168,-0.015127307,0.020458462,-0.029425051,0.0032816497,-0.065291405,0.010070639,0.005087167,-0.017506197,-0.02879068,-0.012242139,0.018823737,0.031767346,0.024106095,0.030815788,0.010192633,0.008679902,0.047992602,-0.016884027,-0.0028775432,0.012266538,0.007886939,0.0142123485,-0.01814057,0.032645702,0.010631813,0.01483452,-0.014773523,0.06065562,-0.0044344966,0.009985242,-0.015212703,0.019226318,-0.017506197,0.0093142735,0.011077092,-0.023959702,-0.023618117,0.027887922,-0.000030403295,-0.031474557,0.031767346,-0.0026976014,-0.017286608,0.010034041,0.018628547,0.021373421,-0.027668333,-0.032352917,-0.013614576,-0.016237456,-0.030181417,-0.001505106,0.000008958965,0.0103756245,0.0035225886,-0.030498603,-0.0006915558,-0.017176813,0.034426823,0.024472078,0.009558262,0.023715714,-0.01635945,0.026326394,0.009338672,0.0076002516,0.00011751493,0.017152414,-0.02530164,-0.019384911,-0.038721025,-0.028912675,0.0109672975,-0.026131203,-0.032206524,0.016261855,-0.024350084,0.025862815,-0.03232852,0.0060143243,0.008240722,-0.00567579,0.049676124,0.0009713805,-0.033255678,0.005996025,0.0654378,0.00029049919,0.02009248,-0.0093142735,-0.022544567,-0.015981268,0.020690251,0.04279564,-0.012821613,-0.018213766,0.006868285,-0.040502146,-0.019982684,-0.044186376,-0.041209713,0.009783952,-0.008191925,0.0196167,-0.016200857,0.024472078,0.009094683,0.017957577,0.032133326,0.026960764,0.039404195,0.0012946657,-0.0133705875,0.00720377,0.0012161317,-0.03994097,0.010223132,-0.004864527,0.03735469,0.018762741,0.0042271065,0.0041264608,-0.015041911,0.033914447,-0.00830172,-0.009966943,-0.02465507,0.030644996,0.03467081,0.00808213,-0.015481091,-0.014261147,0.015566487,-0.033353273,0.018957932,0.0036598323,0.015224902,-0.004477195,0.024386683,-0.027668333,0.01374877,0.007179371,0.029864231,-0.021410018,0.027131557,-0.0036110345,0.028400298,0.00087226,0.034963597,-0.012303136,0.0072342684,0.025692023,-0.019702097,0.031401362,0.0013945486,0.019543504,-0.008265121,0.011168588,0.03608595,-0.043332413,0.0032572506,-0.025350438]},{"id":"combination-target-sum","name":"Combination Target Sum","description":"You are given an array of **distinct** integers `nums` and a target integer `target`. Your task is to return a list of all **unique combinations** of `nums` where the chosen numbers sum to `target`.\n\nThe **same** number may be chosen from `nums` an **unlimited number of times**. Two combinations are the same if the frequency of each of the chosen numbers is the same, otherwise they are different.\n\nYou may return the combinations in **any order** and the order of the numbers in each combination can be in **any order**.\n\n**Example 1:**\n\n```java\nInput: \nnums = [2,5,6,9] \ntarget = 9\n\nOutput: [[2,2,5],[9]]\n```\n\nExplanation:\n2 + 2 + 5 = 9. We use 2 twice, and 5 once.\n9 = 9. We use 9 once.\n\n**Example 2:**\n\n```java\nInput: \nnums = [3,4,5]\ntarget = 16\n\nOutput: [[3,3,3,3,4],[3,3,5,5],[4,4,4,4],[3,4,4,5]]\n```\n\n**Example 3:**\n\n```java\nInput: \nnums = [3]\ntarget = 5\n\nOutput: []\n```\n\n**Constraints:**\n* All elements of `nums` are **distinct**.\n* `1 <= nums.length <= 20`\n* `2 <= nums[i] <= 30`\n* `2 <= target <= 30`\n","difficulty":"Medium","concepts":["Tree Maze","Combinations"],"solutions":{"python":"class Solution:\n    def combinationSum(self, nums: List[int], target: int) -> List[List[int]]:\n        res = []\n\n        def dfs(i, cur, total):\n            if total == target:\n                res.append(cur.copy())\n                return\n            if i >= len(nums) or total > target:\n                return\n\n            cur.append(nums[i])\n            dfs(i, cur, total + nums[i])\n            cur.pop()\n            dfs(i + 1, cur, total)\n\n        dfs(0, [], 0)\n        return res\n","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @param {number} target\n     * @returns {number[][]}\n     */\n    combinationSum(nums, target) {\n        let ans = [];\n        let cur = [];\n        this.backtrack(nums, target, ans, cur, 0);\n        return ans;\n    }\n\n    /**\n     * @param {number[]} nums\n     * @param {number} target\n     * @param {number[][]} ans\n     * @param {number[]} cur\n     * @param {number} index\n     */\n    backtrack(nums, target, ans, cur, index) {\n        if (target === 0) {\n            ans.push([...cur]);\n        } else if (target < 0 || index >= nums.length) {\n            return;\n        } else {\n            cur.push(nums[index]);\n            this.backtrack(nums, target - nums[index], ans, cur, index);\n\n            cur.pop();\n            this.backtrack(nums, target, ans, cur, index + 1);\n        }\n    }\n}\n","cpp":"class Solution {\npublic:\n    vector<vector<int>> combinationSum(vector<int>& nums, int target) {\n        vector<int> curr;\n        vector<vector<int>> res;\n        helper(nums, target, 0, curr, res);\n        return res;\n    }\n\nprivate:\n    void helper(vector<int>& cands, int target, int i, vector<int>& curr,  vector<vector<int>>& res) {\n        if (i >= cands.size() || target < 0)\n            return;\n\n        if (target == 0) {\n            res.push_back(curr);\n            return;\n        }\n\n        curr.push_back(cands[i]);\n        \n        helper(cands, target - cands[i], i, curr, res);\n\n        curr.pop_back();\n\n        helper(cands, target, i + 1, curr, res);\n    }\n};\n","java":"class Solution {\n\n    public List<List<Integer>> combinationSum(int[] nums, int target) {\n        List<List<Integer>> ans = new ArrayList<List<Integer>>();\n        List<Integer> cur = new ArrayList();\n        backtrack(nums, target, ans, cur, 0);\n        return ans;\n    }\n\n    public void backtrack(\n        int[] nums,\n        int target,\n        List<List<Integer>> ans,\n        List<Integer> cur,\n        int index\n    ) {\n        if (target == 0) {\n            ans.add(new ArrayList(cur));\n        } else if (target < 0 || index >= nums.length) {\n            return;\n        } else {\n            cur.add(nums[index]);\n            backtrack(nums, target - nums[index], ans, cur, index);\n\n            cur.remove(cur.get(cur.size() - 1));\n            backtrack(nums, target, ans, cur, index + 1);\n        }\n    }\n}\n","csharp":"public class Solution {\n    \n    List<List<int>> result = new List<List<int>>();\n\n    public void backtrack(int index, List<int> path, int total, int[] nums, int target) {\n        if(total == target) {\n            result.Add(path.ToList());\n            return;\n        }\n        \n        if(total > target || index >= nums.Length) return;\n        \n        path.Add(nums[index]);\n        backtrack(index, \n                  path, \n                  total + nums[index], \n                  nums, \n                  target);\n        \n        path.Remove(path.Last());\n        \n        backtrack(index + 1, \n                  path, \n                  total, \n                  nums, \n                  target);\n        \n    }\n    public List<List<int>> CombinationSum(int[] nums, int target) {\n        backtrack(0, new List<int>(), 0, nums, target);\n        return result;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def combinationSum(self, nums: List[int], target: int) -> List[List[int]]:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @param {number} target\n     * @returns {number[][]}\n     */\n    combinationSum(nums, target) {}\n}\n","cpp":"class Solution {\npublic:\n    vector<vector<int>> combinationSum(vector<int>& nums, int target) {\n        \n    }\n};\n","java":"class Solution {\n    public List<List<Integer>> combinationSum(int[] nums, int target) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public List<List<int>> CombinationSum(int[] nums, int target) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/GBKI9VSKdGg","embedding":[0.031001907,-0.014911917,0.030650552,-0.040447153,-0.009853439,-0.007523129,-0.04075717,0.05592744,-0.010359804,0.026682308,-0.022900075,-0.025607575,-0.012338758,-0.023706125,0.011067681,0.009910276,-0.009502084,0.0041000023,-0.012793453,0.037532974,0.00980177,0.048280302,0.033502728,-0.045180112,0.06535202,-0.02806706,0.0077556437,0.05022309,-0.003999246,-0.016575687,0.047660265,-0.01307247,-0.009512418,0.045428127,0.009259236,-0.0019440779,0.029741162,0.021060629,-0.008768372,-0.002065502,0.008081163,0.011450037,0.005838692,-0.030175189,-0.014446888,0.0017696922,0.018663147,-0.018322127,0.033130705,0.044436067,0.025586907,-0.003601388,0.0021610912,0.041955914,-0.010798997,-0.05572076,-0.03186996,0.009295405,-0.00024446295,0.004681288,0.018456468,-0.029699827,0.037036944,0.01127436,-0.008313678,-0.0016676442,0.038938396,-0.00954342,-0.040695168,-0.049768396,-0.03445345,0.018301459,0.001836863,-0.008510023,0.020657605,0.035755534,0.028625093,0.021473987,0.04117053,-0.0140852,0.023416772,-0.037842993,0.03668559,-0.016865037,0.0042162593,-0.027612364,-0.04732958,-0.00422401,-0.031807955,-0.027881049,-0.022342041,-0.014157537,-0.020357918,0.043113317,0.018673481,0.00265583,0.016307002,0.025483567,0.022962078,0.059606332,0.02676498,0.002370354,0.015604293,-0.03337872,0.041480552,0.0009319948,0.013857853,-0.0154802855,0.026413625,-0.007729809,0.04191458,0.019169513,0.01622433,-0.025979597,-0.0037512307,0.0067635826,-0.021701334,-0.02676498,0.03077456,-0.0029296803,-0.0034747971,-0.04348534,-0.0077866456,0.006381226,-0.023706125,0.016276,0.01507726,-0.04629618,0.023396105,-0.02786038,0.0276537,-0.028418414,-0.0064845653,0.017443739,-0.041749235,-0.06481465,0.03224198,0.036561582,-0.008386016,0.021887345,0.043857362,-0.005241906,-0.0070891026,0.012338758,0.028232403,-0.054356676,-0.054439347,0.03546618,-0.011202022,-0.005327161,0.015790304,-0.04160456,0.026516965,-0.003932075,0.011243358,-0.07126305,-0.02686832,0.004735541,-0.009238568,-0.010364971,0.013165477,-0.017102718,-0.0014183372,-0.005952366,0.055472746,0.04501477,-0.054935377,0.003937242,-0.0039914954,-0.031621944,0.018301459,-0.043733355,-0.007187275,-0.0055028386,0.030733224,-0.025214884,-0.069278926,-0.06398793,-0.04257595,-0.002635162,-0.042451944,-0.0027850047,-0.033833414,-0.023396105,0.011811727,-0.0031208587,0.050264426,-0.04799095,-0.008349847,0.0049215527,0.03368874,0.005290992,0.05191786,0.0055390075,-0.05460469,-0.007931321,0.021577327,0.06473198,-0.00688759,-0.0012749534,-0.0005887133,0.016048653,0.041563224,0.021019293,-0.008075996,-0.023540782,0.014415886,0.038029004,0.01848747,-0.0205956,0.016761698,-0.010199627,0.027116334,-0.0178881,-0.027633032,-0.001271724,-0.0039811614,-0.024491506,0.004257595,0.054191332,0.022218034,0.02366479,-0.00015266825,0.0044746087,0.021949349,0.028087728,-0.005967867,0.004293764,0.013754512,-0.009290238,-0.0013098306,-0.0189835,-0.004991307,-0.017113052,-0.0075127953,-0.025194217,-0.0032216148,-0.031435933,-0.00042304685,0.026744312,0.03788433,0.034825474,0.043650683,-0.012349092,-0.027901717,-0.002919346,-0.031043243,0.035032153,-0.021825342,0.010039451,0.0400958,0.022838071,-0.000473102,-0.009104227,0.0067842505,0.016927041,-0.007982991,-0.039723776,-0.019252185,0.022962078,-0.0097501,-0.00062036107,-0.043030646,-0.053777974,0.0006252051,-0.023809465,-0.037346963,0.0048672995,0.028997116,0.06535202,-0.0007408164,0.0034928815,0.047949616,-0.032324653,-0.003926908,-0.045428127,-0.0057921894,-0.007342285,0.032221314,-0.08754938,-0.017009713,-0.03348206,0.029017784,-0.0028005056,0.052992593,-0.03517683,-0.0026945823,0.019582871,-0.0287491,-0.042162593,-0.03280002,-0.0012433056,-0.020171907,-0.015139264,0.0067687496,0.010251297,-0.020843616,-0.026888987,0.024594845,0.0082516745,-0.022672728,-0.0043971036,0.0025576572,-0.0051359823,-0.01697871,-0.04832164,0.035321504,0.011677384,-0.01312414,0.024367498,0.013196479,-0.035714198,0.016007317,0.0111813545,0.03817368,-0.07386721,0.02686832,-0.018353129,0.01853914,0.043650683,0.024698185,0.029906506,0.049313698,0.033998758,0.03505282,-0.007858983,0.025979597,-0.0016560185,0.008303344,-0.0020926287,-0.019169513,-0.04848698,-0.0070994366,0.04588282,-0.0797369,0.014601898,0.01864248,-0.018632146,0.032841355,0.04327866,0.016947709,0.01057165,0.0118633965,-0.024140151,-0.010654322,-0.038855724,-0.011253692,0.019851554,0.051339157,-0.028501086,0.028191067,0.00791582,0.017671086,-0.006169379,-0.023706125,-0.00073242007,-0.001154821,-0.026888987,-0.011367366,-0.011047013,-0.00055900315,0.016017651,0.008112165,-0.04278263,-0.015325276,0.062293164,0.013310152,-0.014384884,-0.011966736,0.048280302,0.017898435,0.014395218,0.0034773806,-0.0025460315,-0.027633032,-0.008882047,0.007207943,-0.011574045,0.0041387547,-0.022342041,-0.03236599,0.006546569,-0.031394597,0.01187373,0.007652304,0.03920708,-0.0055493414,-0.03507349,-0.003097607,-0.065434694,-0.0039759944,-0.05080179,0.04298931,0.0035626357,0.028769769,0.04290664,0.033420056,0.07886885,-0.013155143,-0.02304475,0.015418282,-0.0057508536,0.02445017,0.0077866456,0.02294141,-0.010654322,-0.004756209,0.03840103,0.037925664,-0.031332593,0.008680534,0.010809331,0.024036812,0.016782366,0.043444004,0.027509024,-0.039062403,0.014250543,-0.0018898245,-0.047866944,-0.025338892,0.020874618,0.04790828,-0.028046392,-0.019934226,-0.02366479,0.006856588,-0.032324653,0.016968377,-0.015149598,-0.0260416,0.009052557,-0.033358052,0.03716095,-0.045676142,0.060391713,-0.034536123,0.071345724,-0.018818157,-0.027178338,-0.0010966924,-0.055679426,-0.009610591,-0.025276888,-0.010499313,-0.013547833,0.01634834,0.052579235,0.053199273,0.032841355,0.03377141,-0.0033972922,0.002508571,0.044436067,-0.048445646,0.0030898566,0.04356801,0.016017651,0.0058593606,-0.008685701,0.01343416,0.016937375,-0.020140905,-0.050471105,-0.0054666693,-0.024098815,-0.0007253154,0.003658225,0.008360181,0.017877767,0.020306248,0.020864284,0.0064845653,0.018962832,-0.029699827,-0.0184358,0.024098815,0.075934,0.02715767,0.028893776,-0.02184601,-0.047866944,-0.04790828,0.006029871,-0.022135362,-0.02325143,0.01859081,-0.011212356,0.051835187,-0.016720362,-0.008169003,-0.01612099,-0.005663015,-0.0061332104,0.00851519,0.0040715835,-0.003317204,0.011264026,-0.0065879053,0.0077453097,0.0145708965,-0.100198165,0.0023677705,-0.0013040177,0.028728433,-0.0027695037,0.0054666693,-0.040819176,0.00045986162,0.05902763,-0.011842729,-0.0032371157,-0.019334856,0.008845877,0.0057921894,0.012524771,-0.049355034,-0.049065683,0.027281677,-0.016699694,-0.007362953,0.02184601,0.00671708,0.018125782,-0.008391183,-0.022528052,-0.028397746,-0.03226265,-0.05663015,-0.0050636446,-0.023127422,0.033440724,-0.023726793,0.045965493,-0.014405552,0.027798377,0.0065982393,-0.027571028,-0.004399687,-0.031683948,-0.0013085388,0.012152747,-0.0012710781,-0.021784006,-0.00016711965,-0.005316827,0.026847651,0.041025855,-0.01929352,-0.008685701,-0.019644875,-0.046337515,0.0064380625,-0.009610591,0.0001887564,-0.05501805,-0.0016120991,0.06113576,-0.008856211,-0.027529692,-0.018105114,-0.020368252,0.005998869,-0.009248902,-0.003800317,-0.005159234,0.025793586,0.008639198,0.0022515135,0.0068255863,0.008954384,0.025214884,0.014240209,-0.06791484,0.026702976,0.02424349,-0.02856309,-0.01473624,-0.0585316,0.035383508,-0.005066228,0.0022101775,-0.002498237,-0.029141793,-0.015800638,0.017443739,-0.023644121,0.02705433,0.034122765,-0.036065552,0.034515455,-0.00205646,0.030836564,0.03337872,-0.015852308,-0.024284827,-0.038318355,-0.025380228,0.023520114,-0.021990685,0.016276,0.00044403772,-0.016100323,-0.003012352,-0.06667477,0.011884064,0.009238568,0.009192065,-0.015004923,0.036251564,0.00017567747,-0.023644121,-0.02064727,-0.021784006,-0.026206944,-0.009889608,0.0026894154,0.031828623,0.00079894497,0.00091068103,0.0061487113,-0.002096504,0.021184636,0.01132603,0.0011509458,-0.016999379,-0.073123164,0.017361067,-0.022569388,0.016162327,-0.038111676,-0.012927795,0.018973166,-0.029720495,-0.035962213,-0.0037977335,-0.0027927551,-0.016544685,-0.00030501356,-0.0061022085,0.047577593,0.03015452,-0.006913425,-0.011016011,0.019954894,0.0031931964,-0.0048156297,0.009290238,0.040633164,-0.017350733,-0.0065879053,0.006546569,0.011439703,-0.023768129,0.002207594,-0.0004349955,0.008820042,-0.024718853,0.0233341,-0.003459296,-0.036148224,-0.00013595627,0.030960571,0.011016011,0.006965095,-0.017071716,0.020946955,0.00769364,0.043609347,-0.00899572,-0.019985896,0.009998115,0.009078392,0.010871335,0.0071666073,0.028542422,0.028439082,0.016513683,-0.011253692,-0.008122499,0.029885838,-0.017547078,-0.013702842,0.02885244,-0.018838825,0.023830133,0.0024711103,-0.0030666052,-0.034102097,0.009899942,-0.0020112486,-0.0019104925,-0.020357918,-0.003784816,0.026578968,-0.03319271,0.031291258,0.02075061,-0.009548587,-0.0057353526,-0.002844425,-0.02637229,-0.0010314593,0.018022442,-0.036954273,-0.029555151,0.0058851955,0.015593959,0.002070669,0.02085395,-0.0004827901,0.029100455,-0.0026442043,-0.016048653,-0.016648024,0.036127556,0.004079334,-0.005270324,-0.016307002,-0.055968776,-0.038008336,0.022383377,-0.032179978,0.0037434802,0.0007240237,0.009357409,-0.0184358,-0.0303612,0.037842993,-0.014901583,0.0057301857,-0.039310418,-0.017009713,0.050595112,-0.019830886,-0.043650683,-0.015469952,0.038628377,-0.033027366,-0.03186996,0.0017916518,-0.019613873,0.0027953386,-0.005833525,0.012462767,0.035714198,-0.01934519,0.018218787,-0.065104,0.026165608,-0.07018831,0.0028960947,0.032138642,0.0015914312,0.03689227,0.010881669,0.0041697565,0.0055080056,-0.0067687496,0.017350733,-0.00076535955,0.028769769,-0.015345944,0.015015257,0.029451812,0.0054770033,-0.030588549,0.056258127,-0.0136821745,0.03939309,0.0037150618,-0.0034050427,0.011357032,-0.013527165,-0.0077659776,0.011088349,-0.043650683,-0.009316073,-0.017898435,0.007548964,0.014984255,0.020430256,0.014746574,0.045924157,0.030381868,0.013196479,0.0292658,-0.014653568,0.016720362,-0.033502728,0.011367366,-0.0020577516,-0.024264159,0.0091610635,0.05249656,0.027467689,-0.0015668881,-0.01307247,0.017877767,-0.045428127,-0.02174267,0.0022618475,0.0071511064,-0.020864284,0.023706125,0.00021136196,0.003973411,-0.023416772,-0.001994456,0.00020538764,-0.04191458,0.045676142,0.005973034,-0.052951258,0.019097174,-0.01645168,0.008236174,0.020275246,0.0051928195,-0.019810218,-0.016007317,0.019572537,-0.0074301236,0.032097306,0.045221448,0.0038080674,0.004340267,0.036230896,0.025297556,0.011729055,0.023210093,-0.004598616,-0.017671086,0.02686832,0.036706258,0.027240342,0.03689227,0.016555019,-0.017846765,0.05563809,-0.01757808,0.030051181,0.002126214,-0.0074197897,0.032924026,0.03728496,-0.008349847,-0.035941545,0.0013356655,-0.022507384,-0.016276,-0.010757661,0.033461392,-0.010302967,-0.010463144,0.028046392,0.025194217,0.016151993,-0.027674368,-0.0014712989,0.0287491,-0.021029627,0.0017632334,-0.03137393,-0.0362929,0.020523261,-0.030733224,-0.0054821703,0.00065362355,-0.051959194,0.015407948,0.03590021,-0.009615758,-0.035238832,0.039145075,-0.007993325,-0.0000846901,0.00986894,0.018105114,-0.015407948,0.047536258,0.012173415,0.007269947,0.044188052,0.0060712066,-0.062458508,0.02416082,0.000041578078,-0.030981239,-0.029079787,-0.02715767,-0.044560075,-0.0044746087,-0.013651173,-0.0034050427,0.006019537,0.030609217,0.00048924884,0.058779616,-0.0227554,-0.0074559585,-0.026599636,0.037925664,0.028149731,0.025214884,0.01814645,-0.001999623,0.028253071,-0.010530314,0.00482338,-0.0061590453,0.0022954328,0.037801657,0.005657848,0.0080243265,0.0019776633,-0.029389808,0.0023083503,0.034887478,-0.009336741,0.0010288758,-0.044932097,0.010695658,-0.0260416,0.029431144,-0.0049525546,-0.015376946,-0.009228234,-0.01127436,0.027178338,0.056795493,0.017020047,0.027033662,-0.0071407724,-0.036954273,-0.0044565243,0.0040018293,0.003154444,0.033936754,-0.014260877,-0.05129782,0.025566239,-0.014715572,-0.006644742,-0.0039062402,-0.021225972,0.01747474,-0.015511287,0.025090877,0.045841485,0.042245265,-0.020946955,-0.018012108,-0.03277935,-0.018859493,-0.0138888545,-0.008122499,0.022982746,0.025917593,0.02405748,0.013465161,-0.039744444,-0.049644385,0.010633654,-0.032924026,-0.041563224,0.018632146,0.037326295,-0.028087728,-0.04790828,0.02244538,-0.013568501,-0.027901717,-0.0041387547,-0.0553074,0.014860247,0.0051049804,0.002813423,0.008556526,-0.013206813,0.016131325,0.010173792,-0.038525037,0.008406684,-0.009130062,-0.003857154,-0.018270457,-0.026082937,-0.0026532465,0.032944694,0.03174595,0.021784006,0.01612099,-0.03339939,0.010643988,-0.008634031,-0.04431206,0.020078901,-0.0022579723,-0.023974808,0.01236976,-0.055266064,-0.012690114,0.016141659,0.0051411493,-0.042162593,0.055596754,-0.02254872,-0.019365858,-0.023292765,-0.015542289,-0.013847519,-0.03025786,-0.009610591,0.028501086,-0.012400762,0.05191786,-0.016555019,0.007357786,-0.034329444,-0.038938396,0.025710914,-0.00822584,0.02585559,-0.02163933,0.009305739,0.004081918,0.019097174,0.023809465,0.031621944,-0.0035652192,-0.01593498,0.0067325807,-0.03244866,-0.0033352885,0.036127556,-0.021122633,-0.008411851,0.016265666,0.0027927551,-0.036830265,0.0032061138,-0.008520357,0.004198175,-0.0067377477,-0.013795848,-0.0036504746,-0.0015035925,-0.037822325,0.023995476,0.0023083503,-0.0011942192,-0.035280168,0.009894775,0.0014131702,-0.0023535613,0.029947842,0.028087728,0.012256087,-0.010318468,-0.0050739786,-0.024181487,-0.02028558,0.021701334,-0.0034618797,-0.017857099,-0.0395791,-0.028191067,-0.02715767,-0.034102097,-0.003596221,-0.023892136,-0.018683815,0.017743424,-0.009858606,-0.004944804,-0.010871335,-0.018208453,0.027591696,0.035135493,0.017092384,-0.014147203,-0.007016765,-0.009104227,-0.0034644632,0.014198873,-0.028645761,-0.021970017,-0.013361822,0.016048653,0.00021378398,0.042823967,0.020109903,0.021887345,-0.0044797757,0.0029451812,-0.00066977035,-0.030919235,0.007610968,-0.0057353526,0.008809708,0.0058903624,-0.009109394,-0.027922384,-0.0045366124,-0.0017180223,-0.014054198,0.040839843,-0.0071717743,-0.009987781,-0.010380472,0.021267308,-0.017877767,0.04181124,-0.016947709,-0.04972706,0.012710782,-0.010003282,-0.009037056,-0.008845877,0.006691245,-0.014550228,0.008158668,0.027012995,-0.054852705,-0.011615381,-0.018425466,0.015542289,-0.03288269,0.0276537,-0.020161573,-0.031229254,-0.050057746,-0.051091142,-0.0049577216,-0.016131325,-0.006205548,-0.038442366,-0.0035032155,0.01473624,0.015201268,-0.016761698,0.0048207967,-0.0116567165,0.00009163324,0.006954761,0.00047762314,0.05741553,-0.0053839977,0.002671331,0.023354769,-0.014271211,0.05741553,-0.0025938263,-0.02496687,0.014715572,-0.030526545,-0.0091558965,-0.0019117843,0.020368252,-0.000034937697,0.013630505,-0.019303855,0.0017322316,0.027199006,0.021432651,-0.01757808,-0.005663015,0.016834036,-0.0205956,-0.02153599,0.0062468844,0.026909655,-0.011729055,0.029348472,-0.018993834,-0.006675744,0.009744933,0.010225462,-0.026310286,0.014250543,0.014880915,-0.035672862,0.016255332,-0.0023083503,-0.0027850047,0.0093832435,-0.05282725,0.025669578,0.019117841,0.008143167,0.0025072792,-0.0043712687,-0.031394597,0.018074112,-0.008768372,0.012865791,-0.024181487,-0.022280037,0.009770768,-0.012276755,-0.0007795688,-0.026826983,0.017609082,-0.043030646,0.0064225616,0.008127666,-0.011739389,-0.023623453,-0.006324389,0.017175056,-0.015604293,-0.03176662,-0.02124664,-0.02215603,-0.009569255,-0.00834468,-0.0030149354,-0.010535481,-0.013051802,-0.01307247,0.03869038,0.034122765,-0.012297423,0.0044022705,0.010442476,0.04075717,0.038463034,0.04480809,0.010463144,-0.009429746,-0.02395414,-0.041253205,-0.025049541,0.050181754,-0.015149598,-0.0030898566,0.014901583,0.021804674,-0.021432651,0.008236174,-0.0055648424,-0.0011141311,0.0007795688,0.007889985,-0.0008460937,-0.034246773,0.016007317,0.043154653,0.0025473232,0.01612099,-0.020626603,0.01598665,-0.027095666,0.049065683,0.013155143,-0.0039966623,0.0038804053,-0.0031260257,-0.027591696,-0.031725284,-0.020636937,0.028191067,0.024202155,0.014064532,-0.008143167,-0.018394465,0.010266798,-0.019055838,-0.005216071,0.0018381547,0.0034670467,0.015304608,-0.014147203,0.032717347,-0.0013627921,-0.016524017,0.04131521,0.01583164,-0.019717213,-0.020616269,0.035858873,0.017660752,-0.015066926,0.025545571,0.036148224,0.03767765,-0.046130836,0.011822061,-0.00817417,0.02090562,-0.028046392,0.04019914,0.011760057,-0.0055855103,0.028294407,0.0007795688,0.018508138,-0.008851044,0.010819665,-0.0037538141,0.003500632,-0.010778329,-0.02695099,0.009207566,0.026124272,0.022073358,-0.011594713,0.019727547,-0.00093587005,-0.00062197575,-0.007528296,0.0038984898,-0.008386016,0.0011070264,0.01242143,-0.025793586,0.038029004,-0.00167927,-0.019541536,-0.018456468,-0.006536235,-0.048238967,0.011026345,0.0062675523,0.014849913,0.049272362,-0.009476249,0.001755483,-0.030650552,0.027591696,0.0057663545,-0.01718539,-0.038669713,-0.018549474,-0.017454073,0.012235419,0.010116955,0.022590056,0.026434293,-0.021680666,0.037594978,-0.019675877,0.0006704162,0.018363463,-0.0154906195,0.06316122,0.024305495,-0.01713372,-0.041439217,0.030836564,0.0067635826,-0.008231007,0.035569523,-0.0050378097,-0.0151806,-0.006985763,0.069692284,0.013516831,-0.017598748,0.021267308,0.006629241,0.0033998757,0.05361263,0.040550493,0.007347452,0.03116725,-0.018342795,0.0035523018,-0.026186276,0.019365858,-0.03337872,-0.053860646,0.00688759,-0.025504235,-0.033502728,-0.01913851,0.03786366,-0.0031053575,-0.021618662,0.018704483,0.0102926325,-0.021101965,0.013609837,0.017216392,0.045180112,0.0016947709,-0.02845975,-0.014074866,-0.0033792078,0.004247261,-0.003836486,-0.032552,-0.0002701364,-0.00080669543,-0.017640084,0.004996474,-0.0074972943,0.012690114,0.0006468419,-0.0071614403,0.04732958,-0.002671331,0.020977957,-0.007817647,-0.016069321,-0.0071614403,0.0042963475,0.042617287,-0.03397809,-0.019954894,0.009848272,-0.02624828,-0.029617155,0.0037176453,-0.008799374,0.014322881,0.006345057,0.01257644,-0.03749164,-0.026103605,0.010282299,-0.062375836,-0.012969131,0.027364349,-0.008809708,0.01833246,0.03850437,0.00003283861,-0.033130705,-0.023106754,-0.0087012015,0.007259613,0.014756908,0.030009845,0.014622566,0.027240342,0.031105246,-0.022135362,0.040529825,0.006531068,0.015604293,-0.0057973564,0.017381735,-0.008510023,-0.027467689,0.008101831,-0.0037538141,0.009310906,0.029286468,-0.04489076,0.027178338,-0.008453187,0.0089285495,0.0406745,-0.023644121,-0.0008273634,-0.017691754,0.023210093,0.028377078,0.00075567147,0.019520868,0.030650552,0.03437078,-0.040033795,-0.030175189,0.020833282,0.018291125,0.006376059,-0.0027565863,-0.0022812237,-0.027095666,0.003510966,-0.023706125,-0.047577593,-0.018497804,-0.009533086,0.019624207,0.038091008,0.029803166,0.001968621,0.01583164,0.055514082,0.025834922,0.0281704,0.017495409,-0.016937375,0.015407948,0.012245753,0.012132079,0.0018614061,-0.0008389891,0.04679221,-0.0035600523,-0.016079655,0.0059161973,0.040343814,-0.014901583,0.028542422,0.046420187,0.007228611,0.0074042887,0.0134548275,0.034040093,-0.0010915254,0.009042223,-0.0233341,-0.010943673,0.026496297,0.03639624,0.04799095,0.020430256,-0.0046322015,-0.021050295,0.005936865,-0.0054666693,-0.033130705,0.022569388,0.01202874,0.02595893,0.037450302,-0.0028521754,0.029534483,-0.0038235686,-0.009786269,-0.016307002,-0.02304475,0.018601144,-0.019727547,0.01768142,-0.032738015,0.0111916885,0.019117841,-0.018218787,0.022321373,-0.0093884105]},{"id":"count-number-of-islands","name":"Count Number of Islands","description":"Given a 2D grid `grid` where `'1'` represents land and `'0'` represents water, count and return the number of islands.\n\nAn **island** is formed by connecting adjacent lands horizontally or vertically and is surrounded by water. You may assume water is surrounding the grid (i.e., all the edges are water).   \n\n**Example 1:**\n\n```java\nInput: grid = [\n    [\"0\",\"1\",\"1\",\"1\",\"0\"],\n    [\"0\",\"1\",\"0\",\"1\",\"0\"],\n    [\"1\",\"1\",\"0\",\"0\",\"0\"],\n    [\"0\",\"0\",\"0\",\"0\",\"0\"]\n  ]\nOutput: 1\n```\n\n**Example 2:**\n\n```java\nInput: grid = [\n    [\"1\",\"1\",\"0\",\"0\",\"1\"],\n    [\"1\",\"1\",\"0\",\"0\",\"1\"],\n    [\"0\",\"0\",\"1\",\"0\",\"0\"],\n    [\"0\",\"0\",\"0\",\"1\",\"1\"]\n  ]\nOutput: 4\n```\n\n\n**Constraints:**\n* `1 <= grid.length, grid[i].length <= 100`\n* `grid[i][j]` is `'0'` or `'1'`.\n","difficulty":"Medium","concepts":["Matrix DFS","Matrix BFS"],"solutions":{"python":"class Solution:\n    def numIslands(self, grid: List[List[str]]) -> int:\n        if not grid or not grid[0]:\n            return 0\n\n        islands = 0\n        visit = set()\n        rows, cols = len(grid), len(grid[0])\n\n        def dfs(r, c):\n            if (\n                r not in range(rows)\n                or c not in range(cols)\n                or grid[r][c] == \"0\"\n                or (r, c) in visit\n            ):\n                return\n\n            visit.add((r, c))\n            directions = [[0, 1], [0, -1], [1, 0], [-1, 0]]\n            for dr, dc in directions:\n                dfs(r + dr, c + dc)\n\n        for r in range(rows):\n            for c in range(cols):\n                if grid[r][c] == \"1\" and (r, c) not in visit:\n                    islands += 1\n                    dfs(r, c)\n        return islands\n","javascript":"class Solution {\n    /**\n     * @param {character[][]} grid\n     * @return {number}\n     */\n    numIslands(grid) {\n        let count = 0;\n        for (let i = 0; i < grid.length; i++) {\n            for (let j = 0; j < grid[0].length; j++) {\n                if (grid[i][j] === '1') {\n                    this.dfs(grid, i, j);\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n\n    /**\n     * @param {character[][]} grid\n     * @param {number} i\n     * @param {number} j\n     */\n    dfs(grid, i, j) {\n        if (\n            i < 0 ||\n            j < 0 ||\n            i >= grid.length ||\n            j >= grid[0].length ||\n            grid[i][j] === '0'\n        ) {\n            return;\n        }\n        grid[i][j] = '0';\n        this.dfs(grid, i + 1, j);\n        this.dfs(grid, i, j + 1);\n        this.dfs(grid, i - 1, j);\n        this.dfs(grid, i, j - 1);\n    }\n}\n","cpp":"class Solution {\npublic:\n    int numIslands(vector<vector<char>>& grid) {\n        int m = grid.size();\n        int n = grid[0].size();\n        \n        int result = 0;\n        \n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                if (grid[i][j] == '1') {\n                    dfs(grid, i, j, m, n);\n                    result++;\n                }\n            }\n        }\n        \n        return result;\n    }\nprivate:\n    void dfs(vector<vector<char>>& grid, int i, int j, int m, int n) {\n        if (i < 0 || i >= m || j < 0 || j >= n || grid[i][j] == '0') {\n            return;\n        }\n        grid[i][j] = '0';\n        \n        dfs(grid, i - 1, j, m, n);\n        dfs(grid, i + 1, j, m, n);\n        dfs(grid, i, j - 1, m, n);\n        dfs(grid, i, j + 1, m, n);\n    }\n};\n","java":"class Solution {\n\n    public int numIslands(char[][] grid) {\n        int count = 0;\n        for (int i = 0; i < grid.length; i++) {\n            for (int j = 0; j < grid[0].length; j++) {\n                if (grid[i][j] == '1') {\n                    dfs(grid, i, j);\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n\n    public void dfs(char[][] grid, int i, int j) {\n        if (\n            i < 0 ||\n            j < 0 ||\n            i >= grid.length ||\n            j >= grid[0].length ||\n            grid[i][j] == '0'\n        ) {\n            return;\n        }\n        grid[i][j] = '0';\n        dfs(grid, i + 1, j);\n        dfs(grid, i, j + 1);\n        dfs(grid, i - 1, j);\n        dfs(grid, i, j - 1);\n    }\n}\n","csharp":"public class Solution {\n\n    public int NumIslands(char[][] grid) {\n        int count = 0;\n        for (int i = 0; i < grid.Length; i++) {\n            for (int j = 0; j < grid[0].Length; j++) {\n                if (grid[i][j] == '1') {\n                    Dfs(grid, i, j);\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n\n    public void Dfs(char[][] grid, int i, int j) {\n        if (\n            i < 0 ||\n            j < 0 ||\n            i >= grid.Length ||\n            j >= grid[0].Length ||\n            grid[i][j] == '0'\n        ) {\n            return;\n        }\n        grid[i][j] = '0';\n        Dfs(grid, i + 1, j);\n        Dfs(grid, i, j + 1);\n        Dfs(grid, i - 1, j);\n        Dfs(grid, i, j - 1);\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def numIslands(self, grid: List[List[str]]) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {character[][]} grid\n     * @return {number}\n     */\n    numIslands(grid) {}\n}\n","cpp":"class Solution {\npublic:\n    int numIslands(vector<vector<char>>& grid) {\n        \n    }\n};\n","java":"class Solution {\n    public int numIslands(char[][] grid) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int NumIslands(char[][] grid) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/pV2kpPD66nE","embedding":[-0.03150994,-0.0394851,0.06398517,0.007193735,-0.009928733,-0.016145684,-0.0148931,-0.008911728,0.011256012,0.018765766,-0.0105607705,-0.05120652,-0.011187063,0.0027507993,0.049505766,-0.014490894,-0.03760048,-0.0009825309,0.027901579,0.055803157,0.023454335,-0.02429322,0.039554052,-0.010296464,0.004280617,0.03909439,0.007475279,0.014743709,0.022891246,-0.010951485,0.03615254,0.0006902136,-0.016513415,-0.024316203,0.0051827068,0.002253788,0.007687873,0.025327463,-0.0075729573,-0.0035394095,0.009911496,-0.01937482,-0.0031142207,-0.010537787,-0.0019909178,0.007934943,0.012594782,-0.008049859,-0.010802094,0.020328622,0.028407209,0.028958805,-0.0061135255,-0.04589741,-0.049367867,-0.023902506,-0.057457946,0.029740233,0.012548815,0.006607664,0.03707187,-0.008503776,0.040795144,0.02971725,0.012824614,0.07791298,0.01627209,0.00061803206,-0.014847133,-0.014789675,-0.12318984,0.0023026273,0.035302162,-0.040933043,-0.0066478844,0.024017422,0.020064315,-0.036888003,0.018995598,-0.0013315879,0.02233965,-0.016237617,0.042909596,-0.042403966,0.024523051,-0.005366572,-0.003387146,0.009612715,-0.052171815,-0.035394095,-0.03585376,-0.014341503,-0.024316203,0.02624679,-0.008578472,-0.023695657,0.0744655,0.044702284,-0.037186783,0.028522125,-0.0082394695,-0.0041053705,0.0027077058,0.043047495,0.030245863,0.037002917,-0.00074838975,0.052769378,0.021822529,0.0075154994,-0.016398499,-0.0022394236,0.027878596,0.0063318657,0.034612667,0.01734081,-0.017674064,-0.024982715,0.037255734,-0.011663963,-0.016455956,-0.03167082,0.010715907,0.0074005835,-0.027602797,-0.015709003,0.001876002,-0.03831296,-0.009549511,0.01873129,0.01091701,0.0045161946,0.035738844,0.010681433,-0.025833093,0.0041542095,0.006320374,0.030981325,-0.006636393,0.027717713,0.008670405,0.03367036,0.020213706,0.0054412675,0.040289514,-0.029326536,-0.02422427,0.056952316,0.016651314,-0.0050160787,0.034107037,-0.018455492,0.025649227,0.029924098,0.00296483,-0.047896944,0.03918632,0.023385385,0.03180872,0.011169825,-0.030935358,-0.05373467,0.014192113,-0.008561234,-0.017605115,0.0063605946,-0.030912375,-0.016904129,-0.040565312,0.0015729113,0.010434363,-0.056952316,0.021627171,-0.04706955,-0.002884389,-0.015157406,-0.039898798,-0.009515036,-0.02530448,0.0029504655,-0.03831296,-0.015950326,-0.053183075,-0.023477318,0.039025437,0.02957935,0.048862237,-0.079843566,-0.021673137,0.015053982,0.010882535,-0.017651081,0.020661877,-0.0044156434,0.010710161,0.009859784,0.042702746,0.012479866,-0.044127703,0.017674064,-0.021776563,-0.016283583,-0.012215559,0.010353922,0.028453175,-0.029510401,-0.029027754,0.01539873,0.04366804,-0.028889855,0.0059986096,0.0014443492,-0.009032389,-0.025925025,0.015272322,0.031073257,0.020397572,0.02725805,0.013939298,0.027464898,-0.044288587,0.029303553,0.00540392,0.0296483,0.05263148,0.042036235,0.028591074,0.026660487,0.04996543,0.031486955,0.014238079,-0.009348408,0.03316473,-0.046311107,-0.0017969973,-0.037416615,0.0068432414,-0.008072842,-0.019685093,0.022316666,0.05212585,0.0075154994,0.01453686,-0.0187198,-0.018846206,-0.0023701403,-0.002839859,0.047391314,-0.0069581573,-0.004766137,0.007492516,0.031073257,0.013985264,-0.06600769,-0.030268846,0.03008498,0.004013438,-0.04780501,0.038795605,0.010273481,-0.021408832,0.03585376,-0.08839331,-0.08025726,0.0034474768,-0.0031745515,-0.027074184,0.056354754,-0.02631574,-0.016904129,-0.016421482,-0.025074648,0.0074867704,-0.04178342,0.018903665,-0.02769473,0.007412075,0.014651776,-0.027533848,-0.08214188,0.01684667,-0.0067225797,0.032222416,0.050654925,0.013054445,-0.019478245,-0.01153181,-0.011020434,-0.008980677,-0.054194335,-0.0029217366,0.009267967,-0.005676845,0.0545161,-0.008072842,-0.022684397,-0.041093923,-0.012456883,0.04401279,-0.04541476,0.03585376,-0.0043869144,-0.029119687,0.03240628,-0.07248895,-0.009572494,-0.018317593,-0.0034273665,0.018007321,0.0038008431,-0.03231435,-0.011916778,-0.015892869,0.055849124,-0.012732681,-0.06908744,-0.008802557,0.0017424122,0.023810573,0.013272786,-0.00726843,-0.0042633796,0.05856114,0.07929197,-0.023902506,-0.04097901,-0.013180853,0.005455632,-0.0030309067,-0.010802094,-0.02675242,0.0038985217,0.023190027,0.04387489,-0.06715685,-0.031555906,-0.01337621,0.009515036,-0.038772624,0.018007321,0.009365645,0.020581437,0.014467911,-0.0015973309,-0.004533432,0.036014643,0.018995598,0.022098327,0.026338723,-0.031280108,-0.0029059357,-0.01583541,-0.022385616,0.0026258281,-0.023121078,-0.0088829985,-0.011543302,0.017880913,-0.03217645,0.024844816,-0.042403966,0.0041312263,-0.017179927,-0.021879986,-0.026522588,0.03065956,-0.034865484,0.0023801955,0.023626707,0.05414837,0.0023816319,0.028430192,-0.036244474,-0.03440582,0.022891246,-0.026016958,0.007044344,0.011755896,-0.018846206,0.009859784,-0.030935358,0.045368794,-0.023534775,-0.023040637,0.029671283,0.021788053,-0.0112042995,-0.01634104,-0.064582735,-0.023247486,0.04086409,0.000046953915,0.0322454,-0.008480793,0.054424167,0.006458273,0.030912375,0.02776368,0.0018961122,0.028108427,0.0072569386,0.0033641628,-0.0024477085,-0.0015470552,-0.0056021498,-0.014444928,0.008831287,0.015571103,-0.013847365,-0.011405403,-0.04063426,-0.042197116,0.01683518,-0.0053033684,0.02125944,-0.0071822433,-0.06393921,0.008227978,0.0031257123,-0.0013409249,-0.013111903,0.050884757,0.026200823,-0.011974236,0.023258977,0.025557294,0.0008776701,-0.011709929,-0.008946203,-0.018765766,0.00968741,0.050792824,0.040519346,0.030843426,-0.0061077797,0.020133264,0.0494598,0.013146378,0.026913302,-0.0059181685,0.00029716533,-0.043116443,0.006912191,0.004375423,0.025925025,-0.027097167,0.06081349,0.0495977,0.051528286,-0.029441452,-0.007412075,-0.04502405,0.012548815,0.01662833,-0.004786247,-0.0106584495,0.014582827,0.01959316,-0.020776793,-0.003832445,-0.04136972,0.022385616,-0.029993048,0.0065904264,0.046609886,0.04097901,-0.030337796,0.0011793243,0.021581205,0.0067857835,-0.04679375,-0.0061192713,0.016042259,0.015490662,-0.03521023,0.033647373,-0.011031926,0.03254418,-0.008365877,-0.025902042,-0.029809183,-0.016743246,-0.025925025,-0.017536165,0.021822529,0.0030653814,-0.014812659,-0.024592001,-0.027671747,-0.0050275703,-0.05617089,0.009199018,-0.0034905702,-0.00961846,0.005375191,-0.007165006,-0.03746258,0.013904823,-0.031418007,0.0044960845,0.007992401,-0.028797923,-0.04019758,0.018156711,0.03217645,-0.015375746,-0.0058262357,-0.021282423,0.007222464,0.020776793,-0.01930587,0.036520272,0.009101339,-0.006268662,0.014950558,0.028407209,0.0017337935,-0.012813122,-0.0015973309,-0.021914462,-0.000118507014,-0.0161227,0.0010371159,-0.0046110004,0.045805477,-0.020995134,-0.033969138,-0.05865307,-0.051390387,0.016168667,-0.039898798,-0.008762337,0.012905055,0.058469206,-0.028453175,0.004613873,0.010273481,-0.00896344,0.009193271,-0.019110514,0.017972846,0.023006162,0.0072626844,-0.007957926,-0.029257586,0.008296927,0.02574116,-0.010802094,-0.024706917,-0.0006280872,0.00092794583,-0.03332561,-0.007073073,-0.03686502,-0.006848987,0.015433204,0.007165006,0.03808313,-0.007130531,0.043116443,-0.044334553,-0.022948705,0.003246374,-0.0014838515,0.023304943,0.03072851,-0.020190723,0.031211156,0.011393911,-0.00043847595,-0.009296696,-0.007670636,-0.010227514,-0.016720263,0.023155553,-0.014582827,-0.032429267,-0.03215347,-0.017225893,0.005791761,-0.017743014,-0.002061304,-0.004180066,0.01192827,-0.032268383,-0.0042202864,-0.011393911,0.007274176,0.03390019,-0.03737065,-0.018995598,0.026039941,0.018191187,-0.008475048,-0.02371864,-0.022925721,0.010244752,0.058882903,-0.0006812358,0.0020957787,0.013422176,0.009210509,0.006377832,0.004418516,-0.035807792,-0.023419859,0.018984105,0.037048884,0.010020666,-0.011192808,-0.034153003,-0.05272341,0.0023572124,-0.029993048,0.0032320095,-0.012836105,-0.0042432696,0.049367867,0.0344288,-0.019995365,0.0010026412,0.031969603,0.045368794,0.0070903106,-0.042426948,-0.020880219,-0.013904823,0.011411148,-0.025028681,0.015777953,-0.04339224,-0.015030999,-0.00023557758,-0.016536398,-0.009561002,0.01102618,-0.030016031,0.028223343,0.05313711,-0.023833556,0.03521023,-0.028614057,0.009227746,-0.042748712,0.04504703,0.025626244,0.02132839,-0.012594782,0.0029791945,0.0042202864,0.0078889765,-0.00048587876,0.008342894,-0.018202677,0.019570177,-0.0033986375,-0.014157638,-0.04982753,0.00022857489,0.005300496,-0.010009174,0.007274176,0.025833093,-0.015030999,-0.02009879,-0.030475695,-0.0018803113,0.008722116,0.035876743,0.0055561834,0.027097167,-0.00946907,0.017409759,0.0008798248,-0.022603957,0.022960195,0.00694092,-0.03514128,-0.033946157,-0.022466058,0.016559381,0.02270738,0.017260367,0.031280108,-0.017731523,0.00867615,-0.015180389,-0.00008443625,0.0007785552,-0.014467911,0.015456188,0.019432278,-0.024316203,0.007584449,0.01720291,-0.0026416292,0.021420322,0.00540392,-0.010773365,-0.087887675,-0.000457868,0.013422176,0.022937212,-0.0052487836,-0.017582132,-0.017076502,0.0030854917,-0.00037419487,0.023258977,0.011721421,0.04111691,-0.029970065,-0.030935358,0.008492284,-0.034497753,0.024109354,0.031027291,0.029050738,-0.014249571,-0.0325212,-0.008291182,0.005429776,-0.009756359,0.0019032945,0.02624679,0.013893331,-0.0022724618,-0.027028218,0.01438747,-0.033463508,0.0050160787,-0.010279227,0.043989804,0.011181316,0.014203604,-0.042266067,0.003947361,0.012020202,0.00066866685,-0.018685324,-0.062422313,0.031578887,0.031004308,0.00024311894,-0.011526064,0.030774476,-0.03534813,-0.0036543254,-0.06701895,0.017409759,-0.041622538,0.006624901,0.0144219445,-0.0056078956,-0.0009846856,0.046219174,-0.0070328526,-0.005337843,0.04424262,0.0013294333,0.013410685,0.0322454,0.0077683143,0.0019104767,0.057182148,-0.0043150918,-0.048172742,-0.001338052,0.0019578796,0.010727399,-0.011273249,-0.008739354,0.0014579954,-0.014559844,0.00990575,-0.054424167,-0.018306103,-0.014203604,-0.004447245,-0.027051201,-0.046357073,0.0062226956,0.007274176,0.030176913,0.004447245,-0.008658913,0.0348425,0.0073776003,0.028499141,-0.05047106,-0.023408368,0.009434595,-0.0067628003,0.0076246695,0.011347945,0.0009803763,-0.0052229273,-0.029418468,-0.00012497103,-0.0038985217,0.030383762,0.010388397,0.035899725,0.026062924,0.00011590345,0.014513877,0.0014723599,-0.013824382,-0.009509291,0.04366804,-0.00012802349,0.026338723,-0.017168434,0.020569945,0.04438052,0.003694546,0.0051108846,-0.0057773967,0.00940012,0.01778898,0.0047460264,-0.038129095,-0.024385152,-0.002990686,-0.03773838,0.016812196,0.01822566,0.016812196,0.006877716,0.01734081,0.009428849,0.014950558,-0.03123414,0.022075344,0.03578481,0.0066191554,0.022477549,-0.021052592,0.013238311,0.01410018,0.026453638,0.025511328,-0.0066995965,-0.011370928,-0.0424959,0.009664427,-0.016375516,-0.008877253,0.032084517,-0.0545161,0.0037836058,-0.0021029608,0.014341503,0.0010715907,0.020707844,0.018915156,-0.0011628052,0.022443075,0.013226819,-0.0059124227,0.004955748,0.00006329352,0.018926648,-0.010566517,0.011411148,0.010095362,-0.02675242,-0.0063893236,-0.022443075,-0.0055533107,0.00845781,0.010009174,-0.029924098,-0.009101339,-0.01778898,0.04555266,-0.020857235,-0.034015104,0.0034216207,0.0057027014,0.017432742,0.0025956628,-0.030039014,0.030199897,-0.03316473,-0.054654,0.034819517,0.012916546,0.0018616375,-0.013479634,0.0198115,-0.04033548,0.022063851,-0.037117835,0.00032230318,0.0085325055,0.021087067,-0.0144219445,0.05727408,0.0067513087,0.011893795,-0.022983178,0.013226819,0.0120431855,-0.030360779,-0.0039933273,-0.01713396,-0.004619619,0.005538946,-0.009664427,-0.014054214,-0.031969603,0.0073718545,-0.004628238,0.040818125,0.021845512,-0.0069236825,0.022454565,0.009641443,0.0035365366,-0.008521014,0.018248644,0.011054909,-0.0016116954,-0.0002842373,0.0118478285,-0.007136277,0.01539873,0.0054441406,0.0150654735,0.038634725,0.009727631,0.0070385984,0.0016332421,-0.0133877015,-0.012399425,-0.033463508,-0.012698206,0.0012856215,-0.007440804,-0.030843426,0.0030280338,-0.02284528,-0.0036514525,-0.026154857,-0.030958341,0.039209303,-0.009055372,0.027878596,0.015283814,0.0297862,0.0047747553,0.036129557,0.0038669198,-0.039393168,0.004757518,-0.014755201,-0.0037031646,-0.0011735786,-0.0062456788,-0.038657706,-0.032222416,-0.012330475,0.04201325,0.004872434,-0.00968741,0.011882303,0.016478939,0.0051080114,-0.05814744,0.032360315,0.008905982,-0.0072339554,0.014778184,-0.01634104,-0.001649043,-0.0066421386,0.0058377273,0.047896944,0.010129836,0.023247486,0.023431351,-0.038772624,0.017110977,-0.0024017422,-0.006906445,0.028062461,0.016938603,0.022753347,0.018099254,0.05626282,0.05221778,0.0086301835,0.002816876,-0.012709698,0.017628098,-0.008911728,0.04628812,0.0039674714,0.00031548005,-0.013100412,-0.02820036,0.06269811,-0.0045765257,-0.006716834,-0.049781565,0.008768083,-0.02176507,0.009675918,0.034221955,-0.04552968,-0.0075729573,0.034497753,-0.02682137,0.007521245,-0.023557758,0.004030675,0.021316899,-0.06614559,-0.045851443,0.009900005,-0.0037634955,-0.015594087,0.0010816458,-0.014548352,-0.047253415,-0.002170474,0.03029183,0.028453175,0.0069524115,0.0089232195,0.0057515404,0.005737176,0.036198508,-0.010353922,0.04663287,0.0122960005,0.019639127,-0.015214864,-0.013617533,0.010417126,0.0077970433,-0.008354385,0.008779574,0.0008554052,0.008647421,-0.014743709,-0.010037904,-0.038887538,-0.010583754,-0.013433668,0.01676623,-0.038381908,0.020432046,0.0015987674,-0.006377832,0.007865993,0.012951021,0.000060196176,-0.010095362,-0.014490894,-0.00316306,-0.0062226956,-0.009825309,-0.021822529,-0.030498678,0.019099021,-0.0085325055,-0.039393168,-0.0022035122,-0.02466095,0.0067915292,-0.0347046,-0.02574116,-0.007980909,-0.015869886,-0.040933043,-0.025580278,0.03022288,-0.000070385984,0.0080441125,-0.021948935,0.011129605,0.014019739,-0.027487881,0.019822992,0.0029188637,0.009503544,-0.026568554,-0.012629257,0.021994902,0.024408136,0.021569714,-0.026982252,-0.01922543,0.04063426,0.028039478,0.0069294283,-0.016088225,-0.00929095,-0.025465362,-0.009239238,-0.014088688,-0.03645132,-0.0058750752,-0.0024218524,-0.0022063851,0.019282887,-0.0030682543,-0.022879755,-0.030383762,0.012192576,0.0007347435,0.047759045,-0.010388397,-0.058882903,0.02762578,-0.033624392,0.007279922,0.0049787313,0.0025597515,-0.035692878,0.011480098,0.044587366,-0.014985032,-0.001789815,0.025373429,0.012537324,-0.00033954057,0.027074184,-0.0129395295,-0.058974836,-0.029165654,-0.026131874,0.008974931,0.021638663,-0.029234603,-0.03707187,0.024614984,0.0052171815,-0.022236226,-0.01308892,0.0024017422,-0.012250034,0.01185932,0.0055820397,0.034520734,0.05171215,0.020638894,-0.01258329,-0.013801399,0.040956024,0.016881146,0.027487881,-0.010089615,0.032774013,-0.021857003,-0.011485844,-0.047850978,0.024316203,-0.022167277,-0.029050738,0.011617997,-0.009492053,0.006458273,-0.008492284,-0.0014098744,0.016789213,-0.014881608,0.011503081,0.01792688,0.014720726,-0.002263843,0.022925721,0.037761364,0.006441036,0.041323755,-0.014042722,0.0008173393,0.030268846,-0.017915389,-0.008049859,0.011824845,-0.0014795421,-0.01561707,-0.021121541,0.002324174,-0.030360779,0.030544644,0.00047295072,0.00033720632,-0.02530448,0.0075097536,-0.00863593,0.0013215328,-0.0036141048,-0.024959732,-0.02682137,0.004088133,-0.029625317,0.0002481465,-0.014502386,-0.028430192,0.033440527,-0.028614057,0.0015743477,0.027487881,-0.04677077,-0.021293916,-0.0013789907,0.024821833,-0.016364023,-0.027970528,-0.06577786,-0.030061997,-0.053275008,-0.006159492,0.02060442,-0.027166117,-0.0016964459,0.017938372,0.012502849,0.024959732,-0.007900468,0.01843251,-0.03116519,0.008273944,0.052769378,-0.009170288,0.007613178,-0.029487418,-0.039944764,-0.005653862,0.00694092,0.0069811405,-0.011152588,0.005823363,-0.0033497983,0.01980001,-0.020133264,-0.032774013,0.033210695,-0.037416615,-0.023902506,0.014996524,0.010595245,-0.015869886,0.044633333,0.022316666,-0.0072052265,0.016007785,0.019478245,0.024569018,-0.020857235,-0.01185932,0.00026466566,0.0042633796,0.00096385705,0.004780501,-0.037508547,0.003582503,-0.006803021,-0.008216486,0.012112135,0.01763959,0.013445159,-0.039531067,0.02306362,-0.012008711,-0.030682543,-0.017432742,0.014594318,0.028154394,0.010773365,0.019903433,0.00795218,-0.011347945,0.007027107,0.026568554,-0.0002686159,0.0146747595,0.018329086,0.0011649599,-0.008992169,-0.0043553123,0.004904036,0.038657706,-0.024201287,0.019995365,-0.007900468,-0.028039478,0.0097218845,0.023465825,0.009882767,0.013318752,0.017306333,0.012962513,0.010474584,-0.057457946,-0.0344288,-0.011181316,-0.00726843,0.0023055002,-0.018386543,0.0111066215,0.013295769,-0.006630647,-0.008216486,0.0069581573,0.02364969,-0.011801862,0.012560307,0.00015396935,-0.008159028,0.0077855517,-0.05502173,0.00008250602,-0.016570872,0.00016994984,-0.010623975,-0.029119687,0.044334553,-0.029855149,-0.014651776,-0.044058755,-0.02581011,0.05640072,-0.0029705758,0.030981325,0.012089152,0.025488345,0.0027709096,-0.010486076,-0.031211156,-0.015226356,-0.014962049,0.025120614,0.055343494,0.0056136413,0.029188637,-0.054102402,-0.05024123,-0.014732217,-0.00025658566,0.023948472,-0.0061939666,0.052079882,0.048172742,-0.014916083,-0.038060144,0.009911496,-0.0014522496,-0.01236495,0.04743728,0.030958341,0.015008016,-0.030268846,0.037531532,-0.06347954,-0.0065616975,0.00777406,0.0039645983,0.01785793,0.024637967,-0.0075384825,-0.00020092326,0.014042722,-0.0031860431,0.0063663404,-0.023419859,0.006406561,-0.0059986096,-0.037508547,0.02820036,-0.039140355,-0.06288198,-0.038933504,0.04279468,-0.037761364,-0.018616375,-0.03167082,-0.011359436,-0.0038381908,0.014490894,0.013502617,0.022925721,-0.012330475,-0.0005009615,0.021719104,0.0044673556,-0.034451786,-0.010497567,-0.03606061,0.0136635,-0.001440758,0.0071477685,0.017697047,0.033210695,0.011250266,-0.012606273,0.0057285572,0.038289975,0.038129095,0.013525601,-0.036037624,0.005786015,-0.021385849,0.017145451,0.018765766,-0.0036313422,0.019041564,0.07423567,-0.021489272,-0.038772624,-0.008193503,-0.0025812984,-0.02928057,-0.01207766,-0.013720958,-0.022178767,0.012261526,-0.00990575,-0.018662341,-0.034474768,0.021454798,-0.024523051,0.01923692,0.02335091,-0.010951485,-0.028108427,-0.022167277,-0.017237384,0.036819052,-0.011732913,0.035991658,0.0031659328,0.004702933,0.036106575,0.012158101,0.025833093,-0.034980398,0.008003892,-0.057503913,0.0050275703,-0.001113966,0.043070477,0.027074184,-0.021788053,0.020489505,0.015341272,-0.050425094,0.031418007,-0.011623743,-0.010399888,-0.01634104,-0.025879059,-0.029878132,0.0131348865,0.039393168,0.036520272,0.008446318,0.0029131179,-0.0032262637,0.006711088,-0.0068374956,-0.02820036,0.02574116,-0.011526064,0.019558685,-0.031785738,-0.0010600991,-0.024592001,0.016973078,-0.00054225937,-0.01973106,0.0019162225,0.0048264675,0.016432973,-0.009313934,-0.01684667,-0.05171215,0.038726658,-0.026959268,0.05805551,0.0077338396,0.010394143,-0.026223807,0.04743728,-0.011198554,-0.003079746,0.005814744,-0.007492516,0.015490662,0.012135118,-0.0035336637,0.010509059,0.025120614,-0.0095667485,0.010572262,0.0323833,0.027878596,0.052447613,-0.01627209,0.019397803,0.0037146562,-0.007998146,-0.009061119,-0.031004308,0.0063031367,0.036819052,-0.025350446,0.013743941,0.0068949535,0.0018946758,-0.0108538065,0.013697974,-0.029188637,0.041622538,0.024936749,0.035830777,0.050149295,0.0196736,0.0029763216,-0.018110745,0.04589741,0.002339975,0.022810806,0.030820442,-0.011870812,0.015582595,-0.037899263,0.011434131,0.010118345,-0.02661452,0.0045506693,0.026568554]},{"id":"climbing-stairs","name":"Climbing Stairs","description":"You are given an integer `n` representing the number of steps to reach the top of a staircase. You can climb with either `1` or `2` steps at a time.\n    \nReturn the number of distinct ways to climb to the top of the staircase.   \n\n**Example 1:**\n\n```java\nInput: n = 2\n\nOutput: 2\n```\n\nExplanation:\n1. `1 + 1 = 2`\n2. `2 = 2`\n\n**Example 2:**\n\n```java\nInput: n = 3\n\nOutput: 3\n```\n\nExplanation:\n1. `1 + 1 + 1 = 3`\n2. `1 + 2 = 3`\n3. `2 + 1 = 3`\n\n**Constraints:**\n* `1 <= n <= 30`\n","difficulty":"Easy","concepts":["Fibonacci Sequence","Tree Maze","1-Dimension DP"],"solutions":{"python":"class Solution:\n    def climbStairs(self, n: int) -> int:\n        if n <= 3:\n            return n\n        n1, n2 = 2, 3\n\n        for i in range(4, n + 1):\n            temp = n1 + n2\n            n1 = n2\n            n2 = temp\n        return n2\n","javascript":"class Solution {\n    /**\n     * @param {number} n\n     * @return {number}\n     */\n    climbStairs(n) {\n        if (n <= 3) {\n            return n;\n        }\n        let n1 = 2;\n            let n2 = 3;\n        for (let i = 4; i <= n; i++) {\n            const temp = n1 + n2;\n            n1 = n2;\n            n2 = temp;\n        }\n        return n2;\n    }\n}\n","cpp":"class Solution {\npublic:\n    int climbStairs(int n) {\n        if (n == 1) {\n            return 1;\n        }\n        if (n == 2) {\n            return 2;\n        }\n        \n        int first = 1;\n        int second = 2;\n        \n        int result = 0;\n        \n        for (int i = 2; i < n; i++) {\n            result = first + second;\n            first = second;\n            second = result;\n        }\n        \n        return result;\n    }\n};\n","java":"class Solution {\n    public int climbStairs(int n) {\n        int a = 1;\n        int b = 1;\n\n        for (int i = 0; i < n - 1; i++) {\n            int temp = a + b;\n            a = b;\n            b = temp;\n        }\n        return b;\n    }\n}\n","csharp":"public class Solution {\n    public int ClimbStairs(int n) {     \n        int one = 1;\n        int two = 1;\n        \n        for(int i = 0; i < n - 1; i++) {\n            int temp = one;\n            one = one + two;\n            two = temp;\n        }\n        \n        return one;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def climbStairs(self, n: int) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number} n\n     * @return {number}\n     */\n    climbStairs(n) {}\n}\n","cpp":"class Solution {\npublic:\n    int climbStairs(int n) {\n        \n    }\n};\n","java":"class Solution {\n    public int climbStairs(int n) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int ClimbStairs(int n) {     \n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/Y0lT9Fck7qI","embedding":[-0.00981533,-0.05774083,0.029400147,-0.07782991,0.0074366275,0.029685387,-0.01597347,0.00085381145,-0.04653495,0.009443498,-0.026384749,-0.04922436,-0.070169166,-0.02658849,-0.02314523,0.0008576316,0.021291167,-0.040137414,0.009677803,0.03757025,0.027220095,0.009193913,0.03885383,-0.042949073,0.06291591,-0.0001983313,-0.00024592443,-0.032354426,0.027220095,-0.015841035,0.02347122,-0.020068707,-0.047146183,0.009988512,0.03261929,-0.019202799,-0.02658849,-0.003557866,0.002570985,-0.030989345,0.016839378,-0.015168683,-0.026853357,-0.019915901,0.0065452512,-0.019457478,-0.012122721,0.022534,-0.0123468395,0.03168207,-0.00405449,-0.023919454,0.0057506524,-0.00061632326,-0.035756934,-0.059656017,-0.014170341,-0.01435371,-0.010054728,0.037875865,0.035960678,-0.038996454,-0.0025149554,0.00009447,0.026140256,0.014312961,0.039892923,0.026873732,-0.0013077768,0.0086641805,-0.043967787,0.043356556,-0.0079714535,-0.013579486,-0.02440844,-0.0048847436,-0.031070841,-0.002429638,0.0338825,0.019263921,-0.014700074,-0.042460088,0.01715518,0.0070749833,0.019498227,-0.033067524,0.010696519,-0.023776835,-0.021454161,-0.117519096,-0.008404408,0.033352766,-0.004637705,0.031906188,0.028809292,0.0062141684,0.052973237,0.01862213,-0.008587777,0.000762127,0.01665601,-0.018010901,0.026955228,0.011042883,0.0021698654,0.037529502,-0.027973944,0.0118374815,-0.05199527,0.018347077,-0.0053227916,-0.0023048453,-0.01399716,-0.0077422424,0.03807961,-0.01270339,0.009912108,-0.03638854,0.00226537,-0.015769726,0.052688,-0.02931865,0.003944978,-0.02024189,-0.03818148,-0.007701494,-0.001077929,-0.042867575,-0.0012415603,0.033862125,-0.013172,-0.015219619,0.06169345,0.007090264,-0.025141913,-0.036286667,0.015372426,-0.012458898,0.030276243,0.05985976,-0.007986735,-0.015627105,-0.032150682,-0.02508079,0.024000952,0.009356908,0.016788442,0.019009244,-0.025203036,0.036042176,0.017746035,0.020119643,0.04897987,0.027118223,-0.011226252,-0.008597964,0.023247102,-0.01682919,0.04600522,0.016279083,-0.009020731,-0.054603186,-0.023776835,-0.037223887,0.0140175335,0.037651747,-0.0046733604,-0.022146888,-0.013874914,0.012520021,0.028035067,-0.024388064,0.022819242,0.01413978,0.049346607,-0.017572854,-0.01571879,-0.024062075,-0.058759548,0.010416373,-0.035369825,0.00418947,-0.037223887,-0.03437148,0.038487095,-0.009407843,-0.017674726,-0.016319832,0.0054959734,0.035451323,0.017776595,-0.008623432,-0.0077728042,-0.0002231625,-0.008623432,-0.0248363,0.036042176,-0.02946127,0.019864965,0.0028345776,-0.044334527,-0.0028702326,0.01981403,0.018031275,0.04266383,-0.03143758,-0.045393992,0.0045103654,0.021719027,-0.0140175335,0.018092398,-0.0004998076,0.021698654,-0.025243785,-0.024143573,0.02314523,0.00953009,-0.027831325,0.01374248,0.07008767,-0.03557357,-0.00023016617,-0.015433549,0.02950202,0.047961157,-0.0062956656,0.009336533,0.002551884,0.056640618,0.018428575,-0.013823978,-0.00884755,0.017919216,0.026934855,-0.0068763336,0.00083343714,-0.0008875564,-0.020659562,-0.027627582,0.019651035,-0.008526654,0.011888417,0.016778255,0.017562665,0.027688704,-0.026201379,-0.059778262,0.009036012,-0.052239764,0.046494205,0.01597347,-0.010951199,-0.0001174707,-0.06250842,-0.03261929,0.046086717,0.043397307,-0.013630422,0.025569774,-0.025773518,0.015433549,-0.0006510233,-0.026894106,-0.07852264,-0.02691448,-0.047268428,-0.020791996,0.0112364385,0.015871597,0.015290929,-0.0007901417,-0.002478027,-0.00638735,-0.026242128,0.022228386,-0.005771027,0.06128596,0.02224876,-0.014475957,-0.03176357,-0.049346607,0.014251838,0.034106616,-0.026445871,0.0044517894,0.003305734,0.038385224,0.006097016,0.023063732,-0.040422656,-0.049509604,-0.0118374815,-0.035960678,0.030520735,-0.023226727,0.014048096,-0.012377401,0.0435603,0.070169166,-0.02748496,-0.023410097,-0.031172713,0.013497989,0.058759548,-0.028075816,-0.04119688,-0.000103304184,0.023226727,0.023878707,0.026405122,-0.0050706593,0.045516238,-0.00947406,0.037223887,0.0012803988,-0.06389388,-0.026649613,-0.022187637,-0.0038813085,0.011827294,0.032558165,-0.024877047,0.053421475,0.025977261,0.02375646,0.009830611,0.009423125,0.060307994,-0.0026766767,-0.039200198,-0.03153945,-0.0571296,-0.016014218,-0.009367094,-0.0016554137,0.026262501,0.053299226,-0.0020820012,0.028157314,0.0526065,-0.0012218227,-0.05378821,0.009056387,0.0376925,-0.0035858809,0.032252554,-0.0035425853,-0.02748496,0.03600143,0.02931865,-0.0001902134,0.032741535,0.05048757,0.009565745,-0.02748496,0.038303725,-0.045149498,0.021739403,-0.024204696,0.020842932,-0.031967312,-0.020629002,-0.016289271,0.02120967,-0.0010581914,0.04718693,0.014700074,-0.03304715,0.03412699,0.013640609,-0.010839139,0.018326703,0.017735848,-0.015117748,-0.01758304,0.00082325,-0.012621893,0.026669988,0.025325283,0.008409502,-0.060837727,0.011175316,0.010523338,-0.0014402099,-0.0025416967,0.03186544,0.021596782,0.00411816,-0.045475487,-0.0338825,0.018153522,-0.030989345,0.07135088,0.018866623,-0.028462928,-0.050120834,0.069924675,0.009514809,-0.008801707,0.017746035,0.002027245,-0.019426916,0.010737268,-0.01970197,-0.019335233,-0.06988393,-0.0027097848,-0.007278727,-0.004169096,-0.016737506,-0.02059844,-0.0024920343,0.0061275773,-0.041522868,-0.0101566,-0.0052514817,-0.021107798,0.009112416,0.006158139,0.012153284,-0.027220095,-0.03290453,0.038588967,-0.036449663,0.03742763,-0.0034025118,-0.0064943153,-0.02917603,0.05056907,0.04019854,0.050609816,0.04331581,-0.04804265,0.037366506,-0.040137414,0.05142479,-0.0022640966,-0.004321903,0.024286192,0.0050833933,-0.016370768,-0.05900404,0.01883606,-0.0133248065,-0.006861053,0.009148071,-0.042623084,0.027607206,-0.011022508,0.0033668568,-0.013854539,0.0010123492,0.016676383,-0.016839378,-0.037712872,-0.0029186218,0.023165604,-0.0035247577,0.028850041,-0.026832983,-0.01934542,0.018510072,-0.01833689,-0.014801946,0.024082448,-0.021311542,-0.025427155,0.019661222,0.026384749,-0.07245109,0.022371005,-0.0146185765,-0.023960203,-0.011847668,-0.018173896,0.023736086,0.016788442,0.070169166,-0.05472543,0.010141319,-0.019752905,0.024530685,0.038385224,-0.009270317,0.0081548225,-0.012591331,0.031070841,-0.03642929,-0.0004170369,0.02314523,0.027546084,-0.0024793004,-0.0015013329,-0.005964583,-0.019151863,0.021678278,0.009142977,-0.020985553,-0.028911164,0.014068469,-0.020129832,-0.020791996,-0.02436769,0.023389721,0.022289509,-0.06389388,0.0073653175,0.0019368341,0.02781095,0.005674249,-0.049754094,-0.012611706,0.025243785,-0.017756222,0.009387469,0.009805143,-0.021270793,-0.00082834356,0.01098176,-0.0005064929,-0.024978919,-0.015922533,0.0030765226,0.024734428,0.0013523457,-0.026323624,-0.020924428,-0.041889608,-0.009535183,0.005694623,-0.039139073,-0.013966598,0.0043422775,0.01923336,-0.04474201,0.019202799,0.023022985,0.01739967,-0.02135229,-0.016085528,0.024958545,0.053013988,-0.039465062,0.030520735,-0.03331202,0.0010645584,-0.0041843764,0.048613135,-0.011379059,0.014669512,0.0025506106,-0.042908322,-0.022758119,-0.033597257,-0.007457002,-0.026608866,0.00549088,0.02781095,0.028014693,0.03512533,0.008760959,-0.009647242,0.015341865,0.0042786077,0.045312494,-0.016768068,-0.0055316286,0.011572615,0.0063364143,-0.0036189891,0.031417206,0.012795075,-0.009642148,-0.0436418,0.00045364702,-0.0322933,0.011531866,0.0026028196,0.018632319,0.00047083787,0.0003922057,-0.058718797,0.0037590624,-0.03125421,0.013722106,-0.006193794,0.022106139,-0.022085765,0.017684912,-0.043275062,-0.011216065,0.0008932867,0.03373988,-0.011277188,-0.024021326,-0.0031045375,-0.049265113,0.01963066,-0.0016350393,-0.009968137,0.030622607,0.019528788,0.014924191,0.007788085,-0.0048006997,-0.009667616,-0.005307511,0.043764044,-0.006570719,0.019243548,-0.0007882316,0.01029922,-0.00062682875,-0.0037106734,0.0017700193,-0.045801476,0.025345657,0.0060053314,0.0004743397,-0.011154941,0.02526416,0.03331202,0.040402282,0.03426961,-0.008567402,0.009173539,-0.03286378,0.0042556864,0.00480834,0.025610523,-0.014628763,0.032741535,-0.03907795,-0.03233405,-0.020761434,0.012458898,0.014221277,-0.011185503,-0.04209335,0.0013090502,0.029298276,0.013121064,-0.01600403,-0.012316278,-0.0043295436,0.06580906,-0.03347501,-0.00024783454,-0.018795313,-0.02461218,0.028198062,0.029277902,0.0015930174,-0.023919454,0.011776359,0.03600143,-0.06678703,-0.03129496,-0.008597964,0.009448592,-0.012509834,-0.00052432047,0.0026155536,0.03962806,-0.014119405,-0.016268896,0.015474298,0.013487802,0.028646298,-0.008103887,0.020160392,0.015280742,0.016981998,-0.015871597,-0.008837363,0.018347077,0.015168683,0.00087545917,-0.027444212,-0.010686332,0.0036648312,0.01112438,-0.0047421237,0.04036153,0.03710164,-0.010416373,-0.023104481,-0.010268658,-0.02870742,0.004031569,-0.007665839,-0.0064994087,-0.035797685,0.011959727,0.029440897,-0.0024487388,0.01546411,0.06360863,-0.013365556,-0.057007354,0.011368872,-0.014720448,-0.009922295,0.011205877,-0.0151279345,-0.0059951446,-0.010350156,0.022574749,0.0069782054,-0.019416729,-0.008939234,-0.015953094,-0.017746035,0.008964702,-0.059452273,0.028544426,-0.004212391,0.003692846,0.017898843,-0.016085528,0.005147063,0.0024563794,0.008414595,0.011093819,-0.010431653,0.0029135281,-0.039892923,0.014425021,0.025671646,0.010472402,0.009504622,0.00018161799,-0.021454161,-0.0043066223,-0.006463754,-0.011399433,-0.053054735,0.006463754,0.016523575,-0.014231464,-0.016676383,-0.012316278,0.015117748,-0.0002175914,0.00918882,-0.025304908,-0.032741535,-0.0023748819,-0.03304715,-0.00095886656,-0.020089082,0.0021838727,0.014985315,-0.059126284,-0.014842694,0.008292349,-0.034208488,-0.0040137414,0.016961623,-0.035838433,0.01812296,-0.018632319,0.022880364,-0.032354426,0.014374085,0.035043836,0.00018909918,-0.00096013997,0.0070291413,0.044334527,-0.018102586,-0.02285999,0.02451031,-0.012937695,-0.022350632,0.013732294,0.0028727795,-0.02153566,0.018010901,-0.030989345,-0.01762379,0.031661697,0.022574749,0.007176855,0.0061122966,0.017236676,-0.0007608536,0.016849564,0.025243785,-0.039240945,-0.048001904,-0.004907665,-0.01808221,-0.010263565,0.006764275,-0.0029542767,-0.01826558,-0.029053783,0.0038813085,-0.038140733,0.049142867,-0.008144636,0.0056538745,-0.026262501,-0.010390905,0.040259663,-0.009468966,0.0064230054,-0.009850985,0.022452503,0.011348498,0.056029387,-0.014190716,0.009927388,-0.00074238935,-0.010676145,-0.024856674,0.016116088,-0.006835585,0.0055214413,-0.02153566,-0.020180766,-0.024591807,0.003547679,0.016676383,-0.0021393038,0.022085765,-0.018683253,0.022045016,0.039668806,0.0048847436,-0.023308225,-0.042174846,0.021678278,-0.014333336,0.023797208,-0.0012396502,0.008338192,-0.0066725905,0.03710164,-0.004581676,0.012947882,-0.009657429,-0.009122603,-0.026486618,0.03469747,-0.013345181,0.016319832,0.036082923,-0.053013988,-0.014628763,0.03261929,0.024917796,-0.027709078,-0.019946462,-0.016503202,0.033352766,0.026364373,-0.023980578,0.00028619557,0.03017437,0.038303725,-0.0092041,-0.02997063,-0.0060868287,0.03993367,-0.019661222,-0.023369348,-0.03836485,-0.0028651392,-0.005923834,0.008867924,-0.025325283,0.024062075,0.04629046,-0.007961267,0.006631842,-0.012367214,0.024347315,-0.031661697,0.016696757,-0.0038532938,-0.006147952,0.029339025,-0.021882022,-0.03563469,-0.030276243,-0.005816869,-0.0033872311,-0.029726136,0.028259186,-0.016279083,0.03200806,-0.026853357,-0.006331321,0.007808459,0.037366506,-0.04653495,0.04123763,-0.01711443,0.044579018,-0.01644208,0.039322443,0.00699858,0.012866384,-0.02978726,-0.0060613607,0.0021800525,-0.032537792,-0.015301116,0.01779697,-0.009738926,0.0126728285,0.030194746,0.07139163,0.00044536995,-0.011042883,0.014975127,0.0074671893,-0.0037106734,0.029400147,-0.0108187655,0.00022284416,-0.023450846,0.006153045,-0.0068916148,-0.00025388316,0.006738807,0.04482351,0.0218209,0.03616442,0.021005927,-0.022554375,0.009555557,-0.030194746,-0.026181005,-0.013304433,0.009356908,0.036225546,0.019722344,-0.029481644,-0.009433311,-0.022574749,-0.033067524,0.02512154,0.014425021,0.049509604,-0.027199721,0.026731111,0.020588253,0.034147363,-0.03290453,0.019253734,-0.028361056,-0.04148212,-0.033760253,-0.009142977,0.023369348,-0.023837958,0.023980578,0.024306567,-0.033495385,0.03960768,0.0018846248,0.0135998605,0.038242605,0.04078939,0.029889131,0.043804795,-0.052199014,-0.012866384,0.01758304,-0.021637531,0.030602232,0.052402757,-0.0015751898,0.015953094,-0.00439576,0.007828834,-0.01413978,0.017053308,0.03270079,-0.0172978,0.011063257,0.014241652,0.02734234,0.015117748,-0.0070546092,-0.016340207,0.017766409,0.015494673,0.024102824,0.04441602,-0.03082635,-0.02616063,-0.00009470876,-0.0021061955,0.03017437,-0.035451323,-0.01934542,-0.022146888,-0.05203602,0.037529502,-0.0033948715,-0.0033490292,-0.052810244,0.032395173,0.025019668,-0.018092398,0.0011441455,-0.0077982717,-0.0024207241,-0.017246865,0.014262026,0.005658968,0.014119405,0.034534477,0.0036775651,-0.01413978,-0.0496726,-0.01159299,-0.008837363,-0.009963044,0.018398013,-0.0063415077,0.015504859,0.0004405947,0.015494673,-0.024265818,0.007604716,0.0070597026,0.031478327,0.008226133,-0.025753144,0.005852524,0.03732576,0.031457953,-0.015494673,-0.007635277,-0.017858094,-0.0007952353,0.013436866,-0.009667616,0.015688227,-0.020211328,-0.003596068,-0.02997063,0.0081548225,-0.0025060417,0.040218912,-0.03732576,0.045842227,-0.03398437,-0.018418387,-0.004428868,-0.015392801,0.022656247,0.02512154,-0.011267,0.0054603186,0.013569299,-0.019854777,-0.011256813,0.0048159803,-0.0009225748,0.0203132,0.017633976,-0.0016961624,-0.022228386,-0.03406587,0.0047675916,-0.004882197,-0.022798866,0.032089557,-0.017307987,-0.029889131,-0.022269135,-0.025386406,-0.0111447545,-0.000048389014,0.013233122,-0.004433962,-0.019538974,-0.014842694,0.019121302,0.014129593,-0.008725303,0.022085765,-0.046453454,-0.002229715,-0.0049127587,0.0025429702,0.0020157846,0.008103887,0.0144352075,-0.0043295436,-0.014384272,0.02149491,-0.01980384,-0.010390905,0.01887681,0.03710164,0.04123763,-0.034717847,-0.012010663,-0.015494673,-0.022350632,0.0071462938,-0.01413978,-0.06633879,0.040341157,-0.022350632,-0.0066012805,0.013161812,-0.015830848,-0.03416774,0.0013434319,-0.00205526,-0.0072328844,0.0026639428,0.0062956656,-0.027179345,-0.026975604,0.009127696,-0.03844635,-0.013630422,0.0068304916,0.021637531,0.006835585,0.004933133,0.023552718,-0.06731676,-0.039750304,-0.042011853,-0.0069782054,0.015698416,0.0016987091,-0.040830143,0.0039169635,0.013660983,-0.034147363,-0.037448004,-0.005210733,0.018041462,0.033801,-0.005674249,0.003512024,0.03481972,0.026181005,-0.04180811,-0.011297562,0.026792234,0.04991709,0.01187823,0.0041003325,0.018398013,-0.014822319,0.010890075,-0.025488278,-0.020109456,-0.03233405,-0.02361384,-0.00036514606,-0.030052125,-0.0075945286,0.030561484,0.0015064265,-0.033902872,0.044619765,0.02059844,-0.014588015,0.026853357,0.0037310477,-0.00012829456,0.052891742,-0.00089774356,0.021087423,-0.012458898,-0.0022437223,0.030887473,0.022146888,-0.012224593,-0.009942669,0.007849208,-0.0050350046,-0.014649138,0.024123197,-0.02296186,0.013141438,0.026506994,0.0126728285,0.018724002,-0.007951079,-0.015891971,-0.0353087,0.013039567,0.004298982,-0.027016351,0.007192136,0.028890789,-0.01352855,-0.034473352,-0.022350632,0.015423362,-0.014863068,0.015290929,-0.00014596291,-0.024000952,-0.025060417,-0.019223174,0.05448094,-0.016768068,0.0007933252,-0.025141913,0.044701263,-0.050365325,-0.016890313,-0.0070749833,-0.017073682,-0.007864488,0.014985315,0.03812036,0.007849208,-0.012876572,0.029848382,-0.016554138,0.013039567,0.03261929,-0.007421347,0.010533525,-0.044701263,0.0019330138,-0.03767212,0.051791526,0.034208488,0.009423125,-0.016839378,0.010849327,0.01614665,0.024163947,-0.024306567,0.03616442,-0.018795313,-0.009907015,0.002046346,-0.041971106,0.0007996922,0.04840939,-0.009102228,-0.029053783,0.01220422,-0.021698654,0.05056907,-0.0065299706,-0.008832268,0.0006172783,0.012591331,-0.0013867273,-0.003084163,-0.01826558,-0.031702444,-0.033434264,0.008923953,-0.037488755,0.0062701977,0.005378821,-0.018673066,0.03125421,-0.02766833,-0.027321966,-0.02823881,-0.034778967,0.01374248,-0.014669512,0.056681365,0.044986505,0.0007729509,0.0071004513,0.011817107,0.009738926,0.018224832,0.024999294,0.02950202,-0.022106139,0.0144352075,0.030092875,0.03347501,-0.031702444,0.030581858,0.0036750184,-0.042011853,-0.008964702,0.045027252,-0.0002082001,0.03153945,0.020985553,0.032395173,0.016482826,-0.01694125,-0.0086641805,-0.024163947,-0.0023570545,0.0035323983,-0.0016847018,0.015433549,0.0172978,0.014333336,0.0019088193,0.0012262795,0.05175078,-0.022472877,-0.010070009,0.023715712,0.021005927,0.013039567,-0.014414833,-0.014037908,-0.026832983,-0.000953773,0.013009005,0.012244968,0.047146183,-0.032150682,0.02224876,-0.0105437115,0.00094485923,0.03950581,-0.029807635,0.0123468395,0.0023939828,-0.023532342,-0.015779912,-0.014761196,-0.04005592,-0.0075741545,-0.014608389,0.030704103,-0.0009015638,0.004607144,-0.0136915445,-0.015637292,-0.0020539863,-0.031743195,-0.033841748,-0.025284534,-0.005261669,0.02009927,0.019661222,-0.056070134,-0.054154947,0.008521561,-0.0033006403,-0.008419689,0.02842218,0.0030918035,0.005964583,0.018173896,0.0025378766,-0.012183845,-0.018795313,-0.016717132,0.009570838,-0.0028447649,-0.010360343,-0.021882022,-0.018815687,0.008786427,0.0070546092,-0.008129355,-0.045801476,0.01187823,-0.013844352,-0.0051088613,0.009367094,-0.0012727585,-0.0029313557,-0.02375646,0.019212985,-0.013895288,0.02196352,0.01098176,0.014659325,0.011440182,-0.0059543955,0.013854539,0.02583464,-0.016452266,0.006433192,0.0070749833,-0.01263208,0.017644163,-0.0031885814,-0.02389908,-0.0028142033,-0.004370292,-0.011440182,0.011368872,0.022065392,0.0059594894,0.03194694,0.009978324,0.039913297,-0.0033133742,0.0024423718,-0.020038147,0.008760959,-0.005287137,0.028483303,0.024714053,-0.005091034,0.020333573,-0.015810475,-0.036796026,-0.016156837,-0.0045867693,0.007589435,-0.001791667,-0.03812036,-0.0012409235,-0.004097786,-0.039913297,-0.020394696,-0.008460437,-0.0029058878,0.0039984607,-0.035899557,-0.026405122,0.011429995,-0.010635396,-0.050406072,-0.004334637,-0.032354426,0.009030919,-0.036408912,0.042786077,0.012336652,-0.023837958,0.06161195,0.0017611055,0.04172661,-0.005877992,0.006331321,-0.019437104,0.02296186,-0.0024563794,0.030887473,0.002368515,-0.009932483,0.042582333,0.02630325,-0.01593272,0.012896946,0.0042811544,-0.0059696767,0.0086641805,-0.0055214413,-0.045068,-0.0018196817,-0.016116088,0.031478327,0.024469562,-0.011297562,0.018143333,-0.014649138,0.007360224,-0.019243548,0.021311542,0.046657197,0.029807635,0.007421347,-0.0054093827,-0.044008538,0.02781095,0.011154941,-0.005658968,0.020211328,0.00091811793,0.017257052,-0.020466007,-0.018917559,-0.02045582,0.012295904,0.007864488,0.07277708,0.0065910933,0.05496992,-0.0073092883,0.030194746,-0.009341626,0.0022921113,-0.016370768,-0.005175078,0.05765933,0.0018566102,-0.01029922,0.023104481,0.039994795,0.02479555,0.0095912125,0.016065152,0.018061837,-0.0006491132,0.03549207,0.022900738,-0.009560651,-0.044130784,-0.024041701,-0.038242605,0.007253259,0.017521918,0.00012527025,-0.01909074,-0.020516943,-0.021454161,0.023919454,0.0063466015,-0.005867805,0.023797208,0.02347122,0.027321966,0.005019724,-0.00046669933,0.042337842,-0.003341389,0.015382613,-0.00024067168,0.016584698,-0.052076768,-0.06788724,0.006097016,-0.0018056743,0.014547266,0.04298982,-0.0030026657,-0.012866384,0.024571434]},{"id":"count-paths","name":"Count Paths","description":"There is an `m x n` grid where you are allowed to move either down or to the right at any point in time.\n\nGiven the two integers `m` and `n`, return the number of possible unique paths that can be taken from the top-left corner of the grid (`grid[0][0]`) to the bottom-right corner (`grid[m - 1][n - 1]`).\n\nYou may assume the output will fit in a **32-bit** integer.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/7eddce4e-2fc4-4c3a-bb0f-9d1060243500/public)\n\n```java\nInput: m = 3, n = 6\n\nOutput: 21\n```\n\n**Example 2:**\n\n```java\nInput: m = 3, n = 3\n\nOutput: 6\n```\n\n**Constraints:**\n* `1 <= m, n <= 100`\n","difficulty":"Medium","concepts":["Matrix DFS","2-Dimension DP"],"solutions":{"python":"class Solution:\n    def uniquePaths(self, m: int, n: int) -> int:\n        row = [1] * n\n\n        for i in range(m - 1):\n            newRow = [1] * n\n            for j in range(n - 2, -1, -1):\n                newRow[j] = newRow[j + 1] + row[j]\n            row = newRow\n        return row[0]\n","javascript":"class Solution {\n    /**\n     * @param {number} m\n     * @param {number} n\n     * @return {number}\n     */\n    uniquePaths(m, n) {\n        let row = new Array(n).fill(1);\n\n        for (let i = 0; i < m - 1; i++) {\n            const newRow = new Array(n).fill(1);\n            for (let j = n - 2; j >= 0; j--) {\n                newRow[j] = newRow[j + 1] + row[j];\n            }\n            row = newRow;\n        }\n        return row[0];\n    }\n}\n","cpp":"class Solution {\npublic:\n    int uniquePaths(int m, int n) {\n        vector<int> row(n, 1);\n\n        for (int i = 0; i < m - 1; ++i) {\n            vector<int> newRow(n, 1);\n            for (int j = n - 2; j >= 0; --j) {\n                newRow[j] = newRow[j + 1] + row[j];\n            }\n            row = newRow;\n        }\n        return row[0];\n    }\n};\n","java":"class Solution {\n    public int uniquePaths(int m, int n) {\n        int[] row = new int[n];\n        Arrays.fill(row, 1);\n\n        for (int i = 0; i < m - 1; i++) {\n            int[] newRow = new int[n];\n            Arrays.fill(newRow, 1);\n            for (int j = n - 2; j >= 0; j--) {\n                newRow[j] = newRow[j + 1] + row[j];\n            }\n            row = newRow;\n        }\n        return row[0];\n    }\n}\n","csharp":"public class Solution {\n    public int UniquePaths(int m, int n) {\n        var row = new int[n];\n        Array.Fill(row, 1);\n        foreach (var i in Enumerable.Range(0, m - 1)) {\n            var newRow = new int[n];\n            Array.Fill(newRow, 1);\n            for (int j = n - 2; j >=0; j--) { \n                    newRow[j] = newRow[j + 1] + row[j];\n            }\n            row = newRow;\n        }\n        return row[0];\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def uniquePaths(self, m: int, n: int) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number} m\n     * @param {number} n\n     * @return {number}\n     */\n    uniquePaths(m, n) {}\n}\n","cpp":"class Solution {\npublic:\n    int uniquePaths(int m, int n) {\n        \n    }\n};\n","java":"class Solution {\n    public int uniquePaths(int m, int n) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int UniquePaths(int m, int n) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/IlEsdxuD4lY","embedding":[0.04446775,0.007823641,0.0506255,-0.039277647,0.00410425,-0.010820046,0.030612813,-0.013030238,-0.039409596,0.034021568,-0.025950518,-0.009143159,-0.031316556,-0.004277437,0.0023380206,-0.012073588,0.0011841297,0.0093026,-0.007257348,0.061181642,0.037342355,0.0091596525,0.04622711,-0.014096849,0.053748358,0.022255868,-0.025928525,0.006685557,0.03817805,-0.018055402,0.046974834,-0.0026417845,-0.046183124,0.029205328,0.015669273,0.026302388,0.005572214,0.021871008,-0.022068935,0.011424825,0.0068285046,-0.028743496,-0.0023077817,0.025004862,0.026984138,-0.02968915,-0.013744977,0.02476295,0.016515965,0.013591033,0.0044946074,0.022717698,0.0033180374,-0.030898709,-0.059114397,-0.017219707,-0.021849016,0.0166919,0.02889744,0.024916895,0.024631,-0.019660816,0.015471346,-0.005475999,0.052340873,0.02667625,0.012535419,-0.004335166,0.01248044,-0.05220892,-0.070814125,-0.0031036157,0.005264326,-0.06439247,-0.0049949246,0.003628674,0.002676147,0.015119474,0.024235144,-0.031910338,0.017021779,-0.05053753,0.05634341,-0.006058786,-0.013799957,0.013470078,-0.0031448507,-0.016076125,-0.06575597,-0.045435395,-0.016625924,0.027160075,0.0032960456,0.042092618,-0.0040162825,-0.003576443,0.027907802,-0.007295834,-0.024323111,0.022134911,-0.049218014,0.0038485937,0.02419116,0.022695705,0.0110564595,0.015493338,-0.013206174,-0.04000338,-0.057267074,0.026698243,-0.0067515327,-0.009077183,0.085856624,-0.0030156479,0.07618016,0.0057563963,-0.027314018,-0.034571365,0.02788581,-0.0075157536,0.006498625,-0.022134911,-0.0051818565,-0.025510678,-0.02496088,0.014261788,-0.029975045,-0.041256923,0.0038238526,0.013624021,0.01215056,0.039123703,0.032284204,-0.006564601,-0.017450623,-0.017967435,-0.0052450835,0.023465425,0.019473884,0.033207864,-0.017439626,0.0038211036,-0.006454641,-0.008219496,0.037232395,0.022937618,-0.01198562,0.07424487,0.016427997,0.015834214,0.011831677,-0.004618312,0.02553267,0.051725097,-0.018319305,-0.03224022,-0.021167265,0.02055149,0.0727934,0.006119264,0.0025510679,-0.024850918,-0.016493972,0.00209336,0.0050279126,0.039717484,-0.019385915,-0.0003937936,-0.031910338,-0.01608712,-0.016955804,-0.05410023,-0.0044973567,-0.016614929,0.05185705,0.01097399,-0.05788285,-0.014206808,-0.03965151,-0.008796785,-0.032987945,0.0062622116,-0.0314705,-0.035363078,0.031514484,0.020628462,0.032680057,-0.042422496,-0.013854937,-0.0069054766,0.035033196,0.028985407,-0.022717698,0.043873966,-0.030282933,-0.024740959,0.033251848,-0.04895411,-0.055243813,-0.015020511,-0.05995009,-0.016537957,0.005943328,0.013525058,0.028523576,-0.030942691,-0.06346881,0.016076125,0.026610276,-0.018429264,0.010110805,-0.020287586,-0.02364136,-0.014965531,0.024257135,-0.014756608,0.0070154364,0.050669484,-0.0020727424,0.05700317,-0.05220892,-0.012403468,-0.014580672,0.0467989,0.050757453,0.05018566,0.01603214,-0.024147175,0.016406005,0.025290757,-0.014921547,-0.0001392538,0.060170013,-0.042796362,-0.009071684,-0.009506026,-0.023663353,-0.051329244,0.008224994,0.030085007,0.0053687883,-0.0017744765,0.021398181,-0.008686826,0.008038063,-0.0044836113,-0.03800211,0.007983083,-0.053704374,-0.0114908,-0.011688729,0.03604483,-0.014184817,-0.053748358,0.0050966376,0.05410023,-0.03045887,0.004555085,0.03305392,-0.030546837,-0.0284576,0.0481624,-0.061225627,-0.07015436,-0.003705646,-0.011765701,-0.026412347,0.056607313,0.04534743,0.0020122647,0.0038733345,-0.019176992,-0.014415732,-0.05141721,0.021980967,-0.040619157,0.008659336,-0.0056684287,0.0046815393,-0.0891994,-0.014932543,-0.008164517,0.043961935,0.0044396278,0.0048409807,0.00015213972,0.04662296,0.053836327,-0.01658194,-0.059290335,-0.0749926,0.021772044,-0.023927256,0.019913724,-0.01097399,-0.048998095,-0.044555716,0.008774794,0.007372806,0.008032565,0.016603932,-0.020859377,-0.0055034887,0.037694227,-0.036022834,-0.033251848,-0.011369845,-0.018176358,-0.015152463,0.0034582363,-0.034857262,-0.020397546,-0.029535206,0.02665426,-0.03103066,-0.053748358,-0.017714527,-0.0074552754,0.010710086,-0.0019174243,0.013459082,-0.03494523,0.045083527,0.02700613,0.045523364,0.041146964,-0.04851427,0.017637555,0.022222878,-0.02342144,-0.028655529,-0.03272404,0.0052093463,-0.019946711,-0.021145273,-0.013799957,0.04917403,-0.01165574,-0.02005667,0.02922732,0.0013518184,-0.00624022,0.036880523,-0.003634172,-0.013096214,-0.015757242,0.01715373,0.020254599,0.0144047355,0.010583633,-0.016955804,0.002968915,0.03450539,-0.0017772255,-0.0024809684,0.02443307,-0.050229643,0.044621695,-0.022035947,0.008906745,-0.052516807,-0.018000422,-0.029623175,-0.025598645,-0.006493127,0.022200886,0.0006394851,0.035670966,-0.030568829,0.009385071,0.011699725,0.0270941,-0.0040245294,0.007119898,-0.010440685,0.023003593,-0.025862549,0.045787267,0.0027517444,0.0057014166,-0.046666946,0.0076092193,0.004796997,0.0077301753,0.019803762,0.029183336,0.017219707,0.009566504,-0.04895411,-0.02733601,0.007301332,-0.045017548,0.06448044,0.038024105,-0.03661662,0.011122435,0.04466568,-0.013733981,-0.020507505,0.013349121,0.0046210615,-0.0344834,0.013613026,0.021057304,-0.01948488,-0.0352971,0.037342355,-0.024103193,-0.00209336,0.058058783,-0.0063171913,0.03314189,-0.012348487,0.0007188623,0.0051818565,-0.004335166,-0.040355254,0.023377458,-0.0388598,0.014294776,-0.005943328,-0.0036369208,0.03349376,-0.005489744,0.008378938,-0.018407274,0.030524844,-0.015218439,0.0028424612,0.016373016,0.010935504,0.041168954,-0.007911609,0.06632776,-0.018132374,0.040267285,-0.0014459715,0.021079296,0.0004642366,0.021310212,-0.02812772,-0.030480862,0.009555508,0.024169168,-0.020133642,-0.025906533,0.005302812,0.03841996,0.05388031,0.032746032,-0.017329667,-0.02049651,0.018649185,-0.02233284,-0.0056629307,0.010770564,0.02262973,0.0060203,-0.035582997,-0.042268552,0.0073233237,0.015691265,0.026544299,-0.018000422,0.06641573,0.038573902,-0.03070078,-0.035033196,0.03316388,-0.022420807,0.031866353,-0.017043771,0.028875448,0.025708605,-0.028875448,0.05106534,-0.029051384,0.039277647,-0.0044506234,-0.012425459,0.008615351,-0.014096849,-0.012876295,0.010237259,0.006454641,0.050361596,0.032965954,0.019242968,0.020969337,0.017120743,-0.021112286,0.031800378,0.010594629,-0.008274476,0.006954958,-0.0073233237,0.015306407,-0.032306194,-0.021420171,-0.018957073,-0.06302897,-0.010099809,-0.009775428,-0.0014459715,0.009572002,-0.055287797,-0.020782406,-0.013459082,0.020650454,0.06434848,-0.049437933,0.0044781137,-0.033845633,-0.00030359218,0.019144004,0.05106534,-0.0006295199,-0.003573694,-0.00061955483,-0.009621484,-0.006685557,0.004659547,-0.012865298,0.02520279,0.034461405,-0.043676037,-0.025488686,-0.023025585,-0.026368365,-0.0034224994,-0.011897652,0.018638188,0.009049693,0.02643434,-0.008389934,0.013744977,0.022783674,0.0064161555,-0.003623176,0.02112328,0.014426728,0.0018514484,-0.006509621,0.0016768872,-0.033229858,-0.010523154,0.02922732,0.008532882,-0.004775005,-0.0014762105,-0.0062897014,-0.020815393,-0.031162612,-0.024894902,-0.014921547,-0.020562485,-0.033361807,0.0073838015,0.04042123,0.032328185,-0.02027659,-0.0063006976,0.0055557196,-0.014349756,0.02419116,0.035714947,0.023773313,0.001474836,0.015460351,-0.024279127,-0.008972721,-0.0076971874,0.021849016,-0.017274687,0.0058388663,0.007268344,-0.009121167,-0.008686826,-0.019627828,0.010951998,-0.027907802,-0.011545781,-0.008642841,-0.035912875,-0.009396066,0.008835271,-0.013942905,-0.031162612,0.033273842,-0.032548107,0.00018607263,0.000046475205,0.015141467,0.009253118,-0.032680057,-0.019561851,-0.025840556,0.013744977,0.036550645,-0.020837385,0.013338125,0.014679636,0.051373225,-0.01871516,-0.022398815,-0.024455063,-0.020298582,0.035011206,0.028721504,0.025158806,-0.0037468807,0.0073508136,-0.0064766333,-0.022827659,-0.009962359,0.010792556,-0.016318036,0.012799323,0.03349376,-0.017516598,0.016417,0.041256923,0.031448506,0.012271515,-0.0034197504,-0.026566291,0.0017744765,0.018077394,-0.03204229,0.003645168,-0.02088137,-0.020892365,0.0080270665,0.024718966,-0.04334616,0.023597376,0.011177415,0.01277733,-0.0058113765,-0.017967435,0.02788581,-0.02733601,-0.015141467,0.009220131,-0.00864834,0.033295833,-0.0028809472,0.015658278,-0.0112213995,-0.017252695,0.009973356,0.022519771,0.013953901,-0.008334954,0.0053495453,0.016482977,0.012986254,-0.06104969,-0.014360752,0.023025585,-0.0028424612,-0.0032053287,0.00044705538,-0.008159018,-0.028413616,-0.012392472,0.006592091,0.0069054766,0.0023435187,-0.031888347,0.026940156,0.022079932,0.018154366,0.029777119,-0.017857473,-0.004612814,0.01102897,-0.025466694,-0.044225838,-0.035451043,0.04517149,0.0051818565,0.009187142,0.025730597,0.02968915,0.038024105,0.0027957284,0.010083315,-0.020738421,-0.00421421,0.008692323,-0.007213364,0.020144638,0.0027998518,0.036330722,-0.025290757,0.018792132,0.028413616,0.007774159,-0.05295665,0.021871008,0.030898709,-0.011545781,0.008351448,-0.025664622,-0.02150814,-0.009692958,0.003705646,-0.0026280396,-0.007207866,0.017351659,-0.017395644,0.012766335,0.043302175,-0.05722309,0.017736519,0.012975259,0.0019174243,-0.016054133,0.008560372,0.012161556,-0.001193064,0.0029221822,-0.016548952,0.0075267493,-0.015559314,0.011633748,0.030964684,0.042730384,-0.012106576,-0.0056629307,0.012403468,-0.009692958,0.024213152,0.017879466,0.008873757,0.0151304705,0.0070209345,-0.012293507,-0.019924719,-0.053484455,-0.008791287,-0.012535419,-0.030216958,-0.0075817294,0.035561007,-0.0031173609,-0.016988792,-0.059642203,0.03538507,-0.07490463,0.0051296256,0.018429264,-0.03740833,-0.024565022,-0.008203003,-0.0057783886,-0.002344893,-0.010792556,0.034461405,0.0063611753,0.03945358,0.018407274,0.0055667157,0.020430533,0.0073892996,0.0036973988,-0.0028259673,-0.025026854,0.02487291,-0.027182067,-0.012920278,0.021035314,-0.0142288,-0.018946076,-0.030436877,0.020628462,-0.026742227,-0.047106784,-0.0055887075,-0.017934445,-0.0027421229,-0.0018074645,-0.008741805,0.0039585535,0.028809471,-0.024455063,-0.034109537,0.05352844,-0.0240812,0.001844576,-0.020562485,0.00022936931,-0.019528864,-0.0009813914,-0.009319094,0.008956227,-0.06272108,-0.019187989,-0.028743496,-0.001041182,0.033449776,0.0074882633,-0.008021569,-0.021068301,0.030216958,0.0022335588,0.0015545569,0.01685684,0.02621442,-0.008499893,0.033779655,-0.034637343,-0.0035819411,0.035451043,-0.0045633325,-0.019286951,-0.0027434975,0.015889194,-0.007064918,0.0003362365,-0.035670966,-0.022541763,0.026698243,-0.009132163,-0.021838019,0.0011422076,-0.001505075,0.02608247,0.01086403,0.039167687,0.018506236,-0.052912664,0.028061746,0.01803341,0.04290632,0.02643434,-0.034989215,0.013624021,0.0095775,0.00061508775,-0.0087143155,-0.02186001,-0.00042437617,-0.036484666,-0.013953901,-0.0407731,-0.020232607,0.020914357,-0.03817805,0.013283146,0.038353983,0.005437513,-0.05480397,0.0029056882,-0.003023895,0.018528229,0.027929794,-0.008115035,0.008367942,0.020859377,-0.023245506,-0.0030871218,-0.012073588,-0.008334954,0.033097904,-0.0027379994,-0.02777585,-0.029887078,-0.062325224,0.022651723,0.01568027,-0.04556735,0.008148022,0.021332204,-0.0016768872,-0.0017057516,-0.031426515,0.014030873,0.002687143,0.025246775,-0.007108902,-0.039123703,0.060082044,-0.01171072,-0.014217804,0.0010995981,0.009951363,0.009995347,-0.036682595,0.00591034,-0.05031761,0.03894777,-0.066459715,0.007999577,0.032086276,0.029711142,-0.036968492,0.024235144,-0.0062182276,0.009874391,-0.012172552,0.008829773,0.011699725,-0.04176274,0.015317403,0.008098541,0.02191499,-0.022607738,-0.018451257,-0.022651723,0.011886656,-0.034527384,0.0011140304,0.013151194,0.036330722,-0.0016727637,0.017065763,-0.00054189574,-0.0036589128,0.015713258,-0.010105307,0.028809471,-0.021991963,-0.0038925775,-0.004194967,0.0056519345,-0.0038458447,0.042774368,0.0052093463,0.041498836,-0.023685344,0.02443307,-0.0019985198,-0.043544088,-0.031404525,-0.045215476,-0.0052395854,0.046095155,0.02273969,-0.009874391,0.050757453,-0.013580037,-0.022717698,0.016329033,0.0056794244,0.03246014,-0.019770775,0.030524844,0.032855995,0.017516598,-0.04662296,-0.0046540494,-0.044401772,-0.030678788,0.0045275954,0.012381475,0.009027701,-0.004260943,-0.032218225,0.016076125,0.009747937,0.023927256,0.038441952,0.018352292,0.01792345,0.027687881,0.021893,-0.009753436,-0.04119095,0.016438993,-0.00066525687,-0.024565022,0.030876717,-0.05185705,-0.02452104,0.012337492,0.011314865,0.036374707,-0.04343413,0.01083654,-0.0025029604,-0.020364558,-0.006954958,0.00037695598,0.010847536,0.00911017,0.009209135,0.0010803551,0.03292197,0.026896171,0.045875236,0.021244237,-0.036946498,-0.021299217,-0.029601183,-0.03215225,0.0025084582,-0.051681112,0.008978219,-0.011358849,-0.054716006,0.04772256,0.021365192,-0.011809684,-0.01981476,0.033559736,0.041168954,-0.013492069,-0.0063941632,-0.032680057,-0.0031998307,0.033867624,-0.012128567,0.025620637,0.032548107,0.05546373,0.04119095,0.0070484243,-0.022519771,-0.010011842,0.014624655,-0.012568407,-0.0151304705,0.014514696,-0.010666102,-0.008384436,-0.0040245294,-0.035890885,0.01748361,-0.034241486,-0.024367096,0.019385915,-0.014140832,0.00077865296,0.017945442,0.012964263,0.007636709,-0.0096434755,-0.0284576,-0.0061742435,0.018792132,-0.030216958,0.022563754,-0.010248255,0.023883272,-0.027533937,0.0047062803,-0.0006119951,0.0069879466,-0.04684288,0.022178896,-0.00591034,0.009038697,0.0061797416,-0.0026775214,0.04189469,0.047106784,-0.008219496,0.0076257135,0.0017057516,0.010132797,-0.021684077,0.0009360329,-0.010649608,0.0028699513,0.023795305,-0.014591668,-0.012612391,-0.05278071,0.007207866,0.015306407,-0.030194966,-0.0058718543,0.0098469015,-0.014657644,-0.017340664,-0.009819412,0.033977583,-0.017802494,-0.0041592303,-0.030854724,0.017208712,-0.017428631,0.011688729,0.06456841,-0.03045887,0.032218225,-0.025004862,0.0022912878,0.028435608,0.0086758295,-0.009984352,-0.0040245294,0.00539078,-0.022222878,-0.0044396278,-0.01198562,-0.023091562,0.0014872066,0.0015847959,0.008417424,0.023355465,-0.050845418,-0.0290074,0.013239162,-0.012139563,0.021651087,-0.019473884,-0.034461405,-0.027248042,-0.020925352,0.00031544722,0.011798688,-0.002769613,-0.059114397,0.0016796362,-0.02509283,0.02350941,0.008175513,0.025070839,-0.025400717,0.0018706914,-0.020947345,-0.025466694,-0.022695705,0.013514061,0.043082256,0.011380841,0.0043571577,0.029711142,-0.023047578,0.0045440895,0.0075157536,-0.005121378,0.016296044,-0.0240812,-0.022893634,0.011243391,0.014767603,0.021079296,-0.019583844,0.014184817,-0.017802494,0.01466864,0.00911017,0.017934445,0.0418727,0.020595474,-0.022915626,-0.00076353346,-0.0019187988,0.033757664,-0.0018198349,-0.013426093,-0.0075157536,-0.018847113,-0.00826348,-0.028259672,0.012007612,-0.037342355,0.005338549,0.01647198,-0.019407908,0.0037798686,0.013733981,0.012920278,0.023465425,0.014371748,0.011765701,0.00209336,0.005396278,0.0032163246,-0.010479171,0.03965151,-0.01759357,0.014195812,-0.05647536,-0.02812772,0.055023894,-0.029161343,0.026984138,-0.014371748,0.027907802,-0.0037633746,-0.028369633,-0.013129202,-0.0022074434,0.007713681,0.01075407,0.0044698664,0.026390355,-0.028347641,-0.010446182,0.0020370055,0.020760413,0.0014226051,-0.024037216,-0.021541128,-0.007774159,-0.020133642,-0.0011525163,0.009280609,0.037364345,-0.0074992594,-0.00047454532,-0.014536688,-0.022101924,-0.030194966,0.011963628,0.017549587,0.007829139,-0.01102897,-0.069714524,-0.0040630153,-0.029139351,-0.027204059,0.027138082,-0.024499048,-0.018286318,-0.008340452,0.008252484,0.02350941,-0.007878621,0.025664622,-0.011017974,-0.012964263,0.029645167,-0.0025235778,-0.028083738,-0.027841825,-0.014239796,-0.041960668,-0.019352928,0.0110564595,0.0046238103,0.004310425,0.013448086,0.040245295,0.0117437085,-0.010539648,0.023795305,-0.014569676,0.011446817,0.0063941632,-0.008186508,0.017428631,0.058630574,-0.0073123276,-0.030194966,-0.0074222875,-0.027489955,0.026698243,-0.027995769,-0.010451681,0.023553392,0.01713174,0.011006977,0.0009841403,-0.025268765,-0.030590821,-0.018451257,-0.0040107844,-0.032899976,0.022915626,-0.019891731,-0.014569676,0.03417551,-0.036264747,-0.010352717,-0.016603932,-0.029821102,0.02005667,0.0015353139,0.052824695,0.0134370895,0.01685684,0.009852399,0.025510678,0.027204059,-0.007702685,0.014239796,0.018429264,-0.023091562,0.0068834843,0.03461535,0.01836329,-0.006515119,0.05278071,-0.02711609,-0.01836329,0.0039145695,0.02088137,-0.0033675195,-0.0052038482,0.01305223,0.009297103,0.004665045,-0.03841996,-0.0075872275,-0.00733432,0.030986676,0.017076759,-0.00060374814,0.019506872,0.0028094733,0.016537957,0.03732036,0.0028672023,0.042708393,-0.014085853,0.007268344,0.0045578345,-0.0056849224,-0.00067350385,-0.027467962,-0.0194299,0.006548107,0.020672446,0.0037826176,-0.0040822583,0.015548318,-0.014855571,0.002200571,-0.01215056,0.005289067,0.029293295,-0.017934445,0.01198562,0.016504968,-0.015746245,0.0115787685,-0.040179316,-0.06544808,-0.024565022,-0.0020947345,0.017472615,0.004205963,-0.00015557597,-0.009747937,-0.0072408537,-0.02200296,-0.04169676,-0.01967181,0.011611757,0.011254387,0.05110932,0.021838019,-0.04860224,-0.05792683,0.013733981,-0.009973356,-0.0046293084,0.0070484243,0.031712413,0.024609007,0.02088137,0.02060647,-0.038222034,-0.0038733345,-0.016241064,-0.011012476,0.008444914,-0.02262973,0.00038279762,-0.022827659,0.035121165,-0.036220763,0.010886022,-0.026302388,0.012425459,-0.06316092,-0.03863988,-0.021035314,-0.01606513,-0.033779655,-0.027182067,0.017549587,-0.00050306617,0.014008881,-0.012986254,0.0036204269,0.0033840134,0.020408543,-0.00018246457,0.005514485,0.019253964,0.023993231,-0.002946923,0.0037111437,-0.006053288,-0.023157537,-0.018066397,0.0146466475,-0.0009772679,0.006163248,-0.004813491,0.029821102,0.032570098,0.05388031,-0.015218439,0.032680057,0.033009935,0.019407908,-0.019572847,-0.0021524634,-0.02476295,0.052516807,0.03360372,0.018099386,0.034021568,0.0026362867,-0.012106576,-0.022321843,-0.010116303,0.00078483816,-0.019847747,0.011072953,-0.014833579,0.00705942,-0.022123914,-0.04794248,-0.023091562,-0.02856756,0.0020699936,-0.024609007,-0.010968491,0.02339945,0.00149133,-0.012931274,-0.03136054,-0.018891096,0.01171072,-0.034219496,0.038331993,0.0005181856,0.00018641625,0.051725097,0.015801225,0.013898921,0.005519983,-0.0063171913,-0.04066314,0.012986254,-0.019605836,0.030172974,0.028633537,-0.03899175,0.02331148,0.0344834,-0.05788285,0.026588283,0.011853668,0.00146384,0.03155847,0.004153732,-0.031338546,0.0040052864,0.00993487,0.031734403,0.015416366,0.01305223,0.000036746336,-0.019550856,-0.0010865404,-0.008367942,0.030106997,0.018924084,-0.0012281137,-0.01709875,0.0093630785,-0.013624021,-0.008334954,0.011512793,-0.009044195,0.022563754,-0.023883272,0.05141721,-0.010941002,-0.037452314,-0.015317403,0.041740745,-0.005322055,0.04255445,0.042158592,0.021002324,-0.020892365,0.046578977,0.0032877985,0.000024676528,-0.008367942,0.0031668427,0.022365827,0.023949249,-0.006691055,0.012172552,-0.006196236,0.019902727,0.008444914,-0.015108479,0.03593487,0.004310425,0.020353561,-0.005399027,-0.0058718543,-0.03817805,-0.015449354,-0.01753859,-0.0076092193,0.00036733452,-0.0057179104,-0.02509283,-0.017450623,-0.0045193485,-0.024565022,-0.038903784,-0.023377458,0.02621442,0.006603087,0.020353561,0.033273842,0.0017222456,0.047326706,-0.025334742,0.015097483,0.032680057,0.052296888,-0.034153517,-0.019770775,0.013580037,0.003650666,-0.011402833,0.028171705,-0.002736625,-0.022266863,0.0043269186]},{"id":"maximum-subarray","name":"Maximum Subarray","description":"Given an array of integers `nums`, find the subarray with the largest sum and return the sum.\n\nA **subarray** is a contiguous non-empty sequence of elements within an array.\n\n**Example 1:**\n\n```java\nInput: nums = [2,-3,4,-2,2,1,-1,4]\n\nOutput: 8\n```\n\nExplanation: The subarray [4,-2,2,1,-1,4] has the largest sum 8.\n\n**Example 2:**\n\n```java\nInput: nums = [-1]\n\nOutput: -1\n```\n\n**Constraints:**\n* `1 <= nums.length <= 1000`\n* `-1000 <= nums[i] <= 1000`\n","difficulty":"Medium","concepts":["Kadane's Algorithm"],"solutions":{"python":"class Solution:\n    def maxSubArray(self, nums: List[int]) -> int:\n        res = nums[0]\n\n        total = 0\n        for n in nums:\n            total += n\n            res = max(res, total)\n            if total < 0:\n                total = 0\n        return res\n","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {number}\n     */\n    maxSubArray(nums) {\n        let [runningSum, maxSum] = [nums[0], nums[0]];\n\n        for (let i = 1; i < nums.length; i++) {\n            const num = nums[i];\n            const sum = runningSum + num;\n\n            runningSum = Math.max(num, sum);\n            maxSum = Math.max(maxSum, runningSum);\n        }\n\n        return maxSum;\n    }\n}\n","cpp":"class Solution {\npublic:\n    int maxSubArray(vector<int>& nums) {\n        int curr = nums[0];\n        int result = nums[0];\n        \n        for (int i = 1; i < nums.size(); i++) {\n            curr = max(curr + nums[i], nums[i]);\n            result = max(result, curr);\n        }\n        \n        return result;\n    }\n};\n","java":"class Solution {\n    public int maxSubArray(int[] nums) {\n        if (nums.length == 1) return nums[0];\n\n        int sum = 0;\n        int max = nums[0];\n\n        for (int n : nums) {\n            sum += n;\n            max = Math.max(max, sum);\n\n            if (sum < 0) {\n                sum = 0;\n            }\n        }\n        return max;\n    }\n}\n","csharp":"public class Solution {\n    public int MaxSubArray(int[] nums) {\n        int maxSub = nums[0];\n        int curSum = 0;\n        \n        for(int i = 0; i < nums.Length; i++){\n            if(curSum < 0){\n                curSum = 0;\n            }\n            curSum += nums[i];\n            maxSub = Math.Max(maxSub, curSum);            \n        }\n        return maxSub;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def maxSubArray(self, nums: List[int]) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {number}\n     */\n    maxSubArray(nums) {}\n}\n","cpp":"class Solution {\npublic:\n    int maxSubArray(vector<int>& nums) {\n\n    }\n};\n","java":"class Solution {\n    public int maxSubArray(int[] nums) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int MaxSubArray(int[] nums) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/5WZl3MMT0Eg","embedding":[-0.024288418,0.010461976,0.017843008,-0.007622027,0.009545254,-0.004803342,-0.05583501,-0.012068603,0.012295421,0.019903272,0.0012191463,-0.049824335,-0.035137873,-0.00060957315,0.06362242,0.018296644,-0.009493275,0.006875418,0.003603097,0.054663118,0.00809929,0.025498113,-0.016519904,-0.02430732,0.065663785,0.011992997,-0.010688794,0.04676229,0.019005451,-0.005495609,0.0064265076,-0.004900212,-0.013703582,0.03319102,-0.030072274,-0.0085860025,0.030733828,-0.044494115,0.0047088345,-0.013977653,-0.035686016,-0.04128086,-0.013202692,-0.020281302,0.022454973,0.023362245,0.03317212,-0.0063272747,0.048161004,-0.0069084954,0.01685068,-0.0034353463,0.009809875,0.028276633,0.0068092626,-0.0047135595,-0.0075464207,0.07462309,0.01873138,0.0076314774,-0.021226376,0.015877254,0.0003874806,0.018145433,-0.0202624,0.014960531,0.031092955,0.0074755405,0.0001780875,-0.044494115,-0.056288645,-0.025063379,0.0018440769,-0.035686016,0.03381477,0.020016681,0.041205253,0.011473206,0.044720933,-0.013183791,0.026027355,0.0035629314,0.052016906,0.012975874,0.016368693,0.008184346,-0.037179235,-0.015348012,-0.05791417,-0.054625314,-0.01026351,-0.04014677,0.014979433,0.01735157,0.0025115358,0.012361576,-0.008637982,0.0012581307,0.022587284,0.0392773,0.0074802656,0.006851791,-0.0058311103,-0.005798033,0.003966951,0.006610797,-0.026027355,0.02290861,-0.022114746,-0.0066958535,0.0038913449,-0.0030478656,0.014866024,-0.03710363,-0.0042315717,-0.0072818,-0.04294419,-0.016538806,0.02950523,-0.012456084,0.021434292,-0.007848845,-0.00061902386,-0.03256727,-0.03999556,0.013316101,0.011785081,-0.035137873,0.014365135,0.010424173,0.024250615,-0.019978877,0.011227487,-0.002615494,-0.03356905,-0.043171007,0.010348567,-0.017663445,0.015688239,0.009044364,0.07061598,-0.003792112,-0.003121109,0.012210364,0.025876144,0.0042646495,-0.02190683,0.041318662,-0.010348567,0.02646209,0.051336452,-0.018703027,0.028390042,0.07462309,-0.009549979,-0.021736717,0.018769182,0.010537582,-0.016623862,-0.011312543,0.01809818,-0.03328553,-0.05292418,-0.005519236,0.025290197,0.030034471,-0.0069652,-0.0053680236,-0.0035511178,0.013788639,0.032378256,-0.028975988,0.012352126,-0.020905051,0.033020906,-0.018542364,-0.050353575,-0.070994005,-0.056024022,0.020489218,0.005471982,-0.016425397,-0.035270184,-0.05371804,0.01937403,0.028560156,0.03585613,-0.076173015,-0.045023356,0.016094621,0.05549478,0.010027242,0.024779856,0.010178453,-0.0124371825,0.008330833,0.018589618,0.065512575,-0.0303936,-0.009819325,-0.028805874,0.02228486,0.020186795,0.026405385,0.02961864,-0.057536144,0.005949245,0.043246616,-0.009800424,-0.041734494,0.009228653,0.023834782,0.016765624,-0.018892042,-0.021680012,0.015971761,0.03254837,0.0035109522,-0.0069226716,0.030544812,0.031716704,-0.003444797,0.0014943993,0.014847122,0.030847237,0.003513315,0.016141875,0.01622693,0.010480878,0.027728489,0.0035983715,-0.05050479,0.027085839,-0.03150879,-0.06366023,-0.008458418,0.0001359283,-0.029694244,-0.016009564,-0.009894932,0.031187464,-0.0012274156,0.037935294,0.025120083,-0.0052120867,-0.0039078835,-0.05292418,0.050618198,-0.035100073,-0.04903047,0.011199134,0.02113187,0.004588337,-0.04509896,0.01760674,0.030223487,-0.022341564,-0.0046285028,-0.014591952,0.004862409,-0.055419177,0.016387595,-0.050051153,-0.043775856,0.039806545,-0.03190572,0.011236938,0.041091844,0.04381366,0.0011937474,-0.024893265,-0.029165003,0.045023356,-0.0304125,-0.0025847792,-0.0069604744,0.028068716,-0.027010232,0.008439517,-0.10305094,-0.013618525,-0.009389317,0.00016479738,0.020602627,0.049484108,-0.035742722,0.008737215,-0.0039551375,0.006653325,-0.022719594,-0.0316789,-0.050958425,-0.0018192687,0.009932734,0.011520459,0.007409385,-0.028711367,0.009479099,0.039315104,-0.045930628,0.01823994,-0.0021654023,-0.006624973,0.004718285,-0.06316879,-0.04483434,0.023664668,0.038540144,-0.04226374,0.008316657,0.009635036,0.02901379,-0.01923227,-0.012512788,0.023154328,-0.062412728,-0.01064154,-0.0354592,0.003513315,0.01823994,0.03241606,0.064454086,0.032132536,0.04645987,0.03441962,0.0006461948,0.000015985052,0.029448526,0.03217034,-0.027671784,-0.03269958,0.006473761,0.009148322,0.033739164,-0.04800979,0.013561821,0.0013691769,-0.0058689136,0.006601346,0.010745498,0.028560156,0.031300873,0.020905051,0.017342119,-0.004380421,0.016104072,-0.001971662,-0.011917391,0.009223929,-0.0043827835,-0.019657552,-0.026065158,0.022511678,-0.0027643433,-0.019789863,-0.005372749,-0.022587284,-0.026670005,-0.0481232,0.0049710926,-0.017058598,0.011151881,0.037954196,-0.030450305,0.027520573,-0.0013467313,-0.0043993224,-0.04887926,0.0062611196,0.08052036,0.010613188,-0.0014577776,0.00963031,-0.0015818187,-0.017691797,-0.03192462,-0.03699022,-0.00550506,-0.006624973,-0.047518354,-0.025025576,0.0054152776,0.028182125,-0.031319775,0.032019127,0.042830784,-0.0074755405,-0.042641766,-0.016501004,-0.025498113,-0.017776854,-0.0139304,0.040071163,-0.0075322445,-0.004947466,0.013599624,0.031111857,0.0392395,-0.026178567,0.010849456,0.028975988,-0.005670448,0.045401383,0.018854238,-0.0063887043,-0.024042698,-0.0018842425,0.05723372,0.026745612,-0.068083175,0.025309099,0.0057318774,0.009715367,-0.020602627,0.0063509014,0.055872813,-0.029750949,0.028673565,-0.031622197,-0.027426066,0.008448967,0.016000113,0.026745612,-0.002735991,0.02581944,0.0067289313,0.007192018,-0.06271515,-0.0569691,0.002487909,-0.02581944,-0.027293755,-0.04143207,0.01735157,-0.06819659,0.041318662,-0.0030951195,0.09276853,-0.028522352,-0.055759404,0.006360352,-0.068574615,0.00007460921,-0.0139304,0.030828334,-0.014081612,0.01961975,0.035912834,0.019846568,0.010121749,0.04645987,-0.03874806,0.029543033,0.016368693,-0.030242387,-0.012304871,0.06853681,-0.0055759405,-0.011794532,0.032718483,-0.047518354,-0.0076692807,-0.010594287,-0.009394042,0.03496776,-0.055267964,-0.016283635,-0.002092159,0.047064718,0.0077685136,0.023022018,0.0032132538,-0.020583725,0.048198804,-0.06101402,-0.05356683,0.0074660894,0.037065826,0.02546031,-0.011945743,-0.013713033,-0.04381366,-0.019770961,-0.004772627,0.00892623,0.01582055,0.011293642,0.017682346,0.013325552,0.0031612746,-0.05254615,0.025271295,-0.009072716,-0.003173088,0.025328,0.008378087,0.009280633,0.009034913,-0.037406053,0.007272349,0.022341564,-0.07999112,0.016264735,-0.008954582,0.026518794,-0.008155994,0.020621529,-0.02203914,-0.012096955,0.072770745,-0.07072938,0.009209752,0.0051979106,-0.003671615,0.018901493,0.019288974,-0.021075165,-0.035515904,0.03570492,-0.034268405,-0.027312657,-0.020224597,0.0019314963,0.020224597,0.006889594,-0.028087618,-0.04343563,0.009913833,-0.049975548,0.01797532,-0.0152251525,0.011511009,-0.009223929,0.03065822,-0.013060931,0.0075416956,0.022341564,0.013420059,-0.017275965,-0.04974873,0.0014932179,0.017748501,-0.02774739,-0.020980656,0.0028494,-0.029354017,0.017020794,0.006095731,-0.004491467,-0.0016066269,-0.025233492,-0.00841589,0.020545922,-0.01622693,0.01923227,-0.022568382,0.0016019015,0.04570381,0.017786304,0.006256394,-0.049521912,-0.0291272,0.033512346,0.008826997,-0.013410609,-0.0078630205,-0.010745498,0.0068565165,0.0032510567,0.02177452,-0.033096515,0.023286639,0.034627534,-0.019789863,0.027955307,-0.015744943,-0.0143367825,-0.014847122,-0.021831224,0.041356467,-0.0016916835,-0.0007336142,0.0047749896,0.0003290041,-0.0014506895,-0.00011252295,-0.01480932,0.0024973596,0.010301313,-0.0042693745,0.002030729,0.0027761566,0.03014788,0.022133648,-0.012144209,-0.025781635,-0.036234163,0.011444854,0.03268068,-0.007210919,0.01317434,0.0392395,0.017814657,-0.010565935,-0.0053160447,0.0066958535,-0.0004734233,0.041469876,0.0060248505,0.016982991,-0.012862465,-0.0151968,0.00045806586,-0.019827666,-0.017814657,-0.0060201255,0.024231713,0.023985993,-0.032756288,-0.019600848,0.009923284,-0.031489886,-0.01317434,0.038181014,0.0050750505,-0.036290865,-0.03821882,0.031470984,0.025535917,0.0006160705,-0.042603966,0.015811099,0.016671116,-0.030355796,0.016775075,0.03734935,-0.022228155,-0.0067809103,-0.00020274804,-0.024269516,0.027558375,0.024023797,-0.012682902,-0.030128978,0.00044064104,-0.0030124253,0.00049084815,-0.024779856,-0.004456027,-0.010074495,-0.005609018,0.031130759,0.0053869253,-0.032075834,-0.018712478,-0.011794532,0.011709475,-0.038937073,-0.014138317,-0.020413611,0.02103736,-0.005358573,0.039806545,0.017653994,0.028333338,-0.066306435,0.04192351,0.02379698,0.031943522,-0.0036196357,-0.016604962,-0.004181955,0.014856573,-0.023097623,0.015489773,0.001102784,0.00639343,0.018778633,-0.036763404,-0.009809875,0.0017141291,0.022889707,-0.01468646,0.03241606,-0.018154884,0.009573606,-0.0070880596,0.00544363,-0.028541254,0.006738382,-0.019326776,-0.005523961,-0.023154328,-0.002378044,0.005802758,-0.009101069,-0.015433068,0.012767958,0.0042410223,-0.061732274,0.00035322164,-0.0060154,0.024023797,0.0038393657,-0.054285087,-0.0077732387,-0.0009604321,-0.0037377703,0.01317434,-0.0151117435,0.020243498,0.019392932,0.0035298537,-0.034646437,-0.036631092,0.0240616,0.011425952,-0.027104741,0.0040898104,-0.05802758,-0.028768072,0.015433068,-0.028862579,-0.001269944,-0.011492107,0.029732049,0.0072487225,-0.014043809,0.021944633,0.01685068,-0.006993552,-0.012304871,-0.024080502,0.01507394,0.006114633,-0.059842125,-0.024742054,0.006095731,-0.030714925,-0.021453194,-0.005750779,0.011369248,0.03470314,-0.01708695,0.041507676,-0.0007743705,-0.025365803,0.00822215,-0.07787415,0.028068716,-0.023853684,-0.00023818834,0.041243058,0.010471427,0.058443416,0.024118304,-0.0052640657,0.02050812,0.021264179,0.019430734,0.000016141948,0.030903941,-0.0019834754,-0.013713033,0.012626197,0.006483212,-0.037557267,0.035289086,-0.0042930013,0.015650436,-0.0072818,-0.027766293,0.0014814045,-0.012739606,0.020716036,-0.003985852,-0.037821885,-0.018050926,-0.01797532,0.02330554,-0.028786972,0.016860131,0.011624418,0.017313767,0.0051979106,0.0015085754,0.041507676,-0.01240883,0.036763404,-0.03330443,0.03657439,-0.01228597,-0.02202024,0.0027478044,0.032000225,0.019676454,-0.006837615,0.016066268,0.009715367,-0.053982664,0.0002898721,0.034797646,0.021264179,-0.025611522,-0.008217424,0.0329264,0.025554817,-0.00082339626,-0.017436627,-0.0001315721,0.0046781194,0.06354682,-0.019789863,0.02394819,0.013391707,-0.0025824164,-0.0070077283,-0.017068047,0.014119415,-0.006421782,0.024364024,0.034911055,-0.02101846,-0.003293585,0.012635647,-0.016784525,0.002539888,0.034362912,0.048463427,0.016302537,0.048161004,-0.010480878,-0.05432289,0.02521459,-0.001180162,0.038937073,0.021112967,0.017909164,-0.007801591,0.009214478,0.0010023698,0.037802987,-0.007140039,-0.026254173,-0.015319659,0.016860131,0.004477291,-0.027879702,-0.009337338,-0.019544143,-0.006469036,-0.009772072,0.008184346,0.0146675585,0.008779744,0.022095844,0.02508228,0.044607524,-0.030696023,-0.012692352,0.0025446133,-0.0072487225,-0.0021122417,-0.0329453,-0.038899273,0.025762735,-0.046800096,-0.017880812,-0.0011642138,-0.027993111,0.03481655,0.02050812,-0.046686687,-0.03583723,0.027974209,0.0015345649,-0.035875034,-0.0047064717,0.007551146,-0.0070549822,0.019563045,0.0042008567,-0.02166111,0.035988443,-0.028768072,-0.02899489,0.04241495,0.0183628,0.023853684,-0.008623806,0.021453194,-0.046686687,-0.01798477,-0.008912054,-0.009502726,0.020716036,0.019941075,0.0059445193,0.056402054,-0.031489886,-0.013420059,-0.04230154,-0.022643989,-0.0004837601,0.014289528,0.031867918,-0.0019633926,0.020659331,0.020224597,-0.018268293,-0.009238104,0.028465647,0.02721815,-0.01810763,-0.0012132395,0.027255952,0.025290197,0.004824606,0.03481655,-0.0051884595,0.02888148,-0.02166111,-0.00075487833,-0.0067431075,0.017342119,0.009238104,-0.021869026,0.006053203,0.02861686,-0.0067100297,0.06641985,-0.001665694,0.041847903,-0.01532911,-0.011926842,-0.012815212,0.0037046925,-0.020489218,0.015669337,0.0048269685,0.0037495836,0.00999889,0.0029297313,-0.030166782,0.011945743,-0.033890378,0.04861464,-0.04509896,0.0061618867,0.02292751,0.048463427,-0.051336452,-0.010046143,-0.058934852,-0.015215701,-0.016935738,0.012295421,0.038445637,-0.0035251284,-0.0065446417,0.041318662,-0.042641766,0.006686403,0.014072161,-0.0077307103,-0.043095402,0.01733267,-0.005925618,-0.008567101,-0.051903497,0.034646437,-0.034514125,0.006473761,-0.0042339345,-0.023589063,-0.025762735,-0.022190353,0.024987774,-0.014242275,0.013703582,0.00999889,-0.009672839,-0.029788753,0.0055664894,0.030847237,0.006445409,-0.031357575,-0.016255284,0.027010232,0.03519458,0.019941075,0.023664668,0.004862409,-0.0017909164,0.001386897,-0.008746666,-0.04759396,0.030979546,0.005358573,-0.035686016,-0.006624973,-0.04029798,-0.012021349,-0.004980543,-0.0025020852,-0.026443187,0.014969982,0.009743719,-0.03814321,-0.024704251,-0.051714484,-0.0027147268,-0.018589618,0.021793421,0.025233492,-0.0031092956,0.023343343,-0.012938072,0.01975206,-0.009545254,0.0012616747,0.02812542,-0.010083946,0.017105851,-0.04710252,-0.015310209,0.034684237,0.050580394,0.012985325,0.032340452,-0.0059445193,-0.033153217,-0.0303936,-0.006469036,-0.003709418,0.032378256,-0.004205582,-0.0077826898,0.00868051,0.0066486,-0.009762621,-0.002539888,-0.0034684238,0.022719594,-0.023570161,0.022946412,-0.030374698,-0.008689961,-0.018504562,0.03430621,-0.0020177343,0.007886648,0.018013122,-0.017521683,-0.0049852687,0.0051601073,0.032434963,0.01632144,-0.00040933545,-0.004867134,0.0038299148,0.0011252295,0.0028541253,0.012096955,-0.0014471455,-0.0026887374,-0.0045647104,-0.024590842,-0.049521912,-0.0038913449,-0.003317212,0.005623194,-0.042603966,0.032983106,-0.0070549822,-0.0380298,-0.023248836,-0.011255839,0.022360466,0.008009507,-0.013703582,-0.0015759119,-0.008675785,-0.042603966,0.033247724,0.035118975,-0.00950745,0.0014979433,0.013410609,0.009474373,0.007196743,0.046006233,0.038691357,0.01950634,0.00039545467,-0.009979988,0.014988883,-0.019941075,-0.03264288,-0.01975206,0.03356905,-0.00008439221,-0.016179677,-0.032208145,-0.011794532,-0.03241606,0.01898655,0.05307539,-0.0031565493,-0.02468535,-0.015792197,-0.00094212126,-0.018816436,0.0011742553,-0.031867918,-0.06804537,0.014714812,0.018391153,-0.004852958,-0.03179231,-0.011671672,-0.022322662,0.025290197,0.011785081,-0.05167668,-0.009809875,-0.0012604933,0.0329453,-0.04203692,-0.010169003,-0.032737385,-0.052016906,-0.05216812,-0.026934627,-0.008836448,-0.0006751377,0.02101846,-0.024742054,0.024212811,0.021963535,0.011359797,-0.04294419,-0.0012888456,0.0025068105,0.030885039,0.0047608134,0.022228155,0.037557267,0.024099402,0.014535247,0.02761508,0.008855349,0.04112965,0.003300673,0.0008068575,0.03179231,-0.0265944,-0.007003003,-0.020980656,-0.018381702,-0.012720704,-0.008704137,-0.008330833,0.005533412,0.011312543,0.0113219945,-0.012701803,-0.014450191,0.012739606,0.009308985,0.017134203,-0.0139304,-0.003279409,-0.0064028804,0.026537696,-0.0038960702,-0.017843008,-0.0013514567,0.043246616,0.015546477,0.03636647,0.029391821,0.0065162894,0.0036905163,0.01507394,-0.008756116,0.002378044,-0.021301983,0.02672671,0.043662447,0.031981327,-0.026896823,-0.0011500376,-0.026896823,0.013656328,-0.022719594,0.0027265402,-0.012682902,-0.010121749,0.019695355,-0.018825887,-0.02597065,-0.0072345464,0.036763404,-0.0015546478,-0.004831694,0.0008482045,0.01595286,-0.048690245,0.0034353463,0.01823994,-0.0038157387,-0.03625306,-0.054625314,-0.037028022,-0.020470316,-0.02597065,0.003045503,-0.0057555046,-0.021453194,-0.004886036,0.056439858,0.013335003,-0.015470872,0.005523961,-0.01228597,0.001307747,0.044418506,0.018542364,-0.015234603,-0.010036693,-0.033795867,-0.024628645,-0.009531078,0.03277519,-0.01898655,-0.0021146045,0.0047679013,0.034570828,-0.006700579,-0.0070691584,-0.015735492,-0.012871916,-0.023740275,0.04661108,-0.007144764,-0.022851905,0.015499224,0.046195246,-0.014913278,-0.018816436,-0.006875418,0.010745498,0.01785246,0.0018523462,0.009408218,-0.010339117,0.012843564,0.005141206,0.008472594,-0.003121109,-0.026575498,0.030582614,-0.013013678,0.01824939,-0.02468535,-0.012607295,-0.0021122417,-0.012862465,0.014469093,0.023532359,-0.00052776514,-0.00041169813,0.003310124,0.01963865,0.000915541,-0.007229821,0.032075834,0.025989553,-0.008070937,-0.0041039865,0.043171007,0.023929289,-0.0046119643,0.03252947,0.025365803,-0.009616135,-0.02721815,0.026140764,-0.03646098,-0.010055594,-0.02101846,0.0037259567,-0.0028068717,0.016302537,0.017672896,0.0029509955,-0.010669893,0.008089839,0.019808764,-0.0047820774,0.008316657,-0.021566603,-0.03343674,0.023343343,0.008595454,0.0009031369,-0.001896056,-0.004229209,0.024004895,0.017795755,-0.003874806,-0.047178127,-0.010811654,0.01937403,-0.0077543375,0.012588394,0.015281857,-0.016000113,-0.006043752,0.019430734,0.013164889,-0.049521912,0.02192573,-0.02139649,-0.013032579,0.036706697,-0.008671059,0.01051868,-0.037122533,-0.003437709,0.01824939,0.023645768,-0.025422508,0.0034991389,0.017427176,-0.0059681465,0.018788084,-0.00033107147,0.01494163,-0.011539361,0.0032605075,-0.021490997,-0.013401158,0.013561821,0.009096343,0.04903047,0.03014788,-0.008212699,-0.03723594,0.008316657,-0.016982991,-0.030847237,0.029051594,0.0029864358,-0.011501558,-0.016104072,0.025328,-0.010603737,-0.0074519133,0.039957754,-0.0049427403,0.0019043253,0.005245164,0.025101183,-0.029807653,0.0455904,-0.011511009,0.017493332,-0.011747277,0.038974877,-0.01772015,-0.045250174,0.01254114,-0.018646322,-0.047064718,-0.011813433,0.010159552,-0.0058925403,-0.02646209,0.038785864,0.027520573,-0.026065158,-0.008850624,-0.003180176,0.03714143,-0.0017247612,0.029561935,0.016945189,0.0012439545,0.0059681465,0.00092144776,0.009653937,-0.006738382,-0.035912834,-0.026121862,-0.011605516,0.025554817,0.01961975,0.03697132,-0.018381702,0.07900824,-0.0014022544,0.024704251,-0.006067379,-0.011643319,-0.015489773,0.0001067639,0.025063379,0.004401685,-0.0062185912,0.015083391,-0.0038322776,-0.026651105,-0.011511009,-0.015281857,0.0015723679,-0.019941075,-0.009979988,-0.020224597,-0.032075834,-0.005557039,-0.04547699,0.016671116,0.015877254,-0.025498113,-0.009446021,0.01481877,-0.027048036,-0.0456282,-0.011709475,-0.02128308,0.022095844,-0.011425952,0.009337338,0.018079277,0.0046261405,0.026575498,-0.011577164,0.021585504,0.0025422508,0.011293642,-0.024534138,0.017672896,-0.0062989225,-0.029902162,-0.03230265,-0.0005924437,0.035988443,0.060144547,-0.04343563,0.008033134,-0.0073385043,0.006572994,0.037992,-0.013221594,0.01697354,-0.015990663,-0.0008913235,0.03156549,0.014251726,0.023721373,-0.013164889,0.041318662,-0.0024063962,-0.055645995,0.028276633,-0.0040756343,0.005179009,-0.017134203,-0.00075960375,-0.026499892,-0.0035015014,-0.004621415,-0.023872586,-0.003685791,-0.024515236,0.021812322,0.025157886,0.0132972,0.016614411,0.026745612,0.053037588,0.030809432,0.028144322,0.0073337792,-0.025592621,0.024137206,-0.0088648,0.012815212,0.0032675955,-0.020791642,0.037292644,0.028257731,-0.013032579,0.007130588,0.012985325,-0.015300758,0.028560156,0.016803427,0.024798758,0.012512788,0.025989553,0.00049764087,-0.0035865582,-0.00085706456,-0.015177898,-0.028786972,0.0029958866,0.008283579,0.025989553,0.009261731,-0.036007345,0.011624418,0.010169003,-0.0069368477,-0.026537696,-0.012890818,0.022190353,-0.0012853015,0.019695355,-0.015499224,0.06384924,-0.027728489,0.022114746,0.005982322,0.016056817,-0.012560042,0.016529355,0.0028139597,-0.011907941,0.013920949,0.041091844,-0.011189683,0.032094736,0.013637427]},{"id":"insert-new-interval","name":"Insert New Interval","description":"You are given an array of non-overlapping intervals `intervals` where `intervals[i] = [start_i, end_i]` represents the start and the end time of the `ith` interval. `intervals` is initially sorted in ascending order by `start_i`.\n\nYou are given another interval `newInterval = [start, end]`.\n\nInsert `newInterval` into `intervals` such that `intervals` is still sorted in ascending order by `start_i` and also `intervals` still does not have any overlapping intervals. You may merge the overlapping intervals if needed.\n\nReturn `intervals` after adding `newInterval`.\n\nNote: Intervals are *non-overlapping* if they have no common point. For example, [1,2] and [3,4] are non-overlapping, but [1,2] and [2,3] are overlapping.\n\n**Example 1:**\n\n```java\nInput: intervals = [[1,3],[4,6]], newInterval = [2,5]\n\nOutput: [[1,6]]\n```\n\n**Example 2:**\n\n```java\nInput: intervals = [[1,2],[3,5],[9,10]], newInterval = [6,7]\n\nOutput: [[1,2],[3,5],[6,7],[9,10]]\n```\n\n**Constraints:**\n* `0 <= intervals.length <= 1000`\n* `newInterval.length == intervals[i].length == 2`\n* `0 <= start <= end <= 1000`\n","difficulty":"Medium","concepts":[],"solutions":{"python":"class Solution:\n    def insert(self, intervals: List[List[int]], newInterval: List[int]) -> List[List[int]]:\n        res = []\n\n        for i in range(len(intervals)):\n            if newInterval[1] < intervals[i][0]:\n                res.append(newInterval)\n                return res + intervals[i:]\n            elif newInterval[0] > intervals[i][1]:\n                res.append(intervals[i])\n            else:\n                newInterval = [\n                    min(newInterval[0], intervals[i][0]),\n                    max(newInterval[1], intervals[i][1]),\n                ]\n        res.append(newInterval)\n        return res\n","javascript":"class Solution {\n    /**\n     * @param {number[][]} intervals\n     * @param {number[]} newInterval\n     * @return {number[][]}\n     */\n    insert(intervals, newInterval) {\n        const res = [];\n        for (const interval of intervals) {\n            if (newInterval === null || interval[1] < newInterval[0]) {\n                res.push(interval);\n            } else if (interval[0] > newInterval[1]) {\n                res.push(newInterval);\n                res.push(interval);\n                newInterval = null;\n            } else {\n                newInterval[0] = Math.min(interval[0], newInterval[0]);\n                newInterval[1] = Math.max(interval[1], newInterval[1]);\n            }\n        }\n        if (newInterval !== null) res.push(newInterval);\n        return res;\n    }\n}\n","cpp":"class Solution {\npublic:\n    vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) {\n        vector<vector<int>> ans;\n        int newStart = newInterval[0];\n        int newEnd = newInterval[1];\n        int n = intervals.size();\n        for (int i = 0; i < n; i++) {\n            if (intervals[i][0] > newEnd) {\n                ans.push_back(newInterval);\n                copy(intervals.begin() + i, intervals.end(), back_inserter(ans));\n                return ans;\n            }\n            else if (intervals[i][1] < newStart) {\n                ans.push_back(intervals[i]);\n            }\n            else {\n                newInterval[0] = min(newInterval[0], intervals[i][0]);\n                newInterval[1] = max(newInterval[1], intervals[i][1]);\n            }\n        }\n        ans.push_back(newInterval);\n        return ans;\n    }\n};\n","java":"class Solution {\n    public int[][] insert(int[][] intervals, int[] newInterval) {\n        List<int[]> res = new ArrayList<>();\n        for (int[] interval : intervals) {\n            if (newInterval == null || interval[1] < newInterval[0]) res.add(\n                interval\n            ); else if (interval[0] > newInterval[1]) {\n                res.add(newInterval);\n                res.add(interval);\n                newInterval = null;\n            } else {\n                newInterval[0] = Math.min(interval[0], newInterval[0]);\n                newInterval[1] = Math.max(interval[1], newInterval[1]);\n            }\n        }\n        if (newInterval != null) res.add(newInterval);\n        return res.toArray(new int[res.size()][]);\n    }\n}\n","csharp":"public class Solution {\n    public int[][] Insert(int[][] intervals, int[] newInterval) {\n        var result = new List<int[]>();\n        \n        for(var i = 0; i < intervals.Length; i++) {\n            if(newInterval[1] < intervals[i][0]) {\n                result.Add(newInterval);\n                result.AddRange(\n                    intervals.AsEnumerable().Skip(i).ToArray());\n                \n                return result.ToArray();\n            }\n            else if(newInterval[0] > intervals[i][1]) {\n                result.Add(intervals[i]);\n            } else {\n                newInterval[0] = Math.Min(intervals[i][0], newInterval[0]);\n                newInterval[1] = Math.Max(intervals[i][1], newInterval[1]);\n            }\n        }\n        \n        result.Add(newInterval);\n        \n        return result.ToArray();\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def insert(self, intervals: List[List[int]], newInterval: List[int]) -> List[List[int]]:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[][]} intervals\n     * @param {number[]} newInterval\n     * @return {number[][]}\n     */\n    insert(intervals, newInterval) {}\n}\n","cpp":"class Solution {\npublic:\n    vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) {\n        \n    }\n};\n","java":"class Solution {\n    public int[][] insert(int[][] intervals, int[] newInterval) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int[][] Insert(int[][] intervals, int[] newInterval) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/A8NUOmlwOlM","embedding":[-0.027961858,-0.011546749,0.023551207,-0.059502166,-0.019795913,0.017101672,0.02675517,0.015062787,-0.00441065,0.021845201,0.0032091641,-0.018682849,-0.0032715788,-0.021595541,0.012930279,0.018048298,0.013512817,0.039758265,0.0029699071,0.0634135,-0.009471455,0.036450278,0.021075418,-0.02011839,0.01583257,-0.01335678,0.015811764,0.0038437152,0.011952446,0.0008640557,0.0541761,0.00044763158,-0.026692756,0.01201486,0.00445226,0.030812137,-0.0022924459,0.05346873,-0.0011793808,-0.0034016098,0.016862415,0.007885077,-0.0063351085,-0.032705385,-0.022823034,0.025756532,-0.006563963,-0.019889535,-0.0420052,0.014084954,-0.006439133,0.009819938,-0.0057265633,-0.06262291,0.026463902,0.007484582,-0.0020271826,-0.0021442105,0.016737586,0.04518836,0.025361238,-0.02129387,0.004720124,0.022864643,-0.017954675,-0.0045042722,0.018474799,0.03499393,0.023363963,-0.038822044,-0.030583281,0.013616842,-0.024757894,0.01062613,-0.021325078,0.015978204,0.0007450774,0.027816223,0.0009888854,-0.03493152,-0.002738452,-0.043523964,-0.0075782044,0.029626254,-0.010714551,0.022282105,-0.021720372,0.017444953,-0.0059190094,-0.08034873,-0.02494514,0.007489783,-0.012025263,-0.0026045202,0.04007034,0.0028450773,0.042358886,0.00844161,-0.029293375,-0.03957102,0.03784421,-0.0336,0.03886365,-0.009362229,-0.03507715,-0.03062489,0.013762477,0.056797523,-0.023634426,0.037698574,0.039196532,-0.042608544,0.018745262,-0.046186995,0.01910935,0.004506873,-0.04959901,-0.039404582,0.017060062,0.0023639628,-0.002650031,-0.021512322,-0.003297585,-0.0055497214,-0.03513957,-0.012961486,-0.014719505,-0.042774983,-0.051513065,-0.019889535,0.024633065,-0.028336346,-0.0013061609,0.03116582,-0.015229226,-0.048725203,-0.023467988,0.011255479,-0.0086392565,0.00015953173,-0.0054456964,-0.0051050154,-0.034848295,-0.03640867,0.046062168,0.019327803,-0.0018243344,0.02943901,0.023842476,0.045646068,0.0031155418,0.029563839,0.0077654487,0.05351034,-0.026942415,0.020773746,-0.025714923,0.040528048,0.06245647,-0.009606687,-0.04406489,-0.0023587616,-0.040736098,-0.021907616,0.0035264397,0.0081555415,0.026151827,-0.002894489,-0.017299319,-0.06582687,0.016789597,-0.076770276,-0.011681981,-0.018058699,0.02461226,0.013179938,-0.016352693,-0.05762972,0.0018750464,0.06686712,-0.01251418,0.06287257,-0.049723838,0.007708235,0.013512817,0.0146570895,0.012576594,0.0027982662,-0.020305635,-0.006813622,-0.01024644,0.021845201,0.034494612,0.032996655,-0.017944273,-0.0457709,0.025860557,0.0042442107,0.0116715785,-0.004759133,0.0028580804,0.0016175851,-0.07106972,0.012618205,0.011817213,-0.013772879,-0.055715665,0.023343157,0.015718142,-0.03322551,0.023967307,-0.00890452,0.034244955,-0.036013376,0.043690402,0.032185264,-0.0075157895,-0.0016878018,0.012576594,0.021075418,-0.0018204334,0.009903158,0.0010168421,0.04514675,0.0386348,0.04086093,-0.0156141175,-0.00932582,0.008540434,0.00907096,-0.021241857,-0.010704149,0.006938452,-0.014376223,-0.0087432815,-0.016123839,-0.0024848916,-0.037656967,0.02407133,-0.0017996285,0.030562477,-0.01956706,-0.026817584,0.015822167,0.011484334,-0.023135109,-0.019473437,0.029584644,-0.023322353,0.028544396,0.040132754,-0.013304768,0.0008471517,-0.025382044,-0.0122021055,0.037823405,0.013294365,-0.00062869966,-0.027316904,0.023384769,0.0044964706,0.033683218,-0.027025634,-0.041963592,0.005716161,-0.07048718,-0.010620928,0.043523964,-0.019598266,-0.0006501548,0.03722006,0.013367183,-0.002587616,-0.06445374,0.033079877,-0.018495604,-0.012545387,0.014376223,0.021075418,-0.07918365,-0.07131938,-0.023051888,0.0032403716,-0.040528048,0.027316904,-0.0011488235,-0.015239628,0.004069969,0.019671084,-0.020815356,-0.018121114,0.038759626,-0.0057369657,0.0017697214,-0.014927554,-0.0012691022,-0.026734365,0.024965944,0.07577164,-0.01718489,0.037573747,-0.021699566,-0.02288545,0.04065288,-0.04897486,-0.022739815,-0.010683344,-0.021761982,0.043607183,0.0033105882,-0.020128792,-0.020565696,0.011723591,-0.009975975,-0.016019814,-0.016269473,-0.0151876155,-0.0063351085,-0.016498327,-0.006855232,-0.03657511,0.014293003,0.023488792,0.055341177,0.04398167,0.020721734,0.005414489,-0.008243963,-0.003373003,-0.043440744,-0.017580185,-0.015239628,-0.032060433,-0.012888669,-0.013575232,0.02242774,0.0399039,-0.010215232,-0.00058156345,0.052178822,0.027296098,-0.008285573,0.0101736225,0.025590092,0.015978204,0.011609164,0.027920248,0.033745635,-0.014136965,0.018214736,0.0078902785,0.0011546749,0.045604456,-0.0032065634,-0.015260434,0.01142192,0.022614984,0.035971764,-0.041755542,0.01142192,-0.034203343,0.009549473,0.04106898,-0.037532136,-0.010891393,0.017653003,0.039550215,-0.007120495,-0.057130404,0.046935976,0.038613994,-0.014324211,0.014844335,0.01624867,-0.056214985,-0.008566439,-0.016383901,0.013512817,0.010953808,-0.006225882,-0.036554303,0.039383776,0.030708112,0.027670588,0.035638884,0.021637151,-0.013637647,-0.0015746749,-0.060043097,-0.01570774,0.009159381,-0.0009375232,0.043523964,-0.015052384,0.05825387,0.02502836,0.040424023,0.052137215,-0.009159381,0.0016435913,-0.026942415,-0.030250402,-0.0012821052,0.030250402,-0.06486984,-0.041256223,0.025777338,0.047144026,0.0022820432,-0.027774613,-0.012441362,-0.015021176,0.0069748606,0.019140556,0.0078798765,0.020399258,-0.056589473,0.012462167,-0.020690527,-0.01016322,-0.012046068,-0.0011098143,0.015239628,-0.0147611145,0.017486563,0.0050373995,0.00025469813,-0.014188978,-0.019306997,-0.018807678,-0.020856965,0.031602725,-0.031602725,0.02633907,-0.016914427,0.02758737,0.033038266,-0.004553684,0.0013783282,-0.021189844,-0.038822044,-0.036845572,0.07344148,-0.00021048762,-0.06611814,-0.019483838,0.02667195,0.082054734,0.04805944,0.039092507,0.013492012,0.028149102,0.034681857,0.0014966563,-0.009362229,0.046062168,-0.028107492,-0.022240495,-0.0053364704,-0.0076094116,-0.059751827,0.013887307,-0.046769537,0.040881734,0.012368545,-0.008784892,0.016571146,-0.03701201,0.04443938,-0.033704024,0.008680867,0.008675666,-0.020399258,0.05263653,-0.035680495,-0.001982972,0.021637151,0.0621652,-0.051138576,0.02444582,0.044023283,-0.06828186,0.021637151,0.020191208,0.052802972,-0.012805449,-0.020461671,-0.027670588,0.014875541,-0.03280941,-0.004145387,0.009882353,0.0032273685,-0.006787616,0.018797275,0.031810775,-0.028169908,-0.01915096,0.00016603328,0.0053832815,-0.002037585,-0.025527678,0.002075294,-0.010870588,0.061790712,0.021761982,-0.030500062,-0.05338551,-0.0028112694,0.026443096,-0.020336842,0.028065883,0.008103529,-0.0062466874,0.012004458,0.028190712,0.02667195,-0.01630068,0.005435294,0.0049411766,-0.0068344274,-0.0012411455,-0.010147616,-0.023114303,-0.0055185137,-0.0020154798,-0.02498675,0.00031825076,-0.023176719,-0.020440867,-0.010995418,0.023925696,-0.0063091023,0.048808422,-0.019254984,0.011557152,-0.006641981,-0.016852012,-0.007723839,-0.014605077,-0.0008354489,0.05762972,-0.03293424,0.049515788,-0.0120980805,-0.04984867,0.009081362,0.03524359,-0.033974487,0.029792693,-0.012046068,-0.005300062,0.013627244,-0.040736098,-0.0031675543,0.030312818,-0.00032231424,0.0007190712,0.046020556,0.01587418,-0.049931888,-0.020784149,-0.001276904,0.0064183283,-0.0041427864,0.0012528483,0.03158192,-0.01461548,-0.021803591,-0.007073684,-0.013200743,-0.004595294,0.035306007,-0.024425015,0.0032611764,-0.017372137,-0.031810775,-0.051970772,0.017590588,-0.00052695046,-0.012826254,-0.0086392565,-0.0059398143,-0.012607802,0.001981672,0.012150093,-0.0155413,0.028918885,0.022011641,-0.019764706,-0.019629473,0.041381054,0.016872818,0.011910836,-0.0035836531,-0.030853746,-0.012441362,0.02423777,0.021366687,0.0078070587,-0.034078512,0.017205697,0.012410155,-0.017153684,-0.040923342,0.03112421,0.0226774,0.017705016,-0.031020185,0.0072817337,-0.0013367182,-0.009585883,0.013772879,-0.039300557,-0.027420929,-0.023051888,-0.009455851,0.03166514,0.012815852,-0.039196532,0.007942291,0.017049659,0.0026149226,0.032414116,0.010693746,0.032684583,-0.02918935,-0.032705385,0.000886161,0.019057337,-0.019036531,0.005591331,-0.015666129,0.01003839,-0.033912074,-0.039716657,0.009388235,0.011848421,0.0062466874,-0.013596037,0.034182537,-0.034619443,-0.017101672,-0.019733498,0.013304768,0.033683218,0.015291641,0.0126286065,0.0009693808,-0.004631703,-0.033183903,-0.0005809133,0.030208793,-0.00499839,0.027899442,0.030000743,0.00873808,-0.061624274,0.03158192,-0.017039256,0.0037318885,-0.0038593188,0.07007109,0.046145387,0.0533439,0.0055809286,0.012337337,0.026484706,0.030999381,0.01319034,-0.017517772,0.021033809,0.015967801,-0.020825759,0.023239132,0.00016643963,0.013970526,0.017996285,0.009138576,-0.017309722,-0.01621746,0.047768172,-0.004725325,0.056922354,-0.004720124,-0.00043397833,-0.023738451,0.030458452,-0.05068087,0.005297461,-0.029210154,0.010064396,-0.035347614,0.0023678637,0.050722476,0.020940186,0.019057337,0.02692161,0.00096743036,-0.05226204,0.05409288,-0.040715292,0.0073441486,0.0009804334,-0.052386872,0.020825759,-0.046186995,0.026526315,0.010933003,-0.005372879,0.013762477,-0.025777338,-0.007947492,0.014542663,-0.018214736,0.008077523,0.02663034,0.00529226,-0.017455356,-0.014147368,0.012961486,-0.0120980805,0.0046863155,-0.021512322,-0.025777338,-0.00032589008,-0.008644458,-0.017673807,0.0089513315,-0.060334366,-0.034744274,0.003380805,0.001482353,-0.0046993187,-0.011234675,-0.008384396,-0.055632446,0.013939319,-0.014032941,0.008301176,-0.0008621053,0.005560124,0.02663034,0.0010682043,0.00802031,0.051471453,-0.025714923,0.019369412,-0.03339195,0.02613102,-0.041401856,0.00285548,-0.011525944,-0.018308358,-0.018734861,0.0046525076,-0.018994922,0.013897709,0.015728544,-0.0012196904,0.013502414,0.03678316,-0.0020232818,-0.023572013,0.007822663,-0.019806316,-0.05380161,0.010641734,0.0032949846,0.020087183,0.022510959,-0.03834353,0.02125226,-0.030250402,0.033329535,-0.038177088,-0.04121461,0.005232446,-0.05330229,-0.020347245,-0.011099443,0.023509597,-0.02968867,-0.0060906503,0.016051022,0.04229647,0.0046551083,-0.007989102,0.009232198,-0.023426378,-0.009091765,-0.009549473,-0.0072557274,-0.009393437,0.009955171,-0.037740186,-0.0109226005,-0.005653746,-0.008384396,-0.01579096,-0.017736223,0.017944273,0.001331517,-0.03228929,-0.012150093,0.006657585,-0.032060433,0.00018805727,-0.03347517,-0.007931888,-0.021574738,0.02638068,0.019598266,0.010516904,0.050015107,-0.030187987,-0.0033469968,0.0031441485,0.015218823,0.04077771,-0.00025063468,0.015728544,-0.008280371,-0.0026916408,-0.025964582,-0.04356557,0.08101449,0.02255257,0.016103035,0.036616717,0.01440743,-0.0027488545,0.0035212385,0.03335034,0.031810775,0.03830192,0.016956037,0.021449907,0.034536224,0.060417585,-0.011952446,0.04077771,0.03124904,-0.03260136,-0.024362601,0.03742811,0.00907096,-0.0014771516,0.024112942,-0.005154427,-0.0011247678,0.008545634,0.051138576,-0.008618452,0.026255852,0.015718142,0.014833932,0.020087183,-0.002037585,0.012961486,0.009393437,-0.028440371,0.033163097,-0.002653932,-0.034681857,-0.026006192,-0.020544892,-0.01213969,0.0022066254,-0.037989844,0.013429597,0.03124904,-0.03792743,-0.01457387,0.0035004334,0.0058878018,-0.015062787,0.040548854,0.02448743,0.015010774,0.027774613,0.018006688,-0.014542663,0.022240495,-0.009148979,-0.026484706,0.038530774,0.023426378,0.018724458,-0.017559381,0.009726316,-0.038405944,0.022157276,-0.0078902785,-0.036117397,0.0071465014,0.029792693,-0.0042442107,0.04398167,0.019400619,-0.029543035,-0.04922452,0.019369412,0.019005325,0.036824767,-0.0060334364,0.02494514,0.02679678,-0.005882601,-0.0056173373,-0.0032195665,-0.017715419,-0.039550215,-0.0058409907,-0.003599257,0.014199381,0.0030687307,-0.004644706,0.028544396,-0.010168421,-0.033787243,-0.020107988,-0.014719505,0.0068656346,0.005367678,-0.015988607,-0.026963219,0.041339442,0.042400494,0.008660062,0.059002846,0.023676038,0.007458576,-0.023301547,-0.033246316,-0.0113491025,0.025631703,-0.013741672,-0.0128470585,0.008790093,-0.035118762,-0.046270218,-0.01986873,-0.013138328,0.0116715785,-0.054592196,0.019702291,-0.042067617,-0.0051934365,0.011817213,-0.016061423,-0.04258774,0.051180184,-0.0113387,-0.02469548,-0.016487926,-0.0056381426,0.025506873,0.003032322,-0.023488792,0.021761982,-0.02704644,-0.009736719,-0.021096222,0.02737932,-0.0036174613,-0.003776099,-0.0011260681,-0.004473065,-0.01444904,0.0053936844,-0.04464743,0.022802228,0.034557026,-0.0340161,0.008748483,-0.037615355,-0.024903528,0.01772582,-0.007073684,0.034244955,-0.03258056,-0.036845572,-0.0071256966,-0.0044028484,-0.0012203405,0.008197152,0.026734365,-0.027462538,0.043274302,0.049931888,0.014105759,0.010532508,-0.017351331,0.0045588855,-0.009767925,-0.03615901,-0.016103035,0.000470387,-0.0067095975,-0.035722107,-0.007942291,0.014043343,-0.013044706,-0.008940929,-0.035389226,0.013117523,0.008675666,-0.018308358,-0.00436644,-0.03112421,-0.038613994,0.033246316,0.0024042723,0.026942415,0.038801238,0.02230291,0.0028242725,-0.04439777,-0.023447182,0.016456718,-0.02407133,-0.0032169658,-0.010880991,0.01424099,-0.017132878,0.022656593,0.04443938,0.03393288,0.018256346,-0.02918935,0.0043248297,-0.013252756,0.015364458,-0.030229596,-0.009866749,0.027961858,-0.028211517,0.020846562,0.028440371,-0.029210154,-0.012857461,-0.030770525,0.026151827,-0.031353064,-0.008691269,-0.0069592567,0.0051804334,0.023717647,0.008165944,0.010017585,0.03545164,-0.049515788,0.001390031,0.008165944,-0.0026149226,0.013762477,0.028586006,0.0023587616,0.04229647,-0.011733994,-0.04356557,0.0001285681,0.0098615475,-0.0010844582,-0.0065379567,-0.0011910836,-0.032538947,-0.00957548,0.0024185758,-0.0060178326,-0.019691888,-0.029813498,0.025652507,0.0086392565,-0.0044808667,-0.07672867,-0.024258576,-0.0006374768,-0.019650279,-0.010933003,0.011962848,-0.01012161,0.021231456,-0.001041548,0.005929412,-0.008654861,-0.0016162848,0.001104613,-0.009991579,0.017132878,0.029043715,0.026026996,0.027483344,0.013221548,0.005591331,0.019629473,0.00390613,-0.026484706,-0.009897957,0.059044458,0.007968297,0.001982972,-0.0541761,0.009341424,-0.0069072447,-0.0070840865,0.0017099071,0.0028918886,0.014386625,-0.059252508,-0.004631703,-0.041131392,0.04150588,-0.016030217,-0.0116715785,0.010985015,-0.039175726,0.02683839,0.017122477,0.027733004,-0.020804953,0.023925696,0.040673684,-0.0074273683,-0.0027618576,-0.0015408669,-0.007682229,0.00031646286,-0.014677894,-0.048309103,0.0029725076,-0.010262043,-0.051929165,0.017288916,0.009622291,0.029792693,-0.012118885,-0.0058878018,0.0014459443,-0.0033365944,0.012254118,-0.012691022,-0.045438018,0.03636706,-0.023155913,0.010199629,0.052303653,0.021699566,-0.019244581,0.009242601,0.018838886,0.026214242,0.027400123,0.006735604,-0.0023886687,-0.050639257,-0.0042494116,-0.004860557,0.0143346125,-0.0011936842,0.0056589474,0.020222414,0.024154551,-0.015156409,0.0128366565,-0.05018155,-0.0014758514,-0.017351331,-0.018339567,0.006116656,0.020596905,0.0091125695,-0.013762477,0.016477523,0.023072693,-0.027316904,0.00039626934,0.00050582044,0.00235226,0.00949226,-0.008878514,-0.0046551083,-0.043024644,-0.010012384,0.0033547988,0.0040673683,-0.039966315,0.0011176161,-0.009190588,0.015811764,0.0008432508,-0.020274427,-0.03154031,0.024903528,0.018641239,-0.051637895,-0.031311456,0.0078070587,0.016019814,-0.00205839,-0.041318636,-0.013325573,0.024882725,-0.014511455,0.013034304,0.022053251,-0.016862415,0.020461671,0.02116904,0.04481387,0.015447678,-0.012462167,-0.04121461,-0.036741547,-0.029210154,-0.019598266,0.03599257,-0.013918513,0.009695108,0.0037266873,0.029459814,-0.0073909597,0.0009648297,0.035222787,0.006870836,-0.038946874,0.01037647,-0.05305263,-0.01574935,-0.022198886,-0.016727183,-0.005404087,0.0008458514,0.029771889,-0.005742167,0.00034295666,0.008717275,0.054425757,-0.0011832818,-0.025319628,-0.0068344274,-0.027753808,-0.021033809,0.03788582,-0.030562477,-0.00978873,0.046062168,0.012899071,-0.0030817338,-0.0050998144,-0.010007182,0.0491413,0.018017089,0.0023665635,-0.020180805,0.01574935,0.017247306,-0.022406936,-0.0037058822,-0.024861919,-0.01570774,-0.008722477,-0.0144386375,0.0008848607,-0.0059658205,-0.013980929,0.028107492,0.0053832815,-0.023592817,0.022365324,0.006829226,-0.02914774,0.005313065,0.02020161,-0.0024627864,-0.0060334364,0.01222291,0.0056173373,0.016030217,0.0062518883,-0.022261301,0.013294365,0.00844161,-0.007864272,-0.00898774,0.013897709,-0.032538947,0.0092738075,-0.026567925,0.026900806,0.0005636842,-0.019837523,-0.004007554,0.016207058,0.041776348,-0.038988482,0.0010786068,-0.030250402,0.010064396,-0.01201486,0.02881486,0.013492012,0.020908978,-0.017424148,0.03231009,-0.006876037,0.011265882,0.020544892,0.03372483,-0.0039217337,-0.0002595743,-0.0020440866,0.021637151,0.007968297,0.016779196,-0.0053156656,-0.024133746,0.012035665,0.015374861,-0.010891393,0.041131392,-0.01836037,-0.0019101548,0.0049931887,0.021574738,0.048101053,-0.011702786,0.021054612,-0.0034952322,0.020003963,-0.04061127,-0.0011286687,-0.017611394,-0.004254613,-0.009383034,-0.013835294,0.001533065,0.018828483,0.018693252,-0.0053624767,0.0006485294,-0.034120124,0.0011865326,0.01025164,-0.030167183,0.022968668,-0.0105533125,-0.025902167,-0.004431455,0.020170402,0.03166514,-0.0023847679,0.028045077,-0.020700928,0.005591331,0.012181301,0.021720372,-0.07672867,0.015031579,-0.02457065,0.031561114,-0.016976843,0.015842972,0.03414093,0.010397276,-0.010454489,0.02263579,0.019306997,-0.01768421,-0.010974613,-0.011619566,-0.017829845,-0.014126563,-0.0065587615,-0.029959133,-0.027524954,-0.022261301,-0.0010831578,-0.027524954,0.016904024,0.009767925,-0.008004705,0.03405771,0.012410155,0.014074551,0.016820805,0.0008432508,0.029896718,0.020378452,0.005539319,0.012961486,-0.0147611145,0.027150463,0.035014737,-0.041672323,0.0151876155,0.027795417,0.021491516,0.004179195,0.008160743,0.00336,0.026047802,0.006631579,0.02469548,-0.0066159754,0.028565202,0.016643962,0.0036902786,0.008124335,0.0056849536,-0.0112450775,-0.036741547,-0.011224273,-0.0071725077,-0.020440867,0.009435046,-0.022406936,0.027067244,-0.034889907,-0.068406686,0.0053572757,-0.002116904,-0.03170675,0.0015421672,0.016872818,-0.0042910217,0.026484706,-0.029709473,-0.04814266,-0.03734489,0.008347987,0.030895356,-0.020638514,0.022510959,0.018620433,0.0032793807,0.027150463,0.007203715,0.041360248,0.014875541,0.012378947,-0.028211517,0.0016461919,-0.023363963,-0.018890897,-0.0037891022,-0.015905388,0.017247306,0.03607579,-0.05380161,0.01629028,0.031602725,-0.025069969,0.04183876,0.005011393,0.034848295,-0.041880373,0.0044002477,0.0099655725,-0.003112941,0.0129510835,-0.0056641484,0.021907616,-0.021231456,-0.059710216,0.023655232,0.019754304,0.020732136,0.020721734,-0.032663777,-0.043732014,-0.005346873,0.04460582,-0.0032143653,-0.014126563,0.014147368,0.034244955,0.0018399381,-0.015010774,0.0022989474,0.020846562,0.02869003,-0.0018763468,-0.01877647,-0.014209784,-0.02881486,0.044023283,0.03330873,0.01440743,0.0060594426,-0.013492012,0.027628979,0.011380309,0.0026396285,0.0043586376,-0.010860186,0.0017060061,0.01424099,0.023967307,-0.012701424,0.027712198,-0.0105013,0.021533126,-0.016810402,-0.0075001856,0.019078143,-0.01104743,-0.018807678,0.004153189,0.013554427,-0.020055976,-0.04023678,-0.018547615,0.02465387,-0.024425015,-0.016103035,0.037740186,-0.0017580185,0.014251393,0.025090775,0.018880496,-0.0061426624,-0.025132384,0.018173127,0.009211393,0.018318761,0.012285325,-0.031810775,0.0028866872,-0.008779691,0.030791331,0.034557026,-0.034806687,-0.014126563,-0.006179071]},{"id":"rotate-matrix","name":"Rotate Matrix","description":"Given a square `n x n` matrix of integers `matrix`, rotate it by 90 degrees *clockwise*.\n\nYou must rotate the matrix *in-place*. Do not allocate another 2D matrix and do the rotation.\n\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/e13e93ed-4fdb-49e4-f971-de1e30356600/public)\n\n```java\nInput: matrix = [\n  [1,2],\n  [3,4]\n]\n\nOutput: [\n  [3,1],\n  [4,2]\n]\n```\n\n**Example 2:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/37d34844-e6a0-4809-0895-f15e782efe00/public)\n\n```java\nInput: matrix = [\n  [1,2,3],\n  [4,5,6],\n  [7,8,9]\n]\n\nOutput: [\n  [7,4,1],\n  [8,5,2],\n  [9,6,3]\n]\n```\n\n**Constraints:**\n* `n == matrix.length == matrix[i].length`\n* `1 <= n <= 20`\n* `-1000 <= matrix[i][j] <= 1000`\n","difficulty":"Medium","concepts":[],"solutions":{"python":"class Solution:\n    def rotate(self, matrix: List[List[int]]) -> None:\n        l, r = 0, len(matrix) - 1\n        while l < r:\n            for i in range(r - l):\n                top, bottom = l, r\n\n                # save the topleft\n                topLeft = matrix[top][l + i]\n\n                # move bottom left into top left\n                matrix[top][l + i] = matrix[bottom - i][l]\n\n                # move bottom right into bottom left\n                matrix[bottom - i][l] = matrix[bottom][r - i]\n\n                # move top right into bottom right\n                matrix[bottom][r - i] = matrix[top + i][r]\n\n                # move top left into top right\n                matrix[top + i][r] = topLeft\n            r -= 1\n            l += 1\n","javascript":"class Solution {\n    /**\n     * @param {number[][]} matrix\n     * @return {void}\n     */\n    rotate(matrix) {\n        let l = 0;\n        let r = matrix.length - 1;\n\n        while (l < r) {\n            for (let i = 0; i < r - l; i++) {\n                const top = l;\n                const bottom = r;\n\n                // save the topleft\n                const topLeft = matrix[top][l + i];\n\n                // move bottom left into top left\n                matrix[top][l + i] = matrix[bottom - i][l];\n\n                // move bottom right into bottom left\n                matrix[bottom - i][l] = matrix[bottom][r - i];\n\n                // move top right into bottom right\n                matrix[bottom][r - i] = matrix[top + i][r];\n\n                // move top left into top right\n                matrix[top + i][r] = topLeft;\n            }\n\n            r -= 1;\n            l += 1;\n        }\n    }\n}\n","cpp":"class Solution {\npublic:\n    void rotate(vector<vector<int>>& matrix) {\n        int l = 0;\n        int r = matrix.size() - 1;\n        \n        while ( l < r ) {\n            for(int i = 0; i < r - l; i++) {\n                int top = l;\n                int bottom = r;\n\n                //save the topleft\n                int topLeft = matrix[top][l + i];\n\n                //move bottom left into top left\n                matrix[top][l + i] = matrix[bottom - i][l];\n\n                // move bottom right into bottom left\n                matrix[bottom - i][l] = matrix[bottom][r - i];\n\n                // move top right into bottom right\n                matrix[bottom][r - i] = matrix[top + i][r];\n\n                // move top left into top right\n                matrix[top + i][r] = topLeft;\n                \n            }\n            \n            r -= 1;\n            l += 1;\n        }\n    }\n};\n","java":"class Solution {\n    public void rotate(int[][] matrix) {\n        int l = 0;\n        int r = matrix.length - 1;\n        \n        while ( l < r ) {\n            for(int i = 0; i < r - l; i++) {\n                int top = l;\n                int bottom = r;\n                 //save the topleft\n                int topLeft = matrix[top][l + i];\n\n                //move bottom left into top left\n                matrix[top][l + i] = matrix[bottom - i][l];\n\n                // move bottom right into bottom left\n                matrix[bottom - i][l] = matrix[bottom][r - i];\n\n                // move top right into bottom right\n                matrix[bottom][r - i] = matrix[top + i][r];\n\n                // move top left into top right\n                matrix[top + i][r] = topLeft;\n                \n            }\n            \n            r -= 1;\n            l += 1;\n        }\n    }\n}\n","csharp":"public class Solution {\n    public void Rotate(int[][] matrix) {\n        (int left, int right) = (0, matrix.Length -1);\n        \n        while(left < right) {\n            var limit = right - left;\n            for(var i = 0; i < limit; i++) {\n                (int top, int bottom) = (left, right);\n                \n                // save the top left position\n                var topLeft = matrix[top][left + i];\n                \n                // put the bottom left value to the top left position\n                matrix[top][left + i] = matrix[bottom - i][left];\n                \n                // put the bottom right value to the bottom left position\n                matrix[bottom - i][left] = matrix[bottom][right - i];\n                \n                // put the top right value to the bottom right position\n                matrix[bottom][right - i] = matrix[top + i][right];                 \n\n                // put the saved top left value to the top right position\n                matrix[top + i][right] = topLeft;    \n\n            }\n            \n            left++;\n            right--;\n        }\n        \n        return;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def rotate(self, matrix: List[List[int]]) -> None:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[][]} matrix\n     * @return {void}\n     */\n    rotate(matrix) {}\n}\n","cpp":"class Solution {\npublic:\n    void rotate(vector<vector<int>>& matrix) {\n        \n    }\n};\n","java":"class Solution {\n    public void rotate(int[][] matrix) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public void Rotate(int[][] matrix) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/fMSJSS7eO1w","embedding":[-0.005537075,-0.024135437,0.002307977,-0.03127671,-0.014913878,-0.0006588214,0.0056457464,0.008398759,-0.0284823,0.039763443,-0.006861833,-0.024031939,0.0002548607,0.010447995,-0.012668,0.0059872856,0.026971247,-0.03282916,-0.015731502,0.014448143,0.0077208555,-0.023949143,0.0347335,-0.008833446,0.033056855,0.03694833,0.005172249,-0.013495973,-0.006577217,0.0067531615,0.033015456,-0.016704371,-0.010825758,-0.010070232,-0.013340728,-0.010147854,-0.01612479,0.021403123,0.0011688662,0.046946116,0.024549423,-0.013433875,-0.012543803,-0.01549346,-0.007358617,-0.0037983297,-0.014624087,0.005837215,0.011446738,0.036265254,-0.0015304579,0.009723517,0.02937237,0.0018797592,-0.05187256,-0.024632221,-0.02906188,0.03698973,0.022976274,0.043551423,0.047484297,-0.013527022,0.04466919,-0.017170107,0.010437645,0.042599253,-0.055474244,0.022396691,-0.011819326,-0.058620546,-0.07749835,-0.01169513,0.03669994,-0.024611522,-0.051665567,-0.020378506,-0.01678717,0.04611814,0.049181644,0.0110638,0.022686481,-0.021113332,0.06607231,0.033036154,0.0014360171,0.018629411,-0.0031644125,-0.04040512,0.011560584,-0.057626978,0.007855401,-0.011519185,-0.025087606,0.028275305,0.02091669,-0.0033196574,0.03928736,0.03185629,-0.0071930224,0.035250984,0.00050098886,-0.02781992,0.0347749,0.03986694,0.007467289,-0.027550828,0.0348163,0.0012736566,0.0017943744,0.013754715,-0.04208177,-0.03415392,0.016983813,-0.02877209,0.020140463,-0.0029910554,0.0034697277,-0.013061287,-0.014417094,-0.016890666,-0.0012548978,-0.023638653,-0.029744959,0.0041864426,-0.03224958,-0.021672215,-0.0054542776,-0.02817181,-0.006075258,0.031069716,0.011208695,0.0008312081,-0.0006109541,-0.04040512,-0.027612926,-0.029951952,0.058620546,0.051665567,0.008093444,0.043013237,-0.01455164,0.011529535,-0.043220233,-0.035209585,0.043054637,0.013713316,-0.0023610191,0.01834997,0.006344349,-0.0018448292,0.033056855,0.036389448,-0.0020932213,0.087682426,-0.029600063,-0.030842025,0.011953872,0.015389963,0.017935982,0.0065306434,-0.011871074,-0.018474165,-0.051044583,-0.013320029,0.012150516,0.00021847512,-0.016600875,-0.02181711,-0.030076148,-0.044420794,0.036969032,-0.044462193,-0.03419532,-0.016838918,0.053569905,0.04582835,-0.017967032,-0.048229475,-0.021341024,0.019136544,-0.026640058,-0.0031825243,-0.023949143,-0.0012393733,0.010220301,0.038811274,-0.01987137,-0.029496567,-0.038769875,-0.007777779,0.0052446965,0.024590822,-0.021403123,0.0017581506,0.002970356,-0.011332892,0.046904717,-0.047360104,-0.009557922,-0.0017659129,-0.0039768615,-0.0060079847,0.018122276,0.02307977,0.0025330824,-0.0061373557,-0.06801805,-0.009764916,-0.02556369,-0.014127303,0.003994974,-0.020326758,-0.004033785,-0.029931253,0.03094552,0.024156136,0.0028202857,-0.014085905,-0.01550381,0.061766844,-0.0474015,0.048353672,-0.00010592243,0.012730097,0.011012051,0.02498411,-0.012709398,0.013081986,0.016963113,0.019767875,-0.003994974,-0.049554233,0.040301625,-0.012129816,0.06921861,-0.076918766,-0.051665567,-0.0505478,-0.022976274,0.027612926,0.04678052,0.011726179,-0.0038086795,-0.038480084,-0.0036172105,-0.02243809,-0.00022866308,0.00038552532,-0.0076846317,-0.0046004294,0.0007678163,0.01611444,-0.020595849,-0.03440231,-0.034381613,0.07203372,-0.009635545,-0.03198049,-0.034588605,0.012709398,-0.024694318,0.07178533,-0.0726547,-0.037776306,-0.009925336,-0.038935468,-0.0033843429,0.022582985,0.0004456828,0.013009539,0.011229395,0.010970653,-0.05307312,-0.009977085,0.0065306434,-0.03313965,0.007084351,0.0044839955,-0.00040104982,-0.019985218,-0.019208992,0.011653732,0.042889044,-0.00024693672,0.00426924,-0.012119466,-0.022582985,0.024942711,0.005469802,-0.049223043,-0.022955574,0.005666446,0.004357212,0.036182456,-0.0023649002,0.008165891,-0.03829379,-0.0028668593,-0.009392328,-0.00016818217,0.0065202937,-0.03628595,-0.041978274,0.0028306355,-0.0252532,0.010241001,-0.024301032,-0.042682048,0.015410663,0.04582835,-0.019757524,0.046325136,0.01897095,0.021630816,0.008388409,-0.030158946,0.004815185,-0.033677835,-0.019384937,-0.0153175155,-0.038480084,-0.047608495,0.015141571,0.049512833,0.002276928,0.0071826726,-0.03986694,0.023990542,0.037507214,-0.07186813,-0.0036042735,-0.036844835,-0.008305612,-0.030572932,-0.025977679,-0.0009948623,0.059324324,0.015151921,-0.003019517,-0.026329568,-0.015089823,0.0016041993,0.046242338,-0.002112627,-0.020306058,0.008290088,-0.003032454,0.016538776,0.0024282918,-0.025460195,-0.020295708,-0.032497972,0.007995122,0.023203965,0.009014565,0.009873588,-0.05592963,0.05116878,-0.034381613,-0.0058734394,-0.05029941,-0.02815111,-0.010468693,-0.023535155,-0.011539885,0.060110897,-0.015358914,-0.0042847646,0.020192211,0.044338,0.04582835,-0.014965626,-0.033077553,0.030717827,-0.014386045,-0.04963703,0.0124196075,0.047567096,-0.035768468,-0.016207587,-0.059531316,0.012057369,-0.013682267,-0.013226882,-0.008952467,0.032746363,-0.0059872856,0.002970356,-0.017573744,0.0134856235,0.021030534,-0.0034438535,0.007891625,0.020099064,0.058537748,0.019571232,0.042433657,0.06598951,0.030821325,-0.0061580553,0.04934724,-0.031794194,-0.029144678,0.0021527319,-0.047691293,-0.025460195,0.030158946,0.029144678,-0.00884897,-0.005971761,-0.015245068,-0.035499375,0.012181564,0.05911733,-0.021485921,0.000068930436,-0.037486516,0.010075406,-0.024156136,0.02558439,-0.04168848,-0.023804247,0.026122574,-0.021485921,0.008367711,0.048519265,-0.02334886,-0.013164784,-0.008171067,-0.015876397,-0.0004932266,0.04483478,-0.029227475,-0.0049859546,0.004639241,0.0316079,0.01736675,-0.008005472,0.009785616,-0.03227028,0.0074724634,-0.029310273,0.021061584,-0.0030971395,0.0031980488,-0.032497972,0.01645598,0.057337187,0.015834998,0.010908555,0.022210397,-0.030386638,0.06416797,0.0059924605,0.008755823,-0.012057369,0.018939901,-0.008895543,0.01326828,-0.017760038,-0.052907526,0.010380722,-0.02870999,0.0027116141,0.009697643,0.0011164709,-0.00017093131,-0.025356697,-0.013475274,-0.032435875,0.0015899685,0.0378591,0.017935982,0.03419532,-0.029537966,0.04179198,0.0057751173,0.005573299,-0.021734312,0.0033377693,0.029682862,-0.03574777,-0.049885422,0.0006973092,0.018049829,-0.02247949,-0.03361574,-0.009475125,0.04773269,-0.013878911,0.0011902123,0.042226665,-0.059075933,-0.0058320407,0.04615954,-0.02753013,-0.0411089,-0.060938872,-0.02091669,-0.008771348,-0.0057751173,0.008481557,-0.010960303,0.03752791,-0.019985218,0.0063702236,-0.0108464565,-0.0064374963,0.012750797,0.08702005,-0.014613737,-0.009635545,0.005017004,0.0086109275,0.011560584,0.034712803,-0.018712208,-0.0058889636,-0.0253153,-0.0072965194,-0.012378208,-0.0030583283,-0.02748873,-0.0002784709,0.005029941,-0.04707031,-0.016383532,-0.021920606,-0.026184672,0.015100173,-0.012285061,0.0085591795,-0.027116142,0.039929036,0.0073534423,-0.0026042364,0.0005258927,0.00853848,-0.026453763,-0.021258228,0.034381613,0.041295193,0.003037629,0.026784953,-0.007519037,-0.041005403,-0.01931249,0.01548311,0.00632365,0.035520077,-0.017615143,-0.03883197,-0.018784655,-0.013506323,-0.002539551,-0.013175134,0.005407704,0.03448511,0.046283737,0.016373182,-0.029517267,0.017480597,-0.019767875,-0.0058889636,-0.023928443,0.026805652,0.002472278,0.0036094482,0.024777116,-0.001707696,0.023307463,-0.010344498,0.025191102,-0.008414283,-0.00045247475,0.00011667639,-0.020399205,-0.04868486,-0.0076846317,0.009588972,-0.020937387,-0.03634805,-0.04495898,-0.029227475,0.006199454,-0.039991137,-0.01424115,0.02622607,0.023597253,-0.0056353966,-0.01643528,0.032932658,-0.009713167,0.016901016,-0.021123681,-0.036161754,0.0054491027,0.046904717,0.02877209,0.012616251,0.011446738,0.05174836,0.012026319,-0.018080877,-0.041274495,-0.026391665,0.034878395,0.02560509,-0.012885342,-0.0009851594,-0.0009062432,0.017987732,-0.006763511,-0.03289126,-0.0028306355,0.008921417,-0.01327863,0.042889044,0.010308274,-0.003873365,0.013878911,0.027261037,0.049471434,0.024011241,0.0065513426,0.0066289655,-0.0100805815,-0.010929254,-0.03736232,0.012843944,-0.0142101,-0.010732611,-0.008802396,0.0048229476,-0.03535448,-0.0054594525,0.01422045,-0.02114438,0.013164784,-0.010753309,-0.020720044,0.016673323,-0.040653516,-0.010463519,-0.0018202487,-0.008114143,0.030117547,0.02753013,-0.025170404,-0.013816813,-0.02274858,-0.0009146523,0.030883422,0.0059614116,0.014417094,-0.017149407,0.0081296675,-0.053901095,0.014893179,-0.022396691,0.001494234,-0.005270571,-0.0011869781,-0.008988691,0.0019017523,-0.013237231,-0.030904122,-0.005304207,0.02336956,0.0070067286,0.002734901,0.0004851409,0.0205648,-0.012481705,0.005588823,0.004491758,0.0027064395,0.009278482,-0.014251499,0.001903046,0.0076691075,-0.00057117257,0.00411917,0.064706154,-0.00023965961,-0.013102685,-0.025522292,0.013671918,-0.034340214,-0.015193319,-0.0014994089,0.04015673,-0.024135437,-0.023307463,0.037693508,-0.007493163,0.025812084,0.012450656,0.045662757,-0.06139426,0.029765658,0.015948845,0.0069394554,0.039929036,-0.016466329,-0.027343836,0.014779332,0.002796999,0.01640423,0.010929254,-0.0003344238,-0.032684267,-0.0014838843,-0.011612332,-0.05249354,-0.0035240636,0.022210397,0.010292749,-0.028337404,0.013527022,-0.0025369634,0.006220153,-0.027385233,-0.028523698,-0.031214612,-0.03345014,-0.0316286,0.028979084,-0.0153175155,-0.027902717,0.008760998,0.015141571,0.03990834,0.0051282626,0.023949143,-0.03665854,-0.00790715,-0.0055319,-0.0039147637,-0.012129816,-0.0569646,-0.00868855,0.022893475,-0.014820731,0.010178903,0.04334443,-0.0284616,-0.026826352,-0.022831379,0.02051305,-0.009506174,0.0033325946,0.01422045,-0.0205648,-0.017511645,-0.022541586,-0.0110638,-0.025708586,-0.048477866,-0.010929254,-0.02274858,0.041771278,-0.0048591713,-0.042889044,0.020647597,-0.012719748,-0.02089599,0.009749391,0.0010524323,-0.0075449115,0.011208695,0.0047168634,0.026060475,-0.021258228,0.03825239,-0.018763956,-0.004993717,0.0070274277,0.015617656,-0.037776306,-0.008352186,0.06503734,-0.022603685,0.01868116,0.025729286,0.0014605975,-0.020730395,-0.014924228,0.05779257,-0.017967032,-0.015586607,-0.022169,0.037445117,-0.013661568,0.020388855,-0.003632735,0.031732097,0.0060235094,-0.0347335,0.003904414,-0.029496567,0.037486516,-0.0020647596,-0.0021113332,0.0110845,0.04228876,-0.03324315,0.01326828,-0.039101064,0.013009539,0.0039406377,0.061808243,-0.051085982,-0.0052679833,0.03067643,-0.013216532,0.005438753,-0.021568717,0.0034749026,0.008083094,0.007855401,-0.038397286,-0.015628006,0.038604278,-0.021465221,0.007234421,0.005006654,-0.008440158,0.036596444,0.018194724,0.0042537153,-0.036596444,-0.024197534,0.026702154,0.044172402,0.0010789534,0.011757228,-0.041771278,-0.00010390101,0.019674728,-0.008476382,0.03674134,-0.02781992,-0.02053375,-0.017025212,0.030904122,0.0029936428,-0.050713394,0.057378586,-0.05816516,0.01138464,0.021423822,0.020947738,-0.008284912,-0.0070584766,-0.00021604942,0.03262217,0.020616548,0.00068501895,0.002059585,0.03632735,-0.016631924,0.005806166,-0.075759605,-0.0065616923,-0.032208182,-0.027716422,-0.010489393,0.011446738,0.006334,0.000038022918,-0.017335702,-0.03665854,0.00949065,0.021548018,0.005053228,-0.050051015,-0.010825758,0.015348565,-0.0014191988,0.0051101507,0.005304207,-0.024694318,0.029186077,-0.007229246,-0.039432254,0.011043101,0.0017309828,0.014396395,-0.012129816,-0.015410663,-0.011488137,0.027592227,-0.025191102,0.019467734,0.002530495,0.023555854,-0.044420794,0.04620094,0.0035163013,-0.010774009,-0.026660757,0.023949143,0.019985218,-0.011664081,0.006080433,-0.007824352,0.010437645,-0.062470622,-0.018577661,-0.010815408,0.00005005037,-0.0068204342,0.007933024,0.03189769,0.06872182,-0.012305761,0.005971761,-0.0077001564,-0.010649813,0.0124713555,-0.024922011,-0.0042485404,0.0012296705,0.046573527,0.04574555,-0.013765065,0.017139059,0.051706966,0.005537075,0.0379419,0.017221855,0.027468031,-0.015659055,-0.02247949,-0.021982705,-0.01734605,0.0024645159,0.0129784895,-0.01609374,-0.010918905,0.0005627634,-0.007136099,-0.010877506,-0.005443928,-0.05000962,0.021051234,0.033098254,0.030407337,0.03502329,0.03098692,-0.0125231035,0.031049017,-0.011943522,-0.035209585,-0.020212911,0.006639315,-0.012450656,0.021423822,-0.012274711,-0.029517267,-0.02686775,0.00037258823,-0.020523401,0.029558664,0.016497377,0.005971761,-0.004132107,0.03508539,-0.022582985,0.0003038599,0.0025809496,-0.029951952,0.04330303,-0.028565096,-0.038604278,-0.017242555,-0.023804247,0.028958384,-0.04868486,0.038169593,-0.03181489,-0.048270874,-0.0009851594,-0.0120159695,-0.055225853,-0.019198643,0.0054853265,0.009076663,0.0065151188,0.06507874,0.045041773,0.032125384,0.0034878396,-0.025356697,-0.017501296,-0.0026094113,-0.00035771055,0.013609819,-0.021610117,-0.024445927,-0.023017671,0.027074743,-0.024632221,-0.004243366,-0.015586607,0.04079841,-0.011788277,-0.02620537,0.010598064,-0.013837513,-0.0010796002,-0.014396395,0.006582392,-0.008212465,-0.009516524,0.034133222,-0.0474429,-0.019674728,-0.03636875,0.0028487474,-0.013351077,0.023514455,0.0069705043,-0.021361724,-0.037486516,-0.011560584,0.04046722,0.04491758,0.02241739,-0.009061138,-0.017915282,-0.0039380505,-0.0056509213,-0.034836996,0.009832189,0.027923416,-0.026019078,0.0046987515,0.01895025,0.020471653,-0.00045409187,-0.017190807,0.018577661,-0.0015951432,-0.024570122,-0.034505807,0.0025473132,-0.014189401,-0.023431659,-0.014085905,0.0075707855,-0.03607896,0.004921269,-0.001983256,0.025687888,0.04512457,0.016300734,0.04235086,0.0028772089,-0.024487326,0.0068411333,0.0037672808,-0.012833594,-0.005785467,0.0031902865,0.04183338,-0.04996822,-0.031069716,-0.016652623,0.006949805,0.0037284696,-0.026433064,-0.012906042,-0.013050937,-0.023866344,-0.01705626,0.0075966595,-0.01832927,-0.009444077,0.016507728,-0.011902124,0.007146449,-0.00852813,-0.010323798,0.01582465,0.023907743,-0.018360319,-0.02051305,-0.02939307,0.027882017,0.034091823,0.02087529,-0.0064944196,0.0017102833,-0.0049600806,0.012481705,-0.04204037,-0.0045590308,0.011560584,0.004113995,-0.008176241,-0.000844792,-0.033677835,-0.027675025,0.013972058,-0.0379419,0.014489542,-0.011281143,-0.024011241,-0.0008305612,-0.012243663,-0.018339619,0.012564503,0.000055508204,-0.040922605,-0.0071309246,-0.0049833674,-0.0030686778,0.003601686,0.047649894,-0.03601686,0.008776522,-0.005288683,-0.038976867,-0.037548613,-0.0041553937,-0.033118952,0.0136408685,0.007953723,-0.027343836,-0.009749391,-0.031504404,0.0119642215,0.0048307097,-0.0019767876,-0.015948845,-0.030883422,-0.02873069,-0.01058254,0.02245879,0.009770091,0.0074362396,-0.02117543,0.026495162,0.014044506,0.01640423,0.044793382,0.0051334375,0.0061528804,-0.016611224,0.011736529,0.03253937,0.0003166353,0.024859913,-0.027985515,-0.020005917,-0.013237231,-0.054397877,0.003971687,-0.02434243,0.026660757,0.014158352,-0.028854888,0.017170107,0.005599173,-0.01929179,0.0039742743,0.018215423,0.0080779195,-0.018670809,-0.011415689,0.012678348,-0.0054853265,0.0066548395,0.007814003,0.002903083,0.016952764,-0.0059614116,0.01517262,-0.034588605,0.0252739,0.02562579,-0.020399205,-0.005552599,-0.006039034,-0.0050946265,-0.03730022,0.015038074,-0.021899907,0.046035342,-0.019105496,0.019881722,-0.06367119,-0.016973464,-0.011281143,-0.022934875,0.00026715093,0.027343836,0.013361427,0.017904934,-0.043137435,-0.017666891,0.020482002,-0.004406373,0.027426632,0.0015265767,0.005971761,0.019767875,-0.02686775,0.044751983,0.008693725,-0.0070533017,-0.013423526,-0.029144678,-0.022852076,0.022603685,0.0048488216,-0.0030738527,0.010354848,0.006090782,-0.002499446,0.0005925188,-0.010360022,0.013630519,-0.059862506,0.01453094,0.029475868,0.030842025,0.0031592376,0.022334594,-0.013123385,-0.013413176,-0.0030790276,-0.018391369,0.0002978765,0.001320877,0.03539588,0.093064256,-0.0043649743,-0.0015770313,0.019788574,0.0060183345,-0.022686481,0.013299329,-0.00093858596,0.00805722,0.04930584,-0.013713316,0.019943818,-0.0016818218,-0.006220153,0.024590822,-0.024466626,0.03858358,0.0107947085,-0.027737122,0.03885267,-0.009692469,-0.023845647,0.0008480263,-0.02026466,-0.018153327,-0.0026197608,0.067893855,0.0044891704,-0.01802913,0.04172988,-0.002076403,0.004672877,0.0043287505,0.0189606,0.011664081,0.036265254,0.019219343,0.014561989,0.032083984,0.015245068,0.0410675,0.05216235,-0.00047931922,0.024756417,0.008802396,0.0005119854,0.014561989,0.013858211,0.018287871,-0.022852076,0.022914175,0.014075555,-0.016662972,0.027364533,0.0151622705,0.023990542,0.020368155,-0.00401826,-0.0062615518,-0.017573744,-0.04586975,-0.015710803,-0.014944927,-0.01137429,-0.0046133664,0.012595551,-0.032456573,0.011726179,0.015307166,0.05775117,-0.018795006,-0.0002480687,-0.040384423,0.010918905,-0.024073338,-0.019943818,0.016321434,-0.031835593,-0.009376803,-0.037258822,0.01042212,-0.016393881,0.001769794,0.049802624,-0.027198939,0.033698533,-0.047939684,-0.03262217,0.051665567,-0.019188292,0.017760038,-0.019850671,0.001840948,-0.03502329,-0.004145044,-0.042557854,0.0073120436,-0.030593632,-0.006230503,-0.0032497973,0.04334443,-0.0020272422,-0.020119764,-0.017946333,-0.013868561,0.016155839,-0.028068312,0.018153327,0.033802032,0.023473058,-0.03862498,-0.04636653,0.022603685,-0.0022872777,-0.004634066,0.0021372074,0.0035111264,0.043137435,0.026619358,0.048022483,-0.03291196,-0.0026857401,-0.007834702,0.026412364,0.03224958,0.0061580553,0.018401718,-0.009940861,0.0505892,-0.027012646,0.0073120436,-0.011415689,-0.0037646934,-0.02084424,0.015617656,-0.0044710585,-0.030179646,-0.04678052,-0.050382204,-0.0010589008,-0.023473058,-0.00042563028,0.011281143,0.017532345,-0.014386045,-0.0018293046,0.0007839877,0.02877209,0.006070083,0.026288169,0.025542991,0.027240338,-0.0024399352,0.039038964,-0.01674577,0.043261632,-0.0091439355,-0.023949143,0.011601983,0.029931253,0.03100762,0.019426335,0.013371777,0.02558439,0.020740744,0.019757524,-0.003824204,0.027716422,0.021775711,0.018277522,-0.0014088491,0.02305907,0.00081568357,0.04669772,-0.042309463,-0.036265254,-0.017553044,0.0000062512427,-0.017201155,-0.00529127,-0.016166188,0.018753607,0.010044357,-0.03345014,0.0018150738,-0.036803436,-0.023266064,-0.027964815,-0.026971247,0.027198939,0.012792195,-0.022976274,-0.020450953,0.005599173,0.03974274,-0.021361724,0.007653583,0.010054707,0.015979895,0.039266657,-0.007989948,0.048188075,-0.02465292,-0.015296816,-0.05207955,0.00071024627,-0.047608495,0.021589417,0.0030402164,-0.010556666,0.01991277,-0.009216383,-0.048229475,0.026288169,0.009211209,-0.016373182,0.030179646,-0.017190807,0.00058928446,-0.009713167,0.024632221,-0.0046081915,0.02434243,-0.008300438,-0.010908555,-0.013351077,-0.038438685,-0.022665784,0.019167593,-0.013609819,0.022562286,0.00081568357,0.013713316,-0.0067686858,-0.009356104,-0.0072551207,-0.0060286843,0.037838403,-0.0020362982,0.014934578,-0.020130113,0.010949953,-0.008476382,-0.012119466,-0.008740298,-0.002784062,0.01009093,0.00032698497,-0.0102824,0.017490946,0.023307463,0.0025072081,-0.005148962,-0.03284986,0.033657134,0.015348565,-0.012823245,0.021361724,0.006075258,0.028296005,0.03280846,-0.010147854,-0.008673025,0.009604496,0.0027142016,0.016383532,-0.017739339,-0.011850375,0.008755823,-0.020606197,0.008647151,0.017967032,-0.055805434,0.00529127,-0.0045460938,0.023307463,-0.00019163065,-0.011819326,-0.021061584,0.034630004,-0.00036935395,0.03957715,0.016166188,0.0107947085,-0.027654326,-0.0052628084,0.036534343,0.033698533,0.03353294,-0.0024865088,0.015327865,-0.049554233,-0.008455683,-0.00006525145,0.01027205,0.03224958,0.003668959,-0.02372145]},{"id":"number-of-one-bits","name":"Number of One Bits","description":"You are given an unsigned integer `n`. Return the number of `1` bits in its binary representation.\n\nYou may assume `n` is a non-negative integer which fits within 32-bits.\n\n**Example 1:**\n\n```java\nInput: n = 00000000000000000000000000010111\n\nOutput: 4\n```\n\n**Example 2:**\n\n```java\nInput: n = 01111111111111111111111111111101\n\nOutput: 30\n```\n","difficulty":"Easy","concepts":["Bit Operations"],"solutions":{"python":"class Solution:\n    def hammingWeight(self, n: int) -> int:\n        res = 0\n        while n:\n            n &= n - 1\n            res += 1\n        return res\n","javascript":"class Solution {\n    /**\n     * @param {number} n - a positive integer\n     * @return {number}\n     */\n    hammingWeight(n) {\n        let count = 0;\n        while (n !== 0) {\n            n &= n - 1;\n            count++;\n        }\n\n        return count;\n    }\n}\n","cpp":"class Solution {\npublic:\n    int hammingWeight(uint32_t n) {\n        int bit = 0;\n        int result = 0;\n        \n        while (n != 0) {\n            bit = n & 1;\n            if (bit == 1) {\n                result++;\n            }\n            n = n >> 1;\n        }\n        \n        return result;\n    }\n};\n","java":"class Solution {\n    public int hammingWeight(int n) {\n        int count = 0;\n        while (n != 0) {\n            n = n & (n - 1);\n            count++;\n        }\n        return count;\n    }\n}\n","csharp":"public class Solution {\n    public int HammingWeight(uint n) {\n        int count = 0;\n        while (n != 0) {\n            n = n & (n - 1);\n            count++;\n        }\n        return count;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def hammingWeight(self, n: int) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number} n - a positive integer\n     * @return {number}\n     */\n    hammingWeight(n) {}\n}\n","cpp":"class Solution {\npublic:\n    int hammingWeight(uint32_t n) {\n\n    }\n};\n","java":"class Solution {\n    public int hammingWeight(int n) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int HammingWeight(uint n) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/5Km3utixwZs","embedding":[0.019198842,-0.0013296684,0.027737893,-0.05969482,0.025987444,0.023541303,0.030430892,0.01418313,-0.027760336,0.026840227,0.02793987,0.008858846,-0.08442553,0.016752701,0.00033943012,-0.0022708157,0.011192779,-0.00034451456,-0.025224427,0.07769303,0.006064859,0.040529642,0.022924157,-0.03873431,0.07060147,0.035143644,-0.026772901,-0.027109528,0.04335729,-0.053411156,0.008196817,-0.016057009,0.015619396,0.0038796023,0.005526259,-0.008583936,-0.007214994,0.000018628332,-0.017515717,0.01539498,-0.025403962,-0.043873448,-0.017594263,0.010272671,-0.015417421,0.017145429,-0.036737,0.002315699,-0.003876797,0.024910245,0.00027631296,0.015181784,-0.0037140949,-0.023002703,-0.04295334,-0.04120289,-0.010053865,0.04472623,-0.03447039,0.019782325,0.042033233,-0.013936272,-0.00011843236,-0.020365808,0.009835058,-0.011591118,-0.009936046,0.0074674627,-0.0018289954,-0.04324508,-0.021117603,0.040462315,0.008544663,-0.04955119,-0.03698386,0.028186727,0.004536021,-0.01931105,0.04955119,0.019838428,-0.052064653,-0.036131077,0.012600993,-0.030565543,0.018076759,-0.016831245,-0.065350115,-0.015002251,-0.08554761,-0.059111338,0.0022329453,0.034784574,-0.010446593,0.027401268,0.0066707837,-0.0162141,0.054533236,0.02174597,0.022621196,0.011467689,-0.004850204,0.016909791,0.018581696,0.05269302,-0.0007672243,0.00891495,-0.017358625,-0.06692103,-0.08716341,0.06319572,-0.013094709,0.0004004434,-0.008757859,0.009380614,0.02093807,0.025000012,-0.018963205,-0.012320472,0.035951544,0.004089993,-0.0071532796,-0.03280971,0.0028542988,-0.05807902,-0.045736108,0.024461411,-0.03859966,-0.019782325,0.02836626,0.03691653,0.048967704,0.0351212,0.023137353,-0.006648342,-0.0021894646,-0.008774689,0.0017322158,0.025403962,-0.0053383103,0.061535034,0.025381519,0.024079902,-0.028792651,-0.02214992,0.036557466,-0.009762123,-0.0067156674,0.022609973,-0.015944801,0.019625233,0.03298924,-0.0087971315,0.019748662,0.039250467,-0.008208037,-0.008482948,-0.006048028,0.019636454,-0.009627473,-0.0093637835,-0.018592916,0.0014951756,-0.016539505,0.016629271,0.03918314,0.030161593,-0.0047772685,-0.03702874,-0.019030528,-0.011568677,0.031889603,-0.042122997,0.04807004,-0.014923705,-0.007445021,0.021117603,-0.012533668,-0.05767507,-0.05996412,-0.01931105,-0.050134674,-0.0043536825,-0.03305657,-0.0656643,0.034178652,-0.038913842,0.0061434046,-0.020646328,0.0059077675,-0.009492823,0.021274695,0.03525585,0.04495065,0.010945921,-0.00028648184,-0.00013798116,0.031844717,-0.0045079687,-0.021689866,-0.030834842,-0.057585303,-0.0073496443,0.020276042,0.0359291,0.025381519,-0.053411156,-0.03934023,-0.0054729604,0.035592474,0.01350988,0.0045023584,-0.020881966,0.05345604,-0.05444347,-0.015383759,0.042706482,0.036624793,-0.012802968,-0.0048165414,0.055700205,-0.025493728,0.0046538394,-0.0061938986,0.061041318,-0.004603346,0.00648003,0.02553861,0.016909791,0.03689409,0.008269752,0.003523341,0.0058292216,0.036557466,-0.02592012,-0.011680885,-0.018065538,0.0013661361,-0.032652617,-0.043402173,-0.007994842,0.0041152397,-0.014093364,0.045062855,0.024685828,0.0031726898,0.00068026286,-0.053545803,0.014295339,-0.054802537,-0.029084394,-0.0063566007,0.017324964,0.017583042,-0.02594256,-0.024820477,0.018200187,0.002357777,0.026256744,0.020668771,0.0011326026,0.008067777,-0.032226227,-0.020219937,-0.049147237,-0.005778728,-0.032742385,-0.020870745,0.019142738,-0.0057450654,-0.0053579467,0.00020425419,0.008830794,0.00042709286,-0.010446593,-0.00688398,-0.0029230264,0.009313289,0.0072710984,-0.03227111,-0.035143644,-0.049192123,-0.02349642,0.02376572,0.015697943,0.01891832,-0.014216793,-0.0106766205,0.045848314,0.034335744,-0.050987456,-0.030969493,0.018301176,-0.0058011697,0.028433586,-0.009919214,0.0049792435,-0.03310145,0.0310817,0.042369857,-0.041965906,0.03319122,-0.0034335742,-0.017897226,0.016752701,-0.05848297,-0.032719944,-0.024169669,0.025628377,0.00784336,0.0013717465,-0.000685172,0.018289953,-0.04553413,0.052289072,-0.060996436,-0.02903951,0.031912044,0.01201751,0.0041124346,0.0039749793,0.038397685,-0.000060005146,0.036781885,0.022845611,0.043693915,0.033146333,0.0071420586,0.04337973,0.023451537,0.0007630165,-0.042122997,0.02403502,0.0053411154,0.0023283223,-0.0664722,-0.003186716,0.031642742,-0.0085951565,-0.009936046,0.033280984,0.011759431,-0.019636454,0.037208274,0.018660242,0.0034896783,0.02565082,0.019030528,0.010766387,0.0010484464,-0.01134426,-0.0067829923,0.005035348,0.04959607,-0.0033522232,0.008135103,-0.02309247,-0.029735202,0.03144077,-0.021701086,0.018447045,-0.078007214,0.008454896,0.012892734,0.017740134,0.018357279,0.026526043,0.054353703,-0.005130725,0.0063453796,0.025987444,-0.0008815365,0.056912053,-0.0051391404,0.010053865,-0.07064635,0.004092798,0.00138437,0.0013023177,-0.0019313855,-0.016517064,-0.030228918,0.013049826,-0.018951982,-0.010536361,-0.0001781307,0.042841133,0.02430432,0.04118045,-0.051256754,-0.046140056,0.015899917,-0.025897678,0.03848745,0.016707817,-0.015383759,-0.035973985,-0.001182395,-0.00084506883,-0.000106247244,0.016326308,-0.009178639,0.01918762,0.0013584219,0.00017909498,-0.02793987,-0.06526035,0.0068559274,0.025044894,0.012376577,0.0713196,-0.008084608,0.035749566,0.021039058,0.0032652617,0.016146775,-0.010749556,-0.00037765107,0.016775142,0.0031502482,-0.023114912,-0.011394754,0.03202425,0.013195697,-0.019232504,0.012006289,-0.012881514,-0.044883322,-0.02443897,-0.003133417,0.012084834,0.0020912823,0.06211852,-0.024640944,0.058034137,-0.032787267,0.036714558,0.0053411154,0.051570937,-0.00042007986,0.0018808917,-0.047441673,-0.0017392287,0.0069456943,0.012645876,0.0025765833,0.00019426063,-0.018177746,0.040350106,0.032764826,-0.021678645,0.0018247876,-0.04982049,0.046678655,0.0020940877,-0.032854594,-0.05444347,0.020949291,0.061086204,0.0020660355,-0.039385118,-0.054623004,-0.05116699,-0.0041937856,-0.023945253,0.040327664,0.02553861,0.0019341907,-0.011265714,0.023967694,0.018862216,0.009285238,-0.0020015156,0.033976674,0.0041152397,-0.01322936,0.05107722,0.002350764,0.08711853,-0.02322712,-0.035345618,-0.044546697,-0.03366249,-0.0059919236,-0.0022946598,-0.0028655196,0.006917642,0.039609533,-0.03687165,0.0329668,0.0072598774,-0.0046370085,-0.0018205798,0.0294659,-0.009296458,0.012645876,-0.013274243,0.015002251,-0.015888697,0.01581015,-0.0135435425,-0.061849218,0.009262796,-0.003484068,-0.03877919,0.04252695,-0.021925503,0.031799834,-0.00008945983,0.01850315,0.026907552,-0.0004313007,0.00055858697,0.02511222,0.013689414,-0.002857104,0.0186378,0.0019678532,-0.018132862,-0.006250003,0.007865802,-0.0052569592,0.010087526,-0.023810603,0.026952436,0.0019426063,-0.053815104,-0.017089326,-0.005405635,-0.013184476,-0.003296119,-0.03393179,0.0092010815,0.004205006,0.016977116,-0.05363557,0.010227787,0.01216338,0.0049848543,0.027109528,0.004712749,0.019019308,0.027401268,-0.03610863,-0.012612213,-0.0030576764,-0.023833044,0.014194351,0.017347405,-0.0027028176,-0.012713201,-0.016539505,-0.01216338,0.0060704695,-0.042347416,-0.019939417,-0.011417195,-0.038150825,0.02796231,-0.0021964777,0.03078996,0.011333039,-0.02202649,-0.0030071826,-0.0029622994,0.0028276495,0.007854582,-0.001763073,0.016416075,0.006446367,-0.0014895652,-0.024281878,-0.011490131,0.013981155,-0.04483844,0.02917416,-0.00675494,-0.025875235,0.00011422455,0.008870067,0.017728912,0.009610642,-0.03622084,-0.04118045,-0.04631959,-0.0037197054,0.021431787,0.0065417443,-0.018312396,-0.0069513046,-0.04403054,0.02092685,0.019378375,0.051615823,0.0076357755,-0.03850989,-0.030363567,-0.06741475,-0.0045023584,0.007445021,-0.013588426,0.008679313,0.02592012,0.04699284,-0.01891832,-0.004227448,0.010065085,-0.02432676,0.05520649,0.024483852,0.017369846,-0.007770425,0.004847399,0.031149026,0.002042191,-0.016012125,-0.0018374111,0.023563745,0.005400025,0.012477564,0.014194351,0.014486092,0.04946142,0.018054316,-0.0080902185,-0.033168774,0.026436277,-0.046140056,0.02484292,0.016808804,0.010833712,-0.039115816,0.004931555,-0.01324058,0.001944009,-0.063509904,0.047307022,0.027782777,0.016820025,0.012814188,-0.03525585,0.015428643,-0.038173266,-0.016573166,-0.0053439206,0.009436719,0.041921023,-0.031395886,0.007265488,-0.02432676,-0.02553861,0.024955127,0.0164834,0.026099652,-0.05201977,0.012903956,0.027221736,-0.04281869,-0.041965906,0.012264368,-0.036512583,0.005049374,-0.023137353,0.0058292216,-0.0014881627,-0.022239687,-0.013498659,0.0016172022,-0.010783219,0.022508986,-0.046095174,-0.007966789,0.024371644,0.017549379,-0.0079275165,-0.033370752,0.008275363,-0.0042330585,0.009419887,-0.027648127,0.006766161,0.0068166545,0.0049932697,-0.004757632,0.0079275165,0.019142738,0.00069148367,0.011108623,-0.0036271336,0.011523793,-0.028927302,-0.0014474872,-0.000016108028,-0.044232514,-0.0012742656,0.040035926,-0.016505841,0.02038825,0.044075422,-0.0024896218,-0.092998244,-0.0049063084,0.029488344,-0.0047071385,0.0065136924,-0.013711855,-0.019748662,0.0040338887,0.035435382,0.026099652,-0.017179092,0.0108168805,-0.014542197,0.0108785955,0.025875235,-0.042751364,0.01689857,0.01972622,0.011894081,0.019120296,-0.008454896,0.006278055,0.015159342,-0.014923705,-0.014508534,-0.000005109094,-0.0025078557,0.017044442,0.01999552,0.042369857,0.04254939,0.0072318255,-0.008853235,0.016864909,0.011366702,-0.014845159,0.00648564,-0.036737,-0.013846505,0.00405072,-0.043806124,-0.028007194,0.016539505,0.021375682,-0.037993733,0.016561946,0.039721742,0.0027070255,-0.01094031,-0.032742385,-0.010822492,-0.04941654,0.005534675,0.017100547,0.008617598,0.032069135,0.009038379,-0.026144536,0.0060704695,0.038173266,-0.0026046354,-0.021678645,-0.00022564389,0.025381519,0.008578325,0.018121641,-0.00519805,-0.010194125,0.004642619,0.009245965,0.04403054,-0.006564186,-0.0069905776,-0.0005729637,0.016124334,0.008847625,-0.059335753,-0.024102345,-0.016561946,0.0047997106,0.00002879721,-0.022935377,-0.029937176,-0.006648342,0.02484292,-0.008567104,0.0019874896,0.0069064214,-0.0029875461,-0.004684697,-0.028186727,-0.040686734,0.00022529325,-0.0148563795,-0.036018867,0.018963205,0.018312396,-0.0019454116,-0.015204226,0.0129376175,0.00769749,0.018974425,-0.009868721,0.006278055,-0.027356386,0.0037617835,0.013992376,-0.0022076985,0.021375682,0.027064644,0.027491035,0.018267512,0.041315097,-0.031642742,0.029824968,0.009879941,-0.016629271,-0.008073388,-0.004252695,0.015944801,0.034223534,0.0049624126,-0.011983847,0.009156198,0.007658217,-0.0068783695,-0.0021501917,-0.00018268915,-0.002775753,0.01472173,0.05197489,0.020062845,0.005756286,-0.05417417,0.016404854,0.007949959,0.0324282,0.012791747,-0.01364453,-0.03144077,0.038016174,-0.000060925606,0.011058128,-0.010755166,-0.040754057,-0.03689409,0.017583042,-0.009627473,-0.04106824,0.045219947,-0.043828566,-0.024798036,-0.015552072,0.0067324983,-0.031777393,0.008208037,-0.016034568,0.028702885,-0.0069232527,0.018862216,-0.011013245,0.038173266,-0.014284117,-0.01878367,-0.020433133,0.020590225,0.0042218375,-0.03159786,0.006407094,-0.037230715,-0.012129718,0.030318685,0.013790401,-0.0078489715,-0.019905753,0.023159795,0.009700408,0.002559752,-0.022935377,-0.011602339,-0.038913842,0.055565555,-0.01929983,0.002188062,0.050044905,0.006536134,-0.029914735,-0.0013570192,0.0037786148,0.025740586,-0.041808814,-0.02173475,-0.007944348,0.00011168233,-0.0068278755,0.003742147,0.011299376,0.02796231,-0.020354588,0.030116709,-0.020231158,0.0019482167,-0.010295113,0.011147896,-0.0073889173,0.012544889,-0.020713653,-0.0061826776,-0.012679539,-0.019109074,-0.006036807,0.013666972,-0.015069576,0.010771997,0.034784574,0.039228026,-0.009677966,-0.008168764,0.020051625,0.02281195,0.024910245,0.01458708,-0.013251801,-0.025987444,-0.030834842,-0.005498207,0.020769758,0.011030077,0.0041797594,0.04495065,0.0043817344,0.03794885,-0.017145429,0.016932234,0.0012118497,-0.021768412,-0.040439874,-0.05749554,0.015899917,0.02551617,-0.004796905,-0.024281878,-0.020747317,-0.016124334,-0.019008087,0.01554085,0.030184034,0.048518874,-0.04335729,-0.029219043,0.026391394,-0.005767507,-0.035031434,0.007085955,0.007248657,-0.004808126,0.0043789293,0.03606375,0.005080231,-0.010244618,0.011181558,0.044883322,-0.0045893197,0.04793539,-0.00089486124,0.01134987,0.02594256,0.029398577,0.0022862442,0.0015344486,-0.06804312,0.030834842,0.017986992,-0.023249561,0.023833044,0.009599421,-0.028590677,-0.029937176,0.025089778,0.018839775,-0.014295339,0.027109528,-0.004157318,-0.003523341,0.040350106,0.01445243,0.008314636,0.042616714,0.00051615824,0.023653511,0.02349642,0.010334386,0.04456914,0.021252254,-0.0010463424,-0.0030464556,-0.006777382,-0.024573619,0.008937391,-0.055026956,-0.004123655,-0.032877035,-0.0028977795,0.04418763,0.0027448956,0.016023347,-0.010065085,0.018761229,0.005495402,-0.0046229823,0.0016452543,-0.0051503615,-0.044636466,0.0043144096,-0.012758085,0.019557908,0.025471285,0.01796455,0.016864909,-0.010564412,-0.030879727,-0.0036916533,-0.005052179,-0.02917416,-0.002227335,0.0021081136,-0.010934699,-0.005756286,0.0042667207,-0.03958709,0.008617598,0.004053525,0.01324058,-0.009414277,-0.003161469,-0.013577205,0.022194803,0.026122093,0.00022301401,0.0010884206,-0.022778286,-0.0053944145,0.00047232685,-0.012365355,0.007955569,-0.027984751,-0.011226441,-0.023967694,-0.0010589659,-0.009829448,0.0131395925,-0.06319572,0.019142738,-0.014755392,-0.017975772,0.032473084,0.029959619,0.026166977,0.043065548,-0.017324964,0.017033221,0.009835058,0.0060255863,-0.0348519,-0.012399018,0.0050662053,-0.013442555,-0.024371644,-0.013083489,0.00024896217,-0.032046694,0.031889603,0.008617598,-0.005660909,0.027737893,-0.0047744634,-0.027311502,-0.025291752,-0.0023802188,0.004676281,-0.008769079,-0.009980929,0.0057029873,-0.011669664,-0.0087971315,0.01889588,0.029061953,0.0052709854,-0.0091618085,-0.012241926,0.020612666,-0.0055402853,0.006973746,-0.009358173,-0.005918988,0.000008569033,0.008146323,0.011995068,0.0028458831,0.0032933138,-0.0005999638,-0.035749566,-0.0015049939,0.01566428,-0.03859966,-0.02173475,-0.052333955,-0.021398123,0.009436719,-0.004036694,-0.047666088,0.0028374675,-0.026683135,0.0033578337,0.030587984,-0.039946157,-0.045579016,0.021050278,-0.00492875,-0.02268852,-0.0068783695,0.02592012,0.038936283,-0.035188526,0.00085278315,-0.04878817,-0.01568672,0.023473978,0.010463425,-0.0030015723,0.033954233,0.016281426,-0.043828566,-0.0031783003,-0.024147227,-0.029914735,0.025381519,-0.012051173,-0.03334831,0.024775594,0.035816893,0.02713197,-0.050852805,-0.008325856,-0.014418768,0.03173251,-0.004536021,0.0053803883,0.044658907,0.01458708,0.0024124787,-0.029712759,-0.013296684,0.0019622429,0.020343367,-0.008769079,0.0028753378,-0.024910245,-0.010295113,-0.03853233,-0.038173266,-0.029219043,-0.009234744,0.036512583,-0.013319126,0.015473526,-0.000053255113,0.014385105,-0.020051625,0.006698836,-0.00006754414,-0.0059077675,-0.014789055,0.013947492,-0.020253599,0.0775135,0.006087301,0.035839334,-0.019647675,0.013969935,-0.0061377943,0.007820919,-0.016416075,-0.0069232527,-0.02039947,0.011299376,-0.02201527,0.0044518644,-0.028702885,0.01661805,-0.007955569,0.009801395,0.021061499,-0.05915622,-0.00715889,-0.007372086,0.03536806,-0.031867158,-0.006255613,-0.0107158935,0.03579445,-0.0135435425,0.019434478,0.03200181,0.028837536,-0.041651722,0.0072879298,0.006631511,0.037612226,-0.042257648,0.0032933138,0.0027771557,0.0050633997,0.004008642,-0.023563745,0.036535025,-0.03954221,-0.023294445,-0.021723527,-0.02243044,0.0063566007,0.026032327,0.046813305,-0.00035345618,-0.049955137,0.020231158,-0.00018111122,0.0029622994,0.013150814,0.019019308,0.00891495,0.009274017,-0.009341341,-0.030924609,0.033438075,0.0370063,0.020466795,-0.0073440336,0.00945916,0.06903055,0.022912936,0.009262796,0.016236542,-0.020691212,-0.0025962198,0.0012560318,-0.032585293,-0.007893855,0.039228026,0.020343367,-0.009464771,-0.010990804,-0.030520659,-0.0072767087,-0.013498659,-0.027872544,0.0058404426,0.019479362,-0.005851663,0.0063846526,-0.029196601,-0.031777393,-0.01458708,0.0049624126,-0.013824063,-0.005725429,-0.0029875461,-0.022800729,0.046050288,-0.008583936,-0.02782766,-0.023429094,-0.022890495,0.023025144,0.014115805,0.06386897,0.03610863,0.0054897913,0.028411144,0.02392281,0.015080797,0.007764815,0.02645872,0.01025584,0.003806667,0.00239705,0.019973079,-0.00043305394,0.01808798,0.00016927675,0.0047744634,-0.026795344,-0.031687625,0.037320483,0.020579003,0.012331693,0.04631959,0.026615812,0.021398123,-0.046050288,0.024977569,-0.02551617,0.02131958,-0.016505841,0.00057541823,-0.01458708,0.0033522232,0.019479362,0.013880168,-0.015473526,0.0077143214,-0.002425102,0.02241922,-0.014396326,0.024977569,-0.03105926,-0.014070922,-0.00031611184,-0.0011887067,0.00648564,0.011703326,0.004238669,0.028658003,-0.03691653,0.0031278066,-0.01283663,0.0007756399,0.05197489,-0.0044378387,-0.007809698,0.00022792313,0.0021515943,0.024775594,-0.007792867,-0.037051182,0.0016480595,0.0068559274,0.029017068,0.046095174,-0.013408893,-0.004754827,-0.009414277,-0.016932234,-0.014564638,-0.017313741,-0.025471285,0.009240354,0.03146321,0.04095603,-0.026907552,-0.02715441,0.03280971,0.0049624126,0.010530749,0.03797129,-0.0046931123,0.020590225,-0.029241486,0.0361984,-0.02713197,0.0017967356,-0.0012651486,0.02336177,0.03765711,0.008415623,-0.0386221,-0.027244177,0.027760336,-0.029151719,-0.007725542,-0.003405522,0.0057198186,-0.0442774,-0.027378827,-0.05264814,-0.04575855,-0.027850103,-0.014418768,0.018289953,0.0189071,0.007899465,-0.015653059,-0.024192112,0.007809698,-0.00093203026,0.0012651486,0.01499103,-0.009470381,-0.008314636,0.008387571,-0.015013471,0.013094709,-0.018357279,-0.007405748,0.0063509904,0.0025779859,-0.025291752,-0.002945468,0.032495525,0.010138021,0.013296684,-0.024910245,0.057226237,0.029735202,0.027087085,-0.0063509904,0.0015176174,-0.016023347,0.0073833065,0.036131077,0.02567326,0.029690318,0.023070028,0.0014460846,0.0017770991,-0.006698836,-0.0038852126,0.005040958,-0.010783219,-0.0013156424,0.0041124346,-0.022609973,-0.010351216,0.0022581923,-0.009077652,0.015552072,-0.021644983,-0.04968584,0.01970378,-0.016550725,-0.030812401,0.017650368,-0.029017068,0.04865352,0.01216338,0.038824074,0.03202425,0.006283665,0.034268416,-0.008179986,0.03631061,-0.022666078,-0.009150588,-0.029735202,0.037298042,0.030924609,0.010098748,0.00039798883,-0.01984965,0.05511672,0.014946147,-0.03689409,-0.0058123902,-0.006631511,0.009605031,0.024640944,0.029892294,-0.007770425,-0.009840668,0.016696597,0.021667425,0.013880168,-0.0010694854,-0.007983621,-0.0013577205,-0.021443008,-0.041561957,0.024192112,-0.015271551,0.051570937,0.016629271,0.026211862,-0.038577218,-0.0028304546,-0.015731605,-0.006496861,0.037500016,0.00391607,0.019692559,-0.009874331,0.02228457,-0.0074225795,0.03227111,0.01932227,0.034896784,0.007416969,0.047621205,-0.0034560158,0.0026551292,0.002145984,0.009537706,-0.035008993,-0.0064631985,0.014519755,-0.020713653,-0.015877476,-0.0038375242,0.02162254,0.019872092,0.028478468,0.010166072,-0.018974425,0.0046257875,0.012197043,0.0046257875,0.02688511,-0.015765266,-0.04807004,-0.014486092,0.0012321875,0.057899486,-0.016943455,-0.015047134,-0.035210967,-0.039946157,0.009285238,0.0058011697,-0.038913842,0.029196601,0.05727112,0.021824516,-0.0083931815,-0.011293766,0.025000012,0.0069625257,-0.00945916,0.021510333,0.02675046,-0.027356386,-0.055969503,-0.0022525818,-0.008466117,0.008488558,0.010093138,0.005534675,-0.026974877,0.012219485]},{"id":"products-of-array-discluding-self","name":"Products of Array Discluding Self","description":"Given an integer array `nums`, return an array `output` where `output[i]` is the product of all the elements of `nums` except `nums[i]`.\n\nEach product is **guaranteed** to fit in a **32-bit** integer.   \n\nFollow-up: Could you solve it in $O(n)$ time without using the division operation?\n\n**Example 1:**\n\n```java\nInput: nums = [1,2,4,6]\n\nOutput: [48,24,12,8]\n```\n\n**Example 2:**\n\n```java\nInput: nums = [-1,0,1,2,3]\n\nOutput: [0,-6,0,0,0]\n```\n\n**Constraints:**\n* `2 <= nums.length <= 1000`\n* `-20 <= nums[i] <= 20`\n","difficulty":"Medium","concepts":["Static Arrays","Prefix Sums"],"solutions":{"python":"class Solution:\n    def productExceptSelf(self, nums: List[int]) -> List[int]:\n        res = [1] * (len(nums))\n\n        for i in range(1, len(nums)):\n            res[i] = res[i-1] * nums[i-1]\n        postfix = 1\n        for i in range(len(nums) - 1, -1, -1):\n            res[i] *= postfix\n            postfix *= nums[i]\n        return res\n","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {number[]}\n     */\n    productExceptSelf(nums) {\n        const result = [];\n        let prefix = 1;\n        let postfix = 1;\n\n        for (let i = 0; i < nums.length; i++) {\n            result[i] = prefix;\n            prefix *= nums[i];\n        }\n        for (let i = nums.length - 2; i >= 0; i--) {\n            postfix *= nums[i + 1];\n            result[i] *= postfix;\n        }\n\n        return result;\n    }\n}\n","cpp":"class Solution {\npublic:\n    vector<int> productExceptSelf(vector<int>& nums) {\n        int n = nums.size();\n        vector<int> result(n, 1);\n        \n        int prefix = 1;\n        for (int i = 0; i < n; i++) {\n            result[i] = prefix;\n            prefix = prefix * nums[i];\n        }\n        \n        int postfix = 1;\n        for (int i = n - 1; i >= 0; i--) {\n            result[i] = result[i] * postfix;\n            postfix = postfix * nums[i];\n        }\n        \n        return result;\n    }\n};\n","java":"class Solution {\n    public int[] productExceptSelf(int[] nums) {\n        int[] arr = new int[nums.length];\n        int right = 1, left = 1;\n        for (int i = 0; i < nums.length; i++) {\n            arr[i] = left;\n            left *= nums[i];\n        }\n        for (int i = nums.length - 1; i >= 0; i--) {\n            arr[i] *= right;\n            right *= nums[i];\n        }\n        return arr;\n    }\n}  \n","csharp":"public class Solution {\n    public int[] ProductExceptSelf(int[] nums) {\n        int prefix = 1, postfix = 1;\n        int[] res = new int[nums.Length];        \n        \n        for(int i = 0; i < nums.Length; i++){\n            res[i] = prefix;\n            prefix *= nums[i];             \n        }\n        \n        for(int i = nums.Length-1; i>=0; i--){\n            res[i] *= postfix;\n            postfix *= nums[i];          \n        }\n        return res;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def productExceptSelf(self, nums: List[int]) -> List[int]:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {number[]}\n     */\n    productExceptSelf(nums) {}\n}\n","cpp":"class Solution {\npublic:\n    vector<int> productExceptSelf(vector<int>& nums) {\n\n    }\n};\n","java":"class Solution {\n    public int[] productExceptSelf(int[] nums) {\n        \n    }\n}  \n","csharp":"public class Solution {\n    public int[] ProductExceptSelf(int[] nums) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/bNvIQI2wAjk","embedding":[-0.032170556,-0.017387815,-0.001228234,-0.019558707,0.0010285894,-0.008218378,-0.017666928,0.016901948,0.004566627,0.032708112,0.014234851,-0.07385169,0.006145693,-0.0027601346,0.047139376,0.011185264,-0.014317552,0.01060636,-0.030743971,0.026960416,0.0006700046,0.012022609,0.026443537,-0.031198824,0.05892422,-0.020365037,-0.0059647853,0.038207706,0.019941198,-0.012994342,0.031529628,-0.018907439,0.0035044404,0.045485362,-0.014906794,0.037360024,0.015465024,-0.0065540276,0.002620577,0.019496681,0.0032692605,-0.039468892,-0.0013904049,-0.023156185,-0.0050188964,0.05743561,-0.0015622672,0.0017716032,0.020737192,0.004093683,0.034899678,-0.013976412,0.024830874,0.017770305,0.005949279,-0.026133409,-0.026712313,0.048214484,0.012518813,0.030909372,0.053424627,-0.043583248,0.023238886,-0.004636406,-0.0045562894,0.019651745,0.016447093,-0.015030845,-0.042838942,-0.017460177,-0.023838466,-0.029276034,-0.0023337093,-0.016261017,0.006393795,0.06723564,0.012632526,0.028924556,0.028324977,-0.023714414,0.031633005,-0.00087287964,0.01919689,0.01278759,-0.0005382004,-0.014245189,-0.0497031,-0.0025753502,-0.009903404,-0.054292984,0.018897101,-0.03378322,-0.037876904,0.03241866,0.010296232,0.025058301,0.008978191,0.02121272,0.028159576,0.07108122,0.027187843,0.0189798,0.012984004,-0.00028977537,0.020209974,0.005259245,0.004429654,-0.012219023,-0.021274745,-0.033369716,0.025823282,0.0029384578,0.012901303,-0.026009358,0.010451296,-0.004160877,-0.02241188,0.019920522,-0.0072673205,-0.0023427547,0.0042306557,-0.029276034,-0.029544812,-0.044782408,0.02689839,0.014379578,-0.018845413,-0.038517833,0.055616196,-0.029730888,0.038889986,-0.017501527,-0.0149171315,-0.020199636,-0.06248035,-0.011753831,0.01047714,0.008714582,-0.0051507005,0.038311083,0.049868498,0.010322076,-0.01894879,-0.0071122567,0.05747696,-0.00022015821,-0.021078331,0.008213209,-0.03157098,0.020272,0.02989629,-0.032025833,-0.009138423,0.033514444,0.00044354692,-0.0026748495,-0.014482954,0.018866088,0.0019150372,0.013232105,-0.00070166343,-0.02133677,-0.02437602,-0.0129633285,0.006595378,-0.012343073,-0.013800673,-0.06248035,-0.0016578898,-0.040730074,0.024065893,-0.026443537,0.027808098,-0.037173945,0.015764814,-0.020943942,-0.014503628,-0.08456142,-0.06367951,0.0013516389,0.0009038924,0.0046958467,-0.022205127,-0.059668526,0.01090615,0.050736856,0.054251634,-0.041143578,-0.01821482,0.0010460342,0.05234952,0.0312195,0.008476818,0.04494781,0.009210786,-0.01787368,0.02390049,0.027870122,0.011640118,-0.0026179927,0.0002500403,0.013521558,0.027022442,0.038807284,0.012291386,-0.048421238,-0.011019863,0.015434011,0.0062077185,-0.007505085,0.02801485,0.004571796,0.026608938,-0.033638492,0.017398153,0.011298978,0.020116936,-0.011629781,0.008078821,0.06707024,-0.010409946,-0.012529151,-0.023259562,0.043831352,0.031633005,0.036636394,-0.0076911617,0.010125662,0.0053652055,0.007448228,-0.036367618,0.0074947476,0.00936585,-0.013252781,0.011433367,0.0040600854,-0.018866088,-0.016994987,-0.019775795,-0.0014084956,0.029441435,-0.013831685,-0.014441603,0.0076653175,-0.008874815,0.014586329,-0.049206894,0.006342107,-0.01590954,-0.040606026,0.024872223,0.03181908,0.0014459693,-0.03527183,0.0037344517,0.0627698,-0.023755765,0.006910674,-0.017904693,0.0082287155,-0.0685175,0.0042229025,-0.046229668,-0.04544401,0.02317686,-0.029482786,0.008621544,0.026691638,0.02737392,0.017542878,0.0025301233,-0.027580671,0.0037215299,-0.045526713,-0.02121272,-0.018680012,-0.007990952,-0.0075929547,0.03870391,-0.071660124,-0.02048909,-0.039365515,0.03733935,-0.031963807,0.03070262,-0.0060319793,0.034238074,0.030144392,-0.0033519613,-0.04875204,-0.026836365,-0.022701332,-0.011412691,0.012849615,-0.01659182,-0.00953642,-0.01064771,-0.0044529135,-0.002037796,-0.03758745,0.012580838,-0.019817146,-0.0048224824,0.014679368,-0.05743561,-0.045692116,0.007934094,0.011392016,0.0055667884,-0.000724923,0.031074774,0.046849925,-0.005649489,-0.002762719,0.040730074,-0.050323352,-0.06624323,-0.0014653524,0.035871413,0.0034785965,0.013263118,-0.006388626,0.038290408,0.021874325,0.033369716,0.0030108208,-0.005577126,-0.0028273289,-0.0049956366,-0.029172659,-0.041619107,-0.032563385,-0.00594411,0.048214484,-0.031839754,0.017025998,0.03219123,0.0014252942,0.03549926,-0.012405099,0.045898866,0.0065747024,0.0218123,-0.025223702,0.014338227,0.018328534,-0.008905827,0.02946211,-0.013314807,-0.018049419,0.0059130974,0.030413168,0.044782408,-0.016395407,0.036781117,0.00015336773,-0.045402665,-0.00654369,-0.029441435,0.0037370361,-0.006910674,0.016478106,0.02706379,0.007153607,0.0038946844,-0.0010428036,0.049330946,-0.02677434,-0.01398675,0.044782408,0.031591654,0.051811963,0.013077042,-0.0077170054,-0.0563605,-0.014534641,-0.033204317,0.03442415,-0.010110156,-0.04734613,-0.019600056,0.00076433504,0.001247617,-0.0185663,0.018783387,0.06744239,0.0065023396,-0.009029878,-0.048297185,-0.037608124,-0.039034713,-0.030971397,0.040213197,-0.018059757,0.0020946527,-0.010022286,0.034238074,0.046684522,-0.03266676,-0.009893066,0.02121272,0.019951535,0.040337246,0.02574058,-0.009598445,-0.04627102,0.010068806,0.045857515,0.024913574,-0.020850904,-0.017356802,-0.027642695,0.019961871,-0.035354532,0.011557417,0.028366327,-0.007034725,0.016147304,-0.011123239,-0.003801646,-0.006564365,0.017584229,0.03339039,-0.00017493128,0.0010621867,-0.03554061,-0.037835553,-0.061446592,-0.038497157,-0.023921166,-0.0022510085,-0.017842667,0.0029772238,0.0052540763,-0.07964074,0.027808098,-0.06256305,0.103045024,-0.023631714,-0.04490646,0.024086567,-0.03357647,-0.0072931647,-0.030082365,-0.007598123,-0.034238074,-0.010502984,-0.0013044737,0.030723296,-0.012746239,0.018504273,-0.029317385,0.021419471,0.00075852015,-0.04399675,0.01616798,0.02989629,0.030082365,-0.0096863145,-0.02261863,-0.02625746,0.032687437,0.017263763,0.0040083975,0.031529628,-0.026422862,0.008006458,-0.0030056522,0.05007525,0.022246478,0.052142765,0.0068641547,0.0041376175,0.04170181,-0.051315762,0.0032149882,-0.0017212075,0.080467746,0.024913574,0.008290742,0.0012198348,-0.07108122,-0.019351956,0.0030883527,-0.03506508,0.02929671,-0.020747527,-0.007918588,-0.020106599,-0.017222412,-0.029834263,-0.0041505396,-0.009727665,-0.0068486487,0.021957025,0.024624122,0.024065893,0.009738003,-0.027291218,-0.011619443,0.018204482,-0.05623645,0.0070554,-0.02330091,0.04199126,0.009019541,-0.0007384911,-0.014400253,0.025161676,0.08249391,-0.0077583557,0.012094972,-0.0067194286,-0.015216921,-0.004990468,0.0050240653,-0.017904693,-0.050323352,-0.0023815206,-0.013883374,-0.0050266497,0.018897101,0.024789523,0.04106088,0.002384105,-0.047883682,-0.012022609,-0.06012338,-0.062066846,-0.010968175,0.01436924,0.0436246,0.000040724422,0.027518645,-0.01830786,0.009505407,0.015402998,-0.016777897,-0.01539266,-0.057890464,-0.0009026002,0.032025833,0.010730411,-0.018576637,-0.018266508,0.0032330789,0.035726685,0.045568064,-0.026133409,0.013893711,-0.0013477623,-0.0056184763,0.018669674,-0.02882118,0.0064196386,-0.04875204,0.0128289405,0.038538508,0.00022484243,-0.0031762223,-0.018628323,-0.031116124,-0.01026522,0.004181552,0.028304301,0.03250136,0.009091904,-0.016105954,0.009427875,0.0040652542,-0.022391204,0.034362126,0.007153607,-0.026278134,0.008487156,-0.02873848,0.0049852994,-0.03541656,-0.031963807,0.055905648,0.0037551268,-0.011454041,-0.0036827638,-0.03330769,-0.041619107,-0.0049672085,-0.0006538521,-0.013531895,0.040047795,-0.044244852,-0.00050137274,0.015144559,-0.0014278786,0.005142947,-0.011805519,-0.037277322,-0.0344655,0.0061301864,0.020881917,-0.03510643,0.0037913085,0.028965907,-0.0026541743,0.014079788,0.0021437563,0.00020206743,0.0045278613,0.02942076,-0.025761256,0.017119037,0.0007611045,-0.0007527052,0.005427231,-0.015857851,-0.020664828,-0.016343718,0.04199126,0.022887409,-0.026319485,0.019248579,0.05148116,-0.019041827,-0.0013891127,0.009184943,0.0057166833,-0.009035047,0.004122111,0.035333857,0.026133409,0.0040859296,-0.02809755,-0.00039799692,0.028200926,-0.027043115,0.008668063,0.06740104,0.007479241,-0.022763357,-0.026546912,0.005639151,0.05139846,0.030206416,0.007629136,-0.022308504,0.023259562,-0.0006635436,0.024892898,0.022639306,-0.005990629,-0.0103479205,0.035892088,0.011877882,0.0343001,-0.019300267,0.0011791305,0.0056701642,0.011423029,-0.058345318,-0.0072724894,-0.027043115,-0.021192044,-0.027291218,0.03614019,0.026154084,0.054706488,-0.041536406,0.027766747,0.0062077185,0.055947,0.012890966,-0.0439554,0.016364394,0.012425775,-0.009190111,0.00017848483,0.01830786,-0.0007475364,0.00829591,-0.027353244,-0.022928758,0.018442247,0.01851461,-0.009939586,0.059379075,-0.0057270206,0.0096863145,-0.017522203,0.02561653,-0.012115647,-0.0071225944,-0.025430454,0.007732512,-0.014121138,-0.023321586,0.04751153,-0.03450685,0.017305113,0.03157098,-0.016323043,-0.022866733,0.0064609894,-0.013945399,0.018369885,0.04031657,-0.06314196,-0.03578871,-0.02621611,0.00026409293,0.0067090914,0.020209974,0.028449027,0.011629781,0.0024125334,0.017553216,-0.021729598,-0.0014485538,0.021708924,0.005789046,0.002677434,-0.03638829,-0.015558062,0.038290408,-0.042053286,0.02129542,0.02193635,0.0123327365,-0.0062542376,-0.016219668,0.020199636,0.0062128874,0.014596667,-0.030289117,-0.014596667,0.018524949,0.0018258755,-0.044120803,-0.001012437,0.009939586,-0.027746072,-0.03651234,-0.049785797,-0.0073241773,0.0001933451,0.013997087,-0.0044244854,0.018866088,-0.029255359,0.028387003,-0.05863477,0.020447738,-0.014152151,0.0023892738,0.033204317,0.00628525,0.010596022,0.0051636226,-0.014296877,0.01026522,-0.0024810198,0.01047714,-0.0009969306,0.03789758,0.007861732,0.02129542,0.012756577,0.0072156326,-0.036781117,0.048627988,-0.013893711,0.029875614,0.016901948,-0.013035691,0.011443704,-0.028118225,0.0074637346,-0.028676454,-0.026381511,-0.026422862,-0.01774963,-0.013283794,-0.0077066678,0.005062831,0.016002579,0.021078331,0.0110095255,-0.003749958,0.021140356,0.01655047,0.013500883,-0.025265053,-0.0062025497,-0.0030366648,-0.013831685,-0.005789046,0.00983621,0.023714414,-0.010637373,-0.012529151,0.039572265,-0.01436924,0.0060733296,0.0313022,0.03638829,-0.011423029,0.048255835,0.013904049,0.009980936,0.04726343,0.012094972,-0.010596022,-0.026422862,0.03541656,-0.0012366333,-0.013046029,0.0066057155,-0.0039360346,0.00423324,0.02766337,0.01629203,-0.021233395,-0.034796305,0.017801316,0.0020158286,0.0077221743,0.026960416,-0.010637373,-0.020261662,0.01278759,0.05379678,-0.013004679,0.013242443,-0.002024874,-0.038042303,0.03599546,0.019476006,0.050943606,0.02039605,0.0051171035,-0.01441059,-0.0032537542,-0.017377477,-0.0014911963,0.008280404,-0.06810399,0.017522203,0.055822946,0.010802774,-0.03010304,-0.020085923,-0.00007898559,-0.017025998,-0.015661437,0.020788878,-0.035003055,-0.019744784,0.008730088,0.028676454,0.01787368,-0.011309315,-0.022473905,0.002698109,-0.0069985436,0.00035050866,-0.043335147,-0.025864631,-0.005282505,-0.012374086,-0.022184452,0.017687604,-0.041143578,0.024665473,0.020023897,-0.0625217,-0.030640595,-0.012281048,-0.011412691,-0.014482954,-0.025430454,0.0065126773,0.017853005,0.05888287,0.009252137,-0.04010982,0.059999328,-0.011712481,-0.01993086,0.017894356,0.019765457,-0.016126629,-0.012880628,0.009148761,-0.032005157,0.013831685,-0.027167168,-0.012518813,0.00039961218,0.030992072,-0.04627102,0.06272845,-0.061198488,-0.03814568,-0.049372293,0.016798573,0.040461298,-0.0016901947,0.0020752698,-0.00855435,0.026795015,-0.037484076,0.0020365037,0.01796672,0.025409779,0.0171914,0.03963429,0.0155787375,0.032604735,0.015061858,-0.008275235,0.0155684,0.02061314,0.03510643,-0.034858327,-0.012756577,-0.025471803,0.036078162,0.017408488,-0.026960416,-0.020592464,0.021140356,-0.008611206,0.02877983,-0.0044839266,0.020023897,-0.0002952672,-0.04780098,-0.031488277,-0.002395735,0.008688739,0.026691638,0.0046544964,-0.00040639623,0.013108055,-0.006740104,-0.028676454,0.020520102,-0.030475194,0.02245323,-0.030516544,0.0065591964,0.026484886,0.028056199,-0.035871413,0.0008761101,-0.028076874,-0.022163777,-0.0018956542,0.012343073,-0.007029556,0.02441737,-0.012053621,0.01590954,-0.04250814,0.031633005,-0.031178148,-0.012642863,-0.017780643,0.0060319793,-0.0080633145,-0.0036569198,-0.025078975,0.009929248,0.010420283,-0.051605213,0.005747696,-0.03353512,-0.0032434165,0.004036826,-0.015527049,-0.016457431,-0.023590364,0.026732989,0.0045511206,-0.008755933,0.029710213,0.0029410422,0.025430454,-0.02441737,-0.010999188,0.0076187984,0.018835075,0.02125407,0.017987395,0.017429164,-0.02137812,-0.004538199,0.0037732176,-0.038000952,0.039117415,-0.034879003,-0.0042745904,-0.017563554,-0.048007734,-0.014513966,-0.018018406,0.0019253747,-0.014896456,0.0687656,0.013821348,-0.0071949577,0.013604259,-0.027084466,-0.024913574,-0.020499427,0.03839378,0.08199771,0.012208685,0.033845246,-0.0016074941,0.014472616,-0.035478584,-0.01560975,-0.0077583557,-0.007329346,-0.0024009035,-0.008998865,-0.020623477,0.010099818,0.031591654,0.01158843,-0.011402354,0.013624934,-0.007303502,-0.058428016,-0.026195435,-0.017946044,0.024913574,-0.0022871902,-0.0124671245,0.033555795,0.019145204,-0.0149171315,0.011092226,-0.016860597,-0.0026451289,-0.023549013,0.012529151,-0.012022609,0.014183164,-0.022267153,0.010110156,-0.0022329178,0.018866088,-0.00013341942,-0.0041944743,0.002213535,0.016002579,0.033204317,0.013066704,0.029999664,0.016777897,-0.008419961,-0.010585684,-0.018008068,0.0010001612,0.005088675,0.012436111,-0.014296877,-0.0279735,-0.030764647,0.0014886119,0.006740104,0.0049413643,-0.021667574,0.018080432,-0.010120493,-0.020220311,-0.030371819,-0.013066704,-0.013314807,-0.030247767,0.02933806,-0.016622832,-0.012446449,-0.0101825185,0.020096261,0.035519935,0.0157338,0.0015041183,-0.025554504,0.01368696,0.018380223,0.040544,0.030433843,-0.012394762,0.005623645,0.0028195756,0.0075671105,-0.038931336,-0.022556605,-0.016271355,-0.0055202693,-0.0043676286,0.00013293485,-0.025781931,-0.024644798,0.0020235819,-0.00476821,0.060454182,-0.017356802,-0.0074689034,-0.013531895,0.0021515093,-0.008512999,-0.005571957,-0.049827147,-0.05499594,0.010471971,-0.0011164589,-0.007034725,0.0056081386,0.01813212,-0.019538032,0.004266837,0.012549825,-0.06314196,-0.017129375,-0.01317008,0.038600534,-0.03599546,0.03986172,0.008564687,-0.055574846,-0.018638661,-0.031012747,-0.009779354,0.014524303,-0.004618315,-0.017470514,-0.021357445,0.038724586,0.02125407,-0.03190178,-0.005551282,-0.009091904,0.0010066221,0.0018452585,0.01693296,0.057311557,0.00040155047,0.013397507,-0.00842513,0.005794215,0.05983393,0.027580671,-0.0124878,0.035354532,-0.047098026,0.009391693,-0.035809387,-0.021750273,0.026381511,0.008709413,-0.00838378,-0.016953636,0.009091904,0.002285898,-0.026360836,0.0072466456,0.031715702,-0.0061715366,-0.00889549,-0.0014201254,-0.008786946,-0.011257627,0.015930215,-0.0024797276,0.017160388,0.011071551,0.038414456,0.0045640427,0.015857851,0.0017263764,0.01685026,-0.0069778683,0.0030056522,-0.011019863,-0.0063576135,-0.045857515,0.013976412,0.01287029,0.029668862,0.0154133355,-0.017894356,-0.032005157,-0.010420283,-0.009650134,-0.028593754,-0.012632526,0.017315451,-0.0018840245,0.0049956366,-0.021708924,-0.009102241,0.03266676,-0.028242275,-0.019093515,0.0072466456,0.016560808,-0.0083941175,0.004946533,0.0134285195,-0.016467769,-0.03562331,-0.02305281,-0.008538843,-0.013335481,0.010011949,0.037318673,0.00080762367,-0.038290408,-0.012374086,0.03549926,0.023859141,-0.030330468,-0.0032563386,-0.0084923245,0.043004345,0.06520947,0.034196723,0.020427063,-0.01038927,-0.023383612,-0.017842667,-0.010187687,0.05896557,-0.009644965,-0.017098362,-0.011319653,0.028283626,-0.02437602,-0.0040058135,-0.021915676,-0.020220311,0.0119709205,0.026857039,-0.010570178,0.01090615,0.028924556,0.02625746,-0.01317008,0.020416725,-0.039758343,0.009340006,-0.014307214,0.04130898,0.03237731,0.022370528,0.0016410912,0.024603447,-0.0106787225,-0.011702144,-0.011226615,0.034176048,0.010616697,0.050116602,-0.019000476,-0.0015816501,0.011112901,-0.0066263904,-0.009376188,0.004558874,0.004145371,0.028903881,-0.0060268105,0.024562096,0.019765457,-0.016622832,0.039572265,-0.012250035,-0.01582684,-0.009701821,0.051687915,0.016354056,-0.0070502316,0.021832975,0.009226292,0.016136967,-0.052060068,0.02257728,-0.009371019,0.03407267,-0.033907272,0.0084923245,0.026071383,0.0014227098,0.010203194,-0.02753932,0.040523324,0.013397507,-0.0019344202,-0.02937941,0.024582772,-0.003972216,-0.02545113,-0.024830874,0.019310605,-0.017904693,-0.00015675975,-0.008099496,0.007448228,0.012663539,0.009200448,-0.011485054,-0.003874009,0.00795477,-0.041453708,0.0028583417,0.0010440958,-0.0203547,0.007975445,-0.0002495557,-0.00090130797,-0.05631915,0.015971566,-0.0034630902,-0.024665473,0.025843957,-0.02997899,0.00093555124,-0.056732655,-0.0015299622,-0.011185264,-0.022370528,-0.029668862,-0.009138423,0.022060402,0.028035523,0.01715005,0.020230649,-0.004884508,-0.0016901947,0.00040704233,-0.008264897,-0.011939908,-0.016912285,0.019424317,0.061529294,0.043045696,-0.02454142,-0.045733467,0.015558062,-0.0019835236,-0.015671775,0.018411234,-0.006957193,-0.0012036823,0.007448228,0.047056675,0.0023169108,-0.018039081,0.01090615,0.029586162,0.01830786,0.008812789,0.041846536,-0.034796305,0.037215296,-0.012074296,-0.0041763834,-0.013418183,0.026877714,-0.032646086,-0.041805185,0.0025249545,-0.006342107,-0.02425197,-0.0034449995,0.02330091,-0.022267153,-0.01278759,0.0076136296,0.03266676,-0.009722496,0.025533829,-0.019641407,0.037690826,0.007732512,0.003142625,-0.018866088,0.0070140497,0.0249756,-0.003925697,-0.040688727,0.025926657,0.014141813,-0.006641897,-0.028717805,-0.0044115633,0.013376832,0.016839921,0.017460177,0.055533495,0.00684348,0.022908082,-0.013593921,-0.0044994326,-0.007856563,0.023404287,0.0073241773,0.035954114,-0.022081077,0.0373807,0.002430624,-0.05268032,-0.0047656256,-0.0064299763,-0.01988951,-0.0037809708,0.012094972,0.0035173625,-0.0437073,-0.005447906,-0.04035792,-0.021005968,0.049785797,-0.0018013237,0.027146492,0.015806165,-0.010854462,-0.05263897,-0.015330635,0.0022303334,0.0137903355,-0.03353512,0.017780643,0.026154084,0.0061611994,0.033597145,-0.0044942643,0.020168623,0.0074689034,0.004225487,0.0057166833,-0.0058045527,-0.03401065,-0.009681147,-0.027911473,-0.01783233,0.032708112,0.021895,0.0065798713,0.035168458,0.008099496,-0.0039928914,-0.0012237113,0.022659982,0.0021502173,-0.02108867,-0.014131475,0.02869713,0.00037053772,0.017284438,-0.04606427,0.035003055,-0.024396695,-0.03237731,0.043128394,0.012425775,0.009231461,-0.007060569,0.016643507,-0.031488277,-0.029772239,0.0014408006,-0.031591654,0.0027342907,-0.0100171175,0.008952347,0.022928758,0.013935061,-0.007773862,0.041619107,0.007499916,0.02425197,-0.005649489,0.034796305,-0.015454686,0.012281048,0.009841379,0.016405744,-0.0034863497,-0.0013697298,0.04618832,0.026629614,-0.008073652,0.009862054,-0.0044063944,-0.003194313,0.024727497,0.009076398,-0.0026399603,0.026112733,0.028449027,0.03061992,-0.021016305,-0.008156353,-0.015206584,-0.043335147,0.01526861,0.029586162,0.0063731195,0.005354868,-0.021440146,0.008900658,0.014038437,0.0020804384,-0.0379596,0.0072259703,0.0035742193,0.0014278786,0.026422862,-0.024789523,0.0058252276,-0.0035302844,-0.010342752,0.019724108,-0.00021773533,0.010492646,-0.039034713,0.006187043,-0.008585363,0.020840567,0.048379887,-0.037318673,0.017946044,0.0032589228]},{"id":"longest-consecutive-sequence","name":"Longest Consecutive Sequence","description":"Given an array of integers `nums`, return *the length* of the longest consecutive sequence of elements.\n\nA *consecutive sequence* is a sequence of elements in which each element is exactly `1` greater than the previous element.\n\nYou must write an algorithm that runs in `O(n)` time.\n\n**Example 1:**\n\n```java\nInput: nums = [2,20,4,10,3,4,5]\n\nOutput: 4\n```\n\nExplanation: The longest consecutive sequence is `[2, 3, 4, 5]`.\n\n**Example 2:**\n\n```java\nInput: nums = [0,3,2,5,4,6,1,1]\n\nOutput: 7\n```\n\n**Constraints:**\n* `0 <= nums.length <= 1000`\n* `-10^9 <= nums[i] <= 10^9`\n","difficulty":"Medium","concepts":["Hash Usage"],"solutions":{"python":"class Solution:\n    def longestConsecutive(self, nums: List[int]) -> int:\n        numSet = set(nums)\n        longest = 0\n\n        for n in numSet:\n            if (n - 1) not in numSet:\n                length = 1\n                while (n + length) in numSet:\n                    length += 1\n                longest = max(length, longest)\n        return longest\n","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {number}\n     */\n    longestConsecutive(nums) {\n        const numSet = new Set(nums);\n        let longest = 0;\n\n        for (const n of numSet) {\n            if (!numSet.has(n - 1)) {\n                let length = 1;\n                while (numSet.has(n + length)) {\n                    length++;\n                }\n                longest = Math.max(length, longest);\n            }\n        }\n        return longest;\n    }\n}\n","cpp":"class Solution {\npublic:\n    int longestConsecutive(vector<int>& nums) {\n        unordered_set<int> numSet(nums.begin(), nums.end());\n        int longest = 0;\n\n        for (int n : numSet) {\n            if (numSet.find(n - 1) == numSet.end()) {\n                int length = 1;\n                while (numSet.find(n + length) != numSet.end()) {\n                    length++;\n                }\n                longest = max(length, longest);\n            }\n        }\n        return longest;\n    }\n};\n","java":"class Solution {\n    public int longestConsecutive(int[] nums) {\n        Set<Integer> numSet = new HashSet<>();\n        for (int num : nums) {\n            numSet.add(num);\n        }\n\n        int longest = 0;\n\n        for (int n : numSet) {\n            if (!numSet.contains(n - 1)) {\n                int length = 1;\n                while (numSet.contains(n + length)) {\n                    length++;\n                }\n                longest = Math.max(length, longest);\n            }\n        }\n        return longest;\n    }\n}\n","csharp":"public class Solution {\n    public int LongestConsecutive(int[] nums) {\n        HashSet<int> numSet = new HashSet<int>(nums);\n        int longest = 0;\n\n        foreach (int n in numSet) {\n            if (!numSet.Contains(n - 1)) {\n                int length = 1;\n                while (numSet.Contains(n + length)) {\n                    length++;\n                }\n                longest = Math.Max(length, longest);\n            }\n        }\n        return longest;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def longestConsecutive(self, nums: List[int]) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {number}\n     */\n    longestConsecutive(nums) {}\n}\n","cpp":"class Solution {\npublic:\n    int longestConsecutive(vector<int>& nums) {\n        \n    }\n};\n","java":"class Solution {\n    public int longestConsecutive(int[] nums) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int LongestConsecutive(int[] nums) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/P6RZZMu_maU","embedding":[0.012076695,-0.016944898,0.020104786,-0.034462526,0.012066822,0.03825439,-0.035331495,-0.024627374,-0.01858409,0.037326172,0.015147712,-0.038412385,-0.025832081,-0.054429065,0.043408956,0.04301397,-0.0098647745,0.010220262,0.0064135846,0.047398314,-0.020519521,0.047753803,0.014683603,-0.020499771,0.06588366,-0.01731026,-0.000005409842,0.07808872,0.015592071,-0.055377033,0.012995038,-0.007978717,0.0055446154,0.026207319,-0.032744337,0.03519325,0.023758406,-0.043132465,-0.011879203,-0.012027322,-0.029939936,-0.020638017,-0.019383935,-0.048741266,0.03157913,0.019472808,0.02472612,0.0012608692,0.03629921,0.017468255,0.019334562,0.017922487,-0.029604198,0.014426862,0.023481915,-0.030473167,0.0009862306,0.05257263,0.037010185,-0.016214173,0.003399348,-0.011681709,0.002419289,0.033593558,0.016579535,0.034482274,0.042184502,0.015582196,-0.015690817,-0.033040576,-0.049689233,-0.02839949,-0.025693838,-0.033652805,-0.003135201,0.034640267,0.044001438,0.027392276,0.019216066,-0.008546509,-0.0054063704,-0.034146536,0.021585982,-0.007697289,0.021171248,0.04135503,-0.037207678,0.0061370945,-0.007563981,-0.031954363,-0.008956307,-0.030769406,0.01841622,0.020173907,0.008916808,-0.0065617044,0.06446171,-0.0013552955,0.029070966,0.040387314,0.035568487,0.0061173453,0.031361885,-0.0225537,-0.011879203,0.049017757,0.018317474,-0.0042362246,-0.040110823,-0.039597344,0.033297315,-0.023541164,0.010931237,-0.012333437,0.02760952,0.0030216426,-0.016925149,0.0024649592,0.046371352,-0.018900078,0.030591663,0.00083255634,-0.019877668,-0.037839655,-0.015987057,0.0024094144,0.004159696,-0.06051185,0.04980773,0.010190638,0.020954005,-0.039024614,0.008531697,0.020875009,-0.07117647,-0.041513026,-0.011049733,-0.012896292,0.017774368,0.047951296,0.021487236,-0.017399132,-0.02015416,0.003369724,0.06671313,0.022948684,-0.0002723243,0.008418138,-0.024469381,0.021447739,0.015364954,-0.024884116,0.028754978,0.078128226,0.014535483,-0.029742442,-0.02423239,0.007045562,0.0055544903,0.011543465,0.039320853,-0.025654338,-0.033672553,0.0032339476,0.021842724,0.015127962,0.0036684321,-0.01734976,-0.0038980178,-0.027155286,0.033297315,-0.024390383,-0.0024316323,-0.014229369,0.060037866,-0.0035919035,-0.046252858,-0.036081966,-0.058102436,0.020104786,-0.017023895,0.012530929,-0.056640986,-0.05596951,0.011543465,0.026582556,0.02926846,-0.022138963,-0.007776286,-0.016826402,0.03888637,0.054192074,0.02308693,0.024489129,-0.010812741,-0.029762192,0.044001438,0.013350526,0.0001899327,-0.024824867,-0.010032644,0.011039858,0.013113534,-0.0072924285,0.01433799,-0.042579487,-0.011612588,0.009109364,-0.030749656,-0.03716818,-0.0033746613,0.0019675237,0.047042828,-0.031164393,-0.027728014,-0.007687414,0.028517986,0.00048817796,0.010398005,0.030354671,0.039834335,0.0115039665,0.008650193,0.048543774,0.05146667,-0.008620569,-0.005727296,0.047793303,0.011582963,0.016944898,-0.026108572,-0.028754978,0.018406346,-0.032961577,-0.01843597,-0.021684729,-0.024449632,0.00046842865,-0.007228243,0.0015811782,0.01727076,0.007949092,0.018505093,0.046015866,-0.010388131,-0.00802809,-0.06497519,0.028063752,-0.03851113,-0.051071685,-0.004715145,0.017260887,-0.02192172,-0.07330939,-0.011069481,0.036812693,-0.017912613,-0.0032808522,0.0074899215,0.029209211,-0.02755027,0.019778922,-0.045660377,-0.06375074,0.026819548,-0.045225892,-0.02984119,0.020401025,0.028340243,0.016638784,-0.013617141,-0.030868152,0.021546485,0.001300985,-0.040683553,0.0076034795,0.032013614,-0.022810439,0.023560913,-0.07469185,-0.041118037,-0.012925915,0.032151856,0.009973396,0.014742851,-0.022810439,-0.0020403494,0.0046756463,0.0048657334,-0.03622021,-0.05833943,-0.022751192,0.0028093376,0.03483776,-0.016352419,0.0036536201,-0.031618625,0.016085804,0.02699729,-0.03487726,0.0014305898,0.00059247896,-0.014150372,0.0077367877,-0.06521218,-0.030868152,-0.0019687582,0.0031697624,-0.047477312,0.020025788,0.0002184766,0.027135536,-0.010012894,0.0013972628,0.010072142,-0.04309297,-0.026246818,-0.0058408547,0.010096828,-0.0032512282,0.040031828,0.010575749,0.028656231,0.047477312,0.016451165,0.03351456,0.0011861923,0.03600297,-0.003939985,-0.03710893,-0.025535842,-0.00442878,-0.011869328,0.04700333,-0.10285434,0.023402918,0.00752942,0.011573088,0.032467846,0.057549454,0.0043892814,0.014377489,0.019611053,-0.0013713419,0.0028833975,-0.0025698773,-0.01603643,-0.004246099,0.000102218044,0.023797905,-0.010368382,0.02362016,0.006023536,0.019423435,-0.020401025,0.005885291,-0.02079601,0.0026883732,-0.047951296,-0.004969417,-0.015009467,-0.012135943,0.0126593,-0.01894945,-0.0058803535,-0.0038856743,-0.011652086,-0.04277698,-0.0012577834,0.0757978,0.0051051937,0.013014788,0.028537735,-0.005445869,-0.04727982,0.018929701,-0.030789156,0.004939793,-0.031658124,0.0061963424,-0.02674055,-0.015434076,0.015601945,-0.02472612,0.022889437,0.07390188,-0.052493636,-0.015750065,-0.044435922,-0.053520598,-0.008901997,-0.00943029,0.0759558,-0.011158354,0.006971502,-0.014653979,0.05853692,0.03282333,-0.013153032,0.012303812,0.025200104,-0.052375138,0.02474587,0.026918294,0.007899719,-0.03859013,-0.0281625,0.065054186,0.029090716,-0.009168612,0.009973396,0.02871548,-0.0012676581,0.0054359944,0.008536634,0.058892407,-0.050834693,0.024587875,-0.026325814,-0.015957434,0.017606499,-0.0085119475,0.019532057,-0.023481915,0.007198619,0.003530187,-0.0130345365,-0.08831886,0.004216475,-0.006769072,-0.0071887444,0.009287108,-0.008778563,0.026128322,-0.08318404,0.08373702,-0.0076133544,0.081288114,-0.030315172,-0.07457335,-0.0017305323,-0.06971502,0.02085526,0.01096086,0.004626273,-0.028300744,-0.024923613,0.04198701,0.01894945,0.023896651,0.057746947,-0.02194147,0.054350067,0.045739375,-0.027826762,0.002105769,0.025239604,-0.010240011,-0.022454953,0.014772475,-0.056956977,-0.007638041,-0.014693478,-0.020618267,0.018356973,-0.028932722,-0.020460272,0.0009819104,0.05510054,0.01671778,0.0034660017,-0.01435774,-0.03939985,0.025022361,-0.02642456,-0.005964288,0.0062605273,0.06939904,0.00605316,0.012797545,-0.0040412,-0.033020828,-0.001897167,0.04526539,-0.0077664116,-0.031934615,0.026661552,0.014258993,0.0018811206,-0.03687194,-0.041236535,0.008052777,-0.018900078,-0.005048414,0.011819955,-0.0012608692,0.01350852,-0.014999592,-0.030887902,0.009988207,0.014397238,-0.08010315,0.03544999,-0.008151523,0.015443951,-0.002542722,0.0027426837,0.0063197752,0.0066999495,0.06047235,-0.01575994,0.0048212972,0.028873473,-0.026306065,0.014565107,0.029722694,0.015562447,-0.03748417,-0.010047455,-0.018258225,-0.000577667,0.011464467,-0.0020860196,0.034225535,0.0032956642,-0.010289384,-0.038669124,0.0138245085,-0.059247896,0.011266975,-0.0010368382,0.01843597,-0.015987057,0.02310668,-0.013755386,0.012195191,0.021566233,-0.017409006,-0.028340243,-0.05261213,0.005845792,0.022810439,-0.0015108213,-0.002232905,0.0026044387,-0.030512666,0.04605536,0.0015959902,-0.026602304,-0.002784651,-0.024548378,-0.01070412,-0.004789205,-0.018850705,0.0057026097,-0.050479207,0.0058507295,0.016085804,0.01068437,0.011592838,-0.039202355,-0.030986648,0.019620927,-0.0050187903,-0.0189692,0.0049941037,-0.004744769,0.02616782,-0.007440548,-0.0014046688,-0.02839949,0.0076034795,0.025259351,-0.030789156,-0.002631594,-0.015661193,-0.010210387,0.006003787,-0.035785727,0.030532414,-0.00548043,-0.021427989,-0.030868152,-0.0152958315,-0.020460272,0.011207727,-0.042895477,0.01741888,0.02529885,-0.001468854,0.0037597725,-0.0014972436,0.0074602976,0.014426862,-0.023284422,-0.040110823,-0.031440884,0.017063394,0.044475418,-0.016796779,0.019314814,0.024923613,0.012846919,-0.0022304363,-0.006645639,-0.0126593,0.021585982,0.046371352,-0.008220646,0.02867598,-0.019423435,0.006408647,0.019996164,-0.023007933,-0.0024143518,-0.018238477,-0.0024316323,0.02697754,0.00008300877,-0.004413968,0.032843083,-0.0030364546,0.018090356,0.020875009,0.011948326,-0.020954005,-0.051111184,0.034739014,-0.01871246,0.020638017,-0.0224747,-0.0017984204,0.016125303,-0.0016490663,-0.013390024,0.04269798,-0.0070801233,-0.012234691,0.0026636866,-0.026957791,0.039301105,0.0011244756,-0.026227068,-0.023955898,0.026049323,0.016194424,-0.016411666,-0.019038323,0.0054853675,-0.008502073,-0.0094154775,-0.011800205,0.031421132,-0.018021235,0.0046509597,-0.0034758765,-0.0065962654,-0.03130264,-0.002016897,0.00023406005,-0.01068437,-0.018189104,0.026918294,0.021131748,0.011859453,-0.051111184,0.043290462,-0.011701459,0.054705556,0.0044979025,-0.01096086,0.01688565,0.045660377,-0.00034376123,0.00372768,-0.0010201747,0.0080577135,-0.005431057,-0.033929296,-0.0035721543,0.0046756463,0.017873114,-0.0077713486,0.039202355,0.000734427,0.017399132,0.006013661,0.027115786,-0.018771708,0.022079716,-0.0038634564,0.0015466169,-0.03264559,0.0030339858,0.050479207,-0.030532414,0.012037197,0.008803249,-0.007287491,-0.03606222,0.022751192,-0.031381633,0.0092476085,0.024686623,-0.050795194,0.03151988,0.013281403,-0.017724995,-0.029485703,0.025417347,0.012925915,0.019176569,-0.01350852,0.0017095486,-0.022573447,-0.0019983822,0.0015330393,-0.025002612,-0.0014799631,-0.06864856,-0.02417314,0.01123735,-0.00043787897,0.0014935407,0.023481915,0.015700692,0.037642162,-0.010259761,0.018574215,0.012995038,0.011938451,-0.018900078,0.016846152,0.03400829,0.0048731393,-0.02755027,-0.0055939886,0.024113894,-0.050834693,-0.023383169,-0.0183076,0.014328116,-0.021526735,-0.023580661,0.04419893,-0.015592071,-0.019996164,0.025160605,-0.063987724,0.009158737,-0.033040576,0.0013738106,0.024824867,0.013923255,0.019245692,0.030473167,0.016668407,0.02138849,0.019453058,0.019778922,-0.00018052093,0.03888637,-0.019324688,-0.01575994,0.059958868,0.015434076,-0.017320134,0.02423239,-0.033336814,0.013024662,0.00007556421,-0.024943363,0.005984037,-0.027056538,-0.007983654,0.0032512282,-0.027451525,0.028932722,0.0012361826,0.013794885,-0.036891688,-0.0029327709,0.01378501,0.010328883,0.021763727,-0.0011115152,0.026918294,0.028754978,0.013064161,-0.037543416,-0.0038017398,-0.017251011,0.002326714,-0.005110131,0.03323807,0.0113360975,0.0015762409,0.006161781,-0.0016675814,-0.039024614,0.021052752,0.022849938,0.0048928885,-0.041157536,-0.007746662,0.009306856,0.015394578,-0.005747046,-0.02022328,-0.009380916,-0.027076287,0.029584449,0.010526376,-0.025022361,0.017636124,0.0033401,0.0046879896,-0.0066110776,0.009933897,-0.007193682,-0.008630443,0.021763727,-0.034067538,0.009237735,0.019699926,-0.029347457,0.012738298,-0.005445869,0.03067066,0.041394528,0.025733335,-0.0062309033,-0.06687112,0.020934256,0.0036536201,0.014940344,-0.004349783,0.0015552572,-0.0022526544,0.012145818,-0.030433668,0.051624667,-0.009371042,-0.03637821,0.0014281211,0.002345229,0.027372528,-0.023383169,0.0015799438,-0.04281648,-0.022296958,-0.01040788,0.0014182464,-0.030512666,-0.003888143,0.008526759,0.038906116,0.031914867,-0.02928821,-0.02924871,0.020717014,-0.014851472,0.008916808,-0.020559018,-0.014683603,0.029623948,-0.054468565,-0.003999233,-0.028577235,-0.052493636,0.02134899,0.043290462,-0.021882223,-0.030986648,0.02192172,0.030907651,-0.020420775,-0.0063987724,0.010348632,0.012007574,0.027925508,0.0070998725,-0.056601487,0.020618267,-0.02699729,-0.04846478,0.012234691,0.025377847,0.0070653115,-0.021447739,0.021013252,-0.021052752,-0.007726913,-0.002463725,-0.022277208,0.0058112307,0.0190087,-0.024884116,0.07532382,-0.019808546,0.0055446154,-0.0309669,-0.0041251346,0.031381633,0.017754618,0.008724253,-0.010556,0.008946432,0.019769048,-0.004850921,0.01155334,0.015019341,0.009025429,0.03264559,0.024963113,0.027668767,0.014239244,-0.008077463,0.030315172,-0.010516501,0.042895477,-0.038096394,-0.033356566,-0.010990485,0.0393801,-0.0014416988,-0.014387364,0.004850921,0.0070998725,-0.020322029,0.06544917,-0.0044509983,0.0044238428,-0.017517628,-0.050874192,-0.037227426,-0.0022341392,0.0032117297,0.013597392,0.018613713,-0.041789513,-0.01435774,0.006635764,-0.048583273,0.026602304,-0.02166498,0.02755027,-0.052217145,-0.015898185,0.0071541835,0.045462884,-0.05569302,-0.030631162,-0.03904436,-0.0379779,-0.012481556,0.0147626,0.016026555,0.014347865,-0.0038338325,0.016579535,-0.018485343,0.0018231071,-0.008901997,0.009217985,-0.035331495,0.015364954,0.0056729857,0.0018391534,-0.04866227,0.008650193,-0.012007574,-0.02136874,0.010161014,-0.012293938,0.0036486827,0.012422308,-0.00867488,-0.011158354,-0.00590504,0.004789205,0.008131773,0.0075096707,-0.000831322,0.026266566,0.0062605273,-0.0109411115,0.017359633,0.025693838,0.0267208,0.031934615,4.6528498e-7,-0.01295554,-0.015305706,-0.004789205,-0.0088476855,-0.032211106,0.038432132,0.012629676,-0.009109364,0.0073418017,-0.04026882,0.021210747,0.020736763,0.010141265,-0.053283606,0.02642456,0.010654747,-0.04945224,0.0019601178,-0.03625971,-0.030334922,-0.009657407,0.03748417,0.027234282,0.012767921,0.03396879,-0.009588284,0.010753493,-0.00070727174,-0.009775902,0.019749299,0.0005659408,0.011632336,-0.032882582,-0.0025229729,0.0104868775,0.062842265,-0.0052385014,0.023343671,-0.016994271,-0.000423067,-0.024528628,0.018100232,-0.02028253,0.039893582,-0.01915682,-0.0008955072,0.0058902283,0.0062852143,-0.012827169,0.033356566,0.0126593,-0.006102533,-0.016658533,-0.0028759916,-0.021072501,0.010358507,-0.023738656,0.011484217,-0.01293579,0.043369457,-0.01658941,0.010072142,0.008274956,0.014663854,0.01741888,0.009637658,0.025239604,0.010259761,0.001330609,-0.021210747,-0.0035869663,-0.015513074,-0.007238118,0.0034141599,-0.00372768,-0.015206959,-0.030334922,-0.015019341,0.0077713486,-0.022435203,-0.021526735,0.053007115,-0.0034906885,-0.028853724,-0.04159202,-0.00023714587,-0.003056204,0.033949044,-0.019798672,-0.005223689,-0.0056334874,-0.016253673,0.01716214,0.031737123,-0.016954772,0.005855667,-0.003120389,-0.0086255055,0.022138963,0.04388294,0.026562806,0.023264673,-0.009010618,-0.003179637,-0.0062062168,-0.02559509,-0.0140615,-0.0039868895,0.012530929,0.016895525,-0.024824867,-0.026799798,-0.0029944873,-0.010309134,-0.00620128,0.023560913,-0.0038214892,-0.029604198,0.01902845,0.019433308,-0.03039417,0.027115786,-0.024271887,-0.054152574,-0.00035764746,-0.016352419,-0.0035326558,-0.022237709,-0.0013207343,-0.007909594,0.0035647482,0.023205426,-0.05454756,-0.015137837,-0.0009967224,0.019482683,-0.022178462,0.029920187,-0.013182657,-0.04921525,-0.03408729,-0.016451165,0.0032635715,0.0063197752,-0.021427989,-0.005248376,-0.01563157,0.022612946,0.013301152,-0.02674055,-0.014644105,-0.009998082,0.007958967,0.023304172,0.01393313,0.055258535,0.027510772,-0.015513074,0.026760299,-0.0045423387,0.034778513,0.030808905,-0.010358507,0.020480022,-0.025417347,0.008299642,-0.011118854,-0.014811974,-0.009025429,0.006922129,-0.00020273888,0.0008708206,-0.0197098,-0.009217985,0.014071375,0.010200513,0.005218752,-0.008684753,-0.014960093,-0.0063642114,-0.0022353737,-0.0196703,0.03916286,0.0012750641,0.0033499748,-0.010694245,0.02504211,-0.0074504227,0.013587517,0.01658941,-0.006695012,0.00060636515,0.0006254973,-0.010309134,0.010121515,-0.020322029,0.02897222,0.013330776,0.034798265,-0.0011713803,-0.0024587875,-0.012224816,0.013607266,0.015582196,0.0059001027,-0.005934664,-0.021487236,0.00950435,0.0028340244,-0.016421542,-0.010862114,0.04475191,-0.02843899,0.0029303022,0.013024662,0.009538911,-0.0074010496,-0.015690817,-0.008758814,-0.011691584,-0.02302768,-0.06829307,-0.002273638,-0.019225942,-0.031124894,0.0041325404,-0.0018885266,-0.019630803,0.007040625,0.03768166,0.010664621,-0.021585982,0.0067196987,-0.025733335,0.026602304,0.051032186,0.022040216,-0.03973559,-0.027886009,-0.03604247,-0.04423843,-0.003574623,0.06544917,-0.005648299,-0.014752726,-0.0072973655,0.042224,-0.00021215067,-0.034640267,0.0041029165,-0.015779689,-0.006507394,0.038096394,-0.017981736,-0.026957791,0.012126069,0.022040216,-0.016095677,-0.015246458,-0.013814634,0.0066703255,0.016984396,0.007015938,-0.027826762,0.01671778,0.020035664,0.008265081,-0.012985163,-0.027471274,0.015453826,0.022178462,0.017468255,0.015937684,-0.02924871,-0.014604606,-0.0046756463,-0.027649017,-0.013943004,0.014110873,-0.024271887,0.009756153,-0.023560913,0.011701459,-0.004307816,-0.0010535016,0.033810798,0.016135177,-0.010417755,0.010763368,0.03651645,0.029722694,-0.015819188,0.03067066,0.013113534,0.03965659,0.0017169546,0.027510772,-0.016569661,0.01236306,0.020144284,0.00745536,0.011099106,0.011405219,0.011266975,0.007958967,-0.010931237,0.019038323,0.02013441,0.0015861155,-0.0028463677,0.007366488,-0.007134434,0.0072677415,0.03434403,-0.014140498,-0.012817294,-0.024963113,0.013380149,0.019285189,-0.023501664,-0.014505859,-0.0112571,0.003317882,-0.019443184,0.012234691,0.020736763,-0.016115427,0.0118495785,-0.007949092,0.024054645,-0.03827414,-0.0021008316,-0.011573088,0.021526735,0.036476955,-0.021684729,0.038333386,-0.042026505,-0.0015922872,-0.0015811782,-0.008640318,-0.04949174,-0.0083391415,0.0022711693,0.009069866,0.014535483,-0.021763727,0.007168995,-0.028537735,-0.005613738,-0.042263497,-0.01151384,-0.012619802,0.019640677,0.022909185,0.033139322,-0.030354671,-0.057786446,0.041829012,0.021625482,-0.004172039,0.04186851,0.003925173,-0.014930469,-0.024923613,0.035943724,-0.0224747,-0.0023662127,0.020401025,0.0067641344,0.007070249,0.0046386165,0.009326606,-0.03491676,0.050518703,-0.026701052,-0.008334204,-0.025713585,0.0126395505,-0.02559509,-0.045541883,-0.007998466,-0.021309493,-0.04617386,-0.011642211,0.001461448,-0.023462167,-0.010723869,0.017122641,0.03939985,-0.026523307,0.0013096253,-0.014347865,0.023837402,0.014811974,0.012501306,0.020480022,0.018514967,-0.007011001,0.031638376,-0.013725762,-0.010052393,0.017774368,-0.023817653,0.0027797136,0.019462934,0.016451165,0.011148479,0.004446061,0.031934615,0.008768688,0.019798672,-0.008472449,-0.014130623,-0.0013293746,-0.0054261195,0.029485703,0.010496752,-0.0281625,0.027115786,-0.040723052,-0.023363419,0.00083625934,-0.025496343,0.0018082951,-0.009410541,-0.0025377849,0.00014881404,-0.022593196,-0.016559787,-0.0337318,0.0009911678,0.009173549,-0.011375596,-0.0058606043,0.035015505,-0.021566233,-0.07259842,-0.007484984,-0.012728423,-0.008067588,-0.013419648,0.036318958,0.062210288,-0.006744385,0.03827414,0.0010806569,0.02190197,-0.0008492198,0.0029870814,-0.01669803,0.023718907,0.017764494,0.01070412,0.020578768,-0.020006038,0.029702945,0.016530162,-0.018159479,0.017409006,0.0088476855,0.02253395,0.041197035,0.0017823741,0.0046756463,-0.027056538,0.011800205,0.041315533,0.032270353,0.0060975957,-0.013794885,-0.00240818,-0.019235816,-0.053599596,0.029722694,0.0029253648,-0.0016478321,-0.022948684,0.006171656,-0.0295252,0.016115427,0.0073072403,-0.031401385,0.017685497,-0.015621695,0.014683603,0.0060926583,0.005589051,-0.00632965,0.028458739,0.044791408,0.049096756,0.008141648,0.007919469,-0.023975648,-0.007164058,0.0011207727,0.009479663,-0.0070554367,-0.018939577,0.028320493,0.013725762,-0.021171248,-0.0015898185,0.02727378,-0.009785777,0.02249445,0.015710566,0.036200464,-0.013913381,0.027175033,0.042974472,-0.026622053,-0.040644057,-0.000017946017,-0.020598518,0.010447378,0.03695094,0.009622846,-0.01295554,-0.02755027,0.013449272,0.007840471,-0.025476595,-0.023797905,0.00843295,-0.00042152408,0.010654747,0.033415813,-0.00011309559,0.047911797,0.0010004254,0.008837811,0.018593963,0.005598926,-0.0076726023,-0.030334922,0.005687798,-0.0016009274,0.015206959,0.04052556,-0.024054645,0.025397597,0.016559787]},{"id":"three-integer-sum","name":"Three Integer Sum","description":"Given an integer array `nums`, return all the triplets `[nums[i], nums[j], nums[k]]` where `nums[i] + nums[j] + nums[k] == 0`, and the indices `i`, `j` and `k` are all distinct.\n\nThe output should *not* contain any duplicate triplets. You may return the output and the triplets in **any order**.\n\n**Example 1:**\n\n```java\nInput: nums = [-1,0,1,2,-1,-4]\n\nOutput: [[-1,-1,2],[-1,0,1]]\n```\n\nExplanation: \n`nums[0] + nums[1] + nums[2] = (-1) + 0 + 1 = 0.`\n`nums[1] + nums[2] + nums[4] = 0 + 1 + (-1) = 0.`\n`nums[0] + nums[3] + nums[4] = (-1) + 2 + (-1) = 0.`\nThe distinct triplets are `[-1,0,1]` and `[-1,-1,2]`.\n\n**Example 2:**\n\n```java\nInput: nums = [0,1,1]\n\nOutput: []\n```\n\nExplanation: The only possible triplet does not sum up to 0.\n\n**Example 3:**\n\n```java\nInput: nums = [0,0,0]\n\nOutput: [[0,0,0]]\n```\n\nExplanation: The only possible triplet sums up to 0.\n\n\n**Constraints:**\n* `3 <= nums.length <= 1000`\n* `-10^5 <= nums[i] <= 10^5`\n","difficulty":"Medium","concepts":["Two Pointers"],"solutions":{"python":"class Solution:\n    def threeSum(self, nums: List[int]) -> List[List[int]]:\n        res = []\n        nums.sort()\n\n        for i, a in enumerate(nums):\n            if a > 0:\n                break\n\n            if i > 0 and a == nums[i - 1]:\n                continue\n\n            l, r = i + 1, len(nums) - 1\n            while l < r:\n                threeSum = a + nums[l] + nums[r]\n                if threeSum > 0:\n                    r -= 1\n                elif threeSum < 0:\n                    l += 1\n                else:\n                    res.append([a, nums[l], nums[r]])\n                    l += 1\n                    r -= 1\n                    while nums[l] == nums[l - 1] and l < r:\n                        l += 1\n                        \n        return res\n","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {number[][]}\n     */\n    threeSum(nums) {\n        nums.sort((a, b) => a - b);\n        const res = [];\n\n        for (let i = 0; i < nums.length; i++) {\n            if (nums[i] > 0) break;\n            if (i > 0 && nums[i] === nums[i - 1]) continue;\n\n            let l = i + 1;\n            let r = nums.length - 1;\n            while (l < r) {\n                const sum = nums[i] + nums[l] + nums[r];\n                if (sum > 0) {\n                    r--;\n                } else if (sum < 0) {\n                    l++;\n                } else {\n                    res.push([nums[i], nums[l], nums[r]]);\n                    l++;\n                    r--;\n                    while (l < r && nums[l] === nums[l - 1]) {\n                        l++;\n                    }\n                }\n            }\n        }\n        return res;\n    }\n}\n","cpp":"class Solution {\npublic:\n    vector<vector<int>> threeSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        vector<vector<int>> res;\n\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums[i] > 0) break;\n            if (i > 0 && nums[i] == nums[i - 1]) continue;\n\n            int l = i + 1, r = nums.size() - 1;\n            while (l < r) {\n                int sum = nums[i] + nums[l] + nums[r];\n                if (sum > 0) {\n                    r--;\n                } else if (sum < 0) {\n                    l++;\n                } else {\n                    res.push_back({nums[i], nums[l], nums[r]});\n                    l++;\n                    r--;\n                    while (l < r && nums[l] == nums[l - 1]) {\n                        l++;\n                    }\n                }\n            }\n        }\n        return res;\n    }\n};\n","java":"class Solution {\n    public List<List<Integer>> threeSum(int[] nums) {\n        Arrays.sort(nums);\n        List<List<Integer>> res = new ArrayList<>();\n\n        for (int i = 0; i < nums.length; i++) {\n            if (nums[i] > 0) break;\n            if (i > 0 && nums[i] == nums[i - 1]) continue;\n\n            int l = i + 1, r = nums.length - 1;\n            while (l < r) {\n                int sum = nums[i] + nums[l] + nums[r];\n                if (sum > 0) {\n                    r--;\n                } else if (sum < 0) {\n                    l++;\n                } else {\n                    res.add(Arrays.asList(nums[i], nums[l], nums[r]));\n                    l++;\n                    r--;\n                    while (l < r && nums[l] == nums[l - 1]) {\n                        l++;\n                    }\n                }\n            }\n        }\n        return res;\n    }\n}\n","csharp":"public class Solution {\n    public List<List<int>> ThreeSum(int[] nums) {\n        Array.Sort(nums);\n        List<List<int>> res = new List<List<int>>();\n\n        for (int i = 0; i < nums.Length; i++) {\n            if (nums[i] > 0) break;\n            if (i > 0 && nums[i] == nums[i - 1]) continue;\n\n            int l = i + 1, r = nums.Length - 1;\n            while (l < r) {\n                int sum = nums[i] + nums[l] + nums[r];\n                if (sum > 0) {\n                    r--;\n                } else if (sum < 0) {\n                    l++;\n                } else {\n                    res.Add(new List<int> {nums[i], nums[l], nums[r]});\n                    l++;\n                    r--;\n                    while (l < r && nums[l] == nums[l - 1]) {\n                        l++;\n                    }\n                }\n            }\n        }\n        return res;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def threeSum(self, nums: List[int]) -> List[List[int]]:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {number[][]}\n     */\n    threeSum(nums) {}\n}\n","cpp":"class Solution {\npublic:\n    vector<vector<int>> threeSum(vector<int>& nums) {\n        \n    }\n};\n","java":"class Solution {\n    public List<List<Integer>> threeSum(int[] nums) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public List<List<int>> ThreeSum(int[] nums) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/jzZsG8n2R9A","embedding":[-0.056265697,-0.023639407,-0.0011572782,-0.055440813,0.022293545,-0.02370453,-0.040549506,0.008275963,0.024160387,0.026743572,0.0054051536,-0.046280272,0.010462988,-0.014609111,0.022705987,0.027568456,-0.0115158,-0.0040809996,0.006599063,0.06811796,0.009182249,0.060607187,0.033841908,-0.0390734,0.063038416,-0.01504326,0.012763978,0.028870901,-0.0020147222,-0.036728997,0.02804602,-0.013675691,0.000059822665,0.04467392,-0.032300677,0.021164758,-0.0052287807,-0.0054838434,0.001299055,-0.023096722,0.0016429822,-0.012221292,0.02455112,-0.020925976,0.019493286,0.021805128,0.027242843,0.0046182587,0.034080688,0.019569261,0.026070641,0.022445498,0.009567556,0.01781096,-0.024247216,-0.004946584,-0.02396502,0.051620305,-0.0041624024,-0.010766893,0.021729153,-0.042503178,0.014131547,0.017214004,-0.012481781,0.03128043,0.042025615,0.0117328735,-0.0016877538,-0.05761156,-0.04400099,0.014771916,0.02947871,-0.028111141,0.0066533317,0.050665177,0.017365957,0.034536544,0.0014530421,-0.027676992,0.047278814,0.004070146,0.032235555,0.029326757,-0.0097249355,-0.0031747138,-0.03245263,-0.023140136,-0.018288523,-0.047018327,-0.018581573,-0.04230781,-0.014533134,0.028936025,0.017246565,-0.01542314,0.025310881,0.013719105,0.012253853,0.067553565,0.024485998,0.03271312,0.013317517,-0.013219834,-0.0040240176,0.018820355,0.03514435,-0.00027846583,0.00065800693,-0.017355103,0.020383291,0.034731913,0.016139485,-0.044977825,-0.0004711194,0.050491516,-0.01189568,-0.030694326,0.012731416,-0.01653022,0.022271838,-0.021479517,0.017365957,-0.034124102,-0.02225013,-0.0029983409,0.025527956,-0.07037554,0.047452476,0.008189133,0.043675378,-0.022402084,0.018158277,0.018331937,-0.050621763,-0.04714857,0.01997085,-0.012015071,-0.023313796,0.044717338,0.050925665,-0.0019333193,-0.033755075,-0.016964369,0.06073743,-0.00011879738,-0.005133811,0.012883369,-0.009231091,-0.0045531364,0.005898998,-0.0041081337,0.02050268,0.020578658,0.016617049,-0.0209911,0.017235711,-0.0026645889,0.025983812,-0.018049741,0.00006957406,-0.01985146,-0.018386206,-0.0055055507,0.011038235,0.024833318,-0.017105466,-0.040831704,-0.012242999,-0.049232487,0.018809501,-0.033516295,-0.022836233,0.025614785,0.049406145,-0.01320898,-0.028588705,-0.05717741,-0.028827487,0.028762365,-0.01685583,0.0033755077,-0.03143238,-0.04102707,0.012091047,0.020980246,0.026439669,-0.060780846,-0.027199429,0.0064688185,0.033516295,0.043458305,0.0063060126,0.033082146,-0.009133408,-0.0015140943,0.006246317,0.054268613,0.009117126,0.017094612,0.0052016466,0.04536856,0.027459918,0.039181937,0.017561322,-0.035166062,0.010327317,0.002683583,-0.028328216,-0.025441125,0.038530715,-0.037228268,0.028653827,-0.011201042,-0.024138678,0.021544639,0.0019740209,-0.0140881315,-0.017246565,0.06251744,0.016986076,-0.0048163394,0.0037255401,0.010907991,0.05752473,0.011363847,-0.012937637,0.019949142,0.011114212,-0.0018044313,0.0055191177,-0.022293545,-0.009003162,-0.012785685,0.012698855,-0.01033817,-0.007630167,-0.038009737,-0.014619964,0.03390703,0.03286507,0.01857072,0.003611576,0.011103358,-0.007825534,-0.010832015,-0.013284956,0.027134307,-0.018646695,-0.020513535,0.02396502,0.02930505,0.024203802,-0.043805625,-0.02300989,0.042503178,-0.007472788,0.0003156059,-0.008210841,-0.018494744,-0.04102707,0.012438366,-0.060607187,-0.05122957,0.008845784,-0.046106614,-0.010354451,0.055788133,0.035969235,0.03714144,0.006257171,-0.027199429,0.019580115,-0.00881865,-0.009480727,-0.0020717042,0.011570068,-0.022923062,0.032300677,-0.08422489,-0.024203802,-0.0005620193,0.04356684,0.00512567,0.013632275,-0.031215306,-0.0027134307,0.04450026,-0.0008126725,-0.049319316,-0.042438056,-0.04154805,-0.0071308957,0.03970292,-0.0052993298,0.008086023,-0.023422332,-0.030347008,0.0028301082,-0.023726238,-0.028154556,-0.015900703,-0.031237014,0.028892608,-0.027633578,-0.0472354,-0.012796539,0.00083573663,-0.019742921,0.03863925,-0.0063494276,0.02029646,-0.0036821254,-0.018212546,0.039789747,-0.081446335,-0.020426705,-0.026244301,0.0061432067,0.017713275,0.033733368,0.039833162,0.056699846,0.05266226,0.014077278,0.007749558,0.0072557135,0.005741619,-0.016747294,-0.030390423,-0.031367257,-0.020860855,-0.018331937,0.021620614,-0.06694576,0.03355971,0.03245263,0.0028708095,0.0012753124,0.031888235,0.04545539,0.00836822,0.03772754,0.00241631,-0.009269079,0.0033293793,0.0074510803,0.02029646,0.03340776,-0.021251589,0.01346947,-0.0077929725,0.0472354,-0.016953515,-0.023487456,0.007103761,-0.06225695,-0.010848296,-0.0061703413,0.019612676,-0.018386206,0.01448972,-0.010072255,-0.029674077,0.012470927,0.026830401,0.003307672,-0.045889538,-0.002816541,0.06260427,0.028501876,0.006805284,-0.012872515,-0.020882562,-0.043805625,-0.025679907,-0.011190188,0.008758954,-0.003692979,-0.024442583,-0.0615189,-0.050665177,0.012264706,-0.0051935064,0.018049741,0.052488603,-0.007874375,-0.024247216,-0.0018085015,-0.028393338,-0.011841411,-0.034102395,0.04732223,-0.0055191177,0.039181937,-0.033082146,0.055527642,0.03755388,-0.022358669,0.001925179,0.022792818,0.01827767,0.02318355,-0.008851211,0.003307672,-0.031150183,0.0023416907,0.036642168,0.048060283,-0.0501442,0.0011905177,-0.018505597,0.016052656,-0.0017243852,-0.00020740785,0.022814525,-0.014587403,0.014457159,0.018635841,-0.0137082515,-0.0058067413,0.016454244,0.07215555,-0.010012559,0.033798493,-0.005198933,-0.009176822,-0.05752473,-0.017224858,-0.04180854,-0.02659162,0.0062788785,-0.04035414,0.022315253,-0.06117158,0.076410204,-0.03685924,0.06438428,-0.027568456,-0.045932952,-0.039138522,-0.043870747,-0.015195211,0.0011369274,0.021848543,-0.029977981,-0.015390579,0.056135453,0.022065617,0.015933264,0.032843363,-0.019732067,0.021794274,0.052401774,-0.010718051,0.01227556,0.033234097,0.018842062,-0.033147268,0.014663379,-0.040180482,0.0046915216,0.007402239,-0.008639563,0.01781096,-0.037336804,-0.0027568454,0.013436909,0.036316555,0.008308524,0.027047476,0.0013777444,-0.012297267,0.028740657,-0.049492974,-0.026852109,0.010560672,0.070809685,0.02709089,0.035035815,-0.013675691,-0.03805315,-0.048277356,-0.0133609325,0.0034677642,-0.03618631,0.008465904,0.0010426358,0.02522405,-0.020253045,-0.019764628,0.0026985067,-0.016172046,-0.007858095,0.010766893,0.018994015,-0.017485347,-0.009795484,-0.004303501,0.008699259,0.018505597,-0.085006356,0.024008434,-0.0016891105,0.023726238,-0.025245758,-0.021067075,-0.031584334,0.011439824,0.077712655,-0.00019994592,-0.0014042003,0.021186465,-0.012416659,-0.007402239,0.02379136,-0.0019387462,-0.038682666,-0.0007868949,-0.024442583,-0.00790151,0.010425,0.051837377,0.0020893416,0.003939901,-0.040831704,-0.02947871,-0.017680714,-0.056482773,-0.01720315,-0.02221757,0.014294352,-0.0071851644,0.04415294,-0.0005528615,0.017919496,0.05565789,-0.020806586,-0.0291531,-0.07176481,0.013903619,0.024659658,-0.013100443,-0.003144866,-0.0010378872,-0.0151626505,0.012123608,0.019200236,-0.015911557,-0.0050496943,0.010164511,-0.021208175,0.0024475143,-0.022271838,0.017344248,-0.072589695,0.021164758,0.053921293,0.011949948,0.0030661765,-0.032799948,-0.048147112,0.010365305,0.021815982,-0.0020269328,-0.0119933635,-0.01236239,0.0012956631,0.004395758,-0.00068921136,0.021414394,0.036728997,0.023400625,-0.032995317,0.012416659,0.005274909,-0.04248147,-0.030737743,-0.04000682,0.038270224,-0.019276211,-0.03507923,-0.02370453,-0.036142897,-0.011011101,0.015998388,-0.004146122,0.016769001,0.04400099,-0.031866528,0.03568704,0.016161192,0.0236177,0.02050268,-0.00928536,-0.04163488,-0.038031444,-0.017355103,0.028588705,-0.006365708,0.0012061199,0.043197814,-0.019981703,-0.0024000295,-0.024247216,0.029348465,0.01915682,0.013740812,-0.043176107,0.027503332,-0.0052640554,-0.010365305,-0.004398471,-0.025527956,-0.005437715,-0.016421681,0.0355785,0.03705461,-0.00011303135,0.008161999,0.019102551,0.0039860294,0.042264394,0.010897137,0.005288476,-0.0024868592,-0.040245604,0.045585636,0.0005287798,0.0029277916,-0.059869133,0.0015792166,-0.010500977,-0.046757836,-0.007619313,0.043762207,-0.0011898393,-0.009996278,-0.021859396,-0.030954815,0.034362886,0.02081744,0.013393493,-0.03942072,-0.0018614134,-0.00036156463,0.0021802415,0.014435451,0.02029646,-0.03399386,0.01877694,-0.015954971,0.01673644,-0.0073479703,0.0029603527,-0.0033809345,-0.007201445,-0.043110985,-0.012677148,-0.016052656,-0.027459918,-0.011852265,0.02583186,0.01457655,0.029999688,-0.029695785,0.020578658,0.012416659,0.06681552,0.005633082,-0.021544639,-0.010457561,0.008297671,-0.02752504,0.0047810646,0.036577046,0.010848296,0.0041786833,-0.023878189,-0.023270382,0.009876887,0.01198251,-0.006333147,0.04137439,0.0025804725,0.011483238,-0.006875833,-0.0035437404,-0.021099636,0.0013540019,-0.013990448,-0.0052857627,0.001896688,-0.01087543,0.018364498,-0.050404686,0.016508512,-0.0047674975,0.01574875,-0.03297361,0.014185815,-0.024572827,0.022640865,0.002545198,-0.023140136,-0.033320926,0.0030526095,0.01682327,0.007548764,0.0068161376,0.008954321,0.021707445,0.02930505,0.0276987,-0.035665333,-0.008248829,0.018147424,-0.015846435,0.0007400882,-0.026461376,-0.013599714,0.028936025,-0.01778925,-0.001591427,0.009524141,0.01997085,0.001915682,-0.028936025,0.0148696,-0.0067455885,0.0049682916,-0.048060283,-0.016877538,0.027242843,-0.020448413,-0.038096566,-0.04384904,0.026461376,-0.04918907,-0.012025924,-0.017311687,-0.0250721,0.013219834,-0.00445274,0.024203802,0.0271126,-0.017300833,0.02539771,-0.07432629,0.032018483,-0.034601666,0.0045287157,0.024268923,0.00040735377,0.011754582,0.004971005,-0.0015290182,0.019091697,0.03627314,-0.003302245,0.014554841,-0.0007896083,0.0058664368,-0.0077929725,0.0069029676,0.004889602,-0.022640865,0.0626911,0.0008201344,0.008612429,-0.005098536,-0.019287065,0.015260334,-0.014934722,0.018038888,-0.019493286,-0.039442427,-0.005380733,-0.030954815,-0.011656898,-0.0023606846,0.020480974,0.007358824,0.010137376,0.012036778,0.026635034,0.02845846,-0.0025438413,0.03162775,-0.027329674,-0.0060780845,0.014109839,-0.006094365,-0.0038666385,0.015216919,0.021012807,-0.024811609,0.02145781,0.029001147,-0.013903619,0.009084566,0.015412286,0.036902655,-0.015412286,0.0050496943,-0.008270537,-0.00715803,0.007841814,-0.006479672,-0.007662728,-0.012373243,0.049145654,-0.000020488522,-0.026483083,0.010164511,-0.010397866,-0.010121096,0.015379725,-0.009149688,0.005266769,-0.010207926,0.018592427,-0.005622228,-0.0012162953,0.02073061,-0.012655441,-0.0059369863,0.028870901,0.028415045,0.025354296,0.0028572425,0.011352994,-0.05309641,0.027763821,0.011667752,0.027373089,0.026721865,0.02029646,-0.006875833,0.016074363,-0.010435854,0.027069183,0.005578813,-0.022619158,0.011656898,0.040397555,-0.0056493627,0.00864499,0.016682172,-0.022662573,-0.024420876,-0.00781468,0.026548205,0.013100443,-0.014424597,0.0094753,0.022109032,-0.011570068,-0.039290477,-0.055614475,0.022662573,0.018624987,0.0069843703,-0.030629205,-0.020893415,0.011917387,-0.037336804,-0.03720656,0.015195211,-0.02396502,0.02633113,0.034124102,-0.048971996,-0.008813223,0.04356684,-0.0014788196,-0.005980401,0.0017433792,0.015661921,-0.012850807,0.04078829,0.016899247,-0.042090736,0.041070487,-0.007830961,-0.0594784,0.02693894,-0.009947437,0.0075650443,0.0022480772,0.0053481716,-0.0344063,0.021859396,0.0017759403,-0.033342637,-0.019167675,0.033755075,-0.00762474,0.046627592,-0.01869011,-0.0174962,-0.024268923,0.04528173,0.030129934,0.0061649145,0.012351536,0.010690916,-0.000056897246,-0.025549663,-0.01827767,-0.0043686233,0.014815331,0.019656092,0.03670729,0.034428008,0.030716034,-0.019949142,-0.012677148,0.025788445,-0.006919248,0.017691568,-0.034775328,0.010012559,-0.01320898,0.024768194,0.008574441,-0.012297267,0.010110242,-0.015238626,-0.0040782862,0.046931494,-0.0057958877,0.01644339,-0.044630505,-0.05826278,-0.0005738906,0.009583837,0.0012685288,0.0033972152,0.0027175008,-0.025180636,-0.016801562,-0.02300989,-0.027742114,-0.0059152786,-0.01720315,0.014739355,-0.016009241,0.012145315,0.039529257,0.015607653,-0.028241387,-0.0010650215,-0.023509163,-0.018266816,0.00088254333,0.0018614134,0.008129438,0.023140136,0.012926783,0.026266009,-0.03738022,0.0070983344,0.0030363288,-0.033147268,-0.011103358,0.037836075,0.02463795,-0.02650479,-0.044890996,0.0073425435,-0.03484045,-0.03271312,0.015206065,-0.01346947,-0.014142401,-0.02160976,-0.0060292426,0.002769056,-0.010240487,0.023747945,-0.018342791,-0.019601822,-0.019015722,-0.0061269263,0.0062083295,0.017398518,-0.004284507,-0.013502031,0.030933108,0.03577387,0.032300677,-0.0033999286,-0.012677148,-0.00677815,-0.01236239,-0.023248674,0.046236858,-0.013436909,-0.014283499,-0.0075324834,-0.052532017,-0.005622228,0.010956833,0.0061703413,-0.03705461,0.05201104,-0.0022182295,-0.041591465,-0.0034514838,-0.020839147,-0.015401432,-0.007939498,0.0131872725,0.0141749615,0.009274506,0.044304896,-0.027459918,0.0053535984,-0.04044097,-0.018516451,0.02090427,-0.015412286,-0.013241542,-0.042003907,-0.009062858,-0.0011979797,0.02437746,0.026743572,0.020893415,-0.018733526,-0.008634136,-0.010696343,-0.016410828,-0.010207926,0.055614475,-0.013914472,-0.024746487,0.023552578,-0.008292244,-0.013805935,0.014044717,-0.0027582021,0.014012156,-0.051924206,-0.004132555,-0.015531677,-0.008547306,-0.054268613,0.020220485,-0.012861661,0.020025117,-0.013892765,-0.021197319,0.012004217,0.016128631,0.036728997,-0.0035111792,0.011602629,0.0038367908,0.019569261,-0.029869445,-0.017713275,-0.0080100475,0.037749246,-0.03492728,-0.0276987,-0.019699506,-0.05717741,-0.020480974,0.018407913,-0.02583186,-0.029066268,0.02437746,-0.033885323,-0.021273296,-0.018516451,-0.013805935,0.015140943,0.020828294,0.015911557,-0.011830557,-0.027850652,-0.012981052,0.03484045,0.024529412,-0.007516203,-0.009676093,-0.03397215,0.012926783,-0.0056547895,0.054268613,0.028588705,0.017832667,0.013957887,0.02014451,-0.003931761,-0.014706794,-0.0004690843,0.013100443,0.009117126,-0.0006502058,0.0035763015,-0.03371166,0.0058121686,-0.000826918,-0.001377066,0.05387788,-0.005741619,-0.031367257,0.017876081,-0.0026957933,-0.02743821,-0.0072557135,-0.042785373,-0.053573973,-0.015314602,0.004601978,0.003774382,-0.012590318,0.006734735,-0.03210531,-0.0074185194,0.033776782,-0.049666636,-0.0390734,-0.009741216,0.029869445,-0.028024312,0.0393556,-0.027546747,-0.044630505,-0.05639594,0.011081651,-0.0041379817,-0.0033375197,0.020925976,-0.014913015,-0.0013153355,0.023292089,-0.000826918,-0.025158929,-0.013892765,0.0026225308,0.018538158,-0.006202902,-0.0033185256,0.06377647,-0.0022100892,0.0024122398,0.026070641,0.00048265146,0.028849194,0.0032615436,-0.01198251,0.01320898,-0.055614475,-0.004007737,-0.008780661,0.0056113745,-0.015151797,0.012948491,0.0022290833,-0.005475703,0.024963561,0.009323347,-0.019221943,-0.0111793345,0.015119235,0.0068649794,-0.0038720656,0.0096381055,-0.0055408254,-0.0101048155,0.038096566,-0.02242379,0.015781313,0.0027758395,0.032300677,0.013078735,0.023487456,0.003011908,-0.0042085308,-0.002577759,0.013013613,-0.0019889446,-0.00994201,-0.026786987,0.025441125,0.024616243,0.02187025,0.007109188,-0.012004217,-0.018179985,0.021164758,-0.015900703,-0.007103761,-0.0043279217,-0.003969749,-0.008449623,0.013632275,-0.018288523,-0.009236517,0.042959034,-0.047626134,-0.017995471,0.019764628,-0.009165969,-0.011580922,-0.003302245,0.024485998,-0.030043103,-0.019905727,-0.03635997,-0.018972307,-0.029869445,-0.029174807,0.021805128,0.011418116,-0.008547306,0.008617856,0.07476044,0.003635997,-0.020925976,0.026982354,-0.01253605,0.028219678,0.067466736,0.018755233,0.01440289,-0.034710206,-0.034384593,-0.019004868,-0.0026808695,0.041070487,-0.005991255,0.011504945,0.018071448,0.052532017,-0.0030743168,0.004593838,0.005418721,-0.0017121747,-0.017583031,0.023595992,-0.009431885,-0.023096722,0.035014108,0.01906999,0.013751666,-0.009632679,-0.007879802,0.011884826,0.0049113096,0.01346947,-0.0033619406,-0.017832667,0.024659658,-0.00084591197,-0.019341333,-0.015965825,-0.048147112,0.023899896,0.020567805,0.0085907215,0.005065975,-0.028784072,0.0019753776,-0.030802865,-0.0055625327,-0.00037513179,-0.021153904,0.021794274,-0.022163302,0.041526344,0.02268428,-0.019569261,0.038183395,0.02318355,0.002173458,-0.0022955623,0.02221757,0.031519208,-0.007852668,0.011949948,0.031909943,0.019113405,-0.047712963,0.02225013,0.003239836,0.008867491,-0.03670729,0.037445344,0.011971656,0.02242379,0.013133004,0.0077984,0.029999688,0.00014432058,0.0025533382,-0.019916581,-0.0012495348,-0.014641671,-0.007391385,0.0064742453,0.016421681,-0.002187025,0.008221695,0.013133004,0.010761466,0.00066207704,-0.007223152,-0.01524948,-0.007190591,0.025549663,0.0013112654,0.0016646896,0.0068107108,-0.0030254752,-0.009035724,-0.0008927187,0.020111948,-0.056005206,0.008954321,-0.021815982,0.012123608,0.056048624,-0.03653363,0.000061094586,-0.04571588,0.02726455,0.008889198,-0.012297267,-0.030716034,-0.0011823773,0.005166372,0.014750209,0.03371166,0.0070549194,0.020035971,-0.0025560516,0.008303097,-0.026114056,-0.011309579,0.01577046,-0.012286413,0.078277044,0.01979719,-0.03620802,-0.051186156,0.025918689,-0.008357367,-0.02221757,0.036056064,0.014500573,-0.006523087,-0.0135345915,0.040658046,-0.036316555,-0.023856482,0.025810152,-0.002177528,0.034362886,0.007592179,0.04350172,-0.00043550562,0.025549663,-0.011396409,0.010164511,-0.023639407,0.022467205,-0.007380531,-0.04749589,0.0039019133,-0.014337767,-0.0379012,-0.028002603,0.03245263,-0.008965175,-0.014847892,0.041092195,0.022054764,-0.017648153,0.0060075354,0.019645238,0.045976367,0.0031367259,0.006642478,-0.00047145857,0.019558407,0.012242999,-0.015412286,-0.017333394,0.011949948,0.0019455297,-0.037770953,0.0128291,-0.014978137,0.0029332184,0.009567556,-0.004984572,0.056352526,0.033689953,0.0058393027,0.003831364,0.0012190087,-0.0070440657,0.00085473066,0.025636492,0.0003520676,-0.014392036,0.016595341,-0.007966632,-0.04749589,0.028176263,-0.018700963,0.005622228,-0.025636492,0.0054268613,-0.01577046,-0.040223897,-0.020133656,-0.06846528,0.0019794477,0.025006976,-0.026786987,0.0042492324,0.02429063,-0.03399386,-0.072198965,-0.010061401,-0.014196669,0.027373089,-0.024789901,0.027850652,0.04143951,0.027459918,0.05010078,-0.0018220687,0.033364344,0.019048283,0.022445498,-0.0111793345,-0.00047281527,-0.009453592,-0.007315409,0.00828139,-0.018668402,0.025983812,0.04085341,-0.035014108,0.01626973,-0.036229726,-0.003635997,0.019493286,-0.021794274,0.013306663,-0.017420225,-0.017745836,0.026548205,0.014511427,0.0101048155,-0.02242379,0.023574285,-0.029391881,-0.017572176,0.014218376,0.021620614,0.00015983802,-0.0078363875,-0.0060455236,-0.029717492,-0.0002996645,-0.011396409,-0.052358355,0.012850807,-0.017441932,-0.016117778,0.022467205,0.021349272,0.0055896672,-0.0043252083,0.037423637,0.01189568,0.012937637,0.014739355,-0.027546747,0.0065556485,-0.0010351738,0.028697243,-0.01244922,0.013827642,0.03831364,0.017832667,-0.01384935,0.0063928426,0.025810152,0.0002789746,0.029608956,0.03297361,0.020741463,-0.0043577696,0.01253605,0.031323843,-0.015032406,-0.012069339,-0.027199429,-0.018440474,0.023682822,0.029695785,0.018798647,-0.006761869,-0.007619313,-0.002225013,0.014934722,0.013415201,-0.014055571,0.01874438,0.006300586,-0.011873973,0.024529412,-0.010609514,0.040744875,-0.0011878043,0.0063765617,-0.01384935,0.0020825579,-0.005622228,-0.019059137,0.0020052253,-0.031041646,0.020535244,0.03212702,-0.009610971,0.0073262625,0.020372437]},{"id":"max-water-container","name":"Max Water Container","description":"You are given an integer array `heights` where `heights[i]` represents the height of the $i^{th}$ bar.\n\nYou may choose any two bars to form a container. Return the *maximum* amount of water a container can store.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/77f004c6-e773-4e63-7b99-a2309303c700/public)\n\n```java\nInput: height = [1,7,2,5,4,7,3,6]\n\nOutput: 36\n```\n\n**Example 2:**\n\n```java\nInput: height = [2,2,2]\n\nOutput: 4\n```\n\n**Constraints:**\n* `2 <= height.length <= 1000`\n* `0 <= height[i] <= 1000`\n","difficulty":"Medium","concepts":["Two Pointers"],"solutions":{"python":"class Solution:\n    def maxArea(self, heights: List[int]) -> int:\n        l, r = 0, len(heights) - 1\n        res = 0\n\n        while l < r:\n            res = max(res, min(heights[l], heights[r]) * (r - l))\n            if heights[l] < heights[r]:\n                l += 1\n            elif heights[r] <= heights[l]:\n                r -= 1\n            \n        return res\n","javascript":"class Solution {\n    /**\n     * @param {number[]} heights\n     * @return {number}\n     */\n    maxArea(heights) {\n        let left = 0;\n        let right = heights.length - 1;\n        let res = 0;\n\n        while (left < right) {\n            const containerLength = right - left;\n            const area =\n                containerLength * Math.min(heights[left], heights[right]);\n            res = Math.max(res, area);\n            if (heights[left] < heights[right]) {\n                left++;\n            } else {\n                right--;\n            }\n        }\n        return res;\n    }\n}\n","cpp":"class Solution {\npublic:\n    int maxArea(vector<int>& heights) {\n        int left = 0;\n        int right = heights.size() - 1;\n        \n        int curr = 0;\n        int result = 0;\n        \n        while (left < right) {\n            curr = (right - left) * min(heights[left], heights[right]);\n            result = max(result, curr);\n            \n            if (heights[left] <= heights[right]) {\n                left++;\n            } else {\n                right--;\n            }\n        }\n        \n        return result;\n    }\n};\n","java":"class Solution {\n    public int maxArea(int[] heights) {\n        int left = 0;\n        int right = heights.length - 1;\n        int res = 0;\n        \n        while (left < right) {\n            int containerLength = right - left;\n            int area = containerLength * Math.min(heights[left], heights[right]);\n            res = Math.max(res, area);\n            if (heights[left] < heights[right]) {\n                left++;\n            } else {\n                right--;\n            }\n        }\n        return res;\n    }\n}\n","csharp":"public class Solution {\n    public int MaxArea(int[] heights) {\n        int res = 0, area = 0, left = 0, right = heights.Length-1;\n        \n        while (left < right){\n            area = (Math.Min(heights[left], heights[right])) * (right - left);\n            res = Math.Max(area, res);\n            \n            if (heights[left] < heights[right]){\n                left++;\n            } else{\n                right--;\n            }\n        }\n        return res;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def maxArea(self, heights: List[int]) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} heights\n     * @return {number}\n     */\n    maxArea(heights) {}\n}\n","cpp":"class Solution {\npublic:\n    int maxArea(vector<int>& heights) {\n        \n    }\n};\n","java":"class Solution {\n    public int maxArea(int[] heights) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int MaxArea(int[] heights) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/UuiTKBwPgAo","embedding":[0.014878321,-0.0068879137,0.113460585,-0.021985663,-0.034937296,0.007792387,-0.007974353,-0.011174797,-0.012673333,-0.0013821318,-0.0039711203,-0.04495608,-0.06893265,-0.023098862,0.0032325562,0.0173295,0.033010606,-0.011003536,-0.0034038175,0.024147836,-0.02247804,0.0016751492,0.0075783106,0.018935073,0.020422906,0.0106931245,-0.013829347,0.051035855,0.05553146,0.017639909,0.03408099,-0.006903969,-0.03363143,0.015788147,-0.0052876915,-0.036842577,-0.012395034,-0.0057211965,0.018699588,0.0009894351,0.034659,0.0122665875,-0.041980416,-0.016879939,0.015156621,-0.02421206,0.04001091,0.012780371,0.012480664,0.016516007,-0.012502071,-0.0026451836,0.0041744933,0.015295771,0.023355754,0.01037201,0.00423604,0.0374634,0.05107867,0.045983646,0.023077454,-0.022092702,-0.038619414,0.01548844,-0.015884481,0.010618198,0.051378377,0.013679493,0.04084581,-0.08297608,-0.045555495,-0.0069628404,0.032817937,-0.03418803,-0.011956177,-0.059513286,0.015499144,0.022777747,0.01109987,-0.020915281,-0.005119106,-0.03992528,0.02312027,0.026288603,-0.026010303,-0.00626174,0.0057907715,-0.010243564,-0.052834097,-0.077709794,-0.038062815,0.012416441,0.071587205,-0.0015881805,0.016366154,0.010971424,0.02723054,0.016837122,0.01906352,0.020840354,0.0093872575,-0.02532526,0.018528327,0.03846956,-0.015017471,0.021707363,-0.009323034,0.029392714,-0.021439768,0.016398266,-0.02695224,-0.016259115,0.018346362,-0.0064115934,0.017436536,-0.03472322,-0.048895087,-0.028750483,0.040546104,-0.008038575,0.050136734,-0.016569527,-0.012780371,-0.0009559857,-0.007899426,0.021118654,-0.026010303,-0.034487735,-0.04461356,0.016687268,0.032775123,0.009633446,0.06507928,-0.006315259,-0.014878321,-0.050479256,-0.009708373,0.0067273565,0.029499752,0.022906194,0.03418803,0.07364234,-0.0422159,0.0029167933,0.03106251,0.014492984,0.0013225918,0.04940887,0.0030425633,0.029414121,0.0056516216,-0.044998895,-0.0049665766,0.042001825,-0.05848572,-0.071587205,0.0237625,0.004806019,0.03611472,-0.007979704,-0.0030345353,-0.06567869,-0.03033465,-0.003941685,0.022649301,0.010115118,-0.006427649,-0.0037222563,-0.054846417,-0.018207213,-0.001186787,-0.04103848,0.039283052,-0.018346362,0.026545495,-0.018025247,-0.025817635,-0.020562055,-0.05792912,-0.0012396371,-0.02175018,-0.0028953857,-0.015606182,-0.02429769,0.03388832,0.03791296,0.03251823,-0.02960679,-0.01160295,0.018260732,0.020722613,0.02457599,0.021900034,-0.008739676,-0.01906352,-0.0035483192,0.025282443,0.0013540343,-0.015756035,-0.014781987,-0.032796532,-0.012191661,0.037977185,-0.0033235387,0.009082198,-0.026438456,-0.016451785,0.023634054,-0.021364842,-0.049323242,0.018346362,-0.010891146,0.009574574,-0.02705928,-0.0029114413,-0.0025060338,0.04898072,0.02485429,-0.020390794,0.062467545,-0.014022015,0.038169853,-0.021279212,-0.007851258,-0.030227613,-0.017468648,0.027658693,0.020091087,0.029563975,0.04247279,0.03673554,-0.026652534,-0.0011071772,-0.012866002,-0.022906194,-0.03080562,0.024918513,-0.024276283,-0.011581543,-0.03491589,0.04405696,-0.01115339,0.011024944,0.015274364,0.00564627,-0.024447544,-0.044099774,0.05253439,-0.03097688,-0.010184693,0.038041405,0.013518935,-0.0017942293,-0.07693912,-0.015563367,0.043735843,-0.013015855,-0.019695045,0.016783603,-0.009397961,-0.020455016,0.010018784,-0.069318,-0.049665764,0.02107584,-0.026738163,0.008943049,0.0035028278,-0.0032272043,0.037270732,-0.016227005,0.021653846,0.023056047,-0.03900475,0.054161374,0.010361306,0.066663444,0.0018423965,-0.022799155,-0.054418266,0.0064597605,0.054375447,0.019748563,-0.010805515,0.030441688,0.0016590934,0.024725843,0.011196204,-0.0062510357,-0.028407961,-0.04392851,-0.019470263,0.009820763,0.0025220895,0.0018357066,0.024147836,-0.030420281,0.030591542,0.034701813,-0.050393626,-0.022713523,0.016334042,0.01109987,-0.0003018814,-0.045298602,-0.03080562,0.010452288,0.014471577,-0.034680404,0.03144785,0.015242252,0.032218523,-0.017639909,0.040802993,-0.04065314,-0.08327579,0.0039176014,-0.015884481,-0.009301627,-0.014439465,0.0044902563,0.026481273,0.044998895,-0.0074552167,0.034594774,-0.0026037062,-0.028215293,0.016419673,-0.010703828,-0.07929396,-0.025689188,0.026995055,-0.01512451,-0.003312835,-0.012287995,0.039539944,0.033374537,0.0073963455,0.0018932397,0.01658023,0.014193277,-0.00056395796,0.009767244,0.034059584,0.013765124,0.006304555,0.06781946,-0.0019614766,0.008728973,-0.0045277197,-0.02695224,-0.00032964448,0.019759268,0.009681613,-0.039047565,-0.000023686402,-0.018710293,-0.023912353,-0.056730293,0.004046047,-0.05163527,-0.03134081,0.014203981,-0.03945431,-0.003692821,0.01685853,0.0008456025,-0.0009526407,0.016922753,0.03545108,-0.023163086,0.013187117,-0.01129254,0.00838645,0.018164396,-0.020112494,-0.010216804,0.02485429,0.023141677,-0.0016430377,-0.019866306,0.033845507,0.00187317,0.016119966,0.03253964,0.005183329,0.024361914,-0.016419673,-0.023634054,-0.041702118,0.035322633,-0.010575383,0.06790509,0.03673554,0.0030372113,0.0043404023,0.040610325,0.007171565,-0.022178333,0.054803602,-0.0229276,-0.006063719,0.0015774767,0.042429976,0.01750076,-0.043971326,0.021204285,0.02650268,-0.009205293,-0.061268713,0.016248412,0.006111886,-0.0015493792,-0.019159853,-0.036500055,0.039411496,0.0065293354,0.033931136,-0.04795315,-0.039283052,-0.043778658,-0.008434617,0.030655766,-0.013326267,0.0001046132,0.010350603,0.050393626,-0.037527625,-0.042173084,0.010238212,0.00263448,0.0014664246,0.019149149,0.03900475,-0.0601127,0.066663444,-0.007610422,0.06276725,-0.007674645,-0.015734628,-0.010388066,-0.054760788,0.04559831,0.00034787442,-0.008477433,-0.005311775,0.042900946,0.026481273,0.007562255,0.054032926,0.060455225,0.0040166117,0.053048175,0.002059149,-0.04302939,-0.0028445425,0.012341514,0.067476936,-0.021503992,0.024918513,-0.012502071,0.042237308,-0.010436233,-0.015884481,0.015681108,-0.026566902,0.037613254,-0.0028900336,-0.029157229,-0.05052207,0.0004565852,-0.0063366666,-0.00095130276,0.0007057837,-0.016601639,-0.013326267,-0.0040246397,0.0022718876,-0.0007372262,0.0039149253,-0.00900192,-0.041059885,-0.0052876915,-0.02169666,0.018485513,-0.027701508,-0.00637413,-0.0229276,-0.0053438866,-0.0017407101,-0.040267803,0.02678098,0.0071662134,-0.007503384,0.015980816,0.007861963,-0.019149149,0.028429369,0.0054803602,0.0030265076,0.023783907,-0.018100174,-0.0047070086,0.020626279,0.044784818,0.0151780285,-0.00324326,-0.0022090026,-0.019416746,0.06323822,-0.09316612,0.031169549,0.0011172121,0.021846514,0.006186813,0.014289611,-0.012651925,-0.017094014,0.01682642,-0.021129357,-0.007701405,-0.01302656,-0.019748563,0.055146124,0.0052288203,0.009323034,-0.026888017,0.038062815,-0.01800384,0.0047685555,-0.006315259,-0.032689493,-0.009719077,0.049922656,-0.013572454,0.06388045,-0.0077816835,0.014567911,0.019887714,0.002365546,0.012876706,0.034123804,-0.021536103,0.049109165,-0.011410281,-0.040224988,0.036521465,0.0142575,-0.002487302,-0.008263356,-0.0047096848,-0.01434313,-0.035344042,-0.04240857,-0.0052716355,0.012309403,-0.019127741,0.034316473,0.00083958154,0.020358682,-0.04594083,-0.018035952,0.025410889,-0.012823187,-0.053861666,0.016344747,0.010655661,0.04213027,0.022884786,0.020947393,0.0141397575,0.0018357066,0.017875394,-0.051335562,0.03397395,-0.033053424,0.020508535,-0.009146421,0.04439948,-0.0054696565,-0.020893874,-0.008573767,-0.0002251149,0.017436536,0.010853682,-0.038169853,-0.015777443,0.023013232,0.022092702,-0.0181751,-0.024383321,0.034337882,0.042066045,0.01246996,-0.008670101,-0.025025552,-0.019834194,0.009205293,-0.010612846,-0.006449057,0.02147188,0.026352827,0.032496825,-0.017190348,-0.042558424,0.0028579223,0.007829851,0.042280123,-0.010393417,0.0212471,0.0044260332,-0.017233163,0.016152076,-0.054717973,-0.021514695,-0.02211411,0.02275634,0.0046561654,0.02678098,-0.010462993,0.039604165,-0.0017835255,0.024533175,0.033567205,0.008365042,-0.025111182,-0.028985968,0.01604504,0.017522167,-0.009451481,-0.029542567,0.019695045,-0.0009794004,0.016205596,0.014653541,-0.004870242,-0.017286683,-0.016976273,-0.00002364459,-0.024105022,0.0690611,0.017618502,-0.017104719,-0.05737252,-0.008691509,0.041381,-0.01901,0.0063901856,-0.012544887,0.0024645566,-0.0048541864,0.031297993,0.0059085134,0.011142686,0.0099063935,-0.0059031616,0.0077388682,-0.022991823,-0.011613654,0.008391801,0.00763183,-0.018613959,0.03388832,-0.013936385,0.024447544,-0.055873986,0.0021889328,0.010677069,0.035344042,-0.017168941,-0.0030104518,-0.0041584373,0.034466326,0.010580734,-0.0050415033,0.0024618807,-0.014996064,0.00027227864,-0.022692116,-0.025624966,0.028707668,-0.00028214624,-0.006609614,-0.003050591,-0.031790372,0.013058671,-0.0055231755,0.017875394,-0.03975402,0.025111182,-0.030099167,-0.0029542567,-0.05107867,-0.0055820467,0.02004827,-0.021782292,-0.023441385,0.011196204,0.023377161,-0.06469394,-0.0030372113,-0.018271435,-0.008124206,0.0101900445,-0.016194893,0.02905019,0.000121923295,0.009804707,0.02485429,0.0051619215,-0.00866475,-0.020615574,-0.036414426,0.0047765835,-0.010350603,0.037720293,0.01859255,0.023976576,0.01795032,-0.023698276,-0.015156621,-0.00712875,-0.040160764,0.014685653,-0.016430376,0.033053424,-0.008504191,0.016697973,0.032218523,-0.02421206,-0.02384813,-0.0033556502,-0.0195666,0.024062207,0.010891146,-0.029671013,-0.021257803,0.016633749,-0.0147070605,-0.023676869,0.0005753308,-0.0014557206,0.03371706,-0.010778755,0.013925681,-0.0047525,-0.00411027,0.03966839,-0.057158444,0.007926185,-0.006443705,0.004618702,-0.0023816018,-0.01722246,0.00080947706,0.04439948,-0.0101900445,0.01671938,0.023141677,0.023377161,0.008841363,0.021503992,-0.00802252,-0.0366285,0.029135821,-0.03080562,-0.023741093,0.0030184796,0.018742403,-0.003866758,-0.0038025351,-0.028836114,0.034873072,0.00788337,-0.0015855046,-0.012641221,-0.003740988,-0.025196813,-0.011260428,-0.0053278306,0.00774422,0.033674244,-0.018196508,0.016237708,0.008258004,0.0045678588,0.018517623,0.012480664,0.07723883,-0.04148804,0.016419673,-0.04705403,-0.03341735,-0.011624358,0.037763108,0.036307387,-0.023355754,0.021910736,-0.022007072,-0.023377161,-0.00612259,0.0047043324,0.024062207,-0.034958705,-0.033695653,0.050479256,-0.012180957,-0.0070324154,-0.023719683,0.0066470774,-0.037420586,0.04204464,-0.033502985,-0.0149746565,0.016623046,-0.0068183388,-0.03309624,-0.037399177,0.012502071,0.06743412,-0.00676482,0.035793602,-0.043971326,0.018838739,-0.004372514,0.042708278,0.02997072,0.0037704236,0.030998288,0.038169853,0.006053015,-0.0086005265,-0.034830257,0.036714133,0.043457545,0.012587703,0.0131014865,0.0032245284,0.0058335867,0.02932849,0.019994752,0.01708331,-0.009847523,-0.008172373,-0.050307993,0.022285372,0.04202323,0.013850754,0.002563567,0.012373626,0.04705403,0.015756035,0.02476866,-0.025368074,0.004072807,0.00959063,0.019662933,0.020412201,-0.012448553,0.02905019,0.0035456433,0.018496215,-0.0021487935,-0.02924286,-0.016194893,-0.01744724,-0.012341514,-0.031041102,-0.013369082,0.02211411,0.030869842,0.035600934,-0.040417656,0.02558215,0.026909426,0.016055742,-0.0030131277,0.0011573514,0.0028044032,0.017104719,0.030463096,0.0020163336,0.0037945071,0.0069574886,0.0032138245,-0.049451686,0.030463096,0.00054656423,0.036863986,0.0054643047,0.051335562,-0.035065744,-0.008488136,0.017704133,-0.044656374,0.024062207,-0.010618198,-0.010527215,0.027829954,0.023419976,-0.003053267,-0.013540343,0.014311018,0.0120204,-0.00065795094,0.00575866,-0.012116734,0.021921441,0.0027910233,-0.030420281,-0.031126734,0.004190549,-0.010773404,0.0019066194,-0.044784818,0.030099167,0.022392409,0.032582454,0.03363143,0.008985864,0.009901041,-0.008268707,0.019545192,-0.011827731,0.023163086,-0.03106251,-0.007974353,0.02723054,0.027102094,0.013593862,0.048766643,0.01352964,0.013829347,0.011934768,-0.010768051,0.022156926,-0.018389177,-0.01210603,0.015777443,0.02001616,-0.01476058,-0.037163693,-0.010671717,-0.027466023,0.011164093,-0.03983965,0.012769667,-0.05244876,-0.002504696,0.024511768,0.03024902,-0.026267195,0.032368377,0.0049585486,0.007294659,-0.029885089,-0.019973343,-0.0028632742,0.038426746,0.00035924723,0.0234842,-0.020412201,0.002927497,0.02868626,-0.0047203884,-0.0027829953,0.015648996,-0.00763183,0.025988895,-0.038276892,0.011624358,-0.011849138,0.008258004,0.02887893,-0.044442296,-0.0329892,0.021161469,-0.019170556,0.009098254,-0.0034225492,0.02504696,-0.0041049183,-0.02686661,0.027380394,0.00891629,0.01188125,-0.035493895,-0.042429976,-0.012769667,0.024554582,-0.016558822,0.009012624,0.049922656,0.0033315667,-0.0035724028,-0.00411027,-0.0034171974,0.0279584,0.021621734,0.0024645566,-0.017233163,-0.016237708,0.014931841,-0.005325155,-0.016965568,-0.055617094,0.03600768,0.011613654,-0.018881554,-0.02175018,-0.045341417,-0.03821267,0.007658589,-0.0010362644,0.014824803,0.005306423,0.015905889,0.018860146,-0.011420985,-0.03444492,-0.0022705495,0.015156621,0.021942848,-0.0010476372,-0.0232059,-0.0060744225,0.031148141,0.041316777,0.0005047524,0.030827027,-0.014685653,0.004624054,0.008300819,0.006240332,-0.006855802,0.008167021,0.016869234,-0.012866002,-0.011667173,-0.017179646,0.015156621,0.029478343,-0.0085684145,-0.0080974465,-0.031661924,0.009585278,-0.058400087,-0.011035647,0.015777443,0.008445321,0.012052511,0.016419673,-0.036607094,0.014418057,-0.027144909,0.009189237,0.019266892,-0.014889025,-0.017468648,0.0187317,0.009146421,-0.0003314842,0.0039042216,0.00587105,0.00074993697,0.009949208,0.03821267,0.0068183388,-0.02329153,-0.023634054,-0.033952545,0.0038560543,0.0115280235,0.026117342,0.004682925,-0.018239323,-0.05236313,0.009328387,0.033502985,0.011474504,0.0036660612,0.017511463,-0.0085684145,-0.007176917,0.006882562,-0.0008984526,-0.0042146323,-0.01051116,-0.020080382,0.012148845,0.058228828,0.04103848,0.0017326822,-0.0030666469,-0.006556095,-0.027936993,0.019802082,0.022627894,-0.04487045,-0.012095327,0.019577302,0.017061902,0.002432445,-0.0464118,-0.016473193,-0.012170253,0.003500152,0.019941233,-0.015681108,-0.030356057,-0.0064651123,-0.0003308152,-0.017907506,0.001816975,0.014353834,-0.032796532,-0.00763183,0.0027669396,0.019277595,-0.03052732,0.0096709095,-0.019448856,0.008295467,0.028750483,-0.016173486,0.018464105,0.007615774,-0.012191661,0.0011125292,0.0004238047,-0.03296779,-0.045298602,-0.042751092,-0.050051104,-0.024640214,-0.01165647,0.010682421,-0.052876912,0.012459257,0.010404121,-0.03609331,-0.04103848,-0.010409473,-0.023912353,0.025753412,-0.01439665,0.0019280271,0.052277498,0.027744323,-0.03363143,0.022949008,0.03555812,0.037142284,-0.0187317,0.017896801,-0.004038019,-0.047011215,-0.008284763,-0.028386554,-0.017661316,-0.0045250435,-0.012758964,-0.0107091805,0.011506616,-0.024640214,0.022970416,0.0006796931,-0.0117421,-0.0287933,-0.00039871762,-0.025196813,-0.026845202,0.00059640396,-0.030120574,0.03966839,-0.00788337,-0.008279411,-0.03380269,0.0080653345,0.014664245,0.026845202,0.008477433,-0.019898416,-0.00034252251,-0.0014798043,0.0010697138,0.0146749485,-0.041188333,0.047525,0.015295771,0.007407049,-0.015006768,-0.0040835105,-0.04067455,0.019620119,0.00062249455,-0.0065186317,-0.024404729,0.0050361515,0.03352439,-0.008423913,-0.032261338,-0.019491673,0.04422822,-0.016687268,-0.015788147,0.025646374,-0.0044688485,-0.016184188,-0.036671318,0.041231148,-0.0031148142,0.00075194397,-0.043885697,0.020305162,-0.03763466,-0.01979138,0.0000031411137,-0.019491673,0.012758964,-0.00012167243,0.011324651,-0.0065775025,-0.01831425,0.020626279,-0.035322633,0.011121278,0.036671318,0.02731617,-0.019331114,-0.017029792,-0.023805315,-0.0117956195,0.026095934,0.009462184,-0.025689188,-0.014278907,0.018378474,0.02905019,-0.005252904,-0.043200653,-0.009472888,-0.0014691005,0.0007626478,0.033203278,-0.015970113,0.025732003,0.016676566,-0.006427649,0.009847523,-0.013401194,-0.007936889,0.016633749,0.0243191,0.0167729,0.025432296,-0.0229276,-0.005667677,0.005533879,0.026245788,-0.01266263,-0.005630214,0.008236596,-0.023826722,-0.00083623664,-0.031105326,-0.02633142,0.03744199,0.0070912866,0.0032405842,0.007369586,-0.0032165004,0.02703787,-0.0024752603,0.04084581,0.01238433,-0.012052511,0.0104576405,0.019480968,-0.0000025087097,-0.0065453914,-0.001869156,0.013122894,0.0037169044,0.032582454,0.008199133,0.010024135,-0.024340507,0.010580734,-0.03264668,-0.022799155,-0.013625974,-0.008493488,-0.006920025,0.055231754,0.01434313,0.010500456,-0.035301227,-0.0341024,0.010746644,-0.016473193,-0.010024135,-0.0044073015,-0.007562255,0.0033850858,-0.012459257,-0.020123199,0.029157229,0.016237708,0.029756643,0.027251948,0.0055392315,-0.0074016973,0.0125984065,0.007915481,-0.000058327503,0.0037730995,-0.0025943404,-0.018474808,0.016237708,0.015231548,0.024704436,-0.023612646,0.00054656423,-0.04003232,-0.02532526,0.08177725,-0.008354338,0.02130062,-0.03701384,0.0047284164,0.023912353,-0.007679997,-0.00914107,-0.007974353,-0.006722004,0.0076425336,0.015188733,0.021204285,0.030827027,-0.024083614,-0.005737252,0.010580734,-0.00012551912,-0.009954561,-0.00076331676,0.0109446645,0.043371912,-0.032197118,-0.056173693,0.018828034,0.0012135466,-0.011121278,0.030270427,0.0077602756,0.013679493,0.019149149,0.010050895,-0.040289212,-0.00016799994,0.017072607,-0.013722308,0.005180653,0.010500456,0.021739475,0.008718268,0.01434313,-0.018806627,0.023441385,0.015092398,0.02476866,-0.0029890442,-0.010837627,-0.013294155,-0.018239323,-0.013144301,-0.035579525,0.00004954702,-0.048038784,-0.022949008,0.042772498,-0.008054631,-0.021857219,-0.06593558,0.01151732,0.013700901,0.029392714,0.039176013,0.033588614,-0.007861963,0.005512472,0.020615574,-0.012127438,-0.006127942,0.012716148,0.0096709095,0.021375546,0.044784818,0.03701384,0.0020350653,-0.041702118,0.04512734,0.0015386754,0.016516007,-0.005737252,0.013957793,0.00313087,0.00975654,0.029478343,-0.0052074124,-0.01037201,0.0067808754,-0.0026291278,-0.005945977,-0.021503992,0.0050067157,0.02275634,-0.015948705,-0.008627286,0.013593862,-0.036756948,-0.04461356,-0.015863074,0.010024135,-0.0022799154,-0.033460166,-0.035579525,0.0046508135,-0.0027321524,-0.015723925,-0.028921746,-0.050051104,0.0009191913,0.0035911344,-0.0003343274,0.04009654,-0.0014824802,0.047439367,0.015359994,0.021011615,0.004875594,0.007385642,-0.036136124,0.03209008,-0.01987701,0.011346058,0.00028549117,-0.03397395,0.0035964863,-0.01805736,-0.03189741,0.019266892,0.031768963,0.0018504243,0.0366285,-0.020037567,0.006925377,-0.019909121,-0.0044527925,-0.009242756,0.04469919,-0.008445321,0.004736444,0.015188733,-0.039625574,-0.03720651,0.023655461,0.017661316,-0.019202668,-0.018806627,0.008129558,-0.016805012,-0.017415129,-0.013765124,-0.014439465,0.024811475,-0.029285675,0.009274867,-0.021792995,0.014867618,-0.0015520551,0.008054631,0.0048301024,0.049323242,0.019534487,0.007567607,-0.02247804,-0.004080835,-0.011677877,0.008156317,-0.0055285273,0.024554582,0.028515,0.02658831,-0.03581501,0.028386554,0.00096535153,-0.00027027167,0.027080687,-0.031041102,-0.011453097,0.013807938,0.011453097,0.008445321,-0.014867618,0.00436181,-0.009660205,-0.027144909,-0.022970416,0.035301227,0.0043404023,-0.004760528,-0.01188125,0.0006746757,-0.02202848,0.019545192,0.019127741,0.038769267,0.04213027,0.018849442,-0.0026144101,-0.015028175,0.031768963,-0.027851362,0.025089774,0.0020524592,0.015135214,0.0025782848,-0.013358378,0.013272747,-0.0007191635,0.0028311627,0.03108392,0.0041343537,0.03050591,0.014514391]},{"id":"longest-substring-without-duplicates","name":"Longest Substring Without Duplicates","description":"Given a string `s`, find the *length of the longest substring* without duplicate characters.\n\nA **substring** is a contiguous sequence of characters within a string.\n\n**Example 1:**\n\n```java\nInput: s = \"zxyzxyz\"\n\nOutput: 3\n```\n\nExplanation: The string \"xyz\" is the longest without duplicate characters.\n\n**Example 2:**\n\n```java\nInput: s = \"xxxx\"\n\nOutput: 1\n```\n\n**Constraints:**\n* `0 <= s.length <= 1000`\n* `s` may consist of printable ASCII characters.\n","difficulty":"Medium","concepts":["Sliding Window Fixed Size","Sliding Window Variable Size"],"solutions":{"python":"class Solution:\n    def lengthOfLongestSubstring(self, s: str) -> int:\n        charSet = set()\n        l = 0\n        res = 0\n\n        for r in range(len(s)):\n            while s[r] in charSet:\n                charSet.remove(s[l])\n                l += 1\n            charSet.add(s[r])\n            res = max(res, r - l + 1)\n        return res\n","javascript":"class Solution {\n    /**\n     * @param {string} s\n     * @return {number}\n     */\n    lengthOfLongestSubstring(s) {\n        const charSet = new Set();\n        let l = 0;\n        let res = 0;\n\n        for (let r = 0; r < s.length; r++) {\n            while (charSet.has(s[r])) {\n                charSet.delete(s[l]);\n                l++;\n            }\n            charSet.add(s[r]);\n            res = Math.max(res, r - l + 1);\n        }\n        return res;\n    }\n}\n","cpp":"class Solution {\npublic:\n    int lengthOfLongestSubstring(string s) {\n        unordered_set<char> charSet;\n        int l = 0;\n        int res = 0;\n\n        for (int r = 0; r < s.size(); r++) {\n            while (charSet.find(s[r]) != charSet.end()) {\n                charSet.erase(s[l]);\n                l++;\n            }\n            charSet.insert(s[r]);\n            res = max(res, r - l + 1);\n        }\n        return res;\n    }\n};\n","java":"class Solution {\n    public int lengthOfLongestSubstring(String s) {\n        HashSet<Character> charSet = new HashSet<>();\n        int l = 0;\n        int res = 0;\n\n        for (int r = 0; r < s.length(); r++) {\n            while (charSet.contains(s.charAt(r))) {\n                charSet.remove(s.charAt(l));\n                l++;\n            }\n            charSet.add(s.charAt(r));\n            res = Math.max(res, r - l + 1);\n        }\n        return res;\n    }\n}\n","csharp":"public class Solution {\n    public int LengthOfLongestSubstring(string s) {\n        HashSet<char> charSet = new HashSet<char>();\n        int l = 0;\n        int res = 0;\n\n        for (int r = 0; r < s.Length; r++) {\n            while (charSet.Contains(s[r])) {\n                charSet.Remove(s[l]);\n                l++;\n            }\n            charSet.Add(s[r]);\n            res = Math.Max(res, r - l + 1);\n        }\n        return res;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def lengthOfLongestSubstring(self, s: str) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {string} s\n     * @return {number}\n     */\n    lengthOfLongestSubstring(s) {}\n}\n","cpp":"class Solution {\npublic:\n    int lengthOfLongestSubstring(string s) {\n        \n    }\n};\n","java":"class Solution {\n    public int lengthOfLongestSubstring(String s) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int LengthOfLongestSubstring(string s) {\n\n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/wiGpQwVHdE0","embedding":[0.035887167,-0.004410291,0.02211698,-0.03254039,-0.010030261,0.03395168,-0.0031930506,0.009788326,-0.0068296506,0.049596872,0.0052066636,-0.03548394,-0.057379145,-0.03364926,0.019929474,0.041129112,-0.003291337,-0.012318573,-0.012550428,0.032802485,0.0010282279,0.011229861,-0.028225861,0.0013268675,0.06415335,0.014324625,-0.028185539,0.053064622,0.007741951,-0.015665354,-0.022782303,-0.009909294,0.011653249,-0.0021761635,-0.027197635,0.020665362,0.011552442,-0.038084753,-0.00007517183,-0.035725877,-0.03911298,-0.03455652,-0.045685574,-0.048629127,0.024979888,-0.018860925,-0.003291337,0.03366942,0.021794397,-0.0051184576,-0.0209073,0.018004067,-0.040342823,-0.007913322,-0.021330686,-0.02062504,0.010393166,0.021612946,0.03850814,-0.026612956,0.0120564755,-0.017540358,-0.008230863,0.0015839245,-0.026169406,0.006350819,0.011421394,0.041209757,-0.0430646,-0.021310525,-0.043790407,-0.013215751,-0.024375048,-0.038568623,-0.04653235,0.011239941,0.048104934,0.022459721,0.07274208,-0.013407284,-0.04286299,-0.056048498,0.045403317,-0.0017174933,0.00864921,0.073266275,-0.040705726,0.010342762,-0.03393152,-0.03288313,-0.035544425,-0.0324799,0.030121027,-0.027641183,0.012610912,-0.016169386,0.066653356,-0.0057560597,0.013548414,0.0064516254,0.009959697,-0.004218758,0.030121027,-0.0054385187,-0.05455656,0.0012689037,0.04439525,-0.01015123,-0.032500062,-0.02409279,0.0036945636,-0.0031451674,0.026330696,-0.028770218,0.036592815,-0.028064571,-0.039919432,-0.017248018,0.030262155,0.01985891,0.042983957,0.0430646,0.038387172,-0.037258137,-0.025282308,0.029133122,-0.015705677,-0.05383075,0.023850853,-0.0029838767,0.04560493,-0.0685082,-0.009904253,-0.009138123,-0.017711729,-0.036411364,-0.03368958,-0.023568595,-0.006320577,0.037661366,-0.035080716,0.021451656,-0.020987945,-0.006305456,-0.0073740063,0.0076008216,0.0045867027,0.011794378,-0.033750065,0.032943614,0.018729875,-0.053104945,0.021451656,0.07197595,0.019344795,-0.06270174,0.008125016,-0.0016028257,0.008891147,0.016885113,0.04560493,-0.026088761,-0.01712705,0.036209747,-0.0076159425,-0.013155268,0.02395166,0.025443599,-0.012409299,-0.07548402,-0.0071975947,-0.06169367,0.001833421,-0.026592795,0.03627023,-0.03062506,-0.02047383,0.0027394206,-0.034919422,0.018709714,-0.015645193,0.0047656344,-0.027076665,-0.04106863,0.036713783,-0.0260686,0.015252046,-0.005836705,0.024717791,-0.007928443,0.019949635,0.049435582,0.043467827,-0.030685544,-0.03076619,0.0040801493,0.03334684,0.0071270303,0.02183472,0.01789318,-0.026572634,0.016098822,-0.014637126,-0.012701638,0.029173445,-0.011391152,-0.02848796,0.02760086,-0.03868959,-0.003243454,-0.017762132,-0.02272182,0.033104904,0.00039157082,0.028104894,0.026814569,0.034032326,0.005322591,0.015201643,-0.012086717,-0.0067943684,0.023427466,0.013840753,0.02622989,0.03532265,0.01864923,-0.026411342,0.021290364,0.029939575,-0.0015574627,0.007983887,0.009269171,-0.00090284954,-0.058911406,-0.032742,-0.03459684,-0.0059677535,0.022197625,-0.009375018,-0.052177522,0.0014276742,-0.0036366,0.04439525,0.053951718,0.008397194,-0.017258098,-0.01865931,0.03606862,-0.027036343,-0.060080763,0.0041582743,-0.0014894182,0.00060420984,-0.059233986,0.005383075,0.03729846,-0.011310506,-0.023911338,0.02546376,-0.012177443,-0.03231861,0.004274202,-0.036451686,-0.038750075,0.006199609,-0.043911375,-0.020050442,0.030887157,0.019969797,-0.0066431584,0.012177443,-0.021048428,0.010493972,-0.025040371,-0.025826665,-0.0107359085,0.012590751,-0.009894173,-0.015544386,0.0007655005,-0.05745979,0.011854862,-0.004228839,0.012610912,-0.009354857,-0.012419379,0.045524284,-0.011854862,-0.010292359,-0.020352863,-0.031391192,0.030665383,0.017469792,0.008860905,-0.008739936,-0.002998998,-0.042580727,0.025262147,0.033992004,-0.0020539355,0.0013470289,0.044475894,0.010987924,0.0013520692,-0.04939526,-0.0038281325,0.0011410053,-0.01909278,-0.026955698,0.014264141,0.030383125,-0.00348539,0.0017338744,0.044677507,-0.043225892,-0.04094766,-0.006789328,-0.0082207825,-0.033246033,-0.0072732,0.039677497,0.008971792,0.046774287,0.025504082,0.047258157,0.033125065,-0.021008106,0.040383145,0.025725856,-0.020705685,0.0069506187,0.022560528,-0.008301428,-0.0020715767,-0.05866947,0.0051184576,0.014596803,0.03258071,0.029778285,0.073266275,0.008533283,0.031290386,0.046129122,0.05044365,-0.0016658299,-0.009511108,0.013407284,-0.0042842827,0.016169386,0.013457688,0.012631074,0.009808487,-0.017328663,-0.028548444,-0.0012682737,-0.005816544,-0.0200202,0.0067086825,-0.030927481,-0.017066566,-0.00409023,0.0042137178,-0.0040070643,-0.031935547,-0.054596882,-0.005776221,-0.0046623074,0.024032306,0.03076619,0.01986899,-0.029919414,0.0040247054,0.037540395,0.029475864,-0.019818587,0.022036334,-0.029737962,0.04669364,-0.033770226,0.028387154,-0.008240944,0.06415335,-0.0071270303,-0.025746018,0.031774256,0.0035080714,-0.010176431,0.0018170399,-0.004306964,-0.05415333,-0.015413336,0.013235914,0.056129143,-0.000053868553,-0.009259091,0.0064919484,0.039354917,0.041733954,-0.0067943684,0.026955698,0.025141178,-0.019737942,0.03580652,-0.004821078,-0.025967794,-0.0076512247,-0.049032353,0.044798475,0.0003046251,0.048427515,0.06689529,0.0209073,0.007983887,0.00075857004,-0.0080292495,0.03151216,-0.025927471,0.039475884,0.02045367,-0.014979868,0.016018176,-0.057863016,0.012560508,0.01061494,0.04669364,0.0324799,0.020241976,-0.02063512,-0.015302449,0.04286299,0.017227856,0.05608882,0.04806461,-0.017358905,-0.058104955,0.06943562,-0.013719785,0.074838854,-0.038891207,-0.058306567,-0.036955718,-0.04532267,-0.0052369055,0.007867959,0.02683473,-0.031713773,0.005017651,0.046451703,0.015786322,0.03985895,0.05455656,-0.017268179,0.016481888,-0.002925913,-0.01667342,-0.010685505,0.0019808507,-0.016441565,0.031471837,0.0033770227,-0.013417365,-0.018366972,-0.036612976,-0.011844781,0.022358915,0.0029536348,-0.02969764,-0.015746,0.0026285334,-0.0024092789,0.00454386,-0.022157302,-0.021754075,0.014112931,0.0064818677,-0.00106099,-0.028266184,0.024516176,-0.052177522,-0.029395219,-0.0342541,-0.016038338,0.0065221903,0.026693601,-0.040564597,-0.05108881,0.047701705,-0.0054233978,0.01864923,-0.033084743,-0.017661326,-0.0055040433,-0.00035376835,-0.0055393255,0.013780269,-0.011653249,0.026975859,-0.035362974,-0.012641154,-0.013830672,0.009460704,-0.043427505,0.012096798,-0.031028287,0.018004067,-0.024193596,0.019485926,-0.016935518,0.0047656344,0.01394156,-0.024516176,-0.016572613,0.021572623,-0.009440543,0.003409785,-0.01091736,-0.026552472,-0.018548423,-0.0012336214,-0.004926925,-0.01470769,-0.048266225,-0.015816564,0.017167373,-0.011804459,-0.020725848,-0.027217796,0.04350815,-0.022157302,-0.0048714816,-0.0016998522,-0.03985895,0.0103528425,0.014717771,-0.019989958,0.00016160565,0.017016163,-0.0048261182,0.018397214,-0.020292379,0.013417365,0.0068750135,0.025322631,0.007474813,-0.016794387,-0.013961721,0.031129094,0.008069572,0.009259091,-0.05794366,0.005226825,0.008624009,0.011471797,-0.022318592,-0.021854881,-0.0230444,-0.0005840485,-0.0007610902,-0.034032326,0.017358905,-0.009112922,-0.05536301,0.03592749,-0.012651235,-0.028366992,0.011905265,0.02562505,0.04064524,-0.015352853,-0.0021912847,0.01623995,-0.020846816,-0.002638614,0.0059324712,0.024233919,-0.028286345,0.011381071,0.00001926549,0.020171411,0.01728834,-0.0054385187,0.004506057,-0.007051425,-0.0020375545,-0.0114516355,-0.010075625,-0.01865931,-0.006885094,-0.01607866,0.009763124,-0.027479893,0.016189547,0.05520172,0.012006072,-0.017802455,-0.015131078,-0.03199603,-0.020705685,0.025887148,-0.005141139,0.009425422,0.019627055,0.024153274,-0.0025340272,-0.0090322755,-0.0348791,0.049919453,0.03002022,-0.005846786,0.042096857,0.025443599,0.017651245,-0.000061586565,-0.028850863,0.026612956,0.01121978,-0.009894173,-0.011945588,0.01789318,0.010594779,0.022459721,-0.0040700687,0.02334682,0.029496025,0.030504093,-0.0034551478,-0.05318559,0.0071270303,0.025403276,0.027016181,-0.012782283,0.05004042,0.010287318,0.01607866,-0.0017452152,0.005027732,0.020725848,0.02030246,0.014788335,-0.0215323,0.03459684,-0.03197587,-0.020665362,-0.018750036,-0.0065927547,0.006093762,-0.015020191,-0.004906764,0.016159305,-0.012207685,-0.011502039,0.0026890174,0.061653346,-0.022237947,0.008976832,0.020121008,-0.010947602,-0.023306498,-0.0009986159,-0.008991953,0.0068447716,0.0026260132,0.020544395,-0.014828659,-0.0026587753,-0.060121085,0.03770169,-0.016572613,0.024818597,-0.03969766,0.011461716,0.00019893562,0.062217865,0.011431474,-0.027137151,-0.032943614,-0.0017968785,-0.015786322,-0.045564607,0.0060534393,0.014233899,0.0032938572,0.0057056565,-0.0032560548,-0.020252056,-0.0015171401,-0.0063709803,0.025221825,-0.021794397,-0.01576616,-0.01623995,-0.015292369,-0.043992024,-0.010342762,0.012721799,-0.033407323,0.008251024,0.042540405,0.015957693,-0.047822677,0.013588737,-0.00439265,-0.020282298,0.00014758724,-0.028225861,0.020383105,-0.025201663,-0.020846816,-0.021592785,-0.017540358,-0.018719794,0.022177463,-0.032419417,-0.0050378125,-0.027036343,-0.011139135,0.017399227,-0.022762142,0.018417375,-0.059637215,-0.036149263,-0.012500024,0.007832677,0.0143951895,-0.003288817,-0.002986397,0.02183472,0.0004593003,0.018629069,0.031471837,0.0018435016,0.021008106,-0.0029158324,0.009677438,0.0029889173,-0.029536348,-0.031572644,0.026774246,-0.032036353,-0.02062504,-0.005625011,0.022197625,-0.03868959,0.008467759,0.008860905,-0.009737923,-0.011481877,-0.0018195601,-0.03848798,-0.027842797,-0.019606894,0.0018233403,0.013316559,-0.025645211,0.028306507,0.019647216,0.048104934,0.0020236934,-0.025544405,-0.0014163335,-0.0150000295,-0.013649221,-0.012590751,0.005108377,0.044475894,0.044959765,-0.028850863,-0.0056703743,-0.018195601,0.009052437,0.004034786,-0.03441539,0.0013394684,0.027661344,-0.03473797,-0.0035811563,-0.026895214,0.002396678,0.023447627,-0.021794397,-0.021814559,-0.004536299,0.016421404,0.035665393,-0.009894173,0.017963745,0.0032963774,0.0076159425,0.052580748,-0.03697588,0.018377053,-0.023306498,-0.015836725,-0.0023450146,0.010987924,-0.013145187,0.01333672,-0.0032661355,0.008931469,-0.019596813,0.014385109,-0.019596813,0.02003028,-0.024818597,-0.042096857,-0.01591737,0.002998998,0.02425408,-0.030504093,0.0060282378,-0.0026738965,0.02320569,-0.033104904,-0.000682335,0.030584738,0.015463741,-0.03578636,0.0023412344,0.052580748,0.027963765,0.007908282,0.029173445,-0.034536358,0.0067590857,-0.000058633243,-0.012852848,0.04669364,-0.031754095,0.037842818,0.031915385,0.012187524,-0.0050201714,-0.027399248,0.035967812,0.048104934,0.03971782,0.0007774713,0.017056486,-0.041169435,0.029012155,-0.027540376,0.044032346,-0.032197643,-0.05169365,0.007792354,0.025141178,0.0012689037,-0.024516176,0.037197653,-0.042500082,0.0010162571,0.0030519213,-0.024052467,-0.0070111025,-0.015715757,0.020524234,0.017540358,0.055524305,-0.0007699108,-0.028588766,0.023588756,-0.0096522365,-0.01893149,-0.025241986,-0.027177474,0.01561495,-0.0093498165,0.0512501,-0.06004044,-0.0069606993,0.048790418,0.057338823,0.023125045,-0.030725867,0.015252046,0.018276246,0.00056325714,-0.00083102484,0.0050151306,0.017762132,-0.00013900292,-0.018024229,-0.024274241,0.032197643,0.013306478,-0.027862959,0.022399237,0.03516136,0.028528282,0.003457668,0.027580699,-0.028387154,-0.005982875,0.025947632,-0.014455673,0.018689552,0.020050442,-0.0066481987,0.06463722,0.00064075226,0.02364924,0.0066784406,-0.018195601,-0.0042792424,-0.010050423,0.03594765,-0.021895204,-0.009213728,-0.0010906019,-0.008452638,-0.019506088,-0.037560556,0.0063911416,0.032762162,0.009687519,0.020000039,0.008145178,-0.01954641,0.02711699,0.0118649425,0.030927481,-0.016623016,-0.018538343,-0.03923395,0.03489926,-0.031391192,0.011633088,0.043951698,0.01684479,0.024677468,0.028588766,-0.012782283,0.030362964,-0.011612926,-0.022318592,-0.009480866,-0.018125035,-0.012641154,0.03627023,0.012741961,-0.016915357,-0.00894659,-0.026088761,-0.041572664,-0.0049823686,-0.030262155,-0.0038482938,-0.078911446,0.018397214,0.017026244,0.03907266,-0.041129112,-0.047379125,-0.026129084,-0.012389137,-0.008724815,-0.02288311,-0.004052427,0.017752051,-0.011764136,0.032943614,0.0065373112,0.014838739,0.012147201,-0.006683481,0.0070766266,-0.000682335,0.0019619495,0.010342762,-0.042782344,-0.012933494,-0.011491958,0.0016859912,0.030060543,-0.019677458,-0.009868971,0.038992014,0.035221845,-0.0026738965,-0.010342762,0.002060236,0.00083921535,-0.00025847455,0.02743957,0.016189547,0.012217766,-0.034617003,-0.007973806,0.039475884,0.026653279,0.03227829,-0.015292369,0.014445593,-0.004291843,-0.01790326,-0.034677487,0.00046119042,0.038266204,0.020201653,0.01893149,0.0069758203,-0.023830691,0.026693601,0.0068094893,-0.009465745,-0.048588805,-0.033246033,0.036915395,-0.053951718,0.026875053,-0.017933503,-0.054677527,-0.0040574674,0.023145206,0.034637164,0.0037323663,-0.022056496,-0.016139144,0.014868981,-0.010393166,0.020564556,0.0016935518,-0.01075607,0.015544386,-0.016179467,0.017106889,0.0033089784,0.057016242,-0.0427017,0.037379105,-0.0370162,-0.011028248,0.0069506187,0.05092752,-0.02031254,0.023528272,0.040262178,0.026854891,-0.017993987,0.007404248,0.015967773,0.02469763,0.020685524,-0.031088771,-0.040806532,-0.0012317313,-0.01758068,-0.017248018,0.009969777,0.01136091,-0.014112931,0.044354927,-0.0012600832,0.016925437,0.00530747,0.0051915427,0.033266194,0.0011025728,-0.001834681,0.008064532,0.006728844,0.0125806695,-0.007867959,-0.008845784,-0.0111492155,-0.016209709,0.03713717,-0.008059491,-0.02848796,0.024032306,0.008679452,0.021854881,-0.002941034,0.040423468,0.00037644984,-0.0015184002,-0.0427017,0.008402234,0.018729875,-0.0077671525,-0.006471787,-0.008775219,-0.013004058,-0.020604879,0.013175429,0.0078225965,-0.059838828,0.0049143243,-0.022621011,-0.011330668,0.0049344855,0.018246004,-0.0013659301,0.029879091,-0.02651215,-0.005866947,-0.003560995,-0.01833673,-0.019062538,0.016915357,0.015655274,0.036209747,0.016875032,-0.026814569,-0.025282308,-0.025221825,-0.044959765,-0.00082283426,-0.0023752567,-0.044354927,0.029959736,0.0109576825,-0.0351412,0.032237966,0.006113923,-0.02546376,0.013256075,-0.0005695576,-0.009007074,-0.022016173,0.003853334,0.012217766,0.012046395,0.020967783,-0.03393152,-0.0060282378,-0.009359897,0.009808487,-0.012237927,-0.028709734,0.0069657397,-0.037217814,-0.043992024,-0.020393185,-0.027701667,0.0017023723,0.012409299,-0.016028257,-0.03213716,0.01121978,-0.008447598,0.015413336,0.029375058,-0.024354886,0.03046377,0.041209757,0.04681461,0.051451713,0.05608882,-0.01167341,0.0044128112,-0.039455723,0.024354886,-0.005947592,0.010120988,0.01273188,0.0008826882,0.0023298936,0.0064213835,-0.022217786,0.0033114986,-0.008593767,0.04169363,-0.0019669898,0.018215762,0.008613928,0.005196583,-0.004974808,-0.022762142,0.013387123,-0.01030748,-0.02804441,0.012086717,-0.01695568,0.03610894,-0.00021720683,-0.0087298555,0.025221825,0.004488416,0.007953645,-0.0127722025,0.0022946114,-0.03183474,-0.015625032,-0.00030415258,0.001880044,0.02622989,-0.033770226,0.03729846,-0.018417375,0.053145267,0.014737932,-0.028266184,-0.00047347625,-0.0006448475,0.005181462,0.01608874,-0.03407265,-0.06995981,0.014123011,-0.018528262,0.0016456685,0.008452638,0.014294383,-0.04229847,-0.020725848,-0.00031565083,-0.010322601,0.0053377124,-0.018739955,0.020181492,0.020584717,-0.034375068,-0.04681461,0.015937531,-0.045806542,-0.0033240994,-0.009863931,0.015574628,-0.019758103,0.011290344,0.001425154,0.012096798,-0.0215323,0.0033215792,-0.058790438,-0.0011605365,0.0043321657,-0.010665343,-0.033568613,-0.0109576825,0.0031048448,-0.014324625,-0.0024029785,0.050524294,0.032096837,-0.015685515,-0.0004032266,0.021149235,0.024133112,-0.03395168,0.0036265193,-0.014052447,0.024798436,0.038266204,-0.016250031,-0.028729895,0.036189586,-0.02272182,0.003881056,-0.038770236,0.00848792,0.020131089,-0.03806459,0.022358915,-0.021653268,-0.026411342,0.0030569616,0.010564537,0.014778255,-0.000773061,0.00031124052,-0.015715757,-0.032822646,-0.0036895233,-0.033770226,-0.024717791,0.033629097,-0.02834683,-0.018266166,-0.011552442,0.00908268,0.020191573,-0.018719794,0.030000059,0.03806459,0.01501011,0.0260686,-0.0103528425,0.00082976476,0.023770208,0.03215732,0.010534295,-0.021854881,0.025161339,0.0130746225,0.008150218,-0.020413347,0.030604899,-0.023568595,-0.0011107633,0.01954641,0.024294402,0.006854852,0.012318573,0.009788326,-0.010977844,-0.020574637,-0.022459721,-0.024536338,-0.01061494,-0.019052457,0.026774246,-0.010060504,0.050806552,0.027560538,0.009072598,0.010967763,-0.016028257,0.004740433,0.01561495,0.0023576156,-0.0073740063,0.004503537,-0.016643178,-0.035080716,0.024435531,-0.012308492,-0.028266184,0.01713713,-0.0081855,0.030887157,0.005108377,-0.013699624,0.017358905,-0.017933503,0.033709742,-0.010877037,0.01635084,-0.025141178,-0.040806532,-0.01832665,-0.0015662833,-0.002998998,-0.0073941676,-0.016209709,0.009097801,0.02137101,-0.039354917,-0.0071421512,-0.04185492,-0.008724815,-0.025967794,0.0029007113,-0.027802475,0.021169396,-0.021592785,-0.001880044,-0.03528233,-0.015705677,0.02395166,-0.0027091787,-0.019667378,0.017691568,-0.009475825,-0.012298412,-0.03685491,0.03215732,-0.013840753,0.01242946,-0.018871006,-0.009213728,-0.015534305,-0.022157302,-0.022822626,-0.006431464,0.006018157,-0.03820572,-0.023024239,0.0006640638,0.016300436,-0.03391136,-0.026955698,-0.038125075,-0.043306537,-0.026491988,-0.027056504,-0.020100847,-0.02076617,-0.0024004583,0.00757562,0.042379115,-0.0017300941,-0.034052487,-0.010947602,0.018901248,0.030746028,0.030423447,0.033447646,-0.009153244,0.015998015,0.04899203,0.0056703743,-0.009974818,0.02651215,-0.0023676963,-0.0042666416,0.049193647,0.011139135,0.033306517,-0.0006684741,0.030040381,0.011794378,0.005443559,0.006018157,0.00073777867,0.02381053,-0.0032636153,0.026471827,0.01182462,-0.020604879,-0.022459721,-0.030241994,-0.031189578,-0.029274251,-0.05092752,0.030967804,-0.008150218,-0.034314584,-0.0058215843,0.0039465805,-0.022862948,-0.026028277,0.0010962724,0.0041960767,0.009485906,-0.025423437,0.019979877,-0.029536348,-0.043750085,-0.056169465,-0.025080694,0.005257067,-0.001257563,0.03985895,0.026149245,-0.0058568665,0.027822636,-0.019919394,0.02651215,0.00049773284,-0.016633097,0.0055746078,0.021250041,0.040564597,0.007832677,-0.009773205,-0.04127024,0.011542361,0.015362933,-0.020221815,-0.004906764,0.039052498,0.040201694,0.016723823,0.008553444,0.009264131,0.0069606993,0.010877037,0.009359897,0.05834689,0.01652221,0.004793356,0.010705667,0.0020854375,-0.046935577,0.047419447,-0.0007812515,-0.0016318077,-0.027782314,0.03635088,-0.055242043,0.0050226916,-0.0041658347,0.004425412,0.015685515,0.011905265,0.003921379,0.028850863,-0.003077123,0.015120997,0.012903251,0.011844781,0.05697592,0.018024229,-0.001348289,-0.017832696,0.0055191643,0.023629079,0.02274198,0.008266145,0.0035257125,0.017177453,-0.022802465,-0.03423394,0.015403256,0.0056300513,-0.008049411,0.030544415,0.016562533,0.010826634,0.0023702164,0.051774297,-0.010120988,-0.030000059,-0.03822588,0.022358915,-0.01986899,0.010604859,0.04487912,0.020181492,0.0114516355,-0.02562505,-0.007757072,0.025524244,-0.0028402274,-0.008734896,-0.0035660353,0.016612936,0.039032336,0.024072628,0.0047832755,0.029496025,-0.007520176,0.026854891,0.024576662,0.022036334,-0.040403306,-0.023588756,-0.016189547,0.00908772,0.017036324,0.03348797,0.008986913,0.0116431685,0.042258147]},{"id":"longest-repeating-substring-with-replacement","name":"Longest Repeating Substring With Replacement","description":"You are given a string `s` consisting of only uppercase english characters and an integer `k`. You can choose up to `k` characters of the string and replace them with any other uppercase English character.\n\nAfter performing at most `k` replacements, return the length of the longest substring which contains only one distinct character.\n\n**Example 1:**\n\n```java\nInput: s = \"XYYX\", k = 2\n\nOutput: 4\n```\n\nExplanation: Either replace the 'X's with 'Y's, or replace the 'Y's with 'X's.\n\n**Example 2:**\n\n```java\nInput: s = \"AAABABB\", k = 1\n\nOutput: 5\n```\n\n**Constraints:**\n* `1 <= s.length <= 1000`\n* `0 <= k <= s.length`\n","difficulty":"Medium","concepts":["Sliding Window Fixed Size","Sliding Window Variable Size"],"solutions":{"python":"class Solution:\n    def characterReplacement(self, s: str, k: int) -> int:\n        count = {}\n        \n        l = 0\n        maxf = 0\n        for r in range(len(s)):\n            count[s[r]] = 1 + count.get(s[r], 0)\n            maxf = max(maxf, count[s[r]])\n\n            if (r - l + 1) - maxf > k:\n                count[s[l]] -= 1\n                l += 1\n\n        return (r - l + 1)\n","javascript":"class Solution {\n    /**\n     * @param {string} s\n     * @param {number} k\n     * @return {number}\n     */\n    characterReplacement(s, k) {\n        let res = 0;\n        const count = new Map();\n        let l = 0;\n\n        for (let r = 0; r < s.length; r++) {\n            let len = r - l + 1;\n            count.set(s[r], 1 + (count.get(s[r]) || 0));\n\n            if (len - Math.max(...count.values()) > k) {\n                count.set(s[l], count.get(s[l]) - 1);\n                l++;\n            }\n            len = r - l + 1;\n            res = Math.max(res, len);\n        }\n\n        return res;\n    }\n}\n","cpp":"class Solution {\npublic:\n    int characterReplacement(string s, int k) {\n        vector<int> count(26);\n        int maxCount = 0;\n        \n        int i = 0;\n        int j = 0;\n        \n        int result = 0;\n        \n        while (j < s.size()) {\n            count[s[j] - 'A']++;\n            maxCount = max(maxCount, count[s[j] - 'A']);\n            if (j - i + 1 - maxCount > k) {\n                count[s[i] - 'A']--;\n                i++;\n            }\n            result = max(result, j - i + 1);\n            j++;\n        }\n        \n        return result;\n    }\n};\n","java":"class Solution {\n    public int characterReplacement(String s, int k) {\n        int[] arr = new int[26];\n        \n        int ans = 0;\n        int max = 0;\n        int i = 0;\n        for (int j = 0; j < s.length(); j++) {\n            arr[s.charAt(j) - 'A']++;\n            max = Math.max(max, arr[s.charAt(j) - 'A']);\n\n            if (j - i + 1 - max > k) {\n                arr[s.charAt(i) - 'A']--;\n                i++;\n            }\n            ans = Math.max(ans, j - i + 1);\n        }\n        return ans;\n    }\n}\n","csharp":"public class Solution {\n    public int CharacterReplacement(string s, int k) {\n        int left = 0, maxLength = 0;\n        int mostFrequentLetterCount = 0; \n        int[] charCounts = new int[26]; \n\n        for (int right = 0; right < s.Length; right++) {\n            charCounts[s[right] - 'A']++;\n            mostFrequentLetterCount = Math.Max(mostFrequentLetterCount, charCounts[s[right] - 'A']);\n\n            int lettersToChange = (right - left + 1) - mostFrequentLetterCount;\n            if (lettersToChange > k) { \n                charCounts[s[left] - 'A']--;\n                left++;\n            }\n\n            maxLength = Math.Max(maxLength, (right - left + 1));\n        }\n        return maxLength;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def characterReplacement(self, s: str, k: int) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {string} s\n     * @param {number} k\n     * @return {number}\n     */\n    characterReplacement(s, k) {}\n}\n","cpp":"class Solution {\npublic:\n    int characterReplacement(string s, int k) {\n        \n    }\n};\n","java":"class Solution {\n    public int characterReplacement(String s, int k) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int CharacterReplacement(string s, int k) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/gqXU1UyA8pk","embedding":[0.034718145,-0.0049102674,0.008038079,-0.042574573,-0.020833157,0.008696566,-0.02372823,0.036875255,0.0077939853,0.04175714,0.0015553911,-0.054086737,-0.041348424,-0.0040729675,0.044958748,0.0040530995,-0.019834075,0.0041950145,-0.012363656,0.042165857,-0.008832805,-0.020889923,0.0055914605,0.001265884,0.04668444,0.038850717,-0.013555744,0.015247374,-0.00039310523,-0.03074452,0.0044192406,-0.0110182995,-0.008753332,-0.030903464,-0.0043340917,0.0046860413,-0.03181172,0.018857697,-0.009707003,-0.046639025,-0.02761103,-0.033060577,-0.030108739,-0.014793245,-0.015758269,-0.009814858,-0.028360343,0.03712503,-0.036716312,0.0061193854,-0.02359199,0.0138395745,-0.025794515,-0.035490163,-0.024977082,-0.010325753,-0.036375716,-0.004842148,0.048319302,0.020685567,0.04457274,-0.012874551,-0.008333263,-0.016303223,-0.04634384,0.0031959312,-0.008367322,0.03939567,-0.054222975,-0.016076159,-0.041870672,0.018119738,-0.027656443,-0.0012211807,-0.05794683,0.019550243,0.006357803,0.015599323,0.06934547,0.0012914287,-0.054041326,-0.048183065,0.04355095,0.0074136523,-0.014838658,0.0029404839,-0.015190608,0.0032839188,-0.03621677,-0.086738594,-0.032606445,-0.017586136,0.011137509,-0.013033496,0.03360553,0.013203794,0.028610114,0.0057844655,-0.020049786,0.015224667,-0.0033094634,-0.0047995737,0.04361907,0.006125062,-0.025431212,0.038555533,-0.03653466,0.021241874,-0.01600804,-0.018176505,-0.03776081,0.005886644,-0.038737185,-0.025090614,0.032447502,-0.021275934,-0.057992246,-0.03380989,-0.0008557489,-0.0313803,-0.014691066,0.011818701,0.0419615,-0.04234751,-0.08651153,0.02454566,-0.010762852,-0.035739936,-0.0026694257,-0.01826733,0.022002539,-0.06562161,-0.03437755,-0.015678797,-0.015633384,-0.039577324,0.00049386505,0.012431775,-0.0068743746,0.06512207,-0.04745646,-0.0061307386,-0.080244556,-0.013748749,-0.021366758,0.00299725,-0.024522955,0.041598197,-0.027179608,0.022910796,0.042438336,-0.027656443,0.028383048,0.04234751,-0.02235449,-0.043709897,-0.0025303487,-0.0076180105,0.032175023,0.037011497,-0.012715606,-0.014418589,-0.0056368737,0.010274664,-0.002372823,-0.04545829,0.02299027,0.0048535015,-0.010870707,-0.00012488541,0.031266768,-0.06298766,-0.0081686415,0.008651153,0.0138963405,-0.030154152,-0.009184754,-0.008100522,-0.061034907,-0.0066246036,-0.029495664,-0.014089345,-0.0035791025,0.0271569,0.05980876,-0.040780764,0.006601897,-0.04566265,0.006607574,0.011165892,0.052179396,-0.017960792,0.02876906,-0.055903252,-0.0046690116,0.0062613008,0.052133985,-0.056856923,0.009831888,0.023251394,-0.030812638,0.007566921,-0.038782597,-0.02404612,0.048955083,-0.034082364,-0.053269304,0.0077599254,-0.008934984,-0.026770892,0.020333616,-0.0051997746,0.01706389,-0.0029830583,0.002263548,0.038351174,0.04239292,-0.017835908,-0.04877343,0.014146112,-0.058037657,0.06957253,-0.012465835,0.029495664,0.023841761,0.02161653,0.004365313,-0.027066076,0.021877654,-0.015769621,0.0026396236,0.0010239185,0.023228686,-0.04246104,-0.037329387,-0.05286059,-0.013340033,0.007657747,-0.04087159,-0.011432692,-0.013907694,-0.0025275105,0.031539243,0.052133985,0.012511248,0.0051543615,-0.024136944,0.05363261,-0.053133067,-0.0008621351,0.02175277,-0.017007124,-0.011529194,-0.011023976,-0.016496228,0.040394753,0.03939567,0.0016632467,0.036398422,0.010263311,-0.05753812,-0.012749665,-0.0023004462,-0.05068077,-0.032492913,-0.04146196,-0.024454834,0.037215855,0.033650942,-0.017041182,0.00075569865,-0.021037515,0.008424089,-0.042529162,-0.025839927,-0.029041536,0.03932755,0.014725125,-0.018846344,-0.030244976,-0.08855511,0.014464002,0.03124406,-0.04475439,-0.002839724,0.015338199,0.040054157,-0.0070446725,-0.025022496,-0.04841013,-0.029722728,-0.0062045343,-0.008583034,0.04700233,-0.031584658,0.032992456,-0.07038996,0.025045203,0.00023965936,-0.024908964,0.023887174,0.035467457,-0.015860448,0.00899175,-0.027588323,-0.017290954,0.048591778,-0.01530414,-0.009150695,0.007124145,0.027383965,-0.0073966226,0.013975813,0.08269685,-0.0018931493,-0.061171148,0.03935026,-0.009281257,0.01664382,-0.011795995,-0.0004296484,-0.01259072,0.054994997,0.015792329,0.010178161,0.02620323,-0.013135675,0.022320429,0.06957253,-0.027202314,-0.012761019,-0.013703336,-0.0031845781,0.0060910024,-0.089372545,0.044663567,0.03321952,0.019402653,0.011830055,0.0511349,0.007754249,0.018641986,0.035240393,0.0005531147,-0.0019697836,0.009814858,0.014475355,-0.022422608,0.028087866,0.0073398566,0.031970665,0.016825471,0.018800931,-0.022717793,-0.004935812,0.01702983,-0.032765392,0.028973415,0.0061875046,-0.002709162,0.006051266,0.022729145,-0.039372966,-0.06257895,-0.042324804,0.022399902,-0.0055942987,-0.03253833,-0.003931052,0.034014247,-0.045049574,0.008583034,0.0034343489,-0.0018747004,0.003099429,-0.0398498,-0.022025246,0.047728933,0.0030965905,0.020765038,-0.015167901,0.05018123,-0.017676963,-0.0120344125,0.049182147,-0.0061534448,0.017722376,-0.001224019,-0.04668444,-0.024068825,0.0055545624,-0.0054949583,0.04750187,0.0045185816,0.007873458,0.013691982,-0.009837565,0.085739516,-0.017120656,0.033446584,0.006732459,0.0069879065,0.021026162,-0.0031703867,-0.045639943,-0.023364926,-0.03996333,0.019686483,0.025998872,0.061988577,0.046593614,0.0075782742,0.02260426,-0.030426629,0.009133665,0.008662507,0.0031221353,0.0038600946,0.009349376,-0.0078053386,-0.027111487,-0.053859673,-0.0054410305,-0.024591073,0.043914255,0.019516185,-0.024886258,-0.0075158314,0.035603695,0.02652112,-0.00059249613,0.028042452,0.007975637,-0.0075158314,0.0032612123,0.02372823,-0.0017242702,0.050272055,0.00074789335,-0.026861718,-0.04641196,-0.04171173,0.020265497,0.021673296,-0.017858615,0.009570764,0.003388936,0.033333052,-0.005764597,0.040894296,0.008299204,-0.010217898,-0.0046037305,0.013453566,0.006255624,-0.0059661167,0.023319513,0.0012169232,0.057810593,0.016780058,-0.004413564,0.0047342926,-0.010564171,-0.012931317,0.011069389,0.01059823,-0.009695649,-0.0043539596,0.019459419,-0.021468937,0.0029745435,0.018948523,0.009150695,0.040712643,-0.017427191,0.0048733694,0.014339116,0.014588887,-0.055767015,0.007532861,-0.033946127,-0.0011495135,0.0049840636,0.010263311,-0.023614697,0.0033747444,0.014759186,-0.030017912,-0.00012284538,-0.017972147,-0.001768264,-0.0031732249,0.019720543,-0.008929308,0.020640153,-0.0016064806,0.07152528,-0.016530288,-0.014838658,-0.031857133,-0.04023581,-0.015349553,-0.015474438,0.037102323,-0.011966294,0.0037919753,0.045253932,-0.02563557,-0.0016518935,0.033037867,-0.018380862,-0.042506453,0.010541464,-0.015644737,0.01985678,-0.016110219,-0.020799099,-0.031993374,-0.046820678,0.028269516,-0.017075242,-0.030721812,-0.016768705,0.028133279,-0.0073001203,-0.046775263,-0.018471688,-0.06471335,-0.028042452,-0.009088253,0.015497144,-0.013453566,0.008390029,0.036943376,-0.018414922,-0.002866688,0.026566533,0.004981225,0.04093971,0.018539807,0.010246281,-0.026430296,0.018982584,0.009536704,-0.006045589,0.0048279567,0.033060577,0.024068825,0.000012694762,-0.042256683,0.019368593,0.016950356,-0.00094444596,-0.04028122,-0.035240393,-0.028110571,0.010303047,0.023081096,-0.006908434,-0.0030596927,0.011256717,-0.03219773,0.02824681,-0.016246457,-0.006039913,-0.020344969,0.018857697,0.028292224,0.006658663,-0.031153234,0.0125226015,-0.0067381356,0.0058412314,-0.042960584,0.045821592,-0.021627882,0.016246457,0.019164234,0.009020133,0.017858615,-0.008145935,0.02129864,-0.017483957,-0.009184754,-0.020129258,-0.02041309,-0.01600804,-0.011506488,-0.028996123,-0.0032129611,-0.009570764,0.038986955,0.0726606,0.0030937523,0.00061910524,0.004271649,-0.042256683,-0.026566533,0.016552994,-0.018607927,-0.0044249175,0.003715341,0.021082928,-0.0015113973,-0.027815389,-0.006039913,0.036375716,0.00663028,0.028928004,0.025136027,0.030858051,-0.027338553,-0.026066992,-0.0011246783,0.03194796,-0.0032016078,-0.016587054,-0.007964283,0.009150695,-0.0041978527,0.0011126155,0.016904945,0.013850927,0.042506453,0.018653339,0.024159651,-0.041598197,0.024795432,0.015054369,0.011818701,-0.01456618,0.040417463,-0.022547495,-0.0064315987,-0.017892674,0.000108476466,0.043755308,0.008634123,0.009542381,-0.009207461,0.03265186,-0.034014247,0.013862281,-0.0151565485,0.006108032,0.024432128,0.008424089,0.017268246,0.03437755,-0.023035683,0.009389113,-0.0004945746,0.02436401,-0.032175023,0.024886258,0.011909528,-0.007214971,-0.014486708,0.01600804,-0.022479374,0.025226854,-0.002337344,0.02792892,-0.033991538,0.01202306,-0.027088782,0.009809182,-0.01840357,0.02161653,-0.024182357,-0.01964107,0.040417463,0.040213104,0.005540371,-0.039736267,-0.0046065687,-0.002188333,-0.0012949766,-0.041053243,0.013124322,0.015338199,-0.030517453,-0.01734772,0.019686483,0.008333263,0.0052650557,-0.008350293,0.0003017473,-0.014838658,0.0017029829,-0.018074326,-0.024750018,-0.03360553,-0.012227417,0.035217687,-0.007680453,-0.0021088605,0.024386715,0.0018349641,-0.048909668,-0.0015468762,0.008986074,0.0003668509,0.023319513,-0.026929837,-0.032243144,0.01364657,0.002140082,-0.030199563,-0.01195494,0.021684648,0.0071752346,-0.015951274,0.019379945,-0.03780622,0.02059474,0.001768264,0.019981666,0.0063975393,-0.013305973,-0.03328764,-0.0051515233,0.0008479436,-0.008934984,-0.03378718,0.0059093507,0.008566004,0.004904591,0.020787746,-0.0037550773,0.015349553,0.018812284,-0.0036926346,-0.0038941542,-0.0010771367,-0.019209648,-0.041916087,0.025204148,-0.024727313,-0.027361259,-0.038669065,-0.0022876738,0.01565609,0.032947045,-0.019266414,0.043687187,-0.03074452,0.016394049,-0.038283058,-0.010865031,-0.031471126,0.0065962207,0.023501165,-0.03029039,0.023137862,0.014520768,0.015769621,-0.028519288,-0.040417463,0.004461815,0.014464002,-0.007373916,0.016462168,-0.00074505503,0.058764264,0.026475707,-0.015247374,0.022013893,0.004183661,0.039486498,0.033355758,-0.02196848,0.0063748327,0.01036549,-0.019311827,-0.046775263,-0.03494521,0.015519851,-0.0043993727,0.005074889,-0.02404612,0.00547509,-0.014100699,-0.014838658,-0.0059945,0.015111135,-0.0021116987,-0.008350293,0.048046824,-0.017518017,0.020799099,-0.03092617,-0.009741062,-0.021673296,-0.015474438,0.011739229,0.04207503,-0.056856923,-0.013305973,-0.012193358,0.025067909,0.036375716,0.027111487,-0.0051884213,0.011495135,-0.021775475,-0.017676963,0.020935336,-0.009207461,0.010899091,0.010785558,0.034650028,-0.045117695,-0.0017668448,0.0024522955,-0.020708272,-0.058446374,0.03437755,0.04598054,0.012647486,0.0005062826,-0.0012467254,-0.02352387,0.00601153,0.0058128485,0.016552994,0.0589005,-0.019800015,-0.018448982,0.019720543,0.0094572315,-0.00042432657,0.003360553,0.044300262,0.021026162,0.05790142,-0.004183661,0.00032392156,-0.023240041,0.03928214,-0.005304792,0.019027997,-0.01738178,-0.044027787,0.0040559378,0.022797264,-0.00017384617,-0.037965167,0.057719767,-0.024477541,-0.0120344125,0.014009872,0.028678233,-0.025204148,0.006823285,0.0060172062,0.0039707883,0.038442,-0.029018829,0.011427015,0.044481914,0.0026892938,-0.005574431,-0.029881673,-0.03996333,0.040712643,-0.021162402,0.025090614,-0.051952332,-0.034036953,0.056856923,0.011807349,0.0023671463,-0.030267684,0.037011497,-0.009650237,0.043596365,0.019709188,0.0023614697,-0.02817869,-0.0027687664,-0.005327498,-0.015054369,0.04872802,0.024477541,-0.049772516,0.023115154,0.03321952,-0.025522038,-0.018119738,0.0038090053,-0.026362175,0.029314013,0.006942494,-0.0025090615,-0.011358896,0.020606093,-0.043914255,0.056766097,0.00031097178,0.011546224,-0.0016788574,0.006851668,0.014191524,-0.010734469,0.04450462,-0.0028170175,0.0048847226,-0.038146816,0.028042452,-0.012397716,-0.036262184,-0.0037494008,0.013748749,0.040258516,-0.0093437,-0.01593992,-0.008049432,0.043891545,0.01918694,0.003323655,-0.007288767,0.04450462,-0.019652423,0.04030393,0.018800931,0.004793897,0.055903252,-0.010405226,0.034990624,0.0064372756,0.011784642,-0.017904026,-0.011131831,-0.025294973,-0.023682816,-0.011103448,0.0056482265,0.029654609,-0.021468937,-0.018199211,-0.0061534448,-0.046071365,-0.0051969364,0.015962627,-0.020151965,-0.0014262482,-0.022195544,0.0063975393,0.031720895,0.017234188,-0.004748484,-0.027270433,-0.03935026,-0.034650028,0.013351386,-0.0007755668,0.036443833,-0.0017413,0.010972886,0.018993936,-0.018539807,-0.0012495638,0.027974334,0.014305057,0.03903237,-0.005892321,-0.022320429,0.0110750655,-0.07565785,0.006386186,0.030880757,-0.014974897,0.0401904,-0.040008746,-0.00869089,0.0103598125,0.020265497,0.032175023,0.009820535,-0.02196848,0.011739229,-0.012057119,0.048183065,-0.007833721,-0.0056652566,0.0018420599,0.0071468516,-0.0022734823,0.046911504,0.040213104,-0.019311827,0.00894066,0.011182921,-0.014532121,-0.0050039315,0.0065791905,0.012011706,-0.012851845,0.01734772,0.00057724025,-0.033378467,0.04745646,0.0053587197,-0.0101157185,-0.03462732,-0.011109125,-0.00058965787,-0.0034144807,0.0071752346,-0.01918694,0.003221476,0.01036549,0.003082399,0.041212186,-0.0008032403,-0.0018165151,-0.031925254,-0.005529018,-0.03653466,-0.011126155,-0.00043106754,-0.008202701,0.028610114,-0.025771808,-0.008350293,0.004768352,0.0044107256,-0.012159298,0.029949794,-0.037942458,-0.0071638813,0.008282173,0.031334884,-0.020958044,0.007839398,0.03966815,0.018823639,-0.019800015,0.022059305,0.0011459655,-0.015133842,0.018789578,-0.034082364,0.025976166,0.0070333197,-0.044005077,-0.026294056,-0.008179994,0.02958649,-0.0014312152,0.040644526,-0.012216064,-0.010530111,0.018255977,-0.010263311,-0.0046604965,0.019277766,-0.030199563,0.03169819,0.0011651241,-0.013237854,-0.011682463,-0.006488365,-0.010234928,-0.013919047,0.0097013265,-0.019391298,0.008259467,-0.013623863,0.019152882,0.0064656585,-0.014055286,-0.011830055,0.005270732,0.014600241,-0.04234751,0.017290954,0.010081659,-0.0005194098,-0.012079826,-0.010774205,-0.026294056,-0.012749665,0.009616177,0.016598407,-0.038918838,-0.014691066,-0.030948875,-0.016916297,0.021559764,0.032175023,0.0011679624,-0.011461075,-0.021673296,-0.022944856,-0.031221354,0.018596573,-0.03392342,0.02531768,0.020106552,-0.00032338937,0.029086947,-0.03558099,0.0019300473,-0.0072660604,-0.021400819,0.025726395,-0.0093437,-0.027452085,0.006034236,0.019221,-0.015179254,0.037533745,0.028087866,-0.008821451,-0.007958607,-0.003891316,-0.020492561,0.007379593,0.03029039,0.032175023,0.020288203,-0.015599323,-0.016939003,-0.02243396,0.0039537586,0.0007883392,0.021480292,0.01424829,0.018051619,-0.047683522,-0.035944294,-0.05018123,0.016666526,0.032947045,0.0014532121,-0.029677317,-0.024068825,0.017370425,-0.008390029,-0.022320429,-0.007720189,-0.03462732,0.03390071,0.021434879,-0.0030965905,0.04763811,-0.0045668324,-0.0015710017,-0.011126155,-0.03237938,0.011313483,0.01784726,-0.008832805,0.01925506,-0.029200481,-0.0056908014,0.006284007,0.03194796,0.03966815,-0.035808053,0.044731684,-0.01163705,0.02334222,0.03194796,-0.0039509204,-0.009366406,0.0022039437,0.018199211,-0.019345885,0.0062499475,0.028292224,-0.014872718,0.04093971,0.0046690116,0.0062045343,0.04271081,-0.0020705434,0.020776391,-0.046389256,-0.024818137,-0.02196848,-0.014929484,-0.012420422,-0.006845991,-0.0062726536,-0.050226644,0.0009969546,-0.0074817715,0.03819223,-0.010723116,-0.032447502,0.012840492,-0.014043933,-0.0051061106,-0.008617094,-0.025113322,-0.03621677,0.011909528,-0.0037834605,-0.024613779,-0.017642902,-0.012715606,-0.052315634,-0.017041182,-0.012329596,-0.03142571,-0.024772724,0.010530111,0.020265497,0.004246104,-0.0074420352,-0.06462253,0.015417672,-0.041280307,-0.007226324,-0.0039707883,0.0075158314,-0.019981666,0.012954024,0.028133279,0.018210564,-0.025067909,-0.0008600064,-0.04450462,-0.0056936396,0.0039509204,0.003502468,0.0072206478,-0.00991136,0.027043369,-0.019016642,0.0061591216,0.033696357,0.005055021,-0.01428235,0.0059604403,0.038101405,-0.0008500723,-0.015099782,0.0015710017,-0.02059474,0.023796348,0.03156195,-0.02390988,-0.01527008,0.0037862987,-0.031993374,-0.020299556,-0.0031703867,-0.011841408,0.018369509,-0.04904591,0.013237854,0.005114625,-0.002726192,-0.010496051,-0.015440378,-0.004842148,0.005577269,-0.009934067,-0.012726959,-0.044164024,-0.003556396,0.019084763,0.011534871,0.02556745,0.006914111,-0.025680983,-0.004271649,0.012465835,0.024159651,0.012545307,0.03405966,0.056448206,0.001480176,0.03744292,-0.010240604,-0.0040814825,0.021139694,0.02422777,0.006210211,-0.0026935514,0.015338199,0.004810927,-0.021105636,-0.034468375,-0.0085546505,-0.007214971,-0.030403921,0.012318243,0.029768141,0.0299725,0.0067381356,-0.00964456,-0.009531028,0.0154857915,-0.040099572,-0.013873634,-0.0046122456,-0.0064088926,0.008395705,-0.012136592,0.008520591,0.034536492,0.044027787,0.014509414,-0.01642811,0.014123405,-0.014657007,-0.008077816,-0.0061477683,0.0059093507,-0.0041410867,-0.02091263,0.019141529,-0.012568014,0.02436401,-0.021854948,-0.0085262675,0.019243708,-0.026112406,0.0046576583,0.015883153,-0.011251041,0.037783515,-0.00027247728,0.0049755485,-0.015394965,-0.024205064,-0.01029737,0.009525351,-0.026294056,-0.00009534931,-0.002773024,0.024386715,0.03680714,-0.011097772,0.0010437866,-0.022104718,-0.01769967,-0.018664693,-0.031289473,-0.038146816,-0.010212221,0.011512165,-0.021185108,-0.014395882,-0.009355053,-0.012375009,-0.03296975,-0.016076159,0.0036812813,-0.016973063,-0.011943587,-0.017007124,0.04059911,-0.0032271526,0.011228334,0.0061307386,-0.010825295,-0.01329462,0.01569015,-0.0055687544,-0.026929837,0.018290037,-0.021480292,0.0024139783,-0.021185108,-0.0059263804,-0.0010785558,-0.037215855,-0.02499979,-0.04591242,-0.01858522,-0.024818137,0.043119527,0.00731715,-0.008662507,0.015213314,0.0050663743,0.017166069,-0.030562866,0.0036926346,0.020923983,0.012885904,0.027361259,0.025272267,-0.017654257,-0.00579298,0.04334659,0.02849658,0.006533778,-0.0076407166,0.017495312,0.020186024,0.050408296,0.008174318,0.028859884,0.00047896395,0.03501333,0.0042319125,-0.005046506,0.018766873,-0.024318596,0.02563557,0.015849095,0.0094572315,0.014679713,-0.006732459,-0.0027900536,-0.038419295,-0.032924335,-0.014055286,-0.037283972,0.02243396,0.0025984682,-0.03029039,-0.0041865,0.014997603,0.0019513346,-0.0075158314,0.0073228264,-0.007561244,-0.044413794,0.0015312654,0.066802345,-0.03871448,-0.037897047,-0.042574573,-0.010098688,0.026702773,-0.030699106,0.06475876,0.005577269,0.0123068895,0.047592696,-0.006953847,0.024795432,0.0044447854,-0.040258516,-0.0011658337,0.018358156,0.012477188,0.009377759,-0.0008741979,-0.032175023,-0.0010593972,0.00830488,-0.038532827,0.00396795,0.040122278,0.026430296,0.032243144,0.008548974,0.03871448,-0.005716346,-0.005614167,-0.004561156,0.024386715,-0.014679713,0.013657923,0.009445879,0.01702983,-0.014475355,0.023410339,0.015054369,0.0278608,-0.009264227,0.002402625,-0.043573655,-0.0065848674,-0.037669983,-0.005055021,0.0036103239,-0.003036986,0.027724562,0.03358282,0.0001553085,0.011841408,0.02073098,0.018471688,0.04634384,0.00020489014,0.0054438687,-0.007918871,0.01816515,-0.0017313659,-0.01034846,-0.009230168,-0.023637403,0.040054157,0.0068914043,-0.006301037,0.020537974,-0.010189515,-0.017097948,0.008219731,-0.021468937,0.014066639,0.016382696,0.019788662,-0.011943587,-0.01734772,-0.019391298,-0.03290163,0.0026112404,-0.013555744,0.051044077,0.01163705,0.026316762,-0.022592906,-0.059263807,-0.012533954,0.017472604,-0.01890311,-0.0062215645,0.038873423,0.018346803,0.016882237,0.008214055,0.013533038,-0.011148862,0.013169735,-0.013237854,0.010490375,-0.040667232,-0.015167901,-0.030699106,-0.023682816,0.005230996,0.05036288,0.015701503,-0.015406319,0.010893414]},{"id":"minimum-window-with-characters","name":"Minimum Window With Characters","description":"Given two strings `s` and `t`, return the shortest **substring** of `s` such that every character in `t`, including duplicates, is present in the substring. If such a substring does not exist, return an empty string `\"\"`.\n\nYou may assume that the correct output is always unique.\n\n**Example 1:**\n\n```java\nInput: s = \"OUZODYXAZV\", t = \"XYZ\"\n\nOutput: \"YXAZ\"\n```\n\nExplanation: `\"YXAZ\"` is the shortest substring that includes `\"X\"`, `\"Y\"`, and `\"Z\"` from string `t`.\n\n**Example 2:**\n\n```java\nInput: s = \"xyz\", t = \"xyz\"\n\nOutput: \"xyz\"\n```\n\n**Example 3:**\n\n```java\nInput: s = \"x\", t = \"xy\"\n\nOutput: \"\"\n```\n\n**Constraints:**\n* `1 <= s.length <= 1000`\n* `1 <= t.length <= 1000`\n* `s` and `t` consist of uppercase and lowercase English letters.\n","difficulty":"Hard","concepts":["Hash Usage","Sliding Window Fixed Size","Sliding Window Variable Size"],"solutions":{"python":"class Solution:\n    def minWindow(self, s: str, t: str) -> str:\n        if t == \"\":\n            return \"\"\n\n        countT, window = {}, {}\n        for c in t:\n            countT[c] = 1 + countT.get(c, 0)\n\n        have, need = 0, len(countT)\n        res, resLen = [-1, -1], float(\"infinity\")\n        l = 0\n        for r in range(len(s)):\n            c = s[r]\n            window[c] = 1 + window.get(c, 0)\n\n            if c in countT and window[c] == countT[c]:\n                have += 1\n\n            while have == need:\n                if (r - l + 1) < resLen:\n                    res = [l, r]\n                    resLen = r - l + 1\n                    \n                window[s[l]] -= 1\n                if s[l] in countT and window[s[l]] < countT[s[l]]:\n                    have -= 1\n                l += 1\n        l, r = res\n        return s[l : r + 1] if resLen != float(\"infinity\") else \"\"\n","javascript":"class Solution {\n    /**\n     * @param {string} s\n     * @param {string} t\n     * @return {string}\n     */\n    minWindow(s, t) {\n        const map = new Map();\n\n        for (const x of t) {\n            map.set(x, (map.get(x) || 0) + 1);\n        }\n\n        let matched = 0;\n        let start = 0;\n        let minLen = s.length + 1;\n        let subStr = 0;\n        for (let endWindow = 0; endWindow < s.length; endWindow++) {\n            const right = s[endWindow];\n            if (map.has(right)) {\n                map.set(right, map.get(right) - 1);\n                if (map.get(right) === 0) matched++;\n            }\n\n            while (matched === map.size) {\n                if (minLen > endWindow - start + 1) {\n                    minLen = endWindow - start + 1;\n                    subStr = start;\n                }\n                const deleted = s[start++];\n                if (map.has(deleted)) {\n                    if (map.get(deleted) === 0) matched--;\n                    map.set(deleted, map.get(deleted) + 1);\n                }\n            }\n        }\n        return minLen > s.length ? '' : s.substring(subStr, subStr + minLen);\n    }\n}\n","cpp":"class Solution {\npublic:\n    string minWindow(string s, string t) {\n        unordered_map<char, int> m;\n        for (int i = 0; i < t.size(); i++) {\n            m[t[i]]++;\n        }\n        \n        int i = 0;\n        int j = 0;\n        \n        int counter = t.size();\n        \n        int minStart = 0;\n        int minLength = INT_MAX;\n        \n        while (j < s.size()) {\n            if (m[s[j]] > 0) {\n                counter--;\n            }\n            m[s[j]]--;\n            j++;\n            \n            while (counter == 0) {\n                if (j - i < minLength) {\n                    minStart = i;\n                    minLength = j - i;\n                }\n                m[s[i]]++;\n\n                if (m[s[i]] > 0) {\n                    counter++;\n                }\n                i++;\n            }\n        }\n        \n        if (minLength != INT_MAX) {\n            return s.substr(minStart, minLength);\n        }\n        return \"\";\n    }\n};\n","java":"class Solution {\n    public String minWindow(String s, String t) {\n        HashMap<Character, Integer> map = new HashMap<>();\n\n        for (char x : t.toCharArray()) {\n            map.put(x, map.getOrDefault(x, 0) + 1);\n        }\n\n        int matched = 0;\n        int start = 0;\n        int minLen = s.length() + 1;\n        int subStr = 0;\n        for (int endWindow = 0; endWindow < s.length(); endWindow++) {\n            char right = s.charAt(endWindow);\n            if (map.containsKey(right)) {\n                map.put(right, map.get(right) - 1);\n                if (map.get(right) == 0) matched++;\n            }\n\n            while (matched == map.size()) {\n                if (minLen > endWindow - start + 1) {\n                    minLen = endWindow - start + 1;\n                    subStr = start;\n                }\n                char deleted = s.charAt(start++);\n                if (map.containsKey(deleted)) {\n                    if (map.get(deleted) == 0) matched--;\n                    map.put(deleted, map.get(deleted) + 1);\n                }\n            }\n        }\n        return minLen > s.length() ? \"\" : s.substring(subStr, subStr + minLen);\n    }\n}\n","csharp":"public class Solution {\n    public string MinWindow(string s, string t) {\n        Dictionary<char, int> map = new Dictionary<char, int>();\n\n        foreach (char x in t.ToCharArray()) {\n            if (map.ContainsKey(x)) {\n                map[x]++;\n            } else {\n                map.Add(x, 1);\n            }\n        }\n\n        int matched = 0, start = 0, minLen = s.Length + 1, subStr = 0;\n        for (int endWindow = 0; endWindow < s.Length; endWindow++) {\n            char right = s[endWindow];\n            if (map.ContainsKey(right)) {\n                map[right]--;\n                if (map[right] == 0) matched++;\n            }\n\n            while (matched == map.Count) {\n                if (minLen > endWindow - start + 1) {\n                    minLen = endWindow - start + 1;\n                    subStr = start;\n                }\n                char deleted = s[start++];\n                if (map.ContainsKey(deleted)) {\n                    if (map[deleted] == 0) matched--;\n                    map[deleted]++;\n                }\n            }\n        }\n        return minLen > s.Length ? \"\" : s.Substring(subStr, minLen);\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def minWindow(self, s: str, t: str) -> str:\n        ","javascript":"class Solution {\n    /**\n     * @param {string} s\n     * @param {string} t\n     * @return {string}\n     */\n    minWindow(s, t) {}\n}\n","cpp":"class Solution {\npublic:\n    string minWindow(string s, string t) {\n        \n    }\n};\n","java":"class Solution {\n    public String minWindow(String s, String t) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public string MinWindow(string s, string t) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/jSto0O4AJbM","embedding":[-0.046981998,-0.018643292,0.019141654,-0.03504395,-0.016026888,-0.019957157,0.034432326,-0.005929382,-0.023468347,0.05885209,-0.0013315625,-0.015471892,-0.0004544727,0.01934553,0.036357816,0.00018688597,0.008126708,0.035089254,-0.01190407,0.07054096,-0.004445621,-0.028406667,0.003352621,0.0143392505,0.085491836,0.024736905,-0.018654617,-0.016298722,0.024872823,0.03567823,0.0095595,-0.00973506,-0.016219437,-0.03178194,0.014894245,0.028497279,-0.002534287,-0.0047939084,0.0011977692,-0.04707261,-0.0073565114,-0.009282003,-0.014826287,-0.036697607,0.046619553,-0.028225444,0.011802132,0.05885209,-0.0059123924,0.019526752,-0.030196242,-0.00555561,-0.007815232,-0.037943516,-0.035723537,-0.009027159,-0.040729813,0.03903085,0.08988649,-0.01206264,0.016955653,-0.012866816,-0.037377194,0.027183414,0.01620811,0.024555683,0.009004505,0.0020061925,0.01760126,-0.032846626,-0.058036588,0.0038651417,-0.044512838,-0.037150666,-0.026571786,0.010091842,-0.021893974,0.046936695,0.017306773,-0.006365449,-0.0063484595,-0.040027577,0.025416492,0.026662398,-0.028316056,0.022448968,-0.037037402,0.044694062,-0.020874597,-0.05423091,-0.017148204,-0.016536577,0.017170856,-0.016865043,0.036516387,-0.025892202,0.029335434,0.0006972829,0.005906729,-0.029697878,-0.0033639474,-0.007503755,0.041930415,0.010074853,-0.010046536,0.048295863,0.015177405,-0.024578337,-0.05391377,0.0065863146,-0.010918671,0.0019679659,0.05423091,-0.021610813,0.046619553,-0.024940781,-0.04618915,0.0065070298,0.014962204,-0.00006238381,0.016219437,0.009140423,0.025280574,-0.03368478,-0.012889468,0.020444192,0.013886194,-0.071447074,-0.016899021,0.019662669,0.017963706,-0.052826434,0.010454288,0.0072432472,-0.00010025653,-0.052056238,-0.025144657,0.010482604,0.006892128,0.048159946,0.01282151,0.035904758,-0.047842808,0.01206264,-0.009820008,-0.0061275945,-0.040118188,0.06886465,-0.0058954027,0.047027305,0.014407209,-0.031578064,0.025189962,0.053641938,0.011535961,-0.04793342,0.011065914,0.005634895,0.03153276,0.011377391,-0.028089527,-0.033435598,-0.0019070863,0.0019821238,0.009650112,-0.022754783,0.06469652,0.013682318,-0.033005193,-0.032189693,0.009485879,-0.053143572,0.00094929576,0.021361632,0.055046413,0.013682318,-0.070903406,0.013614359,-0.009899293,0.03520252,-0.041613277,-0.00004369079,0.015313323,-0.03773964,0.053370103,-0.03860045,0.017578607,-0.009831334,0.0018334646,-0.02978849,-0.03685618,0.020489497,0.036040675,0.0017527639,-0.03418314,0.02738729,0.03520252,-0.0067732004,0.004740108,0.023490999,-0.030671952,0.0055612735,-0.016502596,0.02187132,-0.01206264,-0.03821535,-0.033798043,0.027613817,-0.011881417,-0.013082018,0.009780366,0.035315786,0.023740182,-0.03089848,0.017487995,0.017941052,0.046981998,-0.057855364,0.023196513,0.027115455,-0.06311083,0.023762833,-0.013331199,0.051195428,0.03606333,0.035542313,-0.016479945,-0.00073550956,0.0246916,-0.0012168825,-0.000084151776,-0.033277027,-0.013886194,0.005521631,-0.015154753,-0.0039897324,-0.032552138,-0.016547903,-0.016989633,-0.040911037,0.011388717,-0.0076849777,-0.009508532,-0.019005736,0.01760126,-0.0106525,-0.023989363,0.015120774,0.0076283454,-0.02899564,0.017250141,-0.0030269863,0.00083107624,-0.047661584,-0.0013216519,0.0330505,0.026073424,-0.007532071,0.007005392,0.0017796641,-0.045985274,-0.027568512,-0.038328614,-0.06890995,-0.0032789994,-0.043538768,0.025371186,0.013002733,0.028882377,0.046891388,0.01049393,-0.0024111122,0.00379152,0.0088742515,-0.022403663,-0.022018565,-0.014384557,0.0072432472,-0.014905572,-0.014475168,-0.07190013,-0.026888926,-0.0009287666,-0.0055159675,-0.019855218,-0.030400118,0.0023573115,0.0071243197,-0.009440573,-0.03760372,-0.0042813877,0.04045798,0.0013796998,-0.013195282,-0.011173516,-0.016615862,-0.013489769,0.01652525,0.004958141,-0.05273582,0.019617364,-0.037966166,0.018609311,0.027749734,-0.04632507,-0.028338708,0.01093566,-0.024283849,0.0031175977,0.0017386058,-0.015834339,0.020568782,0.022245094,0.008857262,-0.026345259,-0.04356142,0.009616133,-0.029856449,0.0028301897,-0.052781127,0.023241818,-0.053415406,0.044648755,0.023581611,0.026164036,0.018813187,0.0076283454,0.01858666,0.0043493463,-0.036901485,-0.023672223,-0.027092801,0.007277226,-0.030966438,-0.05590722,0.038351268,0.01886982,0.013682318,-0.0043635042,0.07081279,-0.026413217,-0.022675497,-0.02162214,0.047027305,0.013908846,-0.025099352,0.034658853,-0.0033327998,0.06179696,0.03597272,-0.0017386058,0.017533302,0.033412945,-0.070586264,0.013988132,0.033344988,-0.03966513,0.042315513,-0.06329205,-0.009791692,0.017771157,-0.028497279,-0.003287494,-0.038668405,-0.01779381,0.04005023,0.0018985915,0.011858764,0.013546401,0.0075887027,-0.0045390637,0.008177677,0.0023743012,0.022335704,-0.059305146,-0.0207047,-0.002497476,0.03400192,0.012493044,-0.008772314,-0.059214536,0.052781127,-0.045690786,0.025552409,0.0028273582,-0.023094576,0.051240735,0.016015561,-0.00072984636,-0.04106961,0.012447738,-0.010556226,0.019334203,0.026005466,0.021338979,0.012696919,0.015437913,0.07969271,-0.032438874,0.05640558,0.051829707,-0.021690099,0.009616133,-0.03497599,-0.06709772,-0.020568782,-0.035247825,0.063881025,0.02007042,-0.003675424,0.033480905,-0.021406937,0.015200059,-0.021169083,-0.004236082,0.025280574,0.002355896,0.030037671,0.03719597,0.0040435325,0.0047939084,0.009565163,0.011858764,0.013115997,0.010799743,0.046619553,0.0051167114,-0.029154211,-0.0036782557,-0.008789304,0.04227021,0.027885651,0.014361903,-0.019809913,-0.016004235,0.029901754,-0.0318499,0.056043137,-0.006671263,-0.013059365,-0.040843077,-0.040480632,0.012051313,0.01329722,0.0033469577,0.008868589,0.026164036,0.044105086,0.03488538,0.008625071,0.044897936,0.0048873513,0.0015701253,-0.029607268,-0.011547288,0.004077512,0.023003964,-0.0043266932,0.043606725,-0.00017290491,-0.030762563,-0.008460837,-0.054593354,0.035542313,0.009927609,0.0011942297,0.015902298,-0.030400118,0.016581882,-0.0042304187,0.011881417,0.0033639474,0.011037598,0.016389333,-0.019447466,0.014690369,0.05885209,-0.018507374,0.000832492,-0.08594489,0.017873093,-0.0057481593,-0.022969984,-0.011870091,-0.022528253,-0.041046955,0.011377391,-0.07534336,-0.0005249089,-0.0091687385,-0.031578064,0.0066033043,-0.028633196,-0.009061138,-0.0073055425,0.028021568,0.001097955,-0.003287494,-0.025778936,-0.008568439,0.021293674,-0.0042049345,0.008540123,0.03162337,0.016094847,0.03542905,-0.0069374335,-0.014203333,-0.0044031464,0.006427745,-0.024940781,-0.035723537,0.009684091,-0.028474625,0.023309777,0.0066429465,-0.034704156,0.0048788562,-0.027840346,0.028610542,-0.01144535,-0.044150393,0.014259966,-0.014803634,0.018314825,-0.027228719,0.0049354886,-0.0075887027,-0.051965624,-0.022199787,0.020885922,-0.022505602,-0.023626916,0.029856449,-0.021406937,-0.0036725923,-0.0048590354,0.0152227115,0.032778665,-0.011031935,0.0060766255,-0.006914781,-0.011122547,-0.012096619,-0.01807697,0.00894221,0.008987516,0.021112451,-0.003783025,-0.024895476,0.000689142,-0.0007574545,0.027749734,0.0046919705,-0.0064843767,-0.018337477,0.0011496318,0.025416492,0.019889198,0.017827788,-0.03606333,-0.014407209,0.03472681,-0.066010386,0.004128481,0.0053885453,-0.004185113,0.026345259,-0.022448968,-0.0035423385,0.049337894,-0.038192697,0.0037235613,-0.033820696,0.025688326,-0.032438874,-0.0034913698,-0.022675497,0.00014388096,0.020342255,0.009214045,0.019572057,-0.019900523,-0.018824514,-0.011836112,-0.019843891,-0.021282347,-0.00014565072,-0.00023590814,-0.026685052,-0.008528796,0.016672494,0.022245094,0.027432594,-0.022245094,-0.024646295,-0.050923593,-0.01096964,-0.012209883,-0.013183955,0.0035225174,-0.012119272,0.045826703,0.024963435,0.013025385,0.009225371,0.03767168,0.060800236,-0.014543126,0.017737178,-0.0016621525,-0.009083791,0.011082904,-0.0013145729,0.037399847,0.0074357963,-0.038441878,0.011065914,0.020772658,0.01728412,0.01855268,0.036448427,0.026390564,0.009740723,0.039144114,-0.005133701,-0.07828823,0.022528253,-0.011326422,0.0073678377,-0.036425773,0.03257479,0.008987516,-0.013682318,-0.008036097,0.005663211,0.045192424,0.015494546,0.006121931,-0.021633467,-0.00014264214,-0.020319602,0.01620811,-0.0081380345,-0.021305,0.015041489,0.00064135867,0.025914853,-0.008002117,-0.016536577,0.025869548,0.013772929,0.043176323,-0.013342526,0.02523527,0.027727082,-0.005003447,-0.028384015,-0.010816733,-0.017216163,0.0094632255,0.054412134,0.017023612,0.008075739,0.0035989706,-0.040888384,-0.020716026,-0.017646566,0.034432326,-0.040797774,0.01206264,-0.018167581,0.057447612,-0.0009705328,0.0050572474,-0.028882377,0.019209612,-0.019413488,-0.035723537,0.03128358,0.024397114,0.014124049,0.00150783,0.046393026,-0.013489769,0.0018830177,-0.0033582842,0.013093344,-0.017555954,-0.040004924,0.015947603,0.009202718,-0.0228907,-0.035632923,0.046234455,0.006903454,0.014622411,0.025054047,0.019368183,-0.088663235,0.005725506,0.008970526,0.0013343941,0.0003748338,-0.02421589,-0.012311821,0.03314111,-0.0010236254,0.019334203,-0.0015446409,0.004816561,0.017827788,-0.025620367,-0.021520203,-0.04165858,-0.00022298894,0.022947332,0.040186144,-0.013127323,-0.00084735797,-0.009638785,-0.005365893,-0.020523477,-0.018484721,-0.038668405,-0.01820156,0.012164578,0.0017187846,0.027885651,0.014565779,0.01978726,0.04106961,-0.02532588,-0.010782754,-0.00883461,-0.013693645,-0.018144928,-0.00065728644,-0.0022822742,-0.010403319,-0.028474625,0.001938234,-0.018280845,0.010074853,0.0081380345,0.046438333,-0.014384557,0.009214045,-0.063201435,0.016978307,-0.0071809515,0.006388102,-0.015709748,-0.024872823,0.02389875,0.036606997,0.03114766,-0.011043262,-0.011139536,0.010199443,-0.0037178982,-0.0314648,-0.02947135,-0.0014950878,0.0033129784,0.0006810011,-0.030807868,0.013818235,-0.0010278728,-0.020466845,-0.01449782,-0.06469652,0.008568439,-0.00083886314,-0.022720803,-0.023264471,-0.048386477,0.01687637,0.0014851771,0.005448009,-0.018530026,-0.017148204,-0.007752936,-0.015630463,0.010448624,0.009570827,0.012685593,0.0091687385,0.04516977,-0.03558762,-0.007158299,-0.02596016,-0.013761603,-0.023196513,0.00416246,-0.019266244,0.020750005,-0.03685618,-0.006541009,-0.021452244,0.029154211,0.020750005,-0.0012225457,-0.037558418,-0.014237313,-0.01962869,0.017510649,-0.033095807,0.0106864795,0.0064617237,-0.00756605,0.029290128,-0.032393567,0.038736366,0.019651342,0.017510649,-0.033095807,-0.00425024,0.04449019,0.020342255,0.006620294,-0.011688868,-0.009157413,0.0022355525,0.016298722,-0.025393838,0.021452244,-0.007701967,-0.0059407083,0.063382655,0.017691871,-0.022709476,-0.0025611871,0.028338708,0.020682046,0.055318248,0.057719447,-0.001959471,-0.025552409,0.037558418,0.0017640903,0.018292172,-0.0073055425,-0.049247283,-0.010023884,-0.026458522,-0.027228719,-0.015834339,0.01687637,-0.04720853,-0.03105705,-0.0046976334,-0.006246522,0.016819738,-0.016457291,0.01934553,0.010771427,0.017997686,-0.015551178,0.023037942,0.01931155,-0.000054862358,-0.031963162,-0.007826557,-0.025914853,0.05622436,-0.01585699,0.00060914917,-0.009791692,-0.031079702,0.035700884,0.021576835,-0.004740108,-0.0072036046,0.0362219,-0.018620638,0.012912122,-0.016264742,0.020059094,0.008460837,0.033435598,0.0179184,-0.015755054,0.029154211,0.045577522,-0.02178071,0.009270676,0.002023182,0.021350306,-0.016853716,0.022868047,-0.032438874,0.0039897324,-0.011196168,0.001758427,-0.009672765,0.019572057,0.0033582842,0.041341443,-0.0117908055,0.01836013,0.00021307833,0.0016791421,-0.017714525,0.016196784,0.011530298,-0.016445965,0.016797084,-0.020648068,0.007481102,-0.010697806,-0.032529484,-0.026073424,0.04077512,0.009599143,0.008245636,-0.01063551,0.0077132937,0.030150937,0.02738729,-0.012572329,-0.028565237,-0.008239972,-0.028769113,0.0330505,-0.019334203,-0.02266417,0.06619161,0.009055475,0.029154211,0.026798315,-0.0001815767,0.02114643,0.005365893,-0.0052951025,-0.024759559,0.0029477014,-0.008092728,0.0050657424,-0.0031855563,-0.014237313,-0.025122005,-0.050742373,-0.017397385,0.012878142,-0.022641517,0.029607268,-0.02105582,0.021067146,0.011802132,0.043198973,-0.02022899,-0.019447466,-0.026096078,-0.00495531,-0.01779381,-0.027432594,0.0024804864,0.03798882,0.004465442,0.050108094,0.020127052,0.0155171985,-0.026820969,-0.017148204,0.018926451,0.015154753,-0.02178071,0.04387856,-0.031736635,-0.03368478,0.0053715557,-0.013342526,0.024850171,-0.0048052347,-0.021814689,-0.005405535,0.03171398,-0.0048193927,0.0048986776,0.012413759,0.022482948,-0.037037402,-0.001263604,0.002756568,0.018371457,-0.01760126,-0.0016947159,0.0012161746,0.04675547,0.060392484,-0.00082541304,0.0374225,0.027251372,-0.033073153,-0.016128825,-0.0023162533,0.022426317,0.0026164036,0.022754783,-0.012243862,-0.048522394,0.022868047,0.011377391,0.0040945015,0.003516854,-0.059123926,0.00899318,-0.00095495896,-0.013149976,-0.017250141,0.0016989633,-0.0246916,0.03973309,0.030603994,0.004558885,0.0035904758,-0.028769113,-0.03368478,0.025892202,-0.033730086,-0.00756605,0.010590205,0.008183341,0.0057198433,0.039755743,0.0011276869,0.0066882526,-0.00532625,0.017544627,-0.02811218,0.025846895,0.032121733,0.017397385,0.01978726,0.032031123,0.05327949,0.013535075,0.0018178908,-0.02098786,-0.0026008298,0.0051223743,0.03520252,0.006608967,-0.02082929,0.032438874,0.024193238,-0.020319602,0.0063994285,0.021678772,0.0067675374,0.038441878,-0.025778936,-0.019130327,0.011609583,0.012968753,0.028972989,0.020500824,0.0048562037,0.023264471,0.0017258635,-0.011983355,-0.025303228,-0.0029561962,-0.018156255,-0.035882104,0.031487454,-0.006246522,-0.015279343,0.03121562,0.017227488,0.005776475,-0.006365449,0.01800901,-0.016479945,-0.0145318,-0.058806784,-0.009027159,0.011654888,0.007985128,0.032212347,-0.014101395,-0.03606333,-0.039959617,-0.0061842264,0.026730357,-0.026390564,-0.014124049,-0.03934799,-0.027455248,-0.006150247,0.018575333,0.010946987,0.046528943,-0.016128825,-0.01880186,-0.0078435475,-0.0027509048,0.008777977,0.01924359,-0.030309506,0.018937778,0.027228719,-0.039053503,-0.011949375,-0.03089848,-0.020489497,0.013002733,0.007079014,-0.0071922783,0.021814689,0.010267402,-0.035542313,0.023128554,-0.00989363,0.0068241693,0.033662125,0.010142812,-0.00633147,0.003783025,0.010873365,0.002799042,0.043765295,0.022788761,-0.035383742,-0.016060866,0.0010066358,0.014101395,0.004598527,-0.012164578,0.012311821,-0.027840346,-0.051875014,0.0058897394,-0.017386058,0.013795583,0.004893014,-0.021792036,0.0042105974,-0.0028103685,0.015426587,-0.03289193,0.015086794,-0.02142959,0.048930146,0.044150393,0.043629378,0.05694925,0.009044148,-0.0042813877,0.019390834,0.028859723,0.022675497,-0.0025909191,-0.02022899,0.024850171,-0.019458793,0.007045035,0.0021732573,-0.04675547,0.0031175977,-0.008562775,0.03536109,-0.026888926,0.024419766,0.0100975055,0.0053460714,0.010561889,-0.004932657,0.0147809815,0.017703198,-0.010414645,0.027296677,-0.054819886,0.02308325,-0.0038453203,-0.019232266,0.018620638,-0.01126979,-0.0034857064,-0.016321374,-0.015687095,-0.013082018,-0.021961933,-0.01867727,-0.018450743,-0.008794967,-0.016615862,0.021950606,-0.025371186,0.030785216,0.030989092,-0.017827788,-0.0025810085,0.0035791495,-0.0074471226,-0.027092801,-0.011456676,-0.016763104,-0.014407209,0.005261123,-0.035814147,-0.008313594,-0.010312707,-0.037943516,0.0010427388,0.022007238,0.0045702113,-0.026345259,0.019991135,0.01991185,0.0006112729,-0.021950606,-0.042927142,-0.0023799646,-0.06673528,0.0022383842,0.002176089,0.011564277,-0.012923447,0.040820427,0.017023612,0.026413217,-0.026730357,-0.000044243836,-0.01684239,-0.01836013,0.001657905,0.0034488956,-0.049790952,-0.005187501,0.016763104,-0.008925221,0.0065013664,0.018088296,-0.012232536,-0.04150001,-0.0033611157,0.012549676,-0.016763104,-0.02731933,0.001816475,-0.010867702,0.023287125,0.03662965,-0.012243862,-0.0020642404,0.06061901,-0.03830596,0.0018702755,0.027409943,-0.0015757885,0.018042991,-0.011020609,-0.005827444,0.013183955,-0.021961933,0.0050770687,-0.010726122,-0.0016267574,-0.03928003,-0.0060992786,-0.012073966,0.024986088,0.020874597,0.018178908,-0.01664984,0.014611085,-0.015358629,0.026231995,-0.023830792,0.010963976,0.02396671,0.013127323,0.029607268,0.025824243,0.008760988,0.0095821535,-0.006144584,0.010471277,0.029131558,0.0274779,-0.009853987,-0.0231059,0.019402161,0.0026999358,-0.030830521,-0.0030496393,-0.030830521,-0.02691158,-0.012141924,0.0063484595,0.029403392,-0.0033582842,0.043629378,0.010363677,-0.029516656,0.015154753,-0.053234186,-0.0021137935,-0.0066033043,-0.013501096,0.005354566,-0.0027367468,-0.005592421,-0.0065353457,0.032234997,-0.00449659,0.0065240194,0.027228719,0.024555683,0.010539236,0.005980351,-0.011213158,0.0157324,-0.0012735146,0.023921404,-0.024623642,0.0050006155,0.021554181,0.023944058,0.024487725,0.000033470464,-0.0065919776,-0.017080246,-0.013716297,0.027138108,-0.017714525,0.0019623027,0.00927634,0.008205993,0.0173181,-0.02659444,-0.02953931,-0.004765592,0.01516608,-0.001263604,0.04625711,-0.025982812,-0.019900523,-0.030626645,-0.010216433,-0.011411371,-0.010867702,-0.0009641617,-0.011184842,0.026685052,0.03137419,-0.05087829,-0.013161303,0.0059916773,-0.024963435,-0.016989633,-0.0074131433,0.011088568,0.008704356,-0.039778396,0.042338166,0.0018603648,-0.014962204,-0.020172358,0.030671952,0.014543126,-0.028610542,0.0073451847,-0.005513136,-0.019515425,-0.029335434,-0.0047939084,-0.022437643,0.028882377,-0.017680544,-0.040254105,-0.0127195725,-0.043538768,-0.023785487,-0.04254204,-0.0008190419,-0.02525792,0.031011743,0.041794498,0.0097577125,-0.02532588,-0.009961588,0.030558687,0.022947332,0.00837589,0.011688868,0.04888484,0.011167852,0.0029561962,-0.010233423,0.02899564,0.015268018,-0.000983275,0.011926723,0.04150001,0.045486912,-0.000012067507,0.028316056,-0.029516656,0.033616822,0.045124467,0.0064220815,0.009514195,0.0055754315,0.019005736,0.014701696,0.014588431,-0.009718071,0.0076396717,-0.021214388,-0.03336764,-0.038668405,-0.024238544,-0.015551178,0.039144114,-0.016502596,-0.021769384,0.0008126708,0.008936547,-0.016797084,-0.012051313,-0.028791765,-0.0059746876,0.0022950163,-0.0013485522,0.05790067,-0.04532834,-0.061117373,-0.049020756,-0.047435056,0.00043429752,-0.035089254,0.0429951,0.017408712,-0.00848349,0.031895205,0.012175904,0.033322334,0.005657548,-0.010290055,0.008273952,-0.011184842,0.006977076,0.000610211,0.022879373,-0.026096078,-0.012073966,-0.030400118,-0.04229286,0.0006827709,-0.020195011,-0.004255903,0.031804595,0.007045035,0.018971758,-0.018144928,0.027704429,-0.015392608,0.018212887,-0.0010377835,0.011405707,0.018564006,0.0020798142,-0.043040406,0.018824514,0.028021568,0.009718071,0.0074131433,0.04245143,-0.060483094,-0.011938049,-0.025507104,-0.014588431,0.01931155,0.01560781,0.032756012,0.0151321,0.007271563,0.01006919,0.0043748305,-0.0137502765,0.064062245,0.0207047,-0.018314825,-0.007928495,0.028859723,-0.00881762,0.017034939,0.003502696,-0.000024732304,0.016797084,-0.02051215,-0.018031664,0.049020756,0.006036983,0.014962204,0.023740182,0.015947603,-0.029199516,-0.013648339,0.022675497,0.0074641122,-0.019968482,-0.028248098,0.012617635,-0.002828774,0.0024040332,0.014622411,0.013625686,0.007197941,-0.012447738,-0.010924335,-0.015301997,0.01298008,0.008562775,0.015177405,0.019322876,0.02580159,0.00013591707,0.023672223,0.026164036,-0.013183955,0.008189003,0.016468618,0.04834117,0.014543126,0.00973506,-0.0358368,0.01500751,0.031872552,-0.0053347447,0.02333243,-0.0052328072,0.027568512]},{"id":"find-target-in-rotated-sorted-array","name":"Find Target in Rotated Sorted Array","description":"You are given an array of length `n` which was originally sorted in ascending order. It has now been **rotated** between `1` and `n` times. For example, the array `nums = [1,2,3,4,5,6]` might become:\n\n* `[3,4,5,6,1,2]` if it was rotated `4` times.\n* `[1,2,3,4,5,6]` if it was rotated `6` times.\n\nGiven the rotated sorted array `nums` and an integer `target`, return the index of `target` within `nums`, or `-1` if it is not present.\n\nYou may assume all elements in the sorted rotated array `nums` are **unique**,\n\nA solution that runs in `O(n)` time is trivial, can you write an algorithm that runs in `O(log n) time`?\n\n**Example 1:**\n\n```java\nInput: nums = [3,4,5,6,1,2], target = 1\n\nOutput: 4\n```\n\n**Example 2:**\n\n```java\nInput: nums = [3,5,6,0,1,2], target = 4\n\nOutput: -1\n```\n\n**Constraints:**\n* `1 <= nums.length <= 1000`\n* `-1000 <= nums[i] <= 1000`\n* `-1000 <= target <= 1000`\n","difficulty":"Medium","concepts":["Search Array"],"solutions":{"python":"class Solution:\n    def search(self, nums: List[int], target: int) -> int:\n        l, r = 0, len(nums) - 1\n\n        while l <= r:\n            mid = (l + r) // 2\n            if target == nums[mid]:\n                return mid\n\n            if nums[l] <= nums[mid]:\n                if target > nums[mid] or target < nums[l]:\n                    l = mid + 1\n                else:\n                    r = mid - 1\n                    \n            else:\n                if target < nums[mid] or target > nums[r]:\n                    r = mid - 1\n                else:\n                    l = mid + 1\n        return -1\n","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @param {number} target\n     * @return {number}\n     */\n    search(nums, target) {\n        let l = 0;\n            let r = nums.length - 1;\n\n        while (l <= r) {\n            const mid = Math.floor((l + r) / 2);\n            if (target === nums[mid]) {\n                return mid;\n            }\n\n            if (nums[l] <= nums[mid]) {\n                if (target > nums[mid] || target < nums[l]) {\n                    l = mid + 1;\n                } else {\n                    r = mid - 1;\n                }\n            } else {\n                if (target < nums[mid] || target > nums[r]) {\n                    r = mid - 1;\n                } else {\n                    l = mid + 1;\n                }\n            }\n        }\n        return -1;\n    }\n}\n","cpp":"class Solution {\npublic:\n    int search(vector<int>& nums, int target) {\n        int low = 0;\n        int high = nums.size() - 1;\n        \n        while (low <= high) {\n            int mid = low + (high - low) / 2;\n            if (nums[mid] == target) {\n                return mid;\n            }\n            if (nums[low] <= nums[mid]) {\n                if (nums[low] <= target && target <= nums[mid]) {\n                    high = mid - 1;\n                } else {\n                    low = mid + 1;\n                }\n            } else {\n                if (nums[mid] <= target && target <= nums[high]) {\n                    low = mid + 1;\n                } else {\n                    high = mid - 1;\n                }\n            }\n        }\n        \n        return -1;\n    }\n};\n","java":"class Solution {\n    public int search(int[] nums, int target) {\n        int l = 0;\n        int r = nums.length - 1;\n\n        while(l <= r) {\n\n            int mid = (l + r) / 2;\n\n            if (nums[mid] == target) {\n                return mid;\n            }\n\n            if (nums[l] <= nums[mid]) {\n                if (target > nums[mid] || target < nums[l]) {\n                    l = mid + 1;\n                } else {\n                    r = mid - 1;\n                }\n            } else {\n                if (target < nums[mid] || target > nums [r]) {\n                    r = mid - 1;\n                } else {\n                    l = mid + 1;\n                }\n            }\n\n        }\n\n        return -1;\n    }\n}\n","csharp":"public class Solution {\n    public int Search(int[] nums, int target) {\n        int low = 0;\n        int high = nums.Length - 1;\n        \n        while(low <= high) {\n            var mid = (low + high) / 2;\n            \n            if(nums[mid] == target) {\n                return mid;\n            } else if(nums[low] <= nums[mid]) {\n                if(target > nums[mid] ||  target < nums[low]) \n                    low = mid + 1;\n                else high = mid - 1;\n            } else {\n                if(target < nums[mid] || target > nums[high]) \n                    high = mid - 1;\n                else low = mid + 1;\n            }\n        }\n        \n        return -1;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def search(self, nums: List[int], target: int) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @param {number} target\n     * @return {number}\n     */\n    search(nums, target) {}\n}\n","cpp":"class Solution {\npublic:\n    int search(vector<int>& nums, int target) {\n        \n    }\n};\n","java":"class Solution {\n    public int search(int[] nums, int target) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int Search(int[] nums, int target) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/U8XENwh8Oy8","embedding":[0.00055352546,0.0063676583,0.027803184,-0.058938585,-0.0059198914,0.0006176316,-0.06556137,0.04273568,-0.020066194,0.042652376,0.0019941234,-0.039445117,-0.016733976,0.0024952576,0.017598271,0.0067269127,-0.0027803185,-0.00738815,0.02176354,0.0652698,0.03994495,0.051899277,0.016556952,-0.027511615,0.075058185,-0.012464574,0.042319156,0.043735348,0.016754802,0.013787047,0.048692018,-0.003694075,-0.02834467,0.016890174,-0.0008734053,-0.030718874,-0.017619098,-0.0039908504,-0.013058125,-0.028698718,-0.015578114,0.0071746795,-0.0044360138,-0.03394696,-0.013870353,-0.02851128,0.02919855,-0.014161922,0.032884814,-0.003280151,0.0060448498,0.023054775,-0.041173704,0.03707091,0.0012990439,-0.022305027,-0.021388667,0.020274457,0.06402022,0.052315805,-0.014016137,0.008299302,-0.0060240235,-0.005899065,0.001472163,0.017775295,0.010314252,0.0326349,-0.010590202,-0.045568068,-0.04502658,0.012037634,0.0068726973,-0.047858965,0.008767895,0.0295526,0.038820326,0.04436014,0.030198216,-0.007867156,0.033342995,-0.024221051,0.027178394,-0.00043898053,-0.027678227,0.012662424,-0.041069575,-0.014411838,-0.021471974,-0.075016536,-0.040778004,-0.0042511798,0.030989617,0.033822,0.022221722,0.017650336,0.008278476,0.021784369,0.033113904,0.038445454,-0.023013122,0.009101117,0.044151872,-0.029011114,0.015130348,-0.023929482,0.03221837,0.01186061,-0.00647179,-0.0040220898,0.03869537,0.016463235,-0.004139238,-0.0024431918,0.007190299,-0.01359961,-0.027594922,-0.029365161,0.024783364,0.018431325,-0.031635236,-0.03555059,-0.006497823,-0.028948635,-0.013006059,0.02640782,0.022825686,-0.049483422,0.01720257,0.004386551,0.025533112,-0.013995311,-0.0062739397,0.03244746,-0.06568632,-0.04092379,0.0069247633,0.016015468,0.0039023384,0.035675548,0.027261699,-0.003043251,-0.029490119,0.014036964,0.0018236077,-0.025970465,-0.015328198,0.028969461,-0.020961726,0.014953324,0.050191518,-0.035134062,0.0041079987,0.02451262,-0.0092364885,-0.03250994,-0.003589943,-0.0034103158,-0.008314922,0.016192492,0.018306367,-0.017723229,0.032426637,0.010553756,0.058188837,0.019222727,-0.0035873398,0.010657888,-0.012339615,0.018556284,0.040653046,-0.027157567,-0.014005724,-0.0072423653,0.052940596,-0.008356575,-0.02106586,-0.06651938,-0.07339208,-0.002845401,-0.066102855,-0.0059198914,0.0028271778,-0.05177432,0.03267655,0.016629845,0.013526718,-0.04673434,-0.050608043,-0.009049051,0.046484426,0.015286545,0.06793557,-0.018816613,-0.015296958,0.009231282,0.01828554,0.036321163,-0.0033894894,-0.030947965,-0.020920074,0.002375506,0.011985567,0.019118594,-0.005461712,-0.03607125,-0.001874372,0.050483085,0.0039387844,-0.01634869,0.03103127,0.009377067,0.0276574,-0.05206589,-0.019805863,0.018525044,0.005550224,0.006560302,0.00024291991,0.039361812,0.008096246,0.018420912,-0.04171519,0.023054775,0.035363153,0.030239869,0.004074156,-0.012214658,0.013318455,0.011652346,0.019930823,0.0008122279,0.04236081,-0.020295283,0.029531773,-0.046484426,-0.0045844014,-0.053565387,-0.009455166,-0.0042928327,0.006789392,-0.027511615,0.02176354,-0.03005243,-0.024929147,-0.0029234996,-0.0245751,0.055856287,-0.03348878,-0.018400086,0.021555278,0.031572755,0.009335414,-0.04256907,0.009184423,0.05748074,0.002523894,-0.023346344,-0.006513443,0.019951649,-0.0349258,0.015067868,-0.006461377,-0.07435009,-0.028407149,-0.05206589,-0.042589895,0.023013122,0.014557622,0.0051363,-0.013984898,-0.022096762,0.040819656,-0.04194428,-0.03325969,-0.032884814,0.016640259,0.019129008,0.02663691,-0.09346868,-0.045568068,0.005852206,0.04315221,0.00984566,0.03390531,0.00022258167,0.013068538,-0.008143105,0.0073152576,-0.0249708,-0.04411022,-0.035842158,-0.030010778,0.0055033644,-0.037404135,0.029510945,-0.011329537,-0.04233998,-0.004792665,-0.037820663,0.01563018,-0.005266465,0.013495479,-0.034988277,-0.03994495,-0.023075603,0.017421246,0.040486436,-0.02503328,0.004597418,-0.032384984,0.020982554,0.005508571,-0.0055241906,0.015775964,-0.06831045,0.0075807935,-0.02519989,0.0054044393,0.015494809,0.0131934965,-0.0024692249,0.04560972,0.06414518,0.03867454,0.027115915,0.044276834,0.013255975,0.021846848,-0.011214993,-0.028261365,-0.044026915,-0.038820326,0.014453491,-0.07976494,0.049733337,0.02372122,0.019378925,0.014245227,0.0249708,0.03890363,-0.004925433,0.040486436,-0.017993972,0.0078619495,-0.006523856,-0.016650671,-0.027365832,0.017931493,0.009819627,0.0015710882,-0.023346344,0.037924793,-0.0068362514,-0.040153213,0.0036394056,-0.047275826,0.018202234,-0.013724568,0.020847183,-0.03167689,-0.035217367,-0.0025369104,-0.04744244,0.017921079,0.0318435,0.0075547607,-0.059854947,0.0029859787,0.044651706,0.019597601,0.0012743126,-0.0041106017,-0.030219043,-0.014349359,0.0064769965,-0.013214323,-0.0147763,0.022242548,0.004391758,-0.033238865,-0.016890174,-0.032739032,-0.030698048,0.012579119,0.033822,-0.004860351,-0.04263155,-0.040673874,-0.033551257,-0.01431812,-0.009679048,0.046317816,-0.012599945,0.01642158,0.0118085435,0.055148188,0.07310051,-0.018483391,-0.0068466645,0.019441403,-0.013516305,0.009132357,0.01874372,-0.034363486,-0.020618092,0.0050790273,0.05023317,0.026949305,-0.025699724,-0.017848186,-0.005024358,0.030947965,0.021451145,0.03929933,0.014734646,-0.013224736,0.027615748,-0.013183083,-0.04935846,-0.016629845,-0.027803184,0.01566142,0.0045505585,0.01094425,-0.014141096,0.0024705264,-0.016629845,0.030219043,-0.03228085,-0.0012899324,-0.019118594,-0.03228085,0.023971135,-0.11004646,0.049566727,-0.016359102,0.08722078,-0.018181408,-0.052274153,-0.02651195,-0.06968498,0.02549146,0.0063103857,0.027782358,-0.020024542,0.0014669565,0.08805383,0.031156229,0.015026215,0.030156562,-0.014922083,0.0124854,0.009668635,-0.032905642,-0.008007734,0.042818986,-0.01615084,-0.006107329,0.0068466645,-0.03938264,-0.0013003455,0.00083305425,-0.00917401,0.03644612,-0.017067198,-0.010480863,0.00051675393,0.040194865,0.008106659,0.011756478,0.018327193,0.011569041,0.02025363,-0.023929482,0.023679566,0.01625497,0.051691014,0.011871023,-0.008419055,-0.008299302,-0.029177723,-0.0063884845,-0.0142972935,0.006773772,-0.0299483,-0.0025577368,0.0034155224,-0.000103480954,0.0095176445,-0.040049084,-0.0048317146,0.010611028,-0.0063988976,0.0029807722,-0.0012183418,0.003332217,0.0142972935,-0.024012787,0.004102792,-0.01894157,-0.07005986,0.035842158,0.028969461,0.023783699,-0.000656681,0.018816613,-0.00061307586,-0.0040559326,0.07035143,-0.0063780714,0.003535274,-0.0049644825,-0.005638736,0.024137747,0.033467952,-0.015817618,-0.008819962,-0.005659562,-0.015067868,0.035363153,0.0029469293,0.007310051,-0.015463569,-0.015328198,-0.031801846,-0.035154887,0.00021298202,-0.07730743,0.0029052766,0.0058157598,0.023179734,0.006570715,0.023554608,-0.015161587,0.015723899,-0.004839524,-0.0057949335,-0.03790397,-0.041361142,0.010605821,-0.0032593247,-0.023950309,0.008189964,-0.011246232,-0.0039648176,0.01736918,0.016963067,0.0011168133,-0.0088772345,0.0007848933,-0.017108852,-0.0072840177,-0.0205452,0.006721706,-0.037987273,-0.008648144,0.021222057,0.03228085,0.018868677,-0.029760862,-0.016379928,0.024054442,0.002697013,0.015619767,-0.017702403,-0.0018144962,-0.018243888,0.0014370185,-0.02005578,0.047067564,-0.006206254,0.03201011,-0.04881698,0.055189844,-0.01205846,-0.047692355,-0.024137747,-0.04273568,0.033613738,-0.009293761,-0.00963219,-0.016036294,-0.024450142,0.014620102,-0.025762202,-0.056022897,0.03542563,0.02034735,-0.005472125,0.034592576,-0.0065186494,0.049483422,-0.0012320091,-0.025283195,-0.035800505,-0.030656395,-0.002139908,0.041111227,-0.012308376,0.031197881,0.026199555,0.016494473,0.017004719,-0.011621106,0.0019030082,0.01179813,0.008793929,0.023075603,0.014984563,-0.021617757,-0.0037253143,-0.020888835,0.00059680524,-0.01053293,-0.018951984,0.011902262,0.010965076,-0.014474317,0.011006729,0.015286545,-0.0067477394,0.014141096,0.025907986,0.0012632486,-0.014599275,-0.0345301,0.019524708,0.0036368023,0.0019394543,-0.047067564,-0.006742533,0.022700727,-0.0038710989,-0.014526383,0.008278476,0.00019085403,-0.031197881,-0.022721553,-0.024200225,0.033967786,0.026845172,0.009762354,-0.05327382,-0.0058053466,-0.0047900616,-0.010189295,0.014036964,0.012433334,-0.011329537,0.0034285388,0.012433334,0.01228755,-0.015276132,0.023950309,0.008268063,0.0065915417,-0.01428688,-0.0043292786,-0.015359437,0.008528393,-0.0065915417,0.03057309,-0.0047093597,0.0042225434,-0.0345301,0.026970131,0.00078749657,0.053357124,-0.021471974,-0.012568706,0.02005578,0.020701397,-0.03148945,-0.011704412,0.021555278,0.018077277,0.017327528,-0.026470298,-0.018191822,0.028323844,-0.032593247,-0.012568706,0.01936851,0.00014122872,0.024908321,-0.003235895,0.0053263404,-0.017931493,0.020232804,0.019087356,-0.013412173,-0.03096879,-0.005649149,0.050191518,-0.04177767,0.008127485,0.024825016,0.0121834185,-0.051316142,-0.0042850226,0.01811893,0.02297147,0.035571415,-0.0406947,-0.009059465,0.0043527083,-0.012339615,0.0059459247,0.032822337,0.014130683,0.00963219,0.0020579044,0.0057636937,-0.027678227,0.029073592,0.0043084524,0.0017715419,-0.031218708,-0.033467952,-0.059938252,0.024658404,-0.015651006,-0.012797795,-0.0050009284,-0.00013952031,-0.011527387,-0.0106214415,0.043068904,-0.008445087,0.017567031,-0.023179734,-0.034363486,0.033363823,0.0045063025,-0.031406146,-0.01007475,0.03890363,-0.026470298,-0.017806534,-0.012495813,0.026428645,0.019129008,-0.02549146,-0.010381938,0.021326188,-0.03390531,0.009762354,-0.06810218,0.013474653,-0.02045148,0.0035821332,0.039757513,-0.029490119,0.05264903,0.013110191,-0.0017988764,0.017702403,-0.000915058,0.022305027,0.002475733,0.022034284,-0.041361142,-0.0048421277,0.036591906,0.0015099108,-0.039611727,0.024554273,-0.0019394543,0.024325183,0.0016140426,-0.0318435,0.01703596,-0.027449137,0.025283195,-0.031364493,-0.023283865,0.020513961,-0.006143775,0.010902598,-0.024762537,0.0148491915,0.0031447797,0.007455835,0.018931158,0.017775295,0.026782693,-0.00022388333,0.013620436,-0.018264715,-0.0023963326,0.0032827542,-0.029448466,-0.020815942,0.023075603,0.005261258,-0.004862954,-0.02159693,0.008023353,-0.02794897,0.031468622,0.024637578,0.021513626,0.008221203,0.0080441795,0.000996411,0.007716165,-0.015224066,-0.000424337,0.013620436,-0.019805863,0.06172932,0.00005588948,0.0006631893,0.0057532806,0.00848674,0.009804007,0.0068726973,0.02542898,-0.007106994,0.013255975,0.0026228193,0.008174345,-0.0018925951,0.018035624,-0.009418719,0.024158573,0.021805195,0.014078616,0.032614075,0.024658404,0.005966751,-0.040319823,0.015099108,-0.010236153,0.032364156,0.037050087,0.0021151768,-0.018806199,0.055523064,-0.0046703103,0.032551594,-0.019306032,-0.04315221,0.0011858006,0.023387996,-0.017015133,-0.03707091,0.019514294,-0.043402124,-0.02388783,0.00935624,0.011850196,0.012683251,-0.0016036294,0.009429133,-0.009751941,0.0311354,-0.019420577,-0.0109859025,0.03450927,0.012162591,0.00738815,-0.049275156,-0.035862986,0.02903194,-0.030198216,-0.027240872,-0.008153519,-0.06006321,0.04092379,0.016900588,-0.024262704,-0.040840484,0.0076693054,0.007278811,-0.02880285,0.0021203833,0.007039308,-0.024033614,0.045568068,0.01186061,-0.012808208,0.040194865,0.01412027,-0.042777333,-0.00917401,0.0182543,-0.027115915,-0.02106586,0.022096762,-0.04469336,0.007257985,0.005420059,-0.0361129,-0.0008623413,0.030760527,0.0013901592,0.03913272,-0.035613067,-0.018629175,-0.013984898,0.030219043,0.051107876,0.018077277,0.0056074965,-0.018910332,0.0307397,0.0066956733,-0.013058125,-0.015526048,0.008950126,0.043402124,0.00692997,0.0152136525,0.01337052,-0.006404104,-0.004719773,0.00089748576,0.014411838,0.020628504,-0.012922754,-0.016786043,0.0030458546,0.035675548,0.008111865,-0.013630849,0.013714155,0.009486405,0.017775295,0.011423256,0.02657443,0.0066956733,-0.004305849,-0.024825016,-0.034759186,-0.00065407774,0.01317267,0.033134732,-0.017275462,-0.024741711,-0.0034233322,0.006601955,-0.030239869,-0.0053523732,0.0088772345,0.0016569969,-0.020805528,-0.015421917,0.031614408,0.03765405,-0.018962396,-0.012037634,-0.015286545,-0.008762689,0.0008961841,-0.006096916,0.043860305,0.019670492,0.012610358,0.034321833,-0.008679383,-0.00080962456,-0.01291234,0.009835246,-0.03771653,0.03246829,0.020857595,0.019129008,-0.03617538,0.012756143,0.009257315,-0.011787717,0.018337606,-0.035238195,-0.00067945983,-0.008653351,-0.006877904,-0.0033374235,-0.0135579575,0.03673769,0.0057168347,-0.014266053,-0.021555278,-0.02126371,0.010428797,-0.019878756,0.011746065,0.022763208,0.02588716,0.048733674,0.0174629,0.015140761,-0.022554943,-0.018910332,0.012537466,-0.044943277,0.0035430838,-0.009325,0.003738331,0.0037617604,-0.071017876,-0.014536796,0.011756478,0.0003774777,-0.046442773,0.06131279,-0.004050726,-0.0070236884,-0.020430654,-0.020201566,-0.016900588,-0.0006615622,0.003943991,0.00956971,-0.035404805,0.06460336,-0.0050608045,-0.0076068263,-0.0096113635,-0.022305027,0.009850866,-0.004579195,0.046484426,-0.03167689,-0.018899918,-0.0011649743,0.037404135,-0.0015190223,0.016983893,-0.035113234,-0.019358097,0.0012925357,-0.005659562,-0.009762354,0.04319386,0.0039231647,-0.012985232,0.009137563,0.017108852,-0.01631745,-0.0066175745,-0.0063520386,0.0100643365,-0.02297147,-0.02549146,-0.020701397,-0.014797126,-0.0249708,0.0041444446,-0.008002527,0.01723381,-0.0017038562,-0.016171666,-0.010777639,0.029323509,0.026761867,0.029073592,0.008080626,0.01497415,0.015047042,-0.035363153,-0.02942764,0.016588192,-0.0019056115,0.00446465,-0.023387996,-0.024866669,-0.030947965,-0.041007094,0.008538806,-0.003014615,-0.052773986,0.023700392,-0.004357915,0.0018561489,-0.040715527,-0.016098773,0.012173004,0.026366167,0.012974819,-0.008127485,-0.020472307,-0.0049306396,0.013391347,0.021232469,-0.0326349,0.0049020033,-0.02657443,0.0039283712,0.02467923,0.04902524,0.015359437,0.031760193,0.011204579,-0.0061021224,0.011277472,-0.0077474043,-0.011641933,-0.00044776665,-0.009049051,-0.008944919,-0.010819292,-0.028719544,0.0013758411,-0.016692324,-0.012443747,0.035779677,-0.012370856,-0.022075936,0.016556952,-0.0005815109,-0.009564504,0.011891849,-0.02542898,-0.05806388,0.013682916,0.011923089,-0.015317785,-0.011194166,0.011183753,-0.0006378071,0.02572055,0.04017404,-0.04919185,-0.054773316,-0.014870018,0.007700545,-0.016015468,0.023013122,0.0035040344,-0.03411357,-0.06256237,0.001431812,-0.01536985,0.023013122,0.004980102,-0.019576775,-0.017650336,0.012048047,0.034967452,-0.002600691,0.01071516,0.007070548,0.04436014,0.023471303,0.011933502,0.049691685,-0.008127485,0.017993972,0.033592913,-0.04319386,0.031385317,-0.0028922602,-0.015734311,0.03430101,-0.025449807,0.004792665,-0.025762202,-0.021180404,-0.006482203,0.009861279,0.013745395,0.0031760193,0.024637578,0.0049098134,-0.018431325,-0.0076432726,0.044485096,0.016504887,-0.007752611,0.0045948145,0.0174629,-0.02309643,0.036321163,-0.020899247,0.010933837,-0.007898395,0.017796122,0.0034884145,0.017348355,0.015234479,-0.0149429105,0.012631184,0.020711811,0.003917958,-0.00961657,-0.016067533,0.04715087,0.004993119,0.031343665,-0.028906982,-0.00095736154,-0.0075287274,-0.014807539,0.00016189237,0.019358097,-0.017077612,-0.0031551928,0.017993972,-0.003977834,-0.021451145,0.0007940048,0.031052096,-0.03617538,0.020441068,0.0007464947,0.0029833755,-0.0022453414,-0.024595926,0.01582803,0.0017494139,-0.034592576,-0.054939926,-0.005826173,-0.033363823,-0.025179064,-0.028011449,-0.022638248,-0.0056179096,-0.0019563758,0.06027147,0.017223395,-0.009179216,0.03430101,-0.025678897,0.031406146,0.049899947,0.058896933,0.0009866486,-0.0074298023,-0.02703261,-0.029302683,0.008799136,0.033467952,-0.025991293,0.006810218,-0.009939378,0.0491502,-0.0024601133,-0.0020826356,-0.036820997,0.0014851795,-0.010277807,0.027053436,0.0182543,-0.035009105,-0.0073412904,0.021992631,-0.03590464,0.008627318,-0.0037591571,0.017015133,-0.020232804,0.01088177,0.025574764,-0.0218885,0.0045297323,0.02274238,-0.043235514,-0.017296288,-0.027386658,0.040069908,0.00045915606,0.012891514,0.010840118,-0.016077947,0.0032645313,0.0027282527,-0.03011491,0.0063884845,-0.017088024,0.016390342,0.008294096,0.035738025,-0.005914685,0.004836921,0.044943277,-0.004587005,-0.0007165568,0.0058313794,0.056814298,0.028073927,-0.0004793316,0.015775964,0.03096879,0.00093523355,-0.007794264,0.015942575,-0.01359961,0.0107464,-0.022929817,0.02359626,0.036716864,0.019306032,0.031468622,0.008632525,0.011100448,0.002353378,-0.0062479065,-0.010007064,0.013037299,-0.0005206589,-0.026428645,-0.0029052766,0.019909997,0.02359626,-0.020305697,0.0016283607,0.015338611,0.013495479,-0.01182937,-0.021930153,0.013974485,0.0318435,-0.021784369,0.005638736,0.012953993,0.009413512,-0.01733794,0.018046036,0.01808769,-0.03126036,0.000106735075,-0.01877496,-0.00005816736,0.056772646,-0.024158573,-0.009293761,-0.02732418,-0.016359102,0.010184088,0.023533782,-0.04263155,-0.016015468,0.020795116,0.019326858,0.02542898,-0.00821079,0.021846848,-0.016598605,0.015911335,-0.0042407666,-0.02159693,0.019420577,-0.0004926735,0.053398777,0.057938922,0.01563018,-0.011017142,0.014838778,-0.0026996164,-0.017327528,0.009194836,0.011527387,-0.01906653,-0.0077317846,0.042027585,-0.01845215,-0.024741711,0.047275826,0.0039465944,0.010996316,0.022763208,0.007117407,-0.0146617545,0.044151872,-0.016015468,-0.0037122979,-0.050108213,0.012308376,-0.021576105,-0.023991961,-0.011818957,-0.016192492,-0.022846512,-0.018827025,0.03188515,-0.01451597,-0.014578449,0.0066540204,0.019035289,-0.02342965,0.016911,0.016827695,0.033926133,0.03617538,0.0018938967,0.020430654,0.01337052,-0.0007738293,0.0030614743,-0.00403771,0.007825503,-0.024450142,-0.0020331729,0.023179734,0.01274573,0.0039804373,-0.0007992114,-0.024096094,0.08043139,0.0018613555,0.013964072,-0.019306032,0.008158725,-0.005727248,0.014526383,0.036966782,-0.016827695,0.019212313,0.015067868,-0.015317785,-0.02663691,0.013016473,0.0022349283,0.008361782,0.021555278,-0.015723899,0.005081631,-0.020826356,-0.011714825,-0.06110453,-0.013578784,0.024929147,-0.036258686,-0.0031994488,0.03446762,-0.014870018,-0.050149865,-0.008091039,-0.03250994,0.029635904,-0.016900588,0.020159911,0.04286064,0.0076328595,0.04436014,-0.00014513367,0.036820997,-0.01068392,-0.014005724,-0.05327382,0.0016791249,-0.030843833,-0.019274792,-0.0049905153,0.0057949335,0.0128186215,0.05964668,-0.033551257,0.020597266,-0.014047377,0.010496483,0.03332217,0.013255975,0.019160246,-0.025970465,0.008127485,0.04960838,-0.0025212907,0.021846848,0.02467923,0.013901592,-0.018368846,-0.025283195,0.0027516822,-0.0021685443,0.004589608,-0.027740706,0.007825503,-0.020461895,0.0027568887,-0.02519989,-0.04336047,0.019743385,-0.026845172,0.03473836,0.0059823706,-0.011954328,0.0027646988,0.018681241,0.0652698,0.052773986,0.012985232,0.02680352,-0.012068873,-0.010366319,0.012193832,0.008434674,-0.01625497,-0.016609019,0.039819993,-0.012953993,0.004128825,-0.0045375424,0.012776969,0.030927138,0.026324514,0.03230168,0.007559967,-0.020920074,0.0054773316,0.03211424,-0.032093413,-0.0002617938,-0.04290229,-0.013516305,0.027574094,0.024241878,0.020951314,0.03594629,-0.014984563,-0.034363486,0.0092364885,0.0006176316,-0.013870353,-0.0017936699,0.049483422,0.00911153,0.01762951,0.013037299,0.037508268,-0.0073308772,0.0024783362,-0.0131934965,-0.009080291,-0.0029547391,0.004454237,0.00871583,-0.03207259,0.011423256,0.047275826,-0.0015190223,-0.0022492465,-0.009408306]},{"id":"merge-two-sorted-linked-lists","name":"Merge Two Sorted Linked Lists","description":"You are given the heads of two sorted linked lists `list1` and `list2`.\n\nMerge the two lists into one **sorted** linked list and return the head of the new sorted linked list.\n\nThe new list should be made up of nodes from `list1` and `list2`.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/51adfea9-493a-4abb-ece7-fbb359d1c800/public)\n\n```java\nInput: list1 = [1,2,4], list2 = [1,3,5]\n\nOutput: [1,1,2,3,4,5]\n```\n\n**Example 2:**\n\n```java\nInput: list1 = [], list2 = [1,2]\n\nOutput: [1,2]\n```\n\n**Example 3:**\n\n```java\nInput: list1 = [], list2 = []\n\nOutput: []\n```\n\n**Constraints:**\n* `0 <= The length of the each list <= 100`.\n* `-100 <= Node.val <= 100`\n","difficulty":"Easy","concepts":["Singly Linked Lists"],"solutions":{"python":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\n\n# Iterative Solution\nclass Solution:\n    def mergeTwoLists(self, list1: ListNode, list2: ListNode) -> ListNode:\n        dummy = node = ListNode()\n\n        while list1 and list2:\n            if list1.val < list2.val:\n                node.next = list1\n                list1 = list1.next\n            else:\n                node.next = list2\n                list2 = list2.next\n            node = node.next\n\n        node.next = list1 or list2\n\n        return dummy.next\n    \n# Recursive Solution\n# class Solution:\n#     def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:\n#         if not list1:\n#             return list2\n#         if not list2:\n#             return list1\n#         lil, big = (list1, list2) if list1.val < list2.val else (list2, list1)\n#         lil.next = self.mergeTwoLists(lil.next, big)\n#         return lil\n","javascript":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     constructor(val = 0, next = null) {\n *         this.val = val;\n *         this.next = next;\n *     }\n * }\n */\n\n/** Iterative Solution */\nclass Solution {\n    /**\n     * @param {ListNode} list1\n     * @param {ListNode} list2\n     * @return {ListNode}\n     */\n    mergeTwoLists(list1, list2) {\n        const dummy = { val: 0, next: null };\n        let node = dummy;\n\n        while (list1 && list2) {\n            if (list1.val < list2.val) {\n                node.next = list1;\n                list1 = list1.next;\n            } else {\n                node.next = list2;\n                list2 = list2.next;\n            }\n            node = node.next;\n        }\n\n        if (list1) {\n            node.next = list1;\n        } else {\n            node.next = list2;\n        }\n\n        return dummy.next;\n    }\n}\n\n/** Recursive Solution */\n// class Solution {\n//     /**\n//      * @param {ListNode} list1\n//      * @param {ListNode} list2\n//      * @return {ListNode}\n//      */\n//     mergeTwoLists(list1, list2) {\n//         if (list1 === null) return list2;\n//         if (list2 === null) return list1;\n\n//         if (list1.val < list2.val) {\n//             list1.next = this.mergeTwoLists(list1.next, list2);\n//             return list1;\n//         } else {\n//             list2.next = this.mergeTwoLists(list2.next, list1);\n//             return list2;\n//         }\n//     }\n// }\n","cpp":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n\n/** Iterative Solution */\nclass Solution {\npublic:\n    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {\n        ListNode dummy(0);\n        ListNode* node = &dummy;\n\n        while (list1 && list2) {\n            if (list1->val < list2->val) {\n                node->next = list1;\n                list1 = list1->next;\n            } else {\n                node->next = list2;\n                list2 = list2->next;\n            }\n            node = node->next;\n        }\n\n        if (list1) {\n            node->next = list1;\n        } else {\n            node->next = list2;\n        }\n\n        return dummy.next;\n    }\n};\n\n/** Recursive Solution */\n// class Solution {\n// public:\n//     ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {\n//         if (list1 == nullptr) return list2;\n//         if (list2 == nullptr) return list1;\n\n//         if (list1->val < list2->val) {\n//             list1->next = mergeTwoLists(list1->next, list2);\n//             return list1;\n//         } else {\n//             list2->next = mergeTwoLists(list2->next, list1);\n//             return list2;\n//         }\n//     }\n// };\n","java":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\n\n/** Iterative Solution */\nclass Solution {\n    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {\n        ListNode dummy = new ListNode(0);\n        ListNode node = dummy;\n\n        while (list1 != null && list2 != null) {\n            if (list1.val < list2.val) {\n                node.next = list1;\n                list1 = list1.next;\n            } else {\n                node.next = list2;\n                list2 = list2.next;\n            }\n            node = node.next;\n        }\n\n        if (list1 != null) {\n            node.next = list1;\n        } else {\n            node.next = list2;\n        }\n\n        return dummy.next;\n    }\n}\n\n/** Recursive Solution */\n// class Solution {\n//     public ListNode mergeTwoLists(ListNode list1, ListNode list2) {\n//         if (list1 == null) return list2;\n//         if (list2 == null) return list1;\n\n//         if (list1.val < list2.val) {\n//             list1.next = mergeTwoLists(list1.next, list2);\n//             return list1;\n//         } else {\n//             list2.next = mergeTwoLists(list2.next, list1);\n//             return list2;\n//         }\n//     }\n// }\n","csharp":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     public int val;\n *     public ListNode next;\n *     public ListNode(int val=0, ListNode next=null) {\n *         this.val = val;\n *         this.next = next;\n *     }\n * }\n */\n\n/** Iterative Solution */\npublic class Solution {\n    public ListNode MergeTwoLists(ListNode list1, ListNode list2) {\n        ListNode dummy = new ListNode(0);\n        ListNode node = dummy;\n\n        while (list1 != null && list2 != null) {\n            if (list1.val < list2.val) {\n                node.next = list1;\n                list1 = list1.next;\n            } else {\n                node.next = list2;\n                list2 = list2.next;\n            }\n            node = node.next;\n        }\n\n        if (list1 != null) {\n            node.next = list1;\n        } else {\n            node.next = list2;\n        }\n\n        return dummy.next;\n    }\n}\n\n/** Recursive Solution */\n// public class Solution {\n//     public ListNode MergeTwoLists(ListNode list1, ListNode list2) {\n//         if (list1 == null) return list2;\n//         if (list2 == null) return list1;\n\n//         if (list1.val < list2.val) {\n//             list1.next = MergeTwoLists(list1.next, list2);\n//             return list1;\n//         } else {\n//             list2.next = MergeTwoLists(list2.next, list1);\n//             return list2;\n//         }\n//     }\n// }\n"},"starterCode":{"python":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\n\nclass Solution:\n    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:\n        ","javascript":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     constructor(val = 0, next = null) {\n *         this.val = val;\n *         this.next = next;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {ListNode} list1\n     * @param {ListNode} list2\n     * @return {ListNode}\n     */\n    mergeTwoLists(list1, list2) {}\n}\n","cpp":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n\nclass Solution {\npublic:\n    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {\n        \n    }\n};\n","java":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\n\nclass Solution {\n    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {\n        \n    }\n}","csharp":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     public int val;\n *     public ListNode next;\n *     public ListNode(int val=0, ListNode next=null) {\n *         this.val = val;\n *         this.next = next;\n *     }\n * }\n */\n \npublic class Solution {\n    public ListNode MergeTwoLists(ListNode list1, ListNode list2) {\n        \n    }\n}"},"videoUrl":"https://www.youtube.com/embed/XIdigk956u0","embedding":[-0.02211659,-0.035029143,-0.002995155,-0.032396674,0.022443248,-0.0018482533,-0.00998225,0.02046409,-0.018014165,0.049767133,0.0053850343,-0.026843507,-0.04792248,-0.034933068,-0.04039016,-0.041965798,0.012547466,0.0047965716,0.0041360524,0.029514408,0.021636212,0.013863701,0.07536166,0.028553652,0.050113004,-0.02350008,0.03606676,0.048114635,-0.024537694,-0.0506126,0.030936327,0.0029158928,-0.021943655,0.08039602,-0.058606084,0.06544666,0.026709002,0.037027515,0.018926883,0.048691086,0.011605926,-0.005927861,0.0065091182,0.003838218,0.0125570735,-0.014228788,-0.021828365,-0.039698415,-0.004938283,0.011990229,0.025018072,0.008814932,0.039583124,-0.016803613,-0.039467834,-0.014987785,0.01858101,0.034779347,-0.021713074,-0.0047749546,0.039852135,0.0019527355,0.009242468,-0.028476791,0.039141178,0.0076908474,-0.004878236,-0.01756261,0.010837322,-0.029802635,-0.051842365,0.004859021,-0.009794902,0.029917926,0.0066340165,0.017533787,-0.007907017,0.05756847,-0.018532973,-0.027669758,-0.004167277,-0.006254518,0.018552188,0.021520922,-0.041427776,-0.020656243,-0.021655427,-0.044617485,-0.017466534,-0.060681317,0.00043744396,-0.0406976,0.00006571417,0.03393388,0.08885066,0.018888453,0.00998225,0.009228056,-0.012970199,0.018705908,0.006552352,-0.031378273,0.010039895,-0.0065475483,-0.007469874,-0.03245432,0.06863637,0.00681656,-0.03771926,0.003773367,-0.05080475,-0.009160804,-0.026536066,0.031320628,0.01496857,-0.022462463,-0.018811593,0.051650215,-0.021463277,-0.012816478,0.05095847,-0.0576069,-0.009170411,-0.029091675,-0.032473534,0.042273242,0.014939748,-0.029379902,0.0051160227,-0.007902213,0.033953097,0.017101448,-0.032819405,0.042888124,-0.031897083,0.014334472,-0.014853279,0.010971827,-0.009396189,0.032665685,0.041235626,-0.03806513,-0.02561374,-0.007945448,0.010366552,0.028649729,0.030936327,-0.016861258,-0.041081905,-0.010577918,0.032627255,0.007854176,0.019359224,0.011644356,-0.031339843,-0.014353687,-0.021271126,0.02109819,0.017408889,-0.035624813,-0.04346458,-0.014641914,0.0024078933,-0.02023351,-0.003170493,0.022712259,-0.032358244,-0.041812077,-0.022750689,-0.055493236,0.01705341,-0.020944469,-0.03226217,-0.010808499,0.017024586,-0.045462947,-0.028399931,-0.05057417,0.016649893,0.008435433,0.0043906523,0.03925647,-0.03587461,0.0077244737,-0.066638,0.027400745,-0.034087606,-0.013585082,-0.0068934206,-0.010501057,0.022289528,0.05768376,0.017985342,0.05042045,-0.018686693,0.0012597906,-0.021482492,-0.0015732371,0.034318186,-0.01320078,0.01803338,0.01638088,-0.008353769,0.008473863,0.0018626647,-0.029879496,-0.021117406,0.015689136,0.022443248,-0.026709002,0.042542253,0.04384888,0.0016524994,0.012999021,0.007167236,-0.03720045,-0.011461813,-0.0289956,0.016294412,0.013882916,0.018965313,0.027208595,0.028649729,0.048153065,0.01700537,0.024998857,-0.029879496,-0.026747432,0.00006597688,-0.017418496,0.0011445,-0.039141178,0.016995763,-0.019445691,0.0070711602,-0.06525451,0.0069558695,-0.035528738,0.024710631,0.00544268,0.036009114,0.0073113493,-0.062372245,0.04012115,0.009991857,-0.034029957,-0.025844323,0.019436084,0.00746507,0.070673175,0.01885963,-0.041888937,0.03720045,-0.032242954,-0.030244581,0.0024487255,0.030974757,0.0057068877,-0.034567982,-0.016784398,-0.006268929,0.027842693,-0.020291155,-0.03595147,0.00095715263,-0.030186936,0.021520922,0.053456433,0.008276909,0.022404818,-0.0077340817,-0.02643999,-0.0024523283,-0.014228788,-0.001467554,-0.0006001719,0.004229726,0.008560332,-0.031109262,-0.045462947,0.010856537,-0.014507407,0.057299457,-0.036354985,0.008147206,0.0025387963,-0.020906039,-0.01673636,-0.019320792,-0.02027194,0.0017017381,0.01622716,0.0062256954,0.014248003,-0.04042859,0.014094283,0.013450577,-0.015035823,0.012249632,-0.0093049165,0.03362644,-0.0380267,-0.004878236,0.029053245,0.009794902,-0.06179579,-0.05092004,0.023154207,-0.042734403,0.03602833,-0.060950328,0.020886824,0.0141423205,0.009131981,0.0004935881,0.015698744,-0.042964984,-0.037334956,-0.026055688,-0.025363944,0.01084693,-0.019887637,0.0050199474,0.05983585,-0.005457091,0.033415075,-0.031378273,-0.0069510657,0.011442598,-0.017082233,0.016649893,-0.009026297,-0.011807685,0.026766647,-0.028361501,-0.039659984,0.007854176,0.021194266,0.0067445035,0.031320628,0.0025171794,-0.018340822,0.008579547,0.009924604,-0.011538673,-0.0014519417,0.042811263,0.049843993,-0.014718774,0.029379902,-0.011509851,-0.0019899649,0.034567982,0.020886824,-0.062333815,0.053341143,-0.00021992293,0.000006656797,0.021866795,0.03272333,-0.03731574,0.0005776542,-0.034529552,0.010904575,0.008464255,0.02023351,0.016880473,-0.004657262,-0.004481924,0.024729846,0.029245397,0.0509969,-0.009554713,0.07282527,-0.035701673,0.03174336,-0.013661942,0.043080274,-0.031032402,-0.0011793274,-0.02722781,-0.015343265,-0.01760104,0.021655427,-0.011106333,0.025863538,0.011240839,-0.025844323,-0.024691416,-0.0011096726,0.0032713723,-0.029206967,0.045078646,0.00893983,0.044924926,-0.0012207599,0.009415404,0.02914932,0.02914932,0.0060095256,0.028111706,-0.04039016,0.0136811575,-0.014344079,-0.0002745659,-0.018801985,0.012643542,0.03210845,0.041081905,-0.034779347,-0.004580402,0.03214688,0.005654046,-0.004030369,0.0018314401,0.023673015,0.009703631,0.020060575,0.02993714,-0.018878845,0.005476306,-0.027881123,0.034952283,0.024921997,0.062564395,-0.017831622,0.004126445,0.019753132,0.041350916,-0.048537366,-0.0563387,0.023442434,0.0199645,-0.015304835,0.024287898,0.04719231,0.034606412,0.06875166,-0.023673015,-0.0060287407,-0.06563881,-0.023134992,0.015717959,0.023307927,-0.0064658844,-0.010722031,-0.0032905876,0.036527924,0.024845136,-0.01410389,-0.033684086,0.046116263,0.046000972,0.053264283,0.06118091,0.0069318507,0.018811593,-0.022481678,-0.014786026,-0.013690765,-0.023327142,0.007743689,0.027996413,-0.027516037,0.002179714,-0.031320628,0.035144433,-0.010030287,-0.0073305643,-0.017533787,0.06756032,-0.0083201425,-0.0024955624,0.010587526,-0.042234812,0.044540625,0.058913525,0.038507078,-0.02993714,0.012499428,0.01791809,-0.0020392034,-0.003799788,-0.014641914,-0.016371273,-0.034990713,0.02643999,0.007834961,-0.010789284,-0.011951798,0.030359874,0.011058295,0.046116263,-0.0032641666,0.010789284,0.010184008,-0.011990229,-0.025709817,0.019829992,-0.027669758,0.016179122,-0.061104048,-0.007767708,-0.021943655,0.03791141,-0.06344829,0.006230499,-0.038795307,-0.007662025,0.0543019,-0.03708516,-0.02463377,0.01002068,-0.0051496495,-0.0065427446,-0.015237582,-0.042580683,-0.0031440724,0.007359387,0.0053418004,-0.0047797584,0.0016272796,0.020906039,-0.006148835,0.0050007324,0.020886824,-0.014795634,-0.02042566,-0.006120012,-0.03418368,0.014622699,0.007657221,-0.0253063,0.034913853,-0.0060479557,0.0063313786,0.03810356,-0.009040709,-0.030110076,-0.017072625,0.013748411,-0.0010436206,0.0040471824,-0.0049671056,-0.010827714,0.00058756204,0.05276469,0.006869402,0.008752482,0.003341027,0.01186533,-0.010597133,0.0028006022,-0.024383973,-0.01351783,-0.008392199,0.0125762895,-0.011615533,0.019532159,-0.022520108,-0.01681322,-0.024364758,0.018254355,0.018475328,-0.0041720807,0.0071480204,-0.003389065,0.0029062852,0.012412961,0.021597782,0.03005243,-0.025210224,0.0050007324,-0.00927129,-0.020598598,-0.016332842,-0.019628234,-0.052956842,0.016198337,-0.018023772,-0.024057318,-0.021175051,-0.04019801,-0.03249275,-0.022135805,0.024749061,-0.035624813,0.014094283,0.013277641,-0.028457576,0.02350008,0.008046327,0.028380716,0.029591268,-0.0065235295,-0.047960915,0.050151434,-0.02565217,-0.0024066924,-0.0005284155,-0.026709002,0.03794984,-0.012124734,0.001294618,-0.036412634,0.006989496,0.014670736,0.02911089,-0.0034803366,0.009252075,0.013392931,0.012605112,0.030148506,-0.034548767,0.00023913804,0.0014495398,0.013854094,0.04719231,0.023384787,-0.018062202,0.0015996578,0.0052745477,0.0064995107,0.0116539635,0.0007361789,-0.0000050524104,-0.034241326,-0.03587461,0.012240024,0.019263146,-0.02711252,-0.0019070996,0.011951798,0.007969467,-0.02219345,-0.02046409,0.00049959286,0.014209573,-0.02699723,0.0063313786,0.00375175,-0.009141589,-0.028034845,-0.035816964,-0.0031776987,0.0005764533,0.0045876075,0.022769904,-0.039775275,-0.018100632,-0.014670736,-0.0054474836,0.03304999,0.01532405,0.035624813,0.015727567,-0.008425825,-0.058875095,-0.023250282,0.026132548,-0.04911382,-0.032780975,0.002562815,0.03735417,0.017034194,-0.014737989,0.010087932,-0.0041600713,0.03583618,-0.028265426,-0.026593711,0.0098669585,0.013335286,-0.0027477606,-0.04092818,-0.009045512,-0.013959777,0.016649893,0.00044945342,-0.021424847,-0.0067637186,0.018302392,-0.023673015,0.004875834,0.004011154,-0.0087428745,-0.019637842,-0.033684086,-0.018523365,-0.020099005,-0.024480049,-0.010366552,0.013498615,-0.027477607,0.0057020835,0.010933397,0.03385702,0.055377945,-0.008877381,-0.06832893,0.023000486,-0.021828365,0.033684086,0.03343429,-0.012931769,-0.017043803,-0.029245397,0.011144764,0.02459534,-0.035586383,0.026747432,-0.015929326,0.028323071,0.015295227,-0.028899524,0.011769255,0.0014711568,-0.010741246,-0.016102262,-0.013431362,-0.016745968,-0.035278942,-0.017831622,0.028668944,-0.015900504,0.017870052,-0.0012441783,0.035375018,-0.03214688,-0.013171958,-0.022673829,0.031243768,-0.060642883,0.014939748,-0.02384595,0.0015288021,-0.03933333,0.0018518561,-0.029552838,0.0067829336,0.013296856,0.00045996168,0.024383973,0.048767947,0.015295227,0.025133364,-0.016822828,0.027458392,-0.07017358,0.031301413,-0.04365673,0.00093553565,-0.02219345,-0.036720075,-0.0074794814,-0.0044747186,0.002673302,-0.012749225,0.0084210215,-0.006513922,-0.039390974,0.0035019538,-0.03080182,-0.00799829,0.039083533,-0.029187752,-0.008704444,0.0026132548,0.009761276,0.009718042,-0.02219345,-0.03087868,-0.005024751,-0.035009928,0.0032713723,0.012720402,-0.020291155,-0.004354624,-0.013219995,-0.009511479,0.023154207,0.031608853,0.02715095,0.008632388,0.004525158,0.005610812,-0.0047605434,0.0074410513,-0.016957333,-0.036604784,-0.008747678,-0.038334142,-0.0027573681,-0.00825289,0.031647284,0.0029807438,-0.054878354,-0.009991857,0.02004136,-0.048652656,-0.042004228,0.010625956,0.019368831,-0.008574743,-0.028380716,0.009242468,-0.04338772,-0.02046409,-0.02376909,0.00840661,-0.077898055,0.013690765,-0.00927129,-0.041235626,0.014180751,0.044540625,-0.020099005,-0.042311672,0.05272626,-0.0036292537,-0.031570423,0.012864516,0.008987867,0.03393388,-0.01107751,-0.015535416,0.0063361824,0.0109910425,0.015074253,0.009266486,0.02203973,-0.0017281589,-0.020982899,0.0506126,-0.009040709,0.010789284,0.014824457,-0.022347173,-0.013085489,0.0029399118,-0.008027112,0.0148052415,0.028784234,-0.019215109,-0.026651356,0.0253063,0.015007,0.015074253,0.010837322,-0.038795307,-0.018571403,0.026747432,-0.012941376,-0.0015696342,-0.05095847,0.063602015,0.052956842,0.0065475483,0.009746864,-0.014296041,0.03226217,-0.011221624,-0.013844486,0.011375344,0.00064670853,-0.03060967,-0.009655592,0.030033216,-0.001988764,0.0070711602,0.024383973,0.07397817,0.004976713,0.02384595,-0.0014075068,0.02376909,0.0074602664,0.030590454,0.013546652,-0.002521983,0.021444062,0.014910925,-0.036162835,0.015641099,-0.012605112,-0.037219666,0.05076632,0.014651521,0.0077388855,-0.0161503,0.04407946,0.018360037,0.0054042493,-0.010501057,-0.015650706,-0.036085974,0.0097852945,0.0123361,0.04369516,0.03996743,0.01784123,-0.01795652,-0.0055819894,0.03385702,0.028861094,-0.026709002,-0.0026036473,-0.012307278,-0.004076005,-0.038334142,0.033376645,0.015919719,-0.058413934,0.041888937,0.021636212,0.00893983,0.00067192834,0.011404167,0.01846572,-0.0041600713,-0.022962056,-0.0098861735,-0.028515222,-0.006907832,0.0039366954,0.009372169,-0.013815664,0.043195564,0.00923286,-0.0059230574,0.009761276,0.0047197114,-0.011884545,-0.030071646,-0.013143135,0.05065103,0.02526787,-0.012941376,-0.03374173,0.010443412,-0.046615854,-0.0011264858,-0.01720713,-0.014651521,-0.0028750608,-0.024979642,-0.0019251137,-0.026843507,0.037296526,0.006432258,0.02553688,-0.025786677,0.010664386,-0.0027117324,-0.020752318,-0.016765183,-0.04753818,-0.026881939,0.023442434,0.031455133,-0.004573196,-0.029360687,0.019042173,-0.0035211688,0.0043426147,0.0064658844,-0.0021881205,-0.045347657,0.003084025,-0.014786026,0.030148506,-0.038334142,0.018302392,0.0253063,0.005423465,-0.002028395,-0.01835043,0.0012465803,0.02282755,-0.037104376,0.020137435,0.010693208,-0.03414525,0.026978014,-0.034087606,0.005673261,-0.035816964,-0.019090211,-0.012201594,-0.012902946,-0.005043966,0.039583124,0.02561374,-0.03291548,-0.008055935,0.0025508057,-0.0078013344,0.01402703,-0.025844323,-0.018561795,-0.012537858,-0.025517665,0.00829132,-0.041197196,-0.007955056,-0.026574496,0.017629864,0.018244747,0.004659664,-0.022558538,-0.016323235,-0.0060575632,0.018321607,0.037104376,0.0029855475,0.01107751,0.01842729,0.006475492,-0.020925254,-0.045347657,0.0044122697,-0.041812077,0.0037421426,0.04369516,-0.005764533,-0.010789284,0.017111056,0.00004071952,0.021636212,0.010616348,0.019714702,-0.024787491,-0.0022962056,-0.022539323,-0.014699559,-0.017255168,-0.0017629863,-0.037411816,-0.005745318,0.0056156158,-0.029418333,-0.024710631,-0.0125570735,0.0075419303,-0.026536066,-0.00039571116,-0.009530694,-0.024518479,0.00071276043,-0.0014915728,-0.023288712,0.019032566,-0.022750689,-0.0037157217,0.012307278,0.0045659905,0.026516851,0.03283862,-0.00548111,0.017725939,-0.004830198,-0.041965798,-0.011346522,-0.009626769,0.024499264,0.03658557,0.012518643,-0.055416375,-0.005308174,-0.04365673,0.023999672,-0.026843507,-0.020540953,0.017216738,0.01799495,-0.02982185,-0.053571723,0.005524344,-0.0045659905,-0.0103473365,0.012941376,-0.03647028,-0.0027477606,0.019090211,0.03351115,-0.005457091,0.025094932,-0.04085132,-0.0072585074,-0.0007151624,0.032166094,0.009761276,0.002608451,0.037930626,0.001980357,-0.03280019,-0.014526622,0.022635398,0.04004429,-0.00031554812,0.011798077,0.0052649397,-0.001854258,-0.032896265,-0.03771926,-0.009276094,-0.009895781,0.030955542,0.01846572,-0.00043774422,0.018052595,-0.0020896432,-0.0081808325,0.005476306,-0.022020515,-0.010943005,-0.013738804,-0.01807181,-0.004280166,0.007546734,0.020560168,0.0019731515,0.0132392105,0.015708352,-0.038564723,-0.0058654123,-0.024018887,0.012941376,0.02042566,0.012509036,-0.024383973,-0.04092818,-0.03794984,-0.022135805,-0.002524385,-0.026958799,-0.012931769,0.009252075,-0.0044555035,0.01638088,0.027688973,0.016861258,-0.0055099325,-0.019167071,0.0021845177,-0.012230417,0.01814867,0.045924112,-0.012240024,-0.009626769,0.01143299,0.016669108,0.03735417,-0.03647028,-0.011644356,-0.008728463,-0.04100504,0.005029555,0.014718774,0.047999345,-0.002371865,0.024749061,-0.016332842,0.010164793,-0.008507489,0.036009114,-0.025863538,-0.015525809,-0.004443494,-0.042234812,0.0052841553,-0.0044386904,0.019868422,-0.009074335,0.025191009,0.02109819,-0.019868422,0.018725123,0.039852135,-0.011855722,-0.023269497,-0.043003414,0.0063986313,-0.019753132,-0.009175215,0.011019865,-0.0024535293,-0.009674807,0.046538994,-0.01599658,0.004292175,0.03712359,-0.019397654,-0.02211659,0.012787655,-0.004873432,0.029399117,-0.030167721,-0.022904411,0.026132548,0.0006977487,-0.017889267,-0.023942025,0.00020235912,-0.020771533,-0.0006995501,0.011605926,-0.050382018,-0.010049502,-0.026958799,0.030993972,0.042619113,-0.017341636,-0.009199234,-0.0056588496,-0.019541766,-0.015631491,0.024076533,-0.008493078,-0.009247271,0.006437062,0.005092004,0.014613091,-0.04392574,-0.0055771857,-0.008469059,-0.0046260376,-0.0022673828,0.0139021315,0.000905512,-0.013450577,-0.05810649,-0.05042045,0.009285701,-0.004839806,-0.045001786,-0.0016260786,-0.016207945,0.059105676,0.047960915,-0.025786677,-0.005764533,-0.013489007,0.020444876,0.029956356,-0.03393388,-0.011961405,0.03445269,0.0032617648,0.0015179936,0.021175051,0.009746864,0.0002994855,-0.022385603,0.016630678,0.005956684,-0.014641914,0.023038916,-0.0039366954,0.019570589,-0.016995763,-0.017889267,0.08001172,0.0044146716,0.008233675,-0.027573682,0.009122374,0.010270476,-0.01025126,-0.041696787,0.0033794574,0.03418368,-0.0031152496,-0.02914932,0.037930626,-0.023519294,-0.020483306,-0.009742061,0.002413898,-0.015525809,-0.0016813221,-0.002783789,0.045962542,0.0032209328,0.034721702,0.016015794,0.008574743,-0.033338215,0.012633935,-0.005370623,0.0493444,-0.023596155,0.018600225,-0.016611462,0.02211659,0.034856208,0.03410682,0.000668926,0.0034851404,-0.00418409,-0.015074253,-0.0019899649,-0.02169386,0.014123105,-0.01662107,0.002242163,-0.021117406,0.03057124,0.036758505,0.03308842,0.00844504,0.010184008,-0.005024751,-0.000017160368,-0.008699641,-0.015448947,0.026881939,-0.034625627,0.011846115,0.028265426,-0.013095097,0.008920615,-0.019397654,-0.013978992,-0.004878236,0.018878845,0.031858653,-0.0023118178,0.01787966,-0.018456113,-0.011759647,-0.027977198,-0.03989057,-0.020963684,0.0018734732,-0.0033602424,0.0041576694,0.017860444,0.029956356,0.010126363,0.025018072,-0.010087932,-0.0044795224,-0.013738804,-0.00033296182,-0.008070346,0.036681645,0.01823514,-0.09031101,-0.05610812,0.0075899684,0.0027237418,0.033146065,0.008632388,-0.006211284,0.016717145,0.016352057,-0.020809963,-0.014565052,-0.039621554,-0.018206317,-0.021136621,0.019061388,-0.0016224758,0.017159093,0.019484121,0.03347272,-0.0063746125,-0.020656243,0.0027117324,0.00825289,-0.015496986,0.0034971498,-0.014238396,0.017332029,-0.015112683,-0.0032209328,0.030167721,-0.02019508,0.01103908,0.017697116,0.03374173,-0.03564403,-0.0028990796,0.022596968,-0.002371865,0.033991527,0.043195564,-0.005822178,-0.0015155917,0.05291841,-0.0024979643,0.034606412,0.025594525,0.009895781,-0.041696787,0.03199316,-0.0010316112,0.0049671056,0.011490636,0.012028659,0.013930954,0.0007764105,-0.0056780647,0.0020824375,0.020809963,0.033261355,0.024230253,0.0054715024,-0.04062074,0.011019865,0.0063121635,-0.022347173,-0.02636313,-0.048153065,-0.0016356861,-0.019753132,-0.008449844,-0.0139213465,-0.00005524344,-0.029303042,-0.023519294,-0.032473534,-0.03689301,0.003965518,-0.011769255,-0.03222374,0.037373386,-0.0005485313,-0.036162835,0.0051304344,-0.011586711,-0.0016945325,-0.044924926,0.018792378,0.024749061,0.0031825025,0.03324214,-0.008315339,0.044963356,0.0046092244,0.010798891,-0.034702487,-0.029437548,0.027477607,-0.008733267,0.028707374,-0.051611785,-0.0005356212,0.0056588496,0.0018518561,0.017850837,-0.0057116915,-0.011125549,0.045232367,-0.016054224,-0.0036508709,-0.020733103,-0.017120663,-0.022058945,0.03401074,0.031954728,0.041120335,0.008512293,0.024057318,-0.03366487,0.016428918,0.024114963,0.0049286755,0.022673829,0.01865787,-0.0085411165,0.03693144,0.010981435,0.0005800561,0.011759647,0.04077446,0.025882753,-0.013796449,0.02350008,0.031070832,0.024499264,0.06775247,0.022750689,-0.017898874,0.041312486,0.0040471824,0.0020848394,0.012067089,0.003124857,0.007436247,-0.0022685837,-0.009146392,0.029668128,-0.019099819,-0.0021641017,0.030398304,0.013008629,0.019272754,-0.019733917,-0.027592897,0.010232045,0.027285455,0.008219263,-0.04000586,0.019445691,0.013095097,-0.055915967,0.01713027,0.071095906,-0.010280084,0.0068069524,-0.0337033,-0.011846115,0.0049286755,-0.009934211,-0.007844568,0.016669108,0.017966127,0.0077629043,0.031051617,0.03260804,0.012970199,0.007508304,0.0030696138,0.011375344,0.037546325,0.0121151265,-0.017235953,0.0013786841,-0.0050343587,-0.020175865,0.025921183,0.010356944,-0.01673636,-0.00053442025]},{"id":"reorder-linked-list","name":"Reorder Linked List","description":"You are given the head of a singly linked-list.\n    \nThe positions of a linked list of `length = 7` for example, can intially be represented as:\n\n`[0, 1, 2, 3, 4, 5, 6]`\n\nReorder the nodes of the linked list to be in the following order:\n\n`[0, 6, 1, 5, 2, 4, 3]`\n\nNotice that in the general case for a list of `length = n` the nodes are reordered to be in the following order:\n\n`[0, n-1, 1, n-2, 2, n-3, ...]`\n\nYou may not modify the values in the list's nodes, but instead you must reorder the nodes themselves.\n\n**Example 1:**\n\n```java\nInput: head = [2,4,6,8]\n\nOutput: [2,8,4,6]\n```\n\n**Example 2:**\n\n```java\nInput: head = [2,4,6,8,10]\n\nOutput: [2,10,4,8,6]\n```\n\n**Constraints:**\n* `1 <= Length of the list <= 1000`.\n* `1 <= Node.val <= 1000`\n","difficulty":"Medium","concepts":["Singly Linked Lists","Fast and Slow Pointers"],"solutions":{"python":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\n\nclass Solution:\n    def reorderList(self, head: Optional[ListNode]) -> None:\n        slow, fast = head, head.next\n        while fast and fast.next:\n            slow = slow.next\n            fast = fast.next.next\n\n        second = slow.next\n        prev = slow.next = None\n        while second:\n            tmp = second.next\n            second.next = prev\n            prev = second\n            second = tmp\n\n        first, second = head, prev\n        while second:\n            tmp1, tmp2 = first.next, second.next\n            first.next = second\n            second.next = tmp1\n            first, second = tmp1, tmp2\n","javascript":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     constructor(val = 0, next = null) {\n *         this.val = val;\n *         this.next = next;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {ListNode} head\n     * @return {void}\n     */\n    reorderList(head) {\n        let slow = head;\n        let fast = head.next;\n        while (fast !== null && fast.next !== null) {\n            slow = slow.next;\n            fast = fast.next.next;\n        }\n\n        let second = slow.next;\n        let prev = (slow.next = null);\n        while (second !== null) {\n            const tmp = second.next;\n            second.next = prev;\n            prev = second;\n            second = tmp;\n        }\n\n        let first = head;\n        second = prev;\n        while (second !== null) {\n            const tmp1 = first.next;\n            const tmp2 = second.next;\n            first.next = second;\n            second.next = tmp1;\n            first = tmp1;\n            second = tmp2;\n        }\n    }\n}\n","cpp":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n\nclass Solution {\npublic:\n    void reorderList(ListNode* head) {\n        ListNode* slow = head;\n        ListNode* fast = head->next;\n        while (fast != nullptr && fast->next != nullptr) {\n            slow = slow->next;\n            fast = fast->next->next;\n        }\n\n        ListNode* second = slow->next;\n        ListNode* prev = slow->next = nullptr;\n        while (second != nullptr) {\n            ListNode* tmp = second->next;\n            second->next = prev;\n            prev = second;\n            second = tmp;\n        }\n\n        ListNode* first = head;\n        second = prev;\n        while (second != nullptr) {\n            ListNode* tmp1 = first->next;\n            ListNode* tmp2 = second->next;\n            first->next = second;\n            second->next = tmp1;\n            first = tmp1;\n            second = tmp2;\n        }\n    }\n};\n","java":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\n\nclass Solution {\n    public void reorderList(ListNode head) {\n        ListNode slow = head;\n        ListNode fast = head.next;\n        while (fast != null && fast.next != null) {\n            slow = slow.next;\n            fast = fast.next.next;\n        }\n\n        ListNode second = slow.next;\n        ListNode prev = slow.next = null;\n        while (second != null) {\n            ListNode tmp = second.next;\n            second.next = prev;\n            prev = second;\n            second = tmp;\n        }\n\n        ListNode first = head;\n        second = prev;\n        while (second != null) {\n            ListNode tmp1 = first.next;\n            ListNode tmp2 = second.next;\n            first.next = second;\n            second.next = tmp1;\n            first = tmp1;\n            second = tmp2;\n        }\n    }\n}\n","csharp":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     public int val;\n *     public ListNode next;\n *     public ListNode(int val=0, ListNode next=null) {\n *         this.val = val;\n *         this.next = next;\n *     }\n * }\n */\n\npublic class Solution {\n    public void ReorderList(ListNode head) {\n        ListNode slow = head;\n        ListNode fast = head.next;\n        while (fast != null && fast.next != null) {\n            slow = slow.next;\n            fast = fast.next.next;\n        }\n\n        ListNode second = slow.next;\n        ListNode prev = slow.next = null;\n        while (second != null) {\n            ListNode tmp = second.next;\n            second.next = prev;\n            prev = second;\n            second = tmp;\n        }\n\n        ListNode first = head;\n        second = prev;\n        while (second != null) {\n            ListNode tmp1 = first.next;\n            ListNode tmp2 = second.next;\n            first.next = second;\n            second.next = tmp1;\n            first = tmp1;\n            second = tmp2;\n        }\n    }\n}\n"},"starterCode":{"python":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\n\nclass Solution:\n    def reorderList(self, head: Optional[ListNode]) -> None:\n        ","javascript":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     constructor(val = 0, next = null) {\n *         this.val = val;\n *         this.next = next;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {ListNode} head\n     * @return {void}\n     */\n    reorderList(head) {}\n}\n","cpp":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n\nclass Solution {\npublic:\n    void reorderList(ListNode* head) {\n        \n    }\n};\n","java":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\n\nclass Solution {\n    public void reorderList(ListNode head) {\n        \n    }\n}\n","csharp":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     public int val;\n *     public ListNode next;\n *     public ListNode(int val=0, ListNode next=null) {\n *         this.val = val;\n *         this.next = next;\n *     }\n * }\n */\n\npublic class Solution {\n    public void ReorderList(ListNode head) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/S5bfdUTrKLM","embedding":[0.045385707,-0.032397583,-0.020614754,-0.033124916,-0.02094725,0.048835356,-0.061927386,-0.030236358,-0.01679105,0.005309546,0.029696051,0.014920759,-0.04688194,-0.007127884,-0.032085866,-0.032439142,-0.0045198677,-0.04372323,0.003044417,0.033062574,0.009444965,0.0025313857,0.06346518,0.010006052,0.04609226,0.005907,0.05166157,-0.0036626516,-0.022942226,-0.011564627,0.043640103,-0.02157068,0.011512675,0.07589222,-0.034745835,0.024521582,0.04521946,-0.006182348,0.046300072,0.035868008,-0.0340185,-0.02300457,-0.027202332,-0.041187946,0.01659363,0.024978764,0.012364696,-0.021487556,-0.0003513288,0.041167166,-0.009533284,0.008998174,0.0019521153,0.037197992,-0.038278606,-0.002656072,-0.0032626174,0.0609299,0.02591391,0.03979562,0.030776665,-0.03191962,-0.0014533714,0.031046817,-0.019991323,-0.024625488,0.012312744,0.0036886279,0.034538027,-0.031607904,-0.075185664,-0.015502628,-0.008343573,-0.03196118,-0.0056368466,0.012468602,0.02092647,0.0344549,0.005408256,-0.004582211,-0.032293677,0.00357693,0.045801327,0.017372917,-0.061345518,-0.01701964,-0.018775634,-0.039941087,-0.008946221,-0.055152778,-0.02304613,0.00043834926,0.010130739,0.02925965,0.017279403,-0.0034002915,0.03859032,0.04929254,-0.014370063,0.04609226,0.0071330788,-0.02404362,0.0006383664,-0.013996005,0.011855561,-0.021487556,0.031649467,0.0215499,-0.024022838,-0.016146839,-0.025477508,-0.076224715,0.010650263,0.0097099235,-0.0067330445,-0.04249715,-0.047796305,0.009543675,0.002282014,-0.0427673,0.024230648,-0.05544371,-0.017601509,0.0008591646,-0.08661522,0.01079573,0.036408316,-0.049043164,0.03212743,0.0011468516,0.060805213,-0.021071937,-0.043640103,0.025124231,-0.02965449,0.021923957,-0.011575018,-0.012198448,0.01451553,0.02385659,0.017341746,-0.038278606,-0.040606078,-0.022963008,0.040148895,0.04438822,0.01763268,0.0052653863,-0.015045445,0.008078614,0.017871661,-0.0072213984,0.046175387,0.05016534,-0.035847228,-0.016967688,0.013237499,0.0040860646,-0.005254996,-0.026412653,0.011304865,-0.012676411,0.017746976,-0.018941883,0.008961807,0.01244782,-0.013258279,-0.031420875,-0.016946906,-0.06953324,0.023815028,-0.018557435,0.019035397,-0.004179579,0.030672759,0.027368579,-0.030548073,-0.0050627715,0.0038185092,0.028220601,-0.0012747846,0.05914273,-0.047172874,-0.038756568,-0.024002057,0.013923272,-0.014432406,-0.029384337,-0.037675958,-0.011834781,0.007912367,0.052409686,-0.009190398,0.058934923,-0.03507833,0.00840072,0.007875999,-0.017653462,0.007070736,-0.028449193,-0.014214206,0.027285455,-0.011949076,0.01512857,0.031213066,-0.024791736,-0.047339123,-0.0067278496,0.023357846,-0.040294364,0.03403928,0.019139303,-0.0009228064,-0.014681778,0.005855047,-0.05872711,-0.02240192,-0.026246406,0.011814,0.033332728,0.01004242,0.02427221,-0.008426696,0.07501942,-0.007408427,-0.007444794,0.00044127158,0.008515015,-0.021736927,-0.017705414,0.0061927387,-0.0036132967,0.027825762,-0.023628,0.004496489,-0.06708107,-0.0046393587,-0.040543735,-0.03547317,0.027659513,0.017456042,0.030194797,-0.041146383,0.029384337,0.03728112,-0.016157228,-0.020022495,0.010722997,-0.016209181,0.047422245,0.019762732,-0.009522894,0.009081298,-0.070406035,-0.03360288,0.039982647,0.020843346,0.00017858674,0.013486871,-0.0039068284,-0.01204259,-0.012052981,0.019627657,-0.013424527,-0.0038652665,-0.05656589,0.017165108,0.005745947,-0.00694605,0.030236358,-0.010245034,-0.024750173,0.0024092975,-0.03590957,-0.0015702645,0.00076629943,0.040606078,-0.016843002,-0.0027145185,-0.061428644,-0.0027197136,0.010889245,0.009600823,-0.01678066,-0.023960495,0.03341585,-0.013912881,-0.00902415,-0.02780498,-0.04380635,-0.010406087,-0.020760221,-0.029696051,-0.00016072806,-0.009107274,0.040709984,-0.011149008,0.024209868,0.023711123,-0.03297945,0.045801327,-0.044845402,-0.008286425,0.05702307,-0.0018754854,-0.040065773,-0.030942911,-0.010499601,-0.042164654,0.047172874,-0.037821423,0.0439726,0.051370636,-0.017778147,-0.023482533,-0.032896325,-0.031483218,-0.03364444,-0.0037457757,-0.030610416,-0.01327906,-0.0068785115,0.01598059,0.04089701,0.028927155,0.0377383,0.019752342,0.0302987,0.027493266,0.0035457585,-0.007439599,-0.040585298,-0.0148480255,0.004449732,-0.030007767,0.002924926,0.011855561,0.042247776,-0.009268327,0.008463063,0.046424758,0.00777729,0.007159055,0.021736927,-0.05914273,-0.022775978,0.025456727,0.018806808,-0.021757709,-0.0015040251,-0.009507309,-0.037468147,0.048211925,-0.0138921,-0.022859102,0.011533456,0.010125543,0.031088378,-0.0418945,0.029883081,-0.011013931,-0.0031924814,-0.047588494,-0.0013072549,0.009481332,0.019471798,-0.008037052,-0.010354134,-0.032646954,0.037821423,0.031503998,0.009668361,0.00025164496,0.032626174,-0.03632519,0.014183034,-0.006722654,0.028719345,-0.03443412,0.02364878,-0.047962554,-0.0298623,-0.009252741,0.004865352,0.011699704,0.03622129,0.02632953,-0.037675958,-0.014172643,0.0026236016,0.036678467,-0.047380686,0.04783787,0.042330902,0.051744696,0.011356818,0.041749034,0.015720828,0.0034938059,-0.0012319238,0.05332405,0.005117322,-0.02011601,-0.01928477,-0.043640103,-0.06990729,0.0038288997,0.017237842,0.03133775,-0.035223797,-0.007694166,0.028490754,0.011523065,0.051370636,0.014598654,0.021061545,0.034475684,-0.017954785,0.012094543,0.008182519,0.02281754,-0.05560996,0.0017157315,0.0439726,0.050497834,0.005829071,0.0055900896,-0.0060057095,0.037655175,-0.024105962,-0.07664034,0.005156286,0.008281229,-0.06608359,0.0018469115,0.02589313,0.0041613956,0.06309112,0.029405117,-0.048876915,-0.030818226,-0.0148480255,0.018962665,0.008676068,-0.010764559,0.0021534313,-0.01823533,0.05602558,0.015866295,-0.017445652,0.014598654,0.055734646,0.065584846,0.02383581,0.055235904,0.022027861,0.00067213556,-0.017861271,0.008951416,-0.0052446052,-0.00080591324,0.03437178,0.004208153,0.018588606,0.031753372,-0.0064213295,0.012738754,0.012271182,0.011284084,-0.0178301,0.04170747,0.035951134,-0.017559947,-0.02323316,-0.04064764,0.070655406,0.04293355,0.025976252,-0.032023523,-0.00923196,-0.017102765,0.020178353,0.018754855,0.0037743496,-0.023461752,-0.023981277,0.047339123,-0.0074811606,-0.04896004,0.0006520039,0.021716148,0.02510345,0.0046471516,-0.0064005484,-0.0054913796,-0.0011429552,-0.010478821,-0.0514122,0.014744121,-0.031878058,0.016157228,-0.06329893,-0.024812516,-0.018069081,0.007860414,-0.04064764,-0.00028606347,0.015357161,0.017102765,0.054861844,-0.049250975,0.0041899695,0.012427039,0.0079695145,0.0050991382,0.008769583,0.031441655,-0.007730533,0.007590261,-0.008063029,0.020988813,-0.0058030947,0.021965519,-0.022692854,0.010619092,0.03297945,0.010951588,0.001008528,-0.012302353,-0.03549395,-0.005532942,-0.031213066,-0.023482533,0.021030374,0.0016533885,-0.00085461873,0.015471456,-0.029737614,-0.030797444,-0.035701763,0.013341404,0.024812516,-0.009185203,-0.013299841,-0.0031015645,-0.022485044,0.015232475,0.012281572,0.0019430236,0.035119895,0.009200789,0.011294475,-0.01823533,-0.019108132,-0.033727568,-0.031400096,-0.024105962,-0.024189087,0.03590957,0.022443483,0.00560048,-0.024064401,0.02240192,0.0029716834,-0.013185546,-0.01887954,-0.015513018,-0.023669561,0.028449193,0.008416306,0.035805665,-0.011772438,0.022110986,-0.017362528,0.028428411,-0.0007377256,-0.013736242,-0.02589313,-0.0047042994,0.0019430236,-0.014224596,-0.031607904,-0.010941197,-0.014390844,-0.008629311,-0.00051043334,-0.032085866,0.022214891,-0.011460722,-0.008998174,0.039421562,0.025186574,0.042455588,0.038257826,0.024168305,-0.019658828,0.0036418706,-0.004701702,0.005371889,0.005558918,-0.04380635,0.06371455,0.015097398,0.027119208,-0.061096147,-0.028158259,0.024396896,0.020957641,0.0031691028,0.02923887,0.01347648,-0.00850982,0.019773124,-0.009299498,-0.00994371,0.014224596,0.023337066,0.028927155,0.015035055,-0.031088378,0.01907696,0.009569651,0.019149693,0.028947936,0.004054893,-0.015170132,-0.016894955,0.007216203,-0.0027404947,0.0072681555,-0.0064213295,-0.021466775,0.0021521326,-0.0052160313,0.005301753,-0.009309889,0.011491894,0.01286344,-0.013601166,-0.0052705817,0.048045676,-0.033332728,-0.017071594,-0.045759767,-0.013133593,0.014692169,-0.001320243,0.010691825,-0.016406601,0.0067746066,0.029280432,-0.026973741,0.05664901,0.013040079,0.023690343,0.033332728,-0.015492237,-0.040148895,-0.017923614,0.011803609,0.0034392558,-0.027223112,0.010380111,0.028490754,0.0030729906,-0.048128802,-0.0035535514,0.011699704,0.020968031,-0.013840147,-0.029903863,0.008276034,0.018339233,-0.0051510907,-0.03935922,-0.036179725,0.012458211,0.008691655,-0.00217681,-0.019554922,0.002495019,0.024791736,-0.02429299,0.03397694,0.027306236,-0.01802752,-0.035390045,0.01077495,-0.041125603,0.015045445,-0.0004510127,-0.025269698,-0.020386163,-0.015253255,0.0101723,0.024708612,0.025997033,0.055152778,-0.009294303,-0.04912629,0.004971855,-0.022692854,0.02738936,0.014453187,-0.023378627,-0.004631566,-0.00079812034,0.017591119,0.019440627,-0.0078240475,0.027202332,-0.01824572,-0.000075452896,0.022734417,-0.0215499,0.009091688,-0.0019222427,-0.018536653,0.018692512,-0.012956955,-0.043224484,-0.001601436,0.01907696,0.01764307,-0.009351451,0.008982589,-0.0037561662,0.034143187,-0.034496464,0.0023274722,-0.015450675,0.036179725,-0.01514935,-0.0057978993,-0.018796416,0.027742637,-0.06117927,0.017975567,-0.011626971,0.009886562,-0.014941541,0.006182348,0.038902037,0.040211238,0.021716148,0.0044055725,-0.0070551503,0.028864812,-0.061303955,-0.007652604,-0.055859335,0.0032496292,-0.030277919,-0.008364353,0.016936516,-0.0099073425,0.005995319,-0.010380111,-0.0076837754,-0.019243209,-0.042143874,-0.007418818,-0.039920304,-0.035597857,0.015014274,0.0050549787,-0.028282944,0.027202332,0.018786026,0.00860853,0.011491894,0.026786711,0.042975113,-0.011533456,0.010296986,-0.0016352051,-0.00849943,0.03173259,-0.018017128,-0.020968031,0.0033093747,0.014432406,0.012416649,0.006546016,0.00091046764,0.009548871,0.020230306,0.013414137,-0.004665335,-0.023898153,-0.025664538,-0.029841518,0.015928637,-0.024189087,0.0057771187,0.0014676583,-0.01866134,-0.02799201,0.0014637618,-0.037197992,-0.023960495,0.014473968,0.0060680527,-0.014110301,-0.015679266,0.033083357,-0.023544876,-0.02840763,-0.013237499,0.0069200736,-0.031233845,0.032002743,-0.028864812,0.03503677,0.01803791,0.01764307,-0.0650861,-0.008572163,0.045053214,-0.007585066,-0.016136449,-0.007320108,0.0011104848,0.027680295,0.0054238415,-0.012291962,0.032210555,-0.011065884,-0.020656316,-0.0023924129,-0.013569994,0.007299327,-0.02177849,0.03420553,-0.008821535,-0.023129255,0.025394384,-0.032896325,-0.018141815,0.012073762,0.020147182,0.00632262,-0.01285305,-0.045053214,-0.03395616,0.018089863,0.03173259,0.011533456,0.029529804,-0.017206669,-0.0057563377,0.009112469,-0.018817198,-0.002924926,-0.027451703,0.039941087,0.036034256,0.038444854,0.016126057,-0.017123546,0.022298016,0.010416477,0.009715118,-0.02009523,-0.004117236,-0.021903176,-0.017175497,0.021799272,0.0016248146,-0.0050549787,0.03383147,0.01846392,0.009476137,0.0053251316,-0.00456143,0.048211925,-0.015253255,0.032397583,-0.04567664,-0.015700048,0.019710781,-0.0024547558,0.0018352222,-0.005309546,0.008042248,-0.008624116,0.03877735,0.017518384,-0.018567825,0.011439942,0.055152778,0.016936516,0.03524458,0.0057147755,-0.034912083,0.003057405,0.012094543,0.0014637618,0.037488926,0.030381825,-0.01657285,-0.008068224,0.026038596,0.018152205,0.028303726,-0.02529048,-0.0025911313,-0.008842316,-0.0037379828,-0.030839007,0.02238114,0.006488868,-0.028927155,0.033311944,0.02695296,0.014203815,0.015533799,-0.01680144,-0.017767757,0.035182238,0.023150036,-0.012572506,0.015533799,0.030672759,0.023357846,-0.031649467,-0.025124231,0.053157803,0.026641244,-0.01244782,0.0002527814,0.021123888,0.006535625,-0.023565656,-0.052575935,0.01658324,0.018193766,0.0059797335,-0.023087693,0.013227108,-0.008753997,-0.01701964,-0.007927952,0.042206217,-0.014027176,-0.047006626,0.044720717,-0.010281401,0.015429894,0.012063372,0.040481392,-0.008868293,0.013964834,-0.008951416,-0.013549213,-0.01326867,-0.042808864,0.005127712,-0.0006231054,0.0605974,-0.018983446,-0.03397694,0.012437429,-0.004184774,0.02589313,-0.0065875775,-0.014577873,-0.038465634,0.021082327,-0.02283832,0.008577359,-0.024500802,-0.032688517,0.030984474,0.021217404,-0.021051155,0.02072905,-0.008722826,0.0049536712,-0.020645926,0.058353055,0.0056108707,-0.0069980025,0.004641956,-0.0045302585,0.020864125,-0.011710094,-0.031046817,0.01698847,-0.03582645,0.01868212,0.010691825,-0.006525235,0.0056108707,-0.008198106,0.014816854,-0.023482533,-0.006234301,0.019419847,0.016302695,-0.018162595,-0.019212035,0.03337429,-0.039296877,-0.010286596,-0.03836173,-0.002495019,-0.010411282,0.009268327,-0.01349726,-0.024937203,0.00003675234,-0.012250401,0.0502069,0.007465575,-0.028033571,-0.007891585,-0.019066568,-0.022505825,-0.048045676,0.0626755,-0.03944234,-0.018328844,0.023731904,-0.0034288652,-0.017934004,0.013881709,0.02674515,0.0010156715,0.017331356,0.0005552424,0.001358558,-0.017206669,-0.0034756225,-0.016396211,-0.0071226885,0.011564627,-0.043473855,-0.020843346,0.004649749,-0.019762732,-0.0048783403,-0.0010487912,0.012427039,-0.013788194,-0.0067070685,-0.032044306,-0.0010968472,0.016489726,0.002904145,-0.010104762,-0.0013975224,-0.029176528,-0.02903106,0.020791393,0.047422245,0.01680144,0.021716148,0.03360288,0.0011962064,0.013206326,-0.037675958,0.029966205,0.004465318,0.036844715,0.023191597,0.012489382,-0.035618637,-0.00476924,-0.029405117,0.02404362,0.0081617385,-0.021882394,0.032397583,0.011980248,-0.014536311,-0.012489382,0.005642042,0.0057927044,-0.031275406,0.02801279,-0.027576389,-0.016001372,0.010520382,0.04621695,0.00085267046,0.028033571,-0.010930807,-0.028885594,-0.0064732824,0.040730763,-0.0032392386,-0.019544533,0.024957983,0.004283484,-0.022173328,-0.004070479,-0.013289451,0.0071226885,0.0068889023,0.0032522269,0.014827245,0.002356046,-0.05785431,-0.06051428,0.0005549177,0.009003369,0.048669107,0.012593287,-0.018900322,0.01846392,-0.01141916,0.0028963522,-0.002550868,-0.007922757,-0.017248232,0.0047822283,0.0038626688,-0.01703003,-0.0074759657,0.010193082,-0.00058998563,-0.0025326847,-0.030922132,-0.029114183,-0.021061545,-0.014983103,0.015585751,0.05328249,0.014068739,0.00934106,-0.037468147,-0.0414581,0.010951588,0.0014884393,-0.0046939086,0.006670702,0.023669561,-0.0029015474,0.030651977,0.024189087,-0.007398037,0.032626174,-0.011647752,0.017144326,-0.0017352137,0.016645582,0.04268418,-0.011668533,-0.0050160144,0.019201646,0.005730361,0.031275406,-0.034517244,0.007798071,-0.023316285,-0.014629825,-0.003535368,0.003223653,0.002287209,0.0054809893,0.02635031,-0.026765931,0.02653734,0.0034548417,0.006244691,-0.015751999,-0.0020988812,0.035577074,-0.044845402,-0.0038808521,-0.005855047,-0.010889245,-0.0050705643,0.025248917,0.011086664,0.004457525,0.008691655,0.0069668307,-0.0012682906,-0.027514046,-0.037696738,-0.0037120064,0.022485044,-0.015793562,0.012271182,-0.015107788,-0.039296877,0.02177849,-0.03210665,0.0015118179,0.000504264,-0.010520382,-0.025228137,0.019139303,-0.0048497664,-0.012780316,-0.019648438,-0.0029353166,0.03275086,0.005740752,-0.0024028034,-0.036657687,0.019710781,-0.010546358,0.0101982765,0.0057719233,-0.060223345,0.013642727,-0.05914273,0.013788194,0.022775978,0.0058342665,0.00057894574,0.0063174246,-0.013528433,-0.025622975,0.03507833,-0.020282257,-0.009595628,-0.0037509708,0.0047822283,0.027098427,-0.019128913,-0.026080158,-0.009699533,0.0033379484,0.017123546,0.027493266,-0.012738754,-0.026620464,-0.044845402,-0.0068577304,0.024770955,0.017144326,-0.017269013,-0.0257061,-0.0013533628,0.06712264,0.010520382,-0.02759717,0.010380111,-0.015076617,-0.0427673,0.021508338,-0.03711487,-0.024791736,0.033291165,-0.024667049,-0.0076785805,0.009491723,-0.03406006,0.039567027,-0.016707925,-0.003389901,-0.025352823,-0.053531863,0.03647066,0.0032132624,-0.004457525,-0.019035397,-0.03233524,0.029321995,-0.013382966,0.0161884,-0.009367037,0.00013304711,0.012967345,-0.018308062,-0.019638047,0.027659513,-0.0013728449,-0.0007708453,0.028989498,0.045510393,-0.010910026,-0.01140877,0.0018650949,-0.014245377,0.010208667,0.054196853,0.004130224,0.06728888,-0.011730876,0.019430237,0.0013118008,-0.027098427,-0.037385024,0.023066912,0.0065875775,0.04355698,-0.033914596,0.010806121,0.012167277,0.051370636,0.027410142,-0.007242179,0.005117322,-0.023212379,0.0073460843,-0.043016676,0.006961636,0.0010267114,-0.012697192,-0.04027358,0.019212035,-0.03545239,-0.018141815,-0.0011033413,0.03528614,-0.009117665,0.013455699,-0.0010208667,-0.016884563,0.0032418363,-0.0017495006,0.0017988555,-0.025248917,0.0020222513,-0.01659363,-0.021612242,0.025685318,-0.028469972,-0.009767071,-0.020510849,-0.006982417,0.021321308,-0.030714322,0.048876915,-0.012364696,-0.032792423,-0.053033117,-0.03146244,-0.037572052,0.006140786,-0.00029515516,0.030755883,0.024750173,0.011263303,-0.0010247632,0.002862583,-0.018391186,0.011024321,0.03233524,-0.022713635,-0.009554066,0.023170818,0.026163282,-0.010250229,-0.033914596,0.00011997782,-0.007439599,-0.020375773,0.023565656,-0.015533799,0.031483218,0.0031976767,0.0033950962,-0.062966436,-0.035805665,0.006312229,-0.010722997,0.019554922,0.0038938404,0.023108475,-0.024376115,0.027908886,0.008972198,-0.010530773,-0.0026508765,0.0013156972,-0.023877371,0.015159741,-0.029841518,0.0022313602,-0.038715005,-0.011886734,0.019752342,-0.017736586,0.006681092,0.014484358,0.041125603,-0.029363556,0.0061252005,0.01929516,0.03420553,0.009543675,0.05290843,0.011169788,-0.012156886,0.0277842,-0.0052004457,0.041000918,0.018495092,0.034974426,-0.029384337,0.033769127,0.026474997,0.0016442968,-0.00024125444,0.027077645,0.024812516,0.0106814355,0.009959295,0.02073944,-0.003111955,0.033519756,0.037218776,-0.009086493,-0.029280432,0.035784885,0.014494749,-0.030984474,-0.0102917915,-0.015928637,-0.0100528095,0.020978421,-0.023960495,0.02013679,0.013331013,-0.0031249432,-0.0037743496,-0.011949076,-0.03254305,0.0056576277,-0.024833297,-0.020552412,0.03437178,-0.0021651206,-0.0344549,0.0070811263,-0.02780498,0.0030366238,-0.026246406,0.02448002,0.044720717,0.005304351,0.041374974,0.038881253,0.018952275,0.0273478,-0.007694166,-0.02901028,-0.024708612,-0.019035397,-0.012177668,0.003854876,-0.02903106,0.027534828,0.030880569,-0.015014274,0.022713635,-0.01307125,-0.03156634,0.027971229,0.023129255,-0.012499773,-0.029280432,0.004361413,-0.016759878,0.030963693,0.008868293,0.033769127,-0.012905003,0.016011762,-0.03879813,0.00786561,0.0064213295,0.009018955,0.020354992,0.02283832,-0.024978764,0.030714322,-0.007631823,-0.004865352,0.008172129,-0.011990638,0.013757023,-0.025810005,0.0368655,0.023150036,0.015014274,0.044970088,0.030714322,0.009735899,0.03487052,-0.004195165,0.014016786,0.0010481417,0.0035379657,0.0011312658,-0.0078240475,0.012717973,0.0046081874,-0.041374974,0.009813828,0.021944739,-0.0014364867,0.034101624,-0.024667049,-0.019419847,0.044346657,0.0007675983,0.016926127,-0.031420875,-0.03110916,-0.021258965,-0.032896325,0.018287282,0.0414581,-0.034309436,-0.020147182,-0.02635031,-0.021404432,0.010691825,-0.01307125,0.00069226715,0.014858416,0.0045094774,0.010219058,-0.016011762,0.0076370183,0.0031223455,0.0015066226,0.004166591,0.023524094,0.025269698,0.012312744,-0.008011077,-0.02134209,-0.015866295,0.011045103,0.03859032,0.0045562345,0.010754169,-0.0004217894]},{"id":"remove-node-from-end-of-linked-list","name":"Remove Node From End of Linked List","description":"You are given the beginning of a linked list `head`, and an integer `n`.\n    \nRemove the `nth` node from the end of the list and return the beginning of the list.\n\n**Example 1:**\n\n```java\nInput: head = [1,2,3,4], n = 2\n\nOutput: [1,2,4]\n```\n\n**Example 2:**\n\n```java\nInput: head = [5], n = 1\n\nOutput: []\n```\n\n**Example 3:**\n\n```java\nInput: head = [1,2], n = 2\n\nOutput: [2]\n```\n\n**Constraints:**\n* The number of nodes in the list is `sz`.\n* `1 <= sz <= 30`\n* `0 <= Node.val <= 100`\n* `1 <= n <= sz`\n","difficulty":"Medium","concepts":["Singly Linked Lists"],"solutions":{"python":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\n\nclass Solution:\n    def removeNthFromEnd(self, head: Optional[ListNode], n: int) -> Optional[ListNode]:\n        dummy = ListNode(0, head)\n        left = dummy\n        right = head\n\n        while n > 0:\n            right = right.next\n            n -= 1\n\n        while right:\n            left = left.next\n            right = right.next\n\n        left.next = left.next.next\n        return dummy.next\n","javascript":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     constructor(val = 0, next = null) {\n *         this.val = val;\n *         this.next = next;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {ListNode} head\n     * @param {number} n\n     * @return {ListNode}\n     */\n    removeNthFromEnd(head, n) {\n        const dummy = new ListNode(0, head);\n        let left = dummy;\n        let right = head;\n\n        while (n > 0) {\n            right = right.next;\n            n--;\n        }\n\n        while (right !== null) {\n            left = left.next;\n            right = right.next;\n        }\n\n        left.next = left.next.next;\n        return dummy.next;\n    }\n}\n","cpp":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n\nclass Solution {\npublic:\n    ListNode* removeNthFromEnd(ListNode* head, int n) {\n        ListNode* dummy = new ListNode(0, head);\n        ListNode* left = dummy;\n        ListNode* right = head;\n\n        while (n > 0) {\n            right = right->next;\n            n--;\n        }\n\n        while (right != nullptr) {\n            left = left->next;\n            right = right->next;\n        }\n\n        left->next = left->next->next;\n        return dummy->next;\n    }\n};\n","java":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\n\nclass Solution {\n    public ListNode removeNthFromEnd(ListNode head, int n) {\n        ListNode dummy = new ListNode(0, head);\n        ListNode left = dummy;\n        ListNode right = head;\n\n        while (n > 0) {\n            right = right.next;\n            n--;\n        }\n\n        while (right != null) {\n            left = left.next;\n            right = right.next;\n        }\n\n        left.next = left.next.next;\n        return dummy.next;\n    }\n}\n","csharp":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     public int val;\n *     public ListNode next;\n *     public ListNode(int val=0, ListNode next=null) {\n *         this.val = val;\n *         this.next = next;\n *     }\n * }\n */\n\npublic class Solution {\n    public ListNode RemoveNthFromEnd(ListNode head, int n) {\n        ListNode dummy = new ListNode(0, head);\n        ListNode left = dummy;\n        ListNode right = head;\n\n        while (n > 0) {\n            right = right.next;\n            n--;\n        }\n\n        while (right != null) {\n            left = left.next;\n            right = right.next;\n        }\n\n        left.next = left.next.next;\n        return dummy.next;\n    }\n}\n"},"starterCode":{"python":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\n\nclass Solution:\n    def removeNthFromEnd(self, head: Optional[ListNode], n: int) -> Optional[ListNode]:\n        ","javascript":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     constructor(val = 0, next = null) {\n *         this.val = val;\n *         this.next = next;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {ListNode} head\n     * @param {number} n\n     * @return {ListNode}\n     */\n    removeNthFromEnd(head, n) {}\n}\n","cpp":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n\nclass Solution {\npublic:\n    ListNode* removeNthFromEnd(ListNode* head, int n) {\n        \n    }\n};\n","java":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\n\nclass Solution {\n    public ListNode removeNthFromEnd(ListNode head, int n) {\n\n    }\n}\n","csharp":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     public int val;\n *     public ListNode next;\n *     public ListNode(int val=0, ListNode next=null) {\n *         this.val = val;\n *         this.next = next;\n *     }\n * }\n */\n\npublic class Solution {\n    public ListNode RemoveNthFromEnd(ListNode head, int n) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/XVuQxVej6y8","embedding":[0.043356422,-0.018228458,-0.008686918,-0.028932074,0.008535796,0.027994076,-0.037582513,-0.0071704853,-0.0033976429,0.0091819735,0.053528506,-0.023387454,-0.08133498,-0.040021315,-0.034560073,-0.027556341,-0.0006272872,-0.02449221,0.0093904175,0.076082185,0.04187647,0.05006833,0.042147446,-0.009364362,0.07087108,-0.0010773967,0.044273578,0.013840704,-0.0076238518,-0.021949189,0.01297566,-0.01776988,0.017332148,0.07324734,0.0068317633,0.02970332,0.052111086,-0.033726294,-0.0043825423,0.036352694,-0.03026612,-0.03433078,-0.027389586,-0.019343635,0.018176347,-0.0089943735,-0.03506034,-0.034935273,0.019197723,0.013267483,0.0063679744,-0.017269613,0.0067952857,0.054737482,-0.091548756,-0.022824656,0.016550481,0.0460662,0.029578252,0.018697457,0.020906968,-0.020708945,0.0025938293,0.006227275,0.0021417656,-0.01269426,-0.014518148,0.0061230524,0.005747853,0.0067014857,-0.061032504,0.010964172,-0.042856157,0.0028635042,-0.037582513,0.0049844254,0.022574522,0.015341504,-0.004705631,-0.012840171,-0.005904186,0.025284298,0.0038770647,0.010505594,-0.012298216,-0.054612417,-0.034935273,-0.036394384,-0.049234554,-0.055279437,0.0025534432,-0.000683958,0.032350563,0.023616744,0.007259074,0.018812101,0.020000234,0.0020505711,0.0068369745,0.018311836,0.0002853082,-0.03422656,-0.0093330955,-0.008124118,0.0019828267,-0.030141052,0.019385323,0.008191862,-0.057363883,0.038207848,0.009161129,-0.027869008,-0.026826786,0.022428611,-0.0013705215,0.019489545,-0.03614425,0.025075855,-0.0004608574,-0.00029752174,0.044482023,-0.03333025,-0.0047395034,-0.0063627637,-0.06857819,0.00090217317,0.010542072,-0.035977494,0.038291227,0.015591636,0.07128797,-0.014215904,-0.010187717,0.015028837,-0.029432341,-0.0033012372,-0.023241544,-0.021886656,0.036019184,0.03872896,0.029328119,-0.01556037,-0.029265586,-0.01951039,0.035998337,0.02726452,0.011943861,0.010250251,0.01602937,0.044898912,0.008530585,0.01241286,0.034956116,0.023053944,-0.030828917,-0.026243143,-0.027097763,0.025513588,0.022720434,-0.015956415,-0.032725763,-0.044440333,0.03205874,0.0031579318,0.01772819,0.043564867,-0.003858826,-0.03939598,-0.013173683,-0.049151175,0.036373537,-0.046691533,0.030828917,-0.0024544322,0.020417124,0.05161082,0.022928877,-0.020146146,0.0061386856,0.044482023,-0.01029715,0.005919819,-0.04610789,0.005513353,-0.039833713,0.009927162,-0.008259607,-0.040938467,-0.05198602,-0.0008200982,0.009713506,0.038520515,-0.015070526,0.026222298,-0.05344513,0.01363226,-0.0038405869,-0.023825187,0.06149108,-0.034580916,0.0003212974,0.045941133,-0.0031813818,0.009911529,0.04114691,-0.024638122,-0.04112607,0.037811805,0.036040027,-0.059906904,0.03591496,0.014935037,0.021740744,-0.036352694,-0.003606087,-0.015914725,-0.0012565285,-0.024137855,0.030891452,0.046316333,0.03430994,0.042439267,0.01565417,0.04965144,0.02110499,-0.022574522,-0.016519213,-0.022678744,0.0054977196,0.018259725,-0.00082205236,-0.013830282,0.03756167,-0.020041924,-0.028390119,-0.03699887,-0.0054143416,-0.016185703,-0.02707692,0.049443,0.010995439,0.017571857,-0.028577719,0.025451055,0.02355421,-0.01236075,-0.016998636,0.023053944,-0.020740211,0.052444596,0.041292824,-0.017082013,0.030328652,-0.040584113,-0.024700655,0.013475927,0.01753017,-0.0064096637,0.015164326,-0.040292293,0.0078010294,-0.023241544,0.033580385,-0.043481488,0.008072007,-0.04760869,0.03397643,0.0445654,0.003897909,0.016446259,-0.032704916,-0.044273578,0.01278806,-0.044857223,-0.0018773018,0.02684763,0.035706516,-0.003098004,-0.043731622,-0.07178823,-0.0016011131,-0.018290991,0.023429144,-0.007493574,-0.01325706,-0.015404037,-0.040646646,0.020521345,0.002133949,-0.048484154,-0.014674482,0.00088588847,-0.01151655,-0.004903653,-0.016654702,0.0073424517,0.009234085,-0.015320659,0.044273578,-0.046941664,0.015727125,-0.037103094,-0.02007319,-0.01241286,-0.0047316863,-0.0685365,-0.007905251,0.023429144,-0.029640784,0.01608148,-0.0434398,0.001922899,0.011672883,0.044815533,-0.018436901,-0.01753017,-0.023470832,-0.018843368,-0.00014078135,-0.037707582,-0.009687451,-0.0045440868,-0.013715638,0.052527975,0.034435004,0.023908567,-0.008702551,0.032371406,0.014486882,0.010583761,-0.0035565817,-0.029932607,0.018072125,-0.0055863084,-0.032600693,-0.030724695,0.021167522,-0.010797417,-0.005706164,0.025492743,0.024763187,0.011401906,0.055863082,-0.018582813,-0.014789126,0.012558771,-0.01509137,-0.010495173,0.000888494,0.008551429,-0.047650374,-0.022949722,0.03055794,0.015018415,-0.017144548,0.019770946,-0.0072955517,0.018958014,-0.026389053,0.02520092,-0.044315267,-0.005664475,-0.048817664,-0.0046926034,0.022908034,0.015487415,0.030432874,-0.035789892,-0.027139453,0.035789892,0.044523712,0.035289627,0.034851894,0.015779236,-0.03059963,0.003963048,-0.0243463,0.018582813,-0.002980754,0.003723337,-0.05044353,-0.0212509,-0.0031631428,0.011579083,0.025826253,0.024742343,0.017082013,-0.002355421,-0.034518383,-0.0024648544,0.028744474,-0.05223615,0.07070432,-0.010995439,0.03827038,0.0115373945,0.008494107,0.025180077,0.016529636,0.033726294,0.031204117,0.00430177,-0.00029149637,-0.05040184,-0.011464438,-0.06144939,0.008051163,0.04310629,0.030015985,-0.030870607,0.01593557,0.036832117,-0.009604073,0.030474562,0.016300347,0.009609284,-0.013799015,0.016571324,0.002063599,0.0072955517,0.026118075,-0.03191283,0.009505062,0.030641317,0.03395558,0.0085045295,0.036415227,0.018978857,0.05332006,-0.02684763,-0.02778563,0.06161615,-0.010745306,-0.011902172,-0.019948123,0.004197548,0.008827617,0.049192864,0.009864628,-0.009109017,-0.041063536,-0.031996205,0.027139453,0.032829985,-0.009010007,0.0043356423,-0.018666191,0.03647776,-0.007160063,0.017821992,-0.036206782,0.047775444,0.039896246,0.03205874,0.044815533,-0.025138387,0.03643607,-0.041730557,0.031224962,-0.020646412,-0.025117543,0.006962041,0.016800614,-0.0011933439,-0.005518564,-0.019145614,-0.0006204476,0.004471131,0.00011700567,0.0045154253,0.043564867,0.013246638,-0.0026263986,-0.017988747,-0.028390119,0.061282635,-0.019614613,0.017967902,-0.027368741,-0.011495706,-0.022199322,0.016758924,0.0060657305,-0.020469233,-0.01067235,-0.05090211,0.054695796,0.01198555,-0.015476992,0.0001437126,0.034205716,0.01589388,0.013319593,-0.0066076857,-0.02557612,-0.004762953,0.0060605193,-0.021094568,-0.006472197,-0.021594834,-0.011902172,-0.02072979,-0.01335086,0.0015985075,0.0049244976,-0.08196031,0.0076082186,0.024992477,-0.021824123,0.045774378,-0.051318996,-0.0072278073,0.0022056017,-0.009124651,0.015675014,-0.011662461,-0.0057999636,-0.007816663,-0.0063523413,0.0012213535,0.006915141,0.008864095,-0.020323323,-0.02007319,-0.015529104,0.021177946,0.00081618986,-0.043189667,-0.004333037,-0.015810503,0.017415525,-0.047692064,0.0024114405,0.042335045,-0.024367144,0.005456031,0.0228455,-0.00022130927,-0.043231357,-0.00869734,0.027160298,0.005336175,-0.003723337,-0.01076615,-0.010062651,-0.021636523,-0.0010474328,0.014695326,0.011506127,0.016071059,-0.01960419,0.0061647412,-0.023908567,-0.029119674,-0.023116477,-0.017373836,-0.03693634,0.00090673286,0.03516456,0.019437434,0.0144764595,-0.03624847,0.031600162,0.027869008,0.012590039,-0.002764493,-0.00620643,-0.002881743,0.0010545981,-0.01085995,0.03399727,-0.020229524,0.005810386,-0.02984923,0.033809673,-0.03797856,-0.0042652925,-0.018655768,-0.0022290517,-0.003712915,-0.028431809,-0.055529572,-0.036727894,-0.029348964,0.003892698,0.0033012372,0.000300453,0.010057439,-0.010807839,-0.033100963,0.003197015,-0.0042157867,0.04225167,0.036790427,-0.020479657,-0.026055543,0.019812634,-0.0037728425,0.0067483857,-0.012464971,-0.024221232,0.036540292,0.013017349,0.05227784,-0.0147578595,-0.009286195,0.0007907857,0.022866344,0.03022443,0.005312725,0.015206015,-0.00074388576,0.0235959,0.0033924317,-0.0017574463,0.007061052,0.0053101196,-0.004757742,0.013799015,-0.02002108,0.022949722,0.008389885,0.012892283,0.041709714,0.009765618,-0.0121210385,-0.06882832,-0.0006067685,0.031079052,-0.010635872,-0.024283765,0.009937584,0.00079990516,0.008983951,-0.021615678,-0.01372606,0.014497304,-0.012444127,-0.00634713,-0.025972165,0.023179011,-0.042814467,-0.029182207,-0.009124651,-0.01608148,-0.010505594,-0.036957182,0.021886656,-0.032392252,-0.013799015,-0.0005986261,-0.0003247172,0.025680343,-0.034914427,0.030307807,0.045440868,-0.0077124406,-0.0066962745,0.022699589,0.019781368,-0.00015861311,-0.025284298,0.004330431,0.019583346,-0.0239711,-0.032475628,0.018040858,0.0014187243,0.020719368,-0.056154907,-0.035956647,0.03328856,0.030432874,-0.0142680155,-0.014153371,-0.020604722,-0.016112747,0.032454785,-0.0017861074,-0.0249091,-0.008671285,0.020250367,-0.024325455,0.05786415,0.016936103,-0.022053411,-0.015435304,0.00448937,-0.017967902,0.013830282,0.019916857,-0.0036503815,0.0046613365,-0.010516017,-0.0028035764,0.016758924,0.013027771,0.0704125,0.009275774,-0.057739083,-0.009129862,0.0040646647,0.011255994,0.015404037,-0.027097763,-0.0040412145,-0.021990879,0.019948123,0.0010357078,-0.028014919,-0.0059302417,-0.011068394,-0.010985017,0.018895479,-0.01612317,-0.00009339284,0.014403504,0.009176762,0.003892698,-0.03116243,-0.03399727,-0.016613014,-0.0054456084,0.010510806,-0.011923016,0.018124236,-0.014976726,0.039562736,-0.0153623475,-0.03902078,-0.024513055,0.0213447,-0.014997571,0.017665658,-0.014903771,0.045524243,-0.06636868,0.004640492,-0.01207935,0.0001509593,-0.01659217,0.017894946,0.046274643,0.018916324,0.018541124,0.027327053,-0.024784032,0.0027332264,-0.06624361,0.020281635,-0.09329969,0.003290815,-0.018155502,-0.028265053,0.01936448,0.0026667847,0.0047030253,-0.023116477,0.006951619,-0.017102858,-0.05598815,-0.029328119,0.01574797,-0.0014942854,0.004179309,-0.0066076857,-0.013496771,0.03441416,0.03337194,0.0061282637,0.020563034,0.014257593,0.035977494,-0.0010344051,-0.0049479473,-0.0020662046,-0.008525373,0.014236748,-0.033309404,-0.010682773,0.012631727,0.0012493633,0.006477408,-0.019541657,0.016331615,0.021125834,-0.0070454185,0.011068394,-0.023387454,-0.0681613,-0.004518031,-0.01114135,-0.015539526,-0.038916558,0.009041273,-0.0071287965,-0.028536031,-0.03299674,0.021740744,-0.06265837,-0.023158167,0.04677491,0.042647712,-0.030474562,0.014049148,0.064617746,-0.013580149,-0.018582813,-0.0017835019,0.028306741,-0.041813936,0.057322193,-0.03591496,0.014726592,0.033434473,0.015966836,-0.020187834,-0.006873452,0.037123937,-0.01344466,0.009948006,0.000004033011,0.0037493927,0.017707346,-0.018197192,0.016613014,0.039416824,-0.007644696,0.008061585,-0.007248652,-0.010516017,0.019249834,-0.03205874,0.026076388,-0.023866877,-0.011130928,0.015383192,-0.00055563444,-0.0018212824,0.037249003,0.0043226145,-0.05161082,-0.035373006,-0.039187536,-0.0072382297,0.0146640595,0.024179544,0.027368741,0.022428611,-0.02745212,-0.036040027,0.017102858,-0.039229225,0.009630129,-0.031245807,0.0198439,0.057697393,0.051694196,-0.0036503815,-0.025680343,0.01335086,-0.011568661,-0.00883804,-0.005132942,-0.0066962745,-0.025325987,-0.044648778,-0.016050214,-0.0140804155,-0.026785098,0.027639719,0.038708113,-0.010396161,0.018020013,-0.0070871077,0.025159232,-0.028661096,0.0008832829,0.0006087226,-0.012527505,0.039854556,-0.0092392955,0.005518564,0.031600162,-0.022866344,-0.027577186,0.03399727,0.0116311945,-0.008707763,-0.02670172,0.036165092,0.009546751,0.017707346,0.0117249945,-0.0468166,-0.003535737,0.022741277,0.0010090009,0.047441933,-0.0054508196,-0.007957363,-0.022095101,0.031808607,-0.0025860127,0.028410964,-0.044398643,0.011860483,-0.01260046,0.014684903,-0.033497006,0.021448923,0.030495407,-0.00672233,0.046524778,0.045149043,0.014497304,-0.009103807,0.014413926,0.046358023,-0.00054325804,0.031850297,-0.019239413,0.0010226801,-0.013059038,0.03220465,-0.003910937,-0.03793687,0.041772246,0.028640252,-0.01236075,-0.008233552,0.012162727,-0.015497836,-0.010714039,-0.031204117,0.005669686,0.020479657,0.004640492,-0.014017882,0.018489012,-0.019281102,0.016550481,-0.019374901,0.004762953,0.013642682,0.0063210744,0.02355421,-0.014195059,0.03187114,-0.002653757,0.018770413,0.012579616,0.008087641,0.0149663035,-0.015112215,-0.056696862,-0.0011542606,0.006143897,-0.0069724633,0.030703852,-0.010229406,-0.024262922,0.033455316,-0.010187717,0.057572328,-0.0032413094,0.031975362,-0.02576372,0.022136789,0.00053804694,0.0021639129,0.00035044705,-0.021615678,0.03474767,0.012110616,-0.019051813,-0.008822407,-0.00076082186,0.004127198,-0.031704385,0.029640784,0.018603658,0.009807306,0.012735949,-0.0097864615,0.026368208,-0.005132942,0.0027723098,0.004851542,-0.0114435945,0.022261856,0.050985485,0.030141052,-0.015779236,-0.0024088349,0.007884407,-0.016852725,0.059073128,0.007634274,0.01734257,-0.017425947,-0.01730088,0.04973482,-0.043815,0.018228458,-0.027889853,0.029619941,0.023846032,-0.001607627,-0.012475394,-0.038583048,-0.03351785,-0.006180375,0.056071527,0.0213447,0.012100194,-0.0031396928,-0.014591103,0.0141742155,-0.011641616,0.0024778822,-0.03722816,0.012193994,0.06845312,-0.027493808,-0.024033632,0.007347663,0.01936448,-0.029828385,0.006717119,0.0058781304,0.020135723,-0.025742875,0.0022720434,-0.026972698,-0.03516456,0.022511989,-0.01659217,-0.023470832,0.018165924,-0.01894759,-0.0017040325,0.008869307,-0.0006552969,0.00019606795,-0.0093330955,-0.05077704,-0.009499851,-0.0036842537,0.0074623073,-0.018499436,0.03149594,-0.016373303,0.0122148385,0.0041714925,0.031245807,0.009416473,0.023116477,-0.012162727,0.011870905,-0.005020903,-0.023720967,0.018322257,-0.00667543,0.022720434,0.012162727,0.0021287377,-0.024054477,-0.0074675186,-0.06190797,0.010922483,0.008645229,-0.022366079,0.022762122,0.0049375254,-0.01010955,-0.03055794,0.01838479,-0.0118187945,0.020239946,0.031975362,-0.03178776,-0.018290991,-0.014601526,0.023804344,-0.003759815,0.005237164,0.01353846,-0.025284298,-0.0011041036,0.033580385,0.011693727,-0.0070871077,0.041855622,0.007816663,-0.022491144,-0.017821992,0.025847098,-0.01269426,0.0052345586,0.022074256,0.022261856,0.01715497,-0.0079208845,-0.009135073,-0.030537097,0.0040360037,0.041772246,-0.022720434,-0.01316326,0.0047238697,0.009791673,-0.020417124,0.028619409,-0.04573269,-0.020333745,-0.007858352,-0.010943328,-0.01753017,-0.01513306,0.028640252,0.0053049084,-0.027806476,0.0049010473,-0.04973482,-0.010615028,-0.017686503,-0.032037895,-0.0020974712,-0.014413926,0.021699056,-0.044773843,-0.0415638,-0.03629016,-0.015977258,-0.021219634,0.004640492,-0.0143618155,-0.021386389,0.009765618,0.029057141,0.0074675186,0.021865811,0.003746787,0.015383192,-0.017832413,0.013913659,0.041105226,0.013569727,-0.020239946,0.015508259,0.00053479,0.0119334385,-0.013600993,-0.0058364416,-0.020677678,-0.00080576766,-0.036748737,0.009890684,0.018645346,-0.0241587,0.0028400542,-0.014247171,0.009489428,-0.0027957598,-0.0037103093,-0.014820392,0.015518681,0.032308873,-0.019260257,-0.002403624,0.031641852,0.0071287965,-0.013340438,0.08120991,-0.0011685911,-0.011923016,0.005951086,0.011975127,0.018749569,0.010172084,-0.011412328,0.0030094152,0.027618876,-0.012902705,0.0018043463,-0.005664475,-0.019270679,0.023512522,0.017082013,0.014288859,0.018301412,-0.0035852427,0.0034497539,0.014726592,-0.0010500384,0.017811568,-0.03835376,-0.011068394,0.045065667,0.0069828853,-0.01527897,-0.014622371,0.022782966,-0.028827852,0.030870607,0.010693194,-0.02392941,0.013976193,-0.049568065,0.021282168,0.03078723,0.022199322,0.012496239,0.039937936,-0.02467981,-0.01677977,0.027827319,-0.019301945,-0.000004381606,0.010755728,0.02520092,-0.0024557349,-0.034580916,-0.008311718,-0.0093330955,-0.012037661,0.015310237,0.011568661,0.008441996,-0.02058388,-0.015987681,-0.019072657,0.0042913477,0.027056076,-0.022407766,-0.007363296,0.005872919,0.06424255,-0.0014643215,-0.04033398,0.030808074,-0.011078817,-0.0037077037,0.007670752,-0.026347365,-0.024575587,0.035748206,-0.025596965,-0.017040325,0.0070402077,0.009906317,0.019906435,-0.01288186,-0.00630023,-0.015602059,-0.031058207,0.036123402,0.00949464,-0.021678211,-0.005810386,-0.006008408,0.018541124,-0.03977118,0.013913659,-0.02355421,0.014257593,0.01706117,-0.016748503,-0.034059804,-0.013413393,0.0017352991,0.00009469561,0.024575587,0.038854025,0.021761589,0.00046965116,0.010500384,0.00097512867,-0.0065555745,0.050985485,0.035518914,0.039541893,-0.005383075,-0.0043512755,-0.007160063,-0.000100395264,-0.03351785,0.008530585,0.0023345766,0.019020546,-0.02759803,0.021052878,0.0068421853,0.012110616,0.0498182,0.034518383,-0.012933971,-0.016925681,0.016487947,0.000028681452,0.0002984988,0.0063992413,0.008754662,-0.016071059,0.0024361932,-0.022741277,-0.0008370343,-0.01278806,0.06003197,-0.0040724813,0.020365013,0.0122148385,-0.003751998,-0.022095101,-0.011099661,0.03610256,-0.026368208,0.019896012,-0.004142831,0.005528986,0.0084107295,-0.03262154,0.00050319766,-0.015070526,0.0032647594,0.019864745,-0.022866344,0.015414459,-0.0072330185,-0.0651597,-0.03539385,-0.004286137,-0.044482023,0.009348729,0.018530702,0.023658432,0.0126108825,-0.0030198374,-0.0034627817,0.015070526,-0.005570675,-0.0016362881,0.04639971,-0.0135905715,0.003910937,0.07629063,0.046608154,-0.03178776,-0.0483174,-0.0003761769,-0.017259192,-0.009979273,0.039416824,-0.02505501,-0.026597498,-0.00446592,-0.012673416,-0.037103094,-0.027493808,0.0051120976,-0.034143183,0.02576372,0.016519213,-0.011735416,-0.026868476,0.008801563,-0.009755195,-0.0050156917,-0.0014004854,0.023095634,-0.015622904,-0.00620643,-0.014914192,0.009723929,-0.03977118,-0.01316326,0.019103924,-0.004718659,0.007795818,0.008342985,0.044815533,-0.027472964,0.026389053,0.025513588,0.014601526,-0.028932074,0.036832117,0.010912062,-0.020938234,0.017894946,-0.011245572,0.025909632,0.013507193,0.017821992,-0.021219634,0.039833713,0.018718302,0.02970332,0.022324389,-0.000958844,0.027994076,0.009703084,-0.0067952857,-0.0141742155,-0.0037077037,0.021824123,0.020365013,0.017832413,-0.0070037297,0.022803811,-0.0041662813,-0.028640252,-0.03643607,-0.009510273,0.0018499435,0.0026941432,-0.028348431,-0.011381061,0.007983418,-0.013288327,-0.012808905,0.012861016,-0.027514653,-0.0015594242,-0.007847929,-0.034205716,0.03925007,-0.006857819,-0.035581447,0.009260139,-0.018895479,0.003783265,-0.0426894,0.030662162,0.06616023,-0.02524261,0.055904772,0.01683188,0.0430646,0.0036086927,-0.009692661,-0.040083848,-0.007305974,0.009546751,0.016811036,0.0028869542,-0.046691533,0.021323856,-0.004997453,0.008009474,0.021303011,0.0070871077,-0.0052111084,0.022616211,0.040625803,-0.018353524,-0.012861016,-0.009187184,0.004116776,0.033767983,0.03145425,0.01546657,0.017967902,-0.0012037661,-0.04085509,0.0021417656,0.039145846,0.03437247,0.025680343,0.044148512,-0.03656114,0.012235682,-0.006227275,0.0055498304,0.02520092,0.01250666,0.021115411,-0.0015672409,-0.007055841,0.03539385,0.0034758095,0.05011002,0.05327837,0.00505217,0.043731622,0.011860483,-0.011360217,0.005513353,0.020427546,-0.0039891037,0.018301412,0.03026612,0.019093502,-0.011203883,0.012256527,0.004494581,0.015424881,0.0205943,-0.0043043755,-0.028890386,-0.0016558297,0.022428611,0.0033767982,-0.007300763,-0.01142275,0.009291407,-0.049484685,0.006133475,0.018207613,-0.032684073,0.007795818,-0.014247171,-0.020041924,0.0077749738,-0.01306946,0.0093904175,0.006425297,0.036040027,0.024700655,-0.0017730796,-0.016414993,0.021824123,-0.00106958,-0.015351926,0.042376734,0.03591496,-0.009697873,-0.030349497,-0.002403624,-0.02688932,0.001776988,0.026534965,0.026534965,-0.0065034633,-0.0040255813]},{"id":"linked-list-cycle-detection","name":"Linked List Cycle Detection","description":"Given the beginning of a linked list `head`, return `true` if there is a cycle in the linked list. Otherwise, return `false`.\n\nThere is a cycle in a linked list if at least one node in the list that can be visited again by following the `next` pointer.\n\nInternally, `index` determines the index of the beginning of the cycle, if it exists. The tail node of the list will set it's `next` pointer to the `index-th` node. If `index = -1`, then the tail node points to `null` and no cycle exists.\n\n**Note:** `index` is **not** given to you as a parameter.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/3ecdbcfc-70fc-429a-4654-cf4f6a7dbe00/public)\n\n```java\nInput: head = [1,2,3,4], index = 1\n\nOutput: true\n```\n\nExplanation: There is a cycle in the linked list, where the tail connects to the 1st node (0-indexed).\n\n**Example 2:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/89e6716c-9f65-46da-d7b2-f04a93269700/public)\n\n```java\nInput: head = [1,2], index = -1\n\nOutput: false\n```\n\n**Constraints:**\n* `1 <= Length of the list <= 1000`.\n* `-1000 <= Node.val <= 1000`\n* `index` is `-1` or a valid index in the linked list.\n","difficulty":"Easy","concepts":["Singly Linked Lists","Fast and Slow Pointers"],"solutions":{"python":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\n\nclass Solution:\n    def hasCycle(self, head: Optional[ListNode]) -> bool:\n        slow, fast = head, head\n\n        while fast and fast.next:\n            slow = slow.next\n            fast = fast.next.next\n            if slow == fast:\n                return True\n        return False\n","javascript":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     constructor(val = 0, next = null) {\n *         this.val = val;\n *         this.next = next;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {ListNode} head\n     * @return {boolean}\n     */\n    hasCycle(head) {\n        let fast = head;\n        let slow = head;\n\n        while (fast !== null && fast.next !== null) {\n            fast = fast.next.next;\n            slow = slow.next;\n\n            if (fast === slow) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n","cpp":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n\nclass Solution {\npublic:\n    bool hasCycle(ListNode* head) {\n        ListNode* fast = head;\n        ListNode* slow = head;\n\n        while (fast != nullptr && fast->next != nullptr) {\n            fast = fast->next->next;\n            slow = slow->next;\n            \n            if (fast == slow) {\n                return true;\n            }\n        }\n        \n        return false;\n    }\n};\n","java":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\n\nclass Solution {\n    public boolean hasCycle(ListNode head) {\n        ListNode fast = head;\n        ListNode slow = head;\n        \n        while (fast != null && fast.next != null) {\n            fast = fast.next.next;\n            slow = slow.next;\n            if (fast == slow) return true;\n        }\n        return false;\n    }\n}\n","csharp":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     public int val;\n *     public ListNode next;\n *     public ListNode(int val=0, ListNode next=null) {\n *         this.val = val;\n *         this.next = next;\n *     }\n * }\n */\n\npublic class Solution {\n    public bool HasCycle(ListNode head) {\n        ListNode slow = head, fast = head;\n\n        while (fast != null && fast.next != null) {\n            fast = fast.next.next;\n            slow = slow.next;\n            if (slow.Equals(fast)) return true;\n        }\n        return false;\n    }\n}\n"},"starterCode":{"python":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\n\nclass Solution:\n    def hasCycle(self, head: Optional[ListNode]) -> bool:\n        ","javascript":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     constructor(val = 0, next = null) {\n *         this.val = val;\n *         this.next = next;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {ListNode} head\n     * @return {boolean}\n     */\n    hasCycle(head) {}\n}\n","cpp":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n\nclass Solution {\npublic:\n    bool hasCycle(ListNode* head) {\n        \n    }\n};\n","java":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\n\nclass Solution {\n    public boolean hasCycle(ListNode head) {\n        \n    }\n}\n","csharp":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     public int val;\n *     public ListNode next;\n *     public ListNode(int val=0, ListNode next=null) {\n *         this.val = val;\n *         this.next = next;\n *     }\n * }\n */\n\npublic class Solution {\n    public bool HasCycle(ListNode head) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/gBTe7lFR3vc","embedding":[0.013202311,-0.030560713,0.0049340664,-0.026363267,0.012871478,0.05826799,-0.0244403,-0.02493655,0.02874113,0.010395398,0.06025299,-0.041664302,-0.051320493,-0.020015405,-0.0309329,-0.019477801,-0.029299412,-0.000026351152,0.0146910595,0.040733833,0.056489762,0.033931077,0.06442976,0.012437259,0.07369309,0.0004435878,0.0648433,-0.002605311,-0.024750456,-0.007340361,0.049500912,-0.019601865,-0.011248328,0.073155485,-0.032752484,0.03645368,0.03719805,0.03310399,0.032028787,0.020956213,-0.03312467,-0.03829394,0.023489155,0.005944658,-0.011165619,-0.024047434,0.02365457,-0.011486114,-0.024729779,0.057895802,0.005249392,0.011206973,0.024419622,0.04271883,-0.05806122,-0.008431076,-0.0032540543,0.04300831,0.003326424,0.01080377,0.041064665,-0.015931685,-0.016159132,0.025887694,0.023923373,0.008079566,0.0061979527,-0.014246503,-0.012478613,-0.042636123,-0.0459031,0.014680722,0.0025691262,0.005815427,-0.011961686,0.004380955,0.04195378,0.019684574,0.025370767,-0.0331867,0.015518143,0.036081493,0.053098723,0.003574549,-0.040506385,-0.032731805,-0.023840664,-0.04979039,-0.03285587,-0.040154874,0.008291506,0.009800932,0.042325966,0.006151429,0.06124549,0.02365457,0.034572065,0.039431177,0.0019345985,0.015270018,-0.0028482666,-0.041560914,0.038149197,0.019798297,0.013739915,-0.006673525,0.045158725,0.0038097505,-0.03651571,0.0074747615,0.016779445,-0.046936955,0.0015301034,0.044579767,-0.010834786,-0.020832151,-0.008570647,0.01461869,0.002461864,-0.01744111,0.0523957,-0.05119643,-0.029899046,-0.018340563,-0.06165903,-0.00021387846,-0.0038795357,-0.009956011,0.035295762,0.012664706,0.042263936,0.0000058558117,-0.027955402,0.03403446,-0.013222988,0.01080377,-0.017554834,-0.0319254,0.008880802,0.029299412,0.031946078,-0.033248734,-0.0060583823,0.017389419,0.072162986,0.031594567,0.024812486,-0.0017006892,0.000819329,0.014246503,0.039493207,-0.0034789175,0.039824042,0.05545591,-0.052726533,-0.027252382,-0.024957227,0.0037115344,-0.016965538,0.009537299,0.01983965,-0.033434827,0.014711737,0.006440908,0.0038019966,0.029630244,-0.024502331,-0.016965538,0.008984188,-0.07468559,0.062403403,-0.025122643,-0.023344414,0.012954186,0.0074334075,0.04979039,-0.042160552,-0.059012365,-0.023819987,-0.0055983174,0.026053112,0.07125319,-0.026673423,-0.04003081,-0.03142915,-0.0016179809,0.04478654,-0.013057571,-0.006017028,-0.017224,-0.046812892,0.03510967,0.0015430265,0.03730144,-0.0106900465,-0.013543482,0.033310764,0.011992702,0.015590512,-0.03171863,-0.005887796,0.021338739,0.0015171802,-0.017854651,0.013977701,-0.009490776,-0.03637097,0.02359254,-0.0054070544,-0.038107846,0.027459152,-0.009728562,0.005474255,0.026404621,0.018268194,-0.012954186,0.021731604,-0.0378804,0.06616663,0.0433805,-0.0052726534,0.053719033,0.028575715,0.06079059,-0.016903507,0.021338739,-0.0074851,0.0003437563,-0.008632678,-0.0030033449,-0.0016968122,-0.01681046,0.01843361,-0.024523009,-0.021648895,-0.060831945,-0.0030136833,-0.011754916,-0.022000404,-0.0070353737,-0.012323535,0.006714879,-0.025019258,0.05677924,-0.021628218,-0.028575715,-0.010576323,0.025246706,-0.02274478,0.043835394,0.013202311,-0.022765456,-0.018288871,-0.040713154,-0.023323737,0.009408068,0.01914697,-0.054835595,0.046233933,-0.06703507,0.006704541,-0.012292519,-0.01815447,-0.06418163,-0.03022988,-0.02485384,0.018288871,0.03750821,-0.023137644,0.030126495,0.01729637,-0.027645245,0.023509832,-0.041933104,0.012592337,-0.0013750253,0.023923373,0.006627002,-0.007862457,-0.051361848,0.020005068,0.005877458,0.0140397325,0.038604096,-0.000031843498,0.011610176,-0.026756132,-0.020718427,-0.0618658,-0.04154024,-0.004008767,-0.0029154671,-0.0478881,0.03078816,-0.005474255,0.027438475,-0.016479626,0.034220554,0.048136223,-0.049831744,0.017668558,-0.044455707,0.0052571455,0.016924184,0.011641191,-0.04449706,-0.03777701,0.03355889,-0.030767484,0.038107846,-0.057316843,0.0036572572,0.0025019257,0.0066373404,-0.042388,-0.022786133,-0.057440907,-0.06223799,0.0037761503,-0.011961686,-0.011941009,0.013853638,0.012209811,0.05305737,0.008782586,0.02075978,-0.0051847757,0.03467545,0.007660855,-0.010292013,0.012003041,-0.013998378,-0.025949726,0.012199473,-0.03885222,-0.031801336,-0.013233326,0.0032643927,-0.024398945,0.011217312,0.0221865,-0.010286843,0.018195823,0.020490978,-0.07356902,0.008725724,-0.017472126,0.024709102,0.006704541,-0.017637543,-0.009811271,-0.031656597,0.0374255,-0.011113927,-0.03022988,0.0012522552,-0.032566387,0.048673827,-0.029650921,0.018185485,-0.02423353,-0.020821812,-0.028637744,0.03022988,-0.025867017,0.04228461,-0.013191972,-0.008560308,-0.015931685,0.048756536,0.0498731,0.025908371,0.010917494,0.013957024,0.016407257,0.025970403,-0.00932019,0.032566387,-0.021235352,0.0052002836,-0.016427934,-0.014556659,0.016541658,0.019177984,0.0052287146,-0.0023998327,-0.0049056355,-0.015693897,-0.049831744,-0.020501317,0.013853638,-0.07220434,0.03163592,0.0071697747,0.056903303,0.029568214,0.023075612,0.0628583,0.007572978,0.0007689286,0.034241233,-0.014680722,-0.013615852,0.0401342,-0.0026389114,-0.052312993,0.016159132,0.05586945,0.017317047,-0.008560308,-0.00002453383,0.05198216,-0.018774781,0.055001013,0.0391417,0.03368295,-0.02288952,-0.0033987937,0.027914047,-0.025184674,0.018423272,-0.04230529,0.011920332,0.034365293,0.030250557,0.024977904,0.031139672,0.003982921,0.011620515,-0.037839044,-0.04329779,0.038604096,0.011165619,-0.009992195,-0.0009511453,0.014019055,0.014835799,0.006342692,-0.011568822,-0.0376943,-0.0070043583,-0.0070198663,0.012519968,0.015383742,0.02747983,-0.017182646,0.00932536,0.0042129536,-0.011134603,-0.021152645,-0.007784918,0.05289195,0.04025826,0.018909182,0.012333874,0.0034995945,-0.009201298,-0.010421244,-0.013264342,0.011403405,-0.04511737,0.037177376,0.03461342,0.027024934,0.019994728,-0.035088994,-0.0015753345,0.002107769,0.028265558,-0.004900466,0.027293736,-0.0070353737,0.012488952,-0.026838839,0.010255828,0.084362455,0.029816339,0.033662274,-0.04846706,-0.018816136,-0.027955402,-0.015011555,0.002902544,0.008767079,0.03283519,-0.040237583,0.055993512,0.023468478,-0.040092845,-0.0081209205,0.022289883,0.010271336,0.003460825,-0.006327184,-0.034737483,-0.0014732414,-0.026301237,-0.034406647,0.04362862,-0.027769309,-0.0017872745,-0.035068315,-0.02923738,-0.049418204,0.015735252,-0.07220434,-0.013057571,-0.018299209,0.00060157356,0.025825663,-0.052023515,0.019198662,0.03587472,-0.0002087092,-0.019384755,-0.026425298,-0.00607389,0.005076221,-0.024006082,-0.022972228,0.006880296,-0.001312994,0.02944415,-0.030602068,-0.0014176718,0.008612,0.037983783,0.00911342,-0.017792622,-0.020584026,0.0007333899,-0.0036184876,0.002295155,-0.0013000709,-0.013295357,0.005593148,-0.011331036,-0.0331867,-0.031305086,-0.014804784,0.007216298,0.035192378,-0.008291506,-0.002987837,-0.030126495,-0.031801336,-0.00028883285,-0.014401581,-0.009170282,0.028927224,-0.035357792,-0.004716957,-0.03488222,-0.028865192,-0.018371578,-0.03333144,-0.024336914,-0.035998784,0.01391567,0.027583215,0.005076221,-0.03233894,0.04350456,-0.00019982451,0.0019759526,0.028203527,-0.016190147,-0.011341374,0.017430771,-0.020666733,0.04462112,-0.016376242,-0.005489763,-0.010710724,0.01673809,-0.020211838,-0.023716602,-0.029485505,-0.004582556,-0.0034504863,0.010731401,-0.041064665,-0.04648206,-0.0071956213,-0.0071646054,0.027769309,-0.018102776,0.015507804,-0.013812284,-0.023819987,0.023757957,0.0014771183,0.033724304,0.009651024,-0.025184674,-0.03694993,0.022083113,-0.0073455297,0.009232312,-0.008182951,-0.04187107,0.052106224,0.017420433,0.02628056,-0.01610744,0.0050322823,0.009387391,0.02280681,0.020677073,0.033021286,-0.0049547437,-0.010198966,0.038314614,-0.019881004,-0.022682749,0.025742956,-0.013129941,0.041064665,0.027645245,-0.028224204,0.064016216,0.0154457735,0.01087614,0.017472126,0.00445074,0.014329211,-0.028410297,-0.005805088,-0.022682749,0.011279343,-0.0029051288,-0.0005266192,0.0007572978,-0.027872693,0.00095243764,-0.0010422537,-0.019240016,0.010090412,0.0025471568,-0.01885749,0.014629029,-0.032483682,-0.041933104,-0.04548956,-0.02055301,-0.017947698,-0.003277316,0.017151631,0.0039002127,-0.013129941,0.0068596187,0.038604096,0.022538008,0.009030711,0.0234478,0.025101965,-0.015507804,0.0024928795,0.0027939894,0.033455502,0.007190452,-0.030850193,0.006244476,0.013543482,-0.017927023,-0.044083517,0.019498479,0.027645245,0.0060118586,-0.02987837,-0.03014717,0.02359254,-0.00022244007,-0.024626393,-0.023261707,-0.014990877,0.022538008,-0.0049263127,-0.017968375,-0.0054690856,-0.01144476,0.02077012,-0.04102331,0.011103588,-0.012602676,-0.0025200183,-0.024709102,0.014877154,-0.024915872,0.021566186,-0.003220454,-0.01441192,-0.034510035,-0.0049030506,0.0011553314,0.00037735657,0.03502696,0.03144983,0.0004610341,-0.0488806,0.0016192732,-0.044538412,0.02838962,0.016903507,-0.028410297,-0.022620717,0.0062186294,0.02832759,-0.0009879763,-0.013181633,-0.013150618,0.017782282,-0.0024101713,-0.0007695748,-0.03329009,0.006957835,-0.020677073,-0.01983965,0.015693897,-0.014804784,-0.047764037,0.012819785,-0.012209811,0.019922359,-0.006787249,0.029609568,-0.017761605,0.041354146,-0.037487533,-0.0034582403,-0.021979729,-0.008151935,-0.0022382932,0.024812486,-0.012954186,0.040733833,-0.0588883,0.031036286,-0.026135819,-0.031966753,0.0007443746,0.03370363,0.042325966,0.03604014,0.032256234,-0.003876951,-0.0053501925,0.028079465,-0.071418606,0.011165619,-0.009356375,0.0032928237,-0.012292519,-0.042553414,0.019901682,0.014081086,-0.003241131,0.01581796,0.01652098,-0.03333144,-0.011713562,0.0036288262,-0.03891425,-0.01461869,0.032752484,-0.0010086534,-0.026611391,-0.0052778227,0.019364078,-0.0016657966,0.005531117,0.018061422,0.04350456,-0.034716804,-0.028410297,0.015993716,0.016035069,-0.018898845,0.0009685916,-0.014504966,0.011692884,0.02747983,0.03283519,-0.007531624,-0.015135617,0.010421244,0.030684775,0.039307114,-0.020594364,-0.046357997,-0.020780457,-0.008027873,-0.024998581,-0.019756943,0.009826778,0.006937158,-0.012251166,-0.01928137,-0.0008832987,-0.043256436,-0.017782282,0.035254408,0.027376443,-0.005360531,-0.0035642104,0.03595743,-0.02415082,-0.011455098,-0.006420231,0.004140584,-0.045944456,0.056407053,-0.028555037,-0.012488952,-0.008911818,0.060418405,-0.033889722,0.008151935,0.038604096,-0.008394891,0.014081086,0.0027836508,0.008244983,-0.0031765152,0.011000202,0.0030498682,0.019746603,-0.0202015,-0.019870667,-0.00025232488,-0.008126089,0.023509832,-0.002609188,0.02634259,-0.028782485,-0.008012366,0.045241434,0.004807419,-0.0068182647,0.035916075,0.006156598,0.008963511,0.0046497565,-0.065794446,0.0046678493,0.014153456,0.021834988,-0.014680722,0.019798297,-0.021917697,-0.008777417,0.02932009,-0.01884715,-0.02069775,-0.013615852,0.05686195,0.024378268,0.022372592,0.011713562,-0.033310764,0.042388,0.016334888,-0.006513278,-0.011537806,0.010586661,-0.03870748,-0.016541658,0.043587267,-0.002832759,0.010855463,0.018309547,0.02739712,-0.003297993,-0.0060118586,-0.038418,0.016200487,-0.009221974,0.0038149199,-0.024874518,-0.028265558,0.03678451,-0.018991891,0.018557673,0.033889722,-0.017048245,-0.048136223,0.013316034,-0.015621528,-0.012375228,0.0053760386,0.063147776,0.0070198663,0.011506791,0.015094263,-0.013595175,0.03072613,0.0018816136,0.0034944252,0.033724304,0.00565001,0.003411717,0.0021362,-0.010659031,0.01546645,0.043256436,-0.03213217,0.026921548,0.014091425,-0.0011004079,-0.015911007,0.02903061,-0.0019100446,-0.033579566,0.05078289,0.036825866,-0.0029619907,0.011692884,0.025019258,-0.0006584355,0.012106426,0.015021893,-0.02239327,-0.021793634,0.0122304885,0.0063116765,-0.038542062,-0.027417798,0.006658017,-0.00015604727,0.0048901276,-0.015166633,0.009511453,-0.018516319,-0.02563957,-0.061410904,0.022662072,0.014742753,0.009196128,-0.0045360327,0.009940502,-0.011124265,-0.015218325,-0.0034013784,-0.006032536,0.006978512,-0.022475978,0.028513683,-0.033744983,0.009402899,0.012168457,0.046440706,-0.018805798,0.02818285,-0.011113927,-0.03870748,-0.040423676,0.013409082,-0.022786133,0.02578431,0.04054774,-0.01052463,-0.019157307,0.010550477,0.0055879788,0.042470705,-0.008157105,0.032938577,-0.03283519,0.016024731,-0.020087777,0.0029361444,-0.0019371832,-0.022538008,0.026611391,0.038025137,-0.0031015608,-0.008482769,-0.012044394,0.020098114,-0.027438475,0.020377254,0.028968578,-0.027914047,0.019622542,-0.010917494,0.0074954387,-0.01130002,-0.0073713763,0.040382322,0.009196128,0.0042258766,0.015642205,0.0011760085,-0.025598215,-0.015425096,0.017037908,0.00089945266,0.028368942,0.02535009,0.024026759,-0.015611189,0.0034194707,0.021669572,0.0058929655,-0.004112153,-0.03779769,0.0244403,0.017771944,-0.007438577,-0.024254207,-0.032483682,-0.027562538,0.030167848,0.06546361,0.00060932746,-0.005324346,-0.00013512789,0.018257855,0.0053708698,-0.045158725,0.015704237,-0.03794243,0.016117778,0.032504357,-0.009785425,-0.021359416,-0.0011831162,0.007867626,-0.015807621,0.003468579,0.017699573,0.001997922,-0.025804987,0.013646868,0.002796574,-0.021483479,-0.003566795,-0.027583215,-0.020801134,-0.010235151,-0.0070457123,0.0085551385,0.0012884401,0.019829312,-0.047929455,-0.004512771,-0.042470705,-0.005960166,-0.0051537603,-0.016241841,-0.009346036,0.027417798,-0.03178066,0.005670687,0.0025406952,0.013119603,0.0065339548,0.0089324955,0.019198662,-0.016293533,-0.006156598,-0.051940806,0.023075612,0.015363065,0.039017636,0.007112913,0.011558483,-0.035585243,0.009769917,-0.030602068,0.029464828,-0.021318061,-0.023530507,0.0024153406,0.0017472126,-0.049128722,-0.0117239,-0.023882018,-0.017875329,-0.008022704,0.00543807,-0.02160754,0.00840006,0.049459558,0.034013785,-0.014856476,0.00519253,-0.015073585,-0.015559497,0.0058205957,0.032173526,0.005960166,0.010167951,0.028782485,0.010198966,-0.0035642104,-0.003489256,0.009976688,0.037177376,0.01815447,0.015239002,0.009620008,0.018164808,-0.03955524,-0.04747456,-0.0033005776,-0.018051084,0.011599838,-0.011206973,-0.017792622,0.0048927125,-0.006053213,0.0047505572,0.012437259,-0.021162983,-0.01752382,0.007810764,-0.006668356,-0.031160347,-0.021979729,0.012592337,-0.007231806,0.01701723,-0.0073196837,-0.042243257,-0.007407561,-0.03771498,0.00031354843,0.020222176,0.020873504,0.016469289,-0.045365497,-0.031305086,0.0024890027,0.010814109,0.0045179403,-0.017213663,0.017006893,0.015435435,0.0071439287,0.034158524,0.015301034,-0.0015624113,-0.009873302,0.012178795,0.005825765,0.028017433,0.043835394,0.025867017,-0.017410096,0.024709102,0.025536185,-0.0082553215,-0.008937664,-0.0015456112,0.003326424,-0.0160971,0.007598824,-0.011568822,0.014866815,-0.012550983,0.023861341,-0.010286843,0.021194,-0.033744983,0.022227854,0.0068337726,0.007040543,-0.0075057773,-0.024998581,-0.0043887086,-0.025432799,0.008591323,0.022145145,0.0633959,-0.029609568,-0.026383944,0.030188525,0.015828298,0.016324548,-0.00028156358,-0.000493342,-0.025825663,-0.0044016317,-0.02111129,0.010597,0.007784918,-0.018485302,0.015952362,-0.009924995,-0.011961686,0.0014913338,0.005536286,-0.021359416,0.015590512,0.011703223,0.0074489154,-0.0023390937,-0.019002229,0.0023959558,0.024915872,-0.005324346,-0.01630387,0.005515609,-0.015280357,0.016944861,-0.009702716,-0.050906952,0.020615041,-0.047929455,0.004626495,0.020377254,-0.02224853,-0.0036391648,-0.0068854652,-0.049955808,0.0068130954,0.05028664,-0.029630244,0.013305696,0.011506791,0.0011663161,0.010317859,-0.0028094973,-0.0060997363,-0.036639772,0.012003041,0.012127103,0.038542062,-0.034282587,-0.0033910398,-0.024564361,-0.0028999595,0.01610744,0.018474964,-0.016355565,-0.011537806,0.004140584,0.07245246,-0.008653355,-0.00840523,0.03064342,-0.031904723,-0.00017510896,0.0068130954,-0.038666125,-0.02175228,0.05479424,-0.014815122,-0.010659031,-0.009578654,-0.0027629738,0.017037908,-0.011703223,-0.011424082,-0.01652098,-0.057523616,-0.0018803213,0.011692884,-0.019974051,-0.029712953,-0.020615041,0.010080073,-0.020728765,0.027024934,-0.025742956,0.008596493,-0.0038588587,-0.036267586,-0.049170077,0.025763633,0.013533144,0.0009576069,0.012375228,0.05305737,0.0052778227,-0.0354405,0.0100955805,0.010597,-0.011734239,0.031759985,0.01843361,0.04329779,-0.012416582,0.0063943844,-0.009754409,-0.018309547,-0.010250659,0.015745591,0.017927023,0.014980539,-0.015859315,0.018981552,0.0063840463,0.033993106,0.019818975,0.036350295,-0.0058516115,-0.022434624,0.0060118586,-0.014184471,-0.012085749,-0.019519156,0.025908371,0.006156598,-0.014360227,-0.031015608,0.010679708,0.02628056,0.05070018,-0.011237989,0.014370565,0.0009815148,-0.001691643,0.03285587,-0.002624696,0.008456922,-0.0027112812,-0.013677883,-0.013605514,-0.011744577,0.030540036,-0.025432799,0.00031484073,-0.04449706,-0.0045877253,0.02140077,-0.006461585,0.022372592,-0.016345225,-0.0648433,-0.03680519,-0.03333144,-0.033434827,-0.008575816,-0.004479171,0.040340967,0.017203324,0.023840664,0.00021307077,-0.014649706,-0.036433,-0.010617676,0.02365457,-0.0048694503,-0.014515305,0.014070747,0.031946078,-0.04329779,-0.035233732,0.015280357,-0.005903304,-0.00466268,0.027293736,0.013409082,0.02026353,-0.027066289,0.0066373404,0.0045076017,-0.04718508,-0.020253193,-0.029071964,0.014153456,0.0037813196,0.0075367927,-0.010534968,-0.0052364687,-0.010783093,-0.027665922,-0.0003020791,0.006714879,-0.03494425,0.007443746,-0.01688283,-0.004957328,-0.042760186,-0.0028482666,0.030126495,0.000900745,0.015001216,-0.006999189,0.01793736,-0.01630387,-0.005686195,0.0141224405,0.023633894,0.011568822,0.07224569,-0.0047505572,0.017927023,0.02026353,-0.007516116,0.014887492,0.009139266,0.017161971,-0.04011352,0.044869248,0.001247086,0.01984999,-0.008379384,0.025163997,0.015621528,0.0070663895,-0.0077228867,-0.004215538,-0.008172613,0.001153393,-0.020139469,0.036598418,-0.027086964,0.019250354,0.03128441,-0.026218528,-0.018030407,-0.039451852,-0.015931685,0.010628015,0.008007197,0.004174184,0.01914697,0.011331036,-0.00713359,0.0030395295,-0.04151956,-0.007154267,-0.011641191,-0.033931077,0.038521387,-0.035275087,-0.018909182,-0.008684371,-0.016210824,-0.010049057,-0.030808838,0.012302858,0.035833366,0.013615852,0.029671598,0.0063995537,0.029299412,-0.009335699,0.013336712,-0.028803162,0.020356577,0.0060635516,-0.0039519053,0.0113930665,-0.046854246,0.023778632,-0.012437259,-0.012602676,0.031884044,-0.007598824,-0.022165822,0.028555037,0.012096087,-0.035233732,-0.033062637,-0.006983681,0.0077797486,0.013388405,0.010597,0.045820393,0.0047712345,-0.0010138227,-0.01186864,0.023509832,0.03637097,0.03531644,0.016076423,0.0068286033,-0.03134644,0.014556659,0.016200487,0.016148793,0.030994931,0.0117239,-0.0009569608,-0.027438475,0.04025826,0.0266941,0.022662072,0.024957227,0.046936955,0.013450435,0.027521184,0.0044533242,0.011537806,0.010059396,-0.00051466527,-0.016851814,-0.0009976687,-0.0074178996,0.026673423,-0.03262842,-0.014091425,0.05380174,-0.0027216196,0.02634259,-0.028410297,-0.0067355563,0.021483479,-0.0061049056,0.017203324,-0.0523957,-0.014132779,-0.030167848,-0.01638658,0.019364078,0.006017028,0.0073765456,-0.014370565,-0.012178795,-0.022579363,0.023923373,0.0033548549,-0.008291506,0.023158321,0.031511858,0.021855665,0.015342387,0.008089905,0.027769309,0.0022731856,0.012302858,0.021276707,0.019653557,-0.0008736063,-0.043049663,0.009893979,-0.02628056,0.0060635516,0.039844718,0.026756132,-0.0031816845,-0.015156294]},{"id":"merge-k-sorted-linked-lists","name":"Merge K Sorted Linked Lists","description":"You are given an array of `k` linked lists `lists`, where each list is sorted in ascending order.\n\nReturn the **sorted** linked list that is the result of merging all of the individual linked lists.\n\n**Example 1:**\n\n```java\nInput: lists = [[1,2,4],[1,3,5],[3,6]]\n\nOutput: [1,1,2,3,3,4,5,6]\n```\n\n**Example 2:**\n\n```java\nInput: lists = []\n\nOutput: []\n```\n\n**Example 3:**\n\n```java\nInput: lists = [[]]\n\nOutput: []\n```\n\n**Constraints:**\n* `0 <= lists.length <= 1000`\n* `0 <= lists[i].length <= 100`\n* `-1000 <= lists[i][j] <= 1000`\n","difficulty":"Hard","concepts":["Singly Linked Lists","Merge Sort","Heap Properties","Push and Pop"],"solutions":{"python":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\n\nclass Solution:\n    \n    def mergeKLists(self, lists: List[Optional[ListNode]]) -> Optional[ListNode]:\n        if not lists or len(lists) == 0:\n            return None\n\n        while len(lists) > 1:\n            mergedLists = []\n            for i in range(0, len(lists), 2):\n                l1 = lists[i]\n                l2 = lists[i + 1] if (i + 1) < len(lists) else None\n                mergedLists.append(self.mergeList(l1, l2))\n            lists = mergedLists\n        return lists[0]\n\n    def mergeList(self, l1, l2):\n        dummy = ListNode()\n        tail = dummy\n\n        while l1 and l2:\n            if l1.val < l2.val:\n                tail.next = l1\n                l1 = l1.next\n            else:\n                tail.next = l2\n                l2 = l2.next\n            tail = tail.next\n        if l1:\n            tail.next = l1\n        if l2:\n            tail.next = l2\n        return dummy.next\n","javascript":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     constructor(val = 0, next = null) {\n *         this.val = val;\n *         this.next = next;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {ListNode[]} lists\n     * @return {ListNode}\n     */\n    mergeKLists(lists) {\n        if (!lists || lists.length === 0) {\n            return null;\n        }\n\n        while (lists.length > 1) {\n            const mergedLists = [];\n            for (let i = 0; i < lists.length; i += 2) {\n                const l1 = lists[i];\n                const l2 = i + 1 < lists.length ? lists[i + 1] : null;\n                mergedLists.push(this.mergeList(l1, l2));\n            }\n            lists = mergedLists;\n        }\n        return lists[0];\n    }\n\n    /**\n     * @param {ListNode} l1\n     * @param  {ListNode} l2\n     * @return {ListNode}\n     */\n    mergeList(l1, l2) {\n        const dummy = new ListNode();\n        let tail = dummy;\n\n        while (l1 && l2) {\n            if (l1.val < l2.val) {\n                tail.next = l1;\n                l1 = l1.next;\n            } else {\n                tail.next = l2;\n                l2 = l2.next;\n            }\n            tail = tail.next;\n        }\n        if (l1) {\n            tail.next = l1;\n        }\n        if (l2) {\n            tail.next = l2;\n        }\n        return dummy.next;\n    }\n}\n","cpp":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n\nclass Solution {\npublic:\n    ListNode* mergeKLists(vector<ListNode*>& lists) {\n        int n = lists.size();\n        if (n == 0) {\n            return NULL;\n        }\n        \n        while (n > 1) {\n            for (int i = 0; i < n / 2; i++) {\n                lists[i] = mergeTwoLists(lists[i], lists[n - i - 1]);\n            }\n            n = (n + 1) / 2;\n        }\n        \n        return lists.front();\n    }\n\nprivate:\n    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {\n        if (list1 == NULL && list2 == NULL) {\n            return NULL;\n        }\n        if (list1 == NULL) {\n            return list2;\n        }\n        if (list2 == NULL) {\n            return list1;\n        }\n        \n        ListNode* head = NULL;\n        if (list1->val <= list2->val) {\n            head = list1;\n            list1 = list1->next;\n        } else {\n            head = list2;\n            list2 = list2->next;\n        }\n        ListNode* curr = head;\n        \n        while (list1 != NULL && list2 != NULL) {\n            if (list1->val <= list2->val) {\n                curr->next = list1;\n                list1 = list1->next;\n            } else {\n                curr->next = list2;\n                list2 = list2->next;\n            }\n            curr = curr->next;\n        }\n        \n        if (list1 == NULL) {\n            curr->next = list2;\n        } else {\n            curr->next = list1;\n        }\n        \n        return head;\n    }\n};\n","java":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\n\nclass Solution {\n\n    public ListNode mergeKLists(ListNode[] lists) {\n        int size = lists.length;\n        int interval = 1;\n\n        while (interval < size) {\n            for (int i = 0; i < size - interval; i += 2 * interval) {\n                lists[i] = merge(lists[i], lists[i + interval]);\n            }\n\n            interval *= 2;\n        }\n\n        return size > 0 ? lists[0] : null;\n    }\n\n    private ListNode merge(ListNode l1, ListNode l2) {\n        ListNode dummy = new ListNode(0);\n        ListNode curr = dummy;\n\n        while (l1 != null && l2 != null) {\n            if (l1.val <= l2.val) {\n                curr.next = l1;\n                l1 = l1.next;\n            } else {\n                curr.next = l2;\n                l2 = l2.next;\n            }\n\n            curr = curr.next;\n        }\n\n        if (l1 != null) {\n            curr.next = l1;\n        } else {\n            curr.next = l2;\n        }\n\n        return dummy.next;\n    }\n}\n","csharp":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     public int val;\n *     public ListNode next;\n *     public ListNode(int val=0, ListNode next=null) {\n *         this.val = val;\n *         this.next = next;\n *     }\n * }\n */\n\npublic class Solution {\n    \n    public ListNode MergeKLists(ListNode[] lists) {\n        if (lists.Length == 0) {\n            return null;\n        }\n        \n        while (lists.Length > 1) {\n            var mergedLists = new ListNode[(lists.Length + 1) / 2];\n            for (int i = 0; i < lists.Length; i += 2) {\n                var l1 = lists[i];\n                var l2 = (i + 1 < lists.Length) ? lists[i + 1] : null;\n                mergedLists[i/2] = (MergeLists(l1, l2));\n            }\n            lists = mergedLists;\n        }\n        \n        return lists[0];\n    }\n    \n    public ListNode MergeLists(ListNode l1, ListNode l2) {\n        var sorted = new ListNode();\n        var current = sorted;\n        \n        while (l1 != null && l2 != null) {\n            if (l1.val <= l2.val) {\n                current.next = l1;\n                l1 = l1.next;\n            }\n            else {\n                current.next = l2;\n                l2 = l2.next;\n            }\n            current = current.next;\n        }\n        \n        if (l1 != null) {\n            current.next = l1;\n        } else {\n            current.next = l2;\n        }\n        \n        return sorted.next;\n    }\n}\n"},"starterCode":{"python":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\n\nclass Solution:    \n    def mergeKLists(self, lists: List[Optional[ListNode]]) -> Optional[ListNode]:\n        ","javascript":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     constructor(val = 0, next = null) {\n *         this.val = val;\n *         this.next = next;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {ListNode[]} lists\n     * @return {ListNode}\n     */\n    mergeKLists(lists) {}\n}\n","cpp":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n\nclass Solution {\npublic:\n    ListNode* mergeKLists(vector<ListNode*>& lists) {\n        \n    }\n};\n","java":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\n\nclass Solution {\n    public ListNode mergeKLists(ListNode[] lists) {\n\n    }\n}\n","csharp":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     public int val;\n *     public ListNode next;\n *     public ListNode(int val=0, ListNode next=null) {\n *         this.val = val;\n *         this.next = next;\n *     }\n * }\n */\n\npublic class Solution {    \n    public ListNode MergeKLists(ListNode[] lists) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/q5a5OiGbT6Q","embedding":[-0.010397907,-0.02890404,-0.0008388699,-0.031188622,0.03947023,0.014594806,-0.018664218,0.0022603592,-0.012034851,0.03842993,-0.027924933,-0.021193577,-0.02994434,-0.03190255,-0.008745665,-0.031066233,0.0009810188,-0.017430136,0.013789083,0.023947313,0.021907508,0.00659367,0.0691086,0.0099542495,0.0133913215,-0.004681353,0.015655505,0.024640847,-0.033208027,-0.040245358,0.045895617,0.003067357,-0.018715212,0.07665588,-0.043488648,0.06433546,0.024559254,0.049689654,0.009587085,0.04250954,-0.0044238274,-0.0054156827,-0.013360724,0.009051636,0.0118920645,-0.0030801059,-0.023376167,-0.031657778,-0.03422793,0.03259609,0.014197044,0.026558263,0.048139405,0.0026772444,-0.049444877,-0.0016076214,0.013595302,0.0032866362,-0.013258734,0.0029245708,0.035125446,-0.019327154,0.01707317,-0.0030112625,0.035125446,0.02137716,-0.013585103,0.0038909283,-0.015512719,0.007771658,-0.041428443,0.00071456924,-0.028822448,0.016063467,-0.0082357135,-0.010810968,0.019653523,0.0418976,0.0013271483,-0.025783138,0.016797796,0.024640847,0.043611035,-0.0012736034,-0.017736107,-0.012758981,-0.012626395,-0.023212982,-0.06502899,-0.03394236,-0.033146836,-0.04167322,-0.0036690996,0.018939592,0.049689654,0.032800067,0.023763731,0.016185854,-0.011402511,0.03467669,0.015114957,-0.03175977,0.03275927,-0.024661245,0.008011335,-0.012136841,0.043529443,0.0050000725,-0.0085518835,0.028434884,-0.021927906,-0.0014074655,-0.015655505,0.028434884,0.020245066,-0.036696095,-0.046344373,0.03683888,-0.008098027,-0.030331904,-0.00003844555,-0.055686682,0.021397557,-0.028292099,-0.06115336,0.048098605,0.022560246,-0.008041932,0.01099455,-0.027149808,0.026864234,0.016777398,-0.036492117,0.036920473,-0.035349824,0.005905236,-0.029087622,0.014676399,0.0017542324,0.0071291192,0.033289623,-0.04459014,-0.013248535,-0.0061806096,-0.003151499,0.022254275,0.01298336,-0.009862458,-0.037022464,-0.021275168,0.023376167,0.005186205,0.018460236,0.01068858,-0.045691635,-0.0140440585,-0.00053831737,0.023009002,0.047364276,-0.018133868,-0.0005861253,0.011198531,0.01371769,-0.014696796,-0.033024445,0.02166273,-0.008760964,-0.017970683,-0.02606871,-0.020092081,0.022641838,-0.04365183,-0.009836961,0.047813036,-0.008393798,-0.010071538,-0.0097400695,-0.036267735,-0.0044034296,-0.013656496,0.01089256,0.051158313,-0.033962756,-0.0073687965,-0.07396334,0.032718476,-0.020857008,-0.013707491,0.0044646235,0.0006011051,0.002283307,0.029373195,-0.011810472,0.045487657,-0.003842483,0.0018281754,-0.0135035105,-0.022703031,0.017215956,0.009158725,0.029169215,0.040714514,0.012096045,-0.005214252,0.043203074,-0.018786605,-0.017960485,0.023906518,-0.009061835,-0.032086138,0.055197127,0.039123464,-0.0025574057,0.037634406,0.016287845,-0.04114287,-0.028883642,-0.013942068,0.004069411,0.032820467,-0.010224524,0.030454291,0.011708482,0.05821604,0.005798146,0.036206543,-0.04691552,-0.00047680447,-0.02221348,0.0024528657,0.0016139959,-0.041387647,-0.0055686682,0.008541685,0.0024617899,-0.074493684,-0.011637089,-0.030903049,0.03600256,-0.012493807,0.04022496,0.010301016,-0.03624734,0.05005682,0.034493107,-0.0345747,-0.0052321004,-0.0042963396,-0.014645801,0.037756793,0.042672724,-0.021968702,0.03226972,-0.028679661,-0.0345543,0.033636387,0.04008217,0.011147535,-0.034717485,-0.010454002,-0.010780371,0.019082379,-0.015155753,-0.036165748,0.013309729,-0.026843837,0.03224932,0.051607072,-0.026823439,0.022009498,-0.015747296,-0.039327443,-0.0016356688,-0.039735407,-0.009026138,0.008725267,0.030699069,0.015461723,0.006940437,-0.057236932,0.010285717,0.006150013,0.03822595,0.0062163062,0.020969197,-0.008613078,-0.019337354,-0.0063284957,-0.025273187,-0.045120493,-0.009123029,-0.018358247,0.028128915,0.022682633,-0.019357752,0.047935423,-0.0115656955,-0.004576813,0.017144563,0.015339335,0.008786461,-0.039715007,-0.030821458,0.03078066,0.023110993,-0.08130664,-0.039327443,-0.01769531,-0.0408369,0.05466678,-0.02439607,0.008567181,0.029883146,0.010545793,0.002797083,-0.009398403,-0.0068945414,0.0052473987,0.004003118,-0.035553806,0.015278141,-0.037879184,0.027639361,0.041020483,-0.019877901,0.03957222,-0.042223968,-0.0155535145,0.010963953,-0.019510737,-0.020969197,0.01276918,0.004365183,0.036594104,-0.016073665,-0.038450327,0.015318937,0.0028633766,-0.008358102,0.04618119,0.013962466,0.0006074795,0.0022323118,-0.011647288,-0.019531135,0.03600256,0.041408047,0.048343383,-0.0059970273,0.03175977,-0.025211992,-0.008103126,0.010484599,-0.0014865081,-0.049077712,0.024334876,-0.016522422,0.005833843,0.013636098,0.037940376,-0.013197539,0.0128609715,-0.040857296,-0.009755368,-0.012687588,-0.0115249,-0.013319928,-0.02241746,-0.026354283,0.010046041,0.03602296,0.05780808,0.0024171693,0.056951363,0.00617551,0.004324387,0.010204125,0.019010985,-0.03171897,-0.0016675408,-0.01717516,-0.0032738873,-0.00017927976,0.03373838,0.01759332,0.013819681,0.002797083,-0.041285656,-0.047078703,0.017093567,-0.0046660546,-0.018368445,0.049975228,-0.0017096117,0.06535536,-0.0010109785,0.020540839,0.01623685,0.021295566,0.018878397,0.024212487,-0.029271204,0.01833785,-0.011973657,-0.00387563,-0.048628956,-0.04065332,0.04210158,0.026109507,-0.030474689,0.049975228,0.029148817,0.008368301,-0.036165748,-0.021173177,0.04785383,0.0007451663,0.022968207,0.013258734,-0.013064953,-0.027659759,-0.024865225,0.017113965,0.0023725484,0.046303578,-0.009862458,0.027802546,-0.003992919,0.03506425,-0.011881866,-0.056053847,0.028312497,0.02974036,-0.0041000084,0.04197919,0.03516624,0.039327443,0.060255844,-0.046752334,-0.01591048,-0.04040854,-0.028638866,0.023212982,0.019082379,-0.018807003,-0.022437857,-0.023702536,0.025150798,0.021764722,-0.020030888,0.01770551,0.016675407,0.05625783,0.026272692,0.041816007,-0.0105967885,0.034941863,-0.008883351,-0.018878397,-0.0064457846,0.007006731,0.026354283,0.005385086,-0.025987118,0.015482121,-0.026517468,0.009123029,-0.005905236,-0.003633403,-0.02241746,0.047486667,-0.019184368,-0.012065448,0.02125477,-0.04032695,0.02449806,0.052545384,0.034085143,-0.050709557,0.016685607,-0.007501384,-0.023743333,-0.016695805,-0.02502841,0.02690503,-0.061602116,0.038123958,0.0017759054,0.009077134,-0.005186205,0.013697292,0.011290322,0.0303727,-0.0052830954,0.02073462,0.009602383,-0.02137716,-0.03361599,0.018266456,-0.03341201,0.008210216,-0.056584198,-0.0036920474,-0.022662235,0.021723926,-0.034921464,-0.021234373,-0.044875715,-0.014197044,0.07583996,-0.030066729,-0.026578661,0.022580644,0.010586589,0.0006097105,0.0004723424,-0.028434884,-0.010984351,-0.018888596,0.013942068,-0.027720952,-0.00018756646,0.017440334,-0.005527872,0.006568173,0.0021851414,0.008715068,-0.0104947975,-0.020357257,-0.030862253,-0.003992919,0.022662235,-0.020520441,0.0282717,0.014849782,0.013472914,0.053565286,-0.03643092,-0.003896028,-0.01812367,0.011851268,-0.0015336785,-0.0017096117,-0.0008586305,-0.0016433181,-0.009969548,0.07947081,-0.00900574,-0.0061602117,0.01800128,0.013319928,0.002399321,-0.0068435464,-0.0209488,-0.026864234,0.01611446,0.004722149,0.015043563,-0.00722601,-0.0129629625,-0.012993559,0.00079106196,0.03706326,0.02429408,-0.0076645683,-0.0049592764,0.0010122533,0.032820467,0.022601042,0.0028710258,0.030719467,-0.03318763,0.01068858,-0.028679661,-0.009648278,-0.0035518107,0.013217938,-0.049077712,0.01728735,-0.026843837,-0.03751202,-0.011494302,-0.05140309,-0.018796805,-0.017980883,-0.012034851,-0.064784214,0.011188332,0.00418925,-0.0048139403,0.02953638,-0.009408602,0.030943844,0.019857503,0.0030775561,-0.034309525,0.033534396,-0.04157123,-0.002911822,-0.008704869,-0.04585482,0.031576186,0.0014087404,-0.013279132,-0.03551301,0.015665704,0.017481131,0.011606491,0.010627385,0.0083785,0.009893055,-0.010555992,0.013605501,-0.030862253,-0.019214965,0.016145058,-0.019928897,0.04283591,0.029862748,-0.024804031,0.010668181,-0.0061704107,-0.0034396215,0.029964738,-0.011688083,0.014186845,-0.029148817,-0.025089605,-0.015992073,0.0136156995,-0.011841069,0.015216947,0.0016458678,-0.010377509,-0.021111984,-0.017552523,0.028190108,-0.0005775198,-0.015482121,-0.007603374,0.01435003,-0.017950285,0.0071699154,-0.00058835634,0.018184863,-0.005685957,0.022499051,0.023172187,-0.027557768,-0.016716205,0.025619954,-0.009077134,0.027211001,0.01717516,0.026966225,0.01288137,-0.021703528,-0.052382197,-0.0031693473,0.029312002,-0.04826179,-0.004482472,0.030821458,0.02041845,0.023580149,-0.037736397,-0.008001136,0.008388699,0.050709557,-0.01728735,-0.024212487,-0.016461227,0.013758486,-0.026925428,-0.018439839,-0.00816432,-0.028108515,0.010831365,0.0010192652,-0.036696095,-0.021030392,0.030739864,-0.012167438,0.020908004,-0.0045946613,-0.020969197,-0.0036894977,-0.03331002,-0.017960485,-0.035023455,-0.00544628,-0.012616195,-0.015859485,-0.046874724,0.0070016314,0.042183172,0.00028222616,0.041938394,-0.0050944136,-0.07530961,0.0366349,-0.0139318695,0.018297052,0.03822595,-0.014013462,-0.020724421,-0.02041845,0.014615204,0.020887606,-0.04471253,0.0008866778,-0.009668677,0.016185854,0.031147825,-0.033269223,-0.007950141,0.010861963,-0.014125651,-0.0041943495,-0.023886118,-0.03016872,-0.0067670536,-0.016818194,0.026333885,-0.0303727,0.034799077,-0.010224524,0.02870006,-0.039388638,-0.045283675,-0.023110993,0.017685112,-0.06368272,0.0075370804,-0.04357024,0.0035441616,-0.04866975,0.004428927,-0.028292099,-0.0043294868,-0.021193577,0.0036792986,0.02880205,0.072086714,0.013156744,0.018133868,-0.004992423,0.026435876,-0.05980709,0.015023165,-0.047364276,0.0023916715,-0.0188478,-0.029352797,0.01172888,-0.0018307251,0.023233382,-0.021968702,-0.007888947,-0.0025586807,-0.034105543,0.016287845,-0.0064661824,-0.012055249,0.049444877,-0.013534107,-0.0056094644,0.01791969,0.04126526,0.006858845,0.019072179,-0.042999092,0.004324387,-0.0013437216,-0.015686102,0.019418946,-0.010306116,-0.012075647,-0.015145553,-0.0040668617,0.042958297,0.023090595,0.04850657,-0.009729871,-0.0020500042,-0.017991083,-0.009056735,0.0007496284,-0.015594311,-0.046548355,-0.02105079,-0.026456274,-0.002386572,-0.010193926,0.018093072,0.021601537,-0.054177225,-0.035023455,0.017226156,-0.041285656,-0.028128915,0.026129905,0.02221348,-0.0429175,0.000071074464,0.013177142,-0.031147825,-0.019327154,-0.0047909925,0.040592123,-0.040714514,0.026456274,-0.02040825,-0.058868777,-0.004212198,0.03190255,-0.039959785,-0.034819476,0.044875715,-0.0067262575,-0.014921175,0.02525279,-0.011647288,0.009566686,-0.036288135,0.0021009995,0.044345364,-0.0033478304,-0.007990937,0.0084447935,0.0070424275,0.0022641837,-0.008210216,0.054014042,0.013462714,0.025191594,-0.01508436,-0.030943844,0.006981233,0.012840574,-0.014696796,0.0105967885,0.04008217,-0.017562723,0.0037532416,0.0003276437,0.017817698,0.01915377,0.041938394,-0.0001866103,0.0033350815,0.013585103,-0.0042070984,-0.012789578,-0.031025438,0.039409038,0.044345364,0.005813445,0.009551388,0.006899641,0.042264763,-0.02533438,-0.012993559,0.007980738,0.0034039249,-0.054095633,-0.04899612,0.015563713,-0.009755368,-0.01413585,0.010872162,0.09138327,-0.02774135,0.019418946,0.017644314,0.025008012,0.009561587,-0.0025013112,0.025823934,-0.0077155633,0.026782643,0.028251301,-0.029352797,0.028679661,-0.020989595,-0.043937404,0.058297634,0.024783634,-0.0033452804,-0.008230614,0.034819476,0.030964242,0.0024694393,0.004071961,-0.0032432904,-0.041530434,0.00089878915,0.02001049,0.055645887,0.045038898,0.022743829,-0.03402395,0.0030928547,0.02961797,0.04491651,0.006981233,0.010117434,-0.019663721,0.01518635,-0.017266952,0.017011976,0.0039317245,-0.04618119,0.03726724,0.03277967,-0.006262202,0.0021966153,0.0022922312,0.03549261,0.0011391037,0.014401025,-0.0039419234,-0.01728735,-0.027190603,0.014441821,-0.015665704,-0.013146545,0.04866975,-0.012626395,-0.020469446,0.007246408,-0.0072107115,0.004314188,-0.016481627,-0.017776903,0.07367776,0.05642101,-0.014992569,-0.04524288,0.013993064,-0.021030392,-0.0071189203,-0.03257569,-0.018817203,0.025681147,-0.025211992,-0.015930878,-0.027476177,0.035757784,0.012697787,0.023804527,-0.010387708,-0.0009306611,0.008429495,-0.028190108,-0.022560246,-0.022029895,-0.019633126,0.027516972,0.03951103,-0.004263193,-0.0053901854,0.023151789,-0.0043881307,0.011994055,0.051892646,0.036288135,-0.050546374,-0.005081665,-0.00272314,0.055197127,-0.03331002,0.015359733,0.0576041,-0.02178512,-0.020591833,-0.0051887543,-0.0042045484,0.032453302,-0.011759477,0.034635894,0.012534603,-0.04126526,0.03224932,-0.037450824,0.01717516,-0.03747122,-0.0028225805,-0.021438353,-0.01666521,0.0066242674,0.01413585,0.0070118303,-0.010153131,-0.009668677,-0.0024426668,0.01435003,0.040857296,-0.040163763,-0.025069205,-0.036390126,-0.03016872,0.0074707866,-0.024640847,-0.004156103,-0.03842993,0.016043069,0.006461083,-0.0150129665,-0.006986333,-0.025823934,-0.00095743354,0.026333885,0.048955325,0.011443308,0.017113965,0.010861963,0.010244922,-0.012493807,-0.022519449,0.024742838,-0.030270709,-0.008908849,0.017807499,-0.031861756,0.0026236994,0.028230904,-0.0111373365,0.033697583,0.012779379,0.02229507,-0.023559751,-0.025415974,-0.013442316,0.017970683,-0.022070693,0.0060888184,-0.040775705,-0.024559254,0.011769676,-0.008699769,-0.02145875,-0.0068333475,0.0060684206,-0.011188332,0.010423404,-0.025375176,-0.03539062,-0.0045436663,0.010586589,-0.033208027,0.010963953,-0.017572923,0.015063961,0.013962466,0.010204125,0.0021392456,0.01697118,0.0018664218,0.010214324,-0.019388348,-0.040694114,0.004839438,0.032453302,0.026354283,0.023294576,-0.0013692193,-0.050546374,0.002503861,-0.004877684,0.030189117,-0.030515486,-0.036614504,-0.0008809409,0.0143704275,-0.017297547,-0.047160298,0.004326937,0.009775766,-0.04230556,0.023886118,-0.0125652,-0.047201093,0.014778389,0.039429434,-0.008526386,0.004913381,-0.042591132,-0.014288835,-0.0028735755,0.017603518,0.0020767767,-0.010336713,0.026395079,0.0024962116,-0.035880174,-0.047445867,0.021519944,0.02921001,-0.013462714,0.013993064,0.01141271,0.012799778,-0.029781155,-0.027374186,0.009816563,-0.0029449689,0.024661245,0.016675407,0.0052219015,0.012605996,-0.0026020266,-0.027170205,0.00075982744,-0.015635107,0.0024579652,-0.010428504,-0.02545677,0.000041433545,-0.02462045,0.010484599,0.0062571024,0.03528863,0.013523908,-0.046874724,-0.015247544,-0.032718476,0.024457265,0.02229507,0.025701545,-0.021030392,-0.037756793,-0.032126933,-0.017328145,-0.0059613306,-0.02325378,-0.010698779,0.023682138,-0.00042804037,-0.0026874433,0.017623916,0.008108226,-0.024967216,-0.025171196,-0.0024847377,0.009276014,0.017634116,0.06788472,-0.012116443,-0.0026135005,-0.01623685,0.02994434,0.044957306,-0.01654282,-0.017470932,-0.0009268365,-0.049567267,-0.00879156,0.006272401,0.064988196,0.0031489492,0.0028557272,-0.007037328,0.014054257,-0.010418305,0.02449806,-0.026129905,-0.011881866,-0.028944835,-0.028047321,-0.0047935424,-0.00016860265,0.016032869,-0.0063539934,0.024436867,0.0045589646,-0.0022029895,0.035859775,0.016502025,-0.011953259,-0.025171196,-0.03133141,0.01560451,-0.01749133,-0.014503015,0.02774135,-0.014727393,-0.026721448,0.05140309,-0.0030316606,-0.0044442257,0.031474195,-0.015533117,-0.015053762,0.0033248826,-0.02001049,0.006552874,-0.020969197,-0.007888947,0.00041401671,0.016899787,-0.0009338483,-0.02545677,0.0083377035,-0.026211496,-0.0049490775,0.017644314,-0.06396829,-0.022397062,-0.026476672,0.011749278,0.049077712,-0.0020066584,-0.021030392,-0.009617682,-0.011300521,0.019847305,0.009826762,-0.018103272,-0.00827651,0.008908849,0.023682138,0.028353292,-0.026027914,0.00017497705,-0.01287117,0.014329632,-0.0071954126,0.009189323,-0.006231605,-0.014543811,-0.02386572,-0.024681643,0.0000032793255,-0.016083864,-0.028251301,-0.0042249467,0.002188966,0.05560509,-0.0008675546,-0.000905801,-0.009944051,-0.019847305,0.022499051,0.029862748,-0.03865431,0.00097209465,0.04075531,-0.011453507,0.005527872,0.036573708,0.038450327,0.015563713,-0.022988604,0.03716525,0.006461083,-0.02345776,0.019949295,-0.013513709,-0.008755864,-0.012177637,-0.009643179,0.052504584,0.009270915,0.015104758,-0.009021038,0.03989859,0.013676894,-0.0035747585,-0.050423983,0.016726403,0.047772236,-0.0052193515,-0.024661245,0.0324737,-0.0026670452,-0.032290116,-0.01728735,-0.005675758,-0.017236354,-0.007455488,0.0035467113,0.021703528,-0.0157167,0.0155535145,0.017246554,-0.004928679,-0.027027419,0.038450327,-0.023784129,0.035349824,-0.02596672,-0.0032815365,-0.0048649353,0.029923942,0.029434389,0.03726724,0.020673426,-0.004525818,0.0094188005,0.005614564,-0.01497217,-0.011749278,0.0145744085,-0.03333042,-0.0047501964,-0.023824925,0.038797095,0.03539062,0.04577323,0.015002768,0.007786956,0.004941428,-0.0012959137,-0.0017147112,-0.0122082345,0.031678174,-0.015839087,0.028088117,0.000103185455,-0.005267797,-0.008072529,-0.014727393,-0.010974152,0.011371914,0.020571435,0.011280123,0.021764722,0.024763236,-0.023784129,-0.02502841,-0.032534894,-0.028924437,-0.020857008,0.00784815,-0.017399538,0.02910802,0.010933356,0.03865431,0.030291107,0.0062876996,-0.005395285,0.006608969,0.005538071,0.0034192235,0.0049771247,0.03539062,0.026619459,-0.056584198,-0.047690645,0.025354778,0.0117798755,0.012269428,0.009714573,-0.0071546165,-0.0112495255,0.021540344,0.015471922,-0.005538071,-0.024559254,-0.014849782,-0.00095870846,0.0177871,0.003161698,0.031086631,0.013156744,0.01067838,0.0044773724,-0.02566075,-0.0044569746,0.004097459,-0.011943059,0.007965439,-0.0044926708,0.016685607,0.0021621934,-0.026435876,0.03798117,-0.007465687,0.015624908,0.01979631,0.014125651,-0.024008507,0.0044773724,0.026435876,-0.0063386946,0.013115947,0.045120493,0.008342803,0.013523908,0.019633126,0.007246408,0.022315469,0.014431622,0.015176151,-0.03959262,0.035859775,-0.004316738,0.0022195631,-0.0016853891,0.017766703,0.013952267,-0.022784624,-0.0067568547,0.016583616,0.008679371,0.00377109,0.03624734,0.00044939457,-0.015369932,0.013248535,-0.0007706639,-0.03306524,-0.041408047,-0.017572923,-0.01612466,-0.01654282,-0.020846808,-0.0027511872,0.0042249467,-0.002021957,-0.015410729,0.0017159862,-0.026741846,0.0002508323,-0.033962756,-0.020908004,0.034595095,-0.009459597,-0.012728385,-0.0054819766,-0.030597078,0.017001776,-0.0418976,0.03675729,0.011014948,0.004125506,0.015451524,-0.006828248,0.064009085,0.0036436021,0.005798146,-0.02082641,0.00034644816,0.00010693041,-0.010331613,0.028679661,-0.074575275,-0.026762243,0.030495089,0.003957222,-0.005089314,0.013829879,-0.009026138,0.0219891,-0.0044238274,0.0049261297,-0.020469446,-0.020846808,-0.01298336,0.02229507,0.03384037,0.020265466,0.012238831,0.029230408,-0.037715998,0.0011486653,0.03571699,0.0036155547,0.01750153,0.012677389,0.006512078,0.029291602,-0.00091791234,-0.009643179,0.017838096,0.050831947,0.015533117,-0.0012978261,0.028414486,0.016471427,0.022009498,0.052382197,0.025558759,-0.028965235,0.04516129,-0.0038781797,-0.01686919,0.003750692,-0.014156248,0.012361219,-0.01936795,-0.0028633766,0.028006526,0.0037889383,0.003289186,0.02219308,-0.0019531135,0.0070118303,-0.02912842,-0.022437857,0.0408165,0.028312497,-0.005089314,-0.04000058,0.0050740154,0.013105748,-0.030597078,0.022519449,0.06784392,0.005017921,0.015635107,-0.047364276,-0.0038526822,0.017827898,-0.010566191,-0.0009338483,0.040388145,0.03959262,-0.0037634405,0.03683888,0.021825915,0.023518953,0.013768685,0.013921671,0.007684966,0.022886615,0.0005568031,-0.037634406,-0.0031769967,-0.012932365,-0.016012471,0.038919482,0.010933356,-0.023784129,-0.019276159]},{"id":"depth-of-binary-tree","name":"Depth of Binary Tree","description":"Given the `root` of a binary tree, return its **depth**.\n\nThe **depth** of a binary tree is defined as the number of nodes along the longest path from the root node down to the farthest leaf node.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/5ea6da77-7e43-43e0-dd9d-e879ca0b1600/public)\n\n```java\nInput: root = [1,2,3,null,null,4]\n\nOutput: 3\n```\n\n**Example 2:**\n\n```java\nInput: root = []\n\nOutput: 0\n```\n\n**Constraints:**\n* `0 <= The number of nodes in the tree <= 100`.\n* `-100 <= Node.val <= 100`\n","difficulty":"Easy","concepts":["Binary Tree","Depth-First Search","Breadth-First Search"],"solutions":{"python":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\n# RECURSIVE DFS\nclass Solution:\n    def maxDepth(self, root: Optional[TreeNode]) -> int:\n        if not root:\n            return 0\n\n        return 1 + max(self.maxDepth(root.left), self.maxDepth(root.right))\n\n\n# ITERATIVE DFS\n# class Solution:\n#     def maxDepth(self, root: Optional[TreeNode]) -> int:\n#         stack = [[root, 1]]\n#         res = 0\n\n#         while stack:\n#             node, depth = stack.pop()\n\n#             if node:\n#                 res = max(res, depth)\n#                 stack.append([node.left, depth + 1])\n#                 stack.append([node.right, depth + 1])\n#         return res\n\n\n# BFS\n# class Solution:\n#     def maxDepth(self, root: Optional[TreeNode]) -> int:\n#         q = deque()\n#         if root:\n#             q.append(root)\n\n#         level = 0\n\n#         while q:\n\n#             for i in range(len(q)):\n#                 node = q.popleft()\n#                 if node.left:\n#                     q.append(node.left)\n#                 if node.right:\n#                     q.append(node.right)\n#             level += 1\n#         return level\n","javascript":"/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     constructor(val = 0, left = null, right = null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\n// RECURSIVE DFS\nclass Solution {\n    /**\n     * @param {TreeNode} root\n     * @return {number}\n     */\n    maxDepth(root) {\n        if (root === null) {\n            return 0;\n        }\n\n        return (\n            1 + Math.max(this.maxDepth(root.left), this.maxDepth(root.right))\n        );\n    }\n}\n\n// ITERATIVE DFS\n// class Solution {\n//     /**\n//      * @param {TreeNode} root\n//      * @return {number}\n//      */\n//     maxDepth(root) {\n//         const stack = [[root, 1]];\n//         let res = 0;\n\n//         while (stack.length > 0) {\n//             const current = stack.pop();\n//             const node = current[0];\n//             const depth = current[1];\n\n//             if (node !== null) {\n//                 res = Math.max(res, depth);\n//                 stack.push([node.left, depth + 1]);\n//                 stack.push([node.right, depth + 1]);\n//             }\n//         }\n//         return res;\n//     }\n// }\n\n// BFS\n// class Solution {\n//     /**\n//      * @param {TreeNode} root\n//      * @return {number}\n//      */\n//     maxDepth(root) {\n//         const q = [];\n//         if (root !== null) {\n//             q.push(root);\n//         }\n\n//         let level = 0;\n\n//         while (q.length > 0) {\n//             const size = q.length;\n\n//             for (let i = 0; i < size; i++) {\n//                 const node = q.shift();\n//                 if (node.left !== null) {\n//                     q.push(node.left);\n//                 }\n//                 if (node.right !== null) {\n//                     q.push(node.right);\n//                 }\n//             }\n//             level++;\n//         }\n//         return level;\n//     }\n// }\n","cpp":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n\n// RECURSIVE DFS\nclass Solution {\npublic:\n    int maxDepth(TreeNode* root) {\n        if (root == nullptr) {\n            return 0;\n        }\n\n        return 1 + max(maxDepth(root->left), maxDepth(root->right));\n    }\n};\n\n// ITERATIVE DFS\n// class Solution {\n// public:\n//     int maxDepth(TreeNode* root) {\n//         stack<pair<TreeNode*, int>> stack;\n//         stack.push({root, 1});\n//         int res = 0;\n\n//         while (!stack.empty()) {\n//             pair<TreeNode*, int> current = stack.top();\n//             stack.pop();\n//             TreeNode* node = current.first;\n//             int depth = current.second;\n\n//             if (node != nullptr) {\n//                 res = max(res, depth);\n//                 stack.push({node->left, depth + 1});\n//                 stack.push({node->right, depth + 1});\n//             }\n//         }\n//         return res;\n//     }\n// };\n\n// BFS\n// class Solution {\n// public:\n//     int maxDepth(TreeNode* root) {\n//         queue<TreeNode*> q;\n//         if (root != nullptr) {\n//             q.push(root);\n//         }\n\n//         int level = 0;\n\n//         while (!q.empty()) {\n//             int size = q.size();\n\n//             for (int i = 0; i < size; i++) {\n//                 TreeNode* node = q.front();\n//                 q.pop();\n//                 if (node->left != nullptr) {\n//                     q.push(node->left);\n//                 }\n//                 if (node->right != nullptr) {\n//                     q.push(node->right);\n//                 }\n//             }\n//             level++;\n//         }\n//         return level;\n//     }\n// };\n","java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\n// RECURSIVE DFS\npublic class Solution {\n    public int maxDepth(TreeNode root) {\n        if (root == null) {\n            return 0;\n        }\n\n        return 1 + Math.max(maxDepth(root.left), maxDepth(root.right));\n    }\n}\n\n// ITERATIVE DFS\n// public class Solution {\n//     public int maxDepth(TreeNode root) {\n//         Stack<Pair<TreeNode, Integer>> stack = new Stack<>();\n//         stack.push(new Pair<>(root, 1));\n//         int res = 0;\n\n//         while (!stack.isEmpty()) {\n//             Pair<TreeNode, Integer> current = stack.pop();\n//             TreeNode node = current.getKey();\n//             int depth = current.getValue();\n\n//             if (node != null) {\n//                 res = Math.max(res, depth);\n//                 stack.push(new Pair<>(node.left, depth + 1));\n//                 stack.push(new Pair<>(node.right, depth + 1));\n//             }\n//         }\n//         return res;\n//     }\n// }\n\n// BFS\n// public class Solution {\n//     public int maxDepth(TreeNode root) {\n//         Queue<TreeNode> q = new LinkedList<>();\n//         if (root != null) {\n//             q.add(root);\n//         }\n\n//         int level = 0;\n\n//         while (!q.isEmpty()) {\n//             int size = q.size();\n\n//             for (int i = 0; i < size; i++) {\n//                 TreeNode node = q.poll();\n//                 if (node.left != null) {\n//                     q.add(node.left);\n//                 }\n//                 if (node.right != null) {\n//                     q.add(node.right);\n//                 }\n//             }\n//             level++;\n//         }\n//         return level;\n//     }\n// }\n","csharp":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\n// RECURSIVE DFS\npublic class Solution {\n    public int MaxDepth(TreeNode root) {\n        if (root == null) {\n            return 0;\n        }\n\n        return 1 + Math.Max(MaxDepth(root.left), MaxDepth(root.right));\n    }\n}\n\n// ITERATIVE DFS\n// public class Solution {\n//     public int MaxDepth(TreeNode root) {\n//         Stack<Tuple<TreeNode, int>> stack = new Stack<Tuple<TreeNode, int>>();\n//         stack.Push(new Tuple<TreeNode, int>(root, 1));\n//         int res = 0;\n\n//         while (stack.Count > 0) {\n//             Tuple<TreeNode, int> current = stack.Pop();\n//             TreeNode node = current.Item1;\n//             int depth = current.Item2;\n\n//             if (node != null) {\n//                 res = Math.Max(res, depth);\n//                 stack.Push(new Tuple<TreeNode, int>(node.left, depth + 1));\n//                 stack.Push(new Tuple<TreeNode, int>(node.right, depth + 1));\n//             }\n//         }\n//         return res;\n//     }\n// }\n\n// BFS\n// public class Solution {\n//     public int MaxDepth(TreeNode root) {\n//         Queue<TreeNode> q = new Queue<TreeNode>();\n//         if (root != null) {\n//             q.Enqueue(root);\n//         }\n\n//         int level = 0;\n\n//         while (q.Count > 0) {\n//             int size = q.Count;\n\n//             for (int i = 0; i < size; i++) {\n//                 TreeNode node = q.Dequeue();\n//                 if (node.left != null) {\n//                     q.Enqueue(node.left);\n//                 }\n//                 if (node.right != null) {\n//                     q.Enqueue(node.right);\n//                 }\n//             }\n//             level++;\n//         }\n//         return level;\n//     }\n// }\n"},"starterCode":{"python":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nclass Solution:\n    def maxDepth(self, root: Optional[TreeNode]) -> int:\n        ","javascript":"/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     constructor(val = 0, left = null, right = null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {TreeNode} root\n     * @return {number}\n     */\n    maxDepth(root) {}\n}\n","cpp":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n\nclass Solution {\npublic:\n    int maxDepth(TreeNode* root) {\n        \n    }\n};\n","java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    public int maxDepth(TreeNode root) {\n        \n    }\n}\n","csharp":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\npublic class Solution {\n    public int MaxDepth(TreeNode root) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/hTM3phVI6YQ","embedding":[0.0065210536,0.031575628,0.032805048,-0.01972196,0.008923546,0.03762028,-0.023215564,0.0142715275,-0.05831553,0.044382095,0.013031862,-0.021064078,-0.058520436,-0.071470335,0.013656817,-0.013677307,0.01207906,0.0053326134,-0.00019785993,0.03116582,0.036267918,-0.03233377,0.047168784,-0.030079832,0.057905726,-0.012570829,0.035530265,0.03356319,0.0058243815,-0.025449013,0.010654981,-0.009302618,-0.014230547,0.064216755,0.0014484115,-0.016423015,0.02231399,0.002863526,-0.00007115593,-0.0035704433,-0.0002407616,0.015091142,-0.02176075,-0.013052352,-0.0030761135,-0.04237404,-0.03231328,-0.014281773,-0.0020836124,0.011495085,-0.026801376,0.024752341,0.0017288731,0.06864267,-0.05130783,-0.020285444,-0.01011711,0.012242983,0.011607782,0.039423432,0.022785267,-0.012089306,-0.016228355,0.018103223,0.039157055,0.00075750257,0.026616963,0.004536051,-0.0004530288,-0.04356248,-0.06569206,0.0014099921,-0.035120457,-0.039239015,0.058684357,0.0120073445,0.046267208,0.030633071,-0.0007632655,-0.015664872,-0.00012390257,-0.026002252,0.068847574,-0.02296968,-0.009010631,-0.038603816,-0.047209762,-0.0023077256,-0.06679854,-0.079010785,0.02288772,-0.04991449,0.04216914,0.018185183,0.030776503,0.006341763,0.017672926,0.0047281478,-0.024424495,0.014630109,-0.0022321674,-0.070076995,-0.0041492954,-0.020633781,0.008431778,-0.006167595,-0.005619478,-0.0075865514,-0.065651074,0.0141895665,-0.047414668,-0.0800353,0.015408742,-0.0048382836,0.026330099,-0.069175415,-0.08581358,-0.01439447,0.015009181,-0.0024050546,0.07106053,-0.030120812,-0.025530973,-0.010654981,-0.010583265,0.025162147,0.015398497,0.0070435572,-0.010024903,0.017519249,0.019865394,0.006761815,-0.009251392,-0.005542639,-0.027395597,-0.009512644,-0.04368542,0.02350243,-0.0077351066,0.0011890805,-0.027743932,-0.014722316,-0.021453395,0.0010168336,-0.01789832,0.011423369,-0.022641836,0.07298662,-0.036103994,0.02088991,0.053315885,-0.019578528,-0.01732459,0.023236055,-0.010199071,-0.02704726,0.010900865,0.05528296,0.020070296,-0.04475092,-0.008616191,-0.027190693,-0.036165465,-0.0048101093,-0.004828038,0.025121167,-0.03819401,0.01146435,-0.011075033,-0.026104704,0.032415733,-0.05122587,0.034505747,0.008590579,0.005829504,-0.025326071,-0.04417719,0.0352434,-0.029055314,0.003534585,-0.001736557,-0.008257611,-0.031801023,-0.013011372,-0.007427751,0.020285444,0.032005925,-0.039013624,-0.013882211,0.028440604,0.027313635,0.056225516,0.010859884,0.021350943,0.016289826,0.009189921,0.05356177,0.009630464,-0.0022398513,-0.0067925504,0.0073970156,0.015142367,0.007668513,0.008483004,0.026207156,-0.03128876,-0.013462159,0.012980635,-0.0045488575,-0.04348052,0.018748669,0.015972227,-0.032108378,0.0071152733,-0.011156995,0.023707334,0.03755881,-0.022170557,0.012734751,0.04475092,0.019906374,0.012365925,0.011710234,0.02057231,0.037989106,-0.00085227046,-0.017365571,-0.010327135,0.041595407,0.009533134,0.027518539,-0.02294919,-0.010532039,-0.011659008,-0.030264245,-0.00048792642,-0.047168784,-0.032108378,-0.005783401,-0.03995618,-0.0035371464,0.017765133,-0.006874512,0.02354341,-0.021965653,-0.012253229,-0.019209702,0.013800249,-0.053356867,0.040816773,0.003288701,-0.02581784,-0.012376171,-0.026248137,-0.012550338,-0.038132537,-0.013533875,-0.0012114919,0.013626082,-0.02299017,0.012406906,0.006029285,-0.021371434,-0.06532323,-0.009635586,-0.047742512,0.048439182,0.007320177,0.009533134,0.01970147,0.028543055,-0.037456356,0.075035654,-0.021494376,-0.005496536,-0.027846383,0.05417648,-0.0049586645,-0.035120457,-0.07630606,0.005245529,0.05761886,0.043890327,-0.007309932,-0.008406165,0.007852926,0.020982116,-0.010378362,0.019097004,0.0046743606,-0.052824117,0.0018390088,-0.016884048,-0.030919936,0.010921355,-0.020971872,-0.023748314,0.03538683,0.06823286,-0.06712638,-0.016658653,-0.014015398,-0.0063724983,0.026678434,-0.005312123,-0.036206447,0.034239374,0.04704584,-0.020223973,0.010409097,-0.03538683,0.03755881,0.011423369,0.0282357,-0.036780175,-0.021330453,0.027539028,-0.06319223,-0.00782219,-0.00034481415,0.009451173,-0.006551789,0.0019184089,0.040325005,0.023686843,0.012734751,-0.06409381,0.052127447,0.02940365,-0.046144266,0.0015009181,0.0031555137,0.014660845,0.009097715,-0.04067334,-0.011956118,0.032559164,0.024485966,-0.027702952,0.03870627,0.019496566,-0.000057108842,0.0067054667,-0.005166129,-0.038562834,0.009620219,0.023113113,0.028870901,0.010086374,0.017929055,-0.022170557,-0.03522291,0.0588073,0.018728178,-0.042128157,0.01938387,-0.029792966,0.010962336,-0.032661617,0.010900865,-0.06491342,-0.028461093,-0.017693415,-0.024178611,-0.01843107,-0.0013600469,-0.031247782,-0.04421817,0.00560411,0.024813812,0.0042594313,0.02766197,0.012919164,0.02940365,-0.02174026,-0.01621811,0.013277746,0.015716096,0.0017135054,0.047947414,-0.010798413,0.041042168,-0.037312925,0.017652435,-0.01847205,-0.020459613,0.03768175,-0.016238602,-0.00572193,0.007407261,0.055119038,-0.015603401,0.06425773,0.021637809,-0.0008266575,-0.0007062767,0.012847449,0.065937944,0.047742512,0.01439447,-0.0021117865,0.020480104,-0.009855858,0.0034705529,-0.013636327,-0.026903827,0.05007841,0.04430013,0.02995689,-0.048685066,0.0048459675,0.037108023,-0.015828794,-0.03768175,-0.011915138,0.03606301,-0.0039315857,-0.010644736,-0.026002252,-0.01386172,0.004441283,0.004031476,-0.02700628,0.016484486,0.041001186,0.03645233,0.032005925,0.0075609386,0.02469087,0.008580334,0.024567928,0.024444986,-0.0055733747,0.03653429,0.0013805372,0.026022743,0.013943682,0.0422511,-0.015050161,0.0002700564,-0.030817484,-0.022395952,0.017713906,-0.021412414,0.0021438028,0.034239374,0.024199102,0.013277746,0.008575211,-0.017211894,0.03516144,-0.00038739564,-0.028112758,-0.036185954,-0.036165465,-0.013185539,0.057045132,0.041410994,-0.0023230934,-0.029792966,-0.016617673,0.04995547,-0.011618027,-0.00970218,0.01649473,-0.0068284087,0.026657943,0.033173874,0.032046907,-0.055528846,0.044586997,0.0026202034,-0.031534646,-0.02762099,-0.016310317,0.019353135,0.012550338,0.0064237243,-0.031452686,-0.027948836,-0.023133604,-0.024711361,-0.013994908,0.013677307,0.040243044,0.0037907145,0.04356248,-0.0058704847,-0.0036754562,0.0024293868,-0.016556202,0.0030300103,0.026248137,-0.005619478,0.03190347,0.01738606,-0.008308836,0.008708398,-0.002403774,-0.007719739,0.023789294,-0.04516073,-0.011361898,0.012089306,0.02303115,-0.056881208,-0.006392989,0.036575273,-0.005558007,0.033255834,-0.050365277,-0.0118229315,-0.0005215434,0.026924318,0.015511193,-0.0006348806,-0.032210827,-0.0043926183,0.0009886593,-0.012642545,-0.009317986,-0.034423787,0.008498372,0.04884899,-0.016925028,-0.005732175,-0.041124128,-0.01176146,-0.046758976,0.000057308942,0.0069769635,0.008119301,0.00023499869,0.03932098,-0.020008825,0.002773881,0.00080616714,0.033173874,0.0071306415,-0.002502384,0.016402524,0.019168722,-0.0149682,-0.013994908,-0.012202002,0.0020323864,0.026924318,-0.019332644,-0.0062854146,-0.021228,0.0017788183,-0.018584747,-0.04348052,-0.056020614,0.00062399515,0.003375785,-0.013277746,-0.0042082053,0.006695221,-0.0013549243,-0.006392989,-0.017980281,0.0045770314,0.019025289,-0.009609973,-0.005363349,-0.010193949,0.029670024,0.025838329,0.004892071,0.023891747,0.005066239,0.0077607194,0.0006659363,0.01647424,-0.007899029,0.0053172456,-0.037374396,-0.0023026029,-0.0229287,-0.015039916,-0.015531684,-0.03464918,0.030387187,-0.030305225,-0.0009335915,0.015234574,0.030264245,0.010941846,-0.0056758267,-0.027436577,0.01532678,0.04811134,0.016351297,-0.034936044,-0.020213729,-0.026248137,0.00008284184,-0.010398852,0.018984308,-0.0027585132,0.0046615545,-0.009466541,0.01583904,-0.0036395981,-0.016341053,0.032210827,0.003918779,0.0037522952,0.033214856,0.010219561,-0.0316371,-0.0012684807,-0.022908209,0.0053274906,0.00025676968,0.00042069246,0.024772832,0.04356248,-0.013185539,0.025408031,-0.006649118,0.013554365,0.028338151,0.024383515,-0.005706562,-0.020521084,0.0021514867,0.019435095,-0.015941491,-0.013871966,0.010952091,0.017263118,0.017252874,0.0139846625,-0.023481939,-0.0064186016,-0.006218821,-0.006684976,0.006101001,0.036575273,0.02023422,-0.021904182,-0.041001186,-0.033768095,0.0305716,-0.03223132,0.024363024,-0.030100321,-0.02299017,-0.015931247,0.009594605,0.0028327906,0.027313635,-0.0006659363,0.001983722,-0.021924673,-0.036206447,-0.03532536,0.011894647,0.01498869,-0.015603401,0.015173103,0.02876845,-0.012458132,-0.015152613,0.004351638,0.037230965,0.019670734,-0.013451913,-0.0076992484,-0.0008125704,0.006500563,-0.010972582,-0.027805403,-0.04532465,-0.010460323,-0.023481939,-0.01148484,-0.029034823,0.007432874,0.032477204,-0.049709585,0.027928345,-0.0058756075,-0.011085278,-0.024465475,-0.0046717995,-0.009502399,0.00010077089,-0.01350314,-0.0020567188,-0.0422511,-0.023399977,-0.024485966,-0.01583904,-0.0023512675,0.040345497,0.002686797,-0.13105626,0.006982086,-0.0050329417,-0.034464765,0.008344694,-0.04169786,0.0034756754,-0.015091142,0.039198037,0.038439892,-0.037825182,-0.009061856,0.0045488575,-0.017273365,0.0118024405,0.0056143557,0.011597537,0.020787459,0.05048822,0.0042082053,-0.042496983,-0.036185954,0.005201987,0.004843406,0.017478267,-0.005916588,0.01205857,-0.034423787,-0.025653915,-0.008319082,0.012683526,-0.015265309,0.014916974,-0.024199102,-0.011290182,-0.036780175,-0.0031708814,-0.040263534,0.015132123,-0.015470213,-0.00041236827,0.0064237243,0.005176374,0.004753761,-0.024813812,-0.032067396,-0.02708824,-0.027969325,0.016935272,-0.07556841,0.031042878,0.008764747,0.0035012884,-0.017170912,-0.04893095,0.04872605,0.016935272,0.00036370367,-0.0038265726,0.016371788,0.0065415436,-0.015603401,0.007975868,-0.016187375,-0.043890327,0.00011341728,-0.020121522,-0.020633781,-0.009471663,-0.009113083,0.04884899,0.008303714,-0.021432905,0.028604526,-0.015572665,0.022867229,0.0061471043,-0.012150777,-0.03466967,-0.003985373,-0.037866164,-0.0068540215,0.02405567,0.039198037,0.02116653,0.0044207927,-0.006971841,-0.0092718825,0.017129932,0.012242983,-0.029751986,-0.012386416,-0.05864338,-0.03352221,-0.016289826,-0.00090797857,0.023871256,-0.021719769,-0.029649533,0.0049151224,-0.04979155,-0.01494771,0.008908179,0.0029634167,-0.00024316281,-0.03878823,0.051389795,0.016976254,-0.046963878,-0.037989106,0.014814522,-0.034382805,0.010214439,-0.008769869,-0.003672895,-0.019855147,0.009251392,-0.05114391,-0.046881918,0.029833948,0.020223973,0.016525466,0.037866164,-0.0025369613,0.011423369,-0.037845675,0.046758976,0.0046794834,0.01290892,0.012232738,0.00025805034,0.06864267,-0.0047307094,-0.021822222,0.03409594,0.01265279,0.016105413,0.008477882,-0.018410578,-0.01940436,0.029588062,-0.022908209,-0.0049740323,0.0060036723,-0.06192183,-0.013892456,0.02639157,0.03475163,0.0055528847,0.011341408,-0.06532323,-0.017437287,0.004991961,0.011351653,-0.00050457485,-0.03176004,0.04298875,0.0028327906,0.028543055,-0.0045488575,-0.0043029734,0.01469158,0.0042799218,-0.016351297,-0.013380198,-0.013708043,-0.023604881,-0.02708824,0.0004690369,-0.009410192,0.023953218,0.03878823,0.019178966,0.009184798,0.02065427,0.002679113,0.020838683,-0.053274907,0.023338506,-0.012826958,0.003176004,0.025633426,0.0020900154,0.008493249,-0.012581074,-0.0020618413,-0.017611455,0.04233306,0.040427458,0.04639015,0.0116385175,0.04180031,-0.005558007,0.0047435155,-0.022088595,-0.0142715275,0.0010744627,0.006229066,0.0016648408,0.033091914,-0.020879665,0.02706775,-0.0152858,0.011771705,0.0070435572,0.0018326056,-0.029506102,-0.0019593895,-0.009338477,0.02534656,0.002385845,-0.046185244,0.0034090818,-0.003647282,0.030018361,0.0036242304,-0.0033911527,0.007248461,0.032272298,0.002922436,-0.002259061,-0.0031888105,-0.045488574,-0.008611069,0.0045591025,-0.021412414,-0.020305935,-0.034956533,0.03930049,0.04999645,-0.0008650769,0.030489638,-0.005245529,0.0036088626,0.0144764315,-0.013933437,0.023727823,-0.0025907485,-0.04108315,-0.011536066,-0.018133959,0.013001126,-0.0229287,0.005716807,-0.030346205,-0.005532394,-0.017427042,0.0252646,-0.052209407,0.038747247,0.0071921125,0.050242335,0.005481168,0.012509358,-0.019639999,-0.016125904,-0.026944809,-0.0085598435,0.016064433,0.0043209023,0.035427812,0.0040775794,-0.025674406,-0.00010525316,0.044914845,0.008744257,0.010777923,0.0071664993,-0.0082524875,0.027928345,-0.017908564,0.005235284,0.021658298,0.026616963,0.0016584375,0.03051013,-0.027887365,0.018779404,0.014507167,0.010322013,0.04528367,-0.0021079446,0.037948124,-0.047291726,-0.019650245,0.018267145,0.019537548,-0.03055111,-0.029219236,-0.0117819505,0.035018004,-0.020193238,0.053889617,0.04704584,-0.019527301,0.0061471043,0.016607428,-0.010444955,0.06958523,0.0018594991,-0.028174229,-0.01615664,-0.01469158,-0.014681335,0.019476077,-0.00014775462,0.0050559933,0.045529556,0.01912774,0.0045770314,-0.016054189,-0.029772475,-0.004684606,0.016945519,0.055200998,0.002124593,-0.004761445,0.023973707,-0.026145685,-0.016914783,-0.0022283255,-0.015808303,-0.0080680745,0.026657943,0.05577473,0.003680579,-0.00023836039,0.015449722,0.0016456312,0.0000037694037,0.00603953,0.0034679915,-0.00823712,0.010982826,-0.026002252,-0.0025472064,0.0077504744,0.024485966,0.0042978507,-0.030305225,0.0044284766,-0.020971872,-0.028092267,-0.017334836,-0.012663036,-0.013482649,0.0120073445,-0.042660907,-0.0075609386,0.015367761,0.046431128,0.014466186,0.012888429,-0.039607845,-0.0073918933,0.0020503155,-0.008242243,0.014076869,0.018328616,0.02411714,0.0047793738,-0.04413621,-0.010542285,0.024137631,0.0141485855,0.009748283,-0.0050969743,0.063315175,0.00007815947,0.03307142,-0.049545664,0.019025289,0.006208576,-0.04831624,-0.022150066,-0.009410192,-0.026371079,-0.029915908,-0.039484903,-0.0075148353,0.016310317,0.01768317,-0.00235639,-0.030878955,0.03137072,-0.010706207,-0.012171267,0.015429232,-0.007581429,-0.0142920185,-0.0047076577,0.04278385,0.046840936,0.0008823656,0.009302618,-0.015173103,-0.026514512,-0.0049765934,0.014230547,0.016105413,-0.006628628,0.022908209,0.027805403,-0.006710589,-0.03231328,-0.03702606,-0.020439122,0.017590964,0.03899313,0.005670704,-0.012109796,0.024936754,0.0025279967,-0.004402864,-0.0019043217,0.011075033,-0.049053892,-0.025530973,0.019394115,-0.019947354,-0.030715032,0.03130925,-0.0031375845,0.031862494,0.0354483,-0.03112484,0.00042069246,0.009358967,-0.032620635,0.013902701,0.014671089,-0.013287991,-0.03003885,-0.028932372,0.007284319,-0.018420823,0.0013254695,-0.007945132,-0.012847449,-0.021412414,0.016668899,-0.01089062,-0.016023453,-0.0026125193,-0.021023098,0.046840936,0.0059985495,0.0002724576,0.05339785,0.022252519,-0.033768095,0.048439182,0.033891037,0.014527657,-0.030346205,-0.012027835,0.021494376,-0.029506102,-0.044382095,-0.02235497,0.008016849,-0.001540618,0.008062952,-0.018451558,-0.0064698276,-0.013298236,-0.023850765,0.015162858,0.021596827,0.024178611,-0.02178124,-0.0020144575,-0.031473175,0.00040244326,-0.013830985,0.018687198,0.015654625,-0.01706846,0.01849254,-0.011853667,0.013052352,0.035571244,-0.013605591,0.0011250481,0.007719739,0.011300427,0.0049945223,0.019199457,-0.012837203,0.03128876,0.02114604,0.030674051,0.0029070682,0.00026445356,-0.021945164,-0.01611566,-0.01966049,0.018011017,-0.019855147,-0.017929055,-0.0012121322,-0.0031119718,-0.025059696,-0.027252164,0.00615735,0.0017403989,-0.0017557667,-0.0022449738,-0.030776503,-0.037866164,-0.02088991,0.039628334,0.0059268335,-0.037825182,-0.026350588,0.023912236,-0.02936267,-0.0049330513,-0.0006819444,-0.008083442,0.03061258,-0.008349817,-0.02118702,-0.0023064448,-0.021002607,0.016904537,-0.015091142,0.0411856,0.01059351,0.017181158,-0.01758072,-0.010634491,-0.018789649,-0.023604881,0.01800077,0.020418633,-0.028604526,0.010163213,-0.012161022,0.065610096,0.015808303,-0.0018799895,-0.018154448,-0.004518122,0.02112555,0.014937464,-0.03766126,0.004807548,0.018021261,-0.008570088,-0.015439478,0.0008010446,-0.011628273,0.0034833592,-0.00052922725,-0.0065927696,0.013328971,-0.010316891,0.004238941,0.018584747,0.034731142,-0.012765487,-0.010716452,0.057331994,-0.0020605607,0.01829788,-0.0010014658,0.011648763,0.020346915,-0.026309608,0.0027508293,-0.0054555554,-0.008329326,0.009609973,-0.013759269,0.027866874,0.0035140947,-0.012519603,0.0018863927,0.0023269353,-0.005004768,0.018697442,0.013134314,0.041861784,-0.017150423,0.04007912,-0.028604526,-0.0016866118,-0.03932098,0.03755881,-0.041615896,-0.02528509,0.0038240112,-0.015132123,-0.012765487,0.018308125,0.020756723,0.03415741,-0.023154093,-0.044873863,0.010168335,-0.008580334,0.018123712,-0.04532465,0.015193594,-0.0020618413,-0.015726343,-0.017232383,0.0015572665,0.024649888,0.055651788,-0.0061778403,0.0051430776,0.02534656,-0.010829149,0.0076326546,0.0048664575,0.009015753,-0.00633664,-0.036022034,0.013154804,-0.009707303,-0.027866874,-0.03128876,0.022785267,-0.028563546,-0.01621811,0.026002252,0.020725988,0.023338506,0.0077965776,-0.048398204,-0.041329034,0.0072791963,-0.00631615,0.0032682107,0.016259091,0.0002807818,0.004387496,0.004953542,0.018410578,0.011710234,-0.015941491,0.025653915,-0.01001978,-0.016259091,-0.023420468,0.050979987,0.01673037,-0.048439182,-0.062003795,0.018359352,0.00896965,-0.009814877,0.022600854,0.01384123,0.024322044,0.013953927,-0.018728178,0.0055784974,-0.016986499,-0.011402879,-0.0011359337,0.012263473,-0.008739133,0.015378007,-0.021822222,0.017652435,-0.002421703,-0.02704726,-0.0019568282,0.010829149,-0.02233448,-0.020008825,-0.021268982,-0.013574855,-0.0035038495,-0.0140461335,0.0026560614,-0.008319082,0.001245429,0.033132892,0.03776371,-0.042456,-0.027395597,0.03698508,0.018410578,-0.0017006989,0.019496566,0.013113823,-0.028686488,0.015921,0.012591319,-0.00603953,0.0028917005,0.0010251577,-0.021248491,0.0025536097,-0.0014676212,0.019793676,0.013687553,-0.014814522,0.04815232,-0.018635971,-0.010491058,-0.0060856333,-0.023379488,0.016843066,0.033091914,0.041656878,-0.012478623,-0.009896838,0.009773896,-0.027825894,-0.019599019,-0.0057475427,-0.042578943,0.025756368,-0.0027790035,-0.012263473,-0.011894647,-0.025387542,-0.038009595,0.0067874277,-0.0072638285,-0.002259061,-0.04593936,-0.025326071,0.03583762,-0.0063724983,-0.028379133,-0.017795868,-0.04483288,0.0117819505,-0.014998935,0.011833176,0.029588062,-0.00558362,0.03352221,0.024711361,0.029567573,0.006162472,0.020254709,-0.02876845,-0.02116653,-0.007970746,-0.009113083,0.0011737128,-0.0305716,0.025018716,0.023358997,-0.036698215,0.030305225,0.038275972,0.013636327,0.007878539,-0.0018915153,-0.01768317,-0.030100321,0.0144149605,0.018328616,0.048439182,0.006044653,0.04348052,-0.0091694305,0.0014035889,-0.022518894,0.026350588,0.0229287,-0.0010437272,0.008544475,0.02184271,0.002896823,-0.010583265,-0.018697442,0.029547082,-0.005122587,0.011546311,0.023748314,-0.0035653207,0.042456,0.0068796347,0.022088595,0.047291726,0.041513447,0.014404715,0.010347626,0.0072279703,0.01849254,0.00007555816,0.012765487,0.0070128217,0.0036575273,-0.0028814552,-0.00080872845,-0.029301198,0.0026739906,0.047291726,0.006997454,0.04356248,-0.018246654,-0.038521856,0.017170912,-0.0052199163,0.032579653,-0.01885112,-0.022027124,0.023871256,-0.037886653,0.0047281478,0.019435095,-0.00956387,0.0036319143,0.01768317,-0.016269337,-0.0062598013,0.002378161,0.00016000081,0.018748669,-0.0041236826,0.017232383,-0.006587647,-0.0013882212,-0.004082702,-0.029731495,0.047824472,0.041923255,0.038132537,-0.0002716572,-0.014763296,0.02174026,-0.017693415,-0.0246294,0.029547082,0.033747602,0.037907146,-0.00063744193]},{"id":"same-binary-tree","name":"Same Binary Tree","description":"Given the roots of two binary trees `p` and `q`, return `true` if the trees are **equivalent**, otherwise return `false`.\n\nTwo binary trees are considered **equivalent** if they share the exact same structure and the nodes have the same values.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/e78fc10c-4692-471f-5261-61e9be4f3a00/public)\n\n```java\nInput: p = [1,2,3], q = [1,2,3]\n\nOutput: true\n```\n\n**Example 2:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/0b0ee764-c643-46ff-cb3f-86ce8b58ab00/public)\n\n```java\nInput: p = [4,7], q = [4,null,7]\n\nOutput: false\n```\n\n**Example 3:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/4d811f95-0488-490b-1f4f-fc5489df0f00/public)\n\n```java\nInput: p = [1,2,3], q = [1,3,2]\n\nOutput: false\n```\n\n**Constraints:**\n* `0 <= The number of nodes in both trees <= 100`.\n* `-100 <= Node.val <= 100`\n","difficulty":"Easy","concepts":["Binary Tree","Depth-First Search","Breadth-First Search"],"solutions":{"python":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nclass Solution:\n    def isSameTree(self, p: Optional[TreeNode], q: Optional[TreeNode]) -> bool:\n        if not p and not q:\n            return True\n        if p and q and p.val == q.val:\n            return self.isSameTree(p.left, q.left) and self.isSameTree(p.right, q.right)\n        else:\n            return False\n","javascript":"/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     constructor(val = 0, left = null, right = null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {TreeNode} p\n     * @param {TreeNode} q\n     * @return {boolean}\n     */\n    isSameTree(p, q) {\n        if (!p && !q) {\n            return true;\n        }\n        if (p && q && p.val === q.val) {\n            return (\n                this.isSameTree(p.left, q.left) &&\n                this.isSameTree(p.right, q.right)\n            );\n        } else {\n            return false;\n        }\n    }\n}\n","cpp":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n\nclass Solution {\npublic:\n    bool isSameTree(TreeNode* p, TreeNode* q) {\n        if (!p && !q) {\n            return true;\n        }\n        if (p && q && p->val == q->val) {\n            return isSameTree(p->left, q->left) && isSameTree(p->right, q->right);\n        } else {\n            return false;\n        }\n    }\n};\n","java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    public boolean isSameTree(TreeNode p, TreeNode q) {\n        if (p == null && q == null) {\n            return true;\n        }\n        if (p != null && q != null && p.val == q.val) {\n            return isSameTree(p.left, q.left) && isSameTree(p.right, q.right);\n        } else {\n            return false;\n        }\n    }\n}\n","csharp":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\npublic class Solution {\n    public bool IsSameTree(TreeNode p, TreeNode q) {\n        if (p == null && q == null) {\n            return true;\n        }\n        if (p != null && q != null && p.val == q.val) {\n            return IsSameTree(p.left, q.left) && IsSameTree(p.right, q.right);\n        } else {\n            return false;\n        }\n    }\n}\n"},"starterCode":{"python":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nclass Solution:\n    def isSameTree(self, p: Optional[TreeNode], q: Optional[TreeNode]) -> bool:\n        ","javascript":"/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     constructor(val = 0, left = null, right = null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {TreeNode} p\n     * @param {TreeNode} q\n     * @return {boolean}\n     */\n    isSameTree(p, q) {}\n}\n","cpp":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n\nclass Solution {\npublic:\n    bool isSameTree(TreeNode* p, TreeNode* q) {\n        \n    }\n};\n","java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    public boolean isSameTree(TreeNode p, TreeNode q) {\n        \n    }\n}\n","csharp":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\npublic class Solution {\n    public bool IsSameTree(TreeNode p, TreeNode q) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/vRbbcKXCxOw","embedding":[-0.00311306,0.011604272,0.0045854845,-0.01915304,0.034619257,0.057625026,-0.0032927927,0.021402,-0.023798434,0.009502783,0.0023664788,0.010802388,-0.034711428,-0.031024605,-0.01830507,-0.0356147,-0.004573963,-0.006129341,0.032757413,0.029807953,0.04427873,-0.010277016,0.08192118,-0.02512569,0.05209479,-0.029734218,0.008940543,0.037937395,0.00009397075,-0.0016060717,0.060648218,-0.00538276,0.008359868,0.06249163,0.004509444,0.055154853,0.048924126,0.021586342,0.020203784,0.016277319,-0.03548566,-0.013152736,-0.031061474,-0.0143786045,-0.013042132,-0.026010528,-0.03163293,0.007014178,-0.023042636,0.026084265,0.010489008,0.005166159,0.012424589,-0.028683474,-0.05397507,-0.060095195,-0.029144326,-0.011318543,0.015245008,0.017724395,0.013088217,0.0046085273,-0.008742376,0.0124061555,0.027909242,-0.010922209,0.014848675,-0.028093582,-0.018406458,-0.050620064,-0.035153847,0.033126093,0.010147977,0.008673248,0.0451267,0.052242264,-0.0035808256,0.030969303,0.008585686,-0.054896776,-0.00012990287,0.015447783,0.07148747,0.002184442,-0.02862817,0.024554232,-0.050546326,-0.04158735,-0.003917248,-0.056998264,0.0007938188,-0.005963434,0.040002014,-0.011760961,0.040591907,-0.050804403,0.015383264,0.0034126143,-0.012876225,-0.024775442,-0.02866504,-0.06798499,0.013023698,0.06857488,0.031817272,0.0021798334,0.056740187,-0.025623411,-0.06451938,0.012682667,0.018351156,-0.06289718,0.03930152,0.05176298,-0.0023826086,-0.041882295,-0.066584,-0.017761264,0.008051097,-0.0028019845,0.03159606,-0.048739783,-0.043946914,-0.041919164,-0.020259086,0.013079001,-0.030231938,-0.008511949,0.043504495,0.03307079,0.021457303,0.044020653,-0.019263644,0.05176298,-0.010719434,0.03701569,-0.012479892,0.006064822,-0.03369755,-0.021862853,0.012055907,-0.016258884,-0.02431459,0.01164114,-0.007014178,0.025144124,-0.00024785235,0.017014682,-0.02947614,-0.012839356,0.047965553,-0.01498693,-0.011290892,0.014240349,-0.019447984,-0.0019240602,0.024038078,0.012461457,0.0010962534,-0.032646805,0.0048481706,-0.030121334,-0.0046546124,0.020130048,0.00625838,0.024148682,-0.0013929274,-0.022471178,-0.01799169,-0.02687693,-0.0015023799,-0.003463308,0.0372922,0.022710823,0.00606943,-0.038453553,0.0032259692,0.0068252287,0.02888625,0.021733815,0.010332318,0.037439674,0.002640686,-0.014360171,0.030877132,0.007945101,0.0155123025,-0.018480195,-0.002594601,0.009465915,0.0023365233,0.057072002,0.018378807,0.000042844902,-0.022692388,-0.01871062,-0.0053458917,0.028425395,-0.0292918,0.03251777,0.031467024,-0.0008024598,0.021346698,0.013401597,0.010922209,-0.013613589,-0.018664535,-0.008719333,-0.06791126,-0.043688837,0.028536001,0.011226372,-0.013383163,0.005908132,0.03332887,-0.017964039,-0.023669396,-0.03742124,0.015586039,0.07742326,-0.02027752,0.026821628,0.06212295,0.05379073,0.030950869,0.002935632,0.0020761415,-0.025549674,0.014784155,-0.033715986,0.029900124,0.0011855436,-0.021438869,0.01530031,-0.009465915,-0.008673248,-0.042103503,-0.052832156,-0.04033383,-0.044610545,0.017945604,0.032960188,0.0040140273,-0.025475938,-0.019005567,-0.019816667,0.019079303,0.00732295,-0.00823083,0.01915304,-0.008534992,-0.007350601,-0.039854545,-0.02543907,-0.044868622,0.00008453767,0.033402607,-0.028333226,0.027227178,-0.062823445,-0.022913598,0.010249364,-0.03391876,-0.07259352,-0.038822234,-0.03522758,0.03863789,0.014793373,-0.022839861,0.024351457,0.040112622,-0.01996414,0.014673551,-0.047449395,-0.0034033973,0.0043458412,-0.0062998566,-0.016175931,0.007562593,-0.03373442,-0.049698357,0.04737566,0.041734822,-0.005391977,-0.021143923,0.030342543,-0.046785768,0.005497973,0.00055705576,0.0021084012,-0.031430155,-0.020240651,0.011585837,-0.007972752,-0.020222217,0.014212698,0.006244554,-0.003216752,0.0055025816,-0.054491226,-0.022434311,-0.029549876,-0.015079101,0.04630648,0.037937395,-0.0799303,0.016065326,0.0395596,-0.041513614,-0.006152384,-0.030932434,-0.0022455049,-0.010618047,0.015991589,-0.030619055,-0.05342205,-0.020535598,-0.03544879,0.010194062,0.025586544,0.015355613,-0.023226976,0.026231738,0.04387318,0.0053366744,0.043541364,-0.058620468,0.022286838,0.023005769,-0.016231233,-0.023411319,-0.00104844,0.048334233,0.026747892,-0.021844419,-0.016839558,-0.026452946,0.0027489865,-0.053680126,0.012101992,-0.015060667,-0.008295349,0.021383567,-0.027374651,-0.03419527,-0.03808487,0.0034909593,0.07097132,-0.00049973716,0.018784357,0.011853132,-0.050361987,0.017862651,-0.029420838,-0.00013667163,0.021567907,-0.026840063,0.045016095,0.0001494891,0.041882295,-0.020074744,-0.022286838,-0.034047797,-0.02650825,0.008677857,-0.015245008,-0.011604272,-0.023761567,-0.03345791,0.023208544,-0.034066234,0.029125892,-0.0035785213,0.01799169,-0.011926868,-0.004002506,-0.0075902445,0.016535396,-0.012848574,0.049292807,-0.024167117,0.0041891513,0.008931326,-0.009120275,-0.040628776,0.008369085,0.033623815,0.012756404,0.0037743838,-0.0137702795,-0.0009464763,-0.032296557,0.023411319,0.018553931,0.02763273,-0.000979312,0.009318442,0.018286636,0.017945604,0.03544879,-0.022194667,0.02866504,-0.043172684,0.0013318644,-0.021567907,-0.012175729,0.015484652,0.0032743586,0.012019039,-0.059726514,0.0034241357,0.043209553,-0.033181395,0.021770682,0.0007350601,-0.023614094,0.012867008,-0.035928078,0.018793574,-0.027374651,0.025494372,-0.011604272,-0.00023705112,-0.013779497,0.028056713,-0.018507846,0.00566388,-0.00089923886,0.02315324,-0.013613589,0.030121334,0.009396787,-0.046822637,0.015871767,0.025217861,0.017687527,0.034748293,0.033568513,-0.006774535,0.025936792,-0.028517567,-0.03288645,0.032425597,-0.037384372,-0.013696543,0.009346093,0.018968698,0.025955224,-0.012977612,-0.0205909,-0.0221578,0.04261966,-0.008889849,-0.014194264,0.020719938,0.0031844922,0.01379793,0.030360978,0.027706465,-0.030029163,-0.018553931,-0.023614094,0.03355008,0.053053364,0.047596868,-0.017125288,0.013917753,0.00009281862,0.011558186,-0.059062883,0.036001816,-0.038195472,0.028775644,0.0027558992,-0.017908737,-0.009267748,0.0292918,0.03185414,-0.023097938,-0.050841272,-0.0029609788,-0.01799169,0.016203582,0.053237706,0.027116574,-0.023724698,0.052610945,0.036978822,-0.04162422,-0.031577628,0.0010812758,-0.020332823,0.019355815,-0.0021913548,0.04239845,0.041034326,0.022692388,0.0039932886,-0.018194465,-0.03786366,-0.0054242364,-0.009078799,-0.016904078,0.025789319,-0.002891851,-0.036352064,-0.03419527,0.0075994614,-0.016010024,0.050620064,-0.01323569,0.008336825,0.016139062,-0.009456698,0.00021199226,-0.025328465,-0.028499132,-0.0010732107,0.0041730213,0.025604976,0.0073275585,-0.01458138,0.043283287,0.01933738,0.0060878643,-0.0122679,-0.021604776,0.007078698,-0.02625017,-0.031688232,0.021033319,0.012774837,0.058620468,0.023577224,0.0076363296,0.034785163,0.0067975777,-0.007498074,-0.03782679,-0.024701705,0.0056869225,-0.021881288,-0.001389471,-0.02040656,0.0032190562,0.03638893,0.03037941,-0.0088944575,0.0111895045,0.020738373,0.021512605,-0.017954823,-0.020738373,-0.025015086,-0.009806946,-0.02490448,-0.022637086,-0.006659322,-0.033181395,0.03342104,-0.016572263,0.0038181648,0.011475232,0.009406004,0.030674357,0.025236296,-0.0020934234,0.019835101,0.028738776,0.030840265,0.054749303,-0.023780001,-0.00597726,-0.032314993,0.008640989,0.0005164431,0.032683674,-0.03904344,0.00857186,-0.027890807,-0.0067007984,-0.01952172,-0.03338417,0.015457001,-0.017715178,0.013115869,-0.015401698,0.017457101,0.019871969,0.000777689,0.010793171,0.00700957,0.04029696,-0.012940745,-0.025180994,-0.024296155,-0.0035347403,-0.0036637792,-0.04155048,0.018563148,-0.0013145824,-0.0042997557,-0.0012247161,0.024351457,-0.010654915,-0.018093077,0.0037651667,0.00926314,-0.024996651,0.020203784,0.029125892,-0.031688232,-0.018332722,-0.005009469,0.019669194,-0.011152636,-0.01236007,0.011152636,0.024480497,-0.021346698,0.007235388,0.0078206705,0.012535194,0.034969505,0.0037029516,0.01711607,-0.016507745,0.046712033,-0.00061581447,-0.0031937093,-0.03661014,0.028572869,0.024683272,-0.0005544634,-0.0017823479,-0.009558085,-0.015687427,0.019374248,-0.011908434,0.027614295,-0.01007424,0.01824055,-0.0040808506,-0.015761163,-0.03889597,0.017125288,0.0076363296,0.030729659,-0.019466419,-0.036628574,-0.01029545,0.029144326,0.01754927,0.023798434,-0.010166411,0.0054426705,-0.0745844,-0.06039014,-0.045679722,-0.00788519,-0.025678713,-0.006991136,-0.026028961,-0.00011254888,-0.02866504,0.0009718232,0.0024955175,0.040149488,0.014968497,-0.060648218,-0.02256335,0.019871969,-0.00090096705,-0.039227784,-0.04866605,0.014599814,-0.0031268857,0.0036683877,-0.014037574,-0.017908737,-0.000115357194,0.03305236,-0.03598338,0.0104337055,0.020830544,0.009037321,-0.019392682,-0.009129493,-0.037974264,-0.027946109,-0.00613395,-0.00844743,-0.016627567,-0.041403007,-0.042066637,0.0060095196,0.02081211,0.049993303,0.047117583,-0.039190914,-0.030692792,-0.0130144805,-0.0010392229,-0.006792969,-0.00625838,-0.0067422753,-0.016139062,0.018093077,0.035116978,-0.01132776,0.009650256,0.016572263,0.015632125,0.025457505,0.027171876,-0.014636682,0.023798434,0.019429551,0.0205909,-0.029347101,-0.029936993,0.0016129846,-0.024812311,0.037753057,0.022950465,0.00065613905,-0.011493667,0.006074039,-0.049366545,-0.011475232,-0.06949659,0.018286636,0.01085769,-0.007055655,-0.014138961,0.026342342,-0.012424589,0.05729321,-0.018756706,-0.002316937,0.004175326,0.008806895,0.002053099,-0.03179884,-0.009585736,0.01742945,-0.01996414,0.028812513,-0.022379009,0.036259893,0.032591503,-0.0008093726,-0.029125892,-0.030029163,-0.021162357,-0.009723992,0.022452744,-0.012876225,-0.024296155,-0.015005365,-0.0046200487,-0.010590396,-0.035319753,-0.0052859806,0.0074796397,-0.006511849,-0.0040324614,0.004327407,-0.0014850979,0.06411383,-0.0039978973,-0.019982575,0.047301922,-0.020554032,0.023448186,0.0048205196,0.020701503,-0.022618651,-0.018664535,-0.022471178,-0.0015772685,0.004921907,0.025918357,-0.010876124,0.027522124,0.010175628,0.027946109,-0.01085769,-0.037476543,-0.017752048,-0.022452744,0.016065326,-0.022231536,-0.015733512,0.014636682,0.0010680262,-0.013585938,0.003304314,-0.025088822,-0.033752855,-0.0129868295,-0.00081686146,0.040481303,0.019079303,-0.019060869,0.044168126,-0.022397442,-0.01085769,-0.008581078,0.009558085,-0.019060869,0.0151067525,-0.009143318,-0.014562946,-0.012756404,0.027853938,-0.0395596,-0.0005996846,0.02234214,0.022268403,0.009604171,-0.002649903,0.025236296,0.011816264,-0.0034379612,-0.0034033973,-0.01173331,0.01933738,-0.01561369,0.013383163,0.026360776,-0.011226372,-0.015788814,0.050214514,-0.011890001,0.012240249,0.031522326,-0.0072860816,-0.016636783,0.0004378101,-0.026803194,-0.018231334,0.019005567,-0.08929482,-0.023927473,0.051836714,0.0102585815,-0.02709814,-0.0037743838,-0.04862918,-0.00547493,0.004092372,0.0012304768,0.021955024,-0.03930152,0.03513541,-0.009415221,0.036905088,0.01236007,-0.0062030777,0.0084889075,0.0073552094,-0.004186847,-0.024572667,0.0008635228,-0.019890403,-0.0032236648,-0.025899922,0.016793473,-0.00076616765,0.01592707,-0.010212496,-0.008521167,0.015668992,-0.029457705,-0.0011567404,-0.03530132,0.012931528,0.015991589,-0.015152837,0.02803828,-0.008640989,0.008299958,0.022065628,0.0069819186,-0.009880682,-0.0012454545,0.018443326,0.03126425,-0.026102697,0.033586945,0.0269138,0.021641644,-0.023669396,0.016452443,-0.0040601124,-0.0035900427,-0.012055907,-0.0048020855,-0.005470322,-0.014212698,-0.012065125,0.013502984,0.011991388,0.03154076,-0.011373845,-0.013521419,0.021733815,0.0024932132,0.0016579176,-0.024240853,-0.015733512,-0.056998264,0.030619055,0.015438566,-0.0045762677,-0.009963636,0.04029696,-0.023890605,0.032812715,-0.01520814,-0.040223226,-0.026618853,-0.004361971,-0.004885039,-0.035246015,-0.018452544,0.03467456,-0.01686721,-0.015023799,-0.0045762677,-0.005438062,-0.011917652,0.00013955196,-0.012387721,0.029439272,-0.03472986,-0.014258783,0.02647138,-0.04379944,0.020756807,-0.036407366,-0.030526884,-0.026305472,-0.020719938,-0.008862197,-0.013079001,-0.051468033,0.014793373,0.017318845,0.014940845,-0.003767471,0.044942357,-0.0046523083,-0.023632528,-0.03292332,-0.0011037423,-0.033568513,0.02171538,-0.0058850893,-0.015318745,-0.0047145234,0.026084265,0.030453147,0.015733512,0.034471784,-0.015853334,0.00017886846,0.007788411,-0.031411722,-0.0036407365,0.0051108566,-0.017659876,0.016415574,-0.0033527035,-0.028185753,0.0036130853,0.016646,0.032738976,0.019005567,0.019411117,0.047560003,-0.050361987,-0.008534992,-0.0025807752,0.04822363,-0.0020646201,0.0042283237,-0.02068307,0.051652372,-0.016074544,0.044020653,0.066878945,-0.023024201,-0.017245108,0.060463876,-0.005428845,0.05994772,-0.00069876795,-0.0034771338,-0.0364811,-0.009382961,0.0005469746,-0.002903372,-0.035854343,-0.030360978,-0.022010326,0.02189972,0.0155123025,0.002440215,-0.03305236,-0.04859231,0.013069783,0.03378972,0.011051248,-0.0035462617,0.032056917,-0.0011820872,-0.0071109575,-0.010968295,-0.01742945,-0.02162321,0.025144124,0.04298834,0.0068851397,-0.010599612,-0.011908434,-0.0364811,-0.026231738,0.022194667,0.011032814,-0.014277217,0.028167319,-0.0364258,-0.017235892,-0.007387469,0.011447581,-0.022784559,-0.0139454035,0.031079907,-0.008129442,-0.025180994,-0.037144728,0.043357026,-0.08302723,0.019706063,-0.027577426,-0.031190513,-0.010304667,0.01996414,-0.026397644,0.034305878,-0.01565056,-0.0046292655,0.024572667,-0.002308872,0.004963384,0.011751744,0.022084063,0.019355815,-0.025936792,-0.015263442,-0.008530384,0.042767134,0.031024605,0.016876427,-0.017899519,-0.03041628,-0.0155123025,-0.076907106,0.023263846,0.011401496,-0.034969505,-0.030914001,0.0008053401,-0.023798434,-0.036186155,-0.017632226,-0.06451938,0.006903574,0.03463769,-0.02997386,-0.018802792,0.042066637,0.007143217,-0.037900526,0.032738976,-0.009281574,-0.022471178,-0.014286434,0.0073644263,0.034895767,-0.00823083,-0.020130048,0.046232745,-0.010885341,-0.050325118,0.041697953,0.018627668,0.016387923,-0.015908636,-0.0048896475,0.002649903,-0.034305878,-0.02387217,-0.011558186,-0.027245613,0.031522326,-0.0010824278,-0.013032915,0.034619257,0.022102496,0.010313884,0.006834446,-0.0051984186,-0.0024517365,-0.010157194,-0.027135009,-0.019042434,0.008797678,0.03347634,0.00031136363,0.04612214,0.02628704,-0.0372369,0.022028761,0.029273365,-0.023724698,0.022692388,0.059615906,0.024959784,-0.009258531,-0.025199426,0.014535295,0.014728853,-0.018378807,-0.014682768,-0.011899217,-0.008189353,0.0052905893,0.0356147,0.025734017,0.0031015389,0.0091571435,0.028794078,-0.0130144805,-0.0045601376,0.034305878,0.0019966443,-0.024775442,0.009465915,0.026213303,0.008055706,-0.014065225,-0.014959279,0.020978017,-0.028646605,-0.03131955,0.005751442,-0.002640686,-0.0245358,0.012212597,-0.0033596163,-0.00011096469,-0.012931528,0.0038665542,0.0024448237,0.0002815522,0.032407165,-0.01433252,0.011714877,-0.0064749806,-0.008018837,-0.043541364,0.012433806,-0.0049864263,0.0006146623,0.033273567,-0.017374147,0.0143786045,-0.013005264,0.02081211,-0.015254225,-0.04630648,-0.011134202,-0.0028480699,-0.012461457,0.021973457,0.02884938,-0.01624045,0.035467226,0.034379613,0.019577025,-0.030748094,-0.020609334,-0.016212799,0.0014539903,-0.03773462,-0.014774938,-0.017908737,0.013088217,0.0034103103,-0.02625017,0.011548969,0.010111108,0.032554638,-0.014037574,-0.021973457,-0.01029545,-0.011512101,0.0034540913,0.0137426285,-0.029125892,-0.009295399,-0.007456597,-0.011724093,0.025992094,0.011816264,0.00957652,0.03037941,-0.045200434,0.0081985695,-0.011512101,-0.01213886,-0.0055809263,-0.003122277,-0.011687225,0.002857287,-0.0070418296,-0.05257408,-0.0062353374,-0.04033383,-0.0019067781,-0.000069163914,0.014848675,-0.002903372,-0.008272306,-0.0024517365,0.055117987,-0.0067007984,-0.011843915,0.019042434,-0.002046186,-0.0016798081,-0.0011210243,-0.028738776,0.03041628,0.016129846,0.0033342694,-0.005281372,0.017438667,0.016747387,-0.007871364,0.00061120593,-0.01733728,0.03688665,-0.017254326,-0.00043665795,0.015696643,-0.00050809013,-0.007903624,0.012433806,0.056297768,-0.010147977,0.0068667056,-0.008848372,0.04656456,0.0054657133,-0.011401496,-0.0515049,0.018139163,0.023263846,0.015493869,-0.009258531,0.051984187,0.03661014,-0.021567907,0.029328667,0.0013330166,-0.016968597,0.00044961943,0.01780735,0.03251777,-0.0003891325,0.016166713,-0.026028961,0.015530737,0.007788411,0.005470322,0.046896372,0.004903473,-0.013115869,-0.010489008,0.020756807,0.052721553,0.039743938,0.028536001,0.027135009,-0.027706465,0.012940745,-0.019374248,0.008433605,-0.07417885,0.0019010175,-0.010212496,-0.012221814,-0.03305236,-0.01852628,0.023798434,0.02390904,0.005806744,-0.008770027,0.02149417,0.01020328,0.008083357,0.0045854845,-0.026747892,0.0011239046,-0.0070326123,0.008138659,0.017346496,-0.0066224537,-0.011880783,0.017954823,-0.048518576,-0.010166411,-0.0006169666,0.022710823,0.021162357,-0.007456597,-0.037255336,-0.06665774,-0.028996853,0.0075072907,-0.012037473,0.021162357,-0.004221411,0.029236497,0.012092776,0.039338388,-0.0005089542,-0.027927674,0.047854945,-0.01354907,-0.00026801467,-0.0098530315,0.041071195,0.0197798,-0.073957644,-0.005124682,0.001214347,-0.0046453956,-0.0015726599,0.026545117,0.010599612,-0.008005012,0.03589121,-0.014240349,-0.015558388,-0.044057522,0.0005945,0.018415675,0.0041638045,0.015890202,0.0036591706,0.021272961,0.020498728,0.015346396,-0.024333024,-0.006239946,-0.0077561513,0.0067699263,-0.035190713,-0.0070648724,-0.023116373,-0.02490448,-0.02390904,-0.018323503,-0.007534942,0.036149286,0.017835,0.005848221,-0.0027605079,0.01714372,-0.029310234,0.008392128,0.028148884,0.019171473,-0.0046453956,0.0033619206,0.038453553,-0.046712033,-0.018129947,0.016397139,0.026452946,0.0033780504,0.034398045,0.030877132,0.027835505,-0.011862349,-0.004728349,0.03423214,-0.01045214,0.014996148,-0.0072077364,0.0019344293,-0.01314352,0.037568714,0.013171171,-0.043172684,0.010535093,-0.011724093,-0.017641442,-0.011880783,-0.011309326,-0.051431164,0.0111895045,0.0088668065,-0.03216752,-0.0074612056,-0.011134202,-0.033660684,0.0020473383,-0.0016394836,0.04383631,-0.042545922,-0.019816667,0.020166915,-0.014452341,-0.025107257,-0.030987738,-0.020130048,0.0035439574,-0.049514018,0.0031867966,0.021770682,-0.045016095,0.025328465,0.02252648,0.044573676,-0.010406055,-0.021770682,-0.0012293246,-0.008880632,0.0125812795,-0.00013645561,0.027522124,-0.03871163,-0.010489008,0.008585686,-0.020885846,0.023853736,-0.017890302,-0.011051248,0.014083659,0.015558388,-0.019024,-0.007700849,-0.004465663,0.026489815,0.0057975273,0.009954419,0.04630648,-0.008318392,0.020959582,-0.0071800854,0.012489108,0.023079505,-0.013899318,-0.006156992,0.0028480699,-0.015880985,-0.0048666047,-0.02719031,0.0153095275,-0.01530031,0.008922108,0.009424438,-0.04298834,0.0075764186,0.005650054,0.018286636,0.01996414,0.007613287,-0.008714725,0.048702914,0.00155653,0.007078698,-0.006050996,0.013272558,-0.018415675,0.0221578,-0.023945907,0.00050693797,-0.004765217,0.009493566,0.036001816,0.019632326,0.026047396,-0.024627969,-0.024683272,0.0022017239,-0.02669259,-0.0035969554,-0.029715784,0.0032305776,-0.0005556156,-0.0012120426,0.03563313,-0.015779598,-0.026158001,-0.0027397694,-0.015152837,-0.016314186,-0.0030600622,-0.005184593,-0.025770884,-0.005387368,0.01955859,0.042250976,0.0059726513,-0.0057652676,0.020646201,-0.017632226,0.04114493,0.023853736,0.03307079,0.019189907,0.0088668065,0.0015945504,-0.015291093,-0.020609334,0.044389334,0.026194869,0.033144526,0.004117719]},{"id":"subtree-of-a-binary-tree","name":"Subtree of a Binary Tree","description":"Given the roots of two binary trees `root` and `subRoot`, return `true` if there is a subtree of `root` with the same structure and node values of `subRoot` and `false` otherwise.\n\nA subtree of a binary tree `tree` is a tree that consists of a node in `tree` and all of this node's descendants. The tree `tree` could also be considered as a subtree of itself.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/2991a77a-9664-46ed-528d-019e392f7400/public)\n\n```java\nInput: root = [1,2,3,4,5], subRoot = [2,4,5]\n\nOutput: true\n```\n\n**Example 2:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/ae6114cb-23a0-457f-c441-0a82b7a58500/public)\n\n```java\nInput: root = [1,2,3,4,5,null,null,6], subRoot = [2,4,5]\n\nOutput: false\n```\n\n**Constraints:**\n* `0 <= The number of nodes in both trees <= 100`.\n* `-100 <= root.val, subRoot.val <= 100`\n","difficulty":"Easy","concepts":["Binary Tree","Depth-First Search"],"solutions":{"python":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nclass Solution:\n    \n    def isSubtree(self, root: Optional[TreeNode], subRoot: Optional[TreeNode]) -> bool:\n        if not subRoot:\n            return True\n        if not root:\n            return False\n\n        if self.sameTree(root, subRoot):\n            return True\n        return self.isSubtree(root.left, subRoot) or self.isSubtree(root.right, subRoot)\n\n    def sameTree(self, root: Optional[TreeNode], subRoot: Optional[TreeNode]) -> bool:\n        if not root and not subRoot:\n            return True\n        if root and subRoot and root.val == subRoot.val:\n            return self.sameTree(root.left, subRoot.left) and self.sameTree(root.right, subRoot.right)\n        return False\n","javascript":"/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     constructor(val = 0, left = null, right = null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {TreeNode} root\n     * @param {TreeNode} subRoot\n     * @return {boolean}\n     */\n    isSubtree(root, subRoot) {\n        if (!subRoot) {\n            return true;\n        }\n        if (!root) {\n            return false;\n        }\n\n        if (this.sameTree(root, subRoot)) {\n            return true;\n        }\n        return (\n            this.isSubtree(root.left, subRoot) ||\n            this.isSubtree(root.right, subRoot)\n        );\n    }\n\n    /**\n     * @param {TreeNode} root\n     * @param {TreeNode} subRoot\n     * @return {boolean}\n     */\n    sameTree(root, subRoot) {\n        if (!root && !subRoot) {\n            return true;\n        }\n        if (root && subRoot && root.val === subRoot.val) {\n            return (\n                this.sameTree(root.left, subRoot.left) &&\n                this.sameTree(root.right, subRoot.right)\n            );\n        }\n        return false;\n    }\n}\n","cpp":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n\nclass Solution {\npublic:\n    bool isSubtree(TreeNode* root, TreeNode* subRoot) {\n        if (!subRoot) {\n            return true;\n        }\n        if (!root) {\n            return false;\n        }\n\n        if (sameTree(root, subRoot)) {\n            return true;\n        }\n        return isSubtree(root->left, subRoot) || isSubtree(root->right, subRoot);\n    }\n\n    bool sameTree(TreeNode* root, TreeNode* subRoot) {\n        if (!root && !subRoot) {\n            return true;\n        }\n        if (root && subRoot && root->val == subRoot->val) {\n            return sameTree(root->left, subRoot->left) && sameTree(root->right, subRoot->right);\n        }\n        return false;\n    }\n};\n","java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    \n    public boolean isSubtree(TreeNode root, TreeNode subRoot) {\n        if (subRoot == null) {\n            return true;\n        }\n        if (root == null) {\n            return false;\n        }\n\n        if (sameTree(root, subRoot)) {\n            return true;\n        }\n        return isSubtree(root.left, subRoot) || isSubtree(root.right, subRoot);\n    }\n\n    public boolean sameTree(TreeNode root, TreeNode subRoot) {\n        if (root == null && subRoot == null) {\n            return true;\n        }\n        if (root != null && subRoot != null && root.val == subRoot.val) {\n            return sameTree(root.left, subRoot.left) && sameTree(root.right, subRoot.right);\n        }\n        return false;\n    }\n}\n","csharp":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\npublic class Solution {\n    \n    public bool IsSubtree(TreeNode root, TreeNode subRoot) {\n        if (subRoot == null) {\n            return true;\n        }\n        if (root == null) {\n            return false;\n        }\n\n        if (SameTree(root, subRoot)) {\n            return true;\n        }\n        return IsSubtree(root.left, subRoot) || IsSubtree(root.right, subRoot);\n    }\n\n    public bool SameTree(TreeNode root, TreeNode subRoot) {\n        if (root == null && subRoot == null) {\n            return true;\n        }\n        if (root != null && subRoot != null && root.val == subRoot.val) {\n            return SameTree(root.left, subRoot.left) && SameTree(root.right, subRoot.right);\n        }\n        return false;\n    }\n}\n"},"starterCode":{"python":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nclass Solution:   \n    def isSubtree(self, root: Optional[TreeNode], subRoot: Optional[TreeNode]) -> bool:\n        ","javascript":"/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     constructor(val = 0, left = null, right = null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {TreeNode} root\n     * @param {TreeNode} subRoot\n     * @return {boolean}\n     */\n    isSubtree(root, subRoot) {}\n}\n","cpp":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n\nclass Solution {\npublic:\n    bool isSubtree(TreeNode* root, TreeNode* subRoot) {\n        \n    }\n};\n","java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {  \n    public boolean isSubtree(TreeNode root, TreeNode subRoot) {\n\n    }\n}\n","csharp":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\npublic class Solution {    \n    public bool IsSubtree(TreeNode root, TreeNode subRoot) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/E36O5SWp-LE","embedding":[-0.0039211395,0.022638856,0.019460818,-0.011814828,0.02398485,0.0367157,0.0055849366,0.0021521868,0.001324962,0.052942395,-0.007645989,-0.015862156,-0.003238796,-0.012085896,-0.018404586,-0.04445516,-0.017152065,-0.014647022,0.002488685,0.04105279,0.0635234,0.0063467314,0.06662666,-0.02321838,0.056718655,-0.023349242,-0.0015200842,0.019629067,0.0012747209,-0.02652728,0.013347765,-0.007267428,-0.02265755,0.05200768,-0.021367641,0.032995526,0.060158413,0.026415115,0.03636051,-0.013058003,-0.020002954,-0.003215428,-0.010356669,0.00944532,-0.032266445,-0.014815271,-0.047932312,0.013095391,-0.017740937,-0.007505781,-0.0238166,0.0064448765,0.038884245,-0.039482463,-0.049465246,-0.029294044,-0.042548336,0.0029186553,0.0039795595,0.022264969,0.0072440603,0.0028134994,0.011768092,0.00472266,0.029555766,-0.015076992,0.0107866395,-0.027331138,-0.024227876,-0.07066464,-0.018189602,0.0017853103,0.019348651,-0.03211689,0.045726378,0.034790184,0.04957741,0.030378317,0.020956365,-0.07432873,0.004958676,0.014833965,0.10528657,0.019722538,-0.0019605698,0.026826391,-0.06610322,-0.026545975,-0.041426677,-0.09003198,-0.012478477,-0.01660058,0.031481285,0.0124037005,0.007449698,-0.057503816,-0.01134747,-0.006641167,-0.018694349,-0.026359031,-0.028994935,-0.07350618,0.026471198,0.008281597,0.018283073,0.031911254,0.056083046,-0.0038510358,-0.07911448,0.003112609,0.008463866,-0.056681264,0.03499582,0.035930537,0.013871207,-0.048119254,-0.06976731,-0.04419344,-0.029350128,-0.01574999,0.02596645,-0.042660505,-0.024265265,-0.05084863,-0.053764947,0.030527871,0.0025961776,0.019572983,0.02841541,0.033818077,0.037762586,0.022863189,-0.041164957,0.03529493,-0.005533527,0.00552418,-0.016918385,-0.017983964,-0.041202344,0.0018787821,-0.00681409,-0.002659271,-0.0045100115,0.030808287,-0.016254736,0.02596645,-0.017591381,0.030602649,-0.06056969,-0.018507406,0.050287798,-0.0024022239,0.01147833,0.006351405,-0.0071459147,-0.021872388,0.012113938,0.0390338,0.006010233,-0.015834114,0.014600286,-0.023760518,0.0035005168,0.031070007,0.008454519,0.04535249,-0.0001507232,-0.005140946,0.011646579,-0.0052764798,0.011637232,0.002458307,0.026583364,0.0025214003,0.023237076,-0.015376102,-0.011291387,0.010291239,0.028920157,0.011207262,0.00995474,0.013516014,0.005229744,0.008562012,0.04479166,-0.02738722,0.03413588,-0.027331138,-0.007842279,0.026751613,-0.005355931,0.030527871,0.017881144,0.016226694,0.0072814487,0.0031429874,0.009814533,0.025499092,-0.009001329,0.037201755,0.030116595,0.000161969,0.011104443,0.024770012,0.042398784,0.015908891,-0.021872388,0.016722094,-0.05802726,-0.040940624,0.031836476,0.00056229095,-0.01134747,0.03189256,0.03436021,0.0065617166,0.029051017,-0.031275645,0.026938556,0.05851331,-0.0020038006,0.017843755,0.034416296,0.053241506,0.031200867,0.020956365,-0.013272988,-0.029929653,0.03172431,-0.022078026,0.0045777787,-0.023386631,0.0024770012,0.019890787,-0.025854284,-0.03499582,-0.03344419,-0.033462886,-0.01981601,-0.046399374,0.011001624,0.05342845,0.021835,-0.009225661,-0.0155350035,-0.029107101,0.028359327,0.03069612,-0.019012153,0.023050131,0.013871207,-0.03959463,-0.030546566,-0.036117483,-0.040604126,-0.029948346,0.009580853,-0.04628721,0.043557834,-0.01762877,-0.034977127,-0.006837458,-0.03877208,-0.085994005,-0.0238166,-0.04538988,0.050624296,0.04595071,0.0006250923,0.019404734,0.038323414,-0.038323414,0.04475427,-0.061018355,-0.015918238,-0.027368527,0.011852217,-0.014684411,-0.013544056,-0.04281006,-0.017834408,0.037070893,0.044342995,0.022900578,-0.022507995,0.0059261085,-0.034621935,-0.039108578,-0.008108674,0.015955627,-0.03684656,-0.01644168,0.010880111,0.0028088258,-0.037164364,-0.033032913,0.00937989,0.029817486,0.023779212,-0.065430224,-0.032827277,-0.032266445,-0.021685444,0.041464064,0.032397307,-0.09085453,0.013272988,0.0072861225,-0.025424315,0.0024442861,-0.03348158,0.010702515,-0.023031438,-0.012777587,-0.019236485,-0.042922225,0.008426478,-0.05597088,-0.020732032,0.004594136,-0.007290796,0.008047917,0.02437743,0.06457028,0.0060756635,0.026826391,-0.033986326,0.049465246,0.007075811,-0.020825505,0.024751319,-0.0028999608,0.04733409,0.014030109,-0.012132633,-0.028490188,-0.017619424,-0.017806368,-0.03929552,-0.0034374234,-0.014581592,-0.0069683185,0.04097801,0.006949624,-0.035145376,0.0051222513,-0.010880111,0.04340828,-0.0046175043,0.025125206,-0.0011987751,-0.04651154,0.00008047333,-0.04363261,-0.02901363,0.02407832,-0.042884834,0.054699663,0.029499682,0.010599696,-0.05137207,-0.011571802,-0.03357505,-0.020002954,0.008828406,-0.009543465,-0.02471393,0.0056550405,0.014478773,0.051484235,0.0049960646,0.015273283,0.013020614,0.019311262,0.011310081,-0.012244798,-0.0044819703,-0.009160231,-0.01977862,0.033818077,-0.019273873,0.013777735,0.007800217,0.0054961387,-0.024358736,-0.012609338,0.026041228,-0.014534856,-0.0045240326,-0.013590791,0.022078026,-0.014394648,0.015721947,0.024508292,0.015422838,0.01012299,-0.015320019,0.03559404,0.03202342,0.03851036,0.008066611,0.019479511,-0.046249818,0.026957251,-0.02093767,0.016759483,0.008781671,0.02179761,0.0033112366,-0.05174596,-0.006781375,0.017124023,-0.0077254395,-0.017460521,0.025985144,0.018404586,-0.038809467,-0.03030354,0.024302654,-0.02252669,0.042361394,-0.014104886,0.006571064,0.010515572,0.06255129,0.0034841592,0.013787082,0.024190487,0.0070477696,-0.022040637,0.042099673,0.003839352,-0.042099673,-0.007664683,0.008907857,-0.012833671,0.051559012,0.054437943,-0.01343189,-0.0062999954,-0.009010676,-0.032659028,0.024863483,-0.0147218,0.0032341224,0.0625139,0.039445076,0.01809613,-0.01293649,-0.047782756,-0.020657256,0.012469131,-0.021255475,-0.010225809,0.0050428007,-0.0109175,0.02222758,0.022751022,0.033556357,-0.009076106,-0.032808583,-0.00078691525,0.008664831,0.031107396,0.02699464,-0.047745366,0.0054494026,0.0075899055,0.032808583,-0.07260885,0.05342845,-0.0314252,0.022601468,0.004479633,-0.049614802,-0.003215428,0.023536185,0.018012006,-0.010880111,-0.03963202,-0.03194864,-0.013656221,0.03221036,0.017656812,0.040230237,-0.04079107,0.06569194,0.04340828,-0.037370004,0.0010533098,0.020320756,-0.014226399,0.017189454,-0.0026055248,0.033518966,0.03568751,0.0033369414,-0.00037943685,0.00055937,-0.02966793,-0.025143899,0.014385302,-0.026658142,-0.0007489424,-0.008155409,-0.06397206,-0.040566735,-0.0045474004,-0.008926552,0.03086437,-0.03301422,-0.0075992527,0.029107101,0.030640038,0.015142422,-0.030583955,-0.044529937,-0.0067299656,0.00995474,-0.024919568,0.01111379,-0.017357703,0.037257835,0.0023005733,-0.004755375,0.008309638,0.0059962124,-0.017152065,-0.04419344,0.014002067,-0.0005053316,-0.0005844905,0.04651154,0.022844493,-0.010590348,0.017535299,-0.000115890354,0.011020319,-0.035837065,-0.016161265,0.012861712,-0.015993016,-0.011328775,-0.009786491,-0.024097016,0.025031732,-0.0024442861,-0.04737148,0.017423132,0.022134108,0.01925518,-0.017722243,-0.002829857,-0.055260494,0.012833671,-0.009066759,-0.010814681,-0.010141684,-0.025816895,0.013936637,-0.04591332,-0.0070103807,0.009711714,0.012469131,0.0039561917,0.014198358,-0.03030354,0.01611453,0.02067595,0.05283023,0.06580411,-0.021685444,-0.01925518,-0.010422099,0.0096088955,-0.02054509,0.009010676,-0.06378512,0.009277071,-0.012179368,0.0025868304,-0.03228514,-0.029256655,0.024003543,-0.020133814,0.008150736,0.010066907,0.04423083,0.026938556,-0.008940572,-0.0025050428,0.024489596,0.044716883,0.010104296,-0.020526394,-0.024302654,-0.0100482125,-0.0077488073,-0.017451175,0.008917204,0.006042948,0.0016684707,0.036659617,0.01588085,0.013553402,-0.014581592,0.030116595,0.016236043,-0.0023099205,0.019984258,0.014170316,-0.043894332,-0.0084311515,0.025480397,0.02192847,0.02385399,-0.0045917993,0.027088111,0.025555175,-0.023461407,0.0043511097,-0.010010824,0.004991391,0.01990948,-0.007393615,0.0074777394,-0.010777292,0.02798544,0.01541349,0.01263738,-0.022732329,0.030097902,0.030621342,-0.0041244407,0.00798716,-0.032995526,-0.019965565,0.00005509721,-0.0058933934,0.024227876,-0.012160674,0.0065523693,-0.0019839378,-0.025013039,-0.044941213,-0.0007927572,0.014338565,0.0337433,-0.016899692,-0.020788116,0.014712453,0.03624834,0.020152507,0.004739017,-0.009552812,0.018909333,-0.038360804,-0.03989374,-0.033687215,-0.0068281107,-0.000129546,0.004075368,-0.004281006,0.024770012,-0.03959463,-0.006954298,-0.0006204187,0.042660505,0.001381045,-0.033892855,-0.009281744,0.0030004429,-0.0036781132,-0.05488661,-0.03314508,0.00995474,0.012861712,-0.009945394,-0.003972549,0.00015700332,-0.013852512,0.030284844,-0.030901758,0.025760813,0.005846658,0.0017420796,-0.011627885,-0.016329514,-0.030397011,-0.020320756,0.0031289665,-0.012543908,-0.03757564,-0.0055896104,-0.039258134,0.014992868,-0.002593841,0.042062286,0.050325185,-0.070253365,-0.02222758,-0.011263345,-0.012646727,-0.017619424,-0.026284255,-0.0007512791,-0.015441532,0.05058691,0.039258134,-0.042922225,0.0050287796,0.0228258,0.026246866,0.016301472,0.0028578986,-0.004245954,0.01319821,-0.0045777787,0.018937375,-0.022021944,-0.056157824,0.00067299657,-0.0031710288,0.04393172,0.01637625,0.015721947,0.00034964274,-0.002163871,-0.028602354,-0.021554584,-0.03735131,0.012871059,-0.026919862,-0.009898658,-0.013291682,0.015656518,-0.047820143,0.056606486,0.013618833,0.00084708765,0.018778473,0.007631968,0.010169726,-0.039183356,-0.0025214003,0.008828406,-0.008627442,0.028340632,-0.05488661,0.060794022,0.05649432,-0.00021323242,-0.008290944,-0.05630738,0.01313278,-0.001952391,-0.0028134994,-0.003769248,0.0132449465,0.0026989966,-0.018563488,-0.02798544,-0.019040193,-0.015506962,0.008304965,0.012553255,-0.023068827,-0.011001624,0.005991539,0.040865846,-0.007575885,-0.0064121615,0.047147147,-0.026153393,0.01875978,0.021479806,-0.00015291393,-0.045988098,0.0007314164,-0.043221336,-0.01485266,0.023330547,0.02755547,0.011468983,0.00828627,0.020339452,0.01343189,-0.014170316,-0.021049837,-0.026545975,-0.024601763,-0.0012560266,-0.0410154,0.0034888329,0.0035612735,0.006837458,-0.01611453,0.00065079704,0.017404439,-0.030920453,-0.024396125,-0.00013473076,0.027835885,0.011459636,-0.0410154,0.058401145,0.0010550623,-0.029181879,-0.02106853,-0.0058933934,0.0036290404,0.041426677,-0.005912088,0.00588872,-0.02798544,0.023442714,-0.014198358,-0.0029724014,0.021367641,0.0037271858,0.033612438,0.019610371,0.0047951005,-0.0064495504,-0.016993163,-0.000015408234,0.022115415,-0.0073422054,0.015460227,0.013740347,0.039482463,-0.017544646,0.0026873127,0.04393172,-0.025517786,0.019984258,0.028714519,-0.0016731442,0.020320756,0.00889851,-0.026732918,0.0062999954,0.012927142,-0.0787406,-0.02686378,0.033705913,0.0084311515,-0.012469131,-0.0001993577,-0.037912138,0.018086782,0.014002067,0.012852365,0.011123138,-0.023461407,0.020862892,0.018843904,0.013721652,-0.002523737,0.00601958,0.029761404,-0.008590053,-0.01485266,-0.0061317463,0.0044656126,-0.013459931,-0.007664683,-0.014506815,0.014394648,0.023835294,0.0058326367,0.0020540415,0.0053512575,-0.018647613,-0.028434105,-0.012945836,-0.048605308,0.02024598,-0.0005175998,0.007552517,0.016796872,-0.023180993,0.00742633,0.02385399,0.0036500716,-0.042623114,-0.0026756288,0.011468983,0.033462886,-0.03794953,0.023461407,-0.0024863484,0.030845676,-0.0065804105,-0.018329808,0.038099084,-0.0097771445,0.011319428,0.013123433,-0.021610668,-0.025499092,-0.0025728098,0.000059588237,0.008851774,0.030191373,-0.014647022,-0.020601172,0.025069121,-0.0013833818,-0.011169873,-0.020975059,-0.008524623,-0.049203526,0.03082698,-0.009314459,-0.014011415,0.0046548927,0.04243617,-0.004869878,0.020713339,-0.017750284,-0.02205933,-0.004264648,-0.007959119,-0.02966793,-0.026826391,-0.020115118,0.036098786,0.018881293,-0.029069712,-0.01399272,-0.0012677105,0.0040940624,-0.0045777787,-0.003418729,0.035930537,-0.023274465,-0.032602943,0.013338418,-0.02725636,0.008557338,-0.041164957,-0.044903826,-0.028957546,-0.021255475,-0.00894992,-0.023610963,-0.041576233,0.019133667,-0.0025330842,0.026452504,0.002694323,0.04251095,-0.01925518,-0.015067645,-0.052979786,-0.008225514,-0.02536823,0.019984258,-0.0066271466,-0.013768388,-0.028957546,0.04699759,0.04224923,0.033780687,0.0185261,-0.010029518,-0.021648055,0.017189454,-0.039482463,0.0036243668,0.003736533,-0.011497024,-0.019759927,0.009739756,-0.03568751,-0.010094948,0.014553551,0.01674079,0.040604126,0.009071433,0.024882179,-0.040566735,0.0032434694,0.029368822,0.02983618,-0.007865647,-0.008618095,-0.027705025,0.059298474,-0.028695825,0.034023713,0.06460767,-0.05914892,-0.019872094,0.052755453,0.0050194324,0.04423083,0.014562897,-0.021311557,-0.03409849,-0.0081460625,0.020021647,0.012254146,-0.02751808,-0.033163775,0.013450583,0.014553551,0.0067626806,-0.008183451,-0.01878782,0.0011724862,-0.0016053772,0.03321986,-0.030378317,0.009786491,0.016862303,-0.021124614,-0.012029814,-0.02725636,0.002661608,0.01326364,0.010160378,0.037014812,0.0022795422,-0.0010170895,0.000323938,-0.021348946,-0.025742117,0.012413047,0.01861957,-0.02321838,0.02536823,-0.01098293,0.0010871933,0.012553255,0.030677427,-0.009739756,-0.017479217,0.026845085,-0.015432185,-0.03529493,-0.017254883,0.05167118,-0.052755453,0.012665422,-0.022620162,-0.030210068,0.0061037047,0.04411866,-0.015955627,0.0061317463,-0.011880259,-0.007122547,0.01646972,-0.018217644,0.026209477,0.0098799635,0.024732623,0.027798496,-0.030920453,-0.020657256,-0.0021475132,0.029555766,0.028490188,-0.008188125,-0.022676244,-0.030116595,0.001990948,-0.06169135,0.036341812,-0.0014745167,-0.051297292,-0.024751319,-0.0077581545,-0.045988098,-0.024452208,-0.02966793,-0.042024896,-0.006229892,0.04875486,-0.0005812774,-0.020862892,0.025573868,-0.017750284,-0.010076254,0.013777735,-0.00014188718,-0.015675211,-0.0002639116,0.001098293,0.03662223,-0.015189159,-0.009435972,0.013450583,-0.0118335225,-0.04071629,0.031537365,0.011805481,-0.018516753,0.0019745906,0.009010676,0.0012127958,-0.025069121,-0.022134108,-0.040604126,-0.0076600094,0.0167034,0.011095096,0.003474812,0.019292569,-0.005846658,0.005117578,0.013665569,-0.013469278,-0.0128430175,-0.026059922,-0.008968614,-0.015665865,-0.0017163749,0.007926404,-0.015563046,0.06830915,0.014712453,-0.044006497,0.002785458,0.0112259565,-0.02398485,-0.011487678,0.026751613,-0.0052250703,-0.008211493,-0.020264674,0.03929552,0.011880259,-0.002231638,0.010169726,-0.0081974715,-0.007650662,-0.0003245222,0.017965268,0.016890343,-0.0028836033,0.029929653,0.03116348,0.0009832059,0.008118021,0.032042112,0.029424906,-0.03258425,-0.018544793,0.012674768,-0.008295617,-0.034864962,-0.016535152,0.024022238,-0.006776701,-0.035276238,-0.009618242,0.008641463,-0.007889016,0.001822699,0.007641315,0.008907857,0.013422542,-0.016254736,0.0013565087,0.013506667,0.018133517,0.014403996,0.017694201,-0.035220154,-0.007814238,-0.02252669,0.014946132,0.02368574,-0.016591234,0.0080292225,0.0013366459,0.023199687,0.02192847,0.019928176,-0.009926699,-0.03149998,-0.020227285,-0.016002363,0.010908153,0.013029961,0.03865991,0.004355783,0.022844493,0.015516309,0.012048508,-0.03206081,-0.020021647,-0.0074450243,0.015357408,-0.011786787,-0.019124318,-0.0031032618,0.0040613473,0.008627442,-0.009721061,0.0046548927,-0.01515177,0.025611257,-0.015329366,-0.018984111,-0.025499092,-0.0022304694,0.011618538,0.013702958,-0.042847447,-0.007720766,-0.02815369,-0.04109018,0.009898658,0.015628476,-0.017712895,0.021031143,-0.030583955,-0.015871502,0.0041150935,-0.0055101593,-0.00093763846,-0.006215871,0.0072160186,0.0067860484,-0.022414524,-0.023966156,0.010506224,-0.02424657,-0.013216904,-0.005977518,0.0027247013,-0.010394058,0.00015262183,0.0061037047,0.04651154,0.027705025,0.0037435433,0.02471393,-0.007926404,0.007963792,0.015011562,-0.050699074,0.0150302565,0.037126977,0.0035005168,-0.0367157,-0.00037476327,0.0021475132,-0.008604074,-0.0028836033,-0.018843904,0.018385893,-0.0026569343,-0.014712453,0.0009411436,0.005323216,0.020189896,0.0009475698,0.044529937,-0.019572983,0.03516407,-0.027592858,0.031537365,-0.012459784,-0.022358442,-0.04277267,0.021816306,0.03482757,0.005117578,0.01610518,0.057690762,0.027088111,-0.011599843,0.016329514,0.0074543715,-0.018535446,0.013908596,-0.005804595,0.042286616,-0.010581002,0.01177744,-0.025648646,0.019928176,-0.0012571949,0.0056550405,0.017722243,-0.026583364,0.010487529,-0.009314459,0.0069683185,0.051446848,0.041426677,0.03847297,-0.0020925987,-0.016357556,-0.008837753,-0.033257246,0.008342353,-0.080011815,0.009136863,0.0065944316,-0.02970532,-0.008977961,0.0122354515,0.029798793,0.050624296,-0.020358145,0.004689945,0.010076254,0.0017467532,0.032602943,-0.011020319,-0.016198654,-0.0030588629,-0.0061037047,-0.0059401295,0.023966156,-0.021348946,-0.029219268,0.0027106805,-0.026751613,0.004708639,-0.0015679885,0.010627737,0.0061971764,-0.010225809,-0.047296703,-0.04213706,-0.017787673,0.015394797,-0.006781375,-0.0051456196,0.015563046,0.03981896,0.010151031,0.03499582,0.007889016,-0.030733509,0.032715112,-0.008646136,0.008917204,0.008253555,0.036435287,0.046137653,-0.04479166,-0.009936047,-0.03636051,0.0008441667,0.0004965686,0.028621048,0.021199392,0.01964776,0.00823486,0.016544499,-0.010683821,-0.04419344,-0.035351012,0.012609338,0.01660993,0.009272397,-0.01128204,0.018778473,0.015404143,0.014273135,-0.010814681,0.010693167,-0.015133075,-0.021591973,-0.03215428,-0.018956069,-0.034977127,-0.025293455,-0.01478723,0.024396125,-0.018329808,0.024452208,0.030509178,0.010300586,-0.008837753,0.0038113103,-0.0060850107,0.012590644,0.010749251,0.017301619,0.009917352,-0.021853693,0.043483056,-0.02931274,-0.00026537213,-0.0023157625,-0.0118335225,-0.025854284,0.0043183947,0.028041523,-0.014385302,0.0019114972,-0.007393615,0.025162593,-0.00798716,0.009085453,-0.019049542,0.0008762976,-0.008692872,0.012599991,0.029929653,-0.037799973,0.022788411,0.008057265,0.002320436,0.009225661,-0.01875978,-0.02067595,0.010403405,0.030322233,-0.031705614,-0.013450583,-0.010347322,-0.024938261,0.0030752204,-0.013899248,0.03602401,-0.036697008,-0.029181879,0.022134108,-0.021816306,-0.026545975,-0.016852956,-0.014805924,0.0051456196,-0.023367936,0.0060709896,0.008094653,-0.033294637,0.025256066,0.016179958,0.017142719,-0.004512348,-0.02153589,-0.011197915,-0.010412753,0.01375904,-0.012814976,0.002547105,-0.037856057,-0.0031523346,0.031051314,-0.014618981,0.011506371,-0.012543908,-0.018750431,0.020152507,-0.004874551,-0.0117307035,-0.022433218,0.0021416713,0.018956069,-0.0033416147,0.01263738,0.038697302,0.0011491183,0.0068094167,0.0005529438,0.009814533,0.018899987,0.012385006,0.005715797,-0.0054821176,-0.01981601,-0.0070664636,0.0012011119,0.006571064,-0.011001624,0.0115624545,0.0055195065,-0.029611848,0.02424657,0.0045240326,0.02785458,0.012029814,0.024882179,-0.0147218,0.03877208,0.0031897232,0.012983225,-0.001840225,-0.0008389089,-0.013861859,0.012394353,-0.00034818225,0.0019512227,-0.018937375,0.008155409,0.04886703,0.00515964,0.05593349,0.011497024,-0.031537365,0.011683968,-0.02166675,0.0027083438,-0.030714815,0.00631869,0.027966745,-0.013226252,0.0070477696,0.0033579725,-0.0012560266,0.0003569452,0.0025891673,-0.0055288537,0.0029116448,-0.0100482125,-0.043520443,0.0029350128,0.03413588,0.033088997,-0.014226399,0.0048932456,0.028621048,-0.019329956,0.05054952,0.04109018,0.027611554,0.001330804,0.014562897,0.02824716,-0.02325577,-0.033855464,0.04621243,0.0304344,0.027088111,0.007089832]},{"id":"design-word-search-data-structure","name":"Design Word Search Data Structure","description":"Design a data structure that supports adding new words and searching for existing words.\n\nImplement the `WordDictionary` class:\n\n* `void addWord(word)` Adds `word` to the data structure.\n* `bool search(word)` Returns `true` if there is any string in the data structure that matches `word` or `false` otherwise. `word` may contain dots `'.'` where dots can be matched with any letter.\n\n**Example 1:**\n\n```java\nInput:\n[\"WordDictionary\", \"addWord\", \"day\", \"addWord\", \"bay\", \"addWord\", \"may\", \"search\", \"say\", \"search\", \"day\", \"search\", \".ay\", \"search\", \"b..\"]\n\nOutput:\n[null, null, null, null, false, true, true, true]\n\nExplanation:\nWordDictionary wordDictionary = new WordDictionary();\nwordDictionary.addWord(\"day\");\nwordDictionary.addWord(\"bay\");\nwordDictionary.addWord(\"may\");\nwordDictionary.search(\"say\"); // return false\nwordDictionary.search(\"day\"); // return true\nwordDictionary.search(\".ay\"); // return true\nwordDictionary.search(\"b..\"); // return true\n```\n\n**Constraints:**\n* `1 <= word.length <= 20`\n* `word` in `addWord` consists of lowercase English letters.\n* `word` in `search` consist of `'.'` or lowercase English letters.\n","difficulty":"Medium","concepts":["Trie"],"solutions":{"python":"class TrieNode:\n    def __init__(self):\n        self.children = {}  # a : TrieNode\n        self.word = False\n\n\nclass WordDictionary:\n    def __init__(self):\n        self.root = TrieNode()\n\n    def addWord(self, word: str) -> None:\n        cur = self.root\n        for c in word:\n            if c not in cur.children:\n                cur.children[c] = TrieNode()\n            cur = cur.children[c]\n        cur.word = True\n\n    def search(self, word: str) -> bool:\n        def dfs(j, root):\n            cur = root\n\n            for i in range(j, len(word)):\n                c = word[i]\n                if c == \".\":\n                    for child in cur.children.values():\n                        if dfs(i + 1, child):\n                            return True\n                    return False\n                else:\n                    if c not in cur.children:\n                        return False\n                    cur = cur.children[c]\n            return cur.word\n\n        return dfs(0, self.root)\n","javascript":"class TrieNode {\n    constructor() {\n        this.children = Array(26).fill(null);\n        this.word = false;\n    }\n}\n\nclass WordDictionary {\n    constructor() {\n        this.root = new TrieNode();\n    }\n\n    /**\n     * @param {string} word\n     * @return {void}\n     */\n    addWord(word) {\n        let cur = this.root;\n        for (const c of word) {\n            if (cur.children[c.charCodeAt(0) - 'a'.charCodeAt(0)] === null) {\n                cur.children[c.charCodeAt(0) - 'a'.charCodeAt(0)] =\n                    new TrieNode();\n            }\n            cur = cur.children[c.charCodeAt(0) - 'a'.charCodeAt(0)];\n        }\n        cur.word = true;\n    }\n\n    /**\n     * @param {string} word\n     * @return {boolean}\n     */\n    search(word) {\n        return this.dfs(word, 0, this.root);\n    }\n\n    /**\n     * @param {string} word\n     * @param {number} j\n     * @param {TrieNode} root\n     * @return {boolean}\n     */\n    dfs(word, j, root) {\n        let cur = root;\n\n        for (let i = j; i < word.length; i++) {\n            const c = word[i];\n            if (c === '.') {\n                for (const child of cur.children) {\n                    if (child !== null && this.dfs(word, i + 1, child)) {\n                        return true;\n                    }\n                }\n                return false;\n            } else {\n                if (\n                    cur.children[c.charCodeAt(0) - 'a'.charCodeAt(0)] === null\n                ) {\n                    return false;\n                }\n                cur = cur.children[c.charCodeAt(0) - 'a'.charCodeAt(0)];\n            }\n        }\n        return cur.word;\n    }\n}\n","cpp":"class TrieNode {\npublic:\n    std::vector<TrieNode*> children;\n    bool word;\n\n    TrieNode() : children(26, nullptr), word(false) {}\n};\n\nclass WordDictionary {\npublic:\n    TrieNode* root;\n\n    WordDictionary() : root(new TrieNode()) {}\n\n    void addWord(std::string word) {\n        TrieNode* cur = root;\n        for (char c : word) {\n            if (cur->children[c - 'a'] == nullptr) {\n                cur->children[c - 'a'] = new TrieNode();\n            }\n            cur = cur->children[c - 'a'];\n        }\n        cur->word = true;\n    }\n\n    bool search(std::string word) {\n        return dfs(word, 0, root);\n    }\n\nprivate:\n    bool dfs(std::string word, int j, TrieNode* root) {\n        TrieNode* cur = root;\n\n        for (int i = j; i < word.size(); i++) {\n            char c = word[i];\n            if (c == '.') {\n                for (TrieNode* child : cur->children) {\n                    if (child != nullptr && dfs(word, i + 1, child)) {\n                        return true;\n                    }\n                }\n                return false;\n            } else {\n                if (cur->children[c - 'a'] == nullptr) {\n                    return false;\n                }\n                cur = cur->children[c - 'a'];\n            }\n        }\n        return cur->word;\n    }\n};\n","java":"class TrieNode {\n    \n    TrieNode[] children;\n    boolean word;\n    \n    public TrieNode() {\n        children = new TrieNode[26];\n        word = false;\n    }\n}\n\nclass WordDictionary {\n    \n    private TrieNode root;\n\n    public WordDictionary() {\n        root = new TrieNode();\n    }\n\n    public void addWord(String word) {\n        TrieNode cur = root;\n        for (char c : word.toCharArray()) {\n            if (cur.children[c - 'a'] == null) {\n                cur.children[c - 'a'] = new TrieNode();\n            }\n            cur = cur.children[c - 'a'];\n        }\n        cur.word = true;\n    }\n\n    public boolean search(String word) {\n        return dfs(word, 0, root);\n    }\n\n    private boolean dfs(String word, int j, TrieNode root) {\n        TrieNode cur = root;\n\n        for (int i = j; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '.') {\n                for (TrieNode child : cur.children) {\n                    if (child != null && dfs(word, i + 1, child)) {\n                        return true;\n                    }\n                }\n                return false;\n            } else {\n                if (cur.children[c - 'a'] == null) {\n                    return false;\n                }\n                cur = cur.children[c - 'a'];\n            }\n        }\n        return cur.word;\n    }\n}\n","csharp":"public class TrieNode {\n    public TrieNode[] children = new TrieNode[26];\n    public bool word = false;\n}\n\npublic class WordDictionary {\n    \n    private TrieNode root;\n\n    public WordDictionary() {\n        root = new TrieNode();\n    }\n\n    public void AddWord(string word) {\n        TrieNode cur = root;\n        foreach (char c in word) {\n            if (cur.children[c - 'a'] == null) {\n                cur.children[c - 'a'] = new TrieNode();\n            }\n            cur = cur.children[c - 'a'];\n        }\n        cur.word = true;\n    }\n\n    public bool Search(string word) {\n        return Dfs(word, 0, root);\n    }\n\n    private bool Dfs(string word, int j, TrieNode root) {\n        TrieNode cur = root;\n\n        for (int i = j; i < word.Length; i++) {\n            char c = word[i];\n            if (c == '.') {\n                foreach (TrieNode child in cur.children) {\n                    if (child != null && Dfs(word, i + 1, child)) {\n                        return true;\n                    }\n                }\n                return false;\n            } else {\n                if (cur.children[c - 'a'] == null) {\n                    return false;\n                }\n                cur = cur.children[c - 'a'];\n            }\n        }\n        return cur.word;\n    }\n}\n"},"starterCode":{"python":"class WordDictionary:\n\n    def __init__(self):\n        \n\n    def addWord(self, word: str) -> None:\n        \n\n    def search(self, word: str) -> bool:\n        \n","javascript":"class WordDictionary {\n    constructor() {}\n\n    /**\n     * @param {string} word\n     * @return {void}\n     */\n    addWord(word) {}\n\n    /**\n     * @param {string} word\n     * @return {boolean}\n     */\n    search(word) {}\n}\n","cpp":"class WordDictionary {\npublic:\n    WordDictionary() {\n        \n    }\n    \n    void addWord(string word) {\n        \n    }\n    \n    bool search(string word) {\n        \n    }\n};\n","java":"class WordDictionary {\n\n    public WordDictionary() {\n\n    }\n\n    public void addWord(String word) {\n\n    }\n\n    public boolean search(String word) {\n\n    }\n}\n","csharp":"public class WordDictionary {\n\n    public WordDictionary() {\n        \n    }\n    \n    public void AddWord(string word) {\n        \n    }\n    \n    public bool Search(string word) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/BTf05gs_8iU","embedding":[0.042806055,0.038857,-0.017992482,-0.0022754576,0.02903716,0.033176277,0.035773784,0.04561474,-0.04367189,0.095368594,-0.013272623,-0.0037484337,-0.00020589988,-0.02415892,-0.03150796,-0.08607671,0.04869796,0.021772591,0.036365084,0.03906818,0.0482756,0.046670638,0.012765792,0.010801824,0.061664373,0.030980011,0.029691817,0.016704287,0.016841553,-0.052625895,0.042172518,-0.014603052,-0.016947143,0.06656373,-0.020336572,-0.009999342,0.05317496,0.02781232,0.00798258,0.03406323,-0.042721584,0.004780573,-0.0056701656,-0.03007194,-0.036871914,-0.027094312,-0.030916657,0.035752665,-0.042784937,-0.008975123,-0.026883133,0.03674521,-0.00317297,0.022553956,-0.048951376,-0.050176214,-0.04124333,-0.022976315,0.0032152056,0.014075104,0.05106317,0.0041919104,0.01719,0.05157,-0.009355245,-0.040567555,0.012850264,0.009650896,-0.0008348184,-0.01197387,0.010374186,-0.007333203,-0.018393721,-0.02895269,-0.02200489,0.027981265,0.021550853,0.016820436,-0.02658748,-0.007301526,-0.008220157,-0.018868875,0.038202345,-0.01943906,-0.011308654,-0.039216008,-0.032183733,0.021360792,0.015616713,-0.08734378,0.009545307,-0.016503667,0.0117838085,0.02935393,0.0061822757,-0.010632881,-0.01974527,0.01339933,-0.019386265,-0.05157,0.028255798,-0.019301793,-0.010390025,0.02464463,0.014212371,-0.05575135,0.005554017,-0.014560817,-0.024855811,0.0059816553,-0.08586553,0.014349638,0.049373735,-0.05144329,0.03805452,-0.047599826,-0.00817792,-0.0067366213,-0.008980402,-0.014391873,0.0134732425,-0.061833315,-0.008980402,0.029480638,0.0036243657,0.069689184,0.021392468,-0.014233489,0.024264509,0.0011641262,-0.013124797,-0.00194417,-0.010917973,0.016134104,-0.0771227,0.014307401,-0.009450276,0.0059394194,-0.041095503,-0.010970768,0.0067155035,-0.04337624,0.009070153,0.03936383,0.008246554,-0.014497463,-0.049669385,0.004081041,-0.022997431,0.0075021465,0.036597382,-0.035689313,0.026460774,0.03418994,0.011319214,-0.017211117,0.020209864,0.044643316,0.0037457938,-0.009677294,-0.028002383,-0.02005148,0.031127837,-0.027939029,0.04645946,-0.00088365364,-0.016292488,0.00013050225,0.014286283,-0.027960148,0.03231044,-0.029543992,-0.0063670576,0.031866964,0.020885639,0.0057440787,-0.017770743,-0.0004358874,-0.046670638,-0.014951498,-0.03304957,0.015500565,-0.03281727,-0.006784137,0.048655722,-0.028445859,0.01973471,-0.0011258499,-0.0116571,-0.0060133324,0.009735368,0.03387317,0.044347666,0.008605558,0.023504263,-0.0032310442,0.027939029,0.005464266,-0.015722303,0.0040176874,-0.010569527,-0.025003636,-0.05984823,-0.017654594,-0.016714847,-0.0061558783,-0.010126051,0.056047,-0.01954465,-0.058369976,0.015975717,-0.033176277,-0.024011092,-0.017876333,-0.051527765,0.035330307,-0.00378539,-0.047304176,0.03440112,0.0030937777,0.009038476,0.029417284,0.023673207,0.034422234,-0.03773775,0.014740319,-0.023863267,-0.040673144,-0.024222272,0.017633475,0.028002383,-0.027326608,0.007993138,-0.021445263,-0.03193032,-0.06276251,-0.033471927,-0.04616381,0.0007701447,-0.033535283,-0.057145134,-0.029016044,-0.05782091,0.0218993,-0.015849011,0.0014848548,-0.043101706,-0.00900152,0.015585037,-0.0066627087,0.04172904,-0.0184254,-0.020230982,0.0024945561,-0.016239693,-0.007301526,-0.007887549,-0.010712073,0.037294276,0.0092496555,-0.00327328,0.013747776,-0.00071537006,-0.045699213,-0.026249593,-0.06238238,0.02679866,0.00023906163,0.0036402042,0.005226689,0.03499242,-0.05401968,0.005474825,-0.049711622,0.032057025,-0.023778796,-0.0040757614,-0.0145502575,-0.019164527,-0.0041787117,-0.014106781,0.034612298,0.020473838,-0.001595724,-0.010917973,0.024517924,0.022490602,-0.03446447,-0.043756362,-0.008742825,0.006731342,-0.0021909857,-0.033408575,-0.008732267,-0.03959613,-0.027368845,-0.022342775,0.033007335,0.05482216,-0.003920017,0.01831981,-0.0020695578,0.022385012,0.049796093,-0.020494957,-0.01719,0.04196134,-0.020526633,0.040250786,-0.0046274676,0.040145196,0.0008981722,0.024517924,-0.005250447,-0.03292286,-0.00695836,0.025658293,-0.023081904,0.030346474,0.024940282,-0.03406323,0.0019916852,0.082993485,-0.00053553766,-0.010020461,0.021234084,-0.033704225,0.0035874094,0.009075433,-0.006604634,0.0038619426,-0.018573225,0.045868155,0.07028049,-0.050683044,0.0014518581,0.019122291,0.059045747,-0.042214755,0.018573225,0.0036481235,-0.005686004,0.038519114,0.03292286,-0.05862339,0.02087508,-0.005474825,0.02527817,-0.01258629,0.019618561,-0.022659546,-0.032458268,0.026925368,-0.011002445,-0.049796093,-0.02405333,-0.020632222,0.017453974,0.0027770086,0.041306682,-0.022701781,-0.014159576,-0.019375706,0.020885639,-0.07230781,0.005749358,-0.021857064,-0.021519177,0.06639479,0.026439656,-0.0019811264,-0.015616713,0.0028139648,0.0024483607,-0.0019520891,-0.0041787117,-0.0041971896,-0.008003698,0.0020682379,0.04337624,-0.014497463,-0.024074446,-0.023103021,0.03262721,-0.0019177726,-0.011108034,0.021434704,0.018256456,0.017063292,-0.031634666,-0.0024285626,0.018330367,0.03560484,0.040778734,-0.006435691,-0.011023562,-0.000603511,0.035984963,0.037463218,-0.0006087905,0.028910454,-0.013262063,-0.047092997,-0.018583784,0.00307002,0.0076974877,0.015658949,0.04071538,0.027706731,-0.035984963,0.0071061854,0.04417872,0.0062245117,-0.021160172,-0.009957107,0.017274471,0.001012341,-0.03877253,-0.026819779,-0.032183733,-0.006229791,-0.027221018,-0.03233156,0.00940804,0.042066928,0.015606155,0.009788163,0.005168615,0.000859236,0.019164527,0.038329054,0.036766324,0.000011755101,-0.02679866,0.060735185,-0.040483084,-0.031339016,0.029459521,-0.0020392006,0.0069214036,-0.013420448,-0.015838452,0.020368248,-0.02055831,0.011255859,-0.019101173,-0.011847162,0.0062245117,-0.0011146311,-0.04396754,0.0045984304,0.02179371,-0.018076953,0.008785062,0.0075443825,-0.016619815,-0.016598698,0.054188624,0.0074968673,-0.033429693,-0.025763882,0.03879365,-0.047008526,-0.0017263913,-0.01309312,0.023081904,0.033640873,0.0041285562,0.068295404,-0.013283182,0.031360134,0.0072909673,0.020135952,-0.054653216,0.008631956,0.023926621,-0.0005342178,0.015131001,-0.008573882,-0.034548942,-0.031972554,-0.03672409,0.076151274,-0.024623513,-0.035330307,0.01698938,-0.0002700786,0.03254274,-0.008858974,-0.0233142,-0.052245773,0.02781232,0.017021056,-0.00675246,0.031275664,0.012818587,0.0116676595,-0.018298691,0.049373735,-0.050894223,-0.010627601,-0.016757082,-0.014412991,0.03490795,-0.016450873,-0.012047783,-0.010395303,-0.037061978,0.0056120916,0.030874422,-0.044896733,-0.023483144,0.0074493517,0.013420448,0.010833501,0.0037457938,0.00153501,0.003920017,-0.023377554,-0.026671953,-0.0005279484,-0.02618624,0.019671356,-0.0296707,0.0010261997,0.000015735337,-0.007591898,-0.053555086,-0.049373735,-0.0071589802,0.0013324098,0.012332874,0.0031148954,0.013958955,-0.025109226,0.014793114,-0.013673863,0.0021817468,0.009334127,0.0038698616,0.0068686088,0.04912032,-0.012385669,-0.013072002,0.013040326,0.05646936,-0.015247149,-0.025848353,-0.018488754,0.012375111,-0.011192506,-0.042573757,-0.015490006,-0.046670638,-0.0058971834,0.0052768444,0.0071431417,-0.016704287,-0.01953409,0.010379465,-0.003283839,-0.02341979,0.00347918,0.0059341397,-0.001933611,-0.0031386532,-0.008146244,0.0013126117,-0.015405534,-0.019903654,-0.0012439784,-0.028804865,-0.016229134,-0.033683106,-0.021445263,-0.044052012,0.002383687,-0.03889924,0.009323569,-0.010801824,0.00726457,-0.030599888,0.013885043,0.00034811598,-0.045488033,0.040863205,-0.016957702,0.05372403,0.01831981,-0.0033577518,0.049669385,0.019713594,0.056215946,-0.022173833,-0.01963968,-0.043017235,0.006372337,-0.018699933,-0.02322973,0.054061916,0.0009727449,0.041285563,0.0150465295,0.013842807,0.031339016,0.0022543396,0.018193102,0.02005148,-0.020294337,-0.0074018366,-0.0110552395,-0.0071061854,-0.03203591,-0.0012353993,0.025447112,0.010875737,-0.024750222,-0.009297172,0.015004293,-0.032183733,0.02517258,0.01145648,-0.008880092,0.011034122,-0.024707984,0.019893095,-0.04675511,0.013694981,0.0017897451,-0.020252101,-0.046670638,-0.0061981142,0.038012285,0.018435957,-0.009270774,-0.0352036,0.037927814,-0.014138458,0.005965817,0.028424742,-0.007232893,0.014254606,-0.026017297,0.013790012,0.0036164464,-0.0046591447,-0.011329773,0.034527823,0.036132786,-0.014655847,0.025151461,0.033577517,0.03672409,0.029016044,0.0021738275,-0.015933482,-0.03435888,-0.010653999,-0.0025988258,0.008204318,-0.025932824,-0.0074123954,0.031360134,-0.01688379,-0.019597445,-0.004902001,-0.031127837,0.018858317,0.008705869,0.026840895,-0.025088107,0.0142018115,0.061664373,-0.02876263,-0.05516005,-0.017918568,0.0128608225,-0.015490006,-0.018889993,0.018435957,-0.012417346,0.009450276,-0.020917315,0.036681853,0.030198649,0.025953943,-0.014898703,-0.0044928407,-0.0031122558,0.0130086485,0.011065798,-0.023884386,-0.01861546,0.0000121366265,0.025130343,0.007745003,-0.007591898,0.035351425,-0.006066127,-0.07213887,0.02924834,0.0011779849,-0.010627601,0.029184988,-0.0142018115,-0.00603445,-0.012470141,0.032986216,0.0023282524,-0.0042816615,0.012449023,0.014275724,-0.004440046,0.041306682,-0.055497933,0.03925824,-0.0071906573,-0.01370554,-0.027453316,-0.02046328,-0.024370098,0.042193636,0.01740118,-0.02700984,0.007966741,0.017992482,0.03911042,-0.042278107,0.014708642,0.023377554,-0.042573757,0.013599951,0.021413587,0.00024434112,-0.03900483,0.0130086485,-0.00012778,0.03100113,-0.034232173,-0.024855811,-0.00777668,0.034612298,0.0039728116,0.0057018427,-0.028466977,0.0064620883,-0.0022041844,0.033577517,-0.05532899,0.016186899,-0.04265823,0.004009768,0.009064874,-0.045445796,0.007834754,-0.0069689187,-0.011403685,0.021857064,-0.025510466,-0.005686004,-0.0063881758,-0.010680396,-0.04848678,-0.042109165,-0.0063301013,-0.0074493517,-0.028192444,-0.014497463,-0.009571704,0.007312085,0.00460371,-0.031148955,0.045445796,0.031529076,-0.01892167,0.018963907,0.002567149,0.023821032,0.030747714,-0.04616381,-0.002536792,0.0054537067,-0.007813636,-0.011635982,0.010595924,-0.03600608,-0.026228476,0.02988188,-0.00931301,-0.036132786,-0.02320861,-0.003233684,0.015373857,0.02517258,0.020801166,-0.013694981,-0.012797469,-0.017021056,0.023778796,-0.041771278,0.016524784,0.032057025,-0.029396167,0.02230054,-0.03710421,0.047430884,0.011952751,-0.07196993,-0.007892828,-0.02538376,-0.03220485,0.03212038,0.008932887,-0.006372337,-0.0419191,0.010907413,-0.018847758,-0.032965098,0.034042113,0.020938434,-0.018045276,0.003846104,0.013050884,0.0066679884,0.01954465,0.003590049,0.04204581,0.005268925,-0.0018504591,-0.03294398,0.04172904,0.015321062,-0.023483144,0.033809815,0.021550853,0.02536264,-0.0186049,0.0063776164,-0.005036628,-0.011298096,-0.009487232,-0.0018253815,0.0017541086,-0.08172641,0.012385669,-0.03435888,-0.028213562,0.00016597378,0.0058971834,0.013135356,0.014212371,0.016725404,0.04460108,-0.009386922,-0.0057176813,0.04124333,0.024729103,0.015648391,-0.023546498,-0.0027268534,0.02639742,0.0046617845,-0.027115429,0.033260748,0.031360134,0.0056754453,0.013029766,0.018435957,-0.023567617,0.015479446,0.020611105,0.025616055,0.004474363,-0.035647076,-0.018245896,-0.0372098,-0.012829146,-0.00817792,-0.02658748,0.0033894286,0.03784334,0.024876928,0.014106781,-0.0073912777,-0.0010070616,-0.018573225,0.0024707986,0.017897451,0.018298691,-0.042193636,0.0071114646,0.011509275,0.012702438,-0.0036613222,-0.03222597,0.010601204,0.020220423,-0.009566424,0.047008526,0.012343434,-0.02998747,-0.014286283,0.02781232,0.02106514,-0.0018636578,-0.0049838326,0.024707984,0.001912493,-0.007903388,-0.052837074,-0.0017541086,-0.03418994,-0.033387456,0.023483144,0.042869408,0.0037985886,-0.012459582,-0.004426847,0.035372544,0.030980011,-0.033218514,-0.022976315,-0.02629183,0.01758068,-0.03701974,-0.049753856,-0.038244583,-0.0018438598,-0.006361778,-0.05186565,0.008631956,0.014381315,-0.006208673,-0.002495876,0.02085396,0.013547156,0.00971425,0.021835946,0.013251505,-0.0014188613,-0.017021056,-0.017823538,-0.00644625,-0.0009456876,-0.036576264,-0.016936585,-0.019122291,-0.014434109,0.049162555,0.0039332155,-0.010712073,0.01094965,0.0073912777,-0.010405863,0.0069002854,-0.011688777,-0.004123277,-0.028065737,0.0018662976,0.03283839,0.0027928469,0.03742098,-0.003241603,0.014951498,0.011034122,0.01709497,-0.010981327,0.017791862,-0.008383821,-0.029691817,0.039638367,0.010036299,0.024623513,0.025890589,-0.0037246759,-0.028804865,-0.010775426,0.033387456,0.013547156,-0.017654594,0.0051580556,0.027664496,-0.010701514,0.0038381848,-0.028276917,0.008415497,0.023060786,0.02536264,-0.03235268,-0.009624499,0.018330367,0.035773784,-0.027495552,0.006784137,-0.006208673,0.040018488,-0.018488754,-0.012913617,-0.0074493517,-0.010701514,-0.0043661334,-0.01319871,0.02517258,0.023926621,-0.0029855482,-0.00025918966,0.036576264,0.009635058,-0.0010314792,-0.015785657,-0.02098067,-0.004674983,0.009635058,0.040335257,-0.0039543333,0.00060747063,0.03212038,-0.035140246,0.012216725,0.03446447,0.040356375,-0.0062667476,0.01780242,0.014064545,0.037505455,0.018794963,0.008362702,-0.010527291,0.0052319686,0.04244705,0.030747714,0.042700466,0.017707389,0.030430945,0.00490992,-0.0010031019,-0.0050075906,-0.02352538,0.0030964173,-0.009481953,-0.018752728,-0.027875675,-0.007085067,-0.01708441,-0.010057417,-0.012976971,-0.03089554,0.020083157,0.018393721,0.041201092,-0.01226952,0.017992482,-0.034739003,-0.0006186895,0.043080587,-0.0027638099,0.06107307,0.03549925,0.015109883,0.00071866973,-0.023060786,-0.0266086,-0.0039305757,-0.023250848,0.031127837,0.0008671552,0.013747776,-0.068295404,0.05338614,-0.002127632,0.012491259,-0.012449023,-0.015680067,-0.016134104,-0.022490602,-0.013758335,-0.017654594,-0.015500565,-0.037589926,0.00245628,0.050809752,0.0086530745,0.00644625,0.04134892,-0.015226032,-0.0057546375,0.03254274,-0.02046328,-0.02230054,0.0043344563,0.024285626,0.026376301,0.01176269,0.008056493,-0.006525442,0.011741572,-0.014106781,-0.0050207893,0.027748967,-0.011023562,0.0032785595,0.014043427,-0.033493046,-0.03735763,-0.07991027,-0.02914275,-0.0014901343,0.013230387,0.0040625627,0.03725204,-0.0024298825,-0.024095565,-0.00064112735,0.016767642,0.013863925,-0.019037819,-0.030937776,0.014729761,-0.011266419,0.006351219,0.021212967,0.010960208,0.050176214,0.058919042,-0.01810863,0.0066151936,-0.026355185,-0.002477398,-0.020494957,0.007428234,-0.0014518581,-0.027221018,0.004339736,-0.017527886,-0.0009298491,0.02322973,-0.0027189343,0.009524189,0.015183796,0.002126312,0.0017712668,-0.007507426,0.010205243,0.011076357,0.03254274,0.042827174,0.019270116,0.045023438,0.00017141824,-0.051527765,0.02876263,0.03549925,-0.022363894,-0.041982457,-0.016398078,-0.003590049,-0.012575731,0.010917973,-0.000010007303,-0.011445921,-0.03180361,-0.015574478,0.021920417,-0.014339078,-0.018900553,-0.0041681523,-0.009318289,0.022532837,0.0035108568,-0.024581278,0.012185049,-0.040398613,-0.010374186,-0.0019652878,-0.001053257,-0.014465786,-0.018383162,0.03171914,0.0017211117,0.015542801,-0.01963968,-0.013156474,0.00090279174,-0.015500565,-0.024813574,-0.01954465,0.016239693,0.0037985886,0.028614802,0.00757078,0.03499242,-0.03970172,-0.009434437,-0.014381315,-0.0034897388,-0.015394975,-0.0053322786,0.034633413,-0.002588267,-0.026355185,-0.013431007,0.0056120916,-0.020262659,0.006361778,-0.009418599,0.03450671,-0.0067155035,-0.027896794,-0.021624766,0.01503597,-0.010057417,-0.0014835349,-0.045192383,-0.047430884,-0.0017145124,-0.035625957,-0.023757678,-0.0046301074,-0.0026384222,-0.01657758,-0.017633475,-0.007417675,0.018552106,-0.038244583,0.0043846113,-0.0123962285,0.041581213,0.022976315,0.022955196,-0.03858247,0.016936585,0.020209864,-0.045783684,-0.00429486,-0.0040968796,0.0032204853,0.008610838,-0.029522873,0.05287931,0.034844592,0.020220423,0.00603445,-0.005686004,-0.0037378746,0.0063670576,-0.008045933,-0.00037088373,0.016862672,0.0042420654,-0.021223525,0.016503667,0.011467039,-0.02046328,0.005052466,0.007174819,-0.019681916,0.010152448,0.00037220362,-0.007892828,0.00015310504,-0.019460177,0.00015170267,0.00286412,-0.037167568,-0.023989975,-0.008927607,-0.021709237,0.009867355,-0.040630907,-0.025911707,0.03446447,0.0116571,0.009788163,0.0016181618,-0.008262392,-0.005992214,0.0004959415,0.005136938,-0.0109390905,0.0052398876,0.021096818,0.019502414,0.02405333,0.010252758,0.036660735,-0.008346864,-0.027347727,0.010701514,0.020062039,0.0032284043,-0.008214877,0.028298033,-0.021286879,0.03693527,0.02935393,0.0019256917,0.010168286,-0.02067446,0.016999938,-0.036766324,0.008558043,0.025763882,-0.004131196,-0.016039072,-0.0023863267,-0.025130343,-0.01688379,-0.017253354,0.014402432,0.023187494,-0.011224183,0.021339674,0.033387456,-0.0028878776,-0.0159546,0.030663243,0.010627601,0.038392406,0.021381909,-0.0069319624,-0.024834692,-0.004255264,-0.049247026,-0.04890914,-0.023398673,0.03271168,-0.0045588342,-0.02865704,0.007396557,0.016345283,-0.02035769,-0.020473838,-0.0413278,0.0024813574,-0.0123962285,-0.023926621,0.01023164,0.010041579,0.016926026,0.01709497,-0.0066785472,-0.024686867,0.010358348,0.009297172,0.0025645094,-0.022891842,0.016123544,0.019122291,0.015880687,-0.009228538,0.02208936,0.016630374,0.0008189799,0.01720056,0.025827235,-0.00081568025,-0.044432137,0.031993672,0.0013739857,-0.033007335,-0.014286283,-0.01862602,0.057651963,-0.013853366,-0.03773775,0.0074018366,0.002218703,0.009782883,-0.030093059,0.036027197,0.007855872,0.009154625,-0.017263912,-0.043080587,-0.014444668,-0.029522873,-0.0017527887,0.03387317,-0.0037510733,0.011530393,-0.012924177,0.0022556596,0.024391215,-0.006826373,0.024707984,0.04848678,0.021054583,-0.01955521,-0.027875675,0.0029274737,0.021878181,-0.021455823,0.0009892433,0.015732862,0.0038434642,-0.00817792,0.013314858,0.017760184,-0.03805452,-0.022638427,-0.02097011,0.032057025,-0.043840833,-0.014539699,0.024581278,0.014983175,-0.0029433123,-0.0040361653,0.021371352,-0.003365671,-0.004981193,0.009270774,0.0077608414,-0.03930048,0.010812383,-0.036069434,0.048444543,0.012449023,0.0024430812,-0.0066785472,-0.011889398,-0.0102105215,-0.0126285255,0.001759388,0.004957435,-0.0018333008,-0.014845909,0.001196463,-0.043545183,-0.021835946,-0.008848415,0.027284373,-0.00089751225,0.007243452,0.025109226,-0.022765135,-0.0124807,0.012438464,0.028593685,0.052161302,0.00634066,0.009170463,0.0027717291,-0.0051818136,0.003241603,-0.028488096,0.010991885,-0.020431602,0.020178188,0.050809752,0.0064198524,-0.005638489,0.0061136424,0.013684423,0.024180036,-0.02200489,0.024771338,0.005387713,-0.004696101,0.0146980835,-0.028699275,0.020188747,0.014824791,-0.014138458,0.007966741,-0.019407382,0.016841553,0.03765328,-0.029417284,-0.01452914,0.03395764,-0.03171914,-0.049331497,-0.04145451,0.04244705,0.013325417,0.03467565,0.012533495,0.040039606,0.016830994,-0.0135893915,0.0067999754,-0.025489349,0.0033683106,-0.0019270116,0.040187433,0.031993672,0.0041179974,0.035478134,0.017021056,0.015363298,0.030452063,0.00079126266,0.0023150537,-0.0015680067,0.0037669118,0.05359732,0.016345283,0.028466977,-0.016556462,-0.031381253,0.024792457,-0.0009826439,0.026418537,-0.005575135,-0.05021845,-0.0034343044,0.004112718,0.025489349,0.0100785345,0.026883133,-0.017855214,-0.010712073,-0.03150796,-0.01176269,-0.010696234,0.011086917,0.032057025,0.010099653,0.017844656,0.0062825857,0.0069425213,-0.0050471867,-0.006778857,-0.024623513,-0.0038777809,0.014159576,0.018647138,-0.000726589,-0.0015970439,-0.02956511,-0.004437406,0.040081844,0.012090018,0.015891246,-0.030050822]},{"id":"search-for-word","name":"Search for Word","description":"Given a 2-D grid of characters `board` and a string `word`, return `true` if the word is present in the grid, otherwise return `false`.\n\nFor the word to be present it must be possible to form it with a path in the board with horizontally or vertically neighboring cells. The same cell may not be used more than once in a word.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/7c1fcf82-71c8-4750-3ddd-4ab6a666a500/public)\n\n```java\nInput: \nboard = [\n  [\"A\",\"B\",\"C\",\"D\"],\n  [\"S\",\"A\",\"A\",\"T\"],\n  [\"A\",\"C\",\"A\",\"E\"]\n],\nword = \"CAT\"\n\nOutput: true\n```\n\n**Example 2:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/79721392-44b6-4de7-c571-d3d1640ac100/public)\n\n```java\nInput: \nboard = [\n  [\"A\",\"B\",\"C\",\"D\"],\n  [\"S\",\"A\",\"A\",\"T\"],\n  [\"A\",\"C\",\"A\",\"E\"]\n],\nword = \"BAT\"\n\nOutput: false\n```\n\n**Constraints:**\n* `1 <= board.length, board[i].length <= 5`\n* `1 <= word.length <= 10`\n* `board` and `word` consists of only lowercase and uppercase English letters.\n","difficulty":"Medium","concepts":["Tree Maze","Matrix DFS"],"solutions":{"python":"class Solution:\n    \n    def exist(self, board: List[List[str]], word: str) -> bool:\n        m = len(board)\n        n = len(board[0])\n        \n        for i in range(m):\n            for j in range(n):\n                if board[i][j] == word[0]:\n                    if self.dfs(board, word, 0, i, j, m, n):\n                        return True\n        \n        return False\n    \n    def dfs(self, board: List[List[str]], word: str, index: int, i: int, j: int, m: int, n: int):\n        if i < 0 or i >= m or j < 0 or j >= n or board[i][j] != word[index]:\n            return False\n        if index == len(word) - 1:\n            return True\n        \n        board[i][j] = '#'\n        \n        if (self.dfs(board, word, index + 1, i - 1, j, m, n)\n            or self.dfs(board, word, index + 1, i + 1, j, m, n)\n            or self.dfs(board, word, index + 1, i, j - 1, m, n)\n            or self.dfs(board, word, index + 1, i, j + 1, m, n)):\n            return True\n        \n        board[i][j] = word[index]\n        return False\n","javascript":"class Solution {\n    /**\n     * @param {character[][]} board\n     * @param {string} word\n     * @return {boolean}\n     */\n    exist(board, word) {\n        const m = board.length;\n        const n = board[0].length;\n\n        for (let i = 0; i < m; i++) {\n            for (let j = 0; j < n; j++) {\n                if (board[i][j] == word[0]) {\n                    if (this.dfs(board, word, 0, i, j, m, n)) {\n                        return true;\n                    }\n                }\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * @param {character[][]} board\n     * @param {string} word\n     * @param {number} index\n     * @param {number} i\n     * @param {number} j\n     * @param {number} m\n     * @param {number} n\n     * @return {boolean}\n     */\n    dfs(board, word, index, i, j, m, n) {\n        if (i < 0 || i >= m || j < 0 || j >= n || board[i][j] != word[index]) {\n            return false;\n        }\n        if (index == word.length - 1) {\n            return true;\n        }\n\n        board[i][j] = '#';\n\n        if (\n            this.dfs(board, word, index + 1, i - 1, j, m, n) ||\n            this.dfs(board, word, index + 1, i + 1, j, m, n) ||\n            this.dfs(board, word, index + 1, i, j - 1, m, n) ||\n            this.dfs(board, word, index + 1, i, j + 1, m, n)\n        ) {\n            return true;\n        }\n\n        board[i][j] = word[index];\n        return false;\n    }\n}\n","cpp":"class Solution {\npublic:\n    bool exist(vector<vector<char>>& board, string word) {\n        int m = board.size();\n        int n = board[0].size();\n        \n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                if (board[i][j] == word[0]) {\n                    if (dfs(board, word, 0, i, j, m, n)) {\n                        return true;\n                    }\n                }\n            }\n        }\n        \n        return false;\n    }\n    \nprivate:\n    bool dfs(vector<vector<char>>& board, string word,\n        int index, int i, int j, int m, int n) {\n        \n        if (i < 0 || i >= m || j < 0 || j >= n || board[i][j] != word[index]) {\n            return false;\n        }\n        if (index == word.size() - 1) {\n            return true;\n        }\n        \n        board[i][j] = '#';\n        \n        if (dfs(board, word, index + 1, i - 1, j, m, n)\n            || dfs(board, word, index + 1, i + 1, j, m, n)\n            || dfs(board, word, index + 1, i, j - 1, m, n)\n            || dfs(board, word, index + 1, i, j + 1, m, n)) {\n            return true;\n        }\n        \n        board[i][j] = word[index];\n        return false;\n    }\n};\n","java":"class Solution {\n    \n    public boolean exist(char[][] board, String word) {\n        int m = board.length;\n        int n = board[0].length;\n        \n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                if (board[i][j] == word.charAt(0)) {\n                    if (dfs(board, word, 0, i, j, m, n)) {\n                        return true;\n                    }\n                }\n            }\n        }\n        \n        return false;\n    }\n    \n    private boolean dfs(char[][] board, String word, int index, int i, int j, int m, int n) {\n        if (i < 0 || i >= m || j < 0 || j >= n || board[i][j] != word.charAt(index)) {\n            return false;\n        }\n        if (index == word.length() - 1) {\n            return true;\n        }\n        \n        board[i][j] = '#';\n        \n        if (dfs(board, word, index + 1, i - 1, j, m, n)\n            || dfs(board, word, index + 1, i + 1, j, m, n)\n            || dfs(board, word, index + 1, i, j - 1, m, n)\n            || dfs(board, word, index + 1, i, j + 1, m, n)) {\n            return true;\n        }\n        \n        board[i][j] = word.charAt(index);\n        return false;\n    }\n}\n","csharp":"public class Solution {\n    \n    public bool Exist(char[][] board, string word) {\n        int m = board.Length;\n        int n = board[0].Length;\n        \n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                if (board[i][j] == word[0]) {\n                    if (Dfs(board, word, 0, i, j, m, n)) {\n                        return true;\n                    }\n                }\n            }\n        }\n        \n        return false;\n    }\n    \n    private bool Dfs(char[][] board, string word, int index, int i, int j, int m, int n) {\n        if (i < 0 || i >= m || j < 0 || j >= n || board[i][j] != word[index]) {\n            return false;\n        }\n        if (index == word.Length - 1) {\n            return true;\n        }\n        \n        board[i][j] = '#';\n        \n        if (Dfs(board, word, index + 1, i - 1, j, m, n)\n            || Dfs(board, word, index + 1, i + 1, j, m, n)\n            || Dfs(board, word, index + 1, i, j - 1, m, n)\n            || Dfs(board, word, index + 1, i, j + 1, m, n)) {\n            return true;\n        }\n        \n        board[i][j] = word[index];\n        return false;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def exist(self, board: List[List[str]], word: str) -> bool:\n        ","javascript":"class Solution {\n    /**\n     * @param {character[][]} board\n     * @param {string} word\n     * @return {boolean}\n     */\n    exist(board, word) {}\n}\n","cpp":"class Solution {\npublic:\n    bool exist(vector<vector<char>>& board, string word) {\n        \n    }\n};\n","java":"class Solution {\n    public boolean exist(char[][] board, String word) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public bool Exist(char[][] board, string word) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/pfiQ_PS1g8E","embedding":[-0.008480879,-0.005157597,0.017731717,-0.00929613,-0.01033784,0.044340614,0.037026,0.002210803,-0.052085504,0.07346321,0.022158984,-0.045246452,0.02078891,0.026337149,-0.013395033,-0.015795495,0.0006071924,-0.01087568,0.03580312,0.012183479,0.040898442,0.041804276,0.006906991,-0.0011358319,0.04886979,0.045540847,0.03752421,0.016531486,-0.011583363,-0.025929522,0.03856592,-0.011266321,-0.010717158,-0.0084695555,-0.04207603,-0.006657886,-0.02549925,0.019203698,-0.0058143274,-0.044929408,-0.008209128,0.00015374423,0.04243836,-0.00066274556,-0.03505581,-0.030821031,-0.033651765,0.029213173,-0.006816407,0.044114158,-0.010677529,0.045246452,0.027831776,0.0021499423,-0.009579203,-0.016135182,-0.019996304,0.026880648,0.03390087,0.036867477,0.06060035,0.0051717507,0.0006776069,0.02067568,-0.03120601,-0.0019432988,0.007926055,-0.00045291742,-0.0128062405,-0.018297864,-0.018411092,0.01894327,0.019577356,-0.027945004,-0.02857909,0.010615252,0.052991338,0.0141083775,-0.0017069326,-0.020664357,-0.0608721,-0.0008131283,0.028216755,-0.044408552,-0.02642773,0.006873022,-0.05742993,0.03965292,-0.03505581,-0.072964996,0.037614793,-0.02391404,0.007127788,-0.047737498,0.017290123,-0.0065956097,0.015908724,0.014221607,-0.0608721,-0.022940267,-0.0033176201,-0.00817516,0.025318084,0.00929613,0.014176316,-0.033380013,-0.0013155836,0.007127788,-0.02094743,-0.012783594,-0.07541075,-0.0006875145,0.009726401,0.061460894,0.031092782,-0.005539746,0.005638822,-0.05901514,0.011594686,-0.012670365,0.010247257,-0.035463434,-0.043298904,0.0033798963,-0.024095207,0.06499365,0.0020282208,-0.06159677,0.003614847,-0.0025731372,-0.021740036,0.027673254,0.020143501,0.025046334,-0.05222138,0.006601271,-0.0024853842,-0.0067371465,-0.038837668,0.041600466,-0.025861586,-0.03788654,-0.011889082,0.027786484,-0.025589835,-0.010286887,0.0089111505,-0.017969498,-0.019067824,-0.0095508965,0.035440788,-0.039879378,-0.016656037,0.039969962,-0.006148354,-0.048824497,-0.011073831,0.029892549,0.042981863,0.010756789,-0.016791914,-0.01488966,0.019690584,-0.033357367,0.017380705,0.036867477,-0.007433507,0.012024958,-0.012160833,-0.055346508,0.04042288,0.0023594168,-0.05512005,0.023551706,0.041102257,0.0045659738,-0.005944541,-0.044272676,-0.030503988,-0.07142508,-0.03917736,-0.009398037,-0.014198961,0.0112833055,0.013485616,-0.038022418,0.04273276,-0.028352631,-0.015976662,0.0400379,0.005732236,-0.0030600233,0.050047375,-0.011238013,0.034082036,0.005406702,0.060645644,-0.0019149914,0.014640556,-0.030753093,-0.017290123,0.0037309073,-0.0320892,0.020720972,0.013757367,-0.00011482164,-0.031681575,0.07432375,-0.005848296,-0.05462184,0.016961757,-0.056841135,0.04454443,-0.047646914,-0.018954594,-0.006850376,0.046220224,-0.01014535,0.043480072,0.033606473,-0.05095321,0.027582671,0.008435587,0.01944148,0.014312191,0.058154598,0.027899712,0.0029213175,-0.010428424,0.009975506,-0.021321088,-0.038430043,0.023710227,-0.013576199,0.005423686,-0.06680532,-0.031636283,0.0017041018,0.0008350665,0.03165893,-0.0014365974,-0.019464126,0.028194109,-0.018614907,-0.0052595036,-0.018513,-0.025635125,0.0026693821,-0.022442058,0.03170422,0.03965292,-0.006255922,-0.014323513,-0.020392606,-0.02113992,0.025431313,-0.045925826,-0.049050957,0.057112888,-0.007473137,-0.022464704,0.06413311,-0.04273276,-0.070066325,-0.041102257,-0.0784453,-0.004883016,0.021966495,-0.009975506,0.034399077,0.01488966,0.010598267,0.032723285,-0.058154598,0.007229694,-0.04886979,0.0063634897,-0.00948862,-0.020732295,-0.015297286,-0.000047857095,0.028828194,0.027129754,-0.031523053,-0.027378859,0.015716234,-0.00455182,-0.026790066,-0.04841687,-0.018954594,-0.037297748,-0.019226344,-0.020426575,0.04859804,-0.039154712,-0.03833946,-0.008848874,-0.022113694,0.06599007,-0.040626694,0.013089313,-0.03165893,-0.03274593,0.011034201,-0.02885084,-0.024253728,0.030186946,0.008696014,-0.006946621,-0.008860197,0.0017069326,-0.0065050265,-0.016293705,0.034082036,-0.035961643,-0.04064934,0.017641133,0.0072466787,0.005712421,-0.010394455,-0.010943617,0.003139284,0.07178741,0.01450468,-0.030503988,-0.0047896015,0.013881919,0.015342577,-0.009879261,-0.023234664,0.017380705,-0.0027175045,0.033221494,0.039041482,-0.046106994,-0.004846216,-0.012036281,0.07495783,-0.039992608,-0.017641133,-0.022000464,0.013983825,0.026518315,0.01735806,-0.057248764,0.0071447724,-0.01940751,-0.021943849,0.054712426,-0.022057079,-0.00682773,-0.038135648,0.033040326,-0.013757367,-0.06105327,-0.06381606,-0.025816293,0.03777331,-0.00068114535,0.006357828,0.009664126,-0.015784172,-0.031183364,0.007088158,-0.047284577,0.018445062,-0.000022955483,-0.01986043,0.069839865,0.02198914,-0.022521319,0.022747777,-0.0058030044,0.0053783944,0.025816293,-0.008378972,-0.03197597,-0.003147776,-0.025793647,0.06023802,-0.019996304,-0.007286309,-0.050907917,0.016633391,-0.019384865,0.011051185,-0.02048319,-0.02325731,0.011775853,-0.028352631,0.004062103,-0.0070428657,0.07002103,-0.0108417105,0.014629233,0.041826922,0.036550436,0.06336315,0.0010940786,0.008673369,-0.0030288852,-0.0015866263,-0.04243836,0.00024025854,-0.03000578,0.01338371,0.032225076,0.032066554,-0.022260891,0.036663666,0.014595264,0.0668959,0.019475449,-0.015184057,0.038475335,0.009313115,-0.06522011,-0.0017267477,0.004478221,0.0076939347,0.009420683,-0.02873761,0.002626921,-0.012443906,0.038588565,0.045722015,-0.0016305028,-0.017641133,0.04701283,-0.02136638,-0.017403351,0.026359795,0.047963955,-0.011430504,-0.026382439,-0.012217447,0.005587869,0.013406356,0.030300176,-0.030322822,-0.06517482,-0.030866323,0.0018286541,-0.017867593,-0.0030939921,0.0025221838,0.034919932,0.005613345,0.039403815,-0.012240093,0.028397921,-0.040196422,0.0114927795,-0.012579781,-0.024525478,-0.015444484,-0.026133334,-0.006703178,0.006221953,-0.0066352403,-0.035667248,-0.0072806478,-0.007422184,0.008786598,0.018490354,0.032111846,0.00030271162,0.017912883,0.041758984,-0.027650608,0.0058030044,0.035123747,0.05167788,-0.044770885,0.01222877,0.03679954,0.023936685,0.037320394,-0.012828886,-0.017754363,-0.025612481,-0.0065050265,-0.013349741,0.0068333917,0.04316303,-0.0123646455,0.0017635472,0.0036969385,-0.009618834,0.009596188,-0.023087466,0.007320278,-0.0048150783,-0.0090979785,-0.0062615834,-0.014844368,0.046786368,0.008005315,0.052991338,-0.027446795,-0.0068220687,0.018037437,-0.02155887,0.024049915,0.018456385,-0.028986715,-0.038656503,-0.036391914,-0.010779435,0.062457312,-0.004478221,-0.00023601243,0.009698094,0.012104218,0.01928296,-0.02260058,-0.01654281,0.020687003,-0.04470295,-0.021422993,-0.014017794,-0.015285963,0.016361643,0.006459735,0.002341017,0.007795841,-0.04760162,-0.02325731,-0.04737516,0.014414097,-0.02248735,0.018365802,0.030888967,0.03301768,-0.0011775853,-0.013859273,0.0054151937,-0.008594108,-0.004254593,0.0013339834,0.037818603,0.037728023,0.011560718,-0.018762104,0.01762981,0.0068390532,-0.004421606,0.0315457,-0.02341583,0.015387869,0.0064653964,-0.020505836,-0.023642289,-0.04035494,0.0054435013,0.0064823804,-0.008033623,-0.01025858,-0.0106322365,0.031409822,0.012443906,-0.033583827,-0.0007267909,0.01176453,-0.001685702,0.038248878,-0.022634547,0.01214951,0.02113992,-0.010819064,-0.002966609,-0.03374235,-0.025091626,-0.04293657,0.025680417,-0.0252275,-0.008554478,-0.008220451,-0.015399192,-0.006267245,0.011051185,-0.034897286,-0.0075467364,0.010677529,-0.0252275,0.0136894295,-0.023642289,0.027469441,0.024819875,-0.020585097,0.0114927795,0.0016970249,0.03444437,-0.010870018,-0.011566378,-0.028669672,-0.0042630853,0.00022238953,-0.002703351,0.022068402,0.016644714,-0.025589835,0.033968806,-0.025906876,-0.008628077,-0.019622648,0.0106209135,0.03120601,0.045133222,0.029145235,-0.028012943,-0.013213865,-0.032451533,0.015104796,-0.029869905,0.01330445,-0.05172317,0.0032978049,0.03734304,-0.048688624,0.016135182,0.015625652,0.02479723,-0.008197805,-0.042596884,0.0060068173,0.0038158293,0.0340141,-0.01565962,-0.0011393704,-0.039086774,-0.0141197005,0.015591682,-0.001951791,0.00074306765,-0.029326404,0.004832063,0.022125017,0.048779204,0.014323513,0.034806702,-0.026722128,-0.023506414,-0.018694166,-0.014244253,0.006754131,0.0004773325,0.023438476,0.039245296,0.002812334,0.020007627,0.023710227,0.054667134,0.01029821,0.0057180827,-0.011254998,-0.025816293,-0.015591682,0.011900405,-0.012206124,0.0045942813,-0.004064934,0.023110112,-0.01002646,-0.010592606,-0.01801479,-0.017425997,0.0030260545,0.018920625,-0.0050953208,-0.053897172,-0.031251304,0.043185677,-0.024887811,-0.03344795,0.0045688045,0.026495669,-0.070066325,-0.017641133,0.034467015,0.013100636,0.0035695555,-0.022838362,-0.0004355792,0.0011811237,0.020630388,-0.007784518,-0.031500407,-0.008186483,-0.0032100521,-0.017108956,0.015693588,-0.026540961,-0.013440324,-0.010224611,-0.023483768,0.024434894,0.030730447,-0.017652456,-0.07432375,0.026223918,0.023846103,0.017199539,0.0034619875,-0.009749047,-0.06648828,0.020992722,0.009437667,-0.004933969,0.0041611786,-0.023619644,0.022770423,-0.031024843,0.046469327,-0.043412134,0.02676742,-0.017052341,-0.01376869,0.03283651,-0.028941423,-0.012013635,-0.0005240396,-0.011555056,-0.039947316,-0.011753207,0.013202542,0.022577934,-0.020732295,0.025453959,-0.01666736,0.004138533,-0.031228656,0.019951012,-0.0032893128,0.031568345,0.013134605,0.0045829583,0.008497863,-0.030209592,-0.034308493,-0.011509764,0.024434894,0.018852688,-0.04015113,-0.01037747,0.017607166,-0.043412134,0.007993992,-0.092938654,0.05715818,0.0064427503,0.0064823804,0.035644602,-0.031523053,-0.0061879843,0.019350898,-0.011322935,0.0029835936,-0.008180821,-0.014527326,-0.015093473,0.0012264155,-0.033810284,-0.041306067,-0.0076203356,0.01577285,-0.035123747,-0.017799655,0.0023084634,0.011090815,-0.008231774,-0.02676742,0.029711382,-0.019101793,-0.013621491,-0.018456385,0.0014677355,0.013293127,0.032881804,-0.06263848,-0.013870596,0.012183479,-0.005944541,-0.0046112654,0.0022716639,-0.008401618,0.026473023,0.0055482383,-0.016995726,-0.0340141,-0.038294166,0.007008897,-0.023619644,0.0059162336,-0.018229926,-0.017641133,-0.00887152,-0.01650884,0.016486194,-0.02934905,0.047284577,0.011481456,0.04239307,0.017029695,0.008814905,0.048779204,0.008809244,0.00042708698,-0.044453844,0.010485038,0.007733565,0.06241202,0.011175738,0.0021173889,0.025703063,0.025318084,-0.010513346,-0.029869905,0.011798499,0.010592606,-0.004883016,-0.0053783944,0.019486772,-0.025476605,-0.027469441,-0.00054279325,0.02232883,0.022476027,-0.01790156,0.008712999,-0.005551069,0.009833969,-0.026744774,0.045495555,0.02229486,0.021456962,-0.0019800984,0.011192721,-0.015874757,-0.009998152,-0.023596998,0.03437643,-0.030662509,-0.060917392,-0.009018718,-0.01214951,-0.041419297,-0.047737498,0.011328597,-0.048462164,0.043955635,0.016723976,-0.021241827,-0.042574238,-0.009313115,-0.0016658868,0.0041328715,0.016939111,-0.012217447,0.003074177,0.049775623,0.044453844,0.0007204218,0.012262739,-0.020777587,-0.0018909302,-0.021049337,-0.02900936,-0.038316812,-0.012274062,0.012477875,-0.003116638,0.031885386,-0.019033855,-0.005859619,0.023846103,0.008724322,-0.0035270944,0.012024958,0.011170076,0.058245182,-0.03319885,-0.020630388,0.046695787,-0.015025536,-0.017799655,0.021898557,0.028873486,0.018762104,-0.019260313,0.013372387,0.008180821,0.037546854,-0.034082036,-0.028782902,0.03444437,-0.0064823804,-0.023325248,0.03340266,-0.010496361,0.004905662,-0.017233508,-0.0016772099,-0.011979666,-0.02059642,-0.013191219,0.018105375,0.025476605,0.0065163495,-0.022351475,0.025861586,-0.03170422,-0.038045064,0.021456962,0.043072447,0.008192143,0.007744888,0.0005512854,0.037909187,0.038837668,-0.00482074,0.009194223,-0.0015370885,0.0014153669,0.023891393,-0.026473023,-0.025680417,-0.010773773,0.013757367,-0.03641456,-0.017890237,0.023596998,-0.007954362,-0.0048009246,0.0012469382,-0.006572964,-0.009058349,0.0010671867,-0.0029383018,-0.024253728,0.002541999,0.01195702,-0.016927788,-0.03093426,-0.025567189,-0.038226232,0.0051745814,-0.014289545,0.02314408,0.027627964,-0.0050160605,0.0104907,0.008214789,-0.015784172,-0.038316812,-0.026948586,0.022668516,-0.016259735,-0.0050783367,0.011356904,-0.018796073,-0.010083074,0.030821031,-0.017992144,0.042053383,0.01469717,-0.0007947285,-0.027016524,0.04107961,-0.046220224,0.013010053,0.020732295,0.04624287,-0.004410283,-0.041124903,-0.025453959,0.012738302,0.030503988,0.007371231,-0.05661468,0.012274062,0.005344426,-0.0095508965,0.031341884,-0.023551706,-0.018377125,-0.015761526,0.052402545,0.010196303,0.02125315,-0.0049509536,0.03670896,-0.02279307,0.012942115,0.00018134389,0.021649452,0.011124784,-0.034965225,-0.013315772,0.018682843,-0.01623709,-0.022385443,0.004294223,0.019520741,-0.024548125,-0.022781746,0.023868749,-0.0024825537,-0.011187061,0.012262739,-0.017969498,-0.025136916,0.008090237,0.007852456,-0.0024811383,0.00991323,0.036120165,-0.026337149,-0.016338997,-0.0070258817,-0.0068107457,-0.00014410204,0.0013983826,0.01002646,0.023936685,-0.013293127,-0.022362798,-0.006873022,0.0049537844,0.018796073,0.030775739,-0.0022631718,0.007977008,0.018830042,0.015093473,-0.0011103554,0.020505836,-0.012794917,-0.016474871,-0.001573888,0.018580938,-0.00879226,-0.004285731,-0.021117276,0.02136638,0.005202889,-0.014651879,0.026223918,-0.0028632872,-0.008277066,-0.050500292,0.060147434,-0.046605203,0.02588423,0.015036859,-0.010218949,0.033651765,0.0093300985,0.028443214,0.021004045,-0.0050302143,-0.038203586,0.0266089,-0.00362617,-0.035282265,-0.012398615,0.033923514,-0.023483768,-0.0021372042,-0.022543965,-0.0020296362,-0.0006478842,-0.02676742,-0.0197472,-0.028601736,-0.017652456,-0.022158984,0.00035826475,-0.008163837,0.030979551,0.03000578,-0.0145499725,0.0060464474,0.009165917,-0.03258741,0.028692318,-0.014946274,-0.014934952,-0.007031543,-0.000060418475,0.017063664,0.01291947,0.031817447,-0.024910457,-0.0033119586,0.04393299,0.001978683,0.000786944,0.018003467,0.019894397,-0.02900936,0.018750781,-0.016078569,-0.020607743,-0.087594226,-0.007688273,-0.026744774,0.02753738,-0.027786484,0.03788654,0.000101375656,-0.0070938193,0.01053033,0.048643332,0.013055345,-0.012942115,-0.0158974,0.0065956097,-0.028805548,-0.007524091,0.020777587,-0.028511152,0.046786368,0.043638594,-0.004829232,-0.0043763146,-0.03867915,-0.01130029,-0.022781746,0.046084348,-0.00435933,-0.042461008,-0.02846586,-0.02136638,0.027265629,0.019792492,-0.02017747,-0.01785627,0.04268747,0.029552862,-0.005635991,0.005904911,0.006391797,-0.012330676,0.008588446,0.027152399,0.016803237,0.06422369,0.02615598,-0.017074987,-0.010615252,0.0064427503,-0.009896246,-0.027786484,0.0004645942,0.019984981,0.00076854427,0.015806818,-0.010756789,0.014821722,-0.035078455,-0.01793553,0.03675425,-0.0091093015,0.024706645,0.016599424,-0.010773773,-0.008305374,-0.023155402,0.036006935,0.022611903,-0.018241249,0.0045971116,0.012953438,0.026178626,0.0043876376,0.014278222,0.044068865,-0.013542231,0.010445408,-0.022509996,0.005381225,-0.006278568,-0.014923629,0.009918892,-0.024819875,-0.004532005,-0.04169105,0.029575508,0.006329521,0.04162311,0.012659042,-0.0035695555,0.0102019645,-0.021807974,-0.018275218,-0.018999886,0.020098211,-0.022577934,-0.031341884,-0.0070824963,-0.017142924,-0.029688736,0.007088158,-0.039630275,0.0036516467,-0.015908724,-0.0154331615,0.025612481,-0.0028137495,0.0018442231,-0.012579781,-0.009533912,-0.04674108,-0.0065276725,-0.037116583,0.0048518777,-0.0045574815,-0.03752421,-0.000581362,0.0067597926,-0.018411092,0.01839977,-0.026563607,-0.0024259388,-0.0266089,0.027673254,0.027854422,-0.0064540734,0.025635125,0.03752421,0.012726979,-0.024548125,-0.022170307,-0.0011981081,0.004246101,-0.015093473,-0.0055142697,0.03725246,0.0132478345,-0.0027571348,0.025657771,0.0048009246,0.0042602546,0.045382325,-0.022057079,-0.03197597,0.07359908,0.008112883,-0.020347316,-0.011447487,0.013553554,0.0345576,-0.012591104,-0.013813982,-0.023042174,-0.00094334205,-0.008339342,0.0056105144,-0.0028816871,-0.004152687,-0.026405085,0.012908147,-0.016486194,0.0028562106,-0.0013976749,-0.054168925,0.012659042,-0.01365546,-0.027673254,0.019294282,-0.00956788,0.019350898,-0.014685848,-0.014708493,-0.0115154255,-0.0011698008,0.0296208,0.0032298674,-0.007201387,0.012217447,0.013632814,-0.0038243216,0.013111959,0.014821722,0.001924899,0.008231774,-0.0011705084,0.024117853,-0.03867915,-0.03356118,0.02665419,-0.014833045,0.006816407,0.017675102,0.011498441,0.053761296,0.002074928,-0.024049915,-0.0086394,-0.025204854,-0.00917724,0.0055255927,-0.009052687,0.046786368,-0.021004045,-0.023732873,-0.004614096,0.028262047,-0.0036686312,0.007088158,-0.00767695,0.018388446,-0.015501099,0.0058369734,-0.009850954,0.01681456,0.040083192,-0.0037648762,-0.02615598,0.00023353554,0.016825883,-0.06494836,-0.011311613,-0.016305028,0.005061352,-0.008214789,-0.013111959,-0.008492202,0.0065276725,-0.013213865,0.0042489315,-0.026676835,-0.00458862,-0.0064937035,-0.024819875,0.009862277,0.014391451,0.028375277,-0.0038243216,-0.018580938,-0.027378859,-0.019769846,-0.03695806,-0.02186459,0.0062729064,0.032066554,0.014436743,-0.039335877,-0.027627964,0.011005893,-0.0031138072,-0.010649221,0.0012915223,0.008843212,0.0018513,-0.023619644,0.021490932,-0.013202542,-0.0077618724,-0.047193997,0.0008888504,0.03881502,-0.0013382294,-0.020868171,0.008435587,0.022113694,-0.024208436,-0.027786484,0.026744774,0.01593137,-0.033312075,-0.0025250146,0.0052170428,-0.009137609,-0.046356097,-0.05512005,0.034625538,-0.005231196,0.0070938193,0.011000232,0.005551069,0.012862855,0.010847372,0.035689894,0.008226112,0.0047075106,-0.021264473,0.009137609,-0.00233394,0.0053217798,0.00017612473,0.0035214329,0.0097716935,-0.0038526289,-0.00029280403,0.012885501,0.019486772,-0.024480186,-0.009924553,-0.0003687031,0.027831776,-0.025204854,0.0031760833,-0.013066667,-0.0039318893,-0.013485616,-0.024502832,-0.012489198,0.013542231,0.021513578,0.042755406,-0.029711382,-0.040626694,-0.00019992059,-0.0222156,0.013564877,0.039064128,-0.0036686312,-0.018796073,0.012160833,-0.03313091,-0.04569937,-0.015784172,0.024049915,-0.027922358,-0.018422415,0.013859273,-0.07287441,-0.015863433,-0.01122669,0.014844368,-0.0057463897,0.0046990183,0.0340141,-0.012172156,-0.015444484,0.017788332,-0.021287119,0.024638707,-0.022657193,0.023461122,0.011753207,0.007286309,-0.0035723862,0.023438476,-0.010439746,-0.033719704,-0.009437667,0.023755519,-0.007807164,0.01546713,0.0035582324,0.024434894,0.013134605,-0.0060464474,0.006391797,-0.0053359335,-0.008452571,0.0209814,-0.013055345,0.029416986,-0.0022518488,-0.014459388,-0.019396188,-0.017074987,0.0025391683,-0.010366147,-0.010122704,-0.014357482,-0.0031562683,-0.041804276,-0.011096477,-0.013915888,0.0048348936,-0.007931717,-0.012783594,0.01785627,-0.004693357,0.028103527,-0.0046876953,0.015206702,-0.03394616,0.011651301,0.043457426,0.0046424037,-0.009958521,0.011447487,0.0064314273,-0.014934952,0.008282728,0.0070711733,0.0033374352,0.004605604,-0.00037188767,0.01958868,0.021377703,0.0028618718,0.01913576,0.010094397,-0.0052481806,-0.008543155,-0.03799977,0.010983247,-0.0154105155,-0.027061816,-0.011039862,-0.026744774,-0.017267477,0.012840209,0.026631543,-0.005497285,-0.023325248,0.00035065715,-0.015070827,-0.019418834,-0.018660197,0.032428887,0.00042425623,0.043389488,0.037478916,0.01743732,-0.000106771746,-0.03768273,0.026880648,0.01087568,0.014017794,0.0064087813,0.01307799,-0.010836049,-0.024638707,-0.00786944,0.027401503,0.010926633,0.02341583,0.00528498]},{"id":"search-for-word-ii","name":"Search for Word II","description":"Given a 2-D grid of characters `board` and a list of strings `words`, return all words that are present in the grid.\n\nFor a word to be present it must be possible to form the word with a path in the board with horizontally or vertically neighboring cells. The same cell may not be used more than once in a word.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/06435c8e-bac3-49f5-5df7-77fd5dd42800/public)\n\n```java\nInput:\nboard = [\n  [\"a\",\"b\",\"c\",\"d\"],\n  [\"s\",\"a\",\"a\",\"t\"],\n  [\"a\",\"c\",\"k\",\"e\"],\n  [\"a\",\"c\",\"d\",\"n\"]\n],\nwords = [\"bat\",\"cat\",\"back\",\"backend\",\"stack\"]\n\nOutput: [\"cat\",\"back\",\"backend\"]\n```\n\n**Example 2:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/6f244a10-78bf-4a30-0a5f-b8f3e03ce000/public)\n\n```java\nInput:\nboard = [\n  [\"x\",\"o\"],\n  [\"x\",\"o\"]\n],\nwords = [\"xoxo\"]\n\nOutput: []\n```\n\n**Constraints:**\n* `1 <= board.length, board[i].length <= 10`\n* `board[i]` consists only of lowercase English letter.\n* `1 <= words.length <= 100`\n* `1 <= words[i].length <= 10`\n* `words[i]` consists only of lowercase English letters.\n* All strings within `words` are distinct.\n","difficulty":"Hard","concepts":["Matrix DFS","Trie"],"solutions":{"python":"class TrieNode:\n    def __init__(self):\n        self.children = {}\n        self.isWord = False\n        self.refs = 0\n\n    def addWord(self, word):\n        cur = self\n        cur.refs += 1\n        for c in word:\n            if c not in cur.children:\n                cur.children[c] = TrieNode()\n            cur = cur.children[c]\n            cur.refs += 1\n        cur.isWord = True\n\n    def removeWord(self, word):\n        cur = self\n        cur.refs -= 1\n        for c in word:\n            if c in cur.children:\n                cur = cur.children[c]\n                cur.refs -= 1\n\nclass Solution:\n    def findWords(self, board: List[List[str]], words: List[str]) -> List[str]:\n        root = TrieNode()\n        for w in words:\n            root.addWord(w)\n\n        ROWS, COLS = len(board), len(board[0])\n        res, visit = set(), set()\n\n        def dfs(r, c, node, word):\n            if (\n                r not in range(ROWS) \n                or c not in range(COLS)\n                or board[r][c] not in node.children\n                or node.children[board[r][c]].refs < 1\n                or (r, c) in visit\n            ):\n                return\n\n            visit.add((r, c))\n            node = node.children[board[r][c]]\n            word += board[r][c]\n            if node.isWord:\n                node.isWord = False\n                res.add(word)\n                root.removeWord(word)\n\n            dfs(r + 1, c, node, word)\n            dfs(r - 1, c, node, word)\n            dfs(r, c + 1, node, word)\n            dfs(r, c - 1, node, word)\n            visit.remove((r, c))\n\n        for r in range(ROWS):\n            for c in range(COLS):\n                dfs(r, c, root, \"\")\n\n        return list(res)\n","javascript":"class TrieNode {\n    constructor() {\n        this.children = {};\n        this.isWord = false;\n        this.refs = 0;\n    }\n\n    /**\n     * @param {string} word\n     */\n    addWord(word) {\n        let cur = this;\n        cur.refs++;\n        for (const c of word) {\n            if (!cur.children[c]) {\n                cur.children[c] = new TrieNode();\n            }\n            cur = cur.children[c];\n            cur.refs++;\n        }\n        cur.isWord = true;\n    }\n\n    /**\n     * @param {string} word\n     */\n    removeWord(word) {\n        let cur = this;\n        cur.refs--;\n        for (const c of word) {\n            if (cur.children[c]) {\n                cur = cur.children[c];\n                cur.refs--;\n            }\n        }\n    }\n}\n\nclass Solution {\n    constructor() {\n        this.ROWS = 0;\n        this.COLS = 0;\n    }\n\n    /**\n     * @param {character[][]} board\n     * @param {string[]} words\n     * @return {string[]}\n     */\n    findWords(board, words) {\n        const res = new Set();\n        const visit = new Set();\n        const root = new TrieNode();\n\n        for (const w of words) {\n            root.addWord(w);\n        }\n\n        this.ROWS = board.length;\n        this.COLS = board[0].length;\n\n        for (let r = 0; r < this.ROWS; r++) {\n            for (let c = 0; c < this.COLS; c++) {\n                this.dfs(r, c, root, '', board, res, visit, root);\n            }\n        }\n\n        return Array.from(res);\n    }\n\n    /**\n     * @param {number} r\n     * @param {number} c\n     * @param {TrieNode} node\n     * @param {string} word\n     * @param {character[][]} board\n     * @param {Set<string>} res\n     * @param {Set<string>} visit\n     * @param {TrieNode} root\n     */\n    dfs(r, c, node, word, board, res, visit, root) {\n        if (\n            r < 0 ||\n            r >= this.ROWS ||\n            c < 0 ||\n            c >= this.COLS ||\n            !node.children[board[r][c]] ||\n            node.children[board[r][c]].refs < 1 ||\n            visit.has(r + ',' + c)\n        ) {\n            return;\n        }\n\n        visit.add(r + ',' + c);\n        node = node.children[board[r][c]];\n        word += board[r][c];\n        if (node.isWord) {\n            node.isWord = false;\n            res.add(word);\n            root.removeWord(word);\n        }\n\n        this.dfs(r + 1, c, node, word, board, res, visit, root);\n        this.dfs(r - 1, c, node, word, board, res, visit, root);\n        this.dfs(r, c + 1, node, word, board, res, visit, root);\n        this.dfs(r, c - 1, node, word, board, res, visit, root);\n        visit.delete(r + ',' + c);\n    }\n}\n","cpp":"class TrieNode {\npublic:\n    map<char, TrieNode*> children;\n    bool isWord = false;\n    int refs = 0;\n\n    void addWord(string word) {\n        TrieNode* cur = this;\n        cur->refs++;\n        for (char c : word) {\n            if (cur->children.count(c) == 0) {\n                cur->children[c] = new TrieNode();\n            }\n            cur = cur->children[c];\n            cur->refs++;\n        }\n        cur->isWord = true;\n    }\n\n    void removeWord(string word) {\n        TrieNode* cur = this;\n        cur->refs--;\n        for (char c : word) {\n            if (cur->children.count(c) > 0) {\n                cur = cur->children[c];\n                cur->refs--;\n            }\n        }\n    }\n};\n\nclass Solution {\npublic:\n    int ROWS, COLS;\n\n    vector<string> findWords(vector<vector<char>>& board, vector<string>& words) {\n        unordered_set<string> res;\n        unordered_set<string> visit;\n        TrieNode* root = new TrieNode();\n\n        for (string& w : words) {\n            root->addWord(w);\n        }\n\n        ROWS = board.size();\n        COLS = board[0].size();\n\n        for (int r = 0; r < ROWS; r++) {\n            for (int c = 0; c < COLS; c++) {\n                dfs(r, c, root, \"\", board, res, visit, root);\n            }\n        }\n\n        return vector<string>(res.begin(), res.end());\n    }\n\nprivate:\n    void dfs(int r, int c, TrieNode* node, string word, vector<vector<char>>& board,\n             unordered_set<string>& res, unordered_set<string>& visit, TrieNode* root) {\n        if (\n                r < 0 || r >= ROWS ||\n                        c < 0 || c >= COLS ||\n                        node->children.count(board[r][c]) == 0 ||\n                        node->children[board[r][c]]->refs < 1 ||\n                        visit.count(to_string(r) + \",\" + to_string(c)) > 0\n        ) {\n            return;\n        }\n\n        visit.insert(to_string(r) + \",\" + to_string(c));\n        node = node->children[board[r][c]];\n        word += board[r][c];\n        if (node->isWord) {\n            node->isWord = false;\n            res.insert(word);\n            root->removeWord(word);\n        }\n\n        dfs(r + 1, c, node, word, board, res, visit, root);\n        dfs(r - 1, c, node, word, board, res, visit, root);\n        dfs(r, c + 1, node, word, board, res, visit, root);\n        dfs(r, c - 1, node, word, board, res, visit, root);\n        visit.erase(to_string(r) + \",\" + to_string(c));\n    }\n};\n","java":"class TrieNode {\n    \n    Map<Character, TrieNode> children = new HashMap<>();\n    boolean isWord = false;\n    int refs = 0;\n\n    public void addWord(String word) {\n        TrieNode cur = this;\n        cur.refs++;\n        for (char c : word.toCharArray()) {\n            cur.children.putIfAbsent(c, new TrieNode());\n            cur = cur.children.get(c);\n            cur.refs++;\n        }\n        cur.isWord = true;\n    }\n\n    public void removeWord(String word) {\n        TrieNode cur = this;\n        cur.refs--;\n        for (char c : word.toCharArray()) {\n            if (cur.children.containsKey(c)) {\n                cur = cur.children.get(c);\n                cur.refs--;\n            }\n        }\n    }\n}\n\nclass Solution {\n    \n    int ROWS, COLS;\n\n    public List<String> findWords(char[][] board, String[] words) {\n        Set<String> res = new HashSet<>();\n        Set<String> visit = new HashSet<>();\n        TrieNode root = new TrieNode();\n\n        for (String w : words) {\n            root.addWord(w);\n        }\n\n        ROWS = board.length;\n        COLS = board[0].length;\n\n        for (int r = 0; r < ROWS; r++) {\n            for (int c = 0; c < COLS; c++) {\n                dfs(r, c, root, \"\", board, res, visit, root);\n            }\n        }\n\n        return new ArrayList<>(res);\n    }\n\n    private void dfs(int r, int c, TrieNode node, String word, char[][] board,\n                    Set<String> res, Set<String> visit, TrieNode root) {\n        if (\n                r < 0 || r >= ROWS ||\n                        c < 0 || c >= COLS ||\n                        !node.children.containsKey(board[r][c]) ||\n                        node.children.get(board[r][c]).refs < 1 ||\n                        visit.contains(r + \",\" + c)\n        ) {\n            return;\n        }\n\n        visit.add(r + \",\" + c);\n        node = node.children.get(board[r][c]);\n        word += board[r][c];\n        if (node.isWord) {\n            node.isWord = false;\n            res.add(word);\n            root.removeWord(word);\n        }\n\n        dfs(r + 1, c, node, word, board, res, visit, root);\n        dfs(r - 1, c, node, word, board, res, visit, root);\n        dfs(r, c + 1, node, word, board, res, visit, root);\n        dfs(r, c - 1, node, word, board, res, visit, root);\n        visit.remove(r + \",\" + c);\n    }\n}\n","csharp":"public class TrieNode {\n    \n    public Dictionary<char, TrieNode> children = new Dictionary<char, TrieNode>();\n    public bool isWord = false;\n    public int refs = 0;\n\n    public void AddWord(string word) {\n        TrieNode cur = this;\n        cur.refs++;\n        foreach (char c in word) {\n            if (!cur.children.ContainsKey(c)) {\n                cur.children[c] = new TrieNode();\n            }\n            cur = cur.children[c];\n            cur.refs++;\n        }\n        cur.isWord = true;\n    }\n\n    public void RemoveWord(string word) {\n        TrieNode cur = this;\n        cur.refs--;\n        foreach (char c in word) {\n            if (cur.children.ContainsKey(c)) {\n                cur = cur.children[c];\n                cur.refs--;\n            }\n        }\n    }\n}\n\npublic class Solution {\n    int ROWS, COLS;\n\n    public List<string> FindWords(char[][] board, string[] words) {\n        HashSet<string> res = new HashSet<string>();\n        HashSet<string> visit = new HashSet<string>();\n        TrieNode root = new TrieNode();\n\n        foreach (string w in words) {\n            root.AddWord(w);\n        }\n\n        ROWS = board.Length;\n        COLS = board[0].Length;\n\n        for (int r = 0; r < ROWS; r++) {\n            for (int c = 0; c < COLS; c++) {\n                Dfs(r, c, root, \"\", board, res, visit, root);\n            }\n        }\n\n        return new List<string>(res);\n    }\n\n    private void Dfs(int r, int c, TrieNode node, string word, char[][] board,\n                    HashSet<string> res, HashSet<string> visit, TrieNode root) {\n        if (\n                r < 0 || r >= ROWS ||\n                        c < 0 || c >= COLS ||\n                        !node.children.ContainsKey(board[r][c]) ||\n                        node.children[board[r][c]].refs < 1 ||\n                        visit.Contains(r + \",\" + c)\n        ) {\n            return;\n        }\n\n        visit.Add(r + \",\" + c);\n        node = node.children[board[r][c]];\n        word += board[r][c];\n        if (node.isWord) {\n            node.isWord = false;\n            res.Add(word);\n            root.RemoveWord(word);\n        }\n\n        Dfs(r + 1, c, node, word, board, res, visit, root);\n        Dfs(r - 1, c, node, word, board, res, visit, root);\n        Dfs(r, c + 1, node, word, board, res, visit, root);\n        Dfs(r, c - 1, node, word, board, res, visit, root);\n        visit.Remove(r + \",\" + c);\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def findWords(self, board: List[List[str]], words: List[str]) -> List[str]:\n        ","javascript":"class Solution {\n    /**\n     * @param {character[][]} board\n     * @param {string[]} words\n     * @return {string[]}\n     */\n    findWords(board, words) {}\n}\n","cpp":"class Solution {\npublic:\n    vector<string> findWords(vector<vector<char>>& board, vector<string>& words) {\n        \n    }\n};\n","java":"class Solution {\n    public List<String> findWords(char[][] board, String[] words) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public List<string> FindWords(char[][] board, string[] words) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/asbcE9mZz_U","embedding":[0.0007479344,0.014052648,0.036365487,-0.01910169,-0.0018908092,0.0056066043,-0.0070882756,0.012390286,-0.076530665,0.090531684,0.003812594,-0.017098594,-0.02907587,-0.00034266882,-0.018151768,-0.061621018,0.078389205,-0.0053794486,0.019648928,0.081899785,0.032359295,0.02036137,0.0013293744,-0.010067107,0.06414038,0.049189433,0.030686606,0.0033298892,0.005477539,-0.028435705,0.049808946,-0.0043985513,-0.018606078,0.007423846,-0.0015384604,-0.014796066,0.022013407,0.010320075,-0.008678363,0.012070203,-0.024243658,0.035332963,-0.00837893,0.0015242632,-0.023809997,-0.017656157,-0.04072274,0.029426927,0.0005127126,0.02909652,-0.023603493,0.03905005,-0.016241599,0.010903451,-0.037811022,-0.025317483,-0.008425394,0.014919968,0.04262258,0.033247266,0.064057775,0.02126999,0.03748061,0.036530692,-0.0008286003,0.0059524993,0.016933389,-0.0037996874,0.0068301447,-0.026597813,-0.028456355,0.017728433,0.016551357,-0.032813605,0.008100149,0.0052426397,0.038802244,0.020010311,-0.019008763,-0.033144012,-0.009519869,-0.021414543,0.08165198,-0.018657705,-0.027114075,-0.058895156,-0.021910155,0.008017547,0.0035002555,-0.076571964,-0.01827567,-0.027547734,0.02562724,0.0014132669,-0.002381258,-0.017243147,-0.0038332446,0.0389881,-0.03399068,-0.021641698,0.036200285,-0.035849225,-0.003993286,0.03254515,0.024099104,-0.047743898,-0.0064429482,0.004388226,-0.03380483,0.005462051,-0.087227605,0.023500241,0.018575102,-0.020805353,0.04505934,-0.024408862,-0.0077955546,-0.042498678,0.010955078,-0.01496127,0.036386136,-0.04993285,-0.031471323,0.027816191,0.0031775918,0.060175486,0.029220423,-0.032710355,0.03958696,0.00011696558,-0.0011912743,0.017377375,-0.00494837,0.02913782,-0.07570464,-0.010727922,-0.024821872,-0.004261742,-0.01669591,0.016799161,-0.0005791813,-0.014001022,-0.005797621,0.003218893,-0.027919443,-0.027217327,-0.018368598,0.016551357,-0.032317992,0.011130606,0.04704178,-0.06360346,0.01435208,0.038058825,0.019349495,-0.07347439,-0.004690239,0.016148672,0.008425394,0.0005678881,-0.028993268,-0.011140931,0.0016107371,-0.051502287,0.06434688,-0.023706745,-0.03041815,0.029716033,-0.0032963322,-0.05034586,-0.0018753213,-0.04423332,-0.019060388,0.06988121,-0.003027876,0.010604019,-0.022364466,0.010103245,-0.050469764,-0.04097054,-0.090696886,0.0044321083,-0.04551365,0.0013371183,0.029344326,0.009050071,0.042374775,-0.04477023,-0.026845617,0.016602982,0.03169848,0.014909644,0.05951467,0.011233859,-0.005678881,0.0073928703,0.031058315,0.009251413,-0.0238513,-0.0007363185,-0.01630355,-0.015167775,-0.021559097,0.015776964,0.0043520876,0.00090733025,0.008265353,0.045926657,0.028621558,-0.034981906,0.046257064,-0.034011334,0.008786777,-0.047000483,-0.028993268,0.013526062,0.029901888,-0.0008834532,0.044398524,0.032792956,-0.020908607,0.023582842,0.001760453,0.011461014,0.029220423,0.035023205,-0.02215796,0.022488369,0.0024651506,0.010614345,-0.003644809,-0.0478678,0.008342792,-0.029447578,0.020980883,-0.044026814,-0.0013900351,-0.0367785,-0.012761994,-0.0076303505,0.014393382,-0.021208039,-0.007181203,-0.007382545,-0.015250376,-0.01803819,-0.028043346,0.007408358,0.015560133,0.016768185,0.04724829,-0.037563216,-0.012297358,-0.02475992,-0.0053329854,0.024450162,-0.037583865,-0.026350006,0.053567335,0.017872987,-0.012503863,0.050098054,-0.07244187,-0.07285488,-0.016840464,-0.064429484,0.022488369,0.01931852,-0.0071192514,0.023541542,0.010500766,-0.030314898,0.026866268,-0.050676268,0.04559625,-0.04039233,0.0060970527,-0.023809997,-0.019648928,-0.053567335,0.02775424,0.006690754,0.018760957,0.0088642165,-0.008064011,-0.005678881,0.00064726337,0.000038255814,-0.028890016,0.021600397,-0.025441386,0.0013693847,-0.037914272,0.04559625,-0.038389236,-0.022199262,-0.0027000497,-0.008182751,0.061001506,-0.024223007,-0.019411447,-0.0370263,0.012493538,0.025523989,-0.028002044,-0.018285995,0.0010925392,-0.009194625,0.03041815,0.001809498,-0.0048347926,0.00005626448,0.0116778435,-0.0035906015,-0.011822397,-0.05038716,0.00143908,-0.022674222,0.021249339,0.00008784519,-0.006448111,-0.015973143,0.09433137,0.03640679,-0.018864209,0.0033479584,-0.0058285967,0.031388722,0.024987075,-0.030211646,0.018616404,-0.014424358,0.021115111,0.06393387,-0.07628286,-0.019039739,0.0065720137,0.073557,-0.0034021658,0.020123888,0.016396478,0.015539483,0.047496095,0.021166738,-0.0434899,0.043283395,0.03000514,-0.005196176,0.034114584,-0.019617952,0.002953018,-0.022736173,0.028063996,-0.0020869887,-0.038967445,0.008100149,-0.0108415,0.048074305,0.033722226,0.034031983,-0.0027929768,-0.02170365,-0.032854907,0.009690235,-0.04691788,0.00043236933,-0.0074135205,0.038554437,0.081156366,0.011832722,-0.0017191521,-0.0071089263,-0.038864195,-0.010077432,0.011089305,0.012534838,-0.04202372,0.011306135,-0.040578183,0.06319045,-0.05856475,-0.024532765,-0.03696435,0.007398033,0.024904473,-0.008177589,-0.0009479859,0.0032834257,0.011615893,-0.009716049,0.0004949661,0.022343814,0.045802753,0.016788837,0.017872987,-0.00066146057,0.023149183,0.06029939,0.00855446,0.014011348,0.023830649,0.03091376,-0.047206987,0.017346399,-0.006985023,0.011017028,0.021930804,0.03444499,-0.011760445,0.0057769706,0.008957144,0.026350006,0.0025529151,-0.015425906,0.022880727,-0.0010176812,-0.008291166,-0.022240562,-0.044976737,-0.009194625,-0.023809997,-0.02608155,-0.012410936,0.023913251,-0.007212179,0.04741349,0.027547734,-0.0011803037,0.023417639,0.011770771,-0.020371694,0.043366,0.030211646,-0.0031053151,0.012266383,-0.024677318,0.014124925,0.051956598,-0.0041843024,-0.029695384,-0.043737706,-0.029716033,-0.0004794782,-0.02107381,0.019039739,-0.02909652,0.015580784,0.027878141,0.010304587,-0.0012680682,0.028497657,0.0023902925,0.003704179,-0.020743402,0.011956626,-0.03390808,-0.02300463,0.04253998,0.011089305,-0.018791933,-0.025482686,0.038843546,-0.049643744,-0.02471862,-0.016830137,0.032297343,-0.0018314391,0.02020649,0.05778003,-0.010758897,0.005529165,0.009122347,-0.02213731,-0.03830663,0.0018701587,0.029654082,0.0010331691,0.008487346,-0.022261212,-0.051832695,-0.029571481,-0.025296833,0.008033035,0.004411458,0.017511602,-0.006195143,-0.0077852295,0.011027354,-0.013618989,0.00849767,-0.03467215,0.017046968,0.011326786,-0.005389774,0.02868351,-0.023335038,0.024780571,-0.008136287,0.048074305,-0.055549778,-0.00859576,0.019721204,-0.010180685,0.03909135,-0.0039055212,-0.042787787,-0.020578198,-0.005508514,0.020382019,0.06211663,-0.02131129,-0.0127826445,0.0072689676,0.0071037635,0.008781615,0.011564266,-0.042663883,-0.008368605,-0.030108394,-0.047165684,0.00054594694,-0.009566333,0.022550318,-0.012638091,0.02736188,0.0016907577,-0.042230222,-0.027258627,-0.06418168,0.041486803,-0.008249865,0.0076045375,0.027919443,0.041817214,-0.011109956,0.0048528616,-0.027506433,0.008461532,-0.0043159495,-0.008657712,0.024078455,0.02911717,-0.002369642,-0.024057804,0.019586977,0.010041294,0.022323163,-0.014269479,-0.038575087,0.016107371,-0.021972107,-0.05600409,-0.011440364,-0.045431048,-0.013618989,-0.014486308,-0.014723789,-0.0021502308,-0.007227666,0.03512646,0.009752187,-0.004736703,-0.005988638,-0.009060396,0.024243658,0.04295299,0.005405262,0.031491976,0.01744965,0.0028988104,0.02519358,-0.024078455,-0.020309743,-0.023376338,0.006241606,-0.032359295,-0.004253998,-0.010335563,-0.03171913,-0.011812072,-0.0073773824,-0.01476509,0.013102727,0.016055744,-0.034031983,0.019896733,-0.017532254,0.047743898,0.04245738,-0.016468754,0.017015992,0.043655105,0.01719152,-0.016396478,-0.012503863,-0.031925634,-0.017222496,-0.011099631,-0.014537935,0.021455845,0.0076871393,0.031471323,0.008533809,0.002862672,-0.008487346,-0.02131129,0.03611768,0.010418165,0.002862672,0.00012341885,-0.01756323,0.0022212167,0.0032421246,-0.0065616886,0.011440364,-0.027878141,-0.037088253,-0.019349495,0.03700565,-0.025007727,0.03646874,-0.0048270486,0.011430038,-0.008833241,-0.0076303505,0.010789873,-0.041445505,0.049354635,-0.017336074,-0.018048516,-0.05567368,-0.004994834,0.01086215,-0.01344346,-0.03556012,-0.027052123,0.040082574,-0.028167248,0.04082599,0.04691788,0.02734123,-0.014868342,0.004716052,-0.0019269475,-0.0045947307,0.021042835,-0.012823945,0.013908096,0.022054708,-0.028311802,0.0115229655,0.050552364,0.06120801,0.006004126,-0.002343829,0.004269486,-0.011285485,-0.0014416613,0.0027800703,-0.0014532772,-0.022385115,-0.026866268,0.020144539,-0.014073299,-0.0016210623,-0.029261723,-0.011502315,0.034961253,0.005647905,0.0068301447,-0.023273086,0.00532266,0.023541542,-0.018781608,-0.026907569,0.0147341145,0.0029091358,-0.023995852,-0.01740835,0.02907587,0.012875572,-0.0010989925,-0.04082599,0.025482686,0.0001905329,0.025400085,-0.021641698,-0.03434174,0.015508507,0.000829891,-0.000093653136,0.011409388,-0.014486308,-0.0037635493,-0.0037480614,-0.0048786746,-0.021930804,0.055384576,-0.011822397,-0.102674164,0.051626187,0.025709841,-0.019597301,0.036633942,0.0046824953,-0.019050064,0.025751144,0.010655645,0.012101179,0.021621048,-0.02064015,0.016850788,-0.029777985,0.014259153,-0.05505417,0.05377384,0.026411958,-0.0027077936,0.006747543,-0.037604515,-0.033557024,0.04382031,0.011781096,-0.030067092,0.022880727,-0.00684047,0.031739783,-0.02521423,0.024491465,0.025007727,-0.00040816955,-0.009044908,0.0060918904,-0.0051652,-0.008926168,0.020784704,-0.008224051,0.00082601904,-0.010098083,-0.022323163,-0.018791933,-0.023314387,0.02215796,-0.021084135,-0.02824985,0.0103304,-0.006463599,0.011615893,-0.0869798,0.037625168,-0.026659764,0.004062981,0.030025791,-0.040598836,0.007676814,-0.0017372213,-0.0027129562,-0.001192565,0.020877631,-0.016819812,-0.020020636,-0.01567371,-0.009778,-0.053815138,0.012132155,0.040474933,-0.023913251,-0.006458436,-0.0062880698,0.024987075,-0.009272063,-0.029571481,0.043655105,0.012369635,-0.03700565,-0.020526573,0.0036551342,0.024429513,0.018141443,-0.04596796,-0.023913251,0.024883823,-0.009932878,-0.02992254,0.005170363,-0.02022714,0.013216305,0.004481153,-0.013360858,-0.024099104,-0.008399581,0.004896744,0.017077943,0.021208039,0.006257094,-0.011068655,-0.009339178,-0.005219408,0.03566337,-0.031099616,0.042003065,0.011254509,-0.0058389218,0.027176026,0.0033221452,0.036902398,0.037170857,-0.04258128,-0.037459962,0.013040775,-0.027444482,0.06323176,0.024140406,0.0075529115,0.007465147,0.021249339,-0.024945775,-0.028993268,0.024780571,0.023644794,-0.009287551,-0.011636543,-0.00520392,0.009039746,-0.002960762,0.0044243643,0.017883312,0.007454822,-0.010382026,-0.01710892,0.021393893,0.02083633,0.005405262,0.03731541,0.05414555,0.032731004,-0.0001839183,-0.0069127465,0.003838407,0.0011964369,-0.017067619,0.01539493,-0.010165197,-0.036324188,-0.025689192,0.00009671844,-0.008740313,-0.005188432,0.008652549,-0.03688175,-0.008946818,0.00015762121,-0.015085172,0.003967473,-0.031987585,0.005704694,0.03134742,0.022880727,-0.016489405,0.003495093,0.025049027,0.03167783,0.0063035577,0.0063758343,-0.0046050563,-0.013846144,0.003853895,-0.005296847,-0.032317992,-0.0066546155,-0.0012377378,0.013474436,-0.009075884,0.004491478,0.025090327,-0.013329882,-0.013205979,-0.0061848173,-0.010986053,0.002081826,0.04477023,-0.009132673,-0.025916347,0.023768697,-0.005513677,-0.045802753,0.024615366,0.034403693,0.020536898,-0.036344837,0.007976246,-0.004465665,0.03353637,-0.029860588,-0.008926168,0.032669052,0.011977276,-0.040949892,0.057077914,0.019938035,-0.018874535,-0.013825493,0.024181707,-0.0010789874,-0.0027903954,-0.02742383,0.0089158425,0.01949405,0.017274123,-0.049767647,-0.010340726,-0.035353612,-0.030480102,0.008399581,0.029323675,0.025234882,-0.005012903,-0.00674238,0.022632921,0.0137325665,-0.004989671,-0.0076355133,-0.0029065544,-0.00847702,-0.0046282876,-0.009767675,0.0011435201,0.015560133,-0.0029272048,-0.038864195,0.0032137302,0.018007215,-0.0070934384,-0.008843566,0.011502315,0.040557534,0.017026316,0.017924612,0.015033546,-0.038017526,-0.005363961,0.004163652,-0.017067619,-0.022839425,-0.01565306,-0.03091376,0.020010311,0.0006220956,0.043242097,0.039566312,0.004429527,0.008316979,0.0036912726,-0.0141972015,-0.007971084,-0.023149183,-0.018027864,-0.03774907,0.0017552904,0.014630862,-0.013546712,0.010258123,-0.009530194,-0.017986564,0.023541542,0.0116262175,-0.0075270985,-0.002253483,0.0048631867,-0.039483707,0.06612282,0.008507996,0.023706745,-0.008900355,-0.024429513,0.011037679,-0.0127826445,0.009303039,0.01052658,-0.05042846,0.0127826445,-0.010986053,-0.021662349,-0.008482182,-0.032028887,-0.014703139,0.019607626,0.011708819,0.0043262746,-0.0025451712,0.01908104,0.047661297,-0.025813093,-0.0065668514,-0.00396231,-0.0020495597,0.0007356732,-0.009406292,-0.02521423,0.014310779,-0.0097108865,-0.019969009,0.0056427424,0.03207019,-0.008518321,-0.021930804,0.015931841,-0.0012842014,0.022054708,-0.011130606,-0.017511602,0.013515736,0.016633958,0.032359295,-0.022323163,-0.010361376,0.016923064,-0.05129578,0.012751669,0.019762505,0.019865757,0.008828078,0.0071708774,0.03430044,0.018946812,-0.0005985411,0.0017875568,-0.00695921,-0.0041688145,0.010247799,0.030314898,0.018957136,0.022798125,0.0057356698,0.0016455847,0.0056272545,0.009912228,0.007434171,0.019473398,0.0030975714,0.007031487,0.019834781,-0.02085698,-0.016881764,0.0015371698,-0.011337111,-0.039359808,0.028167248,0.008038198,0.009055234,-0.04072274,0.040020622,-0.03345377,0.02643261,0.032214742,-0.008569947,0.03869899,0.013113052,0.03258645,0.0069179093,-0.032958157,-0.007465147,0.02126999,-0.017026316,-0.025090327,-0.005056785,0.025276182,-0.03297881,0.016220948,-0.01387712,-0.0015681455,-0.012989149,-0.0099690175,0.004976765,-0.04245738,-0.008012384,-0.025936997,-0.0014377894,0.0026458423,0.0005346537,0.05175009,-0.0006208049,0.0033427957,0.038347933,-0.039834768,0.01634485,0.0150954975,-0.018131118,-0.01368094,-0.022385115,0.027712937,0.037108906,0.024904473,-0.007749091,-0.014950944,0.033557024,-0.014259153,-0.0067940066,0.026866268,0.009380478,-0.01044914,0.011915324,-0.018100142,-0.006122866,-0.07983474,-0.002616157,-0.034093935,0.022385115,0.001685595,0.040640134,-0.02298398,-0.009370153,-0.0024277216,0.021166738,0.0005456243,-0.047661297,-0.017872987,0.0100206435,0.0022780055,0.0022599364,0.015167775,-0.01760453,0.0521631,0.060629796,-0.0005820853,-0.009654097,-0.030542053,0.022364466,-0.024119755,0.018771281,-0.016365502,-0.022447066,-0.029612781,-0.009891578,-0.0029168797,0.003993286,-0.023252435,0.016685585,0.034589548,0.015116148,-0.0018740307,0.0148889925,0.022756824,-0.0116778435,0.020609174,0.016892089,0.019112015,0.050263256,0.03954566,-0.04898293,0.016055744,0.003520906,-0.010614345,-0.027692288,-0.02170365,-0.008580273,-0.0017256053,0.012214757,-0.023541542,0.041466154,-0.023314387,0.0020921512,0.01687144,-0.031533275,-0.0077800667,-0.0010312331,0.0030846647,-0.0067940066,0.011801747,0.013629314,0.0097263735,-0.0026897243,0.010041294,0.014321105,0.021187387,0.0038590576,0.008569947,0.039752167,-0.013422809,-0.017903963,-0.04390291,0.0014093949,0.0010067107,-0.0029659246,-0.01786266,-0.015911192,-0.007191528,-0.018296322,0.040557534,0.02736188,0.041486803,-0.022818776,-0.0036344838,-0.0071192514,-0.0023089813,-0.012173455,-0.03566337,0.022509018,-0.00693856,-0.032731004,-0.010557556,-0.00008469922,-0.03380483,0.041383553,-0.032297343,0.009266901,-0.013267931,-0.0390707,-0.008611248,-0.014062974,0.007465147,-0.01240061,-0.03302011,-0.037521914,0.0033014948,-0.043572504,-0.03558077,-0.04910683,-0.03128547,-0.009597309,0.0021824972,-0.028394403,0.010103245,-0.0391533,-0.016654609,-0.027650986,0.01953535,0.010944752,0.01732575,0.00076600356,0.0039055212,0.0063500213,-0.045389745,-0.00016552646,0.0137841925,-0.0029194609,-0.013959722,-0.020196166,0.045926657,0.012896222,-0.011130606,0.022199262,-0.0048347926,-0.022509018,0.035250362,-0.010485279,-0.029406277,0.048404716,-0.021084135,-0.012658741,-0.0031311284,-0.010299425,-0.016892089,-0.005565303,0.0005088406,-0.008662875,0.029819287,0.008998444,-0.012927198,-0.00717604,-0.004026843,-0.016510054,0.019824456,-0.005983475,0.009272063,-0.002381258,-0.013412484,0.025007727,-0.030851811,0.0038590576,-0.014940619,0.027898792,0.005906036,-0.0013913257,0.0060712397,0.009824464,-0.0037764558,0.01957665,-0.01712957,0.009592146,0.021848204,0.022509018,-0.0021218364,-0.0017178614,0.044976737,0.0106762955,-0.027052123,0.0064119725,0.047991704,-0.013360858,-0.0077852295,0.03944241,-0.015539483,0.0048322114,0.0043159495,0.02430561,0.01687144,-0.03692305,-0.044563726,-0.020041287,-0.0038564764,0.012565814,-0.0038358257,0.0032989134,0.017728433,-0.009168811,-0.012080528,0.0015345884,-0.010485279,0.03684045,-0.006541038,0.020237466,0.031657178,-0.01435208,0.010056782,0.035911176,0.027547734,0.046298366,0.02608155,-0.011017028,-0.006541038,0.0019463074,-0.00843572,-0.032049537,-0.04208567,0.015405254,-0.003319564,-0.025338134,0.009292714,0.0025451712,-0.033495072,-0.0009589564,-0.02953018,-0.0014584399,-0.016396478,-0.03601443,0.01545688,0.030604005,0.020020636,-0.0016752698,-0.014475984,0.008048523,-0.009411454,-0.0018843559,0.011027354,-0.022302514,0.040929243,0.02059885,-0.0063964846,-0.018874535,0.021135762,-0.007666489,-0.014827041,0.009385641,-0.0039416593,0.01050593,-0.03770777,0.0150438715,-0.022736173,-0.020423321,0.0024586972,-0.0014881248,0.028621558,-0.019566325,-0.012194105,-0.0047934917,0.037108906,-0.007733603,-0.020929256,-0.011347436,0.0014687651,-0.02647391,0.017614856,-0.033598322,-0.024429513,-0.039112,-0.032008238,0.029303025,-0.029881237,-0.031657178,0.029695384,0.004465665,0.0022147635,0.02300463,0.008735151,0.004481153,0.02438821,-0.019442422,0.0026264824,0.0029272048,0.015818264,-0.042663883,-0.007986572,0.0130098,0.012049552,-0.00055917614,0.012989149,0.026990172,-0.02302528,-0.020134214,-0.0018701587,0.015477532,-0.03176043,0.010438816,0.0006911456,-0.020433646,-0.03950436,0.0030717582,-0.00770779,-0.027465133,-0.0073928703,0.029488878,-0.0063913222,-0.02257097,0.008151775,-0.008662875,0.021930804,0.027733589,0.0058182715,-0.017656157,-0.021393893,-0.022447066,-0.038430534,-0.0014506959,0.028043346,-0.01303045,-0.028931316,-0.0115229655,-0.030232295,-0.017005667,-0.00036396462,0.023995852,0.0022934934,-0.010562718,0.015074847,-0.005080017,-0.019504374,0.047537394,-0.012947848,0.044026814,-0.017945264,-0.020547222,-0.007542586,-0.010247799,-0.042209573,-0.0034847676,0.009581821,-0.024615366,0.011688169,0.060134184,0.004821886,0.01001548,0.0010634995,0.04563755,0.014558585,-0.011553941,0.028167248,0.0022405765,-0.010614345,0.012823945,-0.008817753,0.040123872,-0.011502315,0.012410936,-0.023376338,-0.043283395,-0.012844596,0.03816208,-0.008704175,-0.024408862,0.029654082,-0.020671126,-0.040020622,-0.0239339,0.025049027,-0.0054517253,-0.0077542537,0.022261212,0.008838403,0.0058337594,-0.001988899,0.0021928223,-0.00429788,0.01758388,-0.009287551,0.017046968,-0.0007453531,0.009612796,0.035828575,-0.009060396,0.025523989,0.0021773344,0.024883823,-0.003921009,0.00044624388,-0.0010376864,0.0434073,0.029282374,0.03390808,0.018141443,0.0013745473,0.03987607,0.009788325,0.005554978,-0.01346411,-0.056334496,0.0010615635,-0.029777985,-0.011130606,0.016623633,0.04074339,-0.01604542,-0.027279278,-0.020113563,-0.026721716,-0.0013848725,0.0022754243,0.032648403,0.00898812,0.037996873,0.011213209,0.00891068,-0.004171396,-0.0520805,-0.007150227,-0.013453784,0.014723789,0.01847185,0.048446015,-0.010872475,-0.028125947,0.019525025,0.01758388,0.011171907,0.026577162,-0.02696952]},{"id":"clone-graph","name":"Clone Graph","description":"Given a node in a connected undirected graph, return a deep copy of the graph.\n\nEach node in the graph contains an integer value and a list of its neighbors.\n\n```java\nclass Node {\n    public int val;\n    public List<Node> neighbors;\n}\n```\n\nThe graph is shown in the test cases as an adjacency list. **An adjacency list** is a mapping of nodes to lists, used to represent a finite graph. Each list describes the set of neighbors of a node in the graph.\n\nFor simplicity, nodes values are numbered from 1 to `n`, where `n` is the total number of nodes in the graph. The index of each node within the adjacency list is the same as the node's value (1-indexed).\n\nThe input node will always be the first node in the graph and have `1` as the value.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/ca68c09d-4d0e-4d80-9c20-078c666cf900/public)\n\n```java\nInput: adjList = [[2],[1,3],[2]]\n\nOutput: [[2],[1,3],[2]]\n```\n\nExplanation: There are 3 nodes in the graph.\nNode 1: val = 1 and neighbors = [2].\nNode 2: val = 2 and neighbors = [1, 3].\nNode 3: val = 3 and neighbors = [2].\n\n**Example 2:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/96c7fb34-26e8-42e0-5f5d-61b8b8c96800/public)\n\n```java\nInput: adjList = [[]]\n\nOutput: [[]]\n```\n\nExplanation: The graph has one node with no neighbors.\n\n**Example 3:**\n\n```java\nInput: adjList = []\n\nOutput: []\n```\n\nExplanation: The graph is empty.\n\n**Constraints:**\n* `0 <= The number of nodes in the graph <= 100`.\n* `1 <= Node.val <= 100`\n* There are no duplicate edges and no self-loops in the graph.\n","difficulty":"Medium","concepts":["Adjacency List"],"solutions":{"python":"\"\"\"\n# Definition for a Node.\nclass Node:\n    def __init__(self, val = 0, neighbors = None):\n        self.val = val\n        self.neighbors = neighbors if neighbors is not None else []\n\"\"\"\n\nclass Solution:\n    def cloneGraph(self, node: Optional['Node']) -> Optional['Node']:\n        oldToNew = {}\n\n        def dfs(node):\n            if node in oldToNew:\n                return oldToNew[node]\n\n            copy = Node(node.val)\n            oldToNew[node] = copy\n            for nei in node.neighbors:\n                copy.neighbors.append(dfs(nei))\n            return copy\n\n        return dfs(node) if node else None\n","javascript":"/**\n * // Definition for a Node.\n * class Node {\n *     constructor(val = 0, neighbors = []) {\n *       this.val = val;\n *       this.neighbors = neighbors;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {Node} node\n     * @return {Node}\n     */\n    cloneGraph(node) {\n        const oldToNew = new Map();\n        return this.dfs(node, oldToNew);\n    }\n\n    /**\n     * @param {Node} node\n     * @param {Map} oldToNew\n     * @return {Node}\n     */\n    dfs(node, oldToNew) {\n        if (node === null) {\n            return null;\n        }\n\n        if (oldToNew.has(node)) {\n            return oldToNew.get(node);\n        }\n\n        const copy = new Node(node.val);\n        oldToNew.set(node, copy);\n\n        for (const nei of node.neighbors) {\n            copy.neighbors.push(this.dfs(nei, oldToNew));\n        }\n\n        return copy;\n    }\n}\n","cpp":"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    vector<Node*> neighbors;\n    Node() {\n        val = 0;\n        neighbors = vector<Node*>();\n    }\n    Node(int _val) {\n        val = _val;\n        neighbors = vector<Node*>();\n    }\n    Node(int _val, vector<Node*> _neighbors) {\n        val = _val;\n        neighbors = _neighbors;\n    }\n};\n*/\n\nclass Solution {\npublic:\n    Node* cloneGraph(Node* node) {\n        map<Node*, Node*> oldToNew;\n        return dfs(node, oldToNew);\n    }\n\n    Node* dfs(Node* node, map<Node*, Node*>& oldToNew) {\n        if (node == nullptr) {\n            return nullptr;\n        }\n\n        if (oldToNew.count(node)) {\n            return oldToNew[node];\n        }\n\n        Node* copy = new Node(node->val);\n        oldToNew[node] = copy;\n\n        for (Node* nei : node->neighbors) {\n            copy->neighbors.push_back(dfs(nei, oldToNew));\n        }\n\n        return copy;\n    }\n};\n","java":"/*\nDefinition for a Node.\nclass Node {\n    public int val;\n    public List<Node> neighbors;\n    public Node() {\n        val = 0;\n        neighbors = new ArrayList<Node>();\n    }\n    public Node(int _val) {\n        val = _val;\n        neighbors = new ArrayList<Node>();\n    }\n    public Node(int _val, ArrayList<Node> _neighbors) {\n        val = _val;\n        neighbors = _neighbors;\n    }\n}\n*/\n\nclass Solution {\n    \n    public Node cloneGraph(Node node) {\n        Map<Node, Node> oldToNew = new HashMap<>();\n\n        return dfs(node, oldToNew);\n    }\n\n    private Node dfs(Node node, Map<Node, Node> oldToNew) {\n        if (node == null) {\n            return null;\n        }\n\n        if (oldToNew.containsKey(node)) {\n            return oldToNew.get(node);\n        }\n\n        Node copy = new Node(node.val);\n        oldToNew.put(node, copy);\n\n        for (Node nei : node.neighbors) {\n            copy.neighbors.add(dfs(nei, oldToNew));\n        }\n\n        return copy;\n    }\n}\n","csharp":"/*\n// Definition for a Node.\npublic class Node {\n    public int val;\n    public IList<Node> neighbors;\n\n    public Node() {\n        val = 0;\n        neighbors = new List<Node>();\n    }\n\n    public Node(int _val) {\n        val = _val;\n        neighbors = new List<Node>();\n    }\n\n    public Node(int _val, List<Node> _neighbors) {\n        val = _val;\n        neighbors = _neighbors;\n    }\n}\n*/\n\npublic class Solution {\n    \n    public Node CloneGraph(Node node) {\n        Dictionary<Node, Node> oldToNew = new Dictionary<Node, Node>();\n        return Dfs(node, oldToNew);\n    }\n\n    private Node Dfs(Node node, Dictionary<Node, Node> oldToNew) {\n        if (node == null)\n            return null;\n\n        if (oldToNew.ContainsKey(node))\n            return oldToNew[node];\n\n        Node copy = new Node(node.val);\n        oldToNew[node] = copy;\n\n        foreach (Node nei in node.neighbors)\n            copy.neighbors.Add(Dfs(nei, oldToNew));\n\n        return copy;\n    }\n}\n"},"starterCode":{"python":"\"\"\"\n# Definition for a Node.\nclass Node:\n    def __init__(self, val = 0, neighbors = None):\n        self.val = val\n        self.neighbors = neighbors if neighbors is not None else []\n\"\"\"\n\nclass Solution:\n    def cloneGraph(self, node: Optional['Node']) -> Optional['Node']:\n        ","javascript":"/**\n * // Definition for a Node.\n * class Node {\n *     constructor(val = 0, neighbors = []) {\n *       this.val = val;\n *       this.neighbors = neighbors;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {Node} node\n     * @return {Node}\n     */\n    cloneGraph(node) {}\n}\n","cpp":"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    vector<Node*> neighbors;\n    Node() {\n        val = 0;\n        neighbors = vector<Node*>();\n    }\n    Node(int _val) {\n        val = _val;\n        neighbors = vector<Node*>();\n    }\n    Node(int _val, vector<Node*> _neighbors) {\n        val = _val;\n        neighbors = _neighbors;\n    }\n};\n*/\n\nclass Solution {\npublic:\n    Node* cloneGraph(Node* node) {\n        \n    }\n};\n","java":"/*\nDefinition for a Node.\nclass Node {\n    public int val;\n    public List<Node> neighbors;\n    public Node() {\n        val = 0;\n        neighbors = new ArrayList<Node>();\n    }\n    public Node(int _val) {\n        val = _val;\n        neighbors = new ArrayList<Node>();\n    }\n    public Node(int _val, ArrayList<Node> _neighbors) {\n        val = _val;\n        neighbors = _neighbors;\n    }\n}\n*/\n\nclass Solution {\n    public Node cloneGraph(Node node) {\n        \n    }\n}","csharp":"/*\n// Definition for a Node.\npublic class Node {\n    public int val;\n    public IList<Node> neighbors;\n\n    public Node() {\n        val = 0;\n        neighbors = new List<Node>();\n    }\n\n    public Node(int _val) {\n        val = _val;\n        neighbors = new List<Node>();\n    }\n\n    public Node(int _val, List<Node> _neighbors) {\n        val = _val;\n        neighbors = _neighbors;\n    }\n}\n*/\n\npublic class Solution {\n    public Node CloneGraph(Node node) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/mQeF6bN8hMk","embedding":[0.01839368,-0.029493144,-0.02840593,-0.012651214,-0.01400529,0.016347742,0.020400085,-0.015606459,-0.017128559,0.06665609,0.03461293,-0.008475326,-0.03830946,-0.03056059,-0.015092504,-0.055981625,0.02401754,-0.028030347,0.02202102,0.051118813,0.034435026,0.040839702,0.088400364,-0.04811415,0.032359436,-0.0017160681,0.042421106,-0.013698894,-0.025717547,-0.0039139697,0.021171017,-0.00050036545,0.029315237,0.052304868,0.0014825643,0.039574582,0.032616414,-0.018146586,-0.01605123,0.052146725,-0.0154285515,-0.015952392,0.00796137,0.011722141,-0.02393847,-0.046888564,-0.032873392,-0.0034074269,0.01353087,0.010931441,-0.05507232,-0.0046305424,-0.016634371,-0.035719912,-0.07725148,-0.020914039,-0.006434329,-0.016683789,0.0010285289,0.043211807,0.03263618,0.009666319,0.021269854,0.07650031,0.032675717,0.016565185,-0.0023165066,-0.034257118,-0.020241944,-0.04779787,-0.033940837,0.015359365,-0.0045885365,-0.030066403,0.00396833,0.010901789,0.0057820007,0.010575625,0.0036372242,-0.034850143,0.013412264,0.0057869423,0.07096541,0.0047911536,-0.0037904226,-0.035344332,-0.03208269,-0.0715189,-0.03872458,-0.052897893,0.010239577,-0.031983852,0.0122954,0.049339738,0.009918354,0.028583838,0.034257118,0.034415256,-0.042579245,-0.021427995,0.0022584395,-0.065944456,-0.006557876,0.009844227,0.021507066,0.0157646,-0.02522336,0.0065331664,-0.025203591,0.045939725,-0.031094315,-0.041155983,0.04119552,-0.012572145,-0.003234461,-0.08029568,-0.08278639,0.011554117,0.004464989,-0.017276816,0.018947171,-0.011504699,-0.021803578,-0.007106425,-0.01001225,-0.0059104892,0.022811722,-0.0019928133,-0.030817568,0.0021645438,-0.006839563,-0.01936229,-0.03208269,0.009068351,-0.02609313,0.029572215,-0.046256006,-0.023444282,0.008267767,-0.023167538,-0.002143541,-0.02138846,0.014588432,0.025005916,0.017859956,0.08341895,-0.025658244,0.032873392,-0.04301413,0.03239897,0.067723535,0.04044435,0.025322197,0.021250088,-0.018146586,-0.03757806,-0.023721028,0.022693116,0.0062663048,-0.019668685,-0.019896012,-0.029236166,-0.042579245,0.0046552517,-0.014776223,0.023641957,-0.055586275,-0.0003539622,0.013896569,-0.035818752,0.027872209,-0.07990033,-0.007427647,0.07432589,0.01812682,-0.031786177,-0.017405303,-0.004640426,0.019253567,0.026705924,-0.0035532124,-0.009419225,-0.016535534,-0.031983852,-0.02099311,-0.013273892,0.02107218,-0.0120186545,-0.04629554,0.0068790982,0.008134336,-0.0064788056,0.0007567255,-0.0065381085,0.027951278,0.023009397,0.05578395,0.0013602527,0.013382613,0.01261168,-0.010007309,0.020815201,0.0024079315,0.015013434,0.036826897,-0.0126610985,-0.013718661,-0.022159394,0.011227953,-0.0026686157,0.05874908,-0.0029700703,-0.01952043,-0.0056139766,-0.0054459525,0.00037867163,0.019589616,0.013402381,0.0048751654,0.02585592,-0.046888564,0.026231503,0.040088538,0.036925733,0.035344332,-0.02577685,-0.04238157,-0.05384673,-0.0013207176,0.00035735976,0.021665206,-0.008757013,0.018116934,-0.049814157,-0.042262964,-0.033664092,-0.03783504,0.00945876,-0.029868728,0.008574164,-0.011208186,-0.006429387,0.004558885,0.023483817,0.028188488,-0.00013883597,0.011573885,0.019115195,-0.00030469784,0.0538072,-0.009211666,0.033980373,-0.007427647,-0.008079975,-0.016011694,0.014548897,0.03374316,-0.016802395,0.014568664,0.008584047,-0.017089024,-0.031331524,-0.0076104966,-0.031509433,-0.0041610636,-0.026765225,0.026369875,-0.0006869214,-0.011297139,-0.0067703766,0.049735088,-0.047283914,0.03192455,-0.082311966,-0.016703557,-0.013945987,-0.00365205,0.023602422,0.0075215427,-0.05420255,0.008747129,0.034652468,0.04700717,0.04423972,-0.015932623,0.010605277,0.0048825783,0.022693116,-0.023562888,-0.01812682,-0.031153616,-0.021862881,-0.014054709,-0.017148327,-0.011138999,-0.038250156,-0.005693047,0.033585023,0.075393334,-0.017464606,-0.009725621,-0.0346327,0.018176237,0.04475367,-0.020014618,-0.052502543,-0.028050115,0.024847776,0.051197886,0.022258231,-0.03071873,0.019737871,-0.01085237,0.021882648,0.020518688,0.01468727,0.050011832,-0.024847776,0.0013306014,0.012839006,-0.038408298,-0.051988587,0.023009397,0.025065219,-0.019401824,0.032300133,-0.01615995,0.0047738566,0.029987333,0.0025265366,0.012651214,-0.017494258,0.079939865,0.026468713,-0.005549732,-0.027437322,-0.012483191,0.0069384007,0.01468727,-0.019451242,-0.00772416,-0.035719912,0.008450616,-0.026488481,-0.027812906,0.014875061,0.014677386,0.040246677,-0.04779787,-0.020518688,-0.0070668897,-0.014973898,-0.0037434746,-0.022100091,0.0071509015,0.021447763,0.013975639,0.019046009,0.01631809,0.010506438,-0.0036223987,-0.00071904366,-0.025104754,-0.015132039,-0.07238867,0.014370989,-0.016881464,0.033861768,0.0055793836,0.04348855,0.01852217,0.024472194,-0.040721096,0.012552377,-0.04989323,-0.0018902693,-0.0018457925,-0.005979676,-0.019401824,0.051276956,-0.03279432,0.007486949,0.00077525753,0.03959435,-0.027279181,-0.03520596,0.03664899,-0.009710796,-0.03208269,0.0082479995,0.0125326095,-0.008593931,0.036411777,0.011603536,0.034138512,0.014845409,-0.0011323084,0.03518619,0.03870481,0.029651284,0.020172758,0.053174637,-0.029809425,-0.0013417206,-0.014252384,-0.025974525,0.02425475,0.05123742,0.0016950651,-0.02953268,-0.012591912,0.012048305,-0.033248972,-0.023879169,0.0300071,-0.013886685,0.0077340435,-0.0073979953,-0.03461293,-0.013955872,0.0057820007,-0.018769262,-0.010076495,0.0129180765,0.038111784,0.021803578,0.020933807,0.0022497913,0.034435026,-0.02729895,0.038665276,0.050090905,-0.025341965,-0.009691028,0.09330271,0.015418668,-0.0012725343,0.014598316,-0.015141923,-0.022712884,-0.0008975691,-0.022495441,0.003896673,-0.025717547,-0.013184938,-0.027239647,0.014539014,-0.008994223,-0.0040029236,0.0023844575,-0.053609524,0.016041346,0.0074918913,-0.013155286,-0.0093105035,-0.027239647,0.019559965,0.047837406,-0.001926098,-0.036451314,-0.041393194,0.0223373,-0.016416928,0.013936104,0.020479154,0.0033481242,0.019787291,0.011257605,0.007822997,-0.017543677,0.06748632,0.032616414,-0.030481521,-0.009394515,0.0005587414,0.05961885,0.00530758,0.06017234,-0.022258231,0.028919887,-0.021190785,-0.011366325,0.039455976,0.0119297,0.015072736,-0.014094244,0.012127375,0.01947101,0.009607016,0.0017407775,0.0063947937,0.009626783,0.02099311,-0.0041660056,0.055586275,0.028939653,-0.015141923,-0.04708624,0.015695414,-0.011247721,-0.02015299,-0.05218626,-0.06290026,-0.00058592175,-0.05266068,-0.08223289,0.029888496,0.023128003,-0.026271038,0.036510617,-0.043765295,0.005272987,0.005505255,-0.008336953,0.00031813356,-0.011336675,-0.024195448,-0.015902972,0.0028341687,-0.02178381,-0.009043641,0.0154285515,0.014499478,-0.0065529337,-0.003063966,0.018670425,0.01700007,0.0017741352,-0.01915473,0.03111408,-0.012058189,0.0051197885,-0.011979119,0.021368692,-0.010545974,0.011682606,0.0017852545,-0.010407601,-0.0022670878,0.036135033,0.020419851,0.011989003,-0.015201225,-0.014815759,-0.009162247,-0.012888425,0.035344332,-0.016486114,0.0049097585,0.040068768,-0.023365213,-0.018719845,-0.042500176,-0.051593237,-0.02656755,-0.00215466,0.0053619407,0.027911743,-0.022554744,0.013481451,-0.02267335,0.008865735,0.02138846,0.013323311,-0.003444491,0.0071854945,0.007813114,0.009508179,0.003936208,-0.01547797,-0.005238394,-0.020736132,0.04653275,0.0067357835,0.016258787,-0.014756456,0.0014405582,-0.001016792,-0.013698894,0.0071163084,-0.011188418,-0.052858356,-0.029354772,0.0001440095,-0.02170474,0.025421035,-0.03686643,0.0031257395,0.014746572,-0.035482705,-0.042658314,0.033387348,0.019204149,0.029176865,-0.015576808,-0.051909517,0.014370989,-0.0018013156,-0.020054152,-0.0146082,0.0051642656,0.030026868,0.025164057,0.022614047,-0.012799472,0.01061516,0.021507066,-0.007081715,0.013708778,0.009369806,0.017879725,-0.018492518,0.007818055,-0.013145403,0.0153692495,0.014697153,0.032517575,0.06780261,0.025816385,-0.047362987,0.014884945,0.016495999,0.0036026312,0.0048801075,0.0028761746,0.033881534,-0.029572215,0.03423735,-0.02322684,-0.026646622,-0.015290179,0.003953505,-0.0010365595,-0.022238463,-0.021586135,-0.004763973,-0.0040399875,-0.009300619,0.017168093,-0.01581402,-0.004679961,0.0008215877,-0.04293506,0.008178812,-0.020953575,0.013095984,0.02937454,-0.007946544,0.0020212291,-0.020854738,0.0006844505,0.027674532,0.01200877,-0.013283775,0.0075511937,0.003948563,-0.020914039,-0.0064096195,-0.029829193,0.026705924,-0.03838853,-0.00472938,-0.014499478,0.02801058,-0.025243128,-0.02753616,0.014380873,0.011722141,-0.015754716,-0.0002907988,0.011227953,0.010437252,0.033011764,0.0069532264,-0.050249044,-0.0016629429,-0.008060208,-0.011880281,-0.0022559685,-0.011573885,0.0037879515,0.04811415,-0.031805944,0.07096541,0.028564071,0.0039955107,-0.013797731,-0.006295956,-0.009587249,-0.036036193,-0.028840816,-0.0027130926,-0.0048603397,-0.030026868,-0.017929144,0.006038978,0.01432157,0.069897965,-0.0052482774,-0.057325818,0.0049838866,-0.006888982,-0.0010408836,0.013600056,-0.026982669,-0.0066863648,-0.014489595,0.01671344,0.017780887,-0.021823345,0.0200245,0.0059006056,-0.012334934,0.0074918913,-0.010585508,-0.0025994293,0.0037237073,0.060607225,0.019461127,-0.02561871,-0.013293659,0.0023906347,-0.039238535,0.014430292,-0.046335075,0.0052828705,-0.05412348,-0.011425628,-0.012582028,-0.01878903,-0.017415188,0.023325678,0.0009482234,0.014193081,0.02138846,0.010644811,-0.042262964,0.022495441,-0.03166757,-0.016960535,-0.01868031,0.018719845,0.013026798,-0.011267488,-0.020874504,-0.003281409,-0.021210553,0.00064676866,-0.03647108,0.054360688,-0.018957054,0.0018396152,-0.020321013,-0.026369875,-0.0059450828,0.016495999,-0.012937844,-0.030817568,0.016624486,-0.019461127,-0.06222816,-0.033090834,-0.0052285097,0.020014618,0.029275702,0.0034519038,-0.01029888,-0.041472264,-0.021764044,0.025678013,-0.013461683,-0.015309947,0.023661725,0.0044946405,-0.026132666,0.013797731,0.005875896,-0.026112897,0.0037879515,-0.0041882438,0.012621564,0.01492448,0.0028144012,-0.0004759649,0.017276816,0.0384676,0.0276943,-0.0057375235,0.006839563,-0.024175681,-0.033189673,-0.044516463,-0.035304796,0.003973272,0.014262268,-0.011119232,-0.015734948,-0.012384353,0.047560662,-0.01791926,-0.044951346,0.020340782,0.026962902,-0.025124522,-0.047600195,0.041749008,-0.0353641,-0.062781654,-0.039475743,-0.017247165,-0.022653582,0.020854738,-0.028148953,-0.03805248,0.0031726875,-0.0037212363,-0.039080393,-0.04301413,-0.00514944,0.0027081508,0.003926324,0.036135033,0.030778034,0.028939653,-0.030303612,-0.0074474146,0.021862881,0.023345444,-0.027397787,-0.054242082,0.025658244,-0.030224543,-0.011129116,0.050328113,-0.005678221,0.012107608,0.014983783,0.011909933,0.005604093,0.031904783,-0.008070092,-0.0033851883,0.019925663,-0.03911993,-0.008252941,0.015141923,0.018937288,-0.0057523493,-0.03712341,-0.030026868,0.00480845,0.033268742,0.02026171,-0.0027205055,-0.01053609,0.025816385,0.039495513,0.025084987,0.059263036,0.029078027,0.012542494,-0.050604858,-0.018334378,-0.002947832,-0.013738428,-0.0025920165,-0.009463701,-0.011346558,0.023641957,-0.00092351396,0.01812682,0.004422983,0.030105937,0.02178381,-0.016357625,-0.0011063636,-0.02553964,-0.015418668,0.011475047,0.04348855,0.014726805,0.009013991,0.029493144,0.023128003,0.0057523493,-0.036925733,0.025262894,-0.01563611,-0.021052413,-0.017306466,0.008712536,-0.035067584,0.010318647,-0.04044435,0.021269854,0.014153547,-0.001676533,-0.019125078,0.04542577,0.03334781,0.017276816,-0.009518063,0.015616343,0.015645994,0.0072596227,-0.044200182,0.00077216886,0.0058660125,-0.01823554,-0.04846997,0.0013318369,-0.044714138,-0.004852927,0.05906536,-0.009760215,0.01639716,-0.013214589,0.037479226,-0.0172867,0.016130298,-0.009335212,-0.0011607242,-0.025440803,0.024215216,-0.007971253,-0.02832686,-0.002779808,0.05115835,0.011415744,-0.0062860725,0.042816456,0.023108235,0.005312522,0.010654695,-0.0046774903,0.025005916,-0.013234356,-0.010170391,-0.0065282243,-0.012186678,-0.0038719636,-0.062070023,0.00006474636,0.03933737,-0.03382223,-0.011504699,0.016347742,-0.01105993,0.0069482843,0.040286213,0.02322684,-0.008564279,0.00514944,-0.0076796827,-0.0087619545,-0.045860652,0.01029888,-0.019797174,-0.009948006,0.0119494675,0.005851187,-0.023681493,-0.0028465234,0.01639716,0.009251201,-0.020212293,0.003029373,0.0030911465,-0.017355885,-0.0030812626,0.019559965,-0.0030862046,0.033802465,0.023800097,0.013076217,-0.009498294,-0.042579245,0.025915222,-0.0010248225,-0.0066517717,0.0053767664,0.028840816,-0.027575694,0.021902416,-0.011979119,0.026528016,0.001700007,-0.0144006405,0.013936104,0.011109348,0.035878055,0.0723096,0.019816943,-0.04846997,0.022277998,0.03823039,-0.037242014,0.016377393,-0.034948982,-0.0076006125,-0.04605833,0.026784994,0.032517575,-0.022258231,0.008430849,-0.029315237,0.04091877,-0.017227396,0.01544832,0.017434955,-0.022811722,-0.010625044,0.004679961,0.027259415,0.0060834554,0.013194822,-0.006399736,-0.005618918,0.004069639,-0.0152407605,0.049537413,-0.054953713,-0.002861349,-0.003899144,-0.005618918,-0.018373912,-0.012868658,-0.02745709,0.0005377384,0.013817498,0.017978562,-0.025302429,0.018196005,-0.008564279,-0.014499478,0.004232721,0.025183825,-0.022100091,-0.030837337,0.015596576,-0.0074918913,-0.009710796,-0.011712258,0.021487297,-0.018116934,-0.027358253,-0.028860584,-0.04159087,-0.000028319293,0.027219879,-0.024808241,-0.014291919,-0.014637851,0.011366325,0.02425475,0.0059104892,0.012591912,0.0048208046,0.00012702178,0.009448876,-0.024808241,0.0010112324,-0.012453539,0.013679126,0.004603362,0.0051593236,0.01508262,-0.02059776,0.021764044,-0.048628107,0.032833856,0.0038472542,-0.020123338,-0.027160577,-0.010713997,-0.016110532,-0.0052334517,-0.010200042,-0.009641609,-0.0047442056,0.028148953,-0.0376769,-0.02314777,0.0017346002,0.01647623,-0.0023115647,0.053214174,-0.010407601,-0.010101205,-0.014282036,0.04356762,0.023523353,-0.006958168,0.017533792,0.012483191,-0.02601406,0.008732303,0.0052087423,0.0006405913,-0.010170391,0.025262894,0.0042154244,-0.00018902693,-0.025895456,-0.02107218,-0.0063157235,0.011840747,0.022831488,-0.01581402,-0.024037309,-0.014015174,-0.004479815,0.022930326,-0.0122954,-0.00014300567,-0.016990187,0.03415828,-0.02714081,0.012245981,-0.008826199,0.02706174,-0.0073189256,0.021190785,0.008208464,-0.015329714,0.01400529,0.0109215565,-0.011356442,0.03486991,0.009611958,0.031825714,-0.008129394,-0.014291919,-0.027476856,0.01316517,-0.0010909202,-0.002275736,0.020281479,-0.0015789309,-0.002945361,0.020498922,-0.014222733,-0.0119297,-0.012582028,0.028564071,0.017701818,0.000275201,0.034533862,-0.0042920234,-0.047362987,-0.023167538,0.040009465,0.021684973,-0.0022423784,0.011218069,0.036609452,-0.020321013,-0.021250088,-0.032260597,0.007002645,-0.029018724,0.016980302,0.005258161,0.001282418,-0.034138512,-0.0017518967,-0.0075314264,0.019105311,0.03736062,-0.02609313,0.011514583,0.043607157,0.011998886,-0.00530758,0.014598316,0.0073535186,0.024689637,-0.009448876,-0.004679961,0.016683789,-0.026073363,-0.011227953,-0.018027982,-0.0017543677,-0.029908262,-0.035739683,-0.016545417,-0.03166757,-0.009923297,0.00073386927,0.009523004,-0.023918703,-0.025282662,-0.0018433215,0.0126610985,-0.0004129559,-0.012147143,-0.0022646168,-0.009028817,0.006829679,-0.0029330063,-0.0012280574,-0.018403564,0.021052413,-0.018581472,0.022455906,0.010007309,-0.037696667,-0.0059500244,-0.0052136844,0.020617526,-0.00228562,-0.05882815,-0.0073337513,0.009350038,-0.03273502,0.0038670218,-0.0044921697,-0.040068768,-0.0024968854,-0.013886685,0.0048405724,-0.0048331595,-0.016110532,-0.010565741,0.011939584,0.0063206656,0.013412264,0.011138999,-0.029473377,-0.0045218207,0.0032221063,-0.047283914,0.025421035,0.014440176,0.018186122,-0.005510197,0.0018470279,0.039554812,-0.0064886897,-0.0056139766,0.008233174,-0.009720679,-0.005801768,0.023483817,-0.044990882,0.031390827,0.0337827,0.008075033,0.008371546,-0.013748312,0.0047787987,0.0292164,0.020212293,0.0024375827,0.0094389925,0.011643071,0.0077291015,-0.009300619,-0.016822163,-0.022475673,-0.01834426,0.018887868,-0.00072645646,0.030185008,-0.058551405,0.022851257,0.000029052853,0.0072596227,-0.015804134,-0.022277998,0.019886129,0.025243128,0.054400224,0.02953268,0.019718105,0.008702652,-0.011158767,-0.0029626575,0.00018964468,-0.005436069,0.042658314,0.041828077,-0.008070092,-0.0045341756,-0.01605123,0.004474873,-0.032438505,0.02291056,-0.0031973969,0.013481451,0.013313427,0.018097168,0.026310572,0.019431476,0.06313747,0.025164057,0.012265748,-0.026844297,0.0058610705,-0.007472124,-0.009112828,-0.03597689,-0.011672722,-0.022297766,-0.0057375235,-0.026765225,0.00853957,0.0050802534,0.05768163,-0.024669869,0.003189984,0.03295246,0.009948006,0.0024375827,-0.0082825925,-0.00959219,0.017563444,0.018097168,0.04811415,0.0006597411,-0.025954759,-0.044555996,0.0015492797,-0.040839702,0.009231433,0.013026798,0.0026735575,0.0064886897,0.0043661515,-0.028919887,-0.040246677,-0.037380386,-0.03975249,-0.027358253,-0.009720679,-0.0054607783,0.024393123,-0.008668059,0.004469931,0.015725065,-0.04503042,0.0014331454,0.013906453,-0.03214199,-0.002411638,0.08571198,0.02291056,-0.071874715,0.013125636,-0.0043760356,-0.019174498,0.018591356,-0.008579105,0.017138442,0.022396604,-0.0022794425,0.027496625,-0.023048932,-0.01689135,-0.026982669,-0.010476788,0.013679126,0.01053609,0.004035046,0.0106645785,0.03313037,0.006454096,-0.02656755,0.016940767,-0.021447763,-0.034810606,-0.024867544,0.009453818,-0.00017142149,-0.044437394,-0.0034667293,0.03409898,0.0058116517,0.011741908,-0.007669799,0.018798914,0.020696597,-0.011465163,-0.017771004,0.02130939,0.0064096195,0.028544303,0.008648291,0.008524745,0.027634997,-0.026429178,0.00987882,0.010891905,0.038092017,-0.025341965,0.02043962,-0.007195378,0.015972158,0.0017803125,-0.005841303,0.03210246,0.0071854945,0.020103572,0.015843669,-0.0102099255,0.016683789,0.06104211,0.017187862,-0.040562958,-0.0051741493,0.04645368,-0.009013991,-0.024531497,-0.02441289,-0.04348855,-0.0029231224,0.0015566924,-0.018452983,0.014015174,0.0067852023,-0.00914248,-0.01707914,-0.032576878,0.01689135,-0.0074918913,-0.0223373,0.02650825,0.013906453,-0.03757806,-0.04965602,-0.0021225377,0.014746572,-0.006236654,0.01568553,-0.011909933,0.021032644,0.0046181874,0.010565741,0.04669089,0.0043241456,-0.01061516,-0.031687338,0.030204775,0.007427647,0.014282036,0.019332638,-0.0531351,0.013570405,0.0292164,-0.019411707,0.0491816,0.016337859,-0.012048305,0.015586692,-0.009547713,0.0059351986,-0.00885585,-0.005796826,0.015566925,0.041037377,0.030975709,0.008544512,0.0027674532,0.024748938,-0.03400014,0.014311687,0.0453467,0.036609452,0.013728545,0.01384715,-0.0026389644,0.024116378,-0.011672722,-0.0019125078,0.0016320561,0.044397857,0.0008870676,0.012858774,0.026883831,0.0016925941,0.050169975,0.021665206,0.014726805,0.00596485,0.021131482,0.03805248,0.04779787,0.0017543677,0.012522726,-0.021210553,-0.018561704,0.013797731,0.02275242,-0.052463006,0.010555858,0.030639661,-0.0025265366,-0.023503585,-0.032438505,-0.018255308,0.016169833,-0.00945876,0.0023869283,-0.0008308537,-0.010555858,-0.01563611,-0.042104825,-0.0006813618,0.017593095,-0.023325678,-0.027575694,0.00819858,-0.007995963,-0.00018949024,0.003948563,-0.018561704,0.07258634,0.011900049,-0.0036199277,-0.023424516,-0.013708778,-0.02593499,-0.02043962,0.02251521,0.012572145,0.001252149,0.017118676,0.008949746,-0.0042500175,-0.008712536,-0.014044825,0.057444423,0.013649475,0.005796826,-0.034435026]},{"id":"pacific-atlantic-water-flow","name":"Pacific Atlantic Water Flow","description":"You are given a rectangular island `heights` where `heights[r][c]` represents the **height above sea level** of the cell at coordinate `(r, c)`.\n    \nThe islands borders the **Pacific Ocean** from the top and left sides, and borders the **Atlantic Ocean** from the bottom and right sides.\n\nWater can flow in **four directions** (up, down, left, or right) from a cell to a neighboring cell with **height equal or lower**. Water can also flow into the ocean from cells adjacent to the ocean.\n\nFind all cells where water can flow from that cell to **both** the Pacific and Atlantic oceans. Return it as a **2D list** where each element is a list `[r, c]` representing the row and column of the cell. You may return the answer in **any order**.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/3899fae1-ab18-4d6b-15b4-c7f7aa224700/public)\n\n```java\nInput: heights = [\n  [4,2,7,3,4],\n  [7,4,6,4,7],\n  [6,3,5,3,6]\n]\n\nOutput: [[0,2],[0,4],[1,0],[1,1],[1,2],[1,3],[1,4],[2,0]]\n```\n\n**Example 2:**\n\n```java\nInput: heights = [[1],[1]]\n\nOutput: [[0,0],[0,1]]\n```\n\n**Constraints:**\n* `1 <= heights.length, heights[r].length <= 100`\n* `0 <= heights[r][c] <= 1000`\n","difficulty":"Medium","concepts":["Matrix DFS"],"solutions":{"python":"class Solution:\n    def pacificAtlantic(self, heights: List[List[int]]) -> List[List[int]]:\n        ROWS, COLS = len(heights), len(heights[0])\n        pac, atl = set(), set()\n\n        def dfs(r, c, visit, prevHeight):\n            if (\n                (r, c) in visit\n                or r < 0\n                or c < 0\n                or r == ROWS\n                or c == COLS\n                or heights[r][c] < prevHeight\n            ):\n                return\n            visit.add((r, c))\n            dfs(r + 1, c, visit, heights[r][c])\n            dfs(r - 1, c, visit, heights[r][c])\n            dfs(r, c + 1, visit, heights[r][c])\n            dfs(r, c - 1, visit, heights[r][c])\n\n        for c in range(COLS):\n            dfs(0, c, pac, heights[0][c])\n            dfs(ROWS - 1, c, atl, heights[ROWS - 1][c])\n\n        for r in range(ROWS):\n            dfs(r, 0, pac, heights[r][0])\n            dfs(r, COLS - 1, atl, heights[r][COLS - 1])\n\n        res = []\n        for r in range(ROWS):\n            for c in range(COLS):\n                if (r, c) in pac and (r, c) in atl:\n                    res.append([r, c])\n        return res\n","javascript":"class Solution {\n    /**\n     * @param {number[][]} heights\n     * @return {number[][]}\n     */\n    pacificAtlantic(heights) {\n        const ROWS = heights.length,\n            COLS = heights[0].length;\n        const pac = new Set();\n        const atl = new Set();\n\n        for (let i = 0; i < ROWS; i++) {\n            this.dfs(i, 0, pac, heights[i][0], ROWS, COLS, heights);\n            this.dfs(\n                i,\n                COLS - 1,\n                atl,\n                heights[i][COLS - 1],\n                ROWS,\n                COLS,\n                heights,\n            );\n        }\n\n        for (let j = 0; j < COLS; j++) {\n            this.dfs(0, j, pac, heights[0][j], ROWS, COLS, heights);\n            this.dfs(\n                ROWS - 1,\n                j,\n                atl,\n                heights[ROWS - 1][j],\n                ROWS,\n                COLS,\n                heights,\n            );\n        }\n\n        const res = [];\n        for (let i = 0; i < ROWS; i++) {\n            for (let j = 0; j < COLS; j++) {\n                const coord = i * COLS + j;\n                if (pac.has(coord) && atl.has(coord)) {\n                    res.push([i, j]);\n                }\n            }\n        }\n        return res;\n    }\n\n    /**\n     * @param {number} r\n     * @param {number} c\n     * @param {Set} visit\n     * @param {number} prevHeight\n     * @param {number} ROWS\n     * @param {number} COLS\n     * @param {number[][]} heights\n     * @return {void}\n     */\n    dfs(r, c, visit, prevHeight, ROWS, COLS, heights) {\n        const coord = r * COLS + c;\n        if (\n            r < 0 ||\n            c < 0 ||\n            r === ROWS ||\n            c === COLS ||\n            heights[r][c] < prevHeight ||\n            visit.has(coord)\n        ) {\n            return;\n        }\n        visit.add(coord);\n        this.dfs(r + 1, c, visit, heights[r][c], ROWS, COLS, heights);\n        this.dfs(r - 1, c, visit, heights[r][c], ROWS, COLS, heights);\n        this.dfs(r, c + 1, visit, heights[r][c], ROWS, COLS, heights);\n        this.dfs(r, c - 1, visit, heights[r][c], ROWS, COLS, heights);\n    }\n}\n","cpp":"class Solution {\npublic:\n    vector<vector<int>> pacificAtlantic(vector<vector<int>>& heights) {\n        int ROWS = heights.size(), COLS = heights[0].size();\n        unordered_set<int> pac, atl;\n\n        for (int i = 0; i < ROWS; i++) {\n            dfs(i, 0, pac, heights[i][0], ROWS, COLS, heights);\n            dfs(i, COLS - 1, atl, heights[i][COLS - 1], ROWS, COLS, heights);\n        }\n\n        for (int j = 0; j < COLS; j++) {\n            dfs(0, j, pac, heights[0][j], ROWS, COLS, heights);\n            dfs(ROWS - 1, j, atl, heights[ROWS - 1][j], ROWS, COLS, heights);\n        }\n\n        vector<vector<int>> res;\n        for (int i = 0; i < ROWS; i++) {\n            for (int j = 0; j < COLS; j++) {\n                int coord = i * COLS + j;\n                if (pac.count(coord) && atl.count(coord)) {\n                    res.push_back({i, j});\n                }\n            }\n        }\n        return res;\n    }\n\nprivate:\n    void dfs(int r, int c, unordered_set<int>& visit, int prevHeight, int ROWS, int COLS, vector<vector<int>>& heights) {\n        int coord = r * COLS + c;\n        if (r < 0 || c < 0 || r == ROWS || c == COLS || heights[r][c] < prevHeight || visit.count(coord)) {\n            return;\n        }\n        visit.insert(coord);\n        dfs(r + 1, c, visit, heights[r][c], ROWS, COLS, heights);\n        dfs(r - 1, c, visit, heights[r][c], ROWS, COLS, heights);\n        dfs(r, c + 1, visit, heights[r][c], ROWS, COLS, heights);\n        dfs(r, c - 1, visit, heights[r][c], ROWS, COLS, heights);\n    }\n};\n","java":"class Solution {\n   \n    public List<List<Integer>> pacificAtlantic(int[][] heights) {\n        int ROWS = heights.length, COLS = heights[0].length;\n        Set<Integer> pac = new HashSet<>();\n        Set<Integer> atl = new HashSet<>();\n\n        for (int i = 0; i < ROWS; i++) {\n            dfs(i, 0, pac, heights[i][0], ROWS, COLS, heights);\n            dfs(i, COLS - 1, atl, heights[i][COLS - 1], ROWS, COLS, heights);\n        }\n\n        for (int j = 0; j < COLS; j++) {\n            dfs(0, j, pac, heights[0][j], ROWS, COLS, heights);\n            dfs(ROWS - 1, j, atl, heights[ROWS - 1][j], ROWS, COLS, heights);\n        }\n\n        List<List<Integer>> res = new ArrayList<>();\n        for (int i = 0; i < ROWS; i++) {\n            for (int j = 0; j < COLS; j++) {\n                int coord = i * COLS + j;\n                if (pac.contains(coord) && atl.contains(coord)) {\n                    res.add(Arrays.asList(i, j));\n                }\n            }\n        }\n        return res;\n    }\n\n    private void dfs(int r, int c, Set<Integer> visit, int prevHeight, int ROWS, int COLS, int[][] heights) {\n        int coord = r * COLS + c;\n        if (r < 0 || c < 0 || r == ROWS || c == COLS || heights[r][c] < prevHeight || visit.contains(coord)) {\n            return;\n        }\n        visit.add(coord);\n        dfs(r + 1, c, visit, heights[r][c], ROWS, COLS, heights);\n        dfs(r - 1, c, visit, heights[r][c], ROWS, COLS, heights);\n        dfs(r, c + 1, visit, heights[r][c], ROWS, COLS, heights);\n        dfs(r, c - 1, visit, heights[r][c], ROWS, COLS, heights);\n    }\n}\n","csharp":"public class Solution {\n    \n    public List<List<int>> PacificAtlantic(int[][] heights) {\n        int ROWS = heights.Length, COLS = heights[0].Length;\n        HashSet<int> pac = new HashSet<int>();\n        HashSet<int> atl = new HashSet<int>();\n\n        for (int i = 0; i < ROWS; i++) {\n            dfs(i, 0, pac, heights[i][0], ROWS, COLS, heights);\n            dfs(i, COLS - 1, atl, heights[i][COLS - 1], ROWS, COLS, heights);\n        }\n\n        for (int j = 0; j < COLS; j++) {\n            dfs(0, j, pac, heights[0][j], ROWS, COLS, heights);\n            dfs(ROWS - 1, j, atl, heights[ROWS - 1][j], ROWS, COLS, heights);\n        }\n\n        List<List<int>> res = new List<List<int>>();\n        for (int i = 0; i < ROWS; i++) {\n            for (int j = 0; j < COLS; j++) {\n                int coord = i * COLS + j;\n                if (pac.Contains(coord) && atl.Contains(coord)) {\n                    res.Add(new List<int> { i, j });\n                }\n            }\n        }\n        return res;\n    }\n\n    private void dfs(int r, int c, HashSet<int> visit, int prevHeight, int ROWS, int COLS, int[][] heights) {\n        int coord = r * COLS + c;\n        if (r < 0 || c < 0 || r == ROWS || c == COLS || heights[r][c] < prevHeight || visit.Contains(coord)) {\n            return;\n        }\n        visit.Add(coord);\n        dfs(r + 1, c, visit, heights[r][c], ROWS, COLS, heights);\n        dfs(r - 1, c, visit, heights[r][c], ROWS, COLS, heights);\n        dfs(r, c + 1, visit, heights[r][c], ROWS, COLS, heights);\n        dfs(r, c - 1, visit, heights[r][c], ROWS, COLS, heights);\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def pacificAtlantic(self, heights: List[List[int]]) -> List[List[int]]:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[][]} heights\n     * @return {number[][]}\n     */\n    pacificAtlantic(heights) {}\n}\n","cpp":"class Solution {\npublic:\n    vector<vector<int>> pacificAtlantic(vector<vector<int>>& heights) {\n        \n    }\n};\n","java":"class Solution {\n    public List<List<Integer>> pacificAtlantic(int[][] heights) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public List<List<int>> PacificAtlantic(int[][] heights) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/s-VkcjHqkGI","embedding":[-0.026207043,-0.024838017,0.10981533,-0.009888758,-0.0077802157,0.01619605,-0.01807846,-0.031120863,0.013788033,0.034983467,-0.015230399,-0.045177814,-0.0024752454,-0.0046754633,-0.0005286635,0.013519118,0.04146189,-0.013836928,-0.007829109,0.05627669,0.005656394,-0.0146192275,0.011343347,0.008379164,-0.0150714945,0.021012083,0.01455811,0.046326816,0.0047793626,0.0033828353,0.06497978,-0.0048404797,-0.022307767,0.023725685,0.014814802,-0.0022078578,-0.0066862185,0.045373388,-0.011624486,0.049040418,0.03207429,-0.017320607,-0.02256446,-0.009760412,0.0054547074,0.0060292087,0.040899612,0.016672764,0.0075113,0.02975184,-0.017112808,0.04583788,-0.013017957,-0.0013568011,-0.0065762075,0.02840726,-0.0030604424,0.01865296,0.058428016,0.036108024,0.019031886,-0.040557355,-0.0081102485,0.006985693,-0.018885206,0.029140666,0.017711757,-0.0011681019,-0.013372437,-0.053880896,-0.06419747,0.046106793,0.012700148,-0.02865173,-0.023481216,-0.05427205,-0.016770551,-0.021232106,0.0033217182,-0.03214763,0.014924813,0.009577061,0.030778607,-0.0040765153,0.005421093,-0.047084667,0.019985314,0.0071812677,-0.04823367,-0.010567158,0.013189086,-0.0044340505,0.000432022,0.005283579,0.010426589,0.014729238,0.05011608,0.016929457,0.0071812677,-0.037574835,0.013250203,-0.014961483,-0.008220259,0.037917092,0.004620458,0.025669212,0.0171617,0.04121742,0.021989958,0.03224542,-0.047573604,-0.013494671,0.02189217,0.0010053775,0.026060361,0.0028175015,-0.063904114,-0.054760985,0.054516517,0.029140666,-0.009479273,-0.045080025,-0.012663478,0.01868963,0.011483916,0.011074431,-0.037843753,-0.044297725,-0.009308145,-0.021733265,0.030485244,-0.0014148625,0.028040558,0.010817739,-0.04432217,-0.013030181,-0.020156443,0.026329277,0.046033453,0.057010096,0.023982378,0.075883076,0.006985693,-0.01850628,0.036988113,0.026867108,0.018555174,0.04776918,-0.055152133,0.011911737,0.014851472,-0.01978974,-0.013714693,0.0044554416,-0.046571285,-0.07666538,0.01740617,0.0063011805,0.04745137,-0.03808822,-0.019777516,-0.031829823,-0.02730715,-0.020950966,0.031829823,-0.038748287,-0.019288579,-0.0043759895,-0.06336628,-0.08336382,-0.051876254,-0.05480988,0.05348975,-0.0052377414,0.013494671,-0.006649548,-0.038210455,-0.026818214,-0.054418728,-0.06737557,0.00020378757,0.02306562,-0.025326956,-0.042366423,-0.011337235,0.038210455,0.042830914,0.009784859,0.0028052782,0.075736396,0.009033117,0.0370859,-0.0139102675,-0.0013629129,-0.025424743,-0.03520349,0.014937037,0.01787066,-0.022576682,-0.017662862,-0.01982641,-0.045788985,0.028553942,0.017601745,-0.022087745,-0.042439763,-0.03747705,0.01850628,0.009167575,-0.033516657,0.00384427,-0.00932648,-0.0226378,-0.0124373445,-0.040704034,-0.01256569,-0.008745867,0.024825795,0.011037761,0.07065145,-0.024397975,0.026818214,-0.014228078,0.0049290997,-0.015951581,0.012675701,-0.0043332074,0.0046937987,0.030558584,-0.007407401,0.04737803,-0.013836928,-0.026818214,0.018518502,-0.016758328,-0.012602361,0.0058152988,-0.048135884,-0.01608604,0.009051453,0.028627282,0.0035539635,-0.0054363725,0.012761265,0.003388947,-0.0232123,-0.016746104,-0.003801488,-0.02552253,0.025180275,0.021708818,0.0076579815,-0.030118542,-0.03816156,-0.039775055,0.050702803,-0.016929457,-0.06317071,0.008024684,0.013788033,-0.024764678,0.028847305,-0.07368286,-0.025791446,-0.006059767,-0.04043512,0.006997916,0.015450421,-0.03965282,0.028529495,0.013274649,0.050164975,0.046571285,-0.03669475,0.04067959,-0.018701853,0.015866017,-0.010072109,-0.0007822998,-0.068353444,-0.012247881,0.026427064,0.027967216,-0.020193113,0.016110485,0.01662387,0.00075938087,0.005292747,-0.050018292,-0.004519615,-0.039359458,0.007682428,-0.010579382,0.019166345,0.030705266,0.013665799,-0.03608358,-0.008751979,0.010035439,-0.040386226,0.010976644,-0.0008732116,-0.003801488,0.030191882,-0.025375849,0.009662624,-0.006673995,-0.013946938,0.018701853,0.034763448,-0.01807846,0.01729616,-0.0014843832,-0.0043332074,-0.009534279,-0.086248554,0.012150094,-0.050458334,0.015829347,-0.011752832,-0.007444071,-0.009491497,0.045862325,0.03591245,0.010304355,-0.037330367,-0.01690501,-0.030094095,-0.006047544,-0.04972493,-0.040312886,0.01697835,0.0062767332,0.01865296,-0.019423036,-0.019337473,0.017051691,-0.015181505,-0.0124556795,-0.010065998,0.025864787,0.0024691336,0.020804284,0.021060977,-0.0089169955,0.030142989,0.016782776,0.025204722,0.011270006,-0.01947193,-0.010597717,0.02021756,0.045788985,0.008366941,-0.0072668316,-0.000060353206,-0.0004893193,0.00032124712,-0.009564837,0.032514334,-0.04324651,0.006356186,-0.018310703,-0.017235043,0.019704176,0.04730469,-0.012052306,0.028309474,0.029482923,0.019728623,0.013629129,0.010585494,-0.003997063,-0.002939736,0.014008055,-0.019814186,-0.017675085,0.027893877,0.0014286139,0.01960639,-0.058672484,0.015328187,-0.02434908,0.0028816746,0.020877626,0.030925289,0.0139102675,-0.028211685,-0.05207183,-0.06302403,0.049382675,-0.006356186,0.05979704,0.03737926,0.008134696,-0.024226846,0.10101446,0.011691715,-0.016721658,0.07216716,-0.011337235,-0.01826181,0.0015179977,0.014448099,0.02505804,-0.029482923,0.018970769,0.015047047,-0.026793767,-0.038992755,-0.016770551,-0.044151045,0.039163884,0.0067717824,-0.0066984417,0.047744732,-0.01701502,0.008764202,-0.031487565,0.001102401,-0.03466566,-0.0044829445,0.02150102,-0.022368884,-0.02431241,0.05642337,0.02474023,-0.018677408,-0.034836788,-0.0047885305,0.011716162,-0.0058855833,0.03217208,0.048575927,-0.019581942,0.05534771,0.0013017957,0.062339514,0.012492349,-0.013665799,0.013494671,-0.0456423,-0.006527314,-0.022393331,-0.047500264,-0.04737803,0.059454784,0.06204615,-0.038821626,0.033467762,0.07221605,0.010035439,0.023933483,0.021904394,-0.01032269,0.030411905,-0.010768846,0.04713356,-0.0025837284,-0.022148862,-0.019545272,0.018628513,-0.017308382,0.008269154,0.025938127,-0.014142513,0.03403004,-0.00033156064,0.01612271,-0.04065514,0.013751363,0.0039359457,0.009833753,0.004012342,-0.013470224,0.008458616,0.036816984,-0.011538922,-0.030974181,-0.019276356,0.025473638,-0.10512153,-0.009222581,0.016061593,0.060139295,0.066642165,-0.014509216,-0.019960867,-0.0033858912,0.0045685084,-0.024446867,0.01804179,0.0078107743,-0.012131758,0.013678023,0.003178093,-0.021831052,0.030534139,0.024104612,-0.017785097,0.0218555,-0.005965036,-0.02349344,0.00565945,0.020559816,-0.012883499,-0.036352493,0.008923107,-0.012895723,0.063806325,-0.0075051887,0.069478,0.021024307,0.00026414078,0.009748189,0.023358982,-0.010206567,-0.010023216,0.016807223,-0.03997063,-0.01452144,-0.0119850775,-0.027527174,0.016758328,-0.0011344875,-0.012327333,-0.029067326,-0.030631926,-0.03918833,0.0066801067,-0.020486476,0.0077618808,0.010579382,0.026598193,-0.00066388526,0.038772732,-0.0059619797,-0.0120828645,0.038894966,-0.0077679926,-0.008703085,0.025204722,-0.038186006,0.042293083,0.01776065,-0.031023076,0.05916142,0.021024307,-0.036279153,0.029605158,-0.011740608,-0.012327333,-0.049871612,-0.018970769,-0.007639646,0.026475959,0.020694274,0.026329277,0.020229783,0.010212679,-0.021085424,0.003153646,0.010200456,-0.0066373246,0.015083717,0.055054348,0.01196063,0.002739577,-0.005485266,0.006484532,0.0061025494,-0.026378172,-0.0045501734,-0.038723838,0.024581326,-0.010982756,0.012088976,-0.020131996,0.00583669,-0.00993154,-0.00921647,0.003780097,-0.009668737,-0.0006822204,-0.029996308,-0.021598808,0.0043484867,-0.005879472,0.0039206664,-0.024190176,-0.018799642,0.037525944,0.0094670495,0.00726072,0.00040566523,-0.043417636,0.011239448,-0.010848298,0.0055586067,0.0016761384,0.023395652,-0.0011398352,0.01655053,0.022808928,-0.04199972,-0.02331009,0.01686834,0.048649266,0.010218791,0.008183589,0.018995216,0.0008793233,0.007382954,-0.025204722,-0.0048404797,-0.046009004,-0.01188729,0.026255937,0.059063632,-0.045935664,0.0134580005,0.013335766,0.03833269,0.0029947413,-0.0024294076,-0.012712372,-0.0070957034,0.03222097,-0.046180133,-0.010475483,-0.03503236,-0.017968448,0.00067840057,0.04534894,-0.016672764,0.019948645,-0.004100962,0.0028602835,0.004278202,-0.007492965,0.057792395,0.011691715,0.012052306,-0.046082348,-0.0056441706,0.022038851,-0.001555432,0.028382814,-0.0056258356,-0.0045287823,0.01448477,-0.008819208,0.030705266,0.016684987,0.020926518,-0.0033583886,-0.013433554,-0.0351057,0.001446949,0.018604066,0.01028602,-0.014863696,0.011349458,0.01139224,0.01768731,-0.0031139199,-0.025033593,0.026744874,0.058330227,-0.009271475,0.04050846,0.019753069,0.050213866,0.0031811488,0.04050846,0.008030796,-0.0041131857,-0.012382339,-0.0012467903,-0.011294453,0.005601389,0.04261089,-0.014509216,0.039848395,-0.01651386,-0.008978113,0.016636094,-0.001683778,-0.044395514,-0.0068267877,-0.0107260635,0.005442484,-0.046546835,0.015315963,0.027722748,-0.010279908,0.0060505997,0.02252779,0.02032757,-0.056325585,-0.0036609184,-0.029629605,0.0058397455,0.014839249,-0.01725949,-0.0015508482,-0.036181364,0.03911499,0.023933483,0.014032503,0.0028572278,-0.006417303,-0.04791586,0.0063378504,-0.024862465,0.008409723,-0.0094670495,0.040948503,0.0370859,-0.0024355191,0.000066799155,-0.003434785,-0.012785712,-0.00022479659,0.010646611,0.008195813,-0.017051691,-0.029922966,0.0049138204,-0.041950826,-0.007187379,-0.0045440616,0.008440281,0.026280383,0.03530128,-0.008709197,-0.027184917,0.014545887,-0.0078168865,0.0027258259,-0.0165872,-0.039457247,0.00003359057,-0.008055243,0.024226846,-0.003819823,0.012150094,0.043197617,-0.0593081,0.01765064,-0.019178567,0.0087397555,-0.0023178686,-0.03068082,-0.017565075,0.009601507,-0.021488797,0.024226846,0.010316579,-0.0031903163,0.01420363,0.022099968,-0.0035784103,-0.037599284,0.023395652,0.004174303,-0.010255462,-0.003783153,0.047818076,-0.005399702,-0.022686694,-0.016538307,0.030094095,0.0064050793,0.01448477,-0.03957948,-0.004345431,-0.024080165,-0.035056807,-0.02146435,0.000053047796,0.020865401,0.00032487596,-0.001360621,0.015193729,0.014643674,0.0006084978,-0.014729238,0.058134653,-0.04324651,0.0065639843,0.00565945,-0.0011635182,0.02224665,0.02291894,-0.0122784395,-0.0064539732,-0.030118542,-0.035154596,0.0035967454,0.01843294,0.01373914,0.015120388,-0.0105366,-0.0019374143,0.051387317,-0.008073579,0.018604066,-0.017613968,-0.0037892645,-0.05559218,0.0276983,-0.003370612,-0.0011482389,0.012504573,0.006466197,-0.017455064,-0.024899134,0.01776065,0.06654438,-0.008275265,0.01772398,0.010237126,0.015584879,-0.004033733,0.015927134,0.040190652,0.035888,0.012425121,-0.016917232,-0.009534279,-0.00040833908,-0.011227224,0.0292629,0.06356186,0.0036211924,0.0014110426,-0.025669212,0.015707113,0.032881036,0.028162792,0.035399064,-0.0059222537,-0.040312886,-0.05182736,0.04488445,0.045226704,0.00544554,0.0041773585,-0.016330509,0.01185062,0.016416073,0.042268634,-0.027771642,-0.015303739,0.01818847,-0.0019542216,-0.02584034,-0.00040528324,0.014827025,0.029482923,-0.008886437,-0.0003155174,-0.020352017,-0.025180275,-0.0421464,0.0006898601,-0.0072179376,0.002354539,-0.006649548,-0.0122601045,0.033369973,-0.04378434,0.02747828,0.005790852,-0.009460938,-0.010139339,0.024752455,0.017809544,0.02317563,0.022808928,0.029214008,-0.011777279,0.044591088,-0.037403706,-0.028920645,0.0024324635,0.009784859,0.034054488,-0.022222202,0.012895723,-0.030705266,-0.003175037,0.003217819,0.005262188,0.0053416407,-0.0069490224,-0.051729575,0.040728483,0.038063772,-0.023163408,-0.026255937,0.036572516,0.030020755,0.015719336,-0.0022414722,0.0018900485,0.021757713,-0.017283935,-0.005796964,-0.02708713,-0.009760412,-0.040068418,0.033345528,-0.00016157851,0.03028967,0.008495287,0.0046968544,0.034225617,0.003196428,0.03153646,0.012339557,0.049040418,-0.010426589,0.03075416,-0.0139102675,-0.017503958,0.030876394,0.035472404,0.013409107,0.07500299,0.03691477,0.025400296,0.017528404,-0.00578474,0.021439902,0.000023993263,-0.013519118,-0.021941064,0.003178093,-0.019496378,-0.023407876,-0.010004881,-0.020242007,0.00092134136,-0.051387317,0.034959022,-0.0068390113,0.010994979,-0.012859053,0.005289691,-0.015633773,0.06424637,0.011862842,-0.024874689,0.011600039,-0.007694652,0.0011986605,0.03843048,0.003951225,0.018286258,0.03911499,0.020278677,-0.0006822204,0.0056991763,0.01865296,0.018934099,-0.013201308,0.06258398,-0.026524851,0.014313641,-0.018445162,0.012712372,0.045226704,-0.01252902,0.028602835,0.018176246,-0.035007916,0.02708713,0.023371207,0.035961345,0.015597102,-0.037257027,0.004269034,-0.021549914,0.009937651,-0.037428156,-0.017503958,-0.0099193165,0.0034775669,0.007908562,0.0015783509,0.050605018,-0.02142768,-0.027918324,0.011361682,0.013164639,0.06933132,0.016440518,0.017308382,-0.035888,-0.027820535,0.0042843134,0.0036364717,-0.023847919,-0.05314749,0.059454784,-0.010383807,-0.021562139,-0.0032147632,-0.042635337,-0.024459092,0.015132612,0.029214008,0.023517888,0.006417303,-0.028113898,-0.021659926,-0.028162792,-0.044004362,0.0010840658,0.008788649,0.0052591325,0.026598193,-0.013592458,-0.022197757,0.004357654,0.0034133939,0.037990432,0.015878242,0.0059680915,-0.019386366,0.015499314,-0.023151184,0.006331739,0.008703085,0.010744398,0.0020397855,-0.021611031,0.01765064,0.019276356,0.036181364,-0.03300327,-0.025546977,-0.03669475,0.028138345,0.00031666333,-0.0042843134,0.004290425,0.024300188,-0.0005936005,0.010127115,-0.018420715,0.010396031,0.0016287726,0.031756483,0.029214008,-0.017944,0.03256323,0.031414226,-0.0026433177,-0.0044157156,-0.010206567,-0.01584157,-0.01623272,0.01452144,0.04427328,-0.010829963,-0.02224665,-0.010982756,-0.023811249,0.014668121,0.0051093954,-0.011722273,-0.01889743,-0.01373914,-0.07187379,-0.000111156856,0.043417636,0.003587578,0.019960867,0.011655045,0.010389919,-0.011618374,-0.030778607,0.043344297,-0.00843417,-0.010585494,-0.03955503,-0.00444933,0.033296634,0.027160471,-0.017919553,-0.015279292,-0.009302033,0.018738525,0.0232123,-0.005399702,-0.018714078,0.0073951776,-0.0022857822,0.025326956,0.02740494,-0.028602835,-0.05260966,0.009308145,-0.010194344,0.05955257,-0.0156215485,0.001467576,-0.00875809,-0.009259251,-0.003495902,0.0049352115,0.039677266,-0.04644905,-0.0074685183,-0.026035914,0.02630483,0.002307173,0.01960639,-0.0078168865,0.043931022,0.038601603,-0.021867724,-0.012131758,-0.020413134,0.015743783,-0.011123325,0.038601603,-0.019801963,-0.018237364,-0.02887175,-0.034127828,-0.010298243,-0.016367178,0.0062583983,-0.041266315,-0.009845976,0.03449453,-0.014729238,-0.024654666,-0.0048343684,-0.025302509,0.0015248734,0.021146541,0.0113189,0.061703894,0.0017739258,-0.045226704,-0.009234805,0.025033593,0.042439763,-0.0009328008,0.018946324,-0.00072423846,-0.04217085,-0.021012083,-0.030558584,-0.009815417,-0.0046326816,0.02505804,0.015780453,0.024972476,-0.028627282,0.010982756,-0.009302033,-0.021965511,-0.018934099,0.0155237615,-0.029140666,0.011111101,0.02217331,-0.026891556,0.004382101,0.0055402713,0.03459232,-0.0045257267,-0.013335766,0.0002893516,-0.00133923,0.007389066,-0.019386366,-0.031829823,-0.006930687,0.012357892,0.00009578207,-0.02513138,0.0363036,-0.017173925,0.0043148724,-0.0005378311,0.0073462836,-0.03442119,0.032612123,-0.008794761,-0.021794382,-0.013091298,0.022552235,0.02392126,-0.008788649,-0.052511875,-0.040141758,0.04855148,0.004122353,0.0009794027,0.01804179,-0.0061575547,-0.009063676,-0.044542193,0.040166203,-0.012498462,-0.0150714945,-0.010707729,-0.0051705125,-0.05080059,0.007920785,-0.0052316296,-0.01373914,0.008892548,-0.004858815,0.02142768,0.0042415317,-0.00954039,0.05011608,-0.009845976,-0.0019175513,0.017736202,0.00487715,-0.010622164,-0.0056319474,-0.0029061215,-0.019337473,0.0113189,0.035056807,-0.01740617,-0.004984105,0.007303502,0.021488797,-0.0047396366,-0.029800732,-0.0083852755,-0.0041559674,-0.01584157,0.01751618,-0.010671058,0.0038045438,0.01755285,-0.0026616529,0.027942771,0.04246421,-0.0171617,0.0036884213,-0.003178093,0.01584157,0.010848298,0.0054547074,0.0056472267,-0.00091293774,0.009344815,-0.009008671,0.005567774,0.027991664,-0.008061355,0.017149478,-0.01886076,-0.028456155,0.031756483,-0.005531104,-0.008397499,-0.021439902,0.0047121337,0.009222581,-0.001080246,0.048527032,-0.008959777,0.0049749375,-0.004944379,0.008721421,-0.0019756125,0.018139577,-0.0045012794,0.010756622,-0.025571425,0.0029336242,-0.008024684,0.023847919,-0.03686588,0.030583031,-0.008813096,0.0008510566,0.015597102,-0.017589523,-0.020425359,0.027527174,0.025302509,-0.013873598,-0.0057602935,-0.03623026,0.013201308,-0.015633773,-0.00015689923,-0.03691477,0.013763587,0.002007699,-0.0051460657,-0.022882268,-0.00021104523,0.03481234,0.012308998,-0.0070345863,-0.004904653,0.037403706,0.019765293,0.008458616,-0.02291894,0.007517412,-0.009027006,-0.009668737,-0.005399702,-0.0017830934,0.040239546,0.0010237126,0.0014026391,-0.02110987,-0.006777894,0.04434662,-0.028065005,0.021769935,0.0035784103,0.008538068,0.0011314317,-0.01160615,-0.011037761,-0.002808334,-0.008617521,0.0059925388,0.004730469,0.02896954,0.025498083,-0.018396268,-0.008177477,-0.0028908423,0.021562139,-0.009338704,-0.0021895226,0.019740846,0.02911622,-0.026060361,-0.01448477,0.043808788,0.0015859905,0.01993642,-0.000033375705,-0.007187379,0.0014584084,0.014900366,0.02989852,-0.04175525,0.0074807415,0.009790971,0.008263041,0.0057389024,0.0049168766,0.03652362,0.030534139,-0.0026769321,0.018359598,0.005439428,0.0037617618,-0.015817124,-0.032612123,0.007560194,-0.007059033,-0.016269391,0.0015485563,0.0051246746,-0.030314116,-0.030314116,-0.015401527,0.029605158,-0.017540628,-0.013775811,-0.0007494493,0.009729854,0.022185532,0.02740494,0.035863556,0.0032055955,0.022760034,-0.053538643,-0.026378172,-0.028138345,0.009552614,0.04706022,-0.008751979,0.038210455,0.017149478,0.021672148,-0.0014538247,-0.00882532,0.0202909,0.0090147825,0.029702945,0.032098737,0.016049368,0.014228078,0.013922491,0.020388689,0.0015279292,-0.006182002,0.0051032836,-0.020987635,-0.021977734,-0.004229308,0.012846829,-0.022344438,-0.01178339,0.009167575,0.0027915267,-0.011551145,-0.017467286,-0.0041926377,-0.037208132,0.02021756,-0.012052306,-0.019887527,0.019178567,-0.009723742,-0.00089995033,-0.0060567115,-0.003459232,0.027062682,-0.01939859,0.016391626,0.040459566,0.012327333,0.042268634,0.014582557,0.02826058,0.01185062,0.027527174,-0.025253614,0.0070284745,-0.024752455,0.03637694,0.0015447364,-0.02872507,-0.0034378408,-0.0024981643,-0.024886912,0.016953902,0.01498593,-0.0083852755,-0.002070344,-0.0066801067,-0.0218555,-0.0019786684,0.026671533,0.005616668,0.01833515,0.028700624,-0.0026647085,0.009106458,-0.014154737,0.0064539732,0.025791446,0.019777516,-0.0114716925,-0.006343962,-0.016403848,-0.014118066,0.012253992,0.004883262,0.0065150904,0.033321083,-0.040190652,0.0011497667,-0.017809544,0.00062988885,0.04972493,0.004864927,-0.02975184,0.01697835,0.0037678736,-0.009491497,-0.028749516,-0.0028602835,0.023334535,-0.017968448,0.018530726,0.022332214,0.0035295165,-0.019850858,-0.02975184,0.036181364,0.0029687665,-0.009552614,-0.009344815,-0.0077679926,-0.010133226,0.00012681812,-0.0065578725,-0.0022842542,-0.001963389,-0.0035692428,-0.028456155,-0.013641353,0.006093382,-0.0066617713,-0.00041292288,-0.0292629,-0.0035753543,0.016660541,-0.0009106458,0.016733881,0.023371207,0.039995078,0.0226378,0.06082381,0.017944,0.010206567,-0.023407876,-0.024593549,0.024287963,-0.0055433274,0.013250203,-0.0003758706,0.030216329,0.019496378,-0.005919198,0.017222818,0.020278677,0.006936799,0.026842661,-0.005796964]},{"id":"course-schedule","name":"Course Schedule","description":"You are given an array `prerequisites` where `prerequisites[i] = [a, b]` indicates that you **must** take course `b` first if you want to take course `a`.\n\nThe pair `[0, 1]`, indicates that must take course `1` before taking course `0`.\n\nThere are a total of `numCourses` courses you are required to take, labeled from `0` to `numCourses - 1`. \n\nReturn `true` if it is possible to finish all courses, otherwise return `false`.\n\n**Example 1:**\n\n```java\nInput: numCourses = 2, prerequisites = [[0,1]]\n\nOutput: true\n```\nExplanation: First take course 1 (no prerequisites) and then take course 0.\n\n**Example 2:**\n\n```java\nInput: numCourses = 2, prerequisites = [[0,1],[1,0]]\n\nOutput: false\n```\n\nExplanation: In order to take course 1 you must take course 0, and to take course 0 you must take course 1. So it is impossible.\n\n**Constraints:**\n* `1 <= numCourses <= 1000`\n* `0 <= prerequisites.length <= 1000`\n* All `prerequisite` pairs are **unique**.\n","difficulty":"Medium","concepts":["Adjacency List"],"solutions":{"python":"class Solution:\n    def canFinish(self, numCourses: int, prerequisites: List[List[int]]) -> bool:\n        preMap = {i: [] for i in range(numCourses)}\n\n        for crs, pre in prerequisites:\n            preMap[crs].append(pre)\n\n        visiting = set()\n\n        def dfs(crs):\n            if crs in visiting:\n                return False\n            if preMap[crs] == []:\n                return True\n\n            visiting.add(crs)\n            for pre in preMap[crs]:\n                if not dfs(pre):\n                    return False\n            visiting.remove(crs)\n            preMap[crs] = []\n            return True\n\n        for c in range(numCourses):\n            if not dfs(c):\n                return False\n        return True\n","javascript":"class Solution {\n    /**\n     * @param {number} numCourses\n     * @param {number[][]} prerequisites\n     * @return {boolean}\n     */\n    canFinish(numCourses, prerequisites) {\n        const preMap = new Map();\n        const visiting = new Set();\n\n        for (let i = 0; i < numCourses; i++) {\n            preMap.set(i, []);\n        }\n\n        for (const pair of prerequisites) {\n            preMap.get(pair[0]).push(pair[1]);\n        }\n\n        for (let c = 0; c < numCourses; c++) {\n            if (!this.dfs(c, preMap, visiting)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @param {number} crs\n     * @param {Map} preMap\n     * @param {Set} visiting\n     * @return {boolean}\n     */\n    dfs(crs, preMap, visiting) {\n        if (visiting.has(crs)) {\n            return false;\n        }\n        if (preMap.get(crs).length === 0) {\n            return true;\n        }\n\n        visiting.add(crs);\n        for (const pre of preMap.get(crs)) {\n            if (!this.dfs(pre, preMap, visiting)) {\n                return false;\n            }\n        }\n        visiting.delete(crs);\n        preMap.set(crs, []);\n        return true;\n    }\n}\n","cpp":"class Solution {\npublic:\n    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {\n        vector<vector<int>> preMap(numCourses);\n        for (auto& pair : prerequisites) {\n            preMap[pair[0]].push_back(pair[1]);\n        }\n\n        vector<bool> visiting(numCourses, false);\n        for (int c = 0; c < numCourses; c++) {\n            if (!dfs(c, preMap, visiting)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\nprivate:\n    bool dfs(int crs, vector<vector<int>>& preMap, vector<bool>& visiting) {\n        if (visiting[crs]) {\n            return false;\n        }\n        if (preMap[crs].empty()) {\n            return true;\n        }\n\n        visiting[crs] = true;\n        for (int pre : preMap[crs]) {\n            if (!dfs(pre, preMap, visiting)) {\n                return false;\n            }\n        }\n        visiting[crs] = false;\n        preMap[crs].clear();\n        return true;\n    }\n};\n","java":"class Solution {\n\n    public boolean canFinish(int numCourses, int[][] prerequisites) {\n        HashMap<Integer, List<Integer>> preMap = new HashMap<>();\n        Set<Integer> visiting = new HashSet<>();\n\n        for (int i = 0; i < numCourses; i++) {\n            preMap.put(i, new ArrayList<>());\n        }\n\n        for (int[] pair : prerequisites) {\n            preMap.get(pair[0]).add(pair[1]);\n        }\n\n        for (int c = 0; c < numCourses; c++) {\n            if (!dfs(c, preMap, visiting)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    private boolean dfs(int crs, HashMap<Integer, List<Integer>> preMap, Set<Integer> visiting) {\n        if (visiting.contains(crs)) {\n            return false;\n        }\n        if (preMap.get(crs).isEmpty()) {\n            return true;\n        }\n\n        visiting.add(crs);\n        for (int pre : preMap.get(crs)) {\n            if (!dfs(pre, preMap, visiting)) {\n                return false;\n            }\n        }\n        visiting.remove(crs);\n        preMap.put(crs, new ArrayList<>());\n        return true;\n    }\n}\n","csharp":"public class Solution {\n\n    public bool CanFinish(int numCourses, int[][] prerequisites) {\n        Dictionary<int, List<int>> preMap = new Dictionary<int, List<int>>();\n        HashSet<int> visiting = new HashSet<int>();\n\n        for (int i = 0; i < numCourses; i++) {\n            preMap[i] = new List<int>();\n        }\n\n        foreach (var pair in prerequisites) {\n            preMap[pair[0]].Add(pair[1]);\n        }\n\n        for (int c = 0; c < numCourses; c++) {\n            if (!DFS(c, preMap, visiting)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    private bool DFS(int crs, Dictionary<int, List<int>> preMap, HashSet<int> visiting) {\n        if (visiting.Contains(crs)) {\n            return false;\n        }\n        if (preMap[crs].Count == 0) {\n            return true;\n        }\n\n        visiting.Add(crs);\n        foreach (var pre in preMap[crs]) {\n            if (!DFS(pre, preMap, visiting)) {\n                return false;\n            }\n        }\n        visiting.Remove(crs);\n        preMap[crs] = new List<int>();\n        return true;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def canFinish(self, numCourses: int, prerequisites: List[List[int]]) -> bool:\n        ","javascript":"class Solution {\n    /**\n     * @param {number} numCourses\n     * @param {number[][]} prerequisites\n     * @return {boolean}\n     */\n    canFinish(numCourses, prerequisites) {}\n}\n","cpp":"class Solution {\npublic:\n    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {\n        \n    }\n};\n","java":"class Solution {\n    public boolean canFinish(int numCourses, int[][] prerequisites) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public bool CanFinish(int numCourses, int[][] prerequisites) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/EgI5nU9etnU","embedding":[-0.01950046,0.01985131,0.036714736,-0.027592642,0.0077413316,0.006354909,0.007288622,0.025532814,-0.012098661,0.07302204,0.028565967,-0.056769766,-0.035130255,0.027728455,0.03275353,-0.017938612,-0.0320971,0.025962887,0.051065627,0.09140204,0.08375125,0.013287023,-0.02485375,-0.026076065,0.015641112,0.02005503,0.048213556,0.04966223,0.01970418,-0.014837553,0.044071265,-0.0031123776,-0.07021524,0.036827914,-0.028882863,-0.0027671866,-0.0031548191,0.072524056,0.0070226556,-0.046085823,-0.02725311,-0.0027997252,-0.032979883,-0.043822274,-0.038570847,0.03456437,0.017791482,0.007033973,0.0199079,0.06288134,-0.028316977,0.043075304,0.026460867,0.025532814,-0.034926534,-0.029810918,-0.061025236,0.003715047,0.0049373624,-0.052695382,0.0885047,0.006094601,0.039114095,0.017429315,-0.024604758,0.026438233,0.037778605,0.0022465708,-0.016580483,-0.025034834,-0.0966082,0.030263627,0.031780206,0.012992761,-0.011962848,0.029267667,0.031078504,0.035582963,-0.003415127,-0.01754249,0.022839192,0.02185455,0.05975765,-0.010797121,0.014882823,-0.030331533,-0.03544715,0.037484344,-0.024491582,-0.11200032,0.0066378526,0.033568405,-0.021062307,0.04739868,0.05265011,-0.017633034,0.033477865,-0.023167407,-0.030920057,0.022567566,-0.0056022797,-0.0036160168,0.010740532,0.0017910318,0.05450622,0.01790466,0.0059135174,0.06116105,-0.045180403,-0.02084727,-0.023223994,0.04404863,0.042509418,-0.0067623476,0.033885304,-0.025487542,-0.018945891,-0.07374637,-0.040970206,-0.036420476,0.021911137,-0.007775285,-0.0021871526,-0.053329173,-0.03374949,0.0036046992,-0.00095068984,-0.020122936,0.028860228,-0.007837532,0.010038832,-0.0064624273,0.013536013,-0.00031477454,-0.01664839,-0.024876384,-0.031236952,-0.003245361,-0.017712258,-0.029177124,0.030489981,0.021526335,0.014758328,0.021605559,0.040268507,-0.019036433,-0.01505259,0.028724415,-0.006139872,-0.011691222,0.035650868,-0.0036301638,-0.018991161,0.010644332,0.016512578,-0.02229594,-0.014894141,0.024740571,0.03780124,0.0013538842,-0.011487503,0.0025111227,-0.026890941,-0.0230995,0.0232919,0.0012279744,-0.0048864326,0.017270865,-0.05296701,-0.025329094,0.032232914,0.01935333,0.0036584584,-0.0018716707,0.029086582,0.022816557,-0.020688822,-0.029086582,0.007843192,-0.065235436,-0.033658948,0.01660312,-0.03680528,-0.038616117,0.014282984,-0.024966927,0.01519972,-0.04966223,-0.0073112575,0.010610378,0.009863407,-0.021537652,0.0035792342,0.043912817,0.006943431,-0.046719614,0.039114095,-0.0050363927,-0.013705779,-0.017021876,-0.06890238,0.025034834,0.0010985278,0.028928135,0.061025236,-0.013603919,0.041083384,-0.0048072087,-0.016886063,-0.04189826,0.026415598,-0.006575605,-0.019036433,0.009489922,-0.017972566,0.006609558,0.002990712,-0.008663727,-0.018187603,0.045089863,-0.0043629874,-0.01445275,0.02795481,0.047262866,0.036239393,-0.0018193261,0.04375437,0.02854333,0.032685623,-0.0050675166,-0.012291062,-0.005268406,-0.0063775443,-0.013796321,0.019138291,-0.05120144,0.007769626,0.0075659067,0.019081704,-0.032051828,-0.022228034,0.035673507,0.018425275,0.014430114,-0.0016976604,0.009173025,-0.045610476,0.0070509496,-0.04400336,-0.012924855,0.010955568,0.020122936,0.050884545,-0.091583125,-0.039476264,-0.008669386,-0.01059906,-0.026755128,0.036375206,-0.01595801,-0.04463715,0.021888502,-0.042192522,-0.03130486,0.012076025,-0.006535993,0.026030794,0.021254709,0.02154897,0.017508538,0.013015397,-0.010310458,0.017169006,-0.029878825,-0.0037263648,-0.011153629,0.047760848,0.027728455,0.00290017,-0.04644799,-0.020179523,0.02514801,0.040268507,0.015618476,0.021594241,0.004068726,-0.01660312,0.00030557887,-0.038412396,-0.015493982,0.0034858629,-0.012358968,-0.022341212,0.009195661,-0.0058059986,-0.027026754,-0.009863407,-0.0048156967,0.019432554,-0.022737332,-0.0020046541,0.009042871,0.009484263,0.06392258,-0.018323416,0.0014557438,0.064013116,-0.011295101,-0.021662148,-0.006932114,0.0074018,0.048032474,-0.043505378,0.02094913,0.015675064,-0.09715145,-0.039544173,-0.03148594,0.04029114,-0.0019042091,-0.0029510998,0.064103656,0.027026754,0.034428556,0.0069717257,0.010361387,-0.030535253,0.040472224,0.022827875,-0.01075185,-0.015007319,0.0032764848,0.0044167466,-0.009382403,-0.05839952,0.016025914,0.022522295,0.025215916,-0.023269266,-0.007181104,0.00329912,-0.031983923,-0.0076055187,0.029426115,-0.026279785,0.023586163,-0.03189338,0.0021560288,0.0483041,-0.016716296,-0.03540188,-0.014769646,0.009693641,0.0034943512,-0.06641248,-0.03503971,-0.04033641,0.019941851,-0.015765607,0.0006150482,0.001394911,0.037597522,-0.018119697,-0.0039017897,-0.031191682,0.04094757,-0.038774565,-0.051065627,-0.031236952,0.016127774,0.026528774,0.018289462,0.046855427,-0.02904131,-0.03010518,0.002269206,-0.042169888,0.013615237,0.016580483,-0.004026285,-0.011917576,-0.026958847,0.010152009,-0.028860228,0.00041698784,0.032278184,-0.018312098,-0.023020277,-0.0043035694,-0.019658908,0.04393545,-0.024831114,0.042328335,-0.01689738,0.012087342,0.009931314,0.014407478,0.061025236,-0.03329678,-0.022216717,-0.027524736,0.01950046,-0.008822176,0.024242591,-0.014339572,-0.013388882,0.035582963,0.0086920215,-0.009620076,-0.002089537,-0.015991962,-0.02070014,0.025962887,0.014294301,0.004034773,0.0015477005,-0.033568405,0.0020810487,-0.0011827034,-0.040789124,0.00580034,0.006105919,-0.012098661,-0.00995395,0.014464067,-0.011504479,0.01969286,-0.070622675,-0.024016237,-0.02270338,-0.02564599,0.023631433,0.01854977,0.053691342,-0.045791563,0.0035933813,-0.0044705058,-0.010440612,-0.024536852,-0.035582963,0.010123715,-0.055004198,0.0060493303,-0.004371476,-0.030806879,0.013626555,-0.005370266,0.0014437188,0.061568487,0.018855348,0.0027869926,0.011436572,0.030942691,0.023042912,-0.03850294,-0.009133413,0.024061508,0.02775109,0.022963688,0.019579684,-0.01609382,0.021379204,-0.049209516,-0.0027417217,0.021616876,0.008131794,-0.0014076434,0.019296741,0.05409878,-0.026483504,0.023721976,-0.019183563,0.031418037,-0.0655976,-0.0024318986,0.005234453,0.014565927,0.07859036,-0.032232914,0.02485375,-0.047036514,-0.040472224,0.027637912,0.051156167,0.005175035,0.056362327,-0.014724375,0.00994829,-0.022069586,0.044139173,0.0040630675,0.039566807,-0.019489143,-0.009642712,-0.044071265,0.013637872,0.02049642,-0.010474565,-0.000041933097,0.011493161,0.018515816,-0.035333972,0.004662907,-0.032821435,0.037371166,-0.008573186,-0.026823035,-0.042237792,-0.030580524,0.062473904,-0.032346092,-0.0027417217,0.021843232,0.023789883,-0.0038565188,-0.0051325937,-0.019160928,0.0014076434,-0.022839192,0.0024064337,0.01470174,-0.0289055,-0.017010558,0.04173981,0.0014713057,-0.0055117374,-0.03110114,-0.024514217,-0.017293502,-0.043867547,-0.011283783,-0.0030869127,-0.0075376127,0.028814957,-0.033613678,0.025917616,-0.018164966,-0.018923255,-0.026664587,-0.046719614,0.016976604,0.022827875,-0.015154449,0.010384023,-0.025532814,-0.00072928664,0.01834605,-0.011504479,-0.022941051,-0.06292661,-0.025464907,-0.017497221,0.0006801252,-0.0026780593,0.020156888,0.010027515,-0.029765647,-0.011917576,0.012223155,-0.018040473,-0.031327493,-0.016263587,0.020021075,0.021277344,-0.005769216,0.028294342,-0.0033132674,-0.013592602,0.034881264,0.018119697,-0.013275705,-0.013615237,-0.05686031,-0.01954573,0.045067225,-0.0063096383,0.020258749,0.01754249,-0.015324215,-0.014418797,-0.013105939,0.0041620973,0.012257108,0.001142384,-0.02365407,0.0046770545,-0.0042724456,0.05514001,0.021073624,-0.002564882,-0.0010659893,0.027660549,0.025193281,-0.008776905,-0.047670305,-0.02494429,-0.022216717,0.05686031,-0.033772126,0.0026681563,0.005958788,-0.00034554463,0.047172327,-0.026143972,-0.027615277,-0.01615041,0.014362208,0.015120496,0.021084944,0.022454388,-0.004821356,-0.0048524793,-0.0038112476,-0.00574941,0.02990146,-0.003981014,0.01495073,0.021311298,0.037982322,-0.021481063,0.049752768,0.035990402,0.011181924,0.03110114,0.048983164,-0.034383282,0.0003628749,0.042192522,-0.0040404317,0.0021659317,0.004130974,0.0019508948,0.0072093983,-0.034654908,0.0012428289,0.017678304,-0.005633403,0.016806839,0.010293481,-0.0020202158,0.013083303,-0.028792322,-0.028113257,-0.023065547,0.033658948,-0.0047958908,-0.011300759,0.03940836,0.017734893,-0.027932173,0.014565927,-0.010010538,0.02034929,-0.03343259,0.017259547,-0.012030754,-0.052695382,-0.037190083,0.0035962109,0.020915177,0.015063907,-0.017870706,0.013909498,-0.015584523,-0.03556033,-0.012460828,0.014158488,0.01255137,0.031667028,0.019364648,-0.021922456,0.009784183,-0.0063209557,-0.015765607,-0.015426075,-0.02249966,0.046221636,-0.030376805,-0.024672665,0.033817396,-0.03374949,0.015539252,0.0098803835,0.02919976,-0.015810877,-0.022261988,-0.024876384,0.020756729,-0.009784183,0.009704959,0.020564327,0.02295237,-0.021096261,0.031780206,0.00999922,0.004985463,0.014565927,-0.014916777,0.0067227352,-0.0073621874,-0.0036924116,-0.0025167817,0.013785003,-0.0002252937,-0.045067225,-0.024061508,0.016478624,0.013377564,0.027705818,0.020485103,0.0045865127,0.004662907,-0.033364687,0.026325054,-0.033591043,0.015256309,-0.023246631,-0.026189242,0.028203798,-0.032119736,0.02225067,0.026528774,0.004334693,0.0033189263,-0.017938612,0.0029482704,0.03589986,0.020688822,0.021266026,0.00031919553,0.008369466,-0.03180284,0.0020725604,0.049526416,0.009320156,-0.01689738,-0.0062587084,0.028226435,0.017961247,-0.028022716,-0.02365407,-0.017146371,0.04966223,-0.00017347968,0.008295901,0.025759168,-0.0067227352,0.05975765,-0.06772534,0.04730814,-0.054460946,0.0060889423,0.021933774,-0.022522295,0.018323416,-0.012223155,-0.012019436,0.0105707655,-0.035673507,-0.027275745,0.0075772246,0.030218355,-0.0032708258,-0.023076864,0.017519856,0.042328335,-0.008675045,0.004046091,0.023721976,0.031010598,-0.0013998626,-0.0053165066,-0.030218355,-0.008182723,0.011679904,-0.0010942837,-0.01675025,-0.031191682,0.0010348655,-0.016704978,0.015403439,0.020620916,0.024604758,0.018832713,-0.013660508,-0.017768847,-0.0028096281,0.01774621,0.011442232,-0.035650868,-0.021990363,0.019443871,-0.01364919,0.0062473905,0.018934574,-0.0018306439,-0.011442232,-0.045021955,0.017293502,-0.023586163,0.0028718757,0.021582924,0.041015476,-0.014928094,0.005424025,-0.002255059,-0.0023724805,0.008177064,0.006915137,0.01739536,0.032006558,0.025329094,0.0045186062,0.009144731,-0.005090152,0.002540832,-0.016082503,0.03515289,-0.013456789,-0.02385779,0.007305599,0.0008933938,-0.0021885673,0.012483464,-0.0019282594,0.00057048467,0.004275275,-0.0031123776,0.017610397,0.017361408,0.034134295,0.04465979,-0.006066307,0.009789842,0.0193986,0.006083283,0.005375925,0.008493961,0.016886063,0.028158529,-0.020088982,0.026958847,-0.01954573,0.015810877,-0.044274986,0.023167407,-0.026143972,-0.02270338,0.014871506,-0.023880424,0.0026158118,0.024174685,0.034315377,-0.018266827,0.022782603,0.00789978,-0.00063662266,0.010910298,-0.012325015,0.0268004,0.0010157669,-0.01280036,0.003695241,-0.017644351,0.02349562,-0.012981444,0.013343611,-0.020666188,-0.03191602,-0.0058625876,-0.0028294341,-0.0011593606,-0.01914961,-0.033477865,0.0072716456,-0.008369466,-0.0015759948,0.008375125,0.006920796,-0.016003279,0.026687222,-0.018787442,0.010293481,0.026981484,-0.024536852,-0.048439912,-0.010995181,0.024831114,0.0020414367,0.0030473005,-0.00043113503,-0.008742952,0.034405917,-0.05224267,-0.05124671,0.022171445,0.013479424,-0.017078465,0.047489222,0.0049062385,-0.009472946,-0.011532773,-0.0049515096,0.017338771,0.00574941,-0.011181924,-0.030987963,0.04640272,0.014045311,-0.025759168,-0.031734932,-0.0024828285,-0.035582963,0.0034886922,0.042735774,0.0033387323,0.009399381,0.0022494001,0.057358287,-0.0052316235,0.012540052,-0.00028771808,0.010763167,0.013388882,0.03089742,0.033342052,-0.011300759,-0.007956369,0.012981444,-0.020768046,0.026777765,0.010825415,0.006530334,-0.026166607,0.008471326,0.011261147,-0.008810858,-0.00050116354,0.022556249,-0.0040177964,-0.0049684863,0.016942652,-0.023812518,-0.037371166,-0.01160068,-0.060708337,-0.00022617789,-0.0062473905,-0.00056376477,0.005330654,0.027072025,-0.034519095,0.0148036,0.007984663,-0.013139892,0.011266806,-0.02754737,0.026189242,0.0011749226,-0.00409985,-0.03970262,-0.0040913615,0.0412871,0.022612838,-0.007265987,0.02584971,0.027909538,-0.02094913,-0.02800008,-0.038412396,0.01024821,0.012924855,-0.0034575686,-0.008590162,0.006168166,-0.014464067,-0.0015165767,0.04346011,-0.01610514,-0.016840791,-0.0047506196,0.0085958205,-0.010859368,0.04934533,-0.022080904,0.014780964,0.019613637,0.042215157,0.029992001,0.007973345,0.0075659067,-0.02279392,0.007962028,-0.033523135,0.02485375,-0.0010263772,-0.055321097,-0.048168287,0.014305619,-0.030784244,-0.004589342,-0.03189338,0.023631433,0.03743907,0.018640311,-0.053012278,0.03685055,0.02385779,-0.03680528,0.013717096,-0.03295725,0.0034264447,0.0062983204,-0.006835913,0.010423635,-0.017689623,0.029856188,-0.033975843,-0.014237712,-0.00905419,0.017995201,0.009410698,-0.025125375,0.020915177,-0.014792281,0.037122175,0.008160088,0.024378404,0.0035820636,-0.0010348655,0.016920015,-0.0029171465,-0.047579765,0.019919217,-0.021831913,-0.008505279,0.006711418,0.019726815,-0.0074470704,0.013660508,-0.037574884,0.03390794,-0.0015363827,0.014045311,0.008075205,0.004524265,-0.0135586485,0.015912738,-0.0016339982,-0.021254709,-0.009886043,0.015686383,-0.032323454,0.020620916,0.0016934163,-0.026619317,0.0068755248,0.009965267,0.019772086,-0.011476185,0.0071018795,-0.0394989,0.005143911,-0.032368727,0.027139932,0.0035565987,-0.021288663,-0.01160068,-0.04239624,-0.049616955,0.014531974,-0.0193986,-0.016920015,0.013739732,-0.0071018795,-0.03569614,-0.008324195,0.022986323,0.010044491,0.029765647,0.015414757,0.011634633,0.010287822,0.007424435,0.0076055187,-0.0033726855,-0.026664587,0.004841162,-0.01919488,0.002864802,0.0030444711,0.026008159,-0.028679144,-0.00020584134,-0.010882003,0.016580483,-0.00865241,0.026030794,-0.037325896,0.012460828,-0.017723575,0.012483464,0.009274885,-0.041830353,-0.0055230553,-0.014328254,-0.010140692,0.0027558687,-0.036307298,-0.01875349,-0.015041272,0.0067793243,0.008782564,0.021865867,-0.04984331,-0.019183563,0.03569614,-0.039725255,0.009076824,-0.002734648,0.021084944,-0.030286262,-0.004985463,0.034338012,-0.016478624,0.0074187764,-0.02800008,0.031712297,-0.0041988804,0.012936173,-0.014735693,-0.040834393,-0.023608798,-0.039634712,0.0005496176,-0.008233653,-0.001990507,-0.014294301,0.021922456,0.0044874824,0.0009386648,0.0013397371,0.0062077786,-0.017961247,0.002979394,-0.012064707,-0.005970106,0.061659027,0.041875623,0.0038310539,0.007639472,-0.016206998,0.008437373,-0.027275745,0.0075715655,0.013626555,-0.013920816,0.013988722,0.005760728,0.0037829534,-0.013264387,-0.023721976,0.028339611,0.0082902415,0.0052882126,-0.016863428,-0.0035792342,0.017406678,0.011210218,0.026506139,-0.00080426666,0.01010108,-0.0016622925,-0.0018363027,-0.0064114975,0.025985522,0.015765607,0.006190802,0.0026115677,0.015765607,0.0024078484,0.0031916017,0.017689623,-0.0017344431,0.01364919,0.013966086,-0.0057465807,-0.032685623,0.05590962,0.01435089,-0.0014684763,0.018425275,0.020258749,-0.023880424,0.024921656,-0.016942652,0.007837532,-0.006241732,-0.015392122,-0.00029284644,-0.003434933,-0.027796362,0.006943431,-0.008120476,-0.0126192765,0.018719535,0.017259547,-0.011057428,-0.01745195,0.0015250649,0.03130486,-0.0037376825,-0.015018636,-0.036126215,-0.06260972,-0.06582396,-0.013377564,0.017429315,-0.048032474,0.02144711,-0.008488302,0.026121335,0.03544715,0.022035632,0.020813318,-0.018651629,-0.019715497,0.026890941,-0.014113218,-0.0066435114,-0.014203759,0.012064707,0.00054820284,0.010542472,0.013411517,0.0011374325,0.0014543291,-0.022726014,0.037076905,0.00059630326,-0.0023272096,0.008329854,-0.020077664,-0.02904131,0.0040206257,-0.024219956,-0.029290302,0.033342052,-0.009235273,-0.014520655,0.0009613002,-0.06817804,0.041581362,-0.036307298,-0.0052033295,0.01530158,-0.034926534,-0.020043712,-0.009829454,-0.0069038193,-0.030965326,-0.012970126,-0.0134002,-0.022363847,0.022635473,0.00040319437,-0.017214278,0.028498061,-0.0002659668,-0.021582924,0.017089782,0.0089014,-0.016727615,-0.008873105,-0.006139872,0.012155249,0.0026186414,0.0020711457,0.03494917,-0.020326655,0.0056022797,0.02020216,0.03721272,0.022397801,0.019013798,0.004391282,-0.00230033,-0.0125060985,-0.00033723318,-0.011306419,0.019477824,-0.00048171115,0.0035792342,-0.004439382,-0.023008958,-0.004190392,0.059893463,-0.019930534,0.007962028,0.0051722056,-0.0080582285,-0.052831195,-0.014124535,0.0054919315,0.06442056,-0.024876384,-0.022884464,0.010333094,-0.00007966626,0.027026754,0.043573286,-0.0073678466,0.021594241,0.010621696,0.02510274,-0.0069717257,-0.022726014,0.0536008,0.010633013,0.032391362,-0.009772865,0.019308059,-0.03243663,0.018187603,-0.032662988,-0.020801999,0.017135054,-0.017915977,-0.016976604,-0.005656039,-0.016637072,-0.012574005,-0.002535173,-0.05649814,-0.002215447,-0.0054410016,0.017723575,0.01910434,0.017655669,0.01884403,-0.009008918,-0.022341212,-0.004190392,-0.008646751,-0.0052768947,-0.006439792,-0.013705779,0.024106778,-0.034405917,-0.029539293,0.006315297,-0.027886903,-0.02704939,0.0034490803,0.031689662,-0.010457588,-0.031644393,0.03254981,-0.017633034,-0.029154489,-0.030671066,0.019658908,0.0068755248,0.013954769,0.015856149,-0.028294342,0.010135033,0.0056588682,-0.027479464,0.0046713958,-0.0021418817,0.0038112476,-0.001714637,0.03445119,-0.04465979,-0.060572524,0.009263568,0.008324195,0.0076168366,-0.0049090683,-0.021809278,0.015505299,-0.039136734,0.02535173,0.006932114,0.00640018,-0.0008375125,0.019885262,-0.0019678713,-0.01960232,0.016342811,-0.008912717,-0.033070426,0.0070735854,0.009110778,0.005384413,-0.004863797,0.0005913517,-0.0041762446,0.008069546,-0.0068076183,0.016535213,-0.010055809,-0.03549242,-0.012234473,0.012358968,0.010525495,0.045384124,-0.0074018,-0.033342052,0.036963727,0.053827155,-0.032029193,-0.02465003,0.037303258,-0.01400004,0.018436592,0.0024234103,0.010412318,-0.016229633,0.0026964508,-0.056362327,0.0027827485,0.00031707346,0.037982322,0.0056616976,0.030218355,0.035537694,-0.038774565,-0.04099284,-0.0016637073,-0.023359807,0.011838352,0.021073624,0.04735341,0.01759908,0.011759128,0.04545203,0.01294749,0.040721215,0.0074697062,0.018979844,-0.015516616,0.02485375,-0.021594241,0.023563527,0.029358208,-0.024310498,0.008007298,0.029878825,-0.034292743,0.021831913,-0.021288663,-0.00044811162,0.013909498,0.0046968604,0.005540032,-0.009280544,0.016671026,0.01020294,-0.018708218,0.0009669591,-0.0034462507,-0.019466506,-0.015516616,-0.022635473,0.032391362,-0.010616037,0.006360568,0.0021475405,-0.020892542,-0.020858588,0.01629754,-0.011391302,-0.012936173,0.014747011,-0.017078465,0.04015533,-0.0016905869,-0.003930084,0.013015397,0.004620466,0.0015179914,0.050522376,0.014633833,0.027637912,-0.0038961307,-0.0153808035,-0.005760728,-0.00042017095,0.013185163,-0.015527935,0.025510177,0.024763208,-0.0031180363,-0.0077526495,0.06487326,-0.015709018,0.027524736,-0.0032170666,0.035537694,-0.018628994,-0.0012003874,0.013038033,-0.020179523,-0.013694461,-0.0001602167,-0.008375125,0.0313954,0.005636233,0.030535253,-0.021435793,-0.025668627,-0.008329854,-0.028588602,0.0089976005,-0.027796362,0.0047958908,-0.006190802,0.04739868,0.033274144,0.016501259,0.012494781,-0.0068642073,0.04289422,-0.0055683265,0.0335005,-0.033613678,-0.06233809,0.03603567,-0.017021876,0.007118856,-0.016025914,-0.019930534,0.014079264,-0.008114817]},{"id":"house-robber","name":"House Robber","description":"You are given an integer array `nums` where `nums[i]` represents the amount of money the `i`th house has. The houses are arranged in a straight line, i.e. the `i`th house is the neighbor of the `(i-1)`th and `(i+1)`th house.\n\nYou are planning to rob money from the houses, but you cannot rob **two adjacent houses** because the security system will automatically alert the police if two adjacent houses were *both* broken into.\n\nReturn the *maximum* amount of money you can rob **without** alerting the police.\n\n**Example 1:**\n\n```java\nInput: nums = [1,1,3,3]\n\nOutput: 4\n```\n\nExplanation: `nums[0] + nums[2] = 1 + 3 = 4`.\n\n**Example 2:**\n\n```java\nInput: nums = [2,9,8,3,6]\n\nOutput: 16\n```\n\nExplanation: `nums[0] + nums[2] + nums[4] = 2 + 8 + 6 = 16`.\n\n**Constraints:**\n* `1 <= nums.length <= 100`\n* `0 <= nums[i] <= 100`\n","difficulty":"Medium","concepts":["Tree Maze","1-Dimension DP"],"solutions":{"python":"class Solution:\n    def rob(self, nums: List[int]) -> int:\n        rob1, rob2 = 0, 0\n\n        for n in nums:\n            temp = max(n + rob1, rob2)\n            rob1 = rob2\n            rob2 = temp\n        return rob2\n","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {number}\n     */\n    rob(nums) {\n        let rob1 = 0;\n            let rob2 = 0;\n\n        for (const n of nums) {\n            const temp = Math.max(n + rob1, rob2);\n            rob1 = rob2;\n            rob2 = temp;\n        }\n        return rob2;\n    }\n}\n","cpp":"class Solution {\npublic:\n    int rob(vector<int>& nums) {\n        int rob1 = 0, rob2 = 0;\n\n        for (int n : nums) {\n            int temp = max(n + rob1, rob2);\n            rob1 = rob2;\n            rob2 = temp;\n        }\n        return rob2;\n    }\n};\n","java":"class Solution {\n    public int rob(int[] nums) {\n        int rob1 = 0, rob2 = 0;\n\n        for (int n : nums) {\n            int temp = Math.max(n + rob1, rob2);\n            rob1 = rob2;\n            rob2 = temp;\n        }\n        return rob2;\n    }\n}\n","csharp":"public class Solution {\n    public int Rob(int[] nums) {\n        int rob1 = 0, rob2 = 0;\n\n        foreach (int n in nums) {\n            int temp = Math.Max(n + rob1, rob2);\n            rob1 = rob2;\n            rob2 = temp;\n        }\n        return rob2;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def rob(self, nums: List[int]) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {number}\n     */\n    rob(nums) {}\n}\n","cpp":"class Solution {\npublic:\n    int rob(vector<int>& nums) {\n        \n    }\n};\n","java":"class Solution {\n    public int rob(int[] nums) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int Rob(int[] nums) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/73r3KWiEvyk","embedding":[-0.020115506,-0.019806528,0.031260006,-0.01692984,0.014639144,-0.003886192,-0.046708886,-0.013040984,-0.008923059,0.020072889,0.018133787,-0.037162542,-0.009258673,-0.032048434,0.047092445,-0.024654279,-0.0009688844,0.0154169155,0.014852232,0.029832317,-0.010734307,0.030556817,0.047007207,-0.004658636,0.04875453,0.008688662,0.0028713606,0.025272235,0.041701317,-0.009423816,0.006014408,-0.018836977,-0.022843031,0.025293544,-0.008081362,-0.017526487,0.016439738,-0.029363524,0.014255586,0.010846178,0.0058332835,-0.020531027,-0.016450392,-0.01668479,0.019039411,-0.00833174,0.026529454,-0.033454813,0.027062174,0.006520492,0.011879655,0.0198598,0.0128918225,0.03030111,-0.003819602,-0.0056468314,-0.017782193,0.03969829,0.01906072,0.0058812285,-0.0046612998,-0.03119608,0.0033827717,0.016141415,-0.0068720873,0.027190026,-0.021085056,0.015587386,0.0007697803,-0.03918688,-0.062349543,0.0107289795,0.04236189,-0.023801927,-0.0101749515,0.015981598,0.023738,0.05514717,0.014916158,-0.0154808415,0.033305652,-0.052036084,0.034243237,0.00909353,-0.012614808,-0.0002522096,-0.050928026,-0.020808041,-0.01356305,-0.07146971,-0.022097224,-0.027573586,0.022395547,0.047476,0.027339188,0.0062967497,0.020435138,0.040529333,0.02799976,0.044023976,0.0070691938,-0.004197833,0.020179432,0.010723652,0.015576731,0.059451547,0.023439677,0.0021601794,-0.04168001,-0.02589019,0.004738544,-0.014063806,-0.024931293,-0.036246266,0.015395607,-0.012252559,-0.007862946,-0.012849205,0.024760824,-0.032772932,0.011741147,-0.043896124,0.007926873,-0.062775716,-0.03460549,0.014766997,0.015384953,-0.05604214,0.05791731,-0.0038915193,0.008459593,-0.011560023,0.02286434,0.00973812,-0.057661608,-0.045472976,0.035521768,0.012146015,0.023567531,0.036118414,0.010409348,0.0021748291,-0.03989007,-0.012103397,0.022480782,-0.03187796,-0.015171864,0.01959344,-0.03773788,0.012902477,-0.0073248995,-0.024334647,-0.0061635696,0.04219142,0.0123697575,-0.027445732,-0.00035359286,-0.0047864886,0.008022763,-0.0056521585,0.00091761013,-0.017206855,-0.04854144,-0.01947624,0.012444338,0.02606066,-0.008971004,-0.017739573,-0.008400993,0.020424483,0.016748715,-0.0040113814,0.017622376,-0.045600828,0.00810267,-0.024313338,-0.04594177,-0.055530727,-0.04803003,0.015800474,-0.024100251,-0.019902417,-0.00056135363,-0.040358864,0.045345124,0.0051514017,0.024526427,-0.078757316,-0.02392978,-0.0004677947,0.06823077,0.030407654,0.026550762,0.004679945,0.0049010236,0.0068188156,0.03810013,0.05480623,-0.020360557,-0.04257498,-0.0053884625,-0.001164659,0.03637412,-0.0061635696,0.0059611364,-0.052249175,-0.0059611364,0.025911499,0.01533168,-0.017739573,0.017664993,0.00076511904,0.036544587,-0.025868881,-0.047007207,0.013754829,0.010142988,0.015608694,-0.01860258,0.031643566,0.02731788,0.018932868,-0.027083483,0.013946609,0.03030111,-0.008134633,0.00606768,0.011762457,0.03792966,0.007974817,-0.025059147,-0.012870514,0.0045947097,0.004679945,-0.004863733,0.011890309,-0.0051274295,-0.025762336,-0.014905504,0.015981598,0.01923119,0.0078150015,0.011826383,-0.008134633,0.0030444944,-0.008480902,-0.06183813,0.039378658,-0.036544587,-0.038505,-0.02094655,0.025400087,0.027616203,-0.04879715,0.00081905694,0.04125383,-0.0037956296,0.021841519,-0.01966802,-0.002229433,-0.0678046,0.0014396757,-0.061795514,-0.03319911,0.025826262,-0.040742423,-0.027424423,0.047262914,0.029278288,0.00796949,-0.028212849,-0.018112479,0.000015555006,0.009503724,-0.040294938,-0.006776198,0.040870275,0.008219869,-0.00251577,-0.07926873,-0.035031665,-0.0052925725,0.035223443,0.016077489,0.029938862,-0.006318059,-0.008875115,0.029491376,0.019529514,-0.038590234,-0.067080095,-0.036800295,-0.026806468,0.012028816,-0.024867367,-0.020264667,-0.015107938,0.012977058,0.020818695,-0.029150436,0.022310311,0.00015082634,-0.025336161,-0.01390399,-0.08348787,-0.04628271,-0.0045840554,0.033795755,-0.0198598,0.02589019,-0.006227496,0.047816943,0.004592046,0.00506883,0.032730315,-0.05178038,-0.0029779046,-0.0039234823,0.02271518,0.0060410444,0.038739394,-0.0055775777,0.0409342,0.050629705,0.010420002,0.04500418,0.008672681,0.035308678,0.013179491,-0.016983112,-0.024569044,-0.021575158,-0.0049889223,0.023333134,-0.06746365,0.032687698,0.028617715,-0.00006147089,-0.006195533,0.00766584,0.022033297,0.001610146,-0.015491496,0.0013005026,0.0018978148,0.023993706,0.023801927,-0.0088964235,0.0047412077,0.016034871,0.011293663,0.012529573,0.025272235,0.009279981,-0.028788187,0.017569104,-0.052717965,0.009194747,-0.049308557,0.013499124,-0.040763732,0.044237066,0.0054550525,-0.011016648,0.011037957,0.018741088,-0.010425329,-0.045899153,0.020893276,0.063542835,-0.01869847,0.03545784,-0.026849085,-0.0075965864,-0.014820269,0.013136874,-0.030748596,0.023311825,0.010824869,-0.012092743,-0.016066834,-0.015608694,-0.0062381504,-0.045132034,0.043001153,0.056894492,0.008837824,-0.014926813,-0.024718206,-0.02482475,-0.0017433261,-0.026508145,0.06456566,-0.002642291,0.01871978,0.0041685337,0.041701317,0.062349543,-0.032325447,0.0024078942,0.022843031,-0.010260186,0.04572868,0.004051335,-0.017792847,-0.03795097,-0.008353049,0.038867246,0.0443223,-0.034477636,0.0056947763,0.0018165751,0.013541741,-0.013040984,0.02499522,-0.003374781,-0.015832437,-0.02233162,-0.020456446,0.0029059874,-0.01010037,-0.008821842,0.016141415,-0.03260246,0.034797266,-0.013371271,-0.015843092,-0.044237066,0.021085056,0.014489982,0.016524972,-0.00020260006,-0.025464013,-0.001124705,-0.07884255,0.07112877,-0.022779105,0.10756681,-0.01622665,-0.048115265,-0.0132008,-0.0464958,0.030919066,-0.008715298,-0.0048743878,-0.017036384,-0.016343849,0.036757678,0.049351174,-0.0026502816,0.033263035,-0.042809375,0.05122635,0.008459593,-0.022075914,-0.0066909627,0.09853188,-0.0042804047,-0.032751624,0.0058279564,-0.05992034,-0.00031430478,0.008971004,-0.021372724,0.032346755,-0.024569044,0.005252619,0.010451965,0.026508145,-0.0064778747,0.023610149,0.019987652,-0.011922273,0.028319392,-0.012199287,-0.0058705737,0.03296471,0.031622257,0.018879594,-0.010244205,-0.011826383,-0.05016091,0.0012925118,-0.0009022944,-0.01736667,-0.006706944,0.012146015,0.030194568,0.0038036203,-0.0074101347,-0.024846058,0.006781525,-0.002607664,-0.0075752777,0.039059028,0.00049809314,0.041296452,0.009732793,-0.03920819,-0.025868881,0.020914584,-0.06507707,0.0010694353,0.0030604762,0.015725892,-0.011709184,-0.0040832986,-0.018400148,-0.029384833,0.09699765,-0.018005934,0.0050608395,0.0013850719,-0.01871978,0.005929173,0.012604154,-0.019891763,-0.038227983,0.012305831,-0.02957661,-0.021713665,0.0076924763,0.005689449,0.02908651,0.018570617,-0.03954913,-0.036587205,-0.020147469,-0.061369337,-0.014010535,0.0047438713,0.022118533,-0.022928266,0.03013064,-0.01879436,0.023162663,0.0317288,-0.004362976,-0.008400993,-0.044364918,0.010846178,0.012817242,-0.007585932,-0.027616203,-0.027871909,-0.015885709,0.016184032,0.02196937,0.005039531,0.00053538353,0.0070105945,-0.0145645635,0.014969431,-0.027424423,0.007026576,-0.032368064,0.002254737,0.049351174,0.0343924,-0.002988559,-0.046367943,-0.014191659,0.027360497,-0.012199287,0.012529573,0.0042564324,0.0029459414,0.010574491,0.024036324,-0.0032709006,0.000020986252,0.039122954,0.031664874,-0.040827658,0.00005514484,-0.009668867,-0.024249412,-0.010974031,-0.021617776,0.023993706,-0.002042981,-0.019007448,0.0030631397,-0.0076498585,-0.026721234,0.004951632,-0.016375812,0.00029715785,0.030237185,-0.024675587,0.013989226,0.020211395,0.03878201,0.015438224,-0.02269387,-0.028830804,-0.046581034,0.019199228,0.0244625,-0.004184515,0.00008049065,0.022374239,0.020765424,0.0011173801,-0.0039581093,-0.001576851,0.02463297,0.044023976,0.0031936562,0.020243358,-0.0046639633,-0.015907018,-0.0033587993,0.0017140264,-0.020381866,-0.0020110179,0.047561236,0.041424304,-0.005257946,0.003979418,-0.021511232,0.00939718,0.013158183,0.008912405,0.005311218,-0.018485382,-0.049010236,0.031686183,0.00026669292,0.014021189,-0.0542522,0.0013384589,-0.0067175985,-0.02216115,-0.0028500517,0.04785956,-0.028127613,-0.01533168,-0.028127613,-0.040657185,0.03258115,0.02392978,-0.017963316,-0.020104852,-0.0041818516,-0.016066834,-0.012252559,-0.015075974,0.008875115,-0.006531147,-0.0045600827,-0.0019524186,0.0041898424,-0.016461046,0.020403175,-0.014916158,0.015608694,-0.020861313,-0.030812522,-0.0022454145,-0.009647558,-0.018229676,0.033603974,0.010760943,0.03032242,-0.02746704,0.010073734,0.024931293,0.045345124,0.01951886,-0.017409287,0.007537987,-0.0011400207,-0.012050126,-0.0057906657,0.032346755,0.021756282,0.010878141,-0.030727286,0.0013810765,0.00956765,0.0051886924,0.0024052307,0.04148823,0.019199228,0.026806468,0.018389493,-0.00589721,-0.02693432,0.013232764,-0.00580132,-0.014543255,-0.0082731405,-0.004570737,0.012508265,-0.05020353,0.0032123013,0.04059326,-0.007958836,-0.055743817,0.011496097,-0.007127793,0.030066714,0.0010328108,-0.050928026,-0.016823296,0.0080121085,0.0075965864,-0.02012616,0.0017712938,0.03541522,0.023631457,0.00271554,-0.0013124888,-0.025783645,0.0416587,-0.008608755,-0.0074048075,0.010313458,-0.044407535,-0.018645199,0.026550762,-0.034520254,-0.0154169155,0.009807374,0.012529573,0.004344331,0.0030524854,0.019827837,0.015832437,0.00094291434,-0.01886894,-0.024164177,0.024718206,0.0077084578,-0.020712152,-0.010345422,0.012092743,-0.04896762,-0.017004421,-0.031622257,0.02552794,0.008214542,-0.015981598,0.017057693,0.014234277,-0.029342216,0.0068401243,-0.049010236,0.029384833,-0.055786435,0.0034653433,0.038547616,0.0093545625,0.0141064245,0.024078941,-0.018709125,-0.0058599194,0.01721751,0.02872426,-0.014575218,0.028852113,-0.032346755,-0.010025789,0.05105588,-0.010942068,0.009024276,0.027744055,-0.024377264,0.028809495,-0.02162843,-0.014521946,0.0001061278,-0.016461046,0.007985472,-0.0045600827,-0.036246266,-0.0060463715,-0.025186999,-0.005902537,-0.043022465,0.02090393,-0.007340881,0.014681762,0.013605667,-0.008507538,0.031984504,-0.0005367154,0.04221273,-0.042063568,0.008656699,-0.0058066472,-0.026337674,-0.02029663,0.051609907,0.023652766,-0.035692237,0.00019460925,0.01906072,-0.044023976,0.014649799,0.01710031,0.022544708,-0.0017992617,0.007420789,-0.011293663,0.014415402,-0.021319453,-0.0021801563,0.002269387,-0.016279921,0.035308678,-0.024185486,0.010318786,-0.003912828,0.018634545,-0.0075699505,-0.027978452,0.0022667234,-0.002335977,-0.022736488,-0.006808161,-0.020669535,0.0013284704,0.022587325,-0.021117019,-0.010643745,0.015907018,0.051311586,0.024334647,0.0010055089,-0.04308639,-0.048882384,0.033731826,0.01436213,0.047774326,0.037631337,0.007910891,-0.02170301,0.015544768,-0.0065844185,0.029874936,-0.0016607544,-0.038888555,-0.0149587765,0.023865854,0.0050741574,0.00023939103,0.027616203,-0.029683156,-0.03688553,-0.007548642,0.028639024,-0.024355955,0.0010174951,-0.0015302381,0.015182518,0.033390887,-0.036842912,-0.014798961,0.012114052,-0.013403234,0.00970083,-0.044066593,-0.034690723,0.02853248,-0.03296471,-0.0348825,0.01346716,-0.03417931,0.020978512,0.015129247,-0.030173259,0.0024305347,0.02429203,0.0110912295,-0.024760824,0.0055775777,-0.01886894,-0.001570192,0.028084995,0.0065790913,-0.052590113,0.045600828,-0.008587446,-0.05335723,0.01896483,0.009514378,-0.03758872,-0.0070052673,-0.0056468314,-0.040209703,0.0063979668,-0.019028757,-0.009775411,0.010457292,0.039762218,-0.021948062,0.05088541,-0.017654339,0.013520433,-0.030919066,0.0023346453,0.011283008,0.012945095,0.017526487,-0.0021175619,0.024313338,-0.004658636,-0.025101764,-0.006328713,0.029065201,0.03351874,0.02603935,-0.00026402934,0.010127006,-0.008981658,-0.000918276,0.020637572,0.003931473,0.011634604,-0.01695115,-0.014010535,-0.011474788,0.034285855,0.023120046,-0.008358376,-0.004352322,-0.005465707,0.013477814,0.04696459,-0.015384953,0.00023323145,-0.028575098,-0.043320786,-0.02889473,0.0009142806,-0.018123133,0.033966225,0.011932927,-0.031174771,-0.0132221095,-0.016535627,-0.021404687,0.0068720873,-0.042638905,0.041743934,-0.0450468,-0.0076924763,0.0061529153,0.047603853,-0.04487633,-0.014649799,-0.05233441,-0.025719719,-0.013435197,-0.018581271,0.023418369,0.03368921,0.0036970763,0.024782132,-0.051993467,0.011634604,0.00449882,-0.01770761,-0.02659338,0.01799528,0.015278408,-0.00044082577,-0.057832077,0.025932807,0.019348389,-0.031302623,0.01019626,-0.025762336,-0.017164236,-0.032900784,0.031302623,0.015928326,0.021841519,0.026721234,0.0037716574,-0.024313338,-0.0037583392,-0.008209215,0.0018392156,0.024015015,-0.00062860956,0.021639084,0.024867367,0.038718086,0.024803441,-0.0013650949,-0.024036324,0.006302077,-0.04325686,-0.036565896,0.017302744,-0.0068028336,-0.018059207,-0.0060463715,-0.041552156,-0.0020309947,-0.0032309466,0.0033987532,-0.029256979,0.03543653,-0.021212908,-0.02216115,0.010920759,-0.032218903,-0.016780678,0.0020176768,0.008337067,0.0114854425,-0.016844604,0.0632019,0.011805074,0.018900903,-0.024526427,-0.013957263,0.028383318,-0.022992194,-0.0014090443,-0.018389493,-0.023354443,0.006989286,0.03974091,-0.009722139,0.020136815,-0.01951886,-0.026081968,-0.010723652,-0.009706157,-0.034371093,0.042063568,-0.022800414,-0.03582009,-0.008736608,-0.029640539,0.0026169869,0.017494524,0.02855379,0.008821842,-0.021223564,0.0022041288,-0.014383439,-0.002640959,-0.045686062,0.033220418,-0.002495793,0.04168001,0.0020123497,-0.0119435815,0.007378171,0.007367517,0.013360617,0.015587386,0.0074793883,0.0016061506,0.014585872,-0.015534114,-0.018176405,0.0058066472,0.004837097,-0.010446638,-0.029214362,-0.02957661,-0.053058907,-0.022011988,-0.006951995,0.008145288,-0.027637511,0.03665113,-0.000605636,-0.03797228,-0.027211335,-0.031537022,0.026081968,-0.0060037537,0.014436711,-0.020989167,-0.012252559,-0.0055935597,0.023013502,0.037695263,0.004410921,-0.029107818,-0.019614749,0.0037823117,0.022416856,0.056425698,0.019550823,0.0043842853,0.0055775777,0.008171924,0.020808041,-0.015459533,-0.019028757,-0.015044011,0.035159517,-0.005843938,-0.014212968,-0.036992073,-0.0068188156,0.0017526486,-0.007335554,0.03281555,0.009040258,-0.023738,0.000004073435,-0.0022933595,-0.029938862,0.0021322116,-0.024036324,-0.049052853,-0.006568437,-0.0045174654,0.017494524,-0.014085116,0.0204671,-0.027424423,-0.013275381,0.010483929,-0.049393795,-0.01816575,0.003686422,0.015768511,-0.016865913,0.037460867,-0.021489922,-0.040486716,-0.024015015,-0.016652826,-0.011677221,0.017846119,0.012977058,-0.022970885,0.0066110548,0.018570617,0.0053138817,-0.041722625,-0.009999153,0.00007279119,0.013413888,0.02412156,0.022480782,0.040167086,0.016791333,0.016173378,0.023183972,-0.008736608,0.05233441,0.04059326,-0.014830924,0.037524793,-0.036267575,-0.0051807016,-0.03085514,-0.0025131064,-0.007415462,-0.004378958,-0.007292936,-0.011197774,0.0035559058,0.0026050005,-0.007031903,-0.013136874,0.047390766,-0.018229676,0.0015462197,0.005257946,0.007474061,-0.021884136,0.030002788,0.005377808,-0.00076312135,-0.0032389374,0.024973912,0.042297963,0.004139234,-0.0066376906,0.00996719,0.0078469645,0.0049862587,-0.009913919,0.012103397,-0.021159636,0.021276835,0.03160095,0.011187119,-0.0023919125,-0.017047038,-0.018890249,0.018133787,-0.01099534,0.007713785,-0.020552335,0.0016287912,0.0065897456,0.00509813,-0.018836977,-0.013232764,0.054507904,-0.032346755,0.0028500517,0.036288884,0.012955749,-0.007239664,-0.019817183,0.0110592665,-0.017036384,-0.012199287,-0.0656311,-0.004008718,-0.017260127,-0.0057001035,0.028681641,0.0005000908,-0.033944916,-0.0054870155,0.061113633,0.009791393,-0.010142988,0.010654399,-0.027680129,0.044450153,0.060346518,0.03351874,0.014426056,-0.05795993,-0.038547616,-0.059494164,-0.0011959563,0.05531764,-0.040763732,0.0027075491,-0.015406261,0.029363524,-0.02000896,-0.028511172,-0.00873128,-0.009136147,-0.014010535,0.047007207,-0.013637631,-0.024909984,-0.008017436,0.038973793,-0.016983112,0.00846492,-0.024611661,0.010750288,0.017579759,-0.003619832,0.028681641,-0.0044348934,0.03599056,0.028937347,-0.0028473882,-0.011709184,-0.0006276107,0.019945035,0.002714208,0.010984685,-0.010441311,-0.03279424,-0.0114854425,-0.021926753,-0.026806468,0.012923786,-0.025570558,0.013989226,-0.010643745,0.041275144,0.012199287,-0.00930129,0.05369817,0.014426056,0.0036118412,-0.00050342036,0.03726909,0.018197713,-0.009264,0.012710698,0.013424543,0.011826383,-0.023524914,0.009311945,-0.012678735,-0.008097343,-0.033263035,0.005662813,0.0035425876,0.0128278965,0.010414675,0.0010807556,0.0120075075,-0.008955022,0.028127613,-0.0036224956,0.009141474,-0.022395547,-0.040742423,-0.007213028,0.025080455,-0.012678735,0.0007950845,-0.019529514,0.00081040023,0.0058066472,0.018932868,-0.017057693,0.0048663965,-0.011591986,-0.0081399605,0.018219022,0.01152806,-0.0026982266,-0.0015209154,0.0055456148,0.043853506,-0.045643445,0.026891703,-0.027296571,-0.015544768,0.038611542,-0.0089603495,0.021841519,-0.072918706,-0.0011866337,0.009642231,-0.016546281,-0.058130402,-0.012998367,0.00886446,0.03170749,0.02957661,0.008299777,0.03155833,-0.00081705925,0.0073568625,0.0028127613,-0.03104692,-0.001996368,-0.008246505,0.04611224,0.017345361,-0.033731826,-0.074112,0.022757797,-0.02128749,-0.020349903,0.027680129,-0.0037876389,-0.0062168417,-0.004552092,0.019657366,-0.033944916,-0.007207701,0.026849085,-0.011709184,0.011826383,-0.013094257,0.02957661,-0.01845342,0.055061933,-0.014436711,0.012380412,-0.018272294,0.025059147,-0.0051194387,-0.037354324,0.0023040138,-0.010611782,-0.021425996,-0.012508265,0.029853625,0.00059331686,-0.007671167,0.031984504,0.021148982,-0.012614808,-0.0055189785,-0.0034706704,0.015757857,0.022182459,0.020456446,0.014191659,0.012199287,0.009503724,0.0054124347,-0.012582845,0.016450392,-0.009264,-0.026358983,0.004059326,0.006243478,0.022821723,0.004690599,-0.012188632,0.06592942,-0.013190146,0.016429083,-0.023716692,-0.024888676,-0.019113991,0.016823296,0.03509559,-0.009439797,-0.016375812,0.02358884,-0.0052339737,-0.039101645,-0.008667354,-0.0012339125,-0.024718206,-0.020403175,0.019156609,-0.01951886,-0.030833831,-0.008592773,-0.028447246,-0.0050528487,0.01668479,-0.051695146,0.0016727407,0.04327817,-0.0110592665,-0.061198868,-0.013232764,-0.013914645,0.027594894,-0.027616203,0.03688553,0.04717768,-0.008257159,0.0348825,-0.01816575,0.0132008,-0.01023355,0.011133847,-0.022459473,0.028425936,-0.020957204,-0.02659338,0.028979965,-0.005324536,0.046027005,0.032517225,-0.024249412,0.03722647,-0.0071384474,-0.0049276594,0.040870275,-0.030982992,0.005524306,-0.025634484,-0.013882682,0.032154977,0.012540228,0.020413829,-0.0232479,0.021745628,-0.022949576,-0.036395427,0.0012399057,0.033923607,0.014980085,-0.010020462,0.009775411,-0.037908353,-0.004738544,-0.021148982,-0.0443223,0.014639144,-0.01978522,0.017089656,0.015129247,0.011037957,-0.018059207,0.0043363404,0.066440836,0.040763732,0.0044375574,0.040145777,-0.027168717,0.005476361,-0.0043949396,0.0074314433,-0.02392978,-0.008736608,0.04641056,0.034243237,-0.018900903,0.029512685,0.021180945,0.00023472973,0.009040258,0.019263154,0.020584298,-0.0055136513,0.012295176,0.028937347,0.01162395,-0.024377264,-0.0028527153,-0.0363315,0.014969431,0.033561356,0.025762336,0.014862887,0.0024971247,-0.010084389,-0.0003033174,0.010265513,-0.025080455,0.029874936,0.002762153,-0.0011280345,0.011591986,-0.000018988552,0.049692117,-0.019976998,0.0013025003,0.010771598,-0.0020882622,-0.008976331,-0.017771538,0.027509658,-0.015012048,0.02020074,0.044279683,-0.036075793,0.035308678,0.017004421]},{"id":"house-robber-ii","name":"House Robber II","description":"You are given an integer array `nums` where `nums[i]` represents the amount of money the `i`th house has. The houses are arranged in a circle, i.e. the first house and the last house are neighbors.\n\nYou are planning to rob money from the houses, but you cannot rob **two adjacent houses** because the security system will automatically alert the police if two adjacent houses were *both* broken into.\n    \nReturn the *maximum* amount of money you can rob **without** alerting the police.\n\n**Example 1:**\n\n```java\nInput: nums = [3,4,3]\n\nOutput: 4\n```\n\nExplanation: You cannot rob `nums[0] + nums[2] = 6` because `nums[0]` and `nums[2]` are adjacent houses. The maximum you can rob is `nums[1] = 4`.\n\n**Example 2:**\n\n```java\nInput: nums = [2,9,8,3,6]\n\nOutput: 15\n```\n\nExplanation: You cannot rob `nums[0] + nums[2] + nums[4] = 16` because `nums[0]` and `nums[4]` are adjacent houses. The maximum you can rob is `nums[1] + nums[4] = 15`.\n\n\n**Constraints:**\n* `1 <= nums.length <= 100`\n* `0 <= nums[i] <= 100`\n","difficulty":"Medium","concepts":["Tree Maze","1-Dimension DP"],"solutions":{"python":"class Solution:\n    \n    def rob(self, nums: List[int]) -> int:\n        return max(nums[0], self.helper(nums[1:]), self.helper(nums[:-1]))\n\n    def helper(self, nums):\n        rob1, rob2 = 0, 0\n\n        for n in nums:\n            newRob = max(rob1 + n, rob2)\n            rob1 = rob2\n            rob2 = newRob\n        return rob2\n","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {number}\n     */\n    rob(nums) {\n        return Math.max(\n            nums[0],\n            Math.max(\n                this.helper(nums.slice(1)),\n                this.helper(nums.slice(0, -1)),\n            ),\n        );\n    }\n\n    /**\n     * @param {number[]} nums\n     * @return {number}\n     */\n    helper(nums) {\n        let rob1 = 0;\n            let rob2 = 0;\n        for (const n of nums) {\n            const newRob = Math.max(rob1 + n, rob2);\n            rob1 = rob2;\n            rob2 = newRob;\n        }\n        return rob2;\n    }\n}\n","cpp":"class Solution {\npublic:\n    int rob(vector<int>& nums) {\n        vector<int> nums1(nums.begin() + 1, nums.end());\n        vector<int> nums2(nums.begin(), nums.end() - 1);\n        return max(nums[0], max(helper(nums1), helper(nums2)));\n    }\n\nprivate:\n    int helper(vector<int>& nums) {\n        int rob1 = 0, rob2 = 0;\n        for (int n : nums) {\n            int newRob = max(rob1 + n, rob2);\n            rob1 = rob2;\n            rob2 = newRob;\n        }\n        return rob2;\n    }\n};\n","java":"class Solution {\n    \n    public int rob(int[] nums) {\n        return Math.max(nums[0], Math.max(helper(Arrays.copyOfRange(nums, 1, nums.length)), helper(Arrays.copyOfRange(nums, 0, nums.length - 1))));\n    }\n\n    private int helper(int[] nums) {\n        int rob1 = 0, rob2 = 0;\n\n        for (int n : nums) {\n            int newRob = Math.max(rob1 + n, rob2);\n            rob1 = rob2;\n            rob2 = newRob;\n        }\n        return rob2;\n    }\n}\n","csharp":"public class Solution {\n    \n    public int Rob(int[] nums) {\n        return Math.Max(nums[0], Math.Max(Helper(nums.Skip(1).ToArray()), Helper(nums.Take(nums.Length - 1).ToArray())));\n    }\n\n    private int Helper(int[] nums) {\n        int rob1 = 0, rob2 = 0;\n        foreach (int n in nums) {\n            int newRob = Math.Max(rob1 + n, rob2);\n            rob1 = rob2;\n            rob2 = newRob;\n        }\n        return rob2;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def rob(self, nums: List[int]) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {number}\n     */\n    rob(nums) {}\n}\n","cpp":"class Solution {\npublic:\n    int rob(vector<int>& nums) {\n        \n    }\n};\n","java":"class Solution {\n    public int rob(int[] nums) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int Rob(int[] nums) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/rWAJCfYYOvM","embedding":[-0.006930006,-0.010756622,0.04063013,-0.009941644,0.012143702,-0.0073347962,-0.05021556,-0.00948828,-0.0146480035,0.019807728,0.025539557,-0.02871311,-0.012651039,-0.036398724,0.04009041,-0.0076100538,0.014550854,0.009687976,0.019095298,0.030116383,-0.00097217085,0.033419468,0.052115373,-0.003877889,0.041105084,0.0047522355,0.0058991406,0.054921918,0.03665779,-0.013557769,0.008290101,-0.018059036,-0.011863048,0.020541748,-0.015662678,-0.020584924,0.014237816,-0.0281518,0.013072021,0.013600946,0.0018350484,-0.00487907,-0.0009559792,-0.023164786,0.016547818,0.0018552879,0.023726096,-0.029231241,0.027396193,0.010713444,0.0041855294,0.033311523,0.027396193,0.044213872,0.0066169687,-0.0041666394,-0.0033894423,0.03957228,0.030958345,0.009628607,-0.010869963,-0.010189916,0.0044499924,0.0146695925,0.0061582066,0.028734699,-0.012143702,0.0033246758,-0.008608536,-0.03391601,-0.06649352,0.006260753,0.039485924,-0.04645911,-0.0032140333,0.0029495703,0.025884977,0.05185631,0.029188063,-0.02096273,0.033829655,-0.049352005,0.035815828,-0.011744309,-0.0148099195,0.017281838,-0.04369574,0.00464699,-0.03609648,-0.068695575,-0.020584924,-0.030245915,0.02454647,0.03339788,0.015576323,-0.006044865,0.008192951,0.033289935,-0.013654918,0.06528454,0.026100865,-0.016947212,0.01959184,0.005532131,0.019073708,0.045638733,0.008527578,0.0072322497,-0.027180305,-0.017184688,-0.0073671797,-0.021297356,-0.028389277,-0.035276107,-0.0007117559,-0.012694217,-0.009601621,-0.0028632153,0.035146575,-0.017195484,0.009337158,-0.053108457,0.0038077254,-0.06433464,-0.047063593,0.024136283,0.028259745,-0.03808265,0.02780638,0.006557599,-0.009396527,0.0014518471,0.028734699,0.011215384,-0.036938444,-0.03557835,0.010502953,-0.0007090573,0.006287739,0.016116042,0.025496379,-0.013125993,-0.038363304,-0.0028227363,0.017173894,-0.034736387,-0.018350484,0.018231746,-0.03613966,0.024568059,-0.016774502,-0.016752912,-0.023510208,0.050345093,-0.0062715476,-0.030807223,-0.0027134428,-0.0023882615,0.005775005,-0.004992411,0.0039777374,-0.019818522,-0.079792224,-0.015673472,0.0033894423,0.0484021,-0.0010166977,-0.008047227,-0.008613933,0.0064604497,0.024697592,-0.012014169,0.014108283,-0.0254532,0.023510208,-0.026770117,-0.041860692,-0.042249292,-0.055742294,0.016590996,-0.01608366,-0.011269356,-0.002107607,-0.03285816,0.010923935,0.0145616485,0.027741613,-0.06649352,-0.02687806,0.0002786305,0.061009962,0.039162092,0.025129369,0.013072021,0.022711422,0.013838423,0.03352741,0.030245915,0.0072646327,-0.046329573,-0.0034811946,0.0148746865,0.021901842,-0.0076586283,0.010481365,-0.066536695,-0.017454548,0.040025644,0.011388094,-0.03717592,0.018836232,-0.014140666,0.05159724,-0.016245576,-0.0476249,0.0020873675,0.0151769295,0.018793054,-0.026791707,0.03430461,0.029101709,0.028302923,-0.033959188,0.002246585,0.019462308,-0.0056832526,-0.0020239505,0.007043347,0.030742457,0.009650196,-0.0158138,-0.019019736,0.008732672,-0.011841459,-0.01299646,0.0071350997,-0.029684607,-0.027115539,-0.0049762195,0.014205433,0.02366133,0.006336314,0.019116886,-0.006827459,0.0024773153,-0.017745998,-0.06973184,0.03844966,-0.024503293,-0.019408336,-0.011776693,0.016094454,0.031541243,-0.039313212,-0.005667061,0.055008274,0.00086557615,0.02113544,-0.016310342,0.0005306123,-0.065457255,0.007987858,-0.0484021,-0.019343568,0.036765736,-0.033462647,-0.0004884467,0.04624322,0.018728288,0.023164786,-0.024093106,-0.009747345,0.01255389,0.011981786,-0.03534087,-0.010448981,0.029576663,0.007755778,0.0038670946,-0.08570755,-0.031670775,-0.00649823,0.031109467,0.028367689,0.016763706,-0.0068058707,-0.001536853,0.019883288,0.03538405,-0.0451206,-0.056389958,-0.043652564,-0.028734699,0.016137632,-0.0279575,0.004431102,-0.025949743,0.009984822,0.03290134,-0.020023616,0.022366002,-0.00871648,-0.027892735,-0.02074684,-0.07007726,-0.07305651,0.0015975715,0.012057347,-0.024438526,0.037305456,-0.004506663,0.054792386,-0.010087369,0.011830665,0.014658798,-0.058937438,-0.0006810593,-0.004614607,0.006314725,0.013849218,0.027353015,0.006390286,0.039010968,0.030742457,0.0063255196,0.029296007,0.017745998,0.027547315,0.00065339863,-0.020012822,-0.02420105,-0.017983474,-0.0026999498,0.010745827,-0.07512904,0.023035254,0.013331086,0.002341036,0.015759828,0.013946367,0.02797909,0.004736044,-0.014302583,0.0008999833,0.00042907748,0.03136853,0.03665779,-0.0007589814,-0.0003552033,0.008284704,0.0007819195,0.0145940315,0.015338846,0.01779997,-0.024287404,0.018900998,-0.04546602,0.0025137465,-0.058980614,0.010060383,-0.04209817,0.036549848,0.0011111487,-0.02157801,0.0021494355,0.013471414,0.0005184686,-0.051554065,0.026446285,0.07176118,-0.027827969,0.050820045,-0.022948898,-0.009099681,-0.022517122,-0.00010102886,-0.035103396,0.0149286585,-0.007804353,-0.019365158,-0.0055699116,-0.018998148,-0.01687165,-0.027353015,0.063600615,0.046631817,-0.010940127,-0.009477485,-0.009779728,-0.027201893,-0.01606207,-0.018113008,0.060232766,-0.002529938,0.0147991255,0.011593188,0.027504137,0.058246594,-0.033138815,0.013870806,0.03579424,-0.008403442,0.04268107,0.018199362,-0.035103396,-0.043954805,-0.011776693,0.034045544,0.03231844,-0.03771564,0.016655762,0.0036539051,0.0148638915,-0.021243384,0.022517122,0.0036673981,-0.028454045,-0.0149070695,-0.026748529,-0.01191702,-0.016688146,-0.017864736,0.009876878,-0.018480016,0.04376051,-0.0033813466,0.0016393998,-0.053712945,0.008576153,0.015338846,0.01912768,-0.0018026652,-0.012597067,0.024848714,-0.08782326,0.05544005,-0.023423852,0.112693556,-0.0050436845,-0.0632552,0.009644798,-0.05487874,0.0147451535,-0.011884637,0.0038536016,-0.015662678,0.0054268856,0.041256204,0.0534107,0.01164716,0.044904713,-0.03717592,0.053842478,0.011204589,-0.019300392,-0.0023788165,0.08704606,0.01816698,-0.03633396,-0.00013366506,-0.03579424,0.009963233,-0.00082374783,-0.011614777,0.032620683,-0.024848714,-0.007113511,0.011863048,0.019926466,0.0036215219,0.03646349,0.0052244905,-0.009034915,0.035297696,-0.010799799,-0.012532301,0.024503293,0.039831344,0.036031716,-0.01633193,-0.0145400595,-0.043328732,-0.010718841,0.00050936086,-0.015608706,-0.00035486597,0.03398078,0.031195823,0.014291788,0.0019578347,-0.023315908,0.011852253,-0.009677182,-0.008101199,0.022074552,0.0169688,0.044861536,0.005410694,-0.040025644,-0.025841799,0.035513584,-0.06606174,-0.008835218,0.01753011,0.02437376,-0.01544679,0.0016528928,-0.012445946,-0.02510778,0.08277147,-0.023251142,0.020984318,0.0061636036,-0.0151661355,0.006881431,0.0058451686,-0.009067298,-0.043134432,0.0060232766,-0.02030427,-0.031023111,-0.0046982635,-0.0032194306,0.025561145,0.01633193,-0.01723866,-0.044127516,-0.0015112163,-0.065068655,-0.0047657285,-0.000504301,0.0036404121,-0.030504981,0.035837416,-0.012543095,0.021189412,0.038190596,-0.006741104,-0.0040694894,-0.06195987,0.011841459,-0.010411201,-0.0144860875,-0.033678535,-0.017098334,-0.002884804,0.01824254,0.024114694,0.010751225,0.0034272226,0.008586947,-0.0033597576,0.012413562,-0.023747684,0.017918708,-0.03303087,-0.0036404121,0.03197302,0.024848714,-0.0029549676,-0.050690513,0.0065360107,0.03214573,-0.012316413,0.00022887505,-0.0045849225,-0.0024058025,0.013967956,0.018307306,-0.0052109975,-0.00067026494,0.05112229,0.030958345,-0.042011812,0.009045709,-0.010519145,-0.031692363,-0.006665543,-0.0127266,0.0143781435,-0.008797438,-0.029922083,-0.0052325865,0.0005231912,-0.027093949,-0.0152740795,-0.025410023,0.010778211,0.031498067,-0.0035783444,0.016116042,0.026403109,0.058462482,0.01625637,-0.036010128,-0.025431613,-0.044516116,0.015878566,0.029101709,-0.018695904,-0.018749876,0.013374264,0.026057687,0.0027957503,-0.004147749,-0.002246585,0.02383404,0.038773492,0.0022034075,0.0150042195,0.005038287,-0.023251142,-0.004452691,-0.013924778,-0.018739082,-0.00050834886,0.034218255,0.03503863,-0.010967113,-0.00025872834,-0.015673472,-0.0042260084,0.010260079,0.017886324,-0.01895497,-0.016148426,-0.042551532,0.033138815,0.00861933,0.015759828,-0.038665548,0.0037915339,0.0029900493,-0.029727783,-0.008430428,0.040004056,-0.02616563,-0.031735543,-0.012445946,-0.03106629,0.028864231,0.023553386,-0.025172547,-0.018695904,0.007620848,0.006584585,-0.015943332,-0.01588936,0.0023828642,-0.008883793,-0.0071890717,0.0016191603,0.0034865919,-0.01660179,0.016839268,-0.00029870134,0.0145940315,-0.007140497,-0.022171702,-0.009839098,0.0029603648,-0.018404456,0.041860692,0.018803848,0.04477518,-0.047236305,0.002507,0.0154359955,0.06191669,0.018868616,-0.02454647,-0.004250296,0.007923091,-0.031865075,-0.0051570255,0.018199362,0.017109128,0.01949469,-0.028669933,-0.005086862,-0.0068112677,0.009531457,0.0010517796,0.023553386,0.010216902,0.009423513,0.0033597576,0.0030683088,-0.017994268,0.034628443,-0.008743466,-0.009180639,-0.008441223,-0.013482208,0.019742962,-0.041990224,0.007566876,0.04425705,-0.010438187,-0.07413595,0.016904034,-0.0030278298,0.018728288,0.013061226,-0.060189586,-0.031994607,-0.0032868956,-0.00065036275,-0.010249285,-0.0032680053,0.021103056,0.02726666,-0.008646316,-0.0032653066,-0.0187067,0.028194979,-0.00008947548,-0.0001615787,0.008344073,-0.04227088,-0.029749373,0.026014509,-0.04607051,-0.023337498,-0.0041126674,0.0026297863,0.011960197,-0.008505989,0.016288754,0.021254178,0.006471244,-0.016742118,-0.039896112,0.025690677,-0.0070001697,-0.023035254,-0.012942488,-0.0074319458,-0.06139856,-0.012942488,-0.03503863,0.023553386,0.0149394525,-0.023510208,0.02508619,0.017087538,-0.028022269,0.01380604,-0.05366977,0.03557835,-0.046977237,0.004080284,0.037132744,0.027396193,0.03827695,0.023402264,-0.018404456,-0.010038794,0.029490307,0.04317761,-0.007998652,0.018674316,-0.03270704,-0.014496882,0.034542087,-0.011625571,-0.01544679,0.019354364,-0.022819366,0.005559117,0.013309498,-0.025302079,0.008354867,-0.012705011,0.0015584418,-0.008657111,-0.034088723,-0.015230902,-0.025474789,-0.00036532304,-0.017594876,0.025194135,-0.0028794068,0.019278802,0.0150150135,0.0009377637,0.020973524,0.008846013,0.046156865,-0.04298331,0.017789176,-0.000055742967,-0.02471918,-0.0049087545,0.044213872,0.031541243,-0.03136853,-0.0036053304,0.0038347114,-0.036506668,0.005721033,0.008684097,0.023596562,-0.010891552,0.0075290957,-0.010130546,0.0033408676,-0.023013666,0.0049681235,0.014367349,-0.0005387081,0.032037787,-0.016590996,0.0016124138,0.0026797103,0.0029495703,-0.025237313,-0.042508356,-0.008031035,0.0060826456,-0.023488618,0.009169845,-0.020984318,-0.013449825,0.019883288,-0.011701132,-0.005775005,0.0061636036,0.053842478,0.016925622,0.016914828,-0.037283864,-0.044818357,0.029188063,0.01579221,0.037996296,0.028907409,0.014367349,-0.029274419,0.014421321,-0.0198617,0.018652728,-0.00083116896,-0.03825536,-0.0008689494,0.028367689,0.00993085,0.0041261604,0.030807223,-0.03322517,-0.02528049,-0.0038455059,0.024157872,-0.012143702,0.008387251,-0.007890708,0.01534964,0.031001523,-0.04369574,-0.0055375285,0.0052406825,-0.0060610566,0.016828474,-0.034887508,-0.034693208,0.028756287,-0.025496379,-0.03898938,0.021729132,-0.03771564,0.032599095,0.028540399,-0.0148854805,-0.0012568732,0.028389277,0.0023626247,-0.021815486,0.005694047,-0.020617308,0.010502953,0.031735543,-0.003864396,-0.049870137,0.045811445,-0.006471244,-0.037478164,0.02437376,0.006012482,-0.022970488,-0.0037294659,0.005005904,-0.042789012,0.009601621,-0.026511053,-0.0006594705,0.019354364,0.033354703,-0.018447634,0.043609384,-0.0072268522,-0.00016351833,-0.038190596,0.000116039824,0.012683422,0.008748863,0.020002028,-0.0026905048,0.026921239,0.0045309504,-0.023920394,-0.023013666,0.02363974,0.038946204,0.0150042195,0.0037105759,0.0024881097,-0.009105078,-0.0071620857,0.0256475,0.0147451535,0.010351832,-0.023035254,-0.006411875,-0.011442066,0.05470603,0.02616563,0.010492159,0.0016555914,-0.002242537,0.015187724,0.0645937,-0.019581046,-0.0031249796,-0.03052657,-0.042033404,-0.030612925,-0.006557599,-0.020628102,0.029878905,-0.00065609725,-0.023574974,-0.021362122,-0.014788331,-0.01939754,0.0073563852,-0.04749537,0.039270036,-0.04982696,0.0015166135,0.003006241,0.057728462,-0.039010968,-0.01743296,-0.035168163,-0.018426044,-0.012543095,-0.022074552,0.021448478,0.030461803,0.0024611237,0.027720025,-0.052244905,0.017033566,0.020692868,-0.012230057,-0.020077588,0.013061226,0.020142354,-0.0050895605,-0.054921918,0.017227866,0.011744309,-0.019548662,0.0077395863,-0.024676003,-0.024157872,-0.005221792,0.025323668,0.0060772486,0.02177231,0.028087035,-0.007064936,-0.0399177,-0.006930006,-0.0037105759,0.0013769609,0.010314051,0.007059539,0.021858664,0.021718338,0.034088723,0.029080119,-0.010400406,-0.022862544,0.0019106092,-0.03445573,-0.038341716,0.02346703,-0.0021534832,-0.014205433,-0.016148426,-0.029080119,0.00009504134,-0.00609344,-0.004039805,-0.036226016,0.040565364,-0.018404456,-0.02832451,0.0041369544,-0.0341319,-0.025777033,0.00018805872,0.019451512,-0.001644797,-0.013849218,0.05906697,0.011841459,0.0156195,-0.0283461,-0.012262441,0.02797909,-0.014032722,-0.018134596,-0.01155001,-0.030569747,0.006870637,0.045422845,-0.0073455907,0.015803006,-0.0075830678,-0.02510778,-0.021934226,0.0058721546,-0.01912768,0.042789012,-0.018933382,-0.026424697,-0.0029333788,-0.025539557,0.0030845003,-0.00072997145,0.032879747,0.008792041,-0.005990893,0.005518638,-0.030548159,-0.0074157543,-0.047193125,0.0318219,-0.0006054985,0.052460793,-0.010054986,-0.007836736,0.0013776356,-0.0008972847,0.002363974,0.014205433,0.0077611753,0.009326364,0.0040047234,-0.025884977,0.0034488116,-0.0062175756,-0.0061312206,-0.021286562,-0.023920394,-0.004776523,-0.05811706,-0.01841525,0.00081902527,0.0013519989,-0.034369376,0.034757975,0.013136787,-0.04317761,-0.039248448,-0.028389277,0.032793395,-0.011690337,-0.0023666727,-0.018210156,-0.014356555,-0.0038886834,0.0158138,0.032080963,0.006476641,-0.0314333,-0.026144043,0.004884467,0.022948898,0.054231077,0.025841799,-0.003208636,-0.01824254,-0.0039102724,0.029080119,-0.010022602,-0.0028092433,-0.019203242,0.02381245,-0.0027512233,-0.01816698,-0.037974708,-0.022128524,0.010314051,-0.008408839,0.032275263,0.0143241715,-0.021804692,-0.009596224,0.0010855121,-0.03303087,0.001671783,-0.021297356,-0.05366977,-0.0014140666,0.006746501,0.032469563,-0.022106936,0.009283186,-0.040025644,-0.005275764,0.010778211,-0.029792551,-0.014183844,-0.003397538,0.0021440382,-0.01289931,0.035966948,-0.022711422,-0.05505145,-0.027353015,-0.027374605,-0.025366845,0.020293476,0.016223986,-0.014788331,0.00020914154,0.014011134,0.013687302,-0.04389004,-0.0010504302,-0.009936247,0.030871991,0.02653264,0.017864736,0.045034245,0.008700288,0.008554564,0.02778479,0.0038940806,0.05056098,0.039226856,-0.015738238,0.042378824,-0.034283023,-0.0018674316,-0.031325355,0.0032868956,-0.0024206447,-0.0036754939,-0.008209143,-0.032879747,0.013212348,-0.01128015,-0.007744984,-0.007820545,0.03594536,-0.011463655,0.002368022,-0.0005387081,0.011037276,-0.015457584,0.020887168,-0.0150150135,-0.0012454041,0.009310172,0.020790018,0.031865075,0.018091418,-0.018253334,-0.0033381688,0.0010207456,0.008435825,-0.0031087878,0.017465344,-0.017983474,0.025669089,0.034822743,0.03352741,0.009132064,-0.0061312206,-0.023877218,0.013600946,-0.0151661355,0.0053756125,-0.026683763,0.006476641,-0.0006058358,-0.000020850906,-0.013287909,-0.013374264,0.05345388,-0.027093949,-0.002107607,0.031843487,0.02204217,-0.009844495,-0.01726025,-0.002830832,-0.01020071,-0.013568563,-0.0534107,0.0064874357,-0.008603139,-0.0027984488,0.014119078,-0.004215214,-0.039054148,-0.009558443,0.06308249,0.020638896,-0.005451173,0.0039345594,-0.02491348,0.030677691,0.063859686,0.023920394,0.0027471753,-0.03592377,-0.040932372,-0.05164042,0.008646316,0.06446417,-0.032620683,0.0148207145,-0.018631138,0.022862544,-0.03903256,-0.01770282,-0.015533145,-0.004393322,-0.011150617,0.052029017,-0.0074211517,-0.0151661355,-0.0040371064,0.04572509,-0.021146234,-0.001936246,-0.025388435,0.0012980269,0.016072866,0.0012723901,0.024783948,-0.015576323,0.040781252,0.028734699,-0.0026635188,0.005356722,-0.0072970157,0.0152524905,0.0049816165,0.015975716,-0.02346703,-0.034693208,-0.011004893,-0.006665543,-0.017843148,0.0057642106,-0.022128524,0.016223986,-0.004992411,0.024611237,0.0145076765,-0.012208469,0.0347148,0.012618656,-0.0029738578,0.0018323498,0.033160403,0.012575478,-0.011431272,0.0028362293,0.012510712,0.0034056338,-0.035362463,0.017098334,-0.038773492,-0.008203746,-0.043609384,0.015511556,-0.00018536013,0.010362626,0.009299378,-0.0042179124,0.008910779,-0.011906225,0.04063013,0.0142486105,-0.0014518471,-0.01633193,-0.029144887,0.0074697263,0.02633834,0.00024877724,-0.0064604497,-0.011236973,0.00942891,0.012607862,0.026597407,-0.008020241,-0.0046038125,0.0010517796,-0.004798112,0.021416094,0.00478192,-0.0054484745,0.0041234614,-0.0047252495,0.034542087,-0.04516378,0.016396698,-0.026381519,-0.008991737,0.031519655,-0.0086787,0.021783104,-0.059541922,-0.016223986,0.010270874,-0.020174738,-0.06049183,-0.016828474,-0.0040640924,0.035081808,0.030008439,0.0062661506,0.026964417,-0.010691855,0.0011023784,0.013946367,-0.029339185,-0.0018040144,0.0036188234,0.04464565,0.02851881,-0.038039472,-0.073790535,0.0073509878,-0.017098334,-0.031994607,0.022625066,-0.002395008,-0.0055078436,-0.001905212,0.02707236,-0.027374605,-0.009240008,0.033959188,-0.010022602,0.010319448,-0.004754934,0.037067976,-0.024978247,0.041320972,-0.022430768,-0.006795076,-0.016407492,0.026748529,-0.005796594,-0.034023955,0.009202228,-0.0148099195,-0.023315908,-0.028734699,0.031713955,-0.015695062,-0.0074103572,0.037996296,0.014183844,-0.009547649,-0.008036433,-0.00009622198,0.0074697263,0.018836232,0.006962389,0.025194135,0.00804183,0.006384889,0.0059531126,0.0042206114,0.020099176,-0.015230902,-0.018631138,0.0063633,0.013298703,0.034952275,0.022625066,-0.016936418,0.09300457,-0.025302079,0.008603139,-0.017281838,-0.028497221,-0.032771803,0.016742118,0.028367689,-0.019656606,-0.011420477,0.033635356,0.00088514097,-0.040889196,-0.0015975715,-0.0053054485,-0.027676847,-0.020455392,0.023574974,-0.01762726,-0.04335032,-0.01208973,-0.020930346,-0.0023653235,0.008797438,-0.03898938,0.0046712775,0.03322517,-0.011474449,-0.059196502,-0.021599598,-0.018005064,0.026597407,-0.020563336,0.025733855,0.032944515,-0.0010713445,0.029317597,-0.015803006,0.0071350997,-0.012338001,0.011614777,-0.016785296,0.026813295,-0.026489463,-0.026618997,0.019829316,0.004228707,0.038924616,0.031152645,-0.025172547,0.038169008,-0.0061636036,-0.0060880426,0.051726777,-0.021815486,0.009142859,-0.020217916,-0.006584585,0.021869458,0.024071516,0.01606207,-0.017864736,0.017594876,-0.030483391,-0.031454887,0.005491652,0.041040316,0.00476303,-0.017853942,0.012197674,-0.03557835,-0.006201384,-0.015403612,-0.050086025,0.006660146,-0.01669894,0.018847026,0.023682918,0.02633834,-0.011269356,0.013125993,0.07024997,0.04870434,0.0034083326,0.033829655,-0.02726666,0.0020145052,-0.003195143,0.0049681235,-0.008473606,0.0015489968,0.039507512,0.029036943,-0.0150366025,0.027137127,0.016612586,0.01787553,0.01037342,0.012327207,0.0010983305,0.0071620857,0.012715806,0.027720025,0.006773487,-0.025150957,-0.007221455,-0.029339185,0.021070674,0.02905853,0.0198617,0.021351328,0.0077395863,-0.024265816,0.016051276,0.0062391646,-0.031217411,0.03359218,0.0052595725,-0.009709565,0.0063794916,0.0061905896,0.04438658,-0.012348796,0.0022587287,0.02417946,0.022322824,-0.0036889869,-0.002817339,0.011388094,-0.013719685,0.0147127705,0.049956493,-0.040522184,0.0480135,0.0074211517]},{"id":"longest-palindromic-substring","name":"Longest Palindromic Substring","description":"Given a string `s`, return the longest substring of `s` that is a *palindrome*.\n\nA **palindrome** is a string that reads the same forward and backward.\n\nIf there are multiple palindromic substrings that have the same length, return any one of them.\n\n**Example 1:**\n\n```java\nInput: s = \"ababd\"\n\nOutput: \"bab\"\n```\n\nExplanation: Both \"aba\" and \"bab\" are valid answers.\n\n**Example 2:**\n\n```java\nInput: s = \"abbc\"\n\nOutput: \"bb\"\n```\n\n**Constraints:**\n* `1 <= s.length <= 1000`\n* `s` contains only digits and English letters.\n","difficulty":"Medium","concepts":["Two Pointers","Palindromes"],"solutions":{"python":"class Solution:\n    def longestPalindrome(self, s: str) -> str:\n        res = \"\"\n        resLen = 0\n\n        for i in range(len(s)):\n            # odd length\n            l, r = i, i\n            while l >= 0 and r < len(s) and s[l] == s[r]:\n                if (r - l + 1) > resLen:\n                    res = s[l : r + 1]\n                    resLen = r - l + 1\n                l -= 1\n                r += 1\n\n            # even length\n            l, r = i, i + 1\n            while l >= 0 and r < len(s) and s[l] == s[r]:\n                if (r - l + 1) > resLen:\n                    res = s[l : r + 1]\n                    resLen = r - l + 1\n                l -= 1\n                r += 1\n\n        return res\n","javascript":"class Solution {\n    /**\n     * @param {string} s\n     * @return {string}\n     */\n    longestPalindrome(s) {\n        let res = '';\n        let resLen = 0;\n\n        for (let i = 0; i < s.length; i++) {\n            // odd length\n            let l = i;\n                let r = i;\n            while (l >= 0 && r < s.length && s.charAt(l) === s.charAt(r)) {\n                if (r - l + 1 > resLen) {\n                    res = s.substring(l, r + 1);\n                    resLen = r - l + 1;\n                }\n                l--;\n                r++;\n            }\n\n            // even length\n            l = i;\n            r = i + 1;\n            while (l >= 0 && r < s.length && s.charAt(l) === s.charAt(r)) {\n                if (r - l + 1 > resLen) {\n                    res = s.substring(l, r + 1);\n                    resLen = r - l + 1;\n                }\n                l--;\n                r++;\n            }\n        }\n\n        return res;\n    }\n}\n","cpp":"class Solution {\npublic:\n    string longestPalindrome(string s) {\n        string res = \"\";\n        int resLen = 0;\n\n        for (int i = 0; i < s.size(); i++) {\n            // odd length\n            int l = i, r = i;\n            while (l >= 0 && r < s.size() && s[l] == s[r]) {\n                if (r - l + 1 > resLen) {\n                    res = s.substr(l, r - l + 1);\n                    resLen = r - l + 1;\n                }\n                l--;\n                r++;\n            }\n\n            // even length\n            l = i;\n            r = i + 1;\n            while (l >= 0 && r < s.size() && s[l] == s[r]) {\n                if (r - l + 1 > resLen) {\n                    res = s.substr(l, r - l + 1);\n                    resLen = r - l + 1;\n                }\n                l--;\n                r++;\n            }\n        }\n\n        return res;\n    }\n};\n","java":"class Solution {\n    public String longestPalindrome(String s) {\n        String res = \"\";\n        int resLen = 0;\n\n        for (int i = 0; i < s.length(); i++) {\n            // odd length\n            int l = i, r = i;\n            while (l >= 0 && r < s.length() && s.charAt(l) == s.charAt(r)) {\n                if (r - l + 1 > resLen) {\n                    res = s.substring(l, r + 1);\n                    resLen = r - l + 1;\n                }\n                l--;\n                r++;\n            }\n\n            // even length\n            l = i;\n            r = i + 1;\n            while (l >= 0 && r < s.length() && s.charAt(l) == s.charAt(r)) {\n                if (r - l + 1 > resLen) {\n                    res = s.substring(l, r + 1);\n                    resLen = r - l + 1;\n                }\n                l--;\n                r++;\n            }\n        }\n\n        return res;\n    }\n}\n","csharp":"public class Solution {\n    public string LongestPalindrome(string s) {\n        string res = \"\";\n        int resLen = 0;\n\n        for (int i = 0; i < s.Length; i++) {\n            // odd length\n            int l = i, r = i;\n            while (l >= 0 && r < s.Length && s[l] == s[r]) {\n                if (r - l + 1 > resLen) {\n                    res = s.Substring(l, r - l + 1);\n                    resLen = r - l + 1;\n                }\n                l--;\n                r++;\n            }\n\n            // even length\n            l = i;\n            r = i + 1;\n            while (l >= 0 && r < s.Length && s[l] == s[r]) {\n                if (r - l + 1 > resLen) {\n                    res = s.Substring(l, r - l + 1);\n                    resLen = r - l + 1;\n                }\n                l--;\n                r++;\n            }\n        }\n\n        return res;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def longestPalindrome(self, s: str) -> str:\n        ","javascript":"class Solution {\n    /**\n     * @param {string} s\n     * @return {string}\n     */\n    longestPalindrome(s) {}\n}\n","cpp":"class Solution {\npublic:\n    string longestPalindrome(string s) {\n        \n    }\n};\n","java":"class Solution {\n    public String longestPalindrome(String s) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public string LongestPalindrome(string s) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/XYQecbcd6_c","embedding":[0.0650526,0.000829831,0.013503031,-0.010476136,0.0021765428,0.039195728,-0.019587602,-0.030864071,0.008957557,0.07453345,0.0018392236,-0.06817184,-0.03269047,-0.0133286,0.020695755,0.057172406,0.0051867645,0.032834116,-0.023455873,0.047075916,0.025795303,0.0032167174,-0.0024317768,-0.009096077,0.042766437,0.00036681865,-0.0008875472,0.037779756,-0.0047686426,-0.012353837,-0.0003889432,-0.012015235,0.0061820485,-0.013544073,-0.027416488,0.042109754,0.013113125,-0.042561226,0.009188423,-0.010501787,-0.003937529,-0.019577343,-0.009337202,-0.018653883,0.023661086,0.0140058035,0.008500958,0.05548966,-0.012702699,0.01380059,-0.0047173393,0.031910658,-0.016940352,-0.0014159713,-0.021321654,-0.017720163,0.010948126,0.012035756,0.038846865,0.007731409,0.021383218,0.017566252,-0.008049489,-0.01629393,0.0093885055,0.027252318,-0.013420945,0.04962056,-0.029263407,-0.010650567,-0.020090375,0.0067104725,-0.027785871,-0.021526868,-0.046952788,0.013769808,0.050030988,0.039195728,0.07991003,0.00070990954,-0.031849094,-0.020213503,0.03827227,0.0053611957,-0.023948384,0.06772037,-0.04432606,0.021342177,-0.032772552,-0.026328858,0.018982224,-0.07317904,0.0058588376,-0.039913975,0.024789758,-0.018089546,0.049128048,0.014600921,0.024687152,0.017894594,0.016191324,0.010199098,0.047281127,0.037759233,-0.040427007,0.0016032284,0.06878748,0.011491941,-0.017771466,-0.01768938,-0.021752603,0.007367155,0.023558479,-0.016396537,0.055612788,-0.02126009,-0.0067463852,-0.023455873,0.03422957,0.008085402,-0.009208944,0.002775509,0.0076288017,-0.039524067,-0.036876816,-0.013810851,-0.0031936308,-0.05351961,0.05335544,0.0060999636,0.009121728,-0.041535158,0.010486396,-0.0015878374,-0.015596205,0.011963932,0.0026446856,-0.018027982,-0.0025189924,0.0700598,-0.014498315,-0.0032680207,-0.034373216,-0.0012056278,0.035419803,0.023702128,0.008070011,-0.007069596,-0.04670653,0.027211275,0.017443124,-0.023045447,0.020541845,0.08323449,0.0035476238,-0.031253975,0.012825827,-0.0294481,0.02030585,0.045146912,-0.0048455973,-0.036220137,-0.025774783,0.005448411,0.013431206,-0.025343833,0.01117386,-0.002397147,-0.014016064,-0.064683214,-0.014662486,-0.08725667,-0.034516867,-0.0087626055,0.03408592,-0.0130926045,0.011707415,-0.02433829,-0.031869616,0.00005475025,-0.02840151,-0.00434539,-0.0027524226,-0.071167946,0.008742084,-0.004232523,0.024769237,-0.033716533,-0.0013063105,0.010681349,0.008649738,0.058075346,0.022286158,0.008624086,-0.035727624,-0.014385448,0.03763611,-0.042848524,-0.02281971,-0.0027062495,-0.039400943,-0.014795874,-0.019146394,0.009701456,0.006715603,-0.021875732,-0.0030012436,-0.023004403,-0.005037985,-0.0030243301,-0.024912886,0.01333886,0.057008237,0.033901226,0.040714305,-0.014323884,0.035153028,-0.0029037672,0.05565383,-0.0067515154,-0.03010478,0.047075916,0.008039229,0.081469655,0.032936726,0.023189096,0.00018372998,0.012989998,0.013287557,-0.0019200263,0.011994714,0.012887391,0.025487484,-0.010429963,0.019905685,-0.033141937,-0.003270586,0.0031269367,-0.017843291,-0.0152576035,0.013451727,0.017566252,0.066612214,0.0055407574,-0.038559567,-0.013574855,-0.014529097,0.03642535,-0.017207129,-0.024687152,0.015237083,0.021403741,-0.0012299968,-0.066694304,0.0023509741,0.038333833,-0.007869927,-0.061153542,0.04432606,-0.033880703,-0.03566606,0.038703214,-0.026493028,-0.055900086,0.014405969,-0.014046846,-0.0007272244,0.027170232,0.0325263,-0.026287815,-0.008931906,-0.027375445,0.0090037305,0.0033783228,-0.023743171,0.0015301212,0.010978908,0.0025638829,-0.044900656,-0.0036861426,-0.0325263,0.0061769183,0.009034513,0.011225164,-0.03133606,0.021403741,0.017566252,-0.008562522,-0.036856297,-0.061810225,-0.049128048,0.019013006,0.014139192,0.038395397,-0.0056946673,0.0012287142,-0.020962533,0.024379332,-0.0020367412,-0.016786443,0.036815256,-0.010024667,0.026862413,0.04604985,-0.022470849,-0.0061820485,-0.017012177,-0.019013006,-0.023825256,-0.005781883,-0.03115137,-0.017422603,0.01938239,0.034024354,-0.028976109,-0.04896388,-0.02126009,-0.01038892,-0.00527398,-0.044736486,0.011666372,0.020726537,0.03537876,0.030145824,0.014795874,0.011563766,0.0014672746,0.02885298,0.029755918,-0.023579001,-0.008921646,-0.0063616103,0.0046121674,0.016417058,-0.09242804,0.033265065,-0.0052149813,0.031069284,0.030309994,0.039031558,-0.008146965,0.02123957,0.035748146,0.05364274,-0.028073171,-0.033593405,0.0119536705,0.018202415,-0.015390992,-0.008352179,-0.016755661,0.024194641,-0.0015673161,0.0031551535,0.00060602033,-0.0021547389,-0.01226149,0.032793075,-0.035132505,-0.027991084,0.010701871,-0.037759233,-0.050769754,-0.00045082782,-0.038498003,-0.0027344665,-0.0023522568,0.013708244,0.012579571,-0.002068806,-0.038210705,0.0020033943,0.014919003,0.029489141,-0.030843548,0.01921822,-0.025651654,0.018848836,-0.059470795,0.034660514,-0.026739284,0.03039208,-0.023743171,0.017863812,0.026739284,0.06094833,0.0109276045,0.0027344665,-0.059347667,-0.034332175,-0.02589791,-0.01937213,0.05532549,-0.0024202336,-0.0024535807,-0.029181322,0.016796703,0.042232882,-0.030946156,0.04358729,0.01363642,-0.014908741,0.016704358,-0.0035296676,-0.015862983,-0.028627247,-0.036856297,0.059306625,0.012959216,0.053971082,0.039031558,-0.001140216,0.022881275,-0.0043813027,0.021526868,-0.0017263563,0.0008779279,0.0015506425,0.03997554,-0.025364356,0.033285588,-0.051672693,0.004263305,0.0055253664,0.024297247,0.026308337,0.0023496915,-0.0101734465,0.0016468362,-0.008808778,0.03363445,0.02760118,0.06899269,-0.022265635,-0.041268382,0.048348237,-0.0076390626,0.06016852,-0.018243456,-0.05027724,-0.025200184,-0.025549047,0.020039072,0.031274498,0.036794733,-0.03472208,0.0064385654,0.06439591,-0.00096129574,0.021649996,0.074369274,-0.0027319011,0.03472208,-0.027498573,0.0070644654,0.019926205,-0.010188837,-0.0017943332,-0.0008625369,-0.0021598693,0.014857438,-0.01534995,-0.04001658,-0.019197699,0.040078145,0.026082601,-0.015113954,0.009593719,-0.018079286,0.0073415036,-0.015206301,-0.043792505,-0.026103124,-0.0003741935,-0.009655283,0.03039208,-0.011543244,0.06833601,-0.031725965,-0.021834688,-0.042725395,-0.012466704,0.017935637,0.028770896,-0.018038243,-0.046131935,0.034804165,-0.03375758,-0.022204071,-0.03673317,-0.010260662,-0.009162771,-0.010199098,-0.0055818,0.0133491205,-0.041104212,0.032813597,-0.029879047,-0.0079930555,0.00090293825,0.00883956,-0.010445354,0.04346416,-0.012579571,0.0406117,-0.013164429,-0.00395805,0.00043190972,0.024748717,0.03332663,0.002462559,-0.027806394,0.018325541,-0.012004974,0.016098978,-0.0067207334,-0.015432036,-0.024851322,-0.017237911,-0.003521972,0.017525211,-0.023045447,-0.007952013,0.007885318,-0.012507747,-0.011030211,-0.036055963,0.026164688,-0.029263407,-0.00542276,-0.006125615,0.0012210187,-0.021301134,0.00020922131,-0.00012400972,0.0026177512,-0.012046017,0.002990983,-0.009670674,-0.046747576,0.010619785,0.0018584623,0.026328858,0.0035245372,0.004963595,-0.010496657,0.049210135,0.020900968,-0.024420375,-0.026472507,-0.018356323,-0.008937037,-0.009398766,-0.018202415,-0.026431464,-0.02093175,-0.023394309,-0.028811937,0.004296652,0.053930037,-0.014364926,-0.033716533,0.050769754,0.0014429055,0.017186608,0.009506503,-0.0010972496,0.027395967,0.0049558994,0.015267865,0.013277296,-0.022039901,-0.0002688614,-0.031130848,0.024933407,-0.0091319885,-0.0412889,-0.0028293775,0.015411514,0.011820282,-0.00028874143,-0.0076339324,-0.028011607,0.011707415,-0.016324712,0.014826656,-0.030679379,-0.024317767,-0.006695082,0.007936622,-0.042602267,0.02154739,0.037266724,-0.0056382334,-0.02556957,-0.03864165,-0.02450246,-0.0034373216,0.0031295018,-0.015924547,0.00021290874,0.0030961547,0.015873244,0.03689734,-0.0109276045,-0.0502362,0.03706151,0.011132818,-0.0027652483,0.023332745,0.018233195,0.029201843,0.013174689,-0.03523511,0.028729852,0.003583536,0.026021037,0.032177433,0.024194641,-0.0063513494,0.017166087,-0.006530911,0.056844067,-0.0039606155,-0.007084987,-0.018325541,-0.045064826,0.027498573,-0.010876302,0.013256775,0.0029114627,0.022491371,0.0120973205,0.0223272,0.013318338,0.03367549,0.011912628,0.036343265,0.012907912,-0.041022126,0.016211845,-0.02727284,-0.005468933,-0.027970564,-0.0012101168,-0.00015198605,0.002317627,0.0020264806,0.006648909,-0.015709072,-0.014621443,0.038292788,0.05122122,-0.0013569725,0.02079836,0.03864165,0.0029832874,-0.009947712,-0.032033786,-0.01534995,0.017258434,-0.009429548,0.03336767,-0.027211275,0.008485567,-0.052780844,0.020275068,-0.011502202,0.06016852,-0.040406484,0.041186295,-0.00620257,0.0697725,-0.009178162,-0.052616674,-0.030494686,0.00542789,-0.020900968,-0.024584545,0.005597191,0.028914545,0.011102036,-0.026369901,0.0390726,-0.017186608,-0.0036066226,-0.020377673,0.04046805,-0.029201843,-0.013051562,0.0007432567,0.003424496,-0.05241146,-0.011553505,0.03617909,-0.037554022,0.024892366,0.0066899513,0.008829299,-0.08023837,0.033613928,-0.030679379,0.019443953,-0.008398351,-0.0092756385,-0.0071260296,0.01565777,-0.01955682,-0.032834116,0.008895993,-0.016324712,0.019567082,-0.010255531,-0.004481344,-0.038805824,-0.04354625,0.019341348,0.006064051,-0.009480852,-0.02341483,-0.00349119,0.002172695,-0.007546717,-0.00713116,0.00038028578,0.010948126,0.020449499,0.014200755,-0.0057921438,0.009255117,-0.008367569,-0.009742498,-0.004699383,0.005766492,0.0065565626,-0.035481367,-0.00028184755,-0.0006464217,-0.026164688,-0.023620043,-0.042602267,0.006233352,-0.036035445,-0.031725965,0.0025138622,0.0026959889,-0.028504118,0.03427061,-0.045967765,-0.0035604497,-0.02573374,0.003429626,0.02836047,-0.004491605,0.003488625,0.021362698,0.0524525,0.0136056375,-0.02294284,0.016170803,-0.0043787374,0.011604808,0.0050969836,-0.00013827845,0.030658858,0.041740373,-0.015647508,0.0076031503,-0.0033885834,-0.01628367,-0.00041587744,-0.010065709,0.014867699,0.019638907,-0.019331086,-0.010347878,-0.028237341,0.015288386,0.034681037,-0.031130848,-0.038354352,-0.012661656,0.014395708,0.012035756,0.022101466,0.0039811367,-0.010419702,-0.0035091464,0.04572151,-0.010486396,0.007890449,-0.008788257,-0.02774483,0.0129797375,0.018530754,-0.007382546,0.017997202,-0.0056690155,0.002793465,-0.0058383164,0.028155256,-0.0046737315,0.011963932,-0.015842462,-0.029981654,-0.024420375,0.003673317,0.0013723635,0.00898321,-0.01550386,-0.0068130796,0.032280043,-0.0468707,0.0021714126,0.010322225,0.025220707,-0.051262267,-0.00013803797,0.04481857,0.04884075,-0.018715447,0.019772295,-0.012538529,0.0076390626,-0.011122557,-0.03158232,0.0033244544,-0.021403741,-0.009742498,0.03646639,-0.025241228,0.00043158908,-0.04789677,0.014057106,0.024769237,0.022101466,0.010111882,-0.008285484,-0.0052329376,0.026164688,-0.018961703,0.012918173,-0.032649424,-0.043505207,0.026369901,0.008885733,0.0138621535,-0.042273927,0.015626987,-0.03289568,0.002179108,-0.015247343,-0.026759805,0.000631672,-0.012476965,-0.000009960057,-0.01256931,0.038354352,0.0069669895,-0.014026324,0.023455873,0.0028345077,-0.0056536244,-0.0316644,-0.024666632,0.030617815,0.0052072858,0.023661086,-0.05565383,0.021116441,0.016119499,0.020346893,0.004301782,-0.01581168,-0.0048173806,0.026903454,0.0069413376,-0.006284655,-0.0019995465,0.0067617763,0.006623257,-0.02495393,-0.043915633,0.03847748,0.010347878,-0.02343535,0.0130926045,0.050154116,-0.00821366,-0.014785614,0.0086189555,-0.04342312,0.015606467,0.012117841,0.008788257,0.023004403,-0.00084393943,-0.038539045,0.051508524,-0.018879617,0.029530184,0.008234181,0.013051562,0.009809192,0.008485567,0.020121157,-0.0036989686,-0.021670517,0.014477794,-0.00542276,-0.018664144,-0.033449758,-0.02325066,0.058116388,0.038354352,0.017340519,0.031705443,-0.024153598,0.030063739,0.011902368,0.030289473,-0.020900968,-0.04044753,-0.047199044,0.032321084,-0.017402083,-0.0009183292,0.03642535,0.018110069,0.0060589206,-0.005612582,-0.016827485,0.038805824,0.018859096,-0.020767579,0.0035014509,-0.02481028,0.006371871,0.03490677,0.02075732,-0.0037605325,0.009444939,-0.03661004,-0.034455303,-0.0032680207,-0.026308337,-0.011522723,-0.06472425,0.018705186,0.021978337,0.007613411,-0.042684354,-0.031541273,-0.023661086,-0.004078613,-0.022060422,-0.031746488,0.012825827,0.036794733,0.002960201,0.012364097,0.0041940454,0.013051562,0.00651552,-0.0064283046,0.007582629,0.005971705,-0.009598849,0.035481367,-0.027478052,-0.03673317,-0.0074492404,-0.016314453,0.023045447,-0.010660827,-0.003706664,0.03788236,0.03933938,-0.0026395551,-0.013215732,-0.002286845,-0.02343535,-0.001226149,0.011984453,-0.0021893687,0.013708244,-0.010050318,0.011060993,0.04354625,0.015462818,0.042684354,0.009896408,0.0071208994,0.023537958,-0.010276053,-0.016160542,0.020090375,-0.014662486,0.031705443,0.016119499,0.006997771,-0.008080271,0.024830801,0.01736104,-0.029222364,-0.040857956,-0.04592672,0.01442649,-0.036240656,0.038928952,-0.032710988,-0.013708244,-0.037615586,0.019484997,0.02173208,0.0005056582,0.0044300407,0.02277867,0.011758719,-0.02542592,0.002914028,0.019782556,-0.0048148157,-0.026903454,-0.011102036,-0.004355651,-0.020767579,0.05425838,-0.03230056,0.0116971545,-0.01721739,0.019013006,-0.013564595,0.047034875,-0.007238897,0.037779756,0.05335544,-0.008182878,-0.03230056,0.0048635537,-0.0025010363,0.04252018,0.03457843,-0.044982743,-0.03472208,0.0040863086,-0.013246514,-0.02277867,0.019300304,-0.013892936,-0.020818882,0.058116388,-0.028011607,-0.0012107581,-0.013626159,-0.010804477,0.03375758,-0.0042248275,0.004650645,0.029653313,-0.0070952475,0.0090191215,0.006715603,-0.0238663,0.020511063,-0.004994377,0.026718764,0.0031192412,-0.032813597,0.027252318,-0.0070593352,0.0037630976,-0.022429807,0.029140279,-0.0030987198,-0.019577343,-0.046255063,0.00023262844,-0.021834688,-0.00526885,0.034188524,-0.016642794,-0.011112297,-0.013513291,0.014919003,0.0023343004,-0.032834116,-0.013882675,-0.021752603,-0.030002175,0.014057106,0.020983053,-0.00071503985,0.014016064,-0.016519666,-0.011194382,0.008341918,-0.0074492404,-0.012507747,0.014683007,-0.00026773915,0.047855727,0.022388764,-0.025466962,-0.03562502,-0.0067669065,-0.052945014,-0.005474063,-0.0058690985,-0.03039208,0.049415346,0.03135658,-0.034311652,0.011245686,0.011984453,-0.016848007,0.0035296676,-0.015062652,-0.022409284,-0.009716847,0.009424418,0.0051611126,0.012743742,0.017443124,-0.007320982,-0.02372265,-0.009860496,0.045105867,-0.0033218893,-0.0043479553,-0.009306421,-0.030022696,-0.03689734,0.007736539,-0.0047840336,0.007716018,0.004809685,0.0033116285,-0.014939523,0.028935065,0.020100636,-0.006633518,-0.0052149813,-0.01939265,0.020788101,0.03523511,0.035009377,0.054832976,0.041781414,0.006843861,0.012805305,-0.02481028,0.025918432,0.011717675,0.0045582987,0.000075993026,-0.012897652,0.029242886,0.0011517593,-0.029755918,0.005212416,0.004755817,0.044736486,-0.015945068,0.017227652,0.005227807,0.005504845,-0.0057305796,-0.016560707,0.019659428,-0.012046017,-0.016088717,-0.010450484,-0.034475822,0.015709072,-0.02014168,-0.0031731096,0.008347048,0.027252318,0.019505518,-0.02450246,-0.018612841,-0.024297247,0.0067874277,0.0050277244,0.004247914,-0.027108667,-0.01504213,0.043956675,-0.015421774,0.026349379,0.011840804,-0.010019536,0.0019533734,-0.0048969006,0.03135658,-0.0038657044,-0.019587602,-0.0446544,-0.019013006,0.013574855,0.0028960719,-0.005797274,-0.012282012,-0.03490677,-0.01796642,-0.015083172,-0.028134733,0.03353184,0.004401824,0.012497486,0.039298333,-0.014128931,-0.039790846,0.036384307,-0.07387676,-0.015442296,-0.01719687,0.033593405,-0.04449023,-0.009809192,0.0016917266,0.024399854,-0.04789677,0.0012755285,-0.036630563,0.015565424,0.02776535,-0.017391821,-0.014713788,-0.0010247836,-0.007680105,-0.03115137,-0.0060281386,0.042232882,0.016622271,-0.027539616,-0.018089546,0.019156655,0.016355494,-0.020706015,0.019659428,-0.0053611957,0.028976109,0.047650512,0.010630045,0.025877388,0.05910141,-0.005130331,-0.015945068,-0.018325541,-0.007813494,0.002139348,-0.03488625,-0.0083778305,-0.026759805,-0.04572151,0.015780898,-0.0012511595,-0.014087888,-0.0031448929,0.011512462,-0.032772552,-0.00666943,0.02481028,-0.021998858,-0.03862113,0.009383375,0.006792558,-0.003132067,-0.0040298747,0.0067874277,0.029653313,-0.021629475,0.038415916,0.029550705,-0.023476394,0.022860754,-0.004725035,-0.003927268,0.017258434,0.01969021,0.006648909,-0.020285329,0.020408455,0.01333886,-0.004776338,-0.00007238576,0.00333215,-0.004155568,0.0038708346,-0.00084393943,0.015729595,0.010660827,0.023455873,0.011112297,-0.0031218063,-0.02154739,-0.045228995,-0.003085894,-0.03470156,-0.019895423,0.0182845,0.0050302893,0.031233454,0.011214904,0.015380732,-0.004681427,-0.019505518,0.008536871,0.0056946673,-0.019926205,-0.015185779,-0.0052637192,-0.023291701,-0.03597388,0.029879047,-0.018438408,-0.0031885006,-0.0046121674,-0.017299475,0.052698757,0.008854951,-0.017001916,0.009896408,-0.011861325,0.026554592,-0.026308337,0.008208529,0.009111468,-0.0533144,-0.011409855,0.00930129,0.0100297965,-0.013544073,-0.030884592,0.002775509,0.0127232205,-0.03353184,0.008824169,-0.040119186,-0.031869616,-0.016694097,-0.0038862256,-0.02961227,-0.009798932,-0.025815824,-0.0053714565,-0.02821682,-0.017422603,0.03221848,-0.036507435,-0.043053735,0.016909571,-0.018787272,0.0055151056,-0.031089805,0.019700471,-0.009075555,-0.009706586,-0.021136964,-0.00086189556,0.0015711638,-0.019915944,-0.011235424,0.0009997733,0.040857956,-0.03209535,-0.019731252,-0.014221277,-0.007854536,-0.048635535,-0.017699642,-0.04342312,-0.031869616,-0.041945584,-0.041617244,0.02868881,-0.028627247,-0.006094833,-0.036199614,0.039872933,-0.010558221,-0.001580142,0.011091775,0.017268693,0.011379073,0.008978079,0.03258786,0.025487484,-0.002038024,0.029591748,0.026390422,0.0008830582,0.039606154,-0.022204071,0.045023784,0.025159143,0.0043966933,0.02542592,0.023004403,0.027519094,0.032341607,0.02712919,-0.018674403,-0.02234772,0.0024369073,0.009850236,0.0104145715,0.030043218,-0.027170232,-0.0010459461,-0.015442296,-0.011871586,-0.04572151,-0.018489713,-0.013595377,-0.007721148,-0.019967247,-0.00054990733,0.024461418,0.0024959059,-0.035563454,-0.016191324,-0.002139348,0.02279919,-0.0049866815,0.032608382,-0.026082601,-0.049579516,-0.019895423,-0.020788101,-0.019043788,-0.009752759,0.029796962,0.03383966,0.004853293,0.014036586,-0.019433694,0.0014595791,-0.0066181268,0.0041196556,0.014806135,0.016406799,0.0042684353,-0.0076236716,-0.0045634294,-0.059183497,0.029324971,-0.0007868645,-0.008967819,-0.0030987198,0.007716018,-0.001292202,0.003083329,0.0016724878,-0.0005931945,0.00057812413,0.020880446,0.014600921,0.05442255,0.043053735,0.016612012,0.009747629,-0.0038015752,-0.008070011,0.049497433,-0.009711716,0.027190754,0.0008477872,0.042561226,-0.050646625,0.029489141,0.008198269,0.007957143,0.032977767,0.003847748,0.009999014,0.018530754,0.018048504,0.020911228,0.0001396412,0.013780069,0.06591449,0.00025523396,-0.008557392,-0.0099169295,0.0061615272,0.009373114,0.022450328,-0.0027780742,0.008311136,-0.0012223013,0.018212674,-0.036671605,0.009645022,-0.0037015337,0.020254547,0.045803595,-0.0032295433,0.008926775,0.014375187,0.007936622,0.002161152,-0.013872415,-0.06107146,0.032752033,-0.022552934,0.006607866,0.0468707,0.019156655,-0.026431464,-0.019618385,0.010660827,0.012795045,0.0055818,-0.0076852357,0.008978079,0.022039901,0.031890135,-0.0053355442,-0.0016263148,0.015442296,0.023476394,0.03488625,0.041576203,0.042848524,-0.028278384,-0.012004974,-0.02992009,-0.009552676,0.01905405,0.03225952,0.031992745,0.01255905,0.012887391]},{"id":"palindromic-substrings","name":"Palindromic Substrings","description":"Given a string `s`, return the number of substrings within `s` that are palindromes.\n\nA **palindrome** is a string that reads the same forward and backward.\n\n**Example 1:**\n\n```java\nInput: s = \"abc\"\n\nOutput: 3\n```\n\nExplanation: \"a\", \"b\", \"c\".\n\n**Example 2:**\n\n```java\nInput: s = \"aaa\"\n\nOutput: 6\n```\n\nExplanation: \"a\", \"a\", \"a\", \"aa\", \"aa\", \"aaa\". Note that different substrings are counted as different palindromes even if the string contents are the same.\n\n**Constraints:**\n* `1 <= s.length <= 1000`\n* `s` consists of lowercase English letters.\n","difficulty":"Medium","concepts":["Two Pointers","Palindromes"],"solutions":{"python":"class Solution:\n    \n    def countSubstrings(self, s: str) -> int:\n        res = 0\n\n        for i in range(len(s)):\n            res += self.countPali(s, i, i)\n            res += self.countPali(s, i, i + 1)\n        return res\n\n    def countPali(self, s, l, r):\n        res = 0\n        while l >= 0 and r < len(s) and s[l] == s[r]:\n            res += 1\n            l -= 1\n            r += 1\n        return res\n","javascript":"class Solution {\n    /**\n     * @param {string} s\n     * @return {number}\n     */\n    countSubstrings(s) {\n        let res = 0;\n        for (let i = 0; i < s.length; i++) {\n            res += this.countPali(s, i, i);\n            res += this.countPali(s, i, i + 1);\n        }\n        return res;\n    }\n\n    /**\n     * @param {string} s\n     * @param {number} l\n     * @param {number} r\n     * @return {number}\n     */\n    countPali(s, l, r) {\n        let res = 0;\n        while (l >= 0 && r < s.length && s.charAt(l) === s.charAt(r)) {\n            res++;\n            l--;\n            r++;\n        }\n        return res;\n    }\n}\n","cpp":"class Solution {\npublic:\n    int countSubstrings(string s) {\n        int res = 0;\n        for (int i = 0; i < s.size(); i++) {\n            res += countPali(s, i, i);\n            res += countPali(s, i, i + 1);\n        }\n        return res;\n    }\n\nprivate:\n    int countPali(string s, int l, int r) {\n        int res = 0;\n        while (l >= 0 && r < s.size() && s[l] == s[r]) {\n            res++;\n            l--;\n            r++;\n        }\n        return res;\n    }\n};\n","java":"class Solution {\n    \n    public int countSubstrings(String s) {\n        int res = 0;\n        for (int i = 0; i < s.length(); i++) {\n            res += countPali(s, i, i);\n            res += countPali(s, i, i + 1);\n        }\n        return res;\n    }\n\n    private int countPali(String s, int l, int r) {\n        int res = 0;\n        while (l >= 0 && r < s.length() && s.charAt(l) == s.charAt(r)) {\n            res++;\n            l--;\n            r++;\n        }\n        return res;\n    }\n}\n","csharp":"public class Solution {\n    \n    public int CountSubstrings(string s) {\n        int res = 0;\n        for (int i = 0; i < s.Length; i++) {\n            res += CountPali(s, i, i);\n            res += CountPali(s, i, i + 1);\n        }\n        return res;\n    }\n\n    private int CountPali(string s, int l, int r) {\n        int res = 0;\n        while (l >= 0 && r < s.Length && s[l] == s[r]) {\n            res++;\n            l--;\n            r++;\n        }\n        return res;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def countSubstrings(self, s: str) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {string} s\n     * @return {number}\n     */\n    countSubstrings(s) {}\n}\n","cpp":"class Solution {\npublic:\n    int countSubstrings(string s) {\n        \n    }\n};\n","java":"class Solution {\n    public int countSubstrings(String s) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int CountSubstrings(string s) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/4RACzI5-du8","embedding":[0.0089060785,0.01924233,0.02931855,-0.03659943,0.0032964407,0.019437354,0.00092229916,0.030055305,0.00955074,0.035645984,0.026609888,-0.06981845,-0.0073296377,0.006912504,0.035906013,0.003063496,-0.019827401,-0.001564252,0.024486298,0.06011061,0.03911307,-0.038094614,-0.0013428188,0.01695622,0.062624246,-0.0010963307,-0.015818583,0.0253314,0.0043311496,-0.015515212,0.034345824,-0.014561763,-0.010043716,-0.035017572,0.01632781,0.03204888,0.003567307,0.009155275,-0.0030689132,-0.023056125,-0.017292093,-0.045028787,-0.01173392,-0.025201384,-0.003989858,0.0022170392,-0.010953826,0.049319305,-0.024247935,-0.015406866,-0.033695746,0.018949794,-0.01758463,-0.0047618267,-0.040369887,-0.023186142,-0.013034078,0.062364217,0.016360315,-0.037076157,0.009572409,-0.019513195,0.011571401,-0.005040819,-0.03540762,0.033392377,-0.019274835,0.003494173,-0.047455747,-0.03445417,-0.036469415,0.034735873,0.007605921,0.0015141417,-0.05070614,0.0025502045,0.01634948,0.02217852,0.05282973,0.022947779,0.00977285,-0.027693354,0.07735936,-0.0031853856,0.0077142674,0.07558248,-0.058810454,0.028321762,-0.06505121,-0.050489448,-0.02348951,-0.0021655748,-0.0074867397,-0.038311306,0.012492346,-0.03692447,0.026848251,0.020347463,-0.03761789,0.007437984,-0.01618696,0.00056374015,0.049709354,-0.0026368818,-0.012925732,0.06409776,0.01637115,-0.027259968,-0.03267729,-0.017508786,-0.0028142992,0.02838677,0.025483085,-0.03178885,0.08186658,0.042818516,-0.033370707,-0.011078425,-0.007172535,-0.0034183306,-0.008380598,0.0021601573,0.061150737,-0.05135622,-0.034085795,0.04180006,-0.033197355,-0.037401196,0.03729285,-0.010525858,0.024204597,-0.03642608,0.016414488,0.0036594013,0.0029091022,-0.015851086,-0.014767622,0.014745953,-0.026198173,0.040218204,0.018570581,0.011473889,-0.015190173,0.04693568,0.00908485,-0.041084975,-0.014540094,0.014583432,-0.041063305,0.007719685,0.010282079,-0.035082582,-0.007253795,0.059763905,-0.01373833,-0.0443137,0.018743936,0.008721889,0.03087874,0.062060848,0.032200564,-0.036166046,0.0043555275,0.01828888,0.014215055,-0.019621542,-0.0042498894,0.023012787,-0.019935748,-0.052353006,-0.0017999054,-0.06383773,-0.00679874,-0.020715842,0.027259968,-0.03638274,-0.04368529,0.0012893227,-0.04028321,-0.011658078,-0.016111117,0.016479496,-0.011896441,-0.020412471,0.05738028,-0.026653226,0.03354406,-0.037487872,-0.0066578896,0.030076975,0.051832944,0.033435713,0.028343432,-0.0007313386,-0.0065495432,-0.016880378,0.026783243,0.010417512,-0.017627968,0.015786078,-0.03698948,-0.024031242,-0.028235085,0.04154003,0.0016441575,-0.030423684,-0.0054579526,0.0037623306,-0.007172535,0.005883212,0.013467464,-0.007123779,0.011300535,-0.03304567,0.013337448,-0.002854929,0.0253314,0.00892233,0.011896441,-0.026826581,-0.013326613,0.0040765353,-0.002960567,0.05278639,0.038441323,0.053913195,0.0035971021,0.029990299,0.027043274,-0.021745132,0.0061161574,-0.009382803,0.01191811,-0.010287495,0.00069341727,-0.041301668,0.0006714094,0.021929322,-0.0043690708,-0.0525697,0.03655609,-0.0050679054,0.048799243,0.0228611,0.029080188,-0.014020031,-0.0070425193,0.055386707,-0.041670047,0.009902866,0.009009007,0.00040697635,-0.017779652,-0.035082582,-0.037032817,0.042645164,-0.0048430865,-0.010325417,0.012015621,0.011203023,-0.062624246,0.010022047,-0.06799823,-0.051139526,-0.022341039,-0.029535243,0.00787137,0.05131288,0.0154177,-0.021170897,-0.012925732,-0.01649033,0.015406866,0.0018730393,0.006311181,-0.03538595,0.023706203,0.00045573225,0.015753575,0.003456252,-0.044465385,-0.023316156,0.016251968,0.034974236,0.016067779,0.019924913,0.044378705,-0.010000378,-0.009902866,-0.019448189,-0.016035276,0.016251968,0.017541291,0.037011147,-0.0531331,0.016176125,-0.023532849,0.024182929,0.029166864,-0.00028187007,0.006988346,-0.0181697,-0.003935685,0.008239748,-0.031182108,-0.010590865,-0.0060619838,-0.043273572,-0.03848466,0.016891211,0.03659943,0.010850897,-0.008293921,0.03053203,-0.02871181,-0.053739842,-0.017725479,-0.015201007,-0.00057660625,-0.0054823305,0.002248189,0.044378705,0.06106406,0.031008754,0.017541291,0.034670863,0.00023175983,-0.026414866,0.010428346,-0.002567811,0.006051149,0.013066582,-0.025288062,0.018505573,-0.02472466,-0.028928503,0.05222299,0.010997165,0.007459653,0.056253478,-0.007047937,0.011224693,0.04062992,0.04671899,-0.010146645,0.031333793,-0.0017660472,0.029470235,0.022796094,-0.00219537,0.060023934,-0.0011376378,0.004100913,-0.043901984,0.035797667,0.020824188,-0.03904806,0.012893228,-0.022211023,-0.021788472,-0.026479872,0.02213518,-0.03449751,0.0032666456,-0.04188674,-0.00013670274,0.00048552753,0.00507874,0.05282973,0.052006297,-0.009794519,0.0038354644,0.0071454486,0.010953826,0.017649638,0.0053279367,-0.06587464,0.030055305,-0.026371526,0.027758362,-0.007968881,0.055993445,0.0036377322,0.03477921,0.020119935,0.025504755,0.018375559,-0.005336063,0.013196598,-0.040889952,0.0076709287,-0.018808944,0.030943748,0.020184943,0.002982236,-0.0049135117,0.042905197,0.08390349,-0.03265562,0.052959744,0.024767999,-0.025743118,0.0021696377,-0.00062603934,-0.013315779,0.02288277,-0.05261304,0.032763965,0.010276661,0.054173227,0.030683715,0.0341508,0.021560945,-0.006522456,0.021669291,0.0059373854,-0.08485694,0.033349037,0.05954721,-0.032157227,0.036534425,-0.046155587,0.032113887,-0.017779652,0.018765606,0.031203778,-0.00063010235,-0.010222488,-0.0059482204,0.01637115,0.0037298265,0.054996658,0.036686108,0.0038815117,-0.0014085039,0.023576189,0.02110589,0.11545398,-0.01576441,-0.0424068,0.024291275,-0.047542423,-0.0077846926,0.016674519,0.008337259,-0.036166046,0.029426897,0.028126739,0.03659943,-0.00091891334,0.00028119292,-0.011181354,-0.019502362,0.006901669,-0.0015005984,-0.0076546767,-0.028256755,-0.041431684,0.036686108,-0.022124346,-0.007421732,0.019556535,-0.063491024,-0.0007354015,0.049145952,0.00900359,-0.04576554,-0.042926863,0.06808491,-0.015005983,0.005758614,-0.04823584,-0.03935143,0.04979603,-0.007855117,-0.002903685,-0.018353889,0.011506394,-0.052006297,-0.0366211,-0.03536428,-0.03636107,0.012459842,0.020986708,-0.027303306,-0.015450204,0.039611463,-0.00046250393,0.007947212,-0.008310173,-0.01373833,0.002294236,0.0140417,-0.007893039,-0.009799937,-0.024139589,0.019935748,-0.025483085,-0.03568932,-0.022817763,0.0015479999,-0.027931714,-0.020174108,-0.005447118,0.013944188,0.006468283,0.012514016,-0.026631558,-0.007865952,0.023706203,-0.014745953,-0.010807559,0.047455747,-0.010292913,-0.0072592124,-0.02446463,-0.06383773,-0.03291565,-0.030272,-0.014886802,0.019469857,-0.04940598,-0.009480314,0.005774866,0.016306141,-0.041084975,-0.011582236,-0.015341857,-0.02225436,-0.013987527,-0.017530456,-0.023662865,-0.005246677,0.025006361,-0.03692447,0.004038614,0.033154014,0.0021005669,-0.0006534645,-0.014778456,0.01620863,-0.012860724,-0.0019326298,-0.019469857,0.008846488,-0.0021195274,0.034605857,0.015081826,0.017855495,-0.011679747,0.019903243,0.013825008,0.04312189,-0.023879558,-0.021268409,-0.031398803,-0.003486047,0.001663118,-0.009074016,0.024009574,-0.015526047,-0.03482255,0.013944188,-0.013955023,0.010964661,0.015753575,-0.0022901732,-0.009745764,-0.008364346,0.03724951,0.03642608,-0.023034455,-0.026154833,-0.034410834,0.026826581,-0.04362028,-0.017432945,-0.024074582,-0.00063179526,-0.018852282,0.0050516534,0.023792882,-0.009518236,-0.011257197,-0.022991117,-0.0043636533,-0.00023802361,-0.010997165,-0.0176063,-0.002879307,-0.010645038,0.015731905,0.05217965,0.027715022,-0.016197795,-0.017302928,-0.018516408,-0.028581794,0.017736314,0.008212661,-0.007660094,0.029795274,0.031875525,-0.023901228,-0.007882205,-0.02411792,0.0253314,0.046328943,-0.00787137,0.045028787,-0.014225889,-0.016761197,-0.01677203,-0.020564158,0.03198387,-0.007118362,-0.0015222677,-0.0054958737,-0.0009548031,0.017151244,0.025981478,-0.015276849,0.009659086,0.014280062,0.014984314,0.024876345,-0.027866708,0.000031001477,0.009875779,0.02507137,-0.036881134,0.044378705,0.0140633695,-0.01637115,-0.009231118,0.013315779,0.0044503305,0.013651653,0.020444976,0.0124490075,0.052353006,-0.03293732,-0.005558173,-0.037141163,-0.016869543,0.0036864881,0.00435011,0.012806551,0.025851464,-0.020325795,0.017898833,0.04067326,0.045938894,0.0010780472,0.0030932913,0.013109921,-0.018743936,-0.016696189,-0.012676535,-0.01653367,0.028126739,-0.0057965354,0.043013543,-0.03150715,0.005365858,-0.027021606,0.0055012912,0.0030824565,0.039329764,-0.028625133,0.012286488,0.035906013,0.03941644,0.0016942676,-0.02290444,0.026349857,0.037552882,-0.0052548028,-0.042666834,0.020553323,-0.0017294802,0.034649197,0.0063057635,0.0065116216,-0.027823368,-0.028473448,-0.034215808,-0.0043013543,-0.02535307,-0.01987074,-0.010785889,-0.027086614,-0.02078085,-0.012839055,0.001667181,-0.030770393,0.015331023,0.01161474,0.023944566,-0.053046424,-0.007741354,0.0017782361,-0.0020951496,-0.015645228,-0.029665258,-0.0022671495,-0.002559685,0.008266835,-0.022666078,0.0039844406,-0.0010421574,0.042970203,-0.022817763,0.014995149,-0.036296062,0.0064520314,0.011354708,-0.018538078,0.016176125,-0.032525606,-0.035255935,0.017335432,-0.009052346,0.006560378,0.0003588976,-0.005877795,0.031312123,0.009566992,0.036859464,0.016154457,0.009940787,0.03200554,-0.034302488,-0.013239936,0.0002615551,-0.030748723,-0.025244724,0.02565644,-0.017292093,-0.01970822,-0.032807305,0.014464252,0.002830551,-0.005791118,-0.017985512,0.014160881,-0.028863495,0.03146381,-0.058203716,0.01800718,-0.047759116,0.0043555275,0.03324069,-0.022449385,0.02199433,0.0018852282,0.01891729,0.0064520314,0.008586456,0.009122771,0.00024225589,-0.014940976,0.024052912,-0.0062353383,0.033024,0.03638274,-0.020965038,0.008158488,-0.012004787,0.0029307716,-0.02346784,-0.016934551,0.024182929,-0.017736314,-0.009453228,-0.015634393,-0.0020220156,-0.021907652,0.012351495,0.030683715,-0.0002033189,0.013229102,0.021463431,-0.027541667,-0.005590677,0.022687746,-0.0041225827,-0.015060157,0.06076069,-0.021149227,0.01802885,-0.0040169447,-0.039524786,-0.013868346,0.009464063,-0.011105511,0.019123148,-0.031203778,-0.009453228,-0.010433763,0.018418897,-0.014767622,-0.015482708,0.0140525345,0.014301731,-0.03603603,0.009610331,0.044595398,-0.0052548028,0.0024120628,0.026783243,0.040781606,-0.030553699,0.038658015,0.005975307,0.020889197,-0.061280753,0.04340359,0.028126739,0.018754771,-0.008483527,0.022514394,-0.0184514,-0.004718488,0.0060836533,-0.0058886297,0.06015395,-0.0228611,0.019838236,0.027910046,0.0018432441,-0.0009507401,-0.008369763,0.027021606,0.042558488,0.05378318,0.015786078,0.011035087,-0.011647244,0.017649638,-0.017324599,0.014919306,-0.013911684,-0.02992529,-0.03272063,0.026458204,-0.0017904252,-0.054129887,0.028018393,-0.013239936,0.0025325983,0.007443401,0.018722268,-0.005528378,-0.013499968,0.040088188,0.016598677,0.021701794,-0.014832629,-0.024486298,0.053306453,-0.0103633385,-0.0054200315,-0.018386394,-0.022189353,0.021116724,-0.0013671968,0.03906973,-0.04273184,-0.017660473,0.0065495432,0.047195714,0.01709707,-0.03603603,0.0015913385,0.0070100157,-0.0019854486,0.02535307,-0.0029091022,-0.010645038,0.029708598,-0.007557165,-0.028191747,0.034714203,0.0006345039,-0.029188534,0.04186507,0.015916094,0.009610331,-0.0035456377,0.025136378,-0.04394532,0.010612535,0.022731086,0.00088573224,0.015916094,0.02840844,-0.007893039,0.042341795,-0.0057640313,0.023966236,-0.017313763,-0.032092217,0.012893228,0.0042634327,0.017086236,-0.03289398,-0.0071942043,0.0066795587,0.003616063,0.012405668,0.0010604409,0.01359748,0.037141163,0.025006361,-0.022427715,-0.00071170076,-0.011278866,0.046198927,0.027693354,0.0074867397,0.005883212,-0.0047862045,-0.035017572,0.017573794,0.02094337,0.004780787,0.025873132,0.020000756,0.0039546457,0.01161474,0.011213858,0.047845792,0.011582236,-0.01936151,0.013857511,-0.009312377,-0.0075192438,0.028235085,0.0073350547,0.0023443464,0.0016847873,-0.0079201255,-0.04028321,-0.009393637,-0.025461417,-0.010000378,-0.050489448,0.030770393,0.009193197,0.028321762,-0.03183219,-0.027736692,-0.015677731,-0.036794454,0.0003555118,-0.027498329,-0.0064953696,0.026198173,0.0059157163,0.017898833,-0.01805052,0.033717416,0.016880378,-0.022146014,0.012600692,-0.034649197,0.003334362,-0.008245165,-0.06353436,0.0076817633,-0.015645228,-0.021160062,0.03724951,0.004217386,-0.030358676,0.00025884644,0.049666014,0.0026815748,0.026176503,-0.0047455747,0.0019068975,-0.0127848815,0.04884258,-0.013359117,-0.00232674,-0.023316156,0.035472628,0.032200564,0.03854967,0.0058398736,0.015861921,0.0108129755,0.015201007,-0.028495116,-0.0052520945,0.004740157,0.031745512,-0.0022305825,0.0014897637,-0.016501164,-0.048799243,0.070121825,0.023966236,-0.046285603,-0.04368529,-0.0031366297,0.023359494,-0.019318173,0.04060825,-0.004382614,-0.023641195,-0.018364724,0.010439181,0.040369887,0.016197795,-0.02057499,-0.008900661,0.0075463303,-0.051096186,-0.019394014,-0.013380786,-0.019318173,0.010672126,-0.04554885,0.006749984,-0.011333039,0.017953007,-0.0228611,0.037206173,0.0052602203,-0.016295306,0.004704945,0.029838612,0.008207244,0.044053666,0.017346267,0.03306734,-0.027888376,0.016880378,-0.0021764094,0.007053354,0.011582236,-0.030943748,-0.0195457,0.021940157,-0.013835842,-0.017118739,-0.0076709287,0.015179338,-0.012351495,0.051399555,-0.024074582,-0.0019624252,0.0017403149,0.0108346455,0.034302488,0.012232315,0.004493669,0.027650015,0.008266835,0.010758802,-0.0046832752,0.010753386,0.016035276,-0.0037704564,0.0048105824,-0.030272,-0.048712566,0.015612723,0.002416126,0.00048518897,-0.02215685,-0.0017362519,-0.0209217,-0.009810771,-0.021701794,0.015060157,0.02199433,-0.037964597,-0.005151874,-0.021853479,-0.0046941102,-0.0228611,0.0026802204,-0.00058066926,-0.031268787,0.0034102045,-0.039243083,0.022536062,-0.0012256693,0.0150384875,0.0010022047,0.0118097635,-0.01998992,-0.0018459527,0.010883401,-0.006782488,-0.014561763,0.010282079,-0.0051302044,0.013283275,0.022102676,-0.013261606,-0.0167937,-0.043511935,-0.060327303,0.014897637,-0.020683337,-0.034909226,0.013196598,-0.009821606,-0.025851464,0.023056125,-0.022362707,-0.029448565,-0.0023538268,0.013662487,-0.04342526,-0.008521449,-0.01681537,0.008071811,0.035082582,0.012839055,-0.028863495,-0.04123666,-0.0103633385,0.025288062,-0.0023754959,-0.0016942676,-0.011278866,-0.023294488,-0.026696566,-0.0087273065,-0.017129574,0.030163651,0.037422866,-0.007844283,0.009751181,0.011831433,-0.023922896,0.0064520314,0.014020031,-0.016988724,0.010607118,-0.0002502126,0.050446108,0.053046424,0.032222234,0.008646047,-0.009355716,-0.014453417,0.0074650706,-0.014247558,-0.02351118,0.00084103935,-0.015493543,-0.010114142,-0.00202337,-0.01555855,0.02381455,-0.016111117,0.059157163,0.0101954015,0.04279685,0.056383494,0.007237543,-0.01987074,-0.0029768187,0.02745499,0.0002932126,-0.014854299,0.0040250705,0.006240756,0.05157291,-0.023684535,0.0020057636,0.03692447,0.026609888,-0.0043203146,0.007779275,0.009783684,-0.03272063,0.000946,0.007069606,-0.022774424,-0.015851086,-0.028365102,0.048149165,0.0056015113,0.048452534,0.0037921257,0.0020951496,-0.015190173,0.01828888,-0.0092202835,-0.00031285037,-0.023554519,-0.033414047,-0.0058507086,-0.0103416685,-0.028798487,0.006381606,-0.0017999054,-0.02838677,-0.020878362,-0.00732422,-0.04559219,0.007118362,0.02225436,0.0126657,0.018267212,-0.008673133,-0.044638738,-0.029448565,-0.06869165,-0.017454613,-0.01037959,0.0063924408,-0.008488945,0.033327367,0.021214236,0.0095344875,-0.016089449,0.0038598424,-0.019675715,-0.025028031,0.025093038,-0.022124346,-0.021853479,0.004165921,0.009697007,-0.010861732,0.004813291,0.025201384,-0.0000040418304,-0.0037325353,0.015623558,0.030315338,0.00074285036,0.0063436846,-0.0020558739,-0.034237478,0.022557732,0.048755903,-0.0010617953,-0.005238551,0.055473384,0.0053848187,0.00030997244,0.008136818,0.003150173,0.012037291,-0.04485543,-0.004328441,-0.013705826,-0.025266392,0.031398803,0.0027655433,0.006381606,0.014930141,-0.01327244,-0.0031528817,-0.030011967,0.026761573,-0.022211023,-0.02691326,0.03757455,-0.017660473,-0.026349857,0.006955842,0.018581416,0.028841825,0.005558173,0.042970203,0.03848466,-0.0040494488,0.023879558,-0.01770381,-0.01592693,0.03304567,0.055993445,-0.011701417,-0.037704565,0.014182551,0.034085795,-0.01315326,-0.0075192438,0.0026409447,-0.02409625,-0.0034237478,0.0047943303,0.030272,0.0046209763,0.012611527,-0.018971464,-0.0029280628,0.0038760942,-0.042016756,-0.010092472,0.005336063,0.012676535,0.016598677,-0.010607118,0.03148548,0.024833007,0.012839055,0.035320945,-0.0037487873,0.0311171,-0.017887998,0.0037704564,-0.004932472,-0.0005021181,-0.017822992,-0.032113887,0.006647055,-0.0035889763,-0.028473448,-0.010022047,-0.00483496,0.012871559,0.00080785825,-0.0011498267,0.021495936,-0.028516786,0.004742866,-0.023099463,-0.0033641574,-0.00461285,-0.053219777,-0.017996347,-0.02747666,-0.022969447,-0.0134241255,-0.010964661,0.024984691,0.0393731,-0.0064411964,0.006598299,-0.032265574,0.0019177322,-0.0143992435,-0.004401575,-0.03233058,0.049579337,-0.009176944,-0.037552882,-0.024074582,-0.0021073385,0.0058398736,-0.029383557,-0.016847873,0.015515212,-0.018397227,0.0009446456,-0.04671899,0.048712566,-0.004526173,-0.03722784,-0.014247558,-0.020954205,-0.019112315,-0.020650834,-0.0020734803,0.0097240945,0.022969447,-0.0006382283,-0.0018337637,0.006885417,0.010276661,-0.02899351,-0.032785635,-0.030943748,-0.05768365,-0.02843011,-0.02630652,0.025201384,-0.015504377,-0.0072267083,0.03519093,0.017877165,0.013651653,-0.021062551,0.005455244,0.019329008,0.016847873,0.02181014,0.0024811337,0.019469857,0.005942803,-0.0044503305,0.008369763,0.0038435904,-0.0016062361,-0.0026192756,-0.0024283149,0.042276785,-0.020542488,0.02155011,0.003616063,0.04888592,0.006078236,0.019881574,0.00685833,0.008499779,-0.020163275,-0.017367937,0.049709354,0.002535307,-0.011376377,0.0034210393,0.0073350547,-0.019610709,-0.036686108,-0.04884258,0.028235085,-0.017736314,-0.039806485,-0.009740346,0.00016192716,-0.021799305,-0.036859464,0.01371666,0.00580737,-0.0031122519,0.018928126,0.044638738,-0.026436534,-0.030488692,-0.037466202,-0.021723464,0.030272,-0.012329826,0.025136378,0.013608314,0.008721889,0.015991936,-0.014139212,0.04186507,0.015092661,-0.023966236,-0.007053354,0.0046399366,0.03207055,-0.009864944,-0.0150493225,-0.004783496,0.022492724,0.03417247,-0.012839055,0.0027222047,-0.013120756,0.03287231,0.038332976,-0.00091485033,0.013478299,0.001306929,-0.0134132905,-0.019654047,0.028885163,0.027910046,-0.0007049291,0.00924737,0.017519621,-0.029838612,0.050402768,0.0068637477,0.023359494,0.003334362,0.026674896,-0.06045732,-0.00022126376,-0.024052912,0.002294236,0.004964976,0.0047780788,-0.010271244,0.0013705826,0.01646866,0.035580974,-0.005165417,0.020748345,0.04702236,-0.005303559,0.037986267,-0.024377951,0.015591054,0.00082072435,0.0028332598,0.011928944,0.008060976,0.01420422,0.008261417,-0.0058398736,0.03445417,0.00305537,-0.012351495,0.032178897,0.017465448,0.01543937,0.009111936,0.028278423,0.012199811,-0.023034455,-0.027108282,-0.017747149,-0.009041511,-0.0032937322,0.038528,0.014940976,0.03185386,-0.026696566,-0.012210645,0.024161259,0.01315326,-0.032482266,0.019166488,0.029686928,0.042601824,0.027303306,0.012849889,0.020304125,-0.018223872,0.017248755,0.024334613,0.022362707,-0.02595981,-0.009317795,0.004022362,-0.018624755,0.0070316847,0.02090003,0.00032385433,0.004236346,0.030640377]},{"id":"decode-ways","name":"Decode Ways","description":"A string consisting of uppercase english characters can be encoded to a number using the following mapping:\n\n```java\n'A' -> \"1\"\n'B' -> \"2\"\n...\n'Z' -> \"26\"\n```\n\nTo **decode** a message, digits must be grouped and then mapped back into letters using the reverse of the mapping above. There may be multiple ways to decode a message. For example, `\"1012\"` can be mapped into:\n\n* `\"JAB\"` with the grouping `(10 1 2)`\n* `\"JL\"` with the grouping `(10 12)`\n\nThe grouping `(1 01 2)` is invalid because `01` cannot be mapped into a letter since it contains a leading zero.\n\nGiven a string `s` containing only digits, return the number of ways to **decode** it. You can assume that the answer fits in a **32-bit** integer.\n\n**Example 1:**\n\n```java\nInput: s = \"12\"\n\nOutput: 2\n\nExplanation: \"12\" could be decoded as \"AB\" (1 2) or \"L\" (12).\n```\n\n**Example 2:**\n\n```java\nInput: s = \"01\"\n\nOutput: 0\n```\n\nExplanation: \"01\" cannot be decoded because \"01\" cannot be mapped into a letter.\n\n**Constraints:**\n* `1 <= s.length <= 100`\n* `s` consists of digits\n","difficulty":"Medium","concepts":["Tree Maze","1-Dimension DP"],"solutions":{"python":"# Memoization solution \nclass Solution:\n    def numDecodings(self, s: str) -> int:\n        dp = {len(s): 1}\n\n        def dfs(i):\n            if i in dp:\n                return dp[i]\n            if s[i] == \"0\":\n                return 0\n\n            res = dfs(i + 1)\n            if i + 1 < len(s) and (\n                s[i] == \"1\" or s[i] == \"2\" and s[i + 1] in \"0123456\"\n            ):\n                res += dfs(i + 2)\n            dp[i] = res\n            return res\n\n        return dfs(0)\n\n# Dynamic Programming solution\n# class Solution:\n#     def numDecodings(self, s: str) -> int:\n#         dp = {len(s): 1}\n#         for i in range(len(s) - 1, -1, -1):\n#             if s[i] == \"0\":\n#                 dp[i] = 0\n#             else:\n#                 dp[i] = dp[i + 1]\n\n#             if i + 1 < len(s) and (\n#                 s[i] == \"1\" or s[i] == \"2\" and s[i + 1] in \"0123456\"\n#             ):\n#                 dp[i] += dp[i + 2]\n#         return dp[0]\n","javascript":"// Memoization solution\nclass Solution {\n    /**\n     * @param {string} s\n     * @return {number}\n     */\n    numDecodings(s) {\n        const dp = new Map();\n        dp.set(s.length, 1);\n\n        return this.dfs(s, 0, dp);\n    }\n\n    /**\n     * @param {string} s\n     * @param {number} i\n     * @param {Map} dp\n     * @return {number}\n     */\n    dfs(s, i, dp) {\n        if (dp.has(i)) {\n            return dp.get(i);\n        }\n        if (s.charAt(i) === '0') {\n            return 0;\n        }\n\n        let res = this.dfs(s, i + 1, dp);\n        if (\n            i + 1 < s.length &&\n            (s.charAt(i) === '1' ||\n                (s.charAt(i) === '2' && s.charAt(i + 1) <= '6'))\n        ) {\n            res += this.dfs(s, i + 2, dp);\n        }\n        dp.set(i, res);\n        return res;\n    }\n}\n\n// Dynamic Programming solution\n// class Solution {\n//     /**\n//      * @param {string} s\n//      * @return {number}\n//      */\n//     numDecodings(s) {\n//         let dp = new Array(s.length + 1).fill(0);\n//         dp[s.length] = 1;\n//         for (let i = s.length - 1; i >= 0; i--) {\n//             if (s.charAt(i) === '0') {\n//                 dp[i] = 0;\n//             } else {\n//                 dp[i] = dp[i + 1];\n//                 if (\n//                     i + 1 < s.length &&\n//                     (s.charAt(i) === '1' ||\n//                         (s.charAt(i) === '2' && s.charAt(i + 1) <= '6'))\n//                 ) {\n//                     dp[i] += dp[i + 2];\n//                 }\n//             }\n//         }\n//         return dp[0];\n//     }\n// }\n","cpp":"// Memoization solution\nclass Solution {\npublic:\n    int numDecodings(string s) {\n        unordered_map<int, int> dp;\n        dp[s.size()] = 1;\n        return dfs(s, 0, dp);\n    }\n\nprivate:\n    int dfs(string s, int i, unordered_map<int, int>& dp) {\n        if (dp.count(i)) {\n            return dp[i];\n        }\n        if (s[i] == '0') {\n            return 0;\n        }\n\n        int res = dfs(s, i + 1, dp);\n        if (i + 1 < s.size() && (s[i] == '1' || s[i] == '2' && s[i + 1] <= '6')) {\n            res += dfs(s, i + 2, dp);\n        }\n        dp[i] = res;\n        return res;\n    }\n};\n\n// Dynamic Programming solution\n// class Solution {\n// public:\n//     int numDecodings(string s) {\n//         vector<int> dp(s.size() + 1);\n//         dp[s.size()] = 1;\n//         for (int i = s.size() - 1; i >= 0; i--) {\n//             if (s[i] == '0') {\n//                 dp[i] = 0;\n//             } else {\n//                 dp[i] = dp[i + 1];\n//                 if (i + 1 < s.size() && (s[i] == '1' || s[i] == '2' && s[i + 1] <= '6')) {\n//                     dp[i] += dp[i + 2];\n//                 }\n//             }\n//         }\n//         return dp[0];\n//     }\n// };\n","java":"// Memoization solution\nclass Solution {\n    \n    public int numDecodings(String s) {\n        Map<Integer, Integer> dp = new HashMap<>();\n        dp.put(s.length(), 1);\n\n        return dfs(s, 0, dp);\n    }\n\n    private int dfs(String s, int i, Map<Integer, Integer> dp) {\n        if (dp.containsKey(i)) {\n            return dp.get(i);\n        }\n        if (s.charAt(i) == '0') {\n            return 0;\n        }\n\n        int res = dfs(s, i + 1, dp);\n        if (i + 1 < s.length() && (s.charAt(i) == '1' || s.charAt(i) == '2' && s.charAt(i + 1) <= '6')) {\n            res += dfs(s, i + 2, dp);\n        }\n        dp.put(i, res);\n        return res;\n    }\n}\n\n// Dynamic Programming solution\n// class Solution {\n//     public int numDecodings(String s) {    \n//         int[] dp = new int[s.length() + 1];\n//         dp[s.length()] = 1;\n//         for (int i = s.length() - 1; i >= 0; i--) {\n//             if (s.charAt(i) == '0') {\n//                 dp[i] = 0;\n//             } else {\n//                 dp[i] = dp[i + 1];\n//                 if (i + 1 < s.length() && (s.charAt(i) == '1' || s.charAt(i) == '2' && s.charAt(i + 1) <= '6')) {\n//                     dp[i] += dp[i + 2];\n//                 }\n//             }\n//         }\n//         return dp[0];\n//     }\n// }\n","csharp":"// Memoization solution\npublic class Solution {\n\n    public int NumDecodings(string s) {\n        Dictionary<int, int> dp = new Dictionary<int, int>();\n        dp[s.Length] = 1;\n        return Dfs(s, 0, dp);\n    }\n\n    private int Dfs(string s, int i, Dictionary<int, int> dp) {\n        if (dp.ContainsKey(i)) {\n            return dp[i];\n        }\n        if (s[i] == '0') {\n            return 0;\n        }\n\n        int res = Dfs(s, i + 1, dp);\n        if (i + 1 < s.Length && (s[i] == '1' || s[i] == '2' && s[i + 1] <= '6')) {\n            res += Dfs(s, i + 2, dp);\n        }\n        dp[i] = res;\n        return res;\n    }\n}\n\n// Dynamic Programming solution\n// public class Solution {\n//     public int NumDecodings(string s) {\n//         int[] dp = new int[s.Length + 1];\n//         dp[s.Length] = 1;\n//         for (int i = s.Length - 1; i >= 0; i--) {\n//             if (s[i] == '0') {\n//                 dp[i] = 0;\n//             } else {\n//                 dp[i] = dp[i + 1];\n//                 if (i + 1 < s.Length && (s[i] == '1' || s[i] == '2' && s[i + 1] <= '6')) {\n//                     dp[i] += dp[i + 2];\n//                 }\n//             }\n//         }\n//         return dp[0];\n//     }\n// }\n"},"starterCode":{"python":"class Solution:\n    def numDecodings(self, s: str) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {string} s\n     * @return {number}\n     */\n    numDecodings(s) {}\n}\n","cpp":"class Solution {\npublic:\n    int numDecodings(string s) {\n        \n    }\n};\n","java":"class Solution {\n    public int numDecodings(String s) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int NumDecodings(string s) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/6aEyTjOwlJU","embedding":[0.040695414,-0.04003794,0.030153148,-0.03738537,-0.021605978,0.043529358,0.01192523,0.046045896,0.025777541,0.0011980492,0.025936242,-0.049061213,-0.06039698,-0.035435617,0.0638884,-0.007685652,0.01200458,-0.0013638348,0.006058969,0.055862673,0.010587609,0.01508791,0.012571369,-0.012469347,0.0753602,0.015654698,-0.008241105,-0.009788438,0.0052569634,-0.04148892,-0.019871606,-0.0055970363,0.01610813,-0.03266969,-0.01758178,0.021481285,-0.03502753,-0.008626521,-0.058537915,-0.019916948,0.0055913683,-0.01361426,-0.046567343,-0.014033684,0.019089436,0.0075042797,0.0016394358,0.0035679336,0.017638458,0.038042843,0.0008579761,0.039539166,-0.023510387,0.0024414414,-0.045705825,0.0024428584,-0.013750289,0.010066164,0.02489335,-0.009057281,0.06756119,-0.04296257,0.012355989,0.021016518,0.026185628,0.023034284,-0.0032165246,0.07046314,-0.04228242,-0.01699232,-0.051645767,0.05790311,0.005220122,-0.036455836,-0.013818303,0.04522972,0.013172165,0.06728913,0.015110581,-0.034075323,-0.0034404062,-0.017060334,0.03795216,-0.012628048,-0.0080427285,-0.005387325,-0.031445425,0.014679822,-0.03493684,-0.014067691,0.0030833294,0.004630662,-0.036591865,-0.00550635,0.03516356,-0.03106001,0.042463794,0.023465043,0.0012051341,0.029518345,-0.0015870078,0.010406237,0.015564012,0.013262851,-0.016890297,0.01805788,0.03486883,0.021424605,-0.06561144,-0.020007635,-0.0069658305,-0.0017853838,0.0064387172,-0.025686854,0.041874334,-0.0117325215,-0.050013416,-0.0005203827,-0.018692685,-0.0025831386,-0.016890297,-0.034075323,0.04003794,-0.0031088348,-0.0404687,0.010802989,-0.004389777,-0.07758201,0.049514644,-0.019497525,0.01974691,-0.06216536,0.017275713,-0.049151897,-0.0073739183,-0.03949382,-0.033961967,0.030425206,-0.036909267,0.036138434,0.030334521,0.028180724,-0.023759773,0.018726692,-0.005007576,0.0032647017,-0.020438394,0.01958821,-0.012378661,-0.014237727,0.022036737,-0.03448341,0.028656827,0.024689307,0.019021422,-0.033916622,-0.017355064,-0.0058719288,0.06815065,0.033485863,-0.033531208,-0.0015898417,0.0070678527,-0.014725165,0.0059286077,-0.002712083,-0.024031833,0.023487715,-0.002367759,-0.043415997,0.0024329396,-0.053686205,-0.009839448,-0.019542867,-0.0345741,-0.019282145,-0.039085735,-0.03890436,-0.037294682,-0.0010542267,-0.04123953,-0.0067674546,-0.022014065,-0.0075099478,-0.005129436,-0.026140286,0.022637533,-0.02095984,0.026094943,0.0176838,0.00897793,0.016221486,0.0865146,-0.004338766,-0.006988502,-0.0051691113,0.048109006,-0.012378661,-0.014045019,-0.032601673,-0.0625281,-0.03561699,-0.0053901584,0.015926756,0.053550176,-0.020880489,-0.037884142,-0.04647666,0.04711146,-0.0073115714,-0.008354463,0.012412668,0.03845093,-0.022852913,-0.0027928504,0.034029983,-0.010876671,-0.02304562,-0.0016819448,0.010162517,-0.01339888,0.02095984,-0.0101795215,0.0128774345,0.025460139,0.009493708,-0.039539166,0.0096070655,0.026911117,0.018307269,0.047655575,-0.005421332,-0.00873421,0.021742007,-0.00066881045,0.04223708,0.01192523,-0.0022203939,-0.030085133,-0.009096955,0.024779992,-0.007402258,0.045433767,0.0023025782,-0.055409245,0.030334521,-0.045524452,0.011573821,0.0000045193633,0.0055885348,-0.03019849,-0.0011824626,-0.010105839,-0.037793458,-0.024054503,-0.0047071786,0.00285378,0.014407763,-0.017275713,0.029268958,-0.020812474,-0.02709249,-0.046136584,-0.046408642,0.024462592,-0.023261,0.008484824,0.034687456,0.016720261,-0.005554527,-0.032851063,-0.07295702,0.005092595,0.024281219,-0.014645815,-0.04992273,0.015450655,0.014056355,-0.02829408,-0.013126821,-0.007016842,-0.031672142,0.027273862,0.0034319044,0.006319692,0.03237496,0.013557581,0.024258548,-0.054593068,-0.064704575,-0.037317354,0.0159721,-0.011993244,-0.01862467,-0.024122518,0.003202355,-0.04021931,-0.01096169,0.025414797,0.0002632024,0.03693194,0.015178596,0.03459677,0.0038173206,-0.08039328,0.0031173367,-0.017457087,-0.010627285,-0.001526078,-0.009879123,0.021537963,0.0116305,-0.01986027,0.059399433,-0.00026851604,-0.032601673,0.03427937,-0.088419005,0.023068292,-0.06932957,-0.004780861,0.0061893305,0.021424605,0.0028991231,0.04003794,0.04801832,-0.028974228,0.041874334,0.025165409,-0.030561237,-0.008887243,0.053550176,0.012696062,0.064115115,-0.085970476,-0.005358985,-0.016720261,-0.007957711,-0.0017428746,0.050829593,0.019463517,0.028792856,0.021265903,-0.020143664,-0.01664091,-0.023215657,0.019191459,0.048199695,0.053686205,-0.004780861,-0.016606903,0.003406399,-0.004426618,-0.042826537,0.01715102,0.021481285,-0.027477907,0.023510387,-0.05917272,-0.0289969,-0.0145778,-0.0125940405,0.0024074342,-0.016040115,-0.014623143,0.039833896,0.0066824364,0.0058719288,0.029541016,0.028158052,-0.019984962,0.028158052,-0.016833618,0.011970573,-0.012015916,-0.039063063,-0.03813353,0.046658028,0.0041092164,0.055817332,-0.015870078,0.06153056,-0.027319206,-0.005367487,0.009425692,0.024870679,0.024213204,-0.013625596,-0.029336972,-0.045025676,0.0016323508,-0.03960718,0.04801832,0.016731596,-0.04384676,0.008785222,-0.052053854,0.040831443,-0.014566464,0.032148242,0.018069217,0.04609124,0.019916948,-0.036433164,-0.045615137,0.012503354,0.019089436,0.025709527,0.053187434,0.049423955,0.024666635,-0.018601999,0.026729746,-0.022886919,0.0034262366,-0.007889695,-0.005563029,0.00935201,0.03548096,-0.046295285,0.004780861,0.0098904595,-0.009499375,0.00699417,0.012537361,0.007974714,-0.03620645,-0.025958912,0.046567343,-0.01170985,-0.033191133,0.04477629,0.06270948,0.0053504836,-0.028747512,0.0440508,-0.014838523,0.08102808,0.011641836,-0.04296257,-0.024870679,0.007402258,-0.012378661,-0.0022246449,-0.0017527934,-0.021707999,-0.014566464,0.020415721,0.06366169,0.005330646,0.0677879,-0.039652523,-0.015926756,-0.0045286403,-0.029473001,-0.037158653,0.055726644,-0.00523996,-0.012151945,-0.06837736,-0.033961967,-0.0059002684,-0.046045896,-0.011426456,0.016278166,-0.00095787254,-0.038337573,0.042486466,-0.0012632299,0.012015916,0.0072208853,0.0071698744,-0.019044094,-0.008921251,-0.0009557471,-0.0018831547,0.04343867,0.039675195,0.00916497,-0.041602276,-0.05300606,-0.046748716,0.00014674508,0.0038314902,-0.03192153,-0.011154397,-0.01797853,0.001870402,0.012163281,-0.030085133,-0.017797159,-0.024689307,0.012333318,-0.009692083,-0.00095928955,0.0052966387,0.034551427,-0.0316268,0.015133253,0.008314787,-0.010916347,-0.019202795,-0.0051974505,0.016924305,0.046159256,0.02068778,-0.009153634,-0.015654698,-0.022592189,-0.035095543,0.0077933418,0.005795412,-0.0035679336,0.008552838,0.02272822,-0.008428145,-0.015053903,-0.051917825,-0.043665387,-0.01993962,0.0018746529,-0.08642391,0.042758524,0.045093693,0.026072271,-0.040990144,-0.023895804,-0.03711331,-0.036750566,0.011823208,0.016901633,0.0072322213,0.015337297,0.030153148,-0.033145793,0.01398834,-0.00463633,0.018080553,-0.009901795,-0.00017490739,0.016074121,0.003491417,0.014079026,-0.018828714,-0.010734974,-0.012276639,-0.011687179,0.021583306,-0.026230972,-0.02781798,0.00023380025,-0.012106602,-0.028022023,-0.005466675,-0.025845556,-0.025528153,-0.011239416,0.019225465,0.006960163,0.026435016,0.008581178,-0.042327765,0.048381068,0.009816777,0.011256419,0.018137231,0.0043217624,0.026412344,-0.01599477,-0.010292879,-0.0022954934,0.0040638736,-0.001232765,-0.00483754,-0.006104312,-0.022524174,-0.013772961,0.01945218,0.0007524117,-0.015178596,0.01369361,0.01554134,0.026072271,-0.015711376,-0.05110165,0.0026766586,0.008150418,-0.0045569795,0.0050217463,-0.05930875,-0.021617314,0.04516171,0.01996229,-0.0026157289,-0.0053929924,-0.011800537,-0.03223893,-0.015700042,0.00091890583,0.006801462,0.017887846,0.014249063,-0.007164207,-0.0042565814,0.02323833,-0.030425206,-0.01221996,0.013977004,0.00032324655,0.005563029,0.017083006,-0.0010166769,0.023782445,-0.034528755,0.0052994723,-0.00094157737,0.013183501,0.00873421,0.033485863,0.017593116,0.061757274,0.011664507,0.049287926,0.012548697,0.023306344,-0.0051577752,-0.039811224,-0.0010209278,0.023442373,0.0077196592,-0.031717483,-0.005860593,0.023601074,-0.007130199,0.005129436,0.027568592,-0.0050189123,0.011449127,0.01093335,-0.025346782,0.026276315,-0.03928978,0.015745385,-0.015643362,0.0108880075,0.025550826,0.007923704,0.000051453768,0.0007346996,-0.038632303,0.017048998,0.025596168,0.038677648,0.0006174452,0.036705222,-0.015076574,-0.011194073,-0.025097394,-0.014623143,-0.0030323185,-0.021005182,0.002067361,0.010927682,-0.011443459,0.032783046,-0.023646416,0.0025392123,-0.019123444,0.025120066,-0.020903159,-0.04493499,-0.006982834,0.043824088,-0.00012407354,-0.05196317,-0.007186878,0.009448364,-0.011653172,-0.027069818,-0.02232013,-0.015201268,-0.00474402,0.0025377956,-0.010882339,0.0042990907,-0.020914495,-0.001353916,-0.015291953,0.008246773,-0.019916948,0.0008707288,-0.028498126,-0.02561884,-0.012435339,0.026457688,-0.01964489,0.032329615,0.016946975,0.006790126,-0.07821681,-0.0034659116,0.009312335,0.018726692,0.018511312,-0.0345741,0.01567737,-0.0026469023,0.014339749,-0.004894219,-0.020302365,0.005648047,-0.013002128,-0.008241105,0.020755794,-0.033961967,-0.005171945,-0.011398117,0.023011614,0.029813075,-0.049741358,-0.012956785,-0.00017464171,-0.019554203,-0.024711978,0.0018888226,0.00070140074,-0.004035534,0.01339888,0.051555082,0.045025676,-0.0021821358,0.01827326,-0.005733066,-0.038042843,-0.0071528708,-0.017649794,-0.030017119,0.024916023,-0.0348915,-0.030357191,-0.019361496,0.011035372,0.0029784734,-0.022501504,0.0037691435,0.020381715,-0.032851063,0.007198214,-0.04135289,-0.00533348,-0.029541016,0.0060476335,-0.005860593,-0.03545829,0.017207699,0.053912923,0.043506686,0.03108268,-0.016912969,0.015008559,-0.014668486,0.0035679336,-0.0027999352,0.0057188957,0.025369452,-0.0056310436,-0.028928885,0.000041114305,-0.017536435,0.034460742,-0.008320455,0.0029926433,-0.011857215,0.023601074,-0.0006131943,-0.025006708,-0.01717369,-0.011698514,-0.003298709,0.0048545436,-0.06375237,0.010009485,0.026004257,0.006756119,-0.021855364,0.019248137,-0.0052314578,-0.014271734,0.037770785,-0.049832046,0.0077933418,-0.013920326,-0.01776315,-0.013977004,0.011131726,-0.024553278,-0.00058060396,-0.053776894,0.0072322213,-0.013036136,0.01966756,0.003451742,0.0048177023,0.003247698,0.009686415,-0.02033637,-0.005330646,-0.012605377,-0.039063063,0.0060929763,-0.024553278,0.03151344,-0.037793458,-0.006160991,0.02039305,0.016833618,-0.04241845,0.015416647,0.054094296,0.041874334,-0.013138157,-0.017026326,-0.002464113,0.013092814,0.024213204,-0.021662656,-0.005973951,0.013965668,0.00071131956,0.00305499,0.025528153,0.025278768,-0.013716281,0.006433049,0.03915375,0.042758524,0.04801832,0.012117938,-0.011845879,0.012242632,0.011511474,0.01838662,-0.008371466,-0.028067367,-0.040128626,-0.004486131,-0.0028183558,-0.008728543,0.029722389,-0.04860778,-0.03090131,0.013251515,0.022501504,-0.012197289,-0.02990376,0.057222966,0.020075649,0.016867626,-0.020517744,0.0187607,0.051056307,-0.0046703373,0.0050500855,-0.0028693667,0.000077047815,0.030017119,-0.0100775,0.01055927,-0.010791653,0.013534909,0.014385092,-0.0021807188,0.015768057,0.0054411697,0.030833295,-0.016153472,0.034256697,0.02353306,0.0110297045,-0.013070143,-0.00078358507,0.020291029,-0.018159904,0.023918474,0.003307211,-0.03149077,0.020427058,-0.002662489,-0.020313699,-0.024417248,0.01927081,-0.0348915,0.014702493,-0.022444824,0.021265903,0.020189006,0.029722389,0.0154393185,0.051192336,-0.012287974,-0.0016380188,-0.0011222413,-0.0018902397,-0.015099245,-0.024326563,-0.0021467113,-0.019316152,-0.043937445,-0.04119419,0.017219035,-0.008802226,-0.03346319,-0.001479318,0.039380465,0.037181325,-0.025392124,-0.033825938,-0.02532411,0.012151945,-0.0037351362,0.04742886,-0.056724194,0.00994147,-0.039539166,0.01929348,-0.013466895,-0.017219035,-0.011607829,0.022875583,0.01640286,0.022116087,0.0031315065,0.020631101,0.01508791,-0.011845879,-0.048970528,-0.0027220019,0.006648429,0.04697543,-0.018182576,-0.008524499,-0.02722852,-0.020925831,0.0098961275,-0.0014042185,-0.02216143,0.022569519,-0.031604126,0.009811109,0.019554203,0.03076528,0.02355573,-0.026888447,-0.027160505,0.012049924,0.015189932,-0.030447878,0.011205409,0.022637533,0.015065238,0.028883541,-0.026480358,-0.0048488756,-0.009952806,-0.020903159,0.002373427,-0.011811872,-0.008626521,-0.01152281,-0.04223708,-0.0041772313,0.016323509,-0.016323509,0.020143664,0.026752418,-0.00021201432,0.013784296,0.02502938,-0.0022855746,0.02098251,0.0037238004,0.008728543,-0.008303451,0.031830844,-0.006308356,-0.007816013,0.020189006,0.011556817,0.050557535,0.005370321,0.05967149,-0.017717808,0.018601999,-0.028226066,-0.015269282,-0.008705871,0.010474252,0.039992597,-0.031173367,0.0012859014,-0.0002059922,-0.0028141048,0.043053254,0.04516171,0.0070678527,-0.026367001,0.03076528,-0.013342201,-0.014419099,0.027251191,0.0117325215,-0.048245035,0.017559107,0.014725165,0.018499976,-0.0013021965,0.030130476,0.00009998503,-0.01797853,-0.010474252,-0.008127747,-0.005716062,-0.0014864028,0.010808657,0.017933188,0.0038258224,-0.0017272879,0.0076516448,-0.03579836,0.022626197,-0.007402258,-0.00854717,-0.0007502863,-0.002958636,-0.015632026,0.036750566,0.023113634,0.015269282,-0.038496275,0.00029189608,0.006903484,0.008105076,0.0077876737,-0.046522,0.0017485425,0.020710452,0.0027800975,-0.012968121,-0.022592189,0.0037266344,-0.034166012,0.020506408,-0.018239254,-0.00079562934,-0.0007524117,0.016629575,0.028747512,0.016391523,0.015938092,0.021367926,-0.015802063,-0.009765766,-0.031400084,0.00035796236,0.013704946,-0.019474853,-0.01331953,-0.008399806,-0.0046164924,-0.009952806,-0.015722713,0.017003655,-0.02752325,-0.008717207,-0.018715356,0.00022636115,-0.053504836,-0.0070338454,-0.006160991,0.012854763,-0.001630934,0.0065294034,-0.050738905,-0.038337573,-0.009873455,0.044413548,-0.003743638,0.011834544,-0.037589412,-0.006790126,0.03126405,-0.0051351036,0.0020574422,-0.0098961275,-0.026230972,0.013330866,-0.02133392,-0.016278166,-0.015178596,0.014135705,0.0033695577,0.009544718,0.00849616,-0.012208624,-0.026004257,-0.04448156,-0.0020007633,0.011488803,-0.003800317,-0.012832091,0.045773838,0.052008513,-0.025437467,0.021163883,-0.016754268,-0.0046448316,0.0028452782,-0.0010386399,-0.042463794,0.002464113,0.031309396,0.013772961,-0.0137389535,0.04416416,-0.0625281,-0.00093874347,0.025233423,0.035639662,0.014521121,0.00027630938,0.006841137,-0.04271318,-0.011080715,-0.019996298,-0.0262083,0.017309722,-0.018511312,-0.018114561,-0.005792578,0.039267108,0.0008763967,-0.043710727,-0.013387544,-0.02074446,0.01449845,0.013659603,0.04031,0.058537915,0.011687179,-0.013058807,-0.010627285,0.011777865,-0.015711376,0.0063877064,-0.025800213,0.004602323,-0.0262083,0.027047148,0.03740804,-0.0058095823,0.012730069,-0.022036737,0.03078795,-0.012548697,0.031400084,0.013546245,0.027251191,-0.019497525,0.04067274,-0.023329014,-0.026684402,-0.025958912,0.03339518,0.00015214729,-0.008360131,-0.0007290317,-0.0014934877,0.019871606,-0.0020886157,0.02988109,-0.037453383,-0.014033684,-0.0075042797,-0.009595729,0.014339749,-0.035843704,-0.020075649,-0.064885944,0.032261603,-0.0102362,0.01809189,-0.016946975,-0.011675843,0.013228844,-0.012389996,0.009425692,0.023873132,0.035344932,-0.026616387,-0.003995859,-0.034075323,-0.026026927,-0.01002082,-0.0097487625,-0.015325961,0.019100772,-0.004627828,-0.044209503,-0.0007481608,0.010785985,0.037884142,0.0033128788,-0.033485863,-0.055771988,0.0052541294,-0.03357655,0.025301438,-0.0017159522,0.014600472,-0.01878337,0.0155753475,0.007884028,0.026298987,-0.019690232,-0.029677046,-0.009550386,0.011398117,0.026367001,0.02098251,-0.0027900164,-0.027455235,-0.013954333,-0.011256419,0.022818904,0.02591357,0.018012539,0.0035679336,-0.0061383196,0.018148568,-0.018794706,-0.008535835,-0.0018789038,-0.020200342,0.023158979,0.028724842,0.010468584,-0.015847407,0.04035534,-0.0017924686,-0.01640286,0.002359257,0.003003979,0.020223014,-0.05287003,0.008479156,-0.0036331143,-0.011398117,0.026525702,-0.014317078,-0.033236478,0.0027786805,-0.04182899,-0.0032108568,0.013138157,0.014317078,0.0029898093,-0.038201544,0.034392726,0.013557581,-0.033735253,0.012503354,0.0023890135,0.022127423,-0.04105816,0.044073474,0.018159904,-0.01559802,0.024916023,-0.01774048,-0.007838685,0.0218667,0.014475778,-0.004242412,0.005911604,0.0123106465,-0.01717369,0.017309722,-0.0054014944,0.014067691,-0.02127724,-0.009663744,-0.014532457,0.040559385,0.014215056,0.0013262851,-0.003346886,-0.0029217948,0.02009832,-0.052235227,-0.031014666,0.0043586036,-0.0059002684,-0.009879123,-0.0043784413,0.009822445,0.0056367116,0.0052853026,0.0007244265,-0.000625947,0.016040115,0.010819992,-0.029223615,0.031286724,0.0081844255,-0.017117012,0.011556817,0.005905936,-0.0060476335,-0.018046545,0.026094943,-0.017729145,0.01093335,-0.011913894,-0.0070848563,-0.037294682,-0.015076574,0.030810622,0.023022948,-0.00581525,0.030447878,0.010525262,-0.0032250267,0.005222956,-0.021515291,-0.011347106,0.0031145029,0.03663721,0.045411095,0.008008721,-0.022739554,-0.025210753,0.0054836785,-0.013568916,-0.022388145,-0.0031513441,-0.017910516,0.028838199,-0.01634618,-0.004690175,-0.04228242,0.000100516394,-0.014419099,0.000012819161,-0.0001282359,-0.014215056,0.03047055,-0.016527552,0.025460139,-0.01707167,0.013466895,0.0027390055,-0.012151945,-0.011800537,-0.03917642,0.013648267,-0.026026927,0.006212002,-0.005854925,0.011148729,0.017751815,0.000082627135,-0.049741358,-0.025346782,-0.010406237,-0.03155878,-0.00041340137,-0.0067334473,0.08139083,-0.019905612,0.0010173854,-0.008320455,-0.004197069,-0.024779992,0.0052909707,0.0028821195,0.013240179,0.007249225,0.014566464,0.0024343566,0.00393918,0.003145676,0.007600634,-0.010196525,-0.006489728,0.040264655,-0.02261486,0.024394577,0.012956785,-0.0031768496,0.014713829,-0.015450655,0.04507102,0.0071188635,0.006812798,-0.010916347,-0.010632952,0.013840975,0.016731596,0.044096146,0.0007885445,0.016221486,-0.0011052375,-0.033304494,-0.031150695,-0.023113634,-0.055590615,0.021424605,-0.014090362,-0.024530606,-0.0071245315,-0.0015204102,-0.0038683314,0.0019327488,-0.000032169675,0.01495188,-0.005792578,-0.006121316,0.038428262,-0.01856799,-0.050466847,-0.0069658305,-0.032057557,0.048925184,-0.01986027,0.03253366,0.012106602,0.00082963664,0.063344285,-0.01093335,-0.0006241758,-0.0027999352,0.007640309,-0.0020461064,0.001725871,-0.0037294682,0.021322584,0.0048488756,-0.01776315,0.04191968,-0.00044776293,-0.024689307,0.024984038,0.010241868,0.018964743,0.003499919,0.005271133,0.0036274465,-0.033191133,0.024031833,0.021821357,0.025981585,0.0013050305,0.04006061,0.028656827,-0.016572896,-0.00894959,0.049061213,0.002067361,0.01599477,0.0025377956,0.043053254,-0.036614537,-0.022920927,-0.03901772,-0.00849616,0.02323833,-0.020189006,0.028679498,-0.0033440522,0.0083261235,-0.009283995,0.03949382,0.021798685,0.044662934,0.044662934,0.040967472,-0.021073196,-0.012503354,0.000056546007,0.0026284817,-0.036863923,0.0073569147,-0.008881575,-0.0023295006,-0.03813353,0.019848933,0.028634155,0.008371466,0.03523157,0.010621617,0.00013735765,-0.018749364,0.000056546007,-0.01200458,0.0014240561,-0.03947115,-0.009329339,-0.01986027,-0.0025278768,0.046363298,0.019259473,0.017559107,-0.040423356,-0.02856614,-0.020461064,0.017105676,-0.011721186,0.009731758,0.033327162,0.047972977,0.005665051,0.014339749,0.018454634,-0.023192985,0.008025725,0.027364548,0.024621293,-0.0074986117,-0.010241868,-0.009998149,0.0036812914,0.023737103,0.0125940405,0.0007481608,-0.000008612528,0.039380465]},{"id":"coin-change","name":"Coin Change","description":"You are given an integer array `coins` representing coins of different denominations (e.g. 1 dollar, 5 dollars, etc) and an integer `amount` representing a target amount of money.\n\nReturn the fewest number of coins that you need to make up the *exact* target amount. If it is impossible to make up the amount, return `-1`.\n\nYou may assume that you have an unlimited number of each coin.\n\n**Example 1:**\n\n```java\nInput: coins = [1,5,10], amount = 12\n\nOutput: 3\n```\n\nExplanation: 12 = 10 + 1 + 1. Note that we do not have to use every kind coin available.\n\n**Example 2:**\n\n```java\nInput: coins = [2], amount = 3\n\nOutput: -1\n```\n\nExplanation: The amount of 3 cannot be made up with coins of 2.\n\n**Example 3:**\n\n```java\nInput: coins = [1], amount = 0\n\nOutput: 0\n```\n\nExplanation: Choosing 0 coins is a valid way to make up 0.\n\n**Constraints:**\n* `1 <= coins.length <= 10`\n* `1 <= coins[i] <= 2^31 - 1`\n* `0 <= amount <= 1000`\n","difficulty":"Medium","concepts":["Tree Maze","1-Dimension DP","Unbounded Knapsack"],"solutions":{"python":"class Solution:\n    def coinChange(self, coins: List[int], amount: int) -> int:\n        dp = [amount + 1] * (amount + 1)\n        dp[0] = 0\n\n        for a in range(1, amount + 1):\n            for c in coins:\n                if a - c >= 0:\n                    dp[a] = min(dp[a], 1 + dp[a - c])\n        return dp[amount] if dp[amount] != amount + 1 else -1\n","javascript":"class Solution {\n    /**\n     * @param {number[]} coins\n     * @param {number} amount\n     * @return {number}\n     */\n    coinChange(coins, amount) {\n        const dp = new Array(amount + 1).fill(amount + 1);\n        dp[0] = 0;\n        for (let i = 1; i <= amount; i++) {\n            for (let j = 0; j < coins.length; j++) {\n                if (coins[j] <= i) {\n                    dp[i] = Math.min(dp[i], 1 + dp[i - coins[j]]);\n                }\n            }\n        }\n        return dp[amount] > amount ? -1 : dp[amount];\n    }\n}\n","cpp":"class Solution {\npublic:\n    int coinChange(vector<int>& coins, int amount) {\n        vector<int> dp(amount + 1, amount + 1);\n        dp[0] = 0;\n        for (int i = 1; i <= amount; i++) {\n            for (int j = 0; j < coins.size(); j++) {\n                if (coins[j] <= i) {\n                    dp[i] = min(dp[i], dp[i - coins[j]] + 1);\n                }\n            }\n        }\n        return dp[amount] > amount ? -1 : dp[amount];\n    }\n};\n","java":"class Solution {\n    public int coinChange(int[] coins, int amount) {\n        int[] dp = new int[amount + 1];\n        Arrays.fill(dp, amount + 1);\n        dp[0] = 0;\n        for (int i = 1; i <= amount; i++) {\n            for (int j = 0; j < coins.length; j++) {\n                if (coins[j] <= i) {\n                    dp[i] = Math.min(dp[i], dp[i - coins[j]] + 1);\n                }\n            }\n        }\n        return dp[amount] > amount ? -1 : dp[amount];\n    }\n}\n","csharp":"public class Solution {\n    public int CoinChange(int[] coins, int amount) {\n        int[] dp = new int[amount + 1];\n        Array.Fill(dp, amount + 1);\n        dp[0] = 0;\n        for (int i = 1; i <= amount; i++) {\n            foreach (int coin in coins) {\n                if (coin <= i) {\n                    dp[i] = Math.Min(dp[i], dp[i - coin] + 1);\n                }\n            }\n        }\n        return dp[amount] > amount ? -1 : dp[amount];\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def coinChange(self, coins: List[int], amount: int) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} coins\n     * @param {number} amount\n     * @return {number}\n     */\n    coinChange(coins, amount) {}\n}\n","cpp":"class Solution {\npublic:\n    int coinChange(vector<int>& coins, int amount) {\n        \n    }\n};\n","java":"class Solution {\n    public int coinChange(int[] coins, int amount) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int CoinChange(int[] coins, int amount) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/H9bfqozjoqs","embedding":[0.018336028,-0.05749217,0.008711635,0.0027556035,-0.027844882,-0.009179568,-0.0052396907,0.0284919,-0.0054707685,-0.000071715374,0.029577967,-0.05989538,-0.034800325,0.027082326,0.05051362,0.01080289,0.0011770529,0.010635358,-0.027013002,0.031033756,-0.020057559,0.007059429,0.05596706,0.0038590003,0.07514652,0.00003175064,0.009988341,-0.034361277,0.008636535,-0.03329832,0.048341487,0.0012615407,0.0071171983,-0.0040438627,-0.028237715,-0.016637607,-0.035632204,0.018347582,0.049543094,-0.060588613,-0.013217653,-0.031888746,-0.020381067,-0.035747744,-0.022067936,-0.0073713837,0.008775182,-0.010906875,-0.0061871097,0.03861311,-0.015008507,0.014026426,0.014257504,-0.0046042264,-0.008249479,-0.022530092,0.00039824826,0.028907841,0.02113207,-0.013945549,0.0021446913,-0.050652266,0.018324474,-0.013494947,-0.018590214,0.012975022,-0.016938007,0.02071613,-0.030224985,-0.041270506,-0.030340523,0.02828393,0.05924836,-0.028676763,-0.058878638,-0.020404175,0.010467827,-0.020531267,0.012224019,0.02338508,-0.057353526,-0.04716299,0.0054649916,0.001494785,0.016602945,-0.03517005,-0.044205196,0.045892064,-0.027821774,-0.095111646,-0.005323456,-0.01025408,0.03852068,0.003893662,0.011888956,0.000043755856,0.040877674,0.04884986,-0.0026689493,0.05458059,-0.008347687,-0.031380374,0.034222633,0.021594226,0.01733084,0.048064195,0.015066276,0.013263869,-0.06659664,0.0080010705,0.010410057,0.011022414,-0.041570906,0.0008354909,-0.029138919,-0.010779782,-0.0123395575,-0.011051299,0.013668256,-0.045198828,-0.023616157,-0.034731,-0.0062795407,-0.024679115,-0.041270506,-0.007879755,0.005251244,-0.06137428,0.028676763,-0.008087725,0.0534252,0.022980694,0.008405457,0.015690187,-0.029369997,-0.039930254,0.008734743,0.030432954,0.0055400915,0.04341953,0.039629854,-0.024725331,-0.03671827,-0.023604603,0.0068861204,-0.016487405,-0.023142448,-0.0060080243,-0.039260127,-0.00071634137,0.059941597,-0.013783794,0.014234397,0.029000271,-0.029809045,-0.017111316,-0.0049277353,0.007637123,0.0039254352,0.003289971,-0.013286977,0.022402998,-0.054026004,-0.05573598,0.057261094,-0.005785612,-0.010727789,-0.016452743,-0.01617545,-0.010375396,0.0058809314,-0.019953573,-0.0020898103,-0.02154801,-0.00044518593,-0.045868956,-0.020057559,-0.021386256,-0.014234397,0.03528559,-0.01129393,-0.036001932,-0.015066276,-0.047139883,0.062806964,0.005730731,-0.027174756,-0.039907146,0.0007921638,-0.025903828,0.06636556,-0.0146041205,0.020669915,0.009295107,-0.05092956,0.016071465,0.059433226,0.036279224,0.024263175,-0.019988235,-0.034499925,0.048480134,0.0012723724,0.021675102,-0.004150736,-0.054395728,-0.006447072,0.013298531,0.000108859334,-0.018532444,0.011571224,-0.024517361,-0.009144906,-0.067289874,0.0010672909,0.007134529,0.05416465,-0.0264122,-0.0100807715,0.026781924,0.017619686,0.014280612,0.0067359195,0.043881685,0.0022876707,-0.033876013,0.0061755558,0.020219313,0.027683128,-0.028099068,-0.03244333,-0.018035628,-0.008105056,-0.027683128,0.023847235,-0.006366195,-0.0100807715,-0.018359136,-0.030525384,-0.010323403,-0.009225784,0.012986576,0.008636535,-0.0009885799,-0.050143894,-0.014326828,-0.031796314,0.05573598,-0.046723943,0.020843223,-0.005834716,-0.023662373,0.0006069404,-0.04612314,-0.01816272,-0.008093502,0.023962773,0.002289115,0.008780959,0.00915646,-0.018948384,-0.028260821,-0.074823014,-0.04552234,-0.004272052,-0.03401466,-0.022218136,0.00026321213,-0.007787324,0.011299707,0.020739239,-0.0014557905,-0.008295695,0.0022270128,0.010583366,-0.058878638,0.03510073,0.024817763,-0.002209682,-0.04760204,-0.018671092,-0.013021237,0.011201499,0.025973152,0.008752074,-0.0053754486,-0.029300673,0.026158014,0.038150955,-0.04852635,0.0070767594,0.03306724,0.0101558715,0.018058734,-0.004116074,-0.01842846,-0.053887356,-0.028792301,0.021316933,-0.031888746,0.03077957,0.025118163,-0.027382726,0.03225847,0.0015337793,-0.06719744,0.018567106,0.012512866,-0.0045868955,-0.0015987699,-0.0073193912,0.016048357,-0.00014343075,0.049404446,0.016498959,-0.008081948,-0.0048844083,-0.03861311,0.016337205,-0.017018884,0.0008968709,0.04143226,0.03276684,0.023558388,0.023038462,0.030848894,-0.018151166,0.0359095,0.028838517,-0.032304686,-0.026758816,0.006071571,-0.012154696,-0.015251139,-0.090259016,0.030224985,0.068214186,0.016914899,0.0050750477,0.024263175,0.029647289,-0.011854294,0.03454614,-0.010490935,-0.005476545,-0.00550543,0.024863977,-0.00928933,0.019606957,-0.0146041205,-0.0013315862,0.0027628248,0.04351196,-0.028260821,0.0033650713,0.0055400915,-0.031495914,0.017377054,-0.029462427,-0.015690187,-0.01988425,0.017769888,-0.01611768,-0.056614075,0.0024378714,0.02065836,-0.0035585992,-0.021259163,0.011184168,-0.028468793,0.00080155133,0.004095855,-0.028515007,-0.026250444,0.007764216,0.00701899,-0.00997101,0.025718966,0.008792512,-0.03348318,0.00086581986,0.014188181,0.008422788,0.053933572,0.053610064,0.07135684,0.016406529,-0.005664296,-0.016002141,-0.07126441,0.06442451,-0.04730164,0.072234936,0.004303825,-0.007417599,0.004722654,0.041247398,0.08563746,-0.0078393165,0.015366678,-0.035863284,-0.00022674515,0.0029866814,0.0053812256,-0.024863977,0.024401821,0.017619686,0.056105703,0.003882108,0.0024884196,0.042518325,-0.002245788,0.023939665,-0.018336028,0.014962291,-0.017307732,0.0068572355,-0.020635253,-0.00550543,0.0041651786,0.018763522,-0.0031715436,0.023084678,-0.00092070084,0.05291683,0.0049999473,-0.018682646,-0.025580319,0.0101212105,-0.058878638,-0.007879755,-0.012778605,-0.013933995,-0.0026212896,-0.028260821,0.033460073,0.029693505,0.014916076,0.010825998,-0.071171984,-0.028653655,0.0017417494,0.044205196,0.026319768,-0.02994769,0.00065604446,-0.012963468,0.0015612198,0.031796314,0.020935655,0.04760204,-0.013876226,0.042633865,0.039190806,-0.026134906,-0.01555154,0.03015566,0.01926034,0.02567275,0.05559733,-0.041986845,0.018913724,-0.010947313,0.025534103,0.029115811,-0.017457932,-0.020773899,0.026134906,0.0045002415,-0.03433817,0.026689492,0.018289812,-0.0033737367,0.01952608,0.010427388,0.0047082114,0.051807657,0.043142237,-0.0228536,0.00073078374,-0.028538115,-0.008284141,0.001782188,-0.020496607,0.007544692,0.031981178,0.0052772406,0.008330357,-0.016522067,-0.013102114,0.018601768,-0.00088098436,-0.04039241,-0.0101096565,0.019664725,0.014916076,0.021120517,-0.0020797008,0.021721318,-0.011062852,0.027590696,-0.036279224,0.035031404,0.035146944,-0.00915646,0.005938701,0.035146944,-0.045129508,0.0123280035,0.063269116,-0.0032119823,-0.018359136,-0.002661728,-0.031911854,0.012859483,0.02101653,0.005872266,-0.058601346,0.009352877,0.010947313,0.005537203,0.024494253,0.06021889,0.02344285,0.008422788,-0.022067936,-0.0045753415,-0.02484087,-0.020935655,0.013991765,0.0033766252,0.0028610327,-0.003815673,0.036695164,-0.01727307,0.008919605,0.001916502,-0.016626053,0.0124550965,-0.050559837,0.027798666,0.009872802,-0.028653655,-0.009243115,-0.0071922983,-0.0055256495,0.023373526,0.018775076,-0.0025216371,0.0066146036,-0.0030704471,-0.0005108987,-0.0753776,-0.030201877,-0.0048613003,-0.021998612,0.009266222,-0.0038647773,0.046146248,0.026851248,-0.0049652853,-0.048064195,0.019087031,-0.00037333518,0.01617545,0.011299707,0.0072211833,-0.0062275482,-0.0042085056,-0.020762345,-0.00605424,0.010508265,0.0064355186,-0.058693778,-0.0018269593,-0.004338487,-0.043673716,-0.015204923,-0.00039824826,0.023154002,0.012639959,-0.020739239,-0.029300673,-0.033783585,-0.016337205,0.042356573,-0.021883074,0.031888746,0.03288238,-0.019387433,-0.037919875,0.06285318,0.028445685,0.023939665,-0.025603427,-0.003570153,-0.016764699,0.06608827,0.016348759,-0.009491523,0.0072962833,0.035031404,-0.012628405,0.007637123,-0.022807384,-0.0047630924,-0.011403692,0.024609793,0.000036579804,0.017873872,-0.00605424,-0.021917734,0.0062679867,0.014280612,-0.02504884,-0.031680774,-0.0002050816,0.05019011,0.0028480347,0.024771547,0.0016218778,-0.012478204,0.02588072,0.02222969,-0.007036321,0.013518055,-0.020126881,0.033136565,0.034777217,0.025441673,-0.02128227,0.019953573,-0.028584331,0.003838781,0.005779835,0.03359872,0.01403798,-0.0070016594,0.0152858,-0.036995564,0.030294307,0.0008412678,-0.015412893,-0.023754803,0.010698905,0.013702917,0.04203306,0.00323509,0.03392223,-0.018763522,0.0018284036,0.037295967,0.04101632,-0.027197864,0.005280129,0.002330998,-0.011022414,-0.037319075,-0.0048555234,0.0024479812,0.0031773206,-0.020357959,0.00073764386,-0.004286494,0.03047917,-0.043442637,-0.015655525,0.021409364,0.04240279,0.0019092808,-0.040045794,0.051576577,0.009826586,-0.012743944,0.008422788,0.034777217,0.0068456815,-0.028722977,-0.044921536,0.030040123,0.034222633,-0.0055256495,-0.03223536,0.020369513,0.0071749673,0.00071381393,-0.005121263,0.017249962,-0.010606473,0.0070998673,0.0063199797,0.020623699,0.011854294,-0.014581013,0.0100230025,0.015724849,0.03380669,0.016834022,0.008648089,-0.022772724,-0.00681102,-0.03683381,0.029485535,-0.01176764,-0.039722282,-0.003278417,0.0024306502,0.015355124,-0.0076948926,0.01694956,0.030848894,-0.0061986637,-0.0073540527,0.016984222,-0.029508643,0.057030015,0.00868275,0.029185133,0.044829104,-0.019687833,-0.015817279,-0.0078277625,-0.018451568,-0.009266222,-0.021675102,-0.016764699,-0.03288238,0.020704577,0.014141965,-0.0072154063,-0.018463122,-0.026435306,0.018174274,-0.019699387,-0.025950044,-0.0068456815,-0.030848894,0.013113668,-0.00022475932,0.00016437218,-0.016695375,0.04852635,0.02169821,-0.06863012,0.02139781,0.04133983,-0.016822468,0.032004282,-0.06839905,0.029462427,-0.032720625,0.006585719,0.049496878,-0.017596578,0.023962773,0.02134004,-0.025303025,-0.000326578,-0.038428247,-0.006065794,0.01831292,0.005231025,-0.0284919,-0.0078450935,-0.000021968193,-0.006805243,-0.048988506,-0.0074753687,-0.025903828,0.020207759,0.015251139,0.024355607,0.018936832,0.014407705,0.020935655,-0.042726297,-0.019710941,-0.014419259,-0.016360313,-0.03184253,-0.025395457,0.013529609,-0.038959727,-0.03306724,-0.00049826165,-0.032489546,0.052131165,-0.03454614,0.024517361,0.00030780293,-0.029231349,-0.028769193,0.003125328,-0.02724408,0.007036321,0.016672269,0.0003014844,-0.024494253,-0.012847929,0.0014131855,0.0100981025,0.016522067,-0.013610486,-0.017041992,0.000445547,0.027821774,-0.014904522,-0.01653362,-0.018451568,0.0065279496,-0.0123626655,0.03632544,0.019237231,0.008908051,0.032166038,0.0145232435,-0.023038462,-0.0059098164,0.0035845954,0.010444719,0.022772724,-0.018278258,0.012258681,0.006094679,0.016614499,-0.0023642154,-0.015932819,0.050143894,0.0047024344,0.029855259,0.0033159673,0.025903828,-0.028954055,0.040531058,-0.0061408943,0.0006423242,0.03697246,0.01575951,-0.0016955337,0.0093471,-0.0021807973,0.02071613,-0.048202842,-0.033275213,-0.033783585,0.016556729,-0.004491576,-0.008249479,0.029785937,-0.03110308,-0.0061928867,0.02359305,-0.0057885004,-0.018925278,0.012836375,-0.0078624245,0.039514314,0.02703611,-0.0027815998,-0.011877402,0.051299285,0.011698317,0.0022486765,-0.012582189,-0.019976681,-0.018128058,-0.015251139,-0.030756462,-0.003882108,0.007423376,0.023373526,-0.02839947,-0.051299285,-0.016834022,-0.005756727,0.027706236,-0.018289812,0.005944478,0.0050432743,0.022414552,0.011282377,0.0011878846,0.0101963105,0.03540113,0.015667079,-0.059710518,-0.0027180533,-0.006701258,-0.024609793,-0.005687404,-0.0036914689,-0.009635947,0.033852905,-0.009375984,0.030340523,-0.026573954,0.02234523,-0.021987058,0.040877674,0.01617545,-0.024586685,-0.0038792195,0.011831187,-0.0036048146,-0.020993423,-0.0017908535,-0.018798184,0.011588555,-0.06169779,0.001489008,0.041940633,-0.006331533,0.0249333,-0.0021836858,0.02692057,0.0212245,-0.0027454938,-0.0050086128,0.005257021,-0.001483231,-0.0011387806,-0.03142659,-0.030340523,-0.028052852,0.02196395,0.0072673988,-0.0019453868,0.019156355,0.015932819,-0.011270823,0.028099068,0.009913241,-0.016036803,0.04131672,-0.043789253,0.041778877,0.015574648,-0.03036363,0.035817068,-0.03507762,-0.02869987,-0.011623217,0.0033708483,-0.029231349,-0.014996953,-0.02745205,0.06414721,0.0059849164,0.006447072,0.044644244,0.0012925918,-0.05864756,0.0051328167,-0.0053985566,0.0055949725,0.033668045,0.022426106,0.037203535,0.025210595,-0.0014492915,0.016025249,-0.03727286,-0.011790748,-0.0078104315,-0.00086581986,-0.013021237,-0.022414552,-0.0058607124,0.034592357,-0.047417175,-0.012016049,0.019422093,-0.02662017,0.023396634,-0.024794655,-0.035331804,-0.024910193,-0.023708588,0.016614499,-0.005583419,-0.020381067,-0.0048121964,-0.030040123,0.036648948,0.0069612204,-0.007879755,-0.016013695,-0.0016161008,0.013286977,0.017816102,0.040831458,0.037827447,0.021628888,-0.0062737637,0.0049450663,0.014719659,-0.06553368,-0.0009264778,-0.01644119,-0.016938007,0.018416906,-0.023431296,-0.0033852907,-0.008278364,-0.0023107787,-0.011923618,0.036672056,-0.043558177,-0.04406655,0.048803642,0.012039157,-0.038428247,0.0038243385,0.010051887,0.028722977,-0.024378715,0.031565234,0.025441673,0.005548757,-0.041917525,0.009647501,0.0069612204,0.005231025,0.038682435,-0.035655312,-0.009878579,0.017192192,0.056013275,0.009335546,0.023581496,0.000028455976,-0.011582778,-0.020311743,0.002410431,-0.014176627,0.04152469,-0.017249962,-0.01878663,0.009947902,0.021929288,-0.0066377115,0.026851248,-0.013367854,-0.01804718,-0.011409469,0.010531373,-0.035724636,0.00440781,-0.0064124106,0.0015612198,-0.0013171438,0.029369997,-0.03630233,0.0028754752,-0.006366195,0.011051299,0.024032097,-0.012258681,0.012489758,0.027382726,-0.019017708,-0.04935823,-0.011415246,-0.00047515385,0.054441944,0.014985399,0.007660231,-0.030710248,-0.015609309,-0.036001932,0.022426106,0.033852905,-0.007989517,-0.010438942,-0.04268008,-0.016498959,-0.030132553,-0.0044713565,0.0015583313,0.025649643,0.007163414,0.020138435,-0.01074512,0.0075735766,-0.028006637,0.025002625,-0.00011571946,0.009260445,-0.01905237,0.0078624245,0.03278995,0.0055400915,0.039075267,0.021501794,0.00013007157,-0.0062853177,-0.0007979407,0.006891897,-0.02291137,0.00866542,0.023731695,-0.0048006424,0.0123048965,-0.008567211,0.013968657,0.0025851836,-0.0022602302,0.026019366,0.002069591,-0.025695859,0.013044345,0.00777577,-0.013679809,-0.0062737637,-0.027914206,-0.034199525,0.032212254,0.0017475263,0.0072962833,-0.017573472,0.042356573,-0.009826586,-0.033760477,0.027336512,-0.021097409,-0.0019381655,-0.01061225,0.015667079,-0.008763628,0.0015150042,-0.0037492383,-0.043442637,-0.028376361,-0.05092956,0.026042474,0.0016392085,-0.017573472,0.013933995,-0.012755498,-0.007769993,-0.0039109928,0.0038127848,-0.0031397704,-0.018185828,0.0015612198,-0.009427977,0.019630063,0.050790913,-0.016637607,0.014581013,0.0042836056,0.04633111,0.01430372,-0.01668382,-0.0065163956,0.018093396,-0.05324034,0.0011055631,0.0052887946,-0.0019309444,0.003986093,-0.037527043,-0.0069958824,0.018497782,-0.0011308372,0.011842741,0.0015410004,-0.006689704,-0.0034199522,0.0048613003,-0.013263869,-0.005895374,0.013367854,-0.00997101,0.054441944,0.004875743,0.004852635,0.028630547,0.0053552296,0.0043615946,-0.01388778,0.018948384,0.021374702,-0.008128163,0.019606957,-0.017226854,-0.003581707,-0.040854566,-0.012062265,-0.00580872,0.0031830976,-0.0326513,-0.0031079971,-0.007336722,-0.029924583,0.015990589,0.01114373,0.0051068207,-0.014430813,-0.0018168497,0.00017213495,-0.04801798,-0.025303025,0.039606746,0.00024804764,0.008913828,0.029046487,0.024309391,0.008347687,-0.026250444,0.053055476,0.011923618,0.013656702,-0.05582841,-0.020149989,-0.02030019,-0.011732979,-0.015355124,-0.008723189,-0.04365061,-0.010993529,0.039283235,-0.005736508,0.0024277617,0.009168014,-0.019606957,0.008445896,0.009104468,0.014430813,0.025718966,0.015147153,-0.026666384,-0.022195028,0.013587378,0.020519715,-0.012986576,0.010600697,0.0009856914,0.07528517,0.015447555,-0.0076140156,-0.0034343947,-0.038266495,-0.023985881,0.019087031,-0.015632417,-0.01596748,0.036001932,0.017585024,0.01288259,-0.005927147,0.0008261033,0.013841564,0.038058523,0.030201877,0.025742074,0.0032639748,0.03151902,0.010912652,-0.00512704,0.010213641,-0.033991553,-0.004072747,-0.018440014,-0.01905237,0.0054707685,-0.013321639,0.024170743,-0.01920257,-0.024910193,-0.0035441567,0.008087725,0.05092956,0.019965127,0.035539776,0.011877402,0.018440014,0.025742074,0.02724408,-0.00008593208,0.023500618,0.0068514585,0.0246329,-0.015851941,-0.0060369093,0.021039639,0.017457932,-0.01679936,0.007527361,0.04787933,-0.0012507089,0.0019742714,0.035747744,-0.0033910675,0.009867025,0.0018486229,0.027059218,0.013390962,-0.052639537,0.01231645,-0.021028085,0.004913293,-0.04152469,-0.01182541,-0.050467405,0.036348548,0.018093396,0.020681469,-0.021975504,0.0036423649,-0.015528432,-0.016094573,-0.024055205,-0.0067416965,0.034268845,-0.012847929,-0.016730037,0.013125222,0.014823644,-0.022530092,-0.01190051,0.018821292,-0.019237231,0.016487405,-0.050328758,-0.019329663,0.020485053,-0.023627711,0.007521584,-0.008619204,0.037087996,-0.041825093,0.020912547,-0.022333676,-0.019283447,0.013610486,0.015228031,0.01863643,0.014939183,0.0124435425,-0.018035628,-0.0013720248,0.0069958824,-0.017619686,-0.010525596,-0.026481522,0.018682646,0.0014875637,-0.013009683,-0.058416482,0.012871037,-0.008676974,-0.01108596,0.015667079,-0.05111442,0.0024682004,0.028330145,0.023985881,-0.015308908,-0.01848623,0.024702223,0.0146387825,-0.0031975398,-0.0023873232,-0.00096836063,-0.01753881,0.033876013,-0.012143142,0.0031773206,-0.024286283,0.028468793,-0.03507762,-0.050143894,0.0028234825,-0.029300673,-0.045152612,-0.057538386,0.049959034,-0.036394764,-0.002221236,0.031657666,-0.0034286177,0.009791925,0.0054187756,-0.011992941,0.010577589,0.006481734,-0.0022847822,-0.0052281367,0.0011727201,-0.016187005,0.016394975,-0.027798666,0.02222969,-0.0076024616,0.027336512,0.0062737637,0.040415518,0.022518538,-0.0051385937,0.014500136,-0.009965233,0.0124319885,-0.0015713294,0.000295888,0.01659139,0.022541646,0.030733356,0.032859273,-0.014719659,-0.0072154063,0.022530092,-0.005797166,-0.03110308,-0.0041247397,0.0058000544,0.010566035,-0.012755498,-0.003223536,0.040993214,-0.0012348223,-0.035562884,-0.029369997,0.019514525,0.0078277625,-0.006244879,-0.018925278,0.050328758,-0.018451568,-0.04591517,-0.007330945,-0.005753839,0.018936832,0.007042098,0.045221936,0.04152469,0.016348759,0.07528517,-0.0035181604,0.009104468,-0.005317679,0.015043168,-0.031865638,0.03237401,-0.040993214,-0.0025808509,-0.008330357,-0.006354641,0.023754803,0.033991553,-0.044505596,0.05069848,-0.0145925665,0.027590696,0.019237231,-0.013991765,0.0035614874,-0.020681469,-0.011715648,0.007336722,0.036556516,-0.022657184,0.024309391,-0.0040034237,-0.017249962,-0.023662373,-0.00667815,0.0048613003,-0.014985399,-0.015366678,0.0050548282,-0.029346889,0.010277187,-0.019595403,-0.017134422,-0.0066492655,-0.030063229,0.01507783,0.023477511,0.01926034,-0.019618511,0.033644937,0.008318803,0.00701899,0.018289812,0.02712854,-0.016695375,0.036071256,0.003471945,-0.036510304,-0.020900993,-0.011519231,0.013864672,0.039629854,0.017989412,-0.009254668,0.04092389,0.013922441,0.012004495,-0.030432954,-0.021975504,0.032605086,0.004705323,0.05028254,0.0043067136,-0.0006383526,-0.0397685,-0.0065395036,-0.023130894,-0.0020609256,-0.006071571,-0.015747957,-0.0123742195,0.019398985,-0.030594708,0.0026949455,-0.010352288,-0.0007654454,0.027313404,0.019017708,0.025580319,0.031911854,0.03879797,0.0032062053,0.012016049,0.00832458,-0.0341302,0.023154002,-0.0033044133,0.037596367,-0.0062102177,0.036533408,0.032628193,-0.03214293,0.0005412277,0.03320589]},{"id":"maximum-product-subarray","name":"Maximum Product Subarray","description":"Given an integer array `nums`, find a **subarray** that has the largest product within the array and return it.\n\nA **subarray** is a contiguous non-empty sequence of elements within an array.\n\nYou can assume the output will fit into a **32-bit** integer.\n\n**Example 1:**\n\n```java\nInput: nums = [1,2,-3,4]\n\nOutput: 4\n```\n\n**Example 2:**\n\n```java\nInput: nums = [-2,-1]\n\nOutput: 2\n```\n\n**Constraints:**\n* `1 <= nums.length <= 1000`\n* `-10 <= nums[i] <= 10`\n","difficulty":"Medium","concepts":["Kadane's Algorithm"],"solutions":{"python":"class Solution:\n    def maxProduct(self, nums: List[int]) -> int:\n        res = nums[0]\n        curMin, curMax = 1, 1\n\n        for n in nums:\n            tmp = curMax * n\n            curMax = max(n * curMax, n * curMin, n)\n            curMin = min(tmp, n * curMin, n)\n            res = max(res, curMax)\n        return res\n","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {number}\n     */\n    maxProduct(nums) {\n        let res = nums[0];\n        let curMin = 1;\n            let curMax = 1;\n\n        for (const n of nums) {\n            const tmp = curMax * n;\n            curMax = Math.max(Math.max(n * curMax, n * curMin), n);\n            curMin = Math.min(Math.min(tmp, n * curMin), n);\n            res = Math.max(res, curMax);\n        }\n        return res;\n    }\n}\n","cpp":"class Solution {\npublic:\n    int maxProduct(vector<int>& nums) {\n        int res = nums[0];\n        int curMin = 1, curMax = 1;\n\n        for (int n : nums) {\n            int tmp = curMax * n;\n            curMax = max(max(n * curMax, n * curMin), n);\n            curMin = min(min(tmp, n * curMin), n);\n            res = max(res, curMax);\n        }\n        return res;\n    }\n};\n","java":"class Solution {\n    public int maxProduct(int[] nums) {\n        int res = nums[0];\n        int curMin = 1, curMax = 1;\n\n        for (int n : nums) {\n            int tmp = curMax * n;\n            curMax = Math.max(Math.max(n * curMax, n * curMin), n);\n            curMin = Math.min(Math.min(tmp, n * curMin), n);\n            res = Math.max(res, curMax);\n        }\n        return res;\n    }\n}\n","csharp":"public class Solution {\n    public int MaxProduct(int[] nums) {\n        int res = nums[0];\n        int curMin = 1, curMax = 1;\n\n        foreach (int n in nums) {\n            int tmp = curMax * n;\n            curMax = Math.Max(Math.Max(n * curMax, n * curMin), n);\n            curMin = Math.Min(Math.Min(tmp, n * curMin), n);\n            res = Math.Max(res, curMax);\n        }\n        return res;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def maxProduct(self, nums: List[int]) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {number}\n     */\n    maxProduct(nums) {}\n}\n","cpp":"class Solution {\npublic:\n    int maxProduct(vector<int>& nums) {\n        \n    }\n};\n","java":"class Solution {\n    public int maxProduct(int[] nums) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int MaxProduct(int[] nums) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/lXVy6YWFcRM","embedding":[-0.022601848,-0.000681166,0.005276259,-0.022059254,0.010037989,-0.014968111,-0.027952949,0.01899079,0.00031310247,0.00707711,0.031582713,-0.04845926,-0.042322334,-0.011684482,0.04587726,0.018466907,-0.024884485,0.012217721,-0.008036004,0.010618004,0.005439973,0.041349407,0.006291284,0.00035227684,0.054483924,-0.002834586,-0.0026217583,0.038393207,0.02166634,-0.005257549,-0.003087173,-0.004836571,0.0033304049,0.04482949,-0.03083431,-0.03375309,0.0143226115,-0.025988383,0.014032604,-0.0020943661,-0.03104012,-0.015342314,-0.010066055,-0.030665917,0.02033792,0.02683034,0.032574352,-0.015379734,0.035698947,0.00783487,0.035904758,-0.026100645,0.021797312,0.012741605,0.014406807,-0.014070025,0.00210606,0.06297833,0.021067617,0.01800851,0.002825231,-0.014341322,0.025969673,0.032705322,-0.0063567697,0.010421547,0.051789664,-0.000048456335,0.00050341967,-0.040488742,-0.056167837,-0.04950703,-0.0072642113,-0.030722048,0.0066327443,0.042322334,0.027335513,0.020655993,0.03375309,-0.0243606,0.014378742,-0.026512267,0.053361315,0.009055708,-0.0009390151,0.0023656632,-0.013873568,-0.020674704,-0.039927438,-0.07046238,-0.015267474,-0.039553232,0.020674704,0.022620559,0.011955779,0.018335937,0.021011487,0.02282637,0.02821489,0.06484934,0.0239864,0.02696131,0.0023609856,0.0027807944,-0.0012184978,0.021816023,-0.012619989,0.015014887,-0.04295848,-0.023368964,0.006908719,-0.013237423,-0.010655425,-0.0010074241,-0.012573213,-0.02278895,-0.04063842,-0.0046705185,0.03515635,-0.014416162,0.015192633,-0.00055341085,-0.020562442,-0.046101782,-0.021011487,0.029318787,-0.0014570521,-0.03223757,0.037120916,0.0015646354,0.016492987,-0.027092282,0.01869143,-0.027896818,-0.05512007,-0.038991928,0.0065298383,-0.0127883805,0.024978036,0.028495543,0.038468044,-0.0019014179,-0.025969673,-0.0048178607,0.047598593,-0.022358617,-0.026587108,0.045054015,-0.019159183,0.029973643,0.032873716,-0.036166698,0.024659963,0.0337718,0.015510705,-0.03133948,-0.0012091427,0.02278895,0.02147924,-0.007198726,0.018017864,-0.0064082225,-0.036840264,-0.0076384144,-0.0013670096,0.03762609,-0.011001562,-0.009383135,0.0027129701,0.019814037,0.042060394,-0.021123746,0.027260672,-0.021067617,0.033884063,-0.020468893,-0.06619647,-0.0513032,-0.07311922,0.023705747,-0.030740758,-0.047860537,-0.043781724,-0.08958415,0.0048880237,0.056130417,0.02812134,-0.07285728,-0.022620559,-0.011469315,0.054147143,0.0119183585,0.030235585,-0.0034566983,0.011553511,0.012311271,0.024566412,0.045465637,-0.012722895,-0.025857411,-0.01066478,0.01668009,0.033921484,0.004467046,0.013705177,-0.06653325,-0.012966126,0.026549688,-0.020936646,-0.025202557,0.014996177,0.018700784,0.022134095,-0.008237138,-0.014285191,0.0070443675,0.0455779,0.019290153,-0.013770662,0.06728166,0.020468893,-0.0013670096,-0.014612619,0.005061093,0.03624154,-0.0013880584,0.0058141756,0.030665917,0.034370527,0.022283776,-0.017924313,-0.035399582,0.016231045,-0.024547702,-0.020468893,0.0011337175,-0.011759322,-0.007633737,-0.012816445,-0.028963296,0.023032181,-0.013012902,0.022208935,0.02295734,-0.00369993,-0.003620412,-0.07038754,0.042284913,-0.034108583,-0.031077541,0.00942991,0.036858972,0.02696131,-0.041311987,0.01478101,0.02151666,-0.032780163,-0.00810149,-0.024079949,0.002203119,-0.038468044,0.003690575,-0.04329526,-0.061219577,0.034800857,-0.020861804,-0.007067755,0.012011909,0.021236008,0.011927714,-0.012498373,-0.02828973,0.019037567,-0.0047570528,-0.013574206,-0.012096105,0.018831754,0.014949401,0.016726865,-0.08554275,-0.031433035,-0.014341322,0.013293554,-0.004712616,0.03760738,-0.013667757,0.04681277,0.022414746,-0.009757337,-0.03771964,-0.032892425,-0.03743899,-0.016343307,0.009785403,0.008906026,-0.010683489,-0.015884908,0.0203005,0.019570805,-0.04408109,0.014734235,-0.007872291,0.008480371,0.0050096395,-0.068142325,-0.026362587,0.03498796,0.015622966,-0.016240401,0.008340045,0.022171514,0.04191071,0.0014313257,-0.015594901,0.030703338,-0.05280001,-0.015276829,-0.0029141041,-0.00084254093,0.005037705,0.02022566,0.023518644,0.048047636,0.049207665,0.04172361,0.007208081,-0.013171938,0.02832715,0.015145858,-0.046401147,-0.032555643,0.007942454,-0.012021264,0.04692503,-0.058712415,0.060246646,0.03528732,0.001153597,0.0024463506,0.000055326465,0.02832715,0.0053978753,-0.0010898656,0.010028634,0.024435442,-0.0030801566,0.03777577,0.0059685344,0.0027340192,-0.01345259,-0.0064690304,0.00056364294,0.05107868,0.014257126,-0.012470308,0.0020066623,-0.031058831,-0.009289584,-0.052051608,0.000579722,-0.035998307,0.0038145296,0.043407522,-0.03263048,-0.0009787742,-0.0071613058,0.018813046,-0.05122836,-0.013059677,0.059984706,0.024996746,0.054633606,0.027634876,0.009574913,-0.054970387,-0.025745152,-0.031844657,0.024697384,0.010954786,-0.017840117,-0.025277399,0.018420132,-0.0011150073,-0.015127148,0.010281221,0.051677406,0.013808083,-0.015735228,-0.025838703,-0.034127295,-0.001206804,-0.027148413,0.04295848,-0.0009974843,-0.017830763,-0.0015891924,0.061069895,0.03403374,-0.0063895127,-0.0030216875,0.03195692,-0.0040390515,0.0511161,0.04288364,0.0032251603,-0.05482071,-0.007848904,0.036728002,0.03743899,-0.05549427,0.010954786,0.021928282,0.0014465277,-0.0026802274,0.022620559,0.048758622,-0.006908719,0.025389658,-0.030385265,-0.015267474,-0.012863221,0.008541179,0.021423109,0.014537778,0.010440257,-0.006244509,-0.0047009224,-0.07933099,-0.046700507,0.016343307,-0.0065111285,-0.007909711,0.017166553,0.030909149,-0.09444878,0.059984706,-0.04168619,0.10762072,-0.016913965,-0.04191071,-0.012741605,-0.0404139,0.015969103,-0.020730834,0.025801282,-0.007100498,0.004424948,0.034351815,0.01743785,0.012517083,0.055943318,-0.03887967,0.033378888,0.018083349,-0.04587726,0.02033792,0.05642978,0.03652219,-0.05126578,0.014350677,-0.0455779,0.03195692,0.005790788,-0.012133525,0.01622169,-0.03624154,0.021273429,0.017793342,0.060658272,0.014790365,0.0032041112,-0.02149795,-0.024603833,0.017522044,-0.040039696,-0.018045928,0.010964141,0.060995053,0.05508265,0.018569812,0.015922328,-0.03511893,-0.036503483,-0.0054259403,-0.020543734,-0.0023212265,-0.009425232,-0.0018663363,-0.007530831,0.000008404945,-0.048945725,-0.015136503,-0.007540186,-0.0027807944,0.033229206,0.0036437996,0.026138064,0.019739198,-0.038542885,-0.0023937284,0.029187817,-0.07873227,0.01800851,-0.014041959,0.037869323,-0.0032555643,0.008732958,-0.019458545,-0.00014134926,0.06709456,-0.042846218,0.01474359,0.010346707,-0.00063556,0.013864213,0.016652023,0.0007519137,-0.027840687,0.0017271797,-0.009378457,-0.0147623,0.0072922767,-0.010019279,0.051827084,-0.0055849766,-0.010618004,-0.04183587,0.019514674,-0.059722763,-0.023874138,0.012077395,0.030740758,-0.019271443,0.04569016,-0.023799296,0.013153228,0.019364994,-0.00739986,-0.017428495,-0.04692503,0.0021996107,0.022620559,-0.016689444,-0.021030197,-0.004413254,-0.0203005,0.04333268,0.021797312,-0.021273429,-0.015632322,0.006614034,0.00504706,0.010299931,-0.012021264,0.014809075,-0.04153651,-0.02422963,0.04857152,0.00081506046,0.0017587531,-0.01878498,-0.026699368,0.016652023,-0.0062491866,-0.01072091,-0.0018873853,-0.0045395475,0.034183424,-0.0012243447,0.011553511,-0.045054015,0.029992353,0.032144018,-0.021198587,0.039927438,-0.010683489,0.006543871,-0.022527007,-0.019383704,0.048085056,-0.018092705,-0.018251741,0.0033210497,-0.015089727,-0.020861804,-0.018494973,0.009153935,-0.00455358,0.031919498,-0.020075979,-0.018382711,-0.0038121908,0.036802843,0.00060574076,-0.0094486205,-0.059984706,-0.03644735,0.016418148,-0.00007188055,-0.016418148,0.0034543595,0.037326727,0.023163153,0.006553226,-0.026325166,0.0053136796,0.008952801,0.047823116,-0.0029772508,0.015763292,-0.0036625096,-0.018270452,-0.004583984,-0.019327573,-0.024454152,-0.015164568,0.05122836,0.017877538,-0.021011487,0.006295962,0.02146053,-0.015211343,0.02411737,0.010730265,0.0013459607,-0.028645223,-0.046663087,0.029449759,0.027185831,0.0035292,-0.019963719,0.0049909297,0.02022566,-0.016521053,0.023294123,0.027522614,-0.0051827086,-0.037251886,-0.017624952,-0.023874138,0.05280001,0.028851034,-0.017091712,-0.034314394,0.0037069463,0.011459961,-0.004221475,-0.003669526,0.004275267,-0.015688451,0.002642807,0.021759892,0.0076945447,-0.014481648,-0.0014617296,0.004443658,0.0029187817,-0.03094657,-0.0004774009,-0.0089949,-0.0057440125,-0.008601987,0.03895451,0.010505743,0.046363726,-0.04838442,0.030572368,0.029019427,0.052687753,0.023144443,-0.034220845,-0.0033935516,0.009776047,-0.008471016,-0.00049114117,-0.0003972981,-0.012329982,0.0201134,-0.02834586,0.0026217583,0.013284199,0.01880369,-0.02821489,0.040526163,-0.031376902,0.02022566,0.0052809366,0.014640684,-0.018111415,0.0173443,-0.019495964,-0.0029024102,-0.02699873,-0.023630906,0.012685474,-0.054221984,0.0015541109,0.02567031,-0.012507728,-0.048085056,0.0068338783,-0.020992776,0.00066187116,0.029281368,-0.070874006,-0.011029627,-0.0179898,-0.025782572,0.008536501,0.02959944,0.023574775,0.01214288,0.007713255,-0.011394475,-0.0042565567,0.01736301,0.027167123,0.0083774645,-0.015304894,-0.03740157,-0.008952801,0.03902935,-0.039253872,0.013555496,-0.00015348161,0.03352857,0.018607233,-0.0060667624,0.033098236,0.03360341,-0.0015552803,-0.034276973,-0.027541324,0.010187671,0.0026381295,-0.049357347,0.0015704823,-0.0005823531,-0.045428216,-0.024061238,-0.009963149,0.02561418,-0.008255849,0.007947132,0.00605273,-0.00072560256,-0.041311987,0.027241962,-0.054895546,0.01599717,-0.008775055,-0.00016751421,0.0228825,0.023050891,0.05283743,0.020749545,0.0042542177,0.014444227,0.005346422,0.030478816,-0.00046424533,0.034370527,-0.012208366,-0.003973566,0.012835155,-0.010805105,-0.012339337,0.04434303,-0.002233523,0.01415422,0.019402415,-0.041386828,-0.009500073,-0.024884485,-0.0065204836,-0.023237992,-0.04187329,-0.0037163014,-0.027391644,-0.002453367,-0.01548264,0.00603402,0.015005532,0.015632322,0.020094689,-0.020057268,0.009462653,0.010748975,0.030909149,-0.024510283,0.013461945,-0.0050330274,-0.03087173,0.0051967413,0.009093127,0.02819618,-0.017353654,0.032817584,0.033247918,-0.06484934,-0.0072221137,0.029412339,0.006094828,-0.028663933,0.008471016,0.018073995,-0.0032251603,-0.0071332403,-0.008134233,-0.015239408,-0.015763292,0.033229206,-0.007086465,0.002136464,0.0121803,0.0046775346,0.004282283,-0.012610634,0.0065485486,-0.008709569,-0.0072735664,0.03465118,-0.035680234,0.002825231,0.018111415,0.0046564857,-0.017334944,0.01802722,0.04703729,0.028589092,0.03914161,-0.007030335,-0.045054015,0.03253693,0.00783487,0.04067584,0.015370379,0.0039759045,-0.0032812906,0.009869599,-0.0040834877,0.027335513,-0.011871583,-0.039740335,-0.002383204,0.023649616,0.017896248,-0.014668749,-0.017063648,-0.026643239,-0.009191356,-0.006707585,0.016745575,-0.026287746,-0.008003262,0.009579591,0.024098659,0.046288885,-0.03399632,-0.035493135,-0.0117219025,0.012676119,0.0025375625,-0.034464076,-0.04426819,0.0122551415,-0.039927438,-0.034520205,0.009509428,-0.019533385,0.04045132,0.017316233,-0.02814005,-0.001153597,0.024098659,0.0039034027,-0.018962726,-0.011665772,0.00077588606,0.0051031904,0.035549264,0.012498373,-0.022377327,0.042696536,-0.020899225,-0.03891709,0.019327573,0.010225091,0.014996177,-0.007470023,0.019421125,-0.032948554,0.0045395475,-0.028645223,-0.019056277,0.004467046,0.016857835,-0.020581152,0.05100384,-0.034276973,-0.018064639,-0.028551672,-0.0010998053,0.023780586,0.006333382,0.031638846,0.0034356492,0.0203005,0.008237138,-0.010945431,-0.0070443675,0.030665917,0.030516237,0.009415877,0.012152235,0.019552095,0.014565843,0.008124878,0.03104012,0.012077395,0.037177045,-0.03242467,-0.030123323,-0.02151666,0.042546857,-0.005154643,-0.013115807,-0.008209074,0.006497096,0.0038683212,0.051864505,-0.016932676,0.01479972,-0.014678104,-0.041311987,-0.02168505,-0.010159605,-0.0018078672,0.03747641,-0.015491995,-0.009191356,-0.0059170816,-0.001206804,-0.06294091,0.02147924,-0.03220015,0.041648768,-0.044717234,0.00400397,0.026381297,0.049170244,-0.051639985,0.010440257,-0.044941753,-0.010225091,-0.0104496125,-0.0044857557,0.007919067,0.011179308,0.005318357,0.030310426,-0.047374073,0.0042846217,0.0005402553,-0.014584553,-0.023967689,0.012994192,-0.0020195257,0.0007805636,-0.036166698,0.012489018,0.0068198456,-0.019140473,0.016324596,-0.031395614,-0.015622966,0.0058609513,-0.015594901,-0.010543163,-0.00012322381,0.020917935,0.0024276406,-0.017063648,0.017175907,0.01345259,0.012217721,-0.054409083,-0.021572791,0.019664356,0.0348757,0.007156628,0.028794903,0.008059393,-0.0073951823,0.017793342,0.004048406,-0.057065923,0.03880483,-0.021030197,-0.031825945,-0.009785403,-0.039291292,-0.016932676,0.001718994,-0.0061790235,-0.020431472,0.046251465,0.003559604,-0.009387813,-0.008662795,-0.041349407,-0.010131541,-0.027129702,0.04295848,0.04310816,-0.014930691,0.02567031,-0.012638699,0.016287176,-0.0007478209,-0.0239864,0.007839548,0.0089949,0.006969527,-0.032181438,-0.0036133956,0.031657554,0.0402268,-0.01083317,0.009004255,0.00007407315,-0.0015541109,-0.058338214,-0.006324027,-0.018298516,0.033154365,-0.0024112691,-0.0143880965,0.014556488,-0.018485617,-0.005687882,0.015585545,-0.0002291992,-0.006978882,-0.015866198,0.009617011,-0.03465118,0.014397452,-0.016521053,0.018981436,-0.0099818595,0.019870168,0.010271867,-0.017737212,-0.020824384,0.0057159476,0.015379734,0.029112976,0.0009776048,-0.0036812199,0.0034964574,-0.008438272,-0.0051031904,0.0031620136,0.017849473,0.0010419209,-0.0044927723,0.00029161506,-0.02965557,-0.004481078,0.005500781,0.014434872,-0.030291716,0.027372934,-0.0011307941,-0.045839842,-0.03502538,-0.020244371,0.023556065,-0.0014278175,0.015435865,0.014977466,-0.00800794,-0.014041959,0.018738205,0.034220845,0.0010074241,-0.007900356,-0.01210546,0.0021645292,0.029206527,0.042210072,0.03607315,0.00036397067,-0.0041466346,-0.00093082944,0.023181863,-0.009963149,-0.028439412,-0.019046921,0.03644735,0.005889016,-0.021909572,-0.042322334,-0.0025609504,-0.013649046,0.016137496,0.058787256,-0.0181769,-0.03242467,-0.017101068,0.013808083,-0.01350872,0.010066055,-0.014182285,-0.056878824,0.004612049,0.03629767,-0.0031386258,-0.025913542,0.0068806536,-0.023256702,0.006824523,0.03399632,-0.048347,-0.0054025524,-0.0052201287,0.029243948,-0.011703192,0.03640993,-0.017250748,-0.062229924,-0.039777756,-0.019814037,-0.014303901,0.007713255,0.004293977,-0.020075979,-0.011338344,0.021217298,0.006366125,-0.05523233,-0.021348268,-0.019926298,0.02819618,0.010122186,0.0006314672,0.041648768,0.016062655,-0.00071156997,0.032948554,0.0025983707,0.054558765,0.016324596,0.00033005854,0.033023395,-0.037270598,0.0028509574,-0.012489018,-0.03199434,-0.0060386974,-0.014968111,-0.025801282,0.0038355784,-0.024903195,-0.018429486,-0.012947416,0.0040296963,0.014771655,-0.011057693,0.0061462806,-0.0052248063,-0.013368394,-0.030235585,0.030291716,-0.0024112691,-0.0030403975,-0.008227783,0.034520205,0.019683067,0.022620559,0.010533809,0.010197026,0.011010917,-0.0018546425,-0.008372787,0.0004958187,-0.016736219,0.031227222,0.01745656,0.031751107,0.009210066,-0.013929699,-0.024491573,0.023050891,-0.011749967,-0.007530831,-0.008793766,-0.004654147,0.01206804,0.00041600826,-0.026736788,-0.021928282,0.0269426,-0.019664356,-0.02559547,0.027597455,0.0122551415,-0.01083317,-0.0119183585,0.010795751,-0.02683034,-0.017175907,-0.059984706,-0.0030333812,-0.0153236035,-0.013405815,0.016970096,0.0091118375,-0.014640684,-0.0047102775,0.05624268,0.019121762,-0.0030216875,-0.0046190657,-0.020075979,0.018728849,0.04434303,0.04146167,-0.01081446,-0.02278895,-0.034351815,-0.020543734,-0.008761022,0.07016302,-0.013022257,-0.019364994,-0.008335367,0.039478395,-0.022096675,-0.017830763,-0.017943023,0.00022905302,-0.019271443,0.041311987,-0.0065906467,0.0032111276,0.008863929,0.029187817,0.0010384127,-0.0012383773,-0.04153651,-0.0044927723,0.011254149,0.027840687,0.030422686,-0.009654432,0.02265798,0.032761455,0.0012231753,-0.012348692,-0.015005532,0.025296109,-0.0066888747,0.018897241,-0.029150397,-0.023930268,-0.0022311842,-0.0032204827,0.009167968,0.029281368,-0.019795327,0.032705322,-0.025352238,0.020955356,-0.0075682513,-0.021142457,0.042546857,0.012676119,-0.012666764,-0.0074747005,0.054409083,0.019533385,-0.0104496125,0.028907165,0.025127716,0.016951386,-0.032985974,0.020057268,-0.035642814,-0.0027223253,-0.027859397,0.0066608097,0.0015751598,0.019140473,0.0016102414,0.0061696684,0.012816445,0.01622169,0.034838278,-0.008639406,0.016072009,-0.014846495,-0.040039696,0.0040881652,0.00005426671,-0.009963149,0.007619704,-0.0016207658,0.008335367,0.02297605,0.007208081,-0.034389235,0.0023001777,0.0141168,-0.0032906458,0.0017400429,0.005107868,-0.00865344,0.016595893,-0.0018920628,0.0016359678,-0.05916146,0.00840553,-0.006604679,-0.024865774,0.03760738,-0.0056551397,0.007067755,-0.042322334,0.0073858276,0.014977466,-0.0026685335,-0.042733956,-0.004813183,0.018111415,0.005238839,0.00884054,0.009364424,0.0068011354,-0.010103475,-0.0065812916,-0.0002606264,-0.018289162,0.015117792,-0.014734235,0.047748275,0.019626936,-0.023425095,-0.06660809,0.03225628,-0.008485048,-0.020543734,0.028514251,0.015782002,-0.0041770386,-0.007862936,0.015538771,-0.010674134,-0.015014887,0.046438564,-0.0068198456,0.00022174438,0.009294261,0.023032181,-0.046288885,0.04146167,-0.00050488143,0.00088522345,-0.014041959,0.046550825,-0.028027788,-0.030740758,0.012217721,-0.021048907,-0.039777756,-0.025707731,0.01406067,-0.015875554,-0.017157197,0.02686776,0.029206527,-0.021385688,-0.023818007,0.011160598,0.030216875,-0.0073343744,0.005131256,0.018204965,-0.01631524,0.022452166,0.025857411,-0.01603459,0.01417293,-0.00671694,-0.028982006,-0.0015354007,0.019159183,0.012797735,0.006281929,-0.012966126,0.07383021,0.00605273,0.02561418,-0.011647061,-0.017138487,-0.003257903,0.010636714,0.025408369,-0.021423109,0.0033631476,0.029767832,-0.0024673997,-0.026119353,-0.0016652024,-0.004738343,-0.0045793066,-0.010299931,0.007858259,-0.0048038284,-0.03515635,-0.014163575,-0.034576338,-0.0013225729,0.012956771,-0.018036574,-0.010356062,0.005061093,-0.00421212,-0.038580306,-0.009757337,-0.0241735,0.0114506055,-0.022527007,0.01633395,0.03740157,-0.00025755676,0.035698947,-0.004406238,0.014874561,0.00798923,0.015884908,-0.012526439,0.0062398314,-0.023050891,-0.019215314,-0.017671727,-0.019383704,0.032929845,0.033884063,-0.0074747005,0.019271443,0.000859497,0.001402091,0.030179454,-0.0046611633,0.020057268,-0.022714108,-0.008480371,0.03465118,0.013770662,0.014210351,-0.012872576,0.010973496,-0.015604256,-0.07506508,0.022452166,0.0021540048,-0.0046330984,-0.02692389,0.016352661,-0.03485699,0.0028603126,0.005893694,-0.022751529,0.0064082225,-0.016782995,0.024061238,0.0042588953,0.013246778,-0.005178031,0.035848625,0.031825945,0.037495118,0.026774209,0.010674134,-0.017334944,0.018373357,0.0011875092,0.030329136,0.0022592493,-0.016670734,0.06185572,0.05122836,-0.015183277,0.0025492564,0.011291569,-0.01350872,0.04453013,0.002673211,0.012367402,0.011188664,0.02686776,0.025165137,-0.002472077,-0.02413608,-0.01597846,-0.036035728,0.010543163,0.030179454,0.016100075,0.013901633,-0.009196034,-0.017400429,0.008400853,0.003047414,-0.0027620844,-0.0042542177,0.010655425,-0.002614742,0.012498373,-0.016839124,0.038580306,-0.0074372804,0.0012664426,0.012264496,0.009626366,0.008368109,-0.021067617,-0.0061369254,-0.007942454,0.030460106,0.04265912,-0.021909572,0.04187329,0.02022566]},{"id":"word-break","name":"Word Break","description":"Given a string `s` and a dictionary of strings `wordDict`, return `true` if `s` can be segmented into a space-separated sequence of dictionary words.\n\nYou are allowed to reuse words in the dictionary an unlimited number of times. You may assume all dictionary words are unique.\n\n**Example 1:**\n\n```java\nInput: s = \"neetcode\", wordDict = [\"neet\",\"code\"]\n\nOutput: true\n```\n\nExplanation: Return true because \"neetcode\" can be split into \"neet\" and \"code\".\n\n**Example 2:**\n\n```java\nInput: s = \"applepenapple\", wordDict = [\"apple\",\"pen\",\"ape\"]\n\nOutput: true\n```\n\nExplanation: Return true because \"applepenapple\" can be split into \"apple\", \"pen\" and \"apple\". Notice that we can reuse words and also not use all the words.\n\n**Example 3:**\n\n```java\nInput: s = \"catsincars\", wordDict = [\"cats\",\"cat\",\"sin\",\"in\",\"car\"]\n\nOutput: false\n```\n\n**Constraints:**\n* `1 <= s.length <= 200`\n* `1 <= wordDict.length <= 100`\n* `1 <= wordDict[i].length <= 20`\n* `s` and `wordDict[i]` consist of only lowercase English letters.\n","difficulty":"Medium","concepts":["Tree Maze","1-Dimension DP"],"solutions":{"python":"class Solution:\n    def wordBreak(self, s: str, wordDict: List[str]) -> bool:\n        dp = [False] * (len(s) + 1)\n        dp[len(s)] = True\n\n        for i in range(len(s) - 1, -1, -1):\n            for w in wordDict:\n                if (i + len(w)) <= len(s) and s[i : i + len(w)] == w:\n                    dp[i] = dp[i + len(w)]\n                if dp[i]:\n                    break\n\n        return dp[0]\n","javascript":"class Solution {\n    /**\n     * @param {string} s\n     * @param {string[]} wordDict\n     * @return {boolean}\n     */\n    wordBreak(s, wordDict) {\n        const dp = new Array(s.length + 1).fill(false);\n        dp[s.length] = true;\n\n        for (let i = s.length - 1; i >= 0; i--) {\n            for (const w of wordDict) {\n                if (\n                    i + w.length <= s.length &&\n                    s.slice(i, i + w.length) === w\n                ) {\n                    dp[i] = dp[i + w.length];\n                }\n                if (dp[i]) {\n                    break;\n                }\n            }\n        }\n\n        return dp[0];\n    }\n}\n","cpp":"class Solution {\npublic:\n    bool wordBreak(string s, vector<string>& wordDict) {\n        vector<bool> dp(s.size() + 1, false);\n        dp[s.size()] = true;\n\n        for (int i = s.size() - 1; i >= 0; i--) {\n            for (const auto& w : wordDict) {\n                if ((i + w.size()) <= s.size() && s.substr(i, w.size()) == w) {\n                    dp[i] = dp[i + w.size()];\n                }\n                if (dp[i]) {\n                    break;\n                }\n            }\n        }\n\n        return dp[0];\n    }\n};\n","java":"class Solution {\n    public boolean wordBreak(String s, List<String> wordDict) {\n        boolean[] dp = new boolean[s.length() + 1];\n        dp[s.length()] = true;\n\n        for (int i = s.length() - 1; i >= 0; i--) {\n            for (String w : wordDict) {\n                if ((i + w.length()) <= s.length() && s.substring(i, i + w.length()).equals(w)) {\n                    dp[i] = dp[i + w.length()];\n                }\n                if (dp[i]) {\n                    break;\n                }\n            }\n        }\n\n        return dp[0];\n    }\n}\n","csharp":"public class Solution {\n    public bool WordBreak(string s, List<string> wordDict) {\n        bool[] dp = new bool[s.Length + 1];\n        dp[s.Length] = true;\n\n        for (int i = s.Length - 1; i >= 0; i--) {\n            foreach (string w in wordDict) {\n                if ((i + w.Length) <= s.Length && s.Substring(i, w.Length) == w) {\n                    dp[i] = dp[i + w.Length];\n                }\n                if (dp[i]) {\n                    break;\n                }\n            }\n        }\n\n        return dp[0];\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def wordBreak(self, s: str, wordDict: List[str]) -> bool:\n        ","javascript":"class Solution {\n    /**\n     * @param {string} s\n     * @param {string[]} wordDict\n     * @return {boolean}\n     */\n    wordBreak(s, wordDict) {}\n}\n","cpp":"class Solution {\npublic:\n    bool wordBreak(string s, vector<string>& wordDict) {\n        \n    }\n};\n","java":"class Solution {\n    public boolean wordBreak(String s, List<String> wordDict) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public bool WordBreak(string s, List<string> wordDict) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/Sx9NNgInc3A","embedding":[0.03206105,-0.0032033697,0.015023831,-0.016829317,-0.053311076,0.04317847,0.022475565,0.016391624,-0.032367438,0.07165044,0.019258516,-0.016927797,-0.0298507,-0.006149594,0.011177599,0.03687568,0.01829559,0.04247816,0.018744227,0.019586787,0.022957027,0.07401398,-0.029872585,0.027881078,0.08749494,0.053092226,0.0068991445,0.012091285,0.0059198053,-0.010958753,-0.0062152483,-0.012802537,0.011949034,-0.020374635,-0.005090923,0.030966818,-0.020910809,0.010668781,-0.025758266,-0.0023471317,-0.03733526,-0.033768058,-0.008491255,-0.032848902,-0.02582392,0.0075939833,-0.01291196,0.030616663,-0.022037871,-0.0152864475,-0.036000296,0.07432037,0.005430136,0.0014539632,-0.02045123,-0.048146293,-0.0124304965,-0.025364341,0.039042264,-0.027312078,0.04950314,-0.011314378,0.034512136,0.03934865,-0.029456776,-0.022147294,0.029828815,0.01955396,-0.020516885,-0.049021676,-0.012419554,0.021392273,-0.01006148,-0.03317717,-0.027071346,-0.01722324,0.022048812,0.022256717,0.02989447,-0.012518035,-0.024598377,-0.030747972,0.012922903,-0.016435392,-0.031120012,-0.0095745465,-0.044907358,0.061320867,-0.0068608467,-0.0672735,0.013415308,-0.029172275,0.007916782,-0.041515235,0.016741779,-0.020407462,0.013021383,0.023197759,-0.04116508,-0.017671878,-0.03683191,0.011587936,0.02726831,0.033417903,-0.0046395515,-0.04945937,0.04276266,0.001469009,-0.03022274,-0.020746674,-0.02409503,0.014520484,-0.0033374133,0.0012453749,0.044207048,-0.04234685,0.028012387,-0.023044566,-0.021370389,-0.02381053,0.02376676,-0.0044371183,0.016194662,-0.013656039,-0.04530128,0.027815426,-0.006981212,-0.028975314,0.03153582,0.017135702,0.0069483854,-0.038713995,0.048452675,-0.0007297172,-0.029544314,-0.0020051836,0.0056298333,0.0099958265,-0.03363675,0.07874107,0.0024073145,0.016358797,0.008414659,0.0001601172,0.008775756,-0.018591033,-0.014137502,-0.0274215,-0.042128004,0.048408907,0.008392774,-0.009147795,0.040574193,0.056768853,0.030266508,-0.05707524,-0.0019012314,-0.0013308619,0.0455639,0.036481757,-0.028734582,-0.03157959,0.0007796416,-0.01731078,0.005908863,-0.026174074,0.016085237,0.022913257,-0.012003746,-0.07471429,-0.004661436,-0.056900162,-0.022431795,0.0006114032,0.040027075,0.022584988,-0.019017786,-0.0051100724,-0.010411635,-0.0038845304,-0.0030529124,0.020002596,0.0004763337,0.0034851348,0.06263395,-0.04457909,0.03387748,0.012145996,-0.011708302,0.010138077,0.0035480533,-0.00119887,0.051253915,-0.02586769,0.01057577,-0.009087613,0.031382628,-0.0017357285,-0.0010559357,-0.017792244,-0.05147276,-0.004872076,-0.050641146,0.013470019,-0.0029407535,0.004590311,-0.045651436,0.043375432,-0.021217195,-0.077778146,-0.010324096,-0.021392273,0.02507984,-0.03532187,-0.0047735954,-0.015724141,0.037050758,-0.020144846,0.03882342,-0.013929597,-0.040311575,0.015363044,0.033899367,0.02488288,-0.019674325,0.0034659859,0.03136074,-0.030682318,-0.018492553,0.01566943,0.0066638845,-0.03490606,0.04018027,-0.0244233,-0.002872364,-0.040705502,-0.029325468,-0.008507668,-0.023044566,-0.011188542,-0.019969769,-0.03416198,0.05650624,-0.006286374,-0.0073806075,0.0021228138,-0.022311429,0.025561303,-0.021545466,-0.00046744302,0.034840405,-0.03195163,-0.027771655,-0.04696452,0.00804809,0.055280697,-0.023941837,-0.022825718,0.016949683,0.023744876,-0.058738474,0.00944871,-0.0069319718,-0.03753222,-0.015384928,-0.0612771,0.008540495,0.028428197,0.0467019,-0.01815334,-0.03540941,-0.010411635,-0.009880932,-0.02306645,0.03639422,-0.0352781,0.011533225,0.0059198053,-0.03672249,-0.022388026,-0.036241025,-0.015220793,0.033549212,-0.030857395,-0.0014047228,0.028734582,-0.010302212,-0.030572895,-0.06771119,-0.0037696357,-0.009913759,0.035956524,-0.01707005,0.046658132,-0.032433093,-0.012714998,-0.038889073,0.009782451,0.03803557,-0.025626957,0.03906415,0.042697005,0.0101654325,0.028515736,-0.025298687,-0.052610766,0.006423153,-0.02405126,-0.026064651,-0.018350301,-0.0041334685,-0.0053508035,-0.023722991,0.019816576,-0.025977112,-0.057950627,0.006844433,-0.038998496,0.029413007,-0.026327267,0.007145347,0.033089634,0.048408907,0.015702257,0.0066912402,0.030485356,-0.0033100576,0.009569075,0.02993824,-0.039086033,-0.002477072,0.014618965,0.02993824,0.029631853,-0.06565403,0.011029878,0.029456776,0.04976576,-0.020473115,0.046614364,-0.032214247,-0.004748975,0.048014984,0.033286594,-0.04696452,-0.019094381,-0.02138133,0.004828307,0.027158884,0.00040007927,0.0027943999,-0.0074790884,0.035234332,-0.045345053,-0.016008642,-0.030485356,-0.028296888,0.014181271,-0.01169736,-0.022333313,0.022202006,0.020976463,0.0045465417,-0.0034331589,-0.0651288,0.04683321,-0.032170475,-0.012332016,0.050684914,0.034183867,-0.010395222,0.008693689,0.025014186,0.010231087,-0.033286594,0.009415883,-0.033111516,0.035059255,0.0008028941,0.012572748,-0.02240991,0.038144995,-0.08613809,0.035475064,0.00059601554,0.03022274,0.028931543,0.012474266,-0.016413508,-0.057863086,0.013470019,0.020276153,0.07458298,0.01089857,-0.0077635893,0.03153582,-0.0035781448,0.049328063,-0.015001946,0.03120755,-0.009842634,0.0016755456,-0.012321074,-0.008436543,-0.021436041,0.013021383,-0.0066912402,0.049109217,0.017146645,0.0037039816,0.033680517,0.024904763,0.033242825,-0.014772157,0.035803333,0.025802035,-0.048583984,-0.008584265,0.027071346,-0.016063353,-0.010066952,-0.027793542,-0.020341808,0.029413007,0.054098923,0.050597373,-0.014804984,0.011095531,0.024576493,0.01960867,0.04263135,0.04411951,0.096117504,-0.030310279,-0.013590385,0.02095458,-0.026874384,0.046745673,0.020265212,-0.031010589,-0.06057679,-0.021676773,-0.00082956604,0.021326618,0.012485209,-0.025145495,0.026743077,0.004426176,0.032214247,-0.028844004,0.05007214,-0.0038845304,-0.0032717593,-0.0214251,-0.027859194,-0.023307182,-0.0106468955,-0.02109683,0.02475157,-0.004234685,0.005085452,-0.02446707,-0.009065728,0.01239767,0.0030884752,0.006209777,-0.0039912183,0.004943202,0.026042767,0.031513937,-0.0023361894,0.029347353,0.02820935,0.0013780508,0.010931397,-0.0012200708,0.0011468938,0.016588585,-0.031732783,-0.018361244,-0.02488288,-0.032345552,0.006302787,-0.0031240378,-0.0013185518,-0.013951482,0.013656039,-0.026589883,0.011522283,-0.02179714,0.0019983447,-0.013645097,-0.0028094456,-0.00837636,0.00311036,-0.023241527,0.057381626,-0.019094381,0.031470165,-0.03864834,0.010581242,0.0062590176,-0.012857248,0.006062056,0.0006664568,-0.021545466,-0.03022274,-0.068761654,0.008365418,0.004661436,-0.022398967,-0.0048337784,0.0119599765,0.004959615,0.02919416,-0.02100929,0.0033182641,-0.024488954,-0.026130306,0.019422652,-0.01913815,-0.021446984,-0.012496151,0.019827519,0.0008767549,-0.021457927,-0.0124304965,0.0019067025,-0.03729149,0.002872364,-0.0154068135,-0.008589736,-0.0076651084,0.007331367,-0.025233034,-0.005947161,-0.012233535,0.0017507742,0.000054327003,0.015352101,0.042521928,0.026086535,0.0069702696,-0.04819006,0.0018601976,-0.018372187,-0.022672527,0.024532724,-0.015570948,-0.025911458,-0.012693113,0.013513789,-0.012572748,-0.027662233,-0.01496912,0.0048966967,0.0064723934,-0.019849403,0.007829243,0.032783248,0.029325468,-0.043090932,0.02278195,-0.00594169,-0.019729037,0.021206252,0.006204306,-0.026086535,-0.0147831,0.011106474,0.0042045936,-0.035672024,0.0024743364,-0.013097979,0.021698657,-0.08022923,0.013853001,0.012342958,0.004385142,0.0003262185,0.012901017,-0.019258516,-0.008042619,-0.01371075,-0.052479457,-0.0001001053,0.014465772,0.03322094,-0.008912535,-0.009853576,-0.01244144,0.002140595,0.053354844,0.0045738975,-0.012507093,-0.055499543,0.015363044,-0.020319924,-0.026042767,0.00039289836,-0.010860272,-0.027749771,0.030244624,-0.03696322,0.030901166,-0.03779484,0.025101725,0.033614866,0.0020763087,0.0021583764,0.00014763609,-0.0006797928,-0.014465772,-0.003214312,0.030660434,0.022891372,-0.047752365,-0.0027410558,0.029084736,-0.028340658,0.02507984,0.041471463,0.014542368,0.0043550506,-0.005493054,-0.007889426,-0.034402713,0.008824997,-0.008349004,0.0244233,-0.03392125,0.027399616,0.039414305,-0.008059032,-0.019050611,-0.00064183655,0.017299838,0.01286819,0.035956524,0.018656688,0.005493054,-0.033986904,-0.02549565,-0.021873735,-0.014542368,0.009158738,0.010006769,0.012342958,0.030616663,-0.0072438284,0.03359298,0.030332163,0.029653737,0.011314378,-0.0018123249,0.02910662,-0.022431795,-0.007697935,-0.0052550584,-0.039786343,0.023657337,0.028909659,0.014279752,-0.032673825,0.032695707,-0.012145996,0.010449934,0.0068006637,0.000167982,0.02273818,-0.02306645,0.00020858833,0.067361034,0.00425657,-0.045826513,-0.02179714,0.013940539,-0.04453532,-0.032695707,0.039655037,-0.011215897,0.002330718,-0.015056659,0.024860993,-0.005389102,-0.007293069,-0.035956524,-0.0022062492,-0.011916207,-0.015100428,0.005930748,-0.006937443,-0.03934865,-0.01043352,0.031798437,-0.029697508,0.005717372,0.04875906,0.021786196,-0.081104614,0.02002448,0.0015524443,0.0037258663,0.040683616,0.0022869487,-0.006620115,0.03186409,0.020998348,-0.028056156,-0.011500398,0.010488232,0.038013685,-0.028931543,0.027662233,-0.04066173,-0.00046949473,-0.01708099,-0.003682097,0.03022274,-0.036044065,-0.014618965,-0.02348226,0.023285298,-0.002430567,-0.03420575,0.02236614,0.036241025,-0.020516885,0.042784546,-0.023832414,-0.0067951926,0.040399116,0.0137435775,-0.017617166,0.014826869,0.004724355,0.010718021,0.06517257,-0.04473228,-0.033855595,-0.008075446,0.057994395,0.025364341,0.024204453,0.0013664246,0.0143344635,-0.016949683,0.034818523,-0.06420965,0.011204955,-0.032805134,0.0049650865,0.005230438,-0.0007892162,-0.008310706,0.06048925,0.0030200856,0.039173573,-0.03374617,-0.008245053,0.027618464,-0.01136909,-0.008130157,-0.02545188,0.019094381,0.021906562,-0.05103507,0.011226839,0.012452382,0.014257868,0.0008405084,-0.016216546,0.009207978,-0.00060353836,0.0044015558,-0.008491255,-0.012528978,0.036175374,0.0017015337,-0.01566943,-0.023526028,0.00031117277,-0.009383055,0.0060839406,-0.031842206,0.005876036,0.017660934,0.015636602,0.04326601,-0.049240526,-0.028428197,-0.017015336,-0.033549212,-0.033768058,-0.008502197,-0.029675623,-0.0029161333,-0.04046477,0.028975314,-0.018886477,0.050466068,-0.012375785,0.03457779,0.0037313376,-0.021983158,-0.016019585,-0.00031989242,-0.011303436,0.010274856,-0.0019272194,-0.022431795,0.03387748,0.0067295386,0.03149205,-0.0031896918,0.034315176,-0.052785844,0.00155518,0.022322372,0.013688866,-0.0012891443,-0.025802035,0.017201357,-0.029281698,0.009038372,-0.032258015,0.06617927,0.010663309,0.0054684337,-0.0045027724,-0.015789796,0.0026275292,-0.009738682,0.0322799,0.046351746,0.04304716,0.008693689,0.0066638845,-0.056725085,0.011166656,-0.014301637,0.016205603,-0.0358471,-0.03910792,-0.03503737,-0.011817726,-0.0066091726,-0.054755464,0.030047663,-0.017201357,0.010909512,0.019083438,-0.007648695,-0.028318772,-0.00959096,0.017059106,0.03864834,0.014848754,-0.0041389395,-0.005298828,0.045038667,-0.010077894,-0.016041469,0.021053059,-0.016172776,0.004234685,-0.006264489,0.03223613,-0.06320295,-0.0074079633,0.035103023,0.0012631562,0.0033975963,-0.037597876,0.010099779,-0.011500398,0.03317717,-0.00094651233,0.028296888,-0.024073146,0.044710398,0.006937443,0.018744227,0.012036573,0.00034468368,-0.028668927,0.0075338003,-0.01829559,-0.007894898,-0.043856893,0.02746527,-0.015308332,0.028450081,0.037466567,-0.031382628,0.024729686,0.006062056,-0.008124687,0.049152985,-0.010466347,0.0039556553,-0.010696136,-0.027881078,0.025561303,-0.032433093,-0.0022828456,0.016358797,0.009826221,-0.05033476,-0.014323521,0.007845657,-0.039655037,-0.03223613,0.045651436,0.051122606,-0.010187318,-0.03157959,-0.012813479,0.05987648,0.022716295,0.010553886,-0.0077417046,0.0028450082,-0.034358945,0.014564253,-0.032017283,-0.0028805707,-0.019006843,0.002338925,-0.015538122,0.014137502,0.019313227,0.009432296,0.032126706,0.035081137,-0.009164209,0.041099425,0.0023567062,0.0136232115,-0.011992804,-0.02405126,-0.014618965,-0.038910955,-0.0071179913,-0.04473228,-0.042040467,0.029128507,-0.031382628,0.0044425894,-0.017737532,-0.0068061347,-0.015472467,-0.0014334464,-0.027946733,-0.021556407,0.026786845,-0.01829559,-0.008868766,0.018678572,0.0067514232,0.018328417,0.029719392,0.011730188,-0.009240805,0.011795841,0.010641425,0.001165359,-0.04024592,0.0027041256,-0.059307475,0.005876036,-0.006904616,0.024620263,0.0015620189,-0.024598377,-0.0030857394,0.004675114,0.032345552,0.0013910448,-0.028012387,0.0071672318,0.015702257,0.0027027577,0.020484058,-0.01492535,-0.01702628,-0.0070359237,0.042937737,0.011861496,0.016304085,0.0060839406,0.0075994544,0.00085487025,0.021578291,0.0010237925,0.01622749,0.009705855,-0.03206105,-0.0038243474,-0.0039200927,0.013885828,-0.027640348,0.014618965,0.044228934,-0.03400879,-0.031448282,0.001824635,-0.002107768,-0.021304734,0.033571094,0.011806783,-0.00009386475,-0.0032717593,0.041340157,0.028318772,0.00030399184,0.0125508625,-0.011708302,0.00040691823,0.008179398,0.00837636,-0.004814629,-0.02545188,0.021206252,0.004010367,0.018612918,-0.008004321,0.030047663,-0.013404365,0.0030583837,0.012178823,-0.012944787,-0.0047079413,0.044425897,0.011522283,0.0010826077,0.037882376,0.003115831,-0.041055657,-0.00687726,0.0018260028,0.008409187,0.032258015,-0.0325644,-0.001363005,0.01061954,-0.010548415,0.019860346,-0.028887775,0.018809881,0.0040568723,0.014159386,-0.028931543,-0.005881507,0.0058924495,0.0038900014,0.05637493,0.030441586,-0.003616443,0.026174074,-0.0016030526,-0.019925999,0.009629258,0.005558708,0.018678572,-0.009213449,0.018908361,-0.030660434,-0.0013199196,-0.001981931,0.009361171,-0.0013363331,-0.012299188,-0.011035348,-0.0016454542,-0.024073146,-0.056024775,0.008753871,-0.01759528,-0.00029886264,0.020812329,0.010121663,-0.021950332,0.0135685,-0.016708951,0.015034773,-0.027749771,-0.011620764,-0.018941188,-0.013535673,0.029478662,-0.0028696284,-0.00865539,-0.0061112964,-0.0033811827,-0.013010441,-0.024620263,-0.05300469,-0.0004913794,0.025189264,-0.014214098,0.031229435,-0.0063410853,-0.03232367,-0.05357369,-0.026502345,-0.026983807,0.018645745,-0.038998496,0.014017136,0.035256214,0.007429848,-0.04234685,0.037160184,0.015789796,-0.02746527,0.005788497,-0.015483409,-0.01015449,-0.00009933592,0.0099958265,0.008529553,0.00053446484,0.026874384,-0.025648842,0.014060905,-0.040027075,-0.0028176522,-0.003950184,-0.0023225115,0.0066693556,-0.033571094,-0.019477364,-0.048452675,-0.012528978,0.019302286,-0.0006209777,-0.015702257,0.01973998,0.0022185592,-0.009229863,0.013995252,-0.009913759,0.00804809,0.015932046,0.026502345,0.018820822,0.05296092,0.021436041,0.008945362,-0.017945435,0.0018027503,-0.02578015,-0.029697508,-0.02648046,0.013316826,-0.01609618,0.018240878,-0.018087687,-0.03125132,0.00088291,-0.0172123,0.033396017,0.01169736,0.007128934,0.023153989,-0.0072875977,-0.0039091506,-0.0054711695,0.014257868,-0.008239581,-0.020374635,0.00407055,-0.005244116,-0.015833564,-0.006516163,-0.0044207047,0.04379124,-0.011949034,0.00079331954,-0.040158384,-0.005788497,-0.024335762,-0.02923793,0.00062679086,-0.014203155,0.008086388,-0.057819318,0.048014984,-0.011566052,0.036503643,0.01941171,0.0034222165,0.00034844512,-0.008157514,-0.025802035,-0.004658701,0.032630056,-0.039436188,-0.008294293,-0.009984884,-0.011927149,-0.015417756,-0.0030994175,-0.041055657,0.022388026,0.004943202,-0.02025427,0.011587936,0.026086535,0.0032307256,0.025845805,-0.027968617,-0.06250264,-0.006652942,-0.07178174,0.016643297,0.010263914,0.014520484,-0.03326471,0.002965374,0.02853762,-0.008885179,-0.03803557,0.0013493272,-0.02586769,0.007615868,0.013010441,-0.034927946,0.00061516464,0.020046365,0.023329066,-0.027224539,-0.02273818,0.013305884,0.032126706,-0.0076596374,-0.023876183,0.029347353,-0.0026453105,-0.019291343,-0.010356924,-0.010750848,-0.0051729907,0.050378527,0.0007345045,-0.039414305,0.056199852,-0.0075775697,-0.029303584,-0.005810382,0.024313876,0.033614866,-0.036481757,0.007500973,-0.029960124,-0.007397021,0.018317476,-0.01174113,-0.021337561,-0.011155714,-0.0056681316,-0.025298687,-0.027684117,0.028318772,-0.0053863665,-0.040420998,0.01665424,-0.01543964,-0.03289267,0.0061112964,0.018350301,0.0325644,-0.03840761,0.014629907,0.022377083,0.00020790444,0.021228136,0.020834213,0.0059909304,0.011620764,-0.013776405,-0.0101052495,0.012167881,0.015209851,-0.012200708,-0.025057957,-0.0028149167,0.014991004,-0.011927149,-0.0037532223,0.0016372474,-0.018229937,-0.00636297,0.042215545,0.006209777,0.0062426045,0.029303584,0.00034365783,-0.042697005,-0.0068170773,-0.012999498,0.017606223,-0.008157514,0.026414806,0.008365418,-0.014060905,0.006100354,-0.0023170402,0.017671878,0.013666981,0.006149594,-0.00047188837,0.0162822,0.030003892,0.010925925,0.027443387,0.03457779,0.012528978,-0.01566943,-0.021118714,0.047752365,-0.05291715,-0.041996695,-0.018601976,-0.002581024,0.0067678364,-0.003807934,-0.0030255567,-0.01693874,-0.00921892,-0.020779502,-0.018601976,0.011500398,-0.020998348,-0.009366642,0.014378233,0.017726589,-0.008841409,-0.0028067098,-0.023985608,-0.011905265,-0.008912535,-0.020757617,-0.01862386,-0.012047515,0.008381831,0.0021734221,-0.017059106,0.0021378594,-0.0012310131,-0.014881581,-0.03343979,0.012233535,-0.023547914,-0.007276655,-0.017398318,0.03652553,-0.021085886,-0.013010441,-0.036656834,-0.0024907498,0.020768559,-0.035234332,-0.03433706,-0.030901166,0.008387303,-0.011609822,-0.022431795,0.027771655,0.011046291,-0.051297683,-0.0021638474,-0.020013537,-0.0004701786,-0.039830115,-0.01566943,0.039458074,-0.008381831,0.005222231,-0.018656688,0.007462675,0.007271184,0.003682097,0.020998348,0.020670079,0.005722843,0.022978911,-0.010734434,-0.021654889,0.015899219,-0.0006815025,0.017649993,-0.012474266,0.023679221,-0.008277879,0.033111516,0.01636974,-0.024357647,0.0060565844,-0.0023662809,0.026130306,-0.028275004,-0.014356349,-0.015581891,0.0051866686,0.0014471243,-0.013557558,0.0035261686,0.0047134124,0.0089836605,0.0012706791,-0.031404514,-0.04552013,-0.026064651,-0.018875534,0.016785547,0.010504645,-0.01566943,-0.010942339,-0.017113818,-0.025276802,-0.021260964,0.022475565,0.010657838,0.012802537,-0.01239767,0.037751067,-0.0742766,-0.028712697,-0.030660434,0.0075228577,0.0063957972,-0.012474266,0.04300339,0.020505942,-0.007260242,0.029040968,-0.02381053,0.04766483,0.016719894,0.02643669,0.03273948,0.017037222,0.010920454,-0.02109683,-0.016599528,-0.024554608,0.013360595,0.005498525,-0.03055101,-0.003939242,0.008223168,0.013174576,0.026633652,-0.0021583764,0.018744227,-0.008250523,0.0022842132,0.011101003,0.0020516885,0.011675475,0.036613066,-0.036197256,-0.0154068135,0.004828307,0.007840185,-0.0014006194,0.011675475,-0.030988704,0.028559504,-0.05217307,-0.011511341,-0.03980823,0.00074955024,0.007697935,-0.007435319,-0.0094049405,0.0295662,0.029785046,0.017048163,0.006067527,0.007883955,0.012408612,0.036941335,0.0066802977,-0.022103524,-0.0017165794,0.034796637,0.0098152775,-0.030747972,0.010045067,0.00795508,-0.004289397,-0.02578015,0.011730188,0.00093420217,-0.006160537,0.016030526,0.027574694,-0.0050471537,0.028734582,-0.0044918302,0.006417682,-0.011752072,-0.0428502,0.00622072,0.00706328,-0.014378233,0.0295662,0.038144995,0.015888276,-0.04024592,-0.0113581475,-0.016577642,-0.0030857394,-0.006942914,0.030901166,0.0042839255,0.05217307,0.025233034,0.04116508,0.023941837,-0.0077417046,0.013699808,0.019783748,0.0189959,-0.008737458,-0.015560006,0.006078469,0.006576346,0.029478662,0.02578015,0.003504284,-0.01169736,0.027093232]},{"id":"longest-increasing-subsequence","name":"Longest Increasing Subsequence","description":"Given an integer array `nums`, return the *length* of the longest strictly *increasing* subsequence.\n\nA **subsequence** is a sequence that can be derived from the given sequence by deleting some or no elements  without changing the relative order of the remaining characters.\n\n* For example, `\"cat\"` is a subsequence of `\"crabt\"`.\n\n**Example 1:**\n\n```java\nInput: nums = [9,1,4,2,3,3,7]\n\nOutput: 4\n```\n\nExplanation: The longest increasing subsequence is [1,2,3,7], which has a length of 4.\n\n**Example 2:**\n\n```java\nInput: nums = [0,3,1,3,2,3]\n\nOutput: 4\n```\n\n**Constraints:**\n* `1 <= nums.length <= 1000`\n* `-1000 <= nums[i] <= 1000`\n","difficulty":"Medium","concepts":["Tree Maze","1-Dimension DP"],"solutions":{"python":"class Solution:\n    def lengthOfLIS(self, nums: List[int]) -> int:\n        LIS = [1] * len(nums)\n\n        for i in range(len(nums) - 1, -1, -1):\n            for j in range(i + 1, len(nums)):\n                if nums[i] < nums[j]:\n                    LIS[i] = max(LIS[i], 1 + LIS[j])\n        return max(LIS)\n","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {number}\n     */\n    lengthOfLIS(nums) {\n        const LIS = new Array(nums.length).fill(1);\n\n        for (let i = nums.length - 1; i >= 0; i--) {\n            for (let j = i + 1; j < nums.length; j++) {\n                if (nums[i] < nums[j]) {\n                    LIS[i] = Math.max(LIS[i], 1 + LIS[j]);\n                }\n            }\n        }\n        return Math.max(...LIS);\n    }\n}\n","cpp":"class Solution {\npublic:\n    int lengthOfLIS(vector<int>& nums) {\n        vector<int> LIS(nums.size(), 1);\n\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            for (int j = i + 1; j < nums.size(); j++) {\n                if (nums[i] < nums[j]) {\n                    LIS[i] = max(LIS[i], 1 + LIS[j]);\n                }\n            }\n        }\n        return *max_element(LIS.begin(), LIS.end());\n    }\n};\n","java":"class Solution {\n    public int lengthOfLIS(int[] nums) {\n        int[] LIS = new int[nums.length];\n        Arrays.fill(LIS, 1);\n\n        for (int i = nums.length - 1; i >= 0; i--) {\n            for (int j = i + 1; j < nums.length; j++) {\n                if (nums[i] < nums[j]) {\n                    LIS[i] = Math.max(LIS[i], 1 + LIS[j]);\n                }\n            }\n        }\n        return Arrays.stream(LIS).max().getAsInt();\n    }\n}\n","csharp":"public class Solution {\n    public int LengthOfLIS(int[] nums) {\n        int[] LIS = new int[nums.Length];\n        for (int i = 0; i < LIS.Length; i++) LIS[i] = 1;\n\n        for (int i = nums.Length - 1; i >= 0; i--) {\n            for (int j = i + 1; j < nums.Length; j++) {\n                if (nums[i] < nums[j]) {\n                    LIS[i] = Math.Max(LIS[i], 1 + LIS[j]);\n                }\n            }\n        }\n        return LIS.Max();\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def lengthOfLIS(self, nums: List[int]) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {number}\n     */\n    lengthOfLIS(nums) {}\n}\n","cpp":"class Solution {\npublic:\n    int lengthOfLIS(vector<int>& nums) {\n        \n    }\n};\n","java":"class Solution {\n    public int lengthOfLIS(int[] nums) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int LengthOfLIS(int[] nums) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/cjWnW0hdF1Y","embedding":[-0.028877316,-0.006996798,0.019189443,-0.05121325,0.002903257,-0.0031853025,-0.06806353,-0.03283113,-0.01624996,0.041649576,0.0048413496,-0.038378887,-0.040055633,-0.034073163,0.0883501,0.037012648,0.005542582,0.011757933,0.0064792833,0.05406993,0.018558076,0.03601902,0.021073196,-0.03405246,0.067773715,-0.031340685,0.015804896,0.053904325,0.03955882,-0.011250768,0.034590676,-0.007664392,-0.016850276,0.050426625,-0.019603454,0.01836142,0.027780186,-0.019303296,0.0029550085,-0.026765857,-0.04347123,-0.012492803,-0.04454766,-0.074480705,0.046493515,0.009558495,0.039331112,0.0076850923,0.032272212,-0.0024452566,0.010722904,0.021797717,-0.0058530904,0.044754665,0.021135299,-0.02935343,-0.033679854,0.047114532,0.05899667,-0.021300903,0.01092991,0.0019730246,0.0066707637,0.032065205,-0.014914772,0.017419543,0.019292945,0.0043988745,-0.0037079924,-0.031319987,-0.04102856,-0.010262315,-0.0068363682,-0.018889284,0.016425915,0.033162337,0.031982403,0.03750946,0.055974383,0.0067328652,0.03579131,0.01626031,0.04529288,-0.015504738,0.018651228,0.011105864,-0.035874113,0.0026173303,-0.032769028,-0.053697318,0.019241193,-0.05266229,-0.007845522,0.035501502,0.0021541547,-0.010490022,0.045417085,-0.004541191,0.017109035,0.052745093,0.026082737,-0.011457774,0.030885274,-0.013258725,0.017036581,0.010443445,0.04487887,-0.017574796,-0.020824788,-0.019313646,0.0023262282,0.011478474,0.0062050004,-0.017202187,0.02864961,-0.0068311933,-0.04525148,-0.016084354,0.0424776,-0.004274671,0.02048323,-0.007033024,0.028277,-0.034135267,-0.02513051,-0.009025455,0.0034518226,-0.043885242,0.054939352,-0.007700618,0.015525439,-0.037343856,0.03392826,0.012337549,-0.051668663,-0.008854675,-0.011240418,-0.01734709,0.019023838,0.039372515,0.058085844,0.022004722,-0.0046058805,0.017481644,0.046038102,-0.0049215644,-0.024882104,0.044382054,-0.040407542,0.015525439,0.0211767,-0.03314164,0.019913964,0.02303975,0.00282563,-0.036702137,0.006603487,-0.016446615,0.026310444,-0.004898276,0.02229453,-0.030885274,-0.015991202,0.015484038,0.021425106,0.022025423,-0.0028722063,-0.03370055,-0.0065155094,-0.03436297,0.04276741,-0.038710095,0.023847075,-0.029332729,0.027469676,-0.02440599,-0.056719605,-0.03738526,-0.033120938,-0.0123893,-0.03396966,-0.007141702,-0.03922761,-0.021549309,-0.008321635,0.052910697,0.001945855,-0.03678494,0.0056150337,-0.01630171,0.032458518,0.028194197,0.022108225,0.024550894,-0.024654398,-0.0023973866,0.015960151,0.04810816,-0.0025254714,-0.010163987,-0.018858233,0.04744574,0.018195815,-0.0043729986,0.024116183,-0.028256299,0.0027169518,0.022418734,0.0069760974,-0.028277,0.005987644,-0.016736424,0.042684607,-0.033307243,0.016022254,0.035936218,0.012347899,0.0071468772,-0.016229259,0.04628651,0.009496394,-0.008916778,0.0047197333,0.030802472,0.047197334,0.013186273,-0.0033379693,0.03746806,-0.0012860239,0.008673545,-0.024261085,-0.01840282,-0.03386616,-0.034445774,-0.013341527,-0.017823204,-0.034135267,-0.022191027,-0.0063809557,0.012399651,0.025151212,0.012285798,-0.014469709,0.031361386,-0.0176783,-0.015680693,-0.03254132,0.04910179,0.0021567421,-0.035522204,0.0010033315,0.017978458,0.012617007,-0.087770484,-0.027366174,0.058955267,-0.018599477,-0.0023676294,-0.010350293,-0.0022770644,-0.034135267,0.0014956173,-0.03328654,-0.04558269,-0.0006510981,-0.046534915,-0.00049552025,0.04665912,0.023784973,0.023991978,-0.015628941,-0.030367758,0.015266682,-0.008502766,-0.021124948,0.013972895,0.0055374065,-0.0147905685,0.017926708,-0.052496683,-0.022004722,-0.013631335,0.037985574,0.034756284,-0.006970922,-0.0095222695,0.00070770126,-0.00670699,0.002249895,-0.019655205,-0.027386874,-0.027800886,-0.014562862,0.0014542161,0.0035812012,0.011054113,-0.034549277,-0.010572824,0.020980043,-0.027034964,-0.0048413496,-0.008326811,0.017367791,-0.03641233,-0.06918135,0.0061118477,0.0070899506,0.014883721,-0.04566549,0.021404406,0.016125755,0.033348642,-0.0005207491,-0.0017194424,0.019945014,-0.053159103,-0.024364589,-0.003182715,0.020369377,-0.0138797425,0.0353773,0.019955365,0.03421807,0.039124105,0.01839247,0.016870977,0.016829576,0.039827928,0.0028152796,-0.03784067,0.012192645,-0.010992011,-0.02227383,0.02620694,-0.04732154,0.004952615,0.011261119,-0.00016309797,0.0004007504,0.04384384,0.061894752,0.017699001,0.013703788,0.03570851,-0.01732639,-0.019065239,0.019706957,-0.0058530904,0.011840735,-0.011830385,-0.0045955298,0.014159201,0.031941004,0.016063655,-0.02796649,0.012078792,0.030926675,-0.019644856,-0.045499887,-0.0025526409,-0.013610635,-0.009113433,0.021487208,-0.0042048064,-0.02050393,0.0005456545,0.03753016,-0.050426625,-0.01520458,0.053490315,0.030160753,0.030347059,0.023847075,-0.005050943,0.0063447296,0.017212536,-0.00849759,0.008916778,-0.011830385,-0.025979234,-0.04371964,0.024468092,0.006091147,-0.011385322,0.02434389,0.058127243,-0.020089919,-0.042808812,-0.033472847,-0.018620176,-0.022708543,-0.008000776,0.071872436,0.0042022187,0.048356567,-0.041442573,0.049225993,0.045913897,-0.017947407,-0.017595498,0.013455381,-0.009486043,0.021073196,0.017046932,0.005516706,-0.045417085,-0.0035009866,0.05336611,0.02229453,-0.027386874,-0.003182715,0.02896012,0.00198855,-0.0013921143,0.015504738,0.024964906,-0.0052838246,0.016446615,-0.039103407,-0.017119383,0.0086528445,-0.022025423,0.022708543,-0.023101853,0.029829543,0.012503154,0.018682279,-0.07104441,-0.030574765,-0.015773846,-0.007001973,-0.000004978046,0.005646085,0.0074418606,-0.12362389,0.029539736,-0.01449041,0.079283245,-0.048853382,-0.08300935,0.011023061,-0.029477634,0.02759388,-0.018682279,0.030243555,-0.032727625,0.019065239,0.04162888,0.029995149,0.012420352,0.051420253,-0.035439402,0.045748293,0.013155222,-0.01807161,-0.028359802,0.01908594,-0.014904422,-0.021839118,-0.031796098,-0.03349355,0.005703011,-0.011167966,-0.014221302,0.026434647,-0.035605006,-0.009118608,-0.0068829446,0.040842254,0.011199017,0.008388912,-0.046617717,0.007835171,0.035687808,-0.018547725,-0.008538991,-0.032230813,0.019179093,0.01556684,-0.0020053692,-0.013382928,-0.05158586,-0.02902222,-0.0025241775,0.0042539705,0.011799334,0.041483972,-0.0031180256,0.027366174,-0.017636899,-0.04914319,-0.0102260895,0.008037003,-0.006577611,-0.0010557298,0.015732445,-0.005371802,-0.01132322,-0.017036581,-0.020835139,0.032272212,-0.08205712,0.034673482,-0.011768282,0.031941004,-0.026683055,-0.013538183,-0.019986415,-0.008073228,0.052952096,0.00050166575,0.033100236,0.032334313,0.0035915517,0.015546139,0.031319987,-0.0013177217,-0.032458518,-0.0059565934,-0.0002912637,0.005635734,-0.000044918652,0.009491218,0.015742796,-0.0015201992,-0.015277032,-0.03746806,-0.034176666,-0.0564712,0.015411586,0.007917974,-0.0150389755,-0.029146424,0.03579131,-0.007607465,0.022832746,0.029105023,-0.018640878,-0.028546108,-0.040097035,-0.0076592164,0.028670311,0.0080059515,-0.012451402,-0.018454572,-0.022708543,0.051503055,0.007152052,-0.037198953,-0.015804896,0.0037209303,-0.015484038,0.008580392,-0.0072607305,-0.013569234,-0.028214898,0.0026522626,0.026062038,-0.005790989,0.020017466,-0.036350228,-0.027718084,0.028194197,-0.0054287286,-0.0042591454,-0.018620176,0.0029860595,0.042270597,0.018351069,0.0063757803,-0.049598604,0.0076540415,0.027759485,-0.023350261,0.004142705,-0.00565126,-0.020762688,-0.020648833,-0.031092279,0.054980755,-0.019179093,-0.012140893,-0.0030274605,-0.023163956,-0.03641233,0.025668725,-0.046410713,0.0011378853,0.00955332,-0.006867419,-0.00069088204,-0.007535013,0.007933499,0.0007503962,-0.032044508,-0.0565954,-0.006054921,0.022687841,0.0047378466,-0.01695378,0.012047741,0.017843904,0.020586733,0.01341398,-0.015152829,-0.032085907,0.010153637,0.032686226,0.00424362,0.034611378,-0.029332729,-0.02016237,-0.0022201377,-0.022004722,-0.010484846,-0.018713329,0.021984022,0.011757933,0.0016224084,-0.013206974,-0.007100301,-0.029684639,-0.003146489,0.0212388,0.007845522,-0.0069088205,-0.04371964,0.0038632466,-0.026455348,0.0049448526,-0.023991978,0.004044377,0.008068053,-0.007736844,0.00092311675,0.04628651,-0.0211767,-0.0059255427,-0.0075091375,-0.027718084,0.05551897,0.01699518,-0.019386098,-0.06806353,0.027925089,-0.009051331,-0.015960151,-0.026331145,-0.005084581,-0.015256331,-0.0033509072,-0.0026457936,0.031961706,0.008228483,0.012213346,-0.0048517,0.014656015,-0.030222856,0.0069864476,-0.01659152,0.003570851,-0.019127341,0.05162726,0.017823204,0.029829543,-0.054690946,0.04848077,-0.028421903,0.07530873,0.031733997,-0.0047404342,0.022087526,0.041587476,-0.025358217,0.008181906,-0.011633729,-0.029125724,0.02337096,-0.0565954,-0.0123686,-0.013010318,0.0146663645,0.012275447,0.017864605,-0.020462528,0.021145647,0.025730828,0.024592295,-0.015680693,0.0042772586,-0.006862244,-0.009993208,-0.001473623,-0.03042986,0.02618624,-0.035211697,-0.007949024,0.03463208,-0.000007631319,-0.04200149,0.002000194,0.0026910761,-0.0020765276,0.0054339035,-0.054235533,0.0060238703,-0.005291587,-0.015763495,0.014407608,0.015359835,0.0046369312,0.016353462,-0.010898858,0.00093282014,-0.03297603,0.014034997,0.02372287,-0.028090695,0.019334346,-0.04500307,-0.05017822,0.013424329,-0.04142187,-0.010898858,0.01449041,0.034011062,0.01273086,-0.010220914,0.03425947,0.017968109,-0.0031853025,0.0073021315,-0.013631335,0.028194197,0.029581137,-0.04458906,-0.017336741,0.016291361,-0.041815184,-0.017761102,-0.047114532,0.012472102,0.028359802,0.012596306,0.02689006,0.008057703,-0.046700522,0.019282596,-0.060611315,0.015970502,-0.021777015,0.0027997543,0.029436233,0.022232428,0.0388964,0.028939418,0.015691044,0.010733253,0.060569912,0.028090695,-0.012999968,0.039641622,-0.023888476,-0.0019717307,0.05373872,0.017937057,-0.0352945,0.030512663,-0.014521461,-0.005873791,-0.009718925,-0.030823171,0.017015882,-0.021445807,0.006789792,-0.03436297,-0.048273765,-0.023598667,0.003400071,-0.013134521,-0.04417505,-0.02185982,0.027241971,0.007560889,0.025648026,-0.0023029402,0.008808099,0.01981046,0.030471262,-0.03500469,0.0006863538,-0.0044118124,-0.020431478,-0.040241938,0.034197368,0.04566549,-0.02546172,-0.0031076754,0.015618592,-0.04984701,0.0028540932,0.0247786,0.023971278,-0.018578775,0.0046058805,-0.0012575606,0.019520652,-0.017947407,-0.020948993,0.0011644079,-0.008109454,0.019137692,-0.0074470355,-0.0024167933,0.020390077,0.02794579,0.014314455,-0.014604263,0.008347511,-0.004041789,0.007462561,0.02510981,-0.030678269,0.0074832616,0.028815215,-0.009817253,0.020038167,0.010526247,0.03643303,0.017616197,0.019375747,0.017812854,-0.059286475,0.023101853,-0.0047611347,0.012523854,0.02616554,-0.009325614,-0.032272212,-0.0073021315,-0.018682279,0.042684607,-0.0042539705,-0.04736294,-0.0014658602,0.042643204,0.0049862536,-0.0070433742,0.011820034,-0.010024259,-0.011954588,-0.006080797,0.012627357,-0.0049500274,-0.00054824207,0.036929846,0.028856616,0.01941715,-0.022812044,-0.03318304,0.02225313,-0.017077982,-0.0050949315,-0.032355014,-0.015297732,0.0006902352,-0.05763043,-0.01807161,-0.017481644,-0.031733997,0.038440987,0.06578646,-0.010671152,-0.007281431,0.021942621,0.009998383,-0.010764305,-0.0021088722,0.0066086617,0.011447424,0.018413171,0.029808844,-0.01976906,0.05237248,-0.023101853,-0.071251415,0.030554064,0.024509493,0.031651195,0.0194482,0.03256202,-0.0025461721,-0.0050716433,-0.0021425106,0.0012265097,-0.002745415,0.010143287,-0.0002461429,0.053490315,-0.019882912,-0.026413947,-0.034073163,0.011261119,0.002321053,-0.016022254,0.021487208,0.017533395,-0.0038658343,0.007467736,-0.0058168643,0.008595918,0.02084549,0.015370185,0.009998383,0.042332698,0.04384384,0.036888443,-0.0036950544,0.0212388,-0.018257916,0.017750751,-0.0029550085,-0.010691852,-0.014945823,0.034549277,0.0142109515,0.0028851442,-0.00096775236,0.018299317,-0.017160784,0.0459553,-0.014014296,0.012109842,-0.01873403,-0.033410747,0.022108225,0.013931494,-0.003746806,0.017636899,0.0194689,-0.00846654,0.0026755508,0.01451111,-0.04028334,0.020265874,-0.028918717,0.012151244,-0.039807227,-0.01092991,0.01728499,0.045417085,-0.0388343,-0.00247372,-0.012109842,-0.036847044,-0.0010803118,-0.009341139,0.012399651,0.019034188,0.011851085,0.036619335,-0.008414788,0.022667142,-0.030347059,-0.020120969,-0.03363845,0.031299286,0.020669535,-0.015742796,-0.034238767,0.015132128,-0.010888508,-0.007824821,0.020452179,-0.01132322,0.008130155,-0.017171135,0.0008526054,0.0011158909,-0.008927127,0.036764238,0.008575218,-0.013507132,0.011851085,0.0034285344,-0.01520458,-0.029829543,-0.022170328,0.02444739,0.022522237,0.0159084,0.03678494,-0.00689847,-0.015152829,0.002771291,-0.0212388,-0.027738785,0.046120904,0.027055666,0.011985639,-0.012140893,-0.040241938,-0.007829997,-0.0017000355,-0.007902448,-0.039351813,0.008197431,0.03218941,-0.057009414,0.011064463,-0.015763495,-0.015173529,-0.0022317818,0.037364557,0.03078177,0.011613028,0.009299738,0.010722904,0.017730052,0.0039175856,0.022501536,0.012078792,-0.0029601837,0.010396869,-0.03860659,-0.025234014,0.010867807,0.054276936,0.013569234,0.025834331,-0.0055270563,-0.021611411,-0.016736424,0.025896432,-0.007426335,0.04138047,-0.037654366,-0.0045308406,-0.01875473,-0.0016663971,0.02297765,0.016384514,0.031568393,0.012451402,-0.032769028,-0.017233238,-0.020835139,-0.0026755508,-0.016125755,0.00635508,-0.010940259,0.013051719,0.0025604037,-0.00072904874,-0.0024698386,0.0050794063,0.0141695505,0.0052087847,0.027738785,-0.0069916225,-0.004484264,-0.026683055,-0.00973445,-0.0016780412,0.014055697,-0.021445807,0.008399262,-0.0159084,-0.047487143,0.008575218,0.0018164763,-0.00654656,-0.029539736,0.04421645,-0.002993822,-0.008026652,-0.041939385,-0.011613028,0.021155998,0.028256299,-0.011726881,-0.027883688,-0.034756284,-0.007390109,0.020576382,0.02260504,-0.023867775,-0.005583983,0.0064637577,-0.0034052464,0.027097067,0.049018987,0.025689427,0.011261119,-0.0006261927,0.0012446227,0.012451402,-0.016808875,0.0020027817,-0.0036122522,0.016808875,-0.0146249635,-0.0495158,-0.061894752,0.009087557,-0.036681436,-0.015432286,0.06686289,-0.009134133,-0.033886857,0.012202995,0.02581363,-0.029850245,-0.002613449,-0.035211697,-0.034466475,-0.004189281,0.0033198565,0.016777825,-0.009506743,0.0036562409,-0.0029757093,0.006794967,0.045044474,-0.04479607,0.0013228968,-0.014076398,0.039724424,-0.0016754536,0.027842287,-0.012140893,-0.053241905,-0.05411133,0.010743604,-0.03601902,-0.003151664,0.01911699,-0.013765889,0.024116183,0.03074037,0.005257949,-0.011157615,-0.012265096,-0.010505547,0.018268267,0.02759388,0.016363813,0.054690946,0.024157584,-0.003661416,0.032292914,-0.016736424,0.041939385,0.02088689,-0.011706181,-0.0036640037,-0.03968302,-0.0023935053,-0.028877316,0.002431025,-0.019323997,0.011261119,-0.0019859625,0.011095514,0.011343921,-0.023805674,-0.008378562,0.005713362,-0.0048724003,-0.0064120064,0.008016301,0.01702623,-0.008383737,-0.03784067,0.051047646,-0.021342304,-0.004036614,0.01628101,0.018609826,-0.009072032,0.015411586,0.01092991,0.000830611,0.0139625445,0.004807711,0.0030533364,-0.0035372125,-0.015339134,0.035108194,0.007141702,0.035832714,-0.015732445,0.012523854,-0.030140052,0.013859042,-0.021042146,0.009486043,-0.01627066,-0.039434616,-0.0024038556,0.011737232,-0.013827991,-0.030533364,0.04781835,-0.036226023,-0.033369344,0.011074813,-0.005219135,0.0039615748,-0.022087526,0.009009929,-0.0056409095,-0.02790439,-0.048315167,0.02157001,-0.004388524,-0.020980043,0.010402044,-0.00883915,-0.010505547,0.0033483198,0.04384384,0.011395672,0.0013261313,-0.0007685092,-0.015504738,0.009630947,0.031237183,0.03997283,-0.0071261767,-0.034901187,-0.0142109515,-0.02722127,-0.002066177,0.03810978,-0.013631335,-0.002672963,-0.025565224,0.036205325,-0.0007452211,-0.013610635,-0.018206164,-0.008130155,-0.015846299,0.02581363,0.0039667496,-0.028587509,-0.00056894263,0.020607432,-0.00035902578,-0.028090695,0.018775431,0.0247372,-0.0017479056,-0.006080797,-0.0044169873,-0.021031795,0.002916195,0.02579293,-0.01273086,-0.02019342,-0.015121778,0.037571564,0.009874179,0.005977294,-0.022894848,-0.010505547,-0.012627357,-0.018495973,0.0047274963,0.013062069,-0.0038425461,0.010329592,-0.012410001,0.024923505,0.019572403,-0.00045800046,0.040821556,-0.002503477,-0.014904422,0.009848303,0.028918717,0.021363005,-0.01132322,0.025585923,0.021652812,0.026269043,-0.020296924,0.036515832,-0.027386874,0.0013934082,0.002242132,0.013765889,0.0012523854,0.013134521,0.0035501504,0.020390077,-0.027345473,0.004460976,0.020710936,-0.008047353,0.004378174,0.021166349,0.0009205292,0.03210661,0.038565192,-0.004996604,0.00024193809,-0.005019892,0.0014697416,0.006572436,0.012658408,-0.016136106,-0.0006261927,0.017585147,-0.02303975,0.017005531,-0.0030300482,-0.024944205,0.02293625,-0.009491218,0.013496782,-0.013869393,-0.010847107,-0.025585923,0.025544522,0.038068376,-0.01308277,0.028318401,-0.05551897,-0.009506743,0.0150803765,-0.011871786,-0.059907496,0.005972119,0.029270628,0.018309668,0.01664327,0.0071054758,0.013424329,-0.011281819,-0.0036665911,0.007503962,-0.02196332,-0.010003558,0.010774654,0.043595433,0.025710126,-0.022108225,-0.04628651,0.024882104,0.01698483,-0.0030559239,0.05804444,0.029995149,-0.0034362972,-0.022480836,0.026269043,-0.03570851,-0.006189475,0.01630171,-0.00093087944,0.003837371,-0.001600414,0.018102663,-0.038047675,0.010992011,-0.010567649,-0.0049914285,-0.050054014,0.028069993,-0.007897274,-0.023971278,0.00724003,-0.031299286,-0.026413947,-0.012575606,-0.012979267,-0.018537374,-0.0123893,0.030926675,0.032934632,-0.012606656,-0.002273183,0.01131287,0.043264225,0.026952162,0.03107158,0.016736424,0.020741986,0.0056719603,0.027635282,-0.02796649,0.027718084,0.00035482098,-0.011364621,-0.007881748,0.02192192,0.0074470355,0.007462561,0.01843387,0.062391564,0.018144064,0.01519423,0.007674742,-0.0010951903,-0.014645664,-0.0061273733,0.027655981,0.011726881,-0.0066966396,0.031278584,-0.026041336,-0.039476015,-0.012037391,-0.009434292,-0.0028747937,-0.024654398,-0.015349484,-0.007467736,-0.021425106,-0.0054701297,-0.040573146,-0.014449009,0.022894848,-0.017471295,0.001157939,0.036991946,-0.008430313,-0.061397936,-0.036847044,-0.00936184,0.018464923,-0.010339943,0.03038846,0.02869101,0.028090695,0.041235566,-0.007136527,0.013558883,-0.015101077,0.02794579,-0.0010926027,0.0388136,0.0042539705,-0.021466507,0.038316783,-0.011933887,0.020907592,0.028732413,-0.013476081,0.011540577,0.0077575445,0.013620986,0.046866126,-0.017378142,0.0060652713,-0.025668725,0.007928324,0.015308083,0.03786137,0.015463337,-0.010536598,0.007886923,0.01096096,-0.023867775,0.03152699,-0.003169777,-0.011209367,-0.02618624,-0.0036588286,-0.002667788,0.01273086,-0.004551541,-0.03558431,0.009025455,-0.021673514,0.008259534,0.01200634,0.014966523,0.003498399,0.0049629654,0.049681406,0.04272601,0.020980043,0.030636866,-0.032023806,-0.012606656,0.017119383,-0.0011230068,-0.004036614,-0.018558076,0.025171911,0.012948216,-0.02050393,-0.0017362616,0.013538183,-0.0045075524,0.024364589,0.005413203,0.015929101,0.018309668,0.032644823,0.025648026,-0.021042146,-0.040842254,-0.012917166,-0.036288127,0.038668692,0.036515832,0.022770643,0.008699421,-0.03599832,-0.016808875,0.010531423,-0.008787398,-0.016653622,-0.014355856,0.041256268,0.015101077,0.01693308,-0.021611411,0.034880485,-0.00469127,0.012627357,0.021984022,0.009718925,0.003964162,-0.023950577,0.015328784,-0.02048323,0.03748876,0.045085873,-0.00830611,0.01941715,0.02935343]},{"id":"longest-common-subsequence","name":"Longest Common Subsequence","description":"Given two strings `text1` and `text2`, return the length of the *longest common subsequence* between the two strings if one exists, otherwise return `0`.\n\nA **subsequence** is a sequence that can be derived from the given sequence by deleting some or no elements  without changing the relative order of the remaining characters.\n\n* For example, `\"cat\"` is a subsequence of `\"crabt\"`.\n\nA **common subsequence** of two strings is a subsequence that exists in both strings.\n\n**Example 1:**\n\n```java\nInput: text1 = \"cat\", text2 = \"crabt\" \n\nOutput: 3 \n```\n\nExplanation: The longest common subsequence is \"cat\" which has a length of 3.\n\n**Example 2:**\n\n```java\nInput: text1 = \"abcd\", text2 = \"abcd\"\n\nOutput: 4\n```\n\n**Example 3:**\n\n```java\nInput: text1 = \"abcd\", text2 = \"efgh\"\n\nOutput: 0\n```\n\n**Constraints:**\n* `1 <= text1.length, text2.length <= 1000`\n* `text1` and `text2` consist of only lowercase English characters.\n","difficulty":"Medium","concepts":["Tree Maze","2-Dimension DP","LCS"],"solutions":{"python":"class Solution:\n    def longestCommonSubsequence(self, text1: str, text2: str) -> int:\n        dp = [[0 for j in range(len(text2) + 1)] for i in range(len(text1) + 1)]\n\n        for i in range(len(text1) - 1, -1, -1):\n            for j in range(len(text2) - 1, -1, -1):\n                if text1[i] == text2[j]:\n                    dp[i][j] = 1 + dp[i + 1][j + 1]\n                else:\n                    dp[i][j] = max(dp[i][j + 1], dp[i + 1][j])\n\n        return dp[0][0]\n","javascript":"class Solution {\n    /**\n     * @param {string} text1\n     * @param {string} text2\n     * @return {number}\n     */\n    longestCommonSubsequence(text1, text2) {\n        const dp = Array(text1.length + 1)\n            .fill()\n            .map(() => Array(text2.length + 1).fill(0));\n\n        for (let i = text1.length - 1; i >= 0; i--) {\n            for (let j = text2.length - 1; j >= 0; j--) {\n                if (text1[i] === text2[j]) {\n                    dp[i][j] = 1 + dp[i + 1][j + 1];\n                } else {\n                    dp[i][j] = Math.max(dp[i][j + 1], dp[i + 1][j]);\n                }\n            }\n        }\n\n        return dp[0][0];\n    }\n}\n","cpp":"class Solution {\npublic:\n    int longestCommonSubsequence(string text1, string text2) {\n        vector<vector<int>> dp(text1.size() + 1, vector<int>(text2.size() + 1));\n\n        for (int i = text1.size() - 1; i >= 0; i--) {\n            for (int j = text2.size() - 1; j >= 0; j--) {\n                if (text1[i] == text2[j]) {\n                    dp[i][j] = 1 + dp[i + 1][j + 1];\n                } else {\n                    dp[i][j] = max(dp[i][j + 1], dp[i + 1][j]);\n                }\n            }\n        }\n\n        return dp[0][0];\n    }\n};\n","java":"class Solution {\n    public int longestCommonSubsequence(String text1, String text2) {\n        int[][] dp = new int[text1.length() + 1][text2.length() + 1];\n\n        for (int i = text1.length() - 1; i >= 0; i--) {\n            for (int j = text2.length() - 1; j >= 0; j--) {\n                if (text1.charAt(i) == text2.charAt(j)) {\n                    dp[i][j] = 1 + dp[i + 1][j + 1];\n                } else {\n                    dp[i][j] = Math.max(dp[i][j + 1], dp[i + 1][j]);\n                }\n            }\n        }\n\n        return dp[0][0];\n    }\n}\n","csharp":"public class Solution {\n    public int LongestCommonSubsequence(string text1, string text2) {\n        int[,] dp = new int[text1.Length + 1, text2.Length + 1];\n\n        for (int i = text1.Length - 1; i >= 0; i--) {\n            for (int j = text2.Length - 1; j >= 0; j--) {\n                if (text1[i] == text2[j]) {\n                    dp[i, j] = 1 + dp[i + 1, j + 1];\n                } else {\n                    dp[i, j] = Math.Max(dp[i, j + 1], dp[i + 1, j]);\n                }\n            }\n        }\n\n        return dp[0, 0];\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def longestCommonSubsequence(self, text1: str, text2: str) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {string} text1\n     * @param {string} text2\n     * @return {number}\n     */\n    longestCommonSubsequence(text1, text2) {}\n}\n","cpp":"class Solution {\npublic:\n    int longestCommonSubsequence(string text1, string text2) {\n        \n    }\n};\n","java":"class Solution {\n    public int longestCommonSubsequence(String text1, String text2) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int LongestCommonSubsequence(string text1, string text2) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/Ua0GhsJSlWM","embedding":[0.037061773,-0.012271353,0.05011438,-0.032774422,-0.021684472,0.037538145,0.02684835,-0.0043635713,-0.025209628,0.010089568,0.0015101006,-0.028182192,-0.027419996,-0.039939065,0.007783925,0.016596815,0.015005731,-0.03304119,-0.016368156,0.023647126,-0.01758767,0.004916163,0.027324721,0.0330793,0.047637243,-0.028944388,-0.004401681,0.047103703,0.030602165,-0.043368943,0.0057307603,-0.0061690225,-0.018273646,0.038300343,-0.054611333,0.03517534,-0.021112826,0.032031283,0.004639867,-0.018492777,0.0019221627,-0.006540593,-0.017606724,-0.035080064,-0.0070360205,-0.023609016,0.038529,0.021417703,0.025514506,0.039672293,0.0076219584,0.047637243,-0.015710762,0.0031631128,0.018950095,-0.00050644344,0.0042349505,0.062157072,0.023456577,-0.021570142,0.014853292,0.033536617,-0.019054897,-0.04794212,-0.0019495541,0.002210368,0.048247,0.012595287,-0.020884167,-0.045274433,-0.022808712,-0.033441342,-0.01814979,-0.042111322,-0.019512214,0.015929893,0.017273264,0.031783566,0.041577782,0.012490485,-0.016711144,-0.05171499,0.005221042,0.028468015,-0.003367953,0.02560978,-0.025971824,0.039977174,-0.022903986,-0.06371957,-0.030373504,-0.043826263,-0.016149025,-0.023208864,0.041425344,0.028906278,0.044702787,-0.0010069322,-0.0221799,0.015558323,-0.010632632,0.011461521,-0.003003528,0.041311014,-0.029020607,-0.02669591,0.014948566,0.038967263,-0.05522109,-0.016568232,-0.005144822,-0.005216278,0.006612049,0.02576222,0.07541928,-0.07137964,-0.002106757,-0.021189045,0.02490475,0.01340512,0.028468015,-0.014691325,-0.018588051,-0.042759188,-0.06341469,0.0052591516,-0.046875045,-0.06528208,-0.006645395,-0.01912159,0.011785453,-0.038338453,-0.02113188,0.030335395,-0.04424547,-0.03751909,-0.018759545,-0.002006719,0.0227706,0.062004633,-0.021532033,0.0016458667,-0.027134173,0.037271377,0.006545357,-0.00097299065,0.03121192,-0.030525943,-0.04637962,0.024390267,0.024218773,-0.017930657,0.007131295,0.05114334,0.0017994968,-0.056593042,-0.0077791614,-0.015005731,0.00821266,0.008755725,0.0187786,-0.04988572,-0.04039638,0.020807946,-0.009012966,0.011956948,-0.016234772,-0.03427976,-0.01870238,-0.044855226,0.02490475,-0.045198213,-0.038147904,-0.038548056,0.056288164,-0.024847586,-0.036947444,-0.025038134,-0.041349124,0.019435994,0.0012885873,0.032545764,-0.004249242,-0.007540975,0.019531269,0.015672652,0.04420736,-0.026981734,-0.0038252706,-0.0046541584,0.033060245,0.024447432,-0.0024235446,-0.01108995,-0.01706366,-0.0006544166,0.07217995,0.017520977,-0.015177225,0.0152153345,0.031516798,0.0035608837,-0.018016405,0.032621983,-0.028067863,-0.0141482605,-0.019293083,0.03144058,-0.034413144,-0.033060245,0.020121971,-0.00617855,0.021189045,0.017940186,0.014729435,-0.010289644,0.035975646,0.02318981,0.011690179,-0.00006844132,0.007398064,0.014557941,0.009784689,0.03875766,0.02852518,0.039405525,-0.0064215,0.0006174977,0.03326985,-0.015262972,0.0037752513,0.014119678,0.021817857,-0.015539268,0.023513742,-0.04988572,0.006750197,0.014653215,-0.010403973,0.008655687,0.0035346833,-0.003984855,0.039748516,0.04973328,-0.011337663,-0.057698227,-0.03748098,0.014615105,-0.042797297,-0.031154756,-0.0035632655,0.03311741,0.0017423321,-0.054497004,0.032355215,-0.016291937,0.010737434,0.0012159406,0.01769247,0.008203133,-0.050571695,0.04801834,-0.03408921,-0.036718786,0.012404738,-0.04607474,0.009517921,0.0071932236,0.028029753,0.024695145,0.005559266,-0.0038729077,0.01336701,0.050266817,-0.061013777,-0.02128432,-0.019502686,-0.050647914,-0.0132145705,-0.0028367976,-0.02576222,0.0072408607,-0.0042563877,-0.02782015,0.017311374,-0.025457341,0.03256482,0.007955419,0.020846058,-0.019254973,-0.02206557,0.012976385,0.027248502,0.017206572,-0.007769634,0.008884345,-0.02591466,0.01646343,0.007960183,-0.050571695,0.0023497068,-0.008450846,0.014138733,0.06330036,-0.052553404,0.002105566,-0.0034084446,0.042949736,-0.04409303,0.026791185,-0.005302025,-0.008874818,-0.0028439432,0.006145204,-0.032088447,-0.04737047,-0.0016744491,0.0040539294,-0.017578142,-0.03326985,0.048513766,-0.04984761,0.060099144,0.008279352,-0.00452792,0.02599088,-0.013052604,0.02766771,0.01149963,-0.048551876,-0.0011659215,0.00004391558,0.01754956,0.01101373,-0.06387201,-0.018321283,0.013986294,0.042111322,0.0182927,0.02650536,-0.037728693,-0.018873874,-0.016815946,0.05289639,-0.02225612,-0.037118938,0.009041549,0.011299553,-0.012004585,-0.004061075,-0.013014494,0.0012552413,0.030259175,-0.002539065,-0.029668475,0.031345304,-0.0062309513,0.06528208,0.01519628,-0.030182956,-0.039710402,-0.028849114,-0.016368156,0.009436937,-0.030735549,-0.018168844,-0.032831587,0.03633769,0.019512214,0.056021396,0.010918456,0.027648656,-0.0072789704,0.03416543,-0.042797297,0.0035465925,-0.060022924,0.019626543,-0.024275938,0.035289668,-0.0012397591,0.010261062,-0.0009908546,-0.026105208,0.022751546,0.005887963,0.004508865,-0.011794981,-0.0014755635,-0.032869697,0.023323193,0.0016172844,0.08986289,0.045617424,-0.027191337,0.045655534,0.0012230861,0.0077124694,0.01710177,0.028811004,0.066730246,-0.045807973,0.0057450514,0.004365953,-0.035118174,0.022942096,-0.014939039,0.04919974,0.026962679,-0.000448981,0.03629958,0.040205833,-0.003329843,-0.023856731,0.032164667,0.019512214,-0.017835382,0.043940593,0.031573962,-0.0424162,0.04413114,0.01101373,0.026962679,0.016673034,0.016120443,0.05945128,0.0031821677,-0.015101005,0.016101388,-0.010651687,-0.041311014,0.025362067,0.034565583,0.008341281,-0.03300308,0.08666167,-0.016720671,0.05674548,-0.05739335,-0.05483999,-0.02774393,-0.0517531,-0.029325485,0.0076791234,0.054687552,-0.015062896,0.01743523,0.029592255,0.0014993822,0.021417703,0.009984766,-0.002281824,0.036566347,0.022808712,0.011842618,0.0008181696,0.00711224,-0.023399413,-0.0037847788,-0.003851471,-0.04622718,-0.02494286,-0.0003200627,-0.07126531,-0.010394446,0.009070131,0.042797297,0.021817857,0.03622336,0.013643306,-0.0069169276,0.012290408,-0.035080064,-0.0057736337,-0.021150935,0.022713436,0.05304883,0.014453139,-0.03382244,0.01340512,-0.010184842,-0.017339956,-0.021512978,0.014081568,-0.029782804,-0.0036704494,0.025743166,-0.003191695,0.028086917,-0.045846082,-0.017082715,0.023570906,-0.0011176887,-0.0029201629,-0.045769863,0.03786208,0.041082356,0.0022187044,-0.009036785,-0.013471812,0.028105972,-0.010499248,-0.0017649598,-0.070541225,0.031459633,0.024104444,0.014576996,-0.035937537,0.037957355,0.033536617,-0.020655507,-0.060175363,0.012728671,-0.0013552795,0.025705056,0.008860527,-0.02782015,-0.020693617,0.006835944,-0.02692457,-0.005011438,-0.020522123,0.00013971109,0.018549941,-0.022046516,-0.013805272,-0.047522914,0.0027748693,-0.020865113,-0.0064357915,0.0044088266,0.010280116,0.012033167,0.002901108,-0.00019501496,0.002053165,0.029820913,-0.01340512,-0.011718761,-0.024371212,0.00051597087,-0.023304138,0.0009569131,-0.0015410647,-0.014538886,-0.021875022,0.021608252,0.01340512,-0.006369099,-0.012480957,-0.01202364,0.003625194,0.004111094,-0.007440937,-0.016549177,0.0024652272,-0.009984766,0.002677213,0.011432938,-0.022713436,-0.019016787,-0.048285108,-0.0021543943,-0.011880728,-0.040968027,0.052019868,0.024180664,0.0014660361,0.02751527,0.026200483,0.001398153,-0.027801095,-0.02486664,-0.019702762,-0.012738198,0.006631104,-0.032126557,0.01198553,0.0030630745,0.0025938477,0.026028989,0.06330036,0.00869856,-0.0065024835,-0.015053368,0.007474283,-0.0533156,-0.017568614,-0.018197427,0.012214188,0.004161113,-0.005868908,0.031897895,-0.001536301,-0.010985148,-0.024066335,0.01325268,-0.00041325306,-0.0031369124,0.035594545,0.00645961,0.01650154,-0.0028701439,-0.0022353774,-0.015910838,-0.01463416,0.066730246,0.03245049,0.00020484014,0.020026697,-0.0038085973,-0.043407053,0.031345304,0.009298789,0.00036948634,0.020693617,-0.017406648,-0.004658922,0.029287376,-0.031554908,0.028811004,-0.014977149,0.021398649,-0.011032785,-0.02961131,-0.02206557,-0.040205833,0.010356336,-0.011413883,0.02926832,-0.0043921536,0.020541178,0.0045684115,0.024961915,-0.025343012,0.007007438,0.025190573,0.021684472,0.016825473,-0.036128085,-0.01702555,0.0113471905,-0.02296115,-0.013938657,0.019950477,0.016006114,0.013062132,0.02557167,0.013757635,-0.0041849315,-0.023570906,0.034603693,0.065434515,0.016987441,0.030125791,-0.007236097,0.000019557321,-0.07088421,0.007826799,-0.019569378,-0.0010319417,0.013586141,0.026105208,0.0018590434,0.00046327218,-0.02650536,0.022275174,-0.0022067952,0.029001553,-0.010651687,0.020293465,-0.026486306,0.065396406,0.014062514,-0.030849878,0.024885695,0.0011700897,-0.023647126,-0.007650541,-0.025343012,0.008117386,0.040129613,0.014576996,0.0056688315,-0.009370245,0.008822417,-0.009022494,0.01754956,-0.036204305,0.00784109,-0.024752311,0.0028653801,-0.017235154,0.011585377,0.025362067,0.00051299355,0.024790421,0.04931407,-0.01153774,-0.05510676,0.010527831,-0.027953533,0.01628241,0.026105208,-0.010632632,-0.0030678383,-0.039748516,-0.020102916,0.015234389,0.033879604,0.015834618,0.04058693,-0.008750961,-0.020141026,-0.022865877,0.01679689,-0.008393682,0.00046476084,-0.0024283084,-0.040205833,-0.013871965,0.0057783974,0.004725614,-0.022618162,-0.028029753,-0.021417703,0.047751572,-0.013957712,0.02942076,0.020141026,-0.018178372,-0.013109769,0.0062642973,0.0010742198,0.01687311,-0.043330833,0.0029153991,0.009455993,-0.008460374,0.007321844,-0.003020201,0.007217042,-0.016530123,-0.0076791234,-0.00007748495,-0.0055497386,-0.041006137,0.0123475725,-0.036871225,0.017911602,-0.02116999,0.00072765886,0.0025485924,-0.025095299,-0.0026367214,0.012442848,0.022808712,0.028067863,-0.010451611,0.016291937,-0.0011736625,0.024314048,-0.050686024,0.011356718,-0.009665596,0.0003400108,-0.04054882,0.04256864,-0.0034108264,-0.005130531,-0.012566704,-0.050876573,-0.0031202394,0.016977914,0.003091657,0.0074838107,-0.061471097,0.034413144,0.032240886,-0.007064603,-0.0015315373,0.020464959,-0.018721435,0.047561023,-0.0012552413,-0.01945505,0.010222952,-0.021055661,0.015882256,-0.017263737,0.021875022,-0.01153774,-0.0077601066,0.023875786,0.0043445164,0.008145968,-0.021703526,-0.027934479,-0.016644452,-0.011480575,0.0043945354,-0.009860909,0.010461139,-0.03128814,-0.036566347,0.01657776,-0.009775162,-0.00038824353,-0.04051071,-0.023875786,0.0010920838,0.0118712,0.010966093,0.0017328047,0.051448222,0.031783566,-0.018892929,-0.022713436,0.030049572,0.028144082,0.014176843,0.015910838,-0.031707346,0.03359378,-0.03509912,-0.0030749838,0.033479452,0.008374627,0.034070157,0.01392913,0.034889515,-0.02681024,0.010022876,0.021017551,0.019093007,0.020788891,-0.043750044,-0.03035445,-0.004949509,0.0005585466,-0.0241235,0.024218773,-0.016892165,-0.004382626,-0.052362856,0.027343776,0.005387772,-0.037919246,-0.009451228,-0.0365854,-0.0075886124,-0.0041325307,-0.0241235,-0.009927601,0.01250954,0.037023664,0.0241235,0.03058311,0.004075366,-0.030926097,0.02669591,-0.00922257,-0.011080422,-0.031516798,0.0041825497,0.020331575,-0.020217245,0.018245064,-0.036128085,0.0010384918,0.016530123,0.02673402,-0.0012129633,-0.023609016,0.01194742,0.011652069,0.00095334026,0.010127678,0.014491249,0.010175315,0.03187884,0.003937218,-0.02751527,0.006283352,-0.023570906,-0.02116999,0.012557177,0.059679937,0.03790019,-0.018511832,0.004354044,-0.041577782,0.0012647688,-0.018845292,-0.014872347,0.014919984,-0.009432173,0.018083097,0.011880728,-0.010451611,0.0001890603,0.008403209,-0.028125027,0.021970296,-0.025171518,0.03191695,-0.065510735,0.026371976,-0.017597197,0.005221042,0.021341484,-0.018216481,-0.0369665,0.013624251,-0.033384178,0.005349662,0.009365481,0.024390267,0.0478659,0.024218773,0.008303171,-0.021074716,-0.026562525,-0.04790401,0.056173835,-0.0158632,0.01717799,0.04256864,0.026943624,0.0098799635,0.005268679,0.03820507,0.021684472,0.0053734807,0.035232503,-0.012176079,-0.027286611,-0.015024786,0.019531269,0.01231899,-0.02591466,0.00011566918,-0.016234772,-0.040968027,-0.0043278434,-0.044931445,-0.0075886124,-0.03296497,0.008846235,0.012604814,0.02650536,-0.050609805,-0.019016787,-0.050381146,-0.015301082,0.02459987,0.0012189179,0.0103468085,0.0023032606,0.010489721,0.05377292,0.0058450894,0.01941694,-0.009594141,-0.017311374,-0.010718379,-0.022942096,0.008331753,0.019893313,-0.0548781,-0.014386447,0.0026200484,-0.013757635,0.041844554,-0.039824735,-0.018216481,0.039214976,0.01937883,0.007626722,-0.060137253,0.0028987261,-0.037461925,-0.013128824,0.049580842,0.02206557,0.013024022,0.002244905,0.013900547,-0.00556403,0.023361303,0.03304119,0.02553356,0.008422264,0.0011236435,-0.0060213474,-0.011585377,-0.011480575,-0.0047732517,0.04062504,0.01564407,-0.0068121254,-0.044855226,0.0389101,-0.03517534,-0.032069393,-0.018921513,-0.0016601578,0.028315576,-0.019855201,-0.0050828937,-0.017120825,-0.020255355,-0.03128814,-0.007155114,0.03367,-0.03020201,0.007612431,-0.019988587,0.021227155,-0.017301846,-0.0038895807,-0.00886529,-0.0286014,-0.001399344,-0.018121207,0.0019578906,-0.005140058,0.041654002,-0.037214212,0.041806445,0.030221066,0.0017697235,-0.016377684,0.034451254,0.012004585,0.019798037,0.02225612,0.008650923,0.026791185,-0.0053734807,0.0138147995,0.016139498,0.0056974143,0.01941694,-0.00950363,0.0066739777,-0.0040158196,-0.016272882,0.018826237,-0.0041682585,-0.009627487,0.029249266,-0.021989351,0.017273264,0.021551087,-0.02318981,0.0017077951,-0.008712851,0.0054258816,-0.011432938,-0.012042695,-0.006645395,0.0178068,-0.029192101,-0.012947802,0.032545764,0.012871583,-0.038852934,-0.005721233,-0.03319363,0.03229805,0.015377302,-0.035403997,0.03024012,-0.016806418,-0.038986318,-0.030449724,0.02206557,0.028468015,0.0015744108,-0.033498507,-0.014443612,0.0021901221,0.005702178,0.019626543,0.013595669,-0.024733257,-0.01008004,-0.008789071,0.007288498,0.030945152,-0.007388536,-0.015929893,0.02560978,0.009765634,-0.014996204,0.011318608,-0.04253053,0.024066335,0.002177022,0.013157406,0.04439791,0.021150935,-0.019817092,-0.028105972,-0.026219537,-0.043178394,0.032031283,-0.0072313333,-0.022675326,0.03614714,-0.00048589986,-0.018254591,0.023285083,0.021303374,-0.02116999,0.006092803,-0.0077934526,-0.0038038336,0.035861313,0.0015636925,-0.003868144,0.0069836196,0.010375391,-0.024790421,0.027096063,-0.03323174,0.012909693,-0.014138733,-0.015586905,0.022599107,-0.03031634,-0.03626147,-0.03315552,-0.0036680675,0.01206175,-0.0015160552,0.0016911221,-0.007336135,-0.008641396,-0.017330429,0.011490103,0.011995058,-0.012909693,0.005063839,0.012709616,0.020884167,0.056478713,0.02038874,-0.020102916,0.0036799768,0.0021901221,0.01008004,-0.028220301,0.004935218,-0.025781276,-0.015777454,0.005506865,-0.013652833,0.022541942,0.029668475,-0.0046875044,0.024923805,0.005368717,0.002884435,0.0059880014,-0.026429141,0.009475048,-0.018435612,-0.011213806,0.0042563877,-0.045121994,0.034965735,-0.014605578,-0.008512775,0.01056594,0.00042397145,0.025266793,0.005421118,-0.005140058,-0.000119316406,0.013767162,-0.0015898929,-0.00812215,-0.015815563,-0.02501908,-0.021703526,-0.007369481,0.052362856,-0.008331753,0.037766803,0.010718379,-0.017816328,0.009203515,0.0056497767,0.03475613,0.009208279,-0.0142149525,-0.01508195,0.0052400967,0.0046327217,-0.013509922,-0.021627307,-0.010480193,-0.022942096,0.005354426,0.00300591,-0.0142149525,0.0040848935,-0.040929917,0.022846822,0.027686765,-0.024542706,-0.024961915,0.011966475,-0.04599852,-0.028429905,-0.007383772,0.0005126958,-0.0389101,-0.02595277,0.00369665,0.028849114,-0.03184073,-0.012843,-0.024542706,0.019369302,0.006788307,-0.022370448,-0.003729996,0.011804508,0.0021496306,-0.06360524,-0.01206175,-0.007383772,0.006402445,-0.0016172844,0.007217042,0.024256883,0.035785094,-0.018016405,-0.0017709144,-0.011737816,-0.0039562727,0.02961131,-0.030525943,0.004027729,0.026867405,0.024390267,-0.019254973,-0.049618952,-0.0058307983,0.0021567761,-0.03681406,0.018673798,-0.017073188,0.0084460825,0.010356336,-0.013576614,0.050838463,-0.015224862,-0.03218372,0.026562525,-0.019969532,-0.01437692,-0.056440603,-0.001345752,0.014119678,-0.034584638,0.0036323396,0.009113004,0.021627307,0.011004203,-0.011718761,0.038357507,-0.03359378,0.02498097,0.025343012,0.0045183925,0.00027436073,-0.0059880014,0.009117768,0.026162373,-0.039100647,0.028849114,0.029592255,0.003984855,-0.0065691755,0.005821271,-0.024447432,-0.010261062,0.037423816,0.02871573,-0.0005734333,0.012176079,0.007988765,0.028105972,0.00030517607,-0.0017482868,-0.013900547,0.0048971083,-0.003053547,0.0002599207,-0.043978702,0.0075743212,0.0037919243,0.012071277,0.01710177,0.026067099,0.007869672,0.016854055,-0.008050694,-0.039443634,-0.017330429,-0.02128432,-0.07259916,0.024790421,-0.022122735,-0.033765275,0.009317844,0.012890638,0.029439814,0.0061023305,-0.033022135,-0.009012966,0.014662743,0.031078536,0.009698942,0.0012540504,-0.018578524,-0.019893313,-0.0024628453,-0.0043254616,-0.009713233,-0.012157024,-0.021932187,0.0020638835,0.0084175,0.0066977963,0.0061356765,-0.00860805,-0.030144846,0.013004967,-0.014195898,-0.02404728,0.015510686,-0.006159495,0.019112062,-0.058117434,-0.034660857,0.024618926,-0.010089568,-0.012309463,0.015205807,-0.039634183,0.009375009,-0.02206557,0.037099883,-0.003608521,0.0010039549,-0.02661969,-0.015205807,-0.031516798,0.009294026,0.011594905,0.0024235446,0.012014112,-0.018016405,-0.02035063,0.0042921156,-0.0034536999,-0.022046516,0.00079494645,-0.027953533,-0.012557177,-0.048780534,-0.008951037,0.008703324,-0.012147496,0.010089568,0.019435994,0.021036606,-0.039062537,-0.010613577,-0.04996194,0.010775544,0.011194752,-0.017616251,0.046684496,-0.009408355,-0.0033798623,0.04260675,0.06230951,-0.004737524,0.008474665,0.0018804801,0.0022544325,0.029134937,-0.014996204,0.00067704427,0.0069502736,-0.0032702966,0.028201247,0.008808126,-0.017016023,0.014329283,0.017892547,0.014005349,0.027229447,-0.032621983,-0.026753075,-0.018750018,-0.007059839,0.007826799,-0.044664677,-0.034775186,0.008674742,0.012709616,-0.041844554,0.016996969,-0.009751343,-0.06048024,-0.035194393,0.029287376,0.0014493631,-0.012928748,-0.021741636,0.030602165,-0.025705056,-0.041615892,-0.0066739777,0.006354808,-0.018054515,-0.0041372944,-0.0014481721,0.022560997,-0.04451224,0.01377669,0.011880728,0.01243332,-0.00078005984,-0.005216278,0.007407591,0.010499248,0.010232479,0.0044397907,-0.002674831,-0.05106712,0.021970296,-0.00007469371,-0.03229805,0.0071741687,-0.0030416378,0.04226376,0.057622008,-0.021817857,0.018769072,-0.04043449,-0.0356136,0.004513629,0.04916163,0.012700088,0.03887199,-0.00041950546,-0.023456577,-0.02677213,0.03374622,-0.013462285,-0.0122808805,-0.01582509,-0.0064119725,-0.007864908,-0.012642924,0.015796509,-0.016472958,0.006754961,0.0424162,0.024885695,0.0020984204,-0.02740094,-0.048628096,0.017701998,0.008998675,0.026143318,0.020445904,0.023628071,-0.019064425,0.0020341102,-0.028925333,0.029039662,0.041730225,-0.009432173,0.012052222,-0.0033941534,-0.009794217,0.02397106,-0.011623487,-0.007183696,0.031783566,0.035556436,0.0056735952,0.0020317284,0.0018566615,-0.0023782894,-0.041577782,-0.003694268,0.05160066,-0.019740872,0.016072806,0.039329305,-0.007321844,0.008279352,-0.011509158,0.0033488981,0.014615105,0.00056390587,-0.015777454,-0.009022494,0.018540414,0.055792738,0.059070177,0.035556436,0.046913154,-0.028982498,0.014415029,0.025400177,0.025514506,-0.0005650968,-0.027057953,0.0039610364,0.0014136351,0.0025747928,0.041082356,0.011966475,0.02031252,0.03300308]},{"id":"jump-game","name":"Jump Game","description":"You are given an integer array `nums` where each element `nums[i]` indicates your maximum jump length at that position.\n\nReturn `true` if you can reach the last index starting from index `0`, or `false` otherwise.\n\n**Example 1:**\n\n```java\nInput: nums = [1,2,0,1,0]\n\nOutput: true\n```\n\nExplanation: First jump from index 0 to 1, then from index 1 to 3, and lastly from index 3 to 4.\n\n**Example 2:**\n\n```java\nInput: nums = [1,2,1,0,1]\n\nOutput: false\n```\n\n**Constraints:**\n* `1 <= nums.length <= 1000`\n* `0 <= nums[i] <= 1000`\n","difficulty":"Medium","concepts":[],"solutions":{"python":"class Solution:\n    def canJump(self, nums: List[int]) -> bool:\n        goal = len(nums) - 1\n\n        for i in range(len(nums) - 2, -1, -1):\n            if i + nums[i] >= goal:\n                goal = i\n        return goal == 0\n","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {boolean}\n     */\n    canJump(nums) {\n        let goal = nums.length - 1;\n\n        for (let i = nums.length - 2; i >= 0; i--) {\n            if (i + nums[i] >= goal) {\n                goal = i;\n            }\n        }\n\n        return goal === 0;\n    }\n}\n","cpp":"class Solution {\npublic:\n    bool canJump(vector<int>& nums) {\n        int goal = nums.size() - 1;\n\n        for (int i = nums.size() - 2; i >= 0; i--) {\n            if (i + nums[i] >= goal) {\n                goal = i;\n            }\n        }\n\n        return goal == 0;\n    }\n};\n","java":"class Solution {\n    public boolean canJump(int[] nums) {\n        int goal = nums.length - 1;\n\n        for (int i = nums.length - 2; i >= 0; i--) {\n            if (i + nums[i] >= goal) {\n                goal = i;\n            }\n        }\n\n        return goal == 0;\n    }\n}\n","csharp":"public class Solution {\n    public bool CanJump(int[] nums) {\n        int goal = nums.Length - 1;\n\n        for (int i = nums.Length - 2; i >= 0; i--) {\n            if (i + nums[i] >= goal) {\n                goal = i;\n            }\n        }\n\n        return goal == 0;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def canJump(self, nums: List[int]) -> bool:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {boolean}\n     */\n    canJump(nums) {}\n}\n","cpp":"class Solution {\npublic:\n    bool canJump(vector<int>& nums) {\n        \n    }\n};\n","java":"class Solution {\n    public boolean canJump(int[] nums) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public bool CanJump(int[] nums) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/Yan0cv2cLy8","embedding":[-0.0009078553,0.014011121,0.01545833,-0.03962135,0.03106674,0.021397244,-0.047168273,-0.014504245,-0.00040401236,0.04948381,0.011052384,-0.026307033,-0.03769174,0.0129498355,0.011030944,0.012317352,-0.014257683,0.012617514,0.017527303,0.0067965197,0.010634302,0.06770791,0.028794087,-0.020282358,0.08095791,-0.008409889,0.02928721,0.052571185,0.018417068,0.0071181213,0.038356382,-0.006394517,-0.044509698,0.046868112,-0.017516581,0.009626616,0.0021091723,-0.010001819,-0.01882443,-0.05685921,-0.009910698,0.00027788413,-0.018277707,-0.036319572,0.021868927,0.036662612,0.04294457,0.017655943,-0.016155135,0.03955703,0.011545507,0.024355981,0.010484221,0.020668281,-0.021461565,-0.027572,-0.02219053,0.04170104,0.011481186,-0.025042066,0.026692955,-0.01716282,0.00052762806,0.0052260305,-0.003079338,0.036533974,0.019049551,-0.017227141,0.010082219,-0.026564315,-0.06483494,0.01552265,0.012896235,-0.00345186,-0.013357198,0.018224105,0.04763996,0.029887535,0.021654526,-0.005847794,0.009728457,-0.007734525,0.029908974,-0.03286771,0.023476936,0.021922527,-0.031602744,0.018234827,-0.021225724,-0.057545297,0.004974109,-0.0011611168,-0.013046316,0.033510916,0.059474908,0.0023088334,0.027807841,-0.02219053,0.023198215,0.028879847,0.009760617,-0.021547325,0.019049551,-0.010843343,0.017152099,0.011899269,0.038613666,0.02570671,0.0062926766,-0.03258899,0.0031382982,-0.000112644404,-0.015844252,0.008061487,0.022898054,-0.02240493,-0.017720263,-0.040393196,0.020989882,-0.031559862,0.008806531,-0.03428276,-0.041593842,-0.06174756,-0.022662211,-0.0031650984,0.013389358,-0.035547726,0.03269619,0.023712778,0.0017272701,-0.0066839587,0.042129844,0.03263187,-0.031602744,-0.03231027,-0.014686486,0.0041969046,-0.010478861,0.032138746,0.0625194,-0.021933248,-0.03949271,0.016691137,0.07855662,0.00517243,-0.003098098,0.038720865,-0.032052986,0.014686486,0.05986083,-0.008093647,0.016187293,0.028215203,-0.013861041,-0.014322003,-0.010709343,-0.03426132,0.025084946,0.0055315522,-0.017473701,-0.004371105,0.026071193,-0.0060675554,0.021193564,0.0064588375,-0.0028274164,0.0016080093,-0.00342774,-0.015126008,0.06646439,-0.009117413,-0.0129712755,-0.012981996,0.043437693,0.008179408,-0.052699827,-0.06655015,-0.044295296,-0.031388342,-0.0056387526,0.03402548,-0.0006053485,-0.048883483,0.017720263,0.0312597,0.052656945,-0.016466016,-0.02587823,-0.0066196388,0.00046766273,0.021772446,0.03619093,-0.004984829,0.028515367,-0.05488672,0.04322329,0.044895623,0.028000804,-0.019521235,-0.021933248,0.02918001,0.018299146,-0.009605176,0.021547325,-0.048540443,-0.009862457,0.027850723,-0.0075040436,-0.04438106,0.035269007,-0.0068662,0.019553393,-0.031345464,-0.007450443,0.021772446,0.03606229,0.012403112,-0.024634704,0.019167472,-0.00844741,0.013099916,0.006405237,0.03929975,0.031495545,-0.0023235735,0.020550359,0.038677987,0.0132821575,0.03775606,0.0026572354,-0.03938551,0.010886223,-0.026628636,-0.01718426,-0.02583535,-0.008501009,-0.035290446,-0.004164744,0.02390574,0.02896561,-0.000027679536,0.0013802081,0.02401294,-0.014343443,-0.009058453,-0.05467232,0.05484384,-0.007370043,-0.016273055,0.014675765,0.018127626,0.0063998774,-0.04298745,-0.002228433,0.052142385,-0.013861041,0.004124544,0.010377021,0.014761526,-0.036984216,0.0062712366,-0.060804196,-0.079757266,0.038420703,-0.02733616,-0.00028374666,0.042301368,0.033682436,0.0054538315,-0.014847286,-0.007166362,0.046610832,-0.03784182,0.0041111438,-0.010880863,0.034990285,-0.0076434044,0.016616097,-0.08258736,-0.047168273,-0.0085546095,0.03432564,-0.002907817,0.0375631,-0.028022243,-0.007943566,0.0011202465,-0.009240693,-0.05505824,-0.03610517,-0.026156953,-0.011652708,0.052099504,0.009707017,0.018213386,-0.032974914,-0.009605176,0.016455296,-0.064706296,0.01907099,0.0014016482,-0.04339481,-0.014900886,-0.02900849,-0.026092632,0.026650075,0.052871346,-0.06363429,0.0014659686,-0.019510513,0.042129844,-0.020207318,0.014933047,0.0026451754,-0.09330742,-0.024613263,-0.016851937,0.030530738,0.0030096576,0.0027925763,0.04455258,0.03556917,0.08052911,-0.0034491802,0.031688504,0.026156953,0.04459546,0.023091014,-0.024913425,-0.017881064,-0.036491092,0.0060997154,0.010259099,-0.07396843,0.045924746,0.01907099,-0.005349311,-0.00516171,-0.0050679096,0.048454683,0.0018478708,0.024270222,0.019649874,-0.03769174,-0.01028054,-0.028472485,-0.01708778,-0.0015088487,0.011556228,0.011706308,-0.022211969,0.022126209,0.02236205,-0.036233813,-0.004947309,-0.057716817,-0.021997567,-0.02405582,0.004958029,-0.020443158,0.011813508,0.018138345,0.0040655835,0.020796921,0.031452663,-0.03797046,-0.049140766,-0.0062926766,0.097766966,0.013453678,0.03764886,0.02939441,-0.05141342,-0.012553193,0.022254849,-0.036769815,-0.014847286,-0.0023316136,-0.003982503,-0.047597077,-0.014804406,0.0129283955,-0.0040227035,0.004489026,0.039256867,-0.008082927,-0.047039635,-0.021515165,-0.022833733,-0.005279631,-0.03436852,0.040243115,-0.018277707,0.038549345,-0.014718645,0.057416655,0.010891584,-0.043266173,-0.0034250598,0.0062819566,-0.013957521,-0.019167472,-0.00036515214,-0.0022793533,-0.052099504,-0.0067536393,0.061018594,0.033746757,-0.045538824,-0.023884298,0.028215203,0.014654325,-0.004949989,0.031152502,0.038184863,-0.030959541,-0.01026982,-0.031559862,-0.012960555,-0.034883082,-0.040822,0.026864477,-0.021300765,0.030294897,0.0036877014,-0.014150483,-0.046910994,0.021097083,-0.02748624,0.0038351023,-0.014536405,-0.019778514,0.0028595766,-0.085932024,0.06041827,-0.0021801926,0.03904247,-0.006705399,-0.059817947,-0.011009504,-0.055529922,0.015887132,0.015093848,0.015951453,-0.0071234815,-0.037284378,0.028558247,0.026414234,-0.055658564,0.035140365,-0.040886316,0.047425557,0.007675565,-0.03233171,0.03929975,0.03773462,-0.011920709,0.007332523,0.0011028264,-0.076712765,0.0032964193,0.016626816,0.004001263,0.033167873,-0.0110631045,-0.017655943,0.0206254,0.040157355,0.012177991,0.032760512,-0.021879647,0.02407726,0.026800156,-0.020443158,0.00850637,0.024741905,0.08395953,0.004518506,-0.024956305,-0.033382274,-0.04635355,0.008806531,-0.01724858,0.017730983,-0.005456512,0.002381194,-0.0013145476,-0.013957521,-0.012360232,-0.036619734,0.010736142,0.0094872555,-0.008131167,0.0012529073,0.0026210553,0.02405582,0.008710051,-0.008495649,-0.009455095,-0.0059496346,-0.08391665,0.014986647,0.019714195,0.035397645,-0.026071193,-0.024806224,-0.0031570583,-0.02227629,0.08224432,-0.009331814,-0.0008777051,0.028558247,-0.015136728,0.019221071,0.02246925,0.004438106,-0.0070055607,-0.013550159,-0.006517798,0.0037466618,0.016090814,0.016476735,-0.01375384,0.00022394881,-0.0060943556,-0.019178191,-0.006582118,-0.037284378,0.009449735,-0.020711161,0.021429405,0.017934665,0.018352747,-0.017505862,0.034690123,0.010050058,0.0004964729,-0.03764886,-0.038527906,0.025620949,0.03456148,-0.011545507,0.0013520679,-0.012585353,-0.01212439,0.032524668,0.0016441896,-0.031667065,-0.0057673934,-0.0040414636,-0.026392793,-0.008056127,-0.02033596,0.01542617,-0.009358615,0.0082222875,0.007616604,0.01024302,0.031109622,-0.03574069,-0.007386123,0.015897853,0.033446595,-0.00041774742,-0.010259099,-0.022104768,-0.008795811,0.02060396,-0.0051965504,0.026864477,0.0240987,0.021407964,-0.038828067,0.030187696,-0.024999186,-0.036855575,0.0024964346,-0.023541257,0.033489473,-0.009701656,-0.052142385,-0.017077059,-0.036726933,-0.03224595,0.0054377518,-0.03574069,-0.002918537,0.023519818,-0.028472485,0.022597892,-0.0005674933,0.030423537,0.026178392,-0.023005255,-0.030595059,-0.039942954,0.01880299,0.034068357,-0.0036877014,0.01882443,0.02049676,0.028558247,-0.013796721,-0.0006167386,-0.014965207,-0.0063409167,0.038935266,0.016648257,0.0068501197,-0.029737454,0.0024790145,-0.00088239514,-0.00851173,-0.012767594,-0.018577868,0.017613063,0.05664481,0.020839801,-0.015276089,0.002915857,0.0035563807,0.022769412,0.018256266,-0.014332724,-0.01562985,-0.02748624,0.03273907,0.00030719678,-0.01207079,-0.034304198,-0.02568527,0.009749897,-0.024441741,-0.009305014,0.009272854,-0.014729366,-0.018213386,-0.0041031037,-0.040371753,0.020325238,0.004078984,-0.01914603,-0.04446682,-0.0061747557,-0.017591622,0.0041111438,0.0064481176,0.008897652,-0.013893201,0.026307033,0.015340409,0.02555663,-0.017516581,0.0014914287,-0.005708433,-0.03318931,-0.039171107,-0.028065123,0.0137324,0.0029614172,-0.006523158,0.034797322,0.016841218,0.009337175,-0.042001203,0.021064922,0.0033526996,0.058917463,-0.0059496346,-0.026864477,0.03426132,0.007214602,-0.016208734,0.0064588375,-0.014204083,0.0071824417,0.020025076,-0.030466417,0.01541545,-0.0013312978,-0.0038377824,-0.012413832,0.039406948,-0.0037466618,0.006700039,-0.015854971,0.010907663,-0.022940934,0.009562296,-0.0003271294,-0.010795102,-0.009503336,0.00089579524,0.044338178,-0.015801372,0.012263752,0.019649874,-0.018974511,-0.043652095,0.016390976,-0.00685548,0.048368923,0.01891019,-0.041100718,-0.031366903,0.023755658,0.0068018795,-0.020936282,0.0061104354,-0.0041781445,0.031881467,0.01024302,-0.015737051,-0.031366903,0.022855174,-0.018138345,-0.029029928,0.0066732387,-0.050641574,-0.026778717,0.008056127,-0.0066839587,-0.012531753,-0.0007088641,0.031238262,0.018481387,-0.0060461154,0.027893603,0.00022947634,-0.006501718,-0.013132077,-0.019606994,0.02568527,0.016691137,-0.026971677,-0.013164236,0.05141342,-0.04643931,-0.042387128,-0.011620548,0.019564115,0.050084133,-0.013700239,0.02223341,0.011449027,-0.036769815,0.0340898,-0.060289633,0.031302582,-0.0039851833,0.0040441435,0.021954687,-0.0110631045,0.016819779,0.033553794,-0.02930865,0.004625707,0.018224105,0.021729566,0.040285993,0.03102386,-0.02045388,-0.0019470314,0.038163424,0.025277907,-0.031195382,0.04639643,0.008216928,0.030402098,-0.0022110129,-0.014632885,0.011427587,-0.04438106,0.012864075,-0.019724915,-0.028987048,-0.00855997,0.01038238,-0.0072950027,-0.026607195,0.03258899,0.019489074,0.022790853,0.013367917,-0.0072628423,0.032846272,0.013421518,-0.016734017,-0.02242637,-0.023026694,-0.011427587,-0.0073486026,-0.031388342,0.004341625,0.025127826,-0.0073486026,-0.010955904,0.0021078323,-0.02255501,0.031474102,0.022490691,0.019971477,-0.010430621,0.031817146,0.010623582,-0.002244513,0.01210295,0.026264153,0.010044699,0.0009634656,0.040650476,0.007332523,-0.010720062,0.0069519603,0.0045747864,0.010001819,-0.0056173126,-0.035783567,-0.00846885,0.019403312,0.01876011,0.0027403159,-0.00171923,0.007997166,-0.04137944,0.010634302,0.0076541244,0.010864783,0.02602831,0.00172861,0.04283737,-0.049097884,0.013378638,-0.035397645,0.023048135,0.024441741,-0.0072735623,0.00034572202,0.012424552,-0.017591622,0.03951415,-0.009878538,-0.07058089,-0.0044917064,0.033060674,-0.012703274,-0.02064684,0.01198503,-0.0379919,0.0064373976,0.0034143399,0.044038016,-0.024313102,-0.004087024,0.012456712,0.019789236,0.027743522,-0.03404692,-0.0142362425,0.025192147,0.002259253,0.009594456,-0.013893201,-0.008270528,0.02424878,-0.02574959,-0.018406346,-0.028365284,-0.028794087,0.04511002,0.02238349,-0.026392793,-0.021161404,0.0017607702,0.01371096,-0.00026548904,0.0054377518,0.02926577,-0.007734525,0.050555814,0.0070752413,-0.0050598695,0.06007523,-0.02577103,-0.04781148,-0.006726839,-0.010468141,0.011009504,-0.02742192,0.031516984,-0.010870143,-0.01879227,-0.0012622874,-0.030466417,0.013453678,0.014536405,-0.018127626,0.04129368,-0.03288915,-0.01556553,-0.02572815,0.0027711361,0.00687692,0.01034486,0.009272854,0.011181025,0.012510313,-0.004408626,-0.028129444,-0.005670913,-0.011631268,0.0033232193,0.007193162,0.049612448,0.027936483,0.0043282253,0.0120171895,0.020786202,0.0013118676,0.022726532,-0.028022243,-0.026199833,0.008688611,0.0449385,0.000860955,-0.010650382,-0.014450644,0.0049151485,-0.013057036,0.024677584,0.011706308,-0.018009705,-0.025256466,-0.038249183,-0.028408166,-0.020668281,0.024956305,0.016734017,-0.0006395187,-0.010671822,0.0035269004,-0.031967226,-0.036233813,0.007997166,-0.026435673,0.0007932846,-0.023605578,0.013614479,0.011320386,0.051885102,-0.02414158,0.02920145,-0.033296514,-0.034304198,-0.006710759,0.011802789,0.03634101,0.010511021,-0.016348096,0.0075951642,-0.031495545,0.015179608,0.0083670085,0.01901739,-0.053085748,0.021086363,0.009476535,-0.01554409,-0.032010105,0.0069090803,0.0129712755,0.01199575,0.022919493,-0.016508896,0.0031918986,-0.01886731,-0.0031463383,0.010569981,-0.022147648,0.025063505,0.043266173,0.0032133388,0.02392718,0.012896235,0.007697005,0.0017125299,0.021064922,0.01202791,0.013400078,0.000859615,0.011202465,0.0069519603,-0.03417556,0.019124592,-0.004132584,-0.04253721,0.033553794,0.0018961111,-0.02896561,-0.010816543,-0.029694572,-0.0028220564,0.01871723,-0.0057352334,-0.05857442,0.047511317,0.027100317,-0.036469653,-0.0015664691,0.0015932693,-0.014193363,0.0021319524,0.00039965732,-0.0005865884,0.009696296,0.051627822,0.019767795,-0.01021086,-0.03250323,-0.033682436,0.026049752,0.0004773778,0.029544491,-0.022833733,-0.019724915,0.007563004,0.062948205,-0.0035429806,0.0022967735,0.015865693,-0.02598543,-0.009138853,-0.0030820179,0.00026666155,0.022083329,0.0016401695,-0.024441741,0.008983413,-0.0050732694,-0.014343443,0.0024321142,-0.026135512,0.004448826,-0.030337777,-0.016551776,-0.034840204,-0.0062497966,-0.047296915,0.018610029,-0.019628434,0.032138746,-0.010135819,0.0016843898,0.006539238,0.0038753026,0.017077059,0.021954687,-0.0069305203,0.0048910286,-0.0046015866,-0.05012701,-0.017784584,0.012649674,0.021525886,0.005692353,-0.029608812,-0.027100317,-0.031924345,-0.023434056,-0.0029962575,-0.03113106,-0.03378964,0.026006872,-0.024656143,-0.0377775,-0.037198618,-0.0076809246,-0.0050866697,0.018738668,-0.018020425,-0.024763344,-0.021022042,0.001549049,0.028258085,0.02918001,-0.020754041,0.021686686,-0.011266786,-0.0047168275,0.007091321,0.05698785,0.00854389,0.014965207,0.0116848685,0.014675765,-0.008517089,-0.008200848,0.007852445,-0.010414541,0.015115288,-0.015737051,-0.022254849,-0.025620949,0.0029453372,-0.01199575,-0.0076005245,0.028000804,-0.028429605,-0.030766578,-0.0058906744,0.04622491,-0.0027215558,-0.009294294,-0.028322404,-0.037241496,0.0032133388,0.0037359418,-0.0035805008,0.009262134,0.002067632,-0.024034379,0.0052260305,0.014257683,-0.045924746,-0.023112455,-0.015276089,0.02737904,-0.011030944,0.056430407,0.009063813,-0.056816332,-0.03962135,-0.004097744,0.0040173433,0.0067857993,0.0070055607,-0.026907356,0.030101934,0.038506463,0.033725318,-0.0069412403,-0.023755658,0.0038056222,0.00037352717,0.012596074,0.004783828,0.05184222,-0.010007178,0.003947663,0.01729146,-0.010494941,0.026650075,0.0206254,-0.032524668,0.043845054,-0.03423988,0.01038774,-0.0126389535,-0.024827665,-0.0063301967,0.00053868315,-0.0058906744,0.016112253,-0.01556553,0.00866717,-0.02587823,-0.0017580902,0.028815528,0.010066139,-0.006726839,-0.014933047,-0.0011966269,-0.024763344,0.040264554,-0.014204083,0.025170706,-0.014407764,0.038334943,0.0014874086,0.014740086,0.022619331,0.008061487,-0.013539439,0.02559951,0.004628387,-0.0024173742,-0.032974914,0.02733616,0.022576451,0.014054002,0.009181733,0.0039074626,-0.020882681,0.0069198003,-0.008769011,0.0010894263,0.030616498,-0.004119184,0.011427587,-0.0031972586,-0.010553901,-0.012574634,0.023841418,-0.024184462,0.010033978,-0.019585554,-0.0012328072,-0.021665245,0.015919292,0.010966624,-0.027893603,-0.023627017,-0.05467232,-0.020100117,-0.042086966,-0.0078042056,0.010602142,-0.025663828,0.011449027,0.019746356,0.048883483,0.02414158,-0.011727748,0.022790853,0.002578175,0.0071342015,0.02926577,0.023648458,-0.0015155488,-0.016626816,-0.022726532,-0.00093800545,0.004009303,0.016412415,-0.015651291,-0.0018559108,-0.00033550445,0.06920873,0.0060085948,-0.009556935,-0.004861548,-0.015286809,-0.018342027,0.018513547,-0.033618115,-0.014900886,0.017387941,0.040135913,-0.013818161,0.015265369,-0.009471175,0.029780334,-0.011245346,-0.002541995,0.0074182833,0.0052072704,-0.016809057,0.0034491802,-0.026542874,-0.01552265,0.023241095,0.017602343,0.005826354,0.028836967,0.013625199,-0.017505862,0.014332724,-0.000523273,-0.018631468,0.007541564,0.0019979517,0.027228959,-0.010907663,0.008184767,0.006346277,-0.020925561,0.04290169,0.037370138,-0.008672531,0.0062337164,0.028944168,0.014504245,0.002937297,0.013078476,0.022169089,0.0004961379,-0.003770782,-0.0015410089,0.0018652908,-0.008994132,-0.01910315,-0.0035858608,0.007895326,0.01376456,0.014654325,0.019081712,0.016412415,0.015318969,0.014686486,-0.013603759,-0.007782765,-0.026607195,-0.004298745,0.026478555,0.015844252,0.007793485,-0.013249997,0.018084746,0.018245546,0.02068972,-0.013968241,-0.000039823357,-0.0011034964,0.054243516,-0.025385108,-0.015136728,0.018438507,0.00040836737,-0.009514055,0.0007376743,0.036705494,-0.0644919,0.00022394881,-0.029137129,-0.00859213,0.03752022,-0.0026907357,0.010543182,-0.025106385,-0.005708433,0.013228557,0.0025071546,-0.023605578,-0.010478861,0.015865693,0.033682436,0.0062712366,-0.0017688103,0.014654325,-0.009439015,-0.019606994,-0.031388342,-0.040007275,-0.00093398546,0.024484623,0.03224595,0.013786,-0.017302182,-0.051713582,0.040779117,0.008479569,0.0033044592,0.03246035,0.029480172,-0.0017339701,-0.00862965,0.030595059,-0.026714396,-0.035783567,0.009889257,0.033339392,0.00012520698,-0.0050920295,-0.0045747864,-0.030273456,0.026864477,-0.026607195,-0.010473501,-0.020282358,0.011770628,-0.043845054,-0.02920145,-0.010543182,-0.021868927,-0.02900849,-0.014300563,0.010655742,-0.019810675,-0.010741503,-0.0051858304,0.0061640358,-0.0376703,0.027679201,0.023326855,0.015018808,0.0048883483,0.017634504,0.024420302,0.007021641,0.016959138,0.012092231,-0.026564315,-0.01871723,-0.0075844442,-0.01708778,0.012553193,0.01732362,-0.0071342015,0.014740086,0.0022873932,0.07564076,0.0037305816,-0.006169396,-0.01214583,-0.009112053,-0.0027148558,-0.027035998,0.027893603,0.020164438,0.0027175357,0.011867109,-0.023841418,-0.03089522,0.014182642,0.017623782,-0.005896034,-0.0030686178,-0.002074332,-0.012606793,-0.03438996,-0.0074933236,-0.024870545,0.009910698,0.020989882,-0.045367304,-0.015758492,0.022747973,-0.05801698,-0.064749174,-0.0019403313,-0.017312901,0.012542473,-0.029051369,0.042279925,0.052313905,-0.007032361,0.03449716,-0.008876212,0.026843036,-0.009380055,0.021686686,-0.027829282,0.029887535,-0.014793687,0.014418484,0.0007537544,-0.0076112445,0.017591622,0.035226125,-0.0309381,0.016798338,-0.0043577054,0.006147956,0.04978397,-0.017495142,0.0031409783,-0.030723698,0.0065928386,0.039878633,-0.019124592,0.014343443,0.01546905,0.014815127,-0.023412617,-0.02401294,0.023455497,0.008651091,-0.00039463228,-0.024506062,-0.0170449,-0.027271839,0.00038558725,-0.014632885,-0.031795707,0.0077881254,-0.03936407,0.052656945,0.027143197,0.010923743,0.016734017,0.03556917,0.036984216,0.042172726,0.0051992303,0.019842835,-0.04270873,-0.003765422,-0.010092938,0.02236205,-0.036834136,-0.021493725,0.03273907,0.033811077,-0.011524067,0.0004468926,0.031559862,-0.007541564,0.001884051,0.03209587,0.0123495115,-0.0074075633,0.023133894,0.045281544,-0.029415851,0.007520124,-0.04122936,0.00007051791,0.00060199853,0.005831714,0.011138145,0.012960555,-0.01914603,0.0048937085,0.0062658763,0.0012843974,-0.043609213,0.012606793,0.008688611,0.011706308,0.04099352,0.004499746,0.047597077,0.0028568967,0.019982196,0.0029024568,-0.023155335,-0.021868927,-0.031774264,0.030573618,-0.026607195,0.008806531,0.047296915,-0.023005255,0.009042373,0.008077567]},{"id":"merge-intervals","name":"Merge Intervals","description":"Given an array of `intervals` where `intervals[i] = [start_i, end_i]`, merge all overlapping intervals, and return an array of the non-overlapping intervals that cover all the intervals in the input.\n\nYou may return the answer in **any order**.\n\nNote: Intervals are *non-overlapping* if they have no common point. For example, `[1, 2]` and `[3, 4]` are non-overlapping, but `[1, 2]` and `[2, 3]` are overlapping.\n\n**Example 1:**\n\n```java\nInput: intervals = [[1,3],[1,5],[6,7]]\n\nOutput: [[1,5],[6,7]]\n```\n\n**Example 2:**\n\n```java\nInput: intervals = [[1,2],[2,3]]\n\nOutput: [[1,3]]\n```\n\n**Constraints:**\n* `1 <= intervals.length <= 1000`\n* `intervals[i].length == 2`\n* `0 <= start <= end <= 1000`\n","difficulty":"Medium","concepts":[],"solutions":{"python":"class Solution:\n    def merge(self, intervals: List[List[int]]) -> List[List[int]]:\n        intervals.sort(key=lambda pair: pair[0])\n        output = [intervals[0]]\n\n        for start, end in intervals:\n            lastEnd = output[-1][1]\n\n            if start <= lastEnd:\n                output[-1][1] = max(lastEnd, end)\n            else:\n                output.append([start, end])\n        return output\n","javascript":"class Solution {\n    /**\n     * @param {number[][]} intervals\n     * @return {number[][]}\n     */\n    merge(intervals) {\n        intervals.sort((a, b) => a[0] - b[0]);\n        const output = [];\n        output.push(intervals[0]);\n\n        for (const interval of intervals) {\n            const start = interval[0];\n            const end = interval[1];\n            const lastEnd = output[output.length - 1][1];\n\n            if (start <= lastEnd) {\n                output[output.length - 1][1] = Math.max(lastEnd, end);\n            } else {\n                output.push([start, end]);\n            }\n        }\n        return output;\n    }\n}\n","cpp":"class Solution {\npublic:\n    vector<vector<int>> merge(vector<vector<int>>& intervals) {\n        sort(intervals.begin(), intervals.end());\n        vector<vector<int>> output;\n        output.push_back(intervals[0]);\n\n        for (auto& interval : intervals) {\n            int start = interval[0];\n            int end = interval[1];\n            int lastEnd = output.back()[1];\n\n            if (start <= lastEnd) {\n                output.back()[1] = max(lastEnd, end);\n            } else {\n                output.push_back({start, end});\n            }\n        }\n        return output;\n    }\n};\n","java":"class Solution {\n    public int[][] merge(int[][] intervals) {\n        Arrays.sort(intervals, (a, b) -> Integer.compare(a[0], b[0]));\n        List<int[]> output = new ArrayList<>();\n        output.add(intervals[0]);\n\n        for (int[] interval : intervals) {\n            int start = interval[0];\n            int end = interval[1];\n            int lastEnd = output.get(output.size() - 1)[1];\n\n            if (start <= lastEnd) {\n                output.get(output.size() - 1)[1] = Math.max(lastEnd, end);\n            } else {\n                output.add(new int[]{start, end});\n            }\n        }\n        return output.toArray(new int[output.size()][]);\n    }\n}\n","csharp":"public class Solution {\n    public int[][] Merge(int[][] intervals) {\n        Array.Sort(intervals, (a, b) => a[0].CompareTo(b[0]));\n        List<int[]> output = new List<int[]>();\n        output.Add(intervals[0]);\n\n        foreach (int[] interval in intervals) {\n            int start = interval[0];\n            int end = interval[1];\n            int lastEnd = output[output.Count - 1][1];\n\n            if (start <= lastEnd) {\n                output[output.Count - 1][1] = Math.Max(lastEnd, end);\n            } else {\n                output.Add(new int[]{start, end});\n            }\n        }\n        return output.ToArray();\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def merge(self, intervals: List[List[int]]) -> List[List[int]]:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[][]} intervals\n     * @return {number[][]}\n     */\n    merge(intervals) {}\n}\n","cpp":"class Solution {\npublic:\n    vector<vector<int>> merge(vector<vector<int>>& intervals) {\n        \n    }\n};\n","java":"class Solution {\n    public int[][] merge(int[][] intervals) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int[][] Merge(int[][] intervals) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/44H3cEC2fFM","embedding":[-0.002490653,-0.018288508,0.008269984,-0.044689428,0.023462966,-0.0010591629,0.018664649,0.009998192,0.007441461,0.028566264,-0.0067552608,-0.023889937,-0.032307327,-0.02677706,0.03856954,0.016407812,0.03070111,0.03454383,-0.017770046,0.039931774,-0.010242174,0.03149405,0.021470444,-0.00524562,0.014984581,0.008625791,0.0032048095,0.056563236,0.0308231,0.011009702,0.02098248,0.00067476364,-0.004915227,0.013754504,-0.002986242,0.015919847,-0.0035555342,0.055627972,-0.019742237,0.013734172,-0.017515898,0.016082501,-0.03253098,-0.043103546,-0.003339508,-0.01007952,0.032632638,-0.013276705,0.010877545,0.016600965,0.014852424,-0.0064553656,0.02710237,-0.016519636,0.0137443375,-0.020321695,0.031677037,0.01071489,0.019823564,0.013256373,0.05058567,0.0048898123,0.021409448,0.0028769583,0.004582293,0.012422767,0.033750888,0.03190069,0.044201463,-0.049447086,-0.036902327,0.017149923,-0.021877082,0.0073906314,-0.02567914,0.009195084,0.0121584525,0.029908167,0.005423524,-0.012310942,0.0058809905,-0.03139239,0.024459228,0.024215246,-0.0063232086,-0.003718189,0.0003697857,0.009078176,-0.013103884,-0.0524562,-0.032612305,-0.029867504,-0.006379121,0.0037410622,0.046844605,-0.0021729677,0.017617557,-0.0026736397,-0.025130179,0.018644316,0.04456744,-0.0093933195,0.033486575,-0.018908631,-0.01616383,-0.034360845,0.016672125,0.014516949,-0.027346352,0.027163366,0.00653161,-0.0018552822,0.0018197015,-0.03527578,-0.008946018,-0.010786052,-0.04936576,-0.021958409,0.03702432,-0.0050372183,0.005687838,-0.019172944,-0.0025859585,-0.0057894974,-0.041802306,0.004907603,0.01928477,-0.012036461,-0.023442635,-0.02862726,-0.0025122555,0.003349674,0.031616043,0.010948706,-0.0197829,-0.04558403,-0.01913228,0.0032632635,-0.013012391,0.016733121,-0.0140086515,-0.0024715918,-0.014140809,-0.03287662,0.04208695,0.019732071,-0.029521862,0.031880356,-0.007446544,0.025292834,0.023889937,-0.017475234,-0.0065214443,0.049325094,0.007746439,-0.0058809905,-0.027915644,0.04635664,0.045706023,-0.021246795,-0.038874518,-0.0018679897,-0.040460404,-0.037878256,0.014618607,0.035499427,0.011883972,0.04119235,-0.016773785,-0.03495047,-0.0036826083,-0.052537527,0.008290316,-0.023462966,0.015248896,-0.003692774,-0.0115993265,-0.04031808,-0.02765133,0.052293546,0.00896635,0.0395658,-0.058108456,0.00092001667,-0.045746688,0.035133455,-0.013815499,-0.0018641774,-0.038833853,-0.0048542316,-0.011700986,0.043957483,0.011802645,0.041151684,0.023767944,-0.027305689,0.047820535,-0.045421377,-0.0062317154,0.0073093036,-0.021897413,0.018227512,-0.031006087,0.010897878,0.00457721,-0.02175509,-0.032632638,0.001117617,0.013734172,-0.020504681,0.026512746,0.047698546,0.022527702,-0.019976053,0.06457399,-0.013642678,-0.008580045,0.019538919,0.04021642,0.024540555,0.012676915,0.007116151,0.011477335,0.05936903,0.014771096,0.0076600285,0.01278874,-0.00543369,0.01765822,0.038223896,-0.010735222,-0.036312703,0.010369249,-0.015564039,0.00025573667,-0.031616043,-0.003913883,-0.055221334,0.046193987,-0.0069382475,0.015198066,-0.008747783,-0.018756142,0.00814291,0.0027880063,-0.02185675,-0.05770182,0.040928036,-0.04676328,-0.02038269,0.03192102,0.0003354757,0.012453265,-0.04306288,-0.011375676,0.008574962,0.011131694,0.011294348,-0.017871706,0.009210333,-0.00598265,0.03800025,-0.042005625,-0.041029695,0.011955134,-0.025740135,-0.010359083,0.03242932,-0.042371597,0.051805582,-0.0013774836,-0.0034284599,-0.0035148703,-0.03694299,-0.009286577,-0.029623521,0.007726107,0.042249605,0.010857213,-0.09198134,-0.063150756,-0.01895946,0.019061118,-0.0071314,0.027061706,-0.025069185,-0.002643142,-0.008086997,0.015838519,-0.033933874,-0.030863764,0.0056268424,0.0060487287,0.0041172015,-0.003796975,0.017495565,-0.017343078,0.02250737,0.046925932,-0.0012211824,0.042696908,-0.05013837,-0.049691066,0.037410624,-0.04229027,-0.019640578,-0.020901153,0.014181472,0.043184873,0.021368785,-0.013703674,-0.014679603,0.020667337,0.0040663723,-0.0091595035,-0.011477335,-0.0054946854,0.02872892,-0.017068597,-0.032286994,-0.010745388,0.015503043,0.008768115,0.061768193,0.04928443,0.038203567,-0.04481142,-0.044648767,-0.01678395,-0.04216828,-0.036841333,-0.01661113,-0.02698038,-0.0011277829,-0.018339338,0.02088082,0.029867504,-0.018156352,0.0061758026,0.046844605,0.013825665,-0.02415425,-0.02185675,-0.012646417,0.04501474,0.007980255,0.03779693,0.03200235,-0.009123922,0.010826715,-0.010308254,-0.007746439,0.022141395,0.0055099344,-0.031677037,0.01388666,0.008747783,0.0067501776,-0.054367393,0.019030621,-0.02228372,-0.0064655314,0.014872756,-0.019315267,-0.02305633,-0.0034564163,0.000504802,-0.0057996633,-0.055790626,0.04253425,0.044079475,-0.009759293,0.037613943,0.015777525,-0.030640114,0.0060843094,-0.02405259,0.054082748,0.015818188,0.001532514,-0.010110018,0.012412601,0.023340976,0.038955845,0.042208944,0.02130779,-0.010786052,-0.033994872,-0.070998855,-0.021775423,0.0022326924,-0.005992816,0.03517412,-0.026024781,0.03484881,0.023910267,0.024072923,0.033628896,-0.032754626,0.00013731948,0.004719533,-0.020677501,0.035479095,0.014110311,-0.058108456,-0.054448724,0.00579458,0.045177393,0.014354293,-0.04708859,0.012188951,0.0007230518,-0.005408275,-0.011528165,-0.0047144503,0.04708859,-0.0432662,0.014649105,-0.024072923,-0.025496153,-0.01486259,0.013927325,0.029603189,-0.007837933,0.04534005,-0.025984118,0.020799493,-0.04249359,-0.011721318,-0.013398696,-0.02173476,0.011019869,-0.015553873,-0.010252341,-0.01431363,0.07221877,0.038630534,0.052537527,-0.007690526,-0.051642925,-0.034137193,-0.05278151,0.053472795,-0.016804283,-0.07112085,-0.009225582,0.020525014,0.07356067,0.0758785,0.04338819,0.034808144,0.027691994,0.02470321,0.019823564,-0.010450576,0.030518122,-0.023361309,-0.00800567,-0.019294936,-0.0021920288,-0.04151766,0.00043427583,0.011772147,0.017200753,0.037674937,-0.00088888354,0.032815624,-0.02645175,0.014649105,-0.021694096,0.010725057,0.012046628,-0.024418565,0.048145846,-0.04249359,-0.0118331425,0.037430953,0.0446081,-0.025780799,0.030802768,0.055018015,-0.0492031,0.0014753307,0.0023191029,0.026838055,-0.022751352,-0.020718167,-0.049243767,-0.009311992,-0.023686618,0.025597813,0.031575378,-0.014120477,-0.005926737,0.006978911,0.03659735,-0.02088082,-0.021877082,0.03137206,-0.0052913665,0.021002812,-0.06839638,0.01508624,-0.04330686,0.055018015,0.011385842,-0.012585422,-0.042696908,-0.01765822,0.03232766,-0.028972901,-0.009606804,-0.0033700059,-0.0140086515,-0.02307666,0.019376263,-0.010836882,-0.011274016,0.022609029,0.043347526,-0.04074505,-0.03005049,-0.021958409,-0.027488675,-0.0031412723,0.004445053,-0.023218984,0.008244569,-0.04546204,-0.04456744,0.02230405,0.029623521,-0.046234652,0.041273676,-0.019122114,0.017099096,0.04068405,-0.023137657,-0.031880356,-0.0068060905,-0.004002835,0.044689428,-0.05420474,0.037857924,-0.00557093,-0.053838767,0.019945554,0.031107746,-0.021043476,0.0007643509,0.005565847,-0.0040485817,0.022995334,-0.02295467,-0.004950808,0.01873581,-0.010125266,0.010221843,0.03582474,0.000982283,-0.048674475,-0.040704384,0.014994747,0.0061961343,-0.02447956,0.02228372,0.011782313,0.01131468,-0.013124216,-0.007014492,0.0013177587,0.0059064054,0.011883972,-0.057091866,0.005545515,-0.017780213,-0.022161728,-0.067705095,0.0005626207,0.0048796465,-0.03507246,0.010120183,-0.017505731,-0.0009073093,-0.004259525,-0.012717579,-0.033506908,0.03629237,0.032835953,-0.0008755407,-0.020687668,0.026533078,0.017698884,0.005545515,0.014028984,-0.054896023,-0.0014740599,0.01918311,0.006435034,-0.014344128,-0.025699472,0.027244693,0.008127661,-0.0049355594,-0.05855576,0.03519445,0.02338164,0.015797855,-0.01311405,0.021999072,0.014608442,-0.003619071,0.0036749837,-0.032713965,-0.044648767,-0.017271915,-0.0047652796,0.035438433,0.035906065,-0.038955845,0.029013565,0.009967695,-0.015655532,0.03692266,0.03397454,-0.0018438456,-0.030294472,-0.02645175,0.00047938715,0.0386102,-0.017495565,0.01830884,-0.022568366,0.014344128,-0.013408862,-0.049528413,0.000090858004,-0.006989077,-0.01114186,-0.0033827133,0.049772393,-0.01393749,-0.035601087,-0.015909681,-0.010003275,0.009149337,-0.0039774203,-0.0034411673,-0.023544295,-0.015777525,-0.008905355,-0.024418565,0.011355344,-0.028403608,0.0036038223,0.00042887518,0.0070297406,-0.08523116,0.020433519,-0.007588867,-0.0096881315,0.007827766,0.048511818,0.04121268,0.030558785,0.011792479,0.027082037,0.04163965,0.049772393,0.019172944,-0.0033903378,0.0102167595,0.020474184,-0.021714427,0.018105522,-0.0055607636,0.0153912185,0.027570004,0.01468977,-0.030904427,-0.0061859684,0.056644563,-0.011355344,0.022914007,-0.04538071,0.0014333961,0.0031666872,-0.004750031,-0.059856996,-0.00329122,-0.028322281,0.0031488969,-0.031738035,0.008539381,0.05396076,0.039159164,0.008707119,0.03879319,-0.012666749,-0.04546204,0.052049562,-0.025618143,0.0039926693,0.012819238,-0.041029695,0.012666749,-0.022751352,0.011822977,-0.0023394346,-0.034157526,0.009927031,-0.009581389,-0.025963785,0.017465068,0.006074143,0.0075532864,0.022914007,0.009103591,-0.013642678,-0.035906065,0.017475234,-0.007329636,-0.017465068,0.0053371135,-0.03411686,-0.007253391,0.015299725,0.0063384576,-0.0051337946,-0.03944381,-0.022548033,0.016041838,-0.025109848,0.0113045145,-0.02338164,-0.00030879013,-0.030640114,-0.021389117,-0.033384915,0.004112119,-0.0019175486,0.022812348,0.015442048,0.005342196,0.008361477,0.046478633,-0.019762568,0.005941986,-0.0529035,0.03615005,-0.038752526,0.0019467756,-0.006277462,0.011243518,0.0065011126,0.0006563379,-0.018014029,-0.013663011,0.013795167,0.010257424,-0.02295467,0.023320643,-0.023727281,-0.0038427217,0.022263387,-0.017942866,-0.037430953,0.019447425,-0.005398109,-0.0029811591,-0.016041838,-0.04615332,0.00085584424,-0.016753454,0.027122702,-0.0076447795,-0.015238729,-0.007599033,-0.04176164,-0.0060283965,0.005171917,0.015015079,-0.010999536,0.028118962,0.019325433,0.022792015,-0.011853474,-0.0057894974,0.018776473,-0.024174582,-0.0007618094,-0.0048161093,0.011436672,-0.005276118,0.018928962,0.0068721687,-0.022812348,0.017404072,0.019721905,-0.0483085,-0.039260823,0.007853181,0.019579582,-0.054570712,-0.0017231252,0.0031692288,-0.015177734,-0.007970089,-0.03242932,-0.0067400117,-0.022426043,0.012107623,0.002490653,-0.014872756,0.064330004,-0.002494465,-0.0024334695,-0.017017767,0.005225288,0.036678676,0.006292711,0.026472082,-0.011792479,0.011792479,-0.023239316,-0.025008189,0.052090228,0.012351605,0.03190069,0.062866114,0.030213146,-0.0030675693,-0.0027371766,0.02907456,0.03814257,0.048145846,-0.0049177688,-0.01016593,0.0034005037,0.05091098,-0.039321817,0.01683478,0.02525217,-0.014771096,-0.040501066,0.032490313,-0.0028413774,-0.024377901,0.0013584225,0.000119211414,0.007461793,0.023503631,0.034625158,0.00014009922,0.009037512,-0.00065506715,0.029338874,0.02687872,-0.013429194,0.025414826,0.008071749,-0.022344714,0.02175509,-0.0024423648,-0.037410624,-0.03529611,-0.039403144,0.002544024,-0.025943454,-0.019874394,0.010643729,0.049040448,-0.029318543,0.018898465,0.049243767,0.012351605,-0.013612181,0.023645954,-0.0020255616,0.044526774,0.0072330595,0.04161932,-0.02797664,0.01760739,-0.026431419,-0.015614869,0.04993505,0.032652967,0.025943454,0.009738961,0.029054228,-0.006541776,0.022100732,-0.0063537066,-0.019162778,0.004655996,0.0041400753,0.015848685,0.05745784,0.024093255,-0.006958579,-0.03619071,0.0017116885,0.019294936,0.022527702,-0.00565734,0.0046077077,0.00062647543,0.006379121,-0.028688256,-0.014435621,-0.0057335845,-0.03007082,0.010211677,-0.018898465,0.012758242,0.0061910516,-0.024540555,0.00965255,-0.028403608,-0.021267125,-0.014913419,0.007970089,0.006379121,0.039179496,-0.015269227,-0.032856286,0.017343078,0.037654605,-0.01030317,0.061564874,-0.00095114985,-0.007126317,-0.032632638,-0.0065112785,-0.006846754,0.015472546,-0.033893213,-0.011436672,0.026187437,-0.02142978,-0.013032722,-0.039850447,-0.027935976,-0.0011678112,-0.056807216,0.03495047,-0.037654605,0.026797391,0.0017599766,-0.015076075,-0.06473664,0.045665357,-0.004317979,-0.0049762228,-0.011426506,-0.02939987,0.029196551,-0.0023648494,-0.0059064054,0.034787815,-0.029542193,0.007278806,-0.046966597,0.017221086,-0.007715941,0.021999072,-0.023035998,-0.0066129374,-0.014110311,0.009123922,-0.038203567,0.030314803,0.03454383,-0.044526774,-0.005166834,0.0031997266,-0.03145339,0.01306322,-0.018186849,0.043876156,-0.029013565,-0.04330686,0.013906993,0.019813398,-0.008295399,-0.014018818,0.033018943,-0.02028103,0.045868676,0.04753589,0.015747026,0.017221086,0.006130056,0.009550892,-0.010308254,-0.03059945,-0.022934338,-0.0064604487,-0.03596706,-0.060995582,-0.046641286,0.013378364,-0.050097704,-0.0025033604,-0.0391185,0.008310648,0.008000587,-0.018420666,0.00012627992,-0.03800025,-0.030985756,0.0025275045,0.012870068,0.025719803,0.003070111,0.03314093,0.009947362,-0.04351018,0.00016773785,0.009962612,-0.016550135,0.0019175486,-0.0068823346,-0.016295986,-0.027549671,0.045299385,0.027143033,0.031819362,0.01763789,-0.016458642,-0.010521738,-0.022853011,0.00005364911,-0.013703674,0.0030370716,-0.00031625573,-0.026065445,0.019213608,0.009022263,-0.013622346,-0.0064553656,-0.018817136,-0.004208695,-0.008376727,0.0073347185,-0.024987856,-0.0045492537,0.028057968,0.038386554,0.027570004,0.033425577,-0.05367611,0.003044696,0.011975465,-0.0076701944,0.028830579,0.01338853,-0.026167104,0.018298674,-0.03314093,-0.02273102,0.023869604,-0.0038986343,0.01316488,0.013317369,0.0019315267,-0.024520224,-0.012626085,-0.003570783,-0.009469564,-0.025658809,-0.01950842,0.024499891,0.020901153,-0.016641628,-0.05989766,-0.014740598,0.028261285,-0.004950808,0.014100146,0.019264437,-0.00092954724,0.0016735663,0.009327241,0.0061097243,-0.047047924,-0.018369837,-0.015777525,-0.008371644,0.020626672,0.021409448,0.0060385624,0.006114807,-0.020697834,-0.039220158,0.009261162,-0.015909681,0.0049177688,-0.005997899,0.0326733,0.027996972,-0.010796218,-0.04818651,-0.0035479097,-0.013144548,-0.00031975028,-0.0013520687,0.017892037,0.013581683,-0.011446837,-0.010323502,-0.035560425,0.035235114,-0.020026883,-0.011497667,0.006074143,0.00503976,0.032612305,0.023584958,0.015747026,-0.022527702,0.00011659051,0.042981554,-0.01726175,-0.007421129,-0.024174582,-0.016092667,0.00074719585,0.0137748355,-0.046641286,-0.010155764,-0.028220622,-0.040175755,-0.028484937,-0.021104472,-0.012097457,0.0028312115,-0.01726175,0.029420203,0.003486914,0.0025224215,-0.007100902,-0.04456744,0.027265025,-0.015787689,0.0018413041,0.048471157,-0.006745095,-0.023239316,0.004488258,0.032612305,0.0511143,0.006541776,-0.0029532027,-0.008900272,-0.060914256,0.00049749523,-0.007909094,0.015065908,-0.02785465,-0.0017853915,0.03147372,0.016590798,-0.008046334,0.010394664,-0.018756142,-0.0030955258,-0.00262281,-0.018166518,0.0028845826,0.012138121,0.027935976,-0.028200291,0.027387016,0.026309427,-0.014974415,0.009098507,0.007837933,-0.027143033,-0.012646417,-0.0061605535,0.01601134,-0.0058911564,-0.01343936,0.013500355,0.011782313,-0.017383741,-0.005235454,-0.0020446228,0.006597689,0.011111362,-0.016367147,-0.015533541,0.022039738,-0.00082089886,-0.020179372,-0.049243767,-0.003870678,0.019671075,-0.004086704,-0.03639403,0.005769165,0.007288972,-0.009271328,0.009500062,0.038488213,-0.009123922,0.00096195115,0.009261162,0.040033434,0.035987392,-0.025821462,-0.054489385,-0.0077820197,-0.01786154,-0.018064858,0.044730093,-0.026695732,-0.013307203,0.030009827,0.02567914,-0.00860546,-0.006424868,0.01798353,-0.007914176,-0.027793653,0.02468288,-0.018878132,-0.040907703,-0.008076832,-0.041578654,-0.010643729,0.011924637,0.036658343,0.0008710931,-0.012270277,-0.0057894974,0.046397306,-0.018857801,-0.04330686,-0.030985756,-0.045828015,-0.023218984,0.0574985,-0.04928443,0.003512329,0.036638014,0.01683478,-0.011426506,0.0014181472,-0.0113350125,0.0110402005,0.017027933,0.013256373,-0.007721024,-0.0015782607,-0.0041172015,-0.012046628,0.0113350125,-0.0042366516,-0.012412601,0.014974415,0.016682291,0.0024474477,-0.02080966,-0.00671968,0.039464142,0.00924083,-0.020636838,0.00081645127,0.009113756,-0.020616507,-0.009428901,0.0068823346,-0.011517999,-0.0071669808,0.0066078547,0.010826715,0.018644316,-0.022527702,0.008681704,0.032205667,-0.0002767039,0.020962149,0.0053167813,0.017739547,-0.04196496,0.011446837,-0.041273676,0.0031031503,-0.0008609272,0.008000587,-0.01616383,0.017302413,0.007588867,-0.006414702,-0.019101784,-0.029054228,0.005357445,-0.01486259,0.0043306863,0.01708893,-0.001866719,-0.0055861785,0.017668387,0.0024728626,0.02315799,0.007278806,0.016173994,0.010806384,0.014028984,-0.030660445,0.008788447,0.016153663,0.018014029,-0.0040689134,-0.033628896,0.021572104,0.018146185,-0.02447956,0.012687081,-0.03169737,-0.011741649,-0.0349708,0.034482837,0.06530593,0.0010229467,0.021795755,0.019366097,0.04428279,-0.017495565,-0.04635664,-0.0143034635,0.0061656367,-0.012412601,-0.008686787,0.014669437,0.0044780923,0.026187437,0.008412307,-0.008788447,-0.0202607,-0.0074719586,0.030518122,-0.022344714,0.009535642,0.005682755,-0.040196087,-0.057986464,0.011497667,0.03234799,0.009403486,0.038528875,-0.009464481,0.01229061,0.030416463,0.031006087,-0.05977567,-0.009088342,-0.0050219693,0.019437259,0.00423411,0.00067984656,0.04838983,0.0096881315,-0.0069077495,-0.017719217,-0.00025526015,-0.01158916,0.0038986343,-0.014740598,-0.0011017327,0.0005063904,-0.024987856,-0.014994747,-0.038122237,0.0021030768,-0.008432639,-0.026289096,0.01573686,0.0009416193,-0.011263851,-0.021409448,0.01081655,0.0020865572,0.011944968,0.029237214,0.02490653,0.015970677,0.0057742484,0.028281618,-0.006968745,0.015991008,0.021348454,-0.0308231,0.018339338,0.0017498108,0.023849273,0.0095712235,0.001043914,0.009642385,0.040236752,-0.006424868,-0.00033706412,-0.019996384,0.026472082,0.035011463,-0.0019264438,-0.028362945,0.003845263,-0.0022479412,-0.008595294,-0.017495565,-0.025069185,0.00005090907,0.03594673,-0.029460866,0.014181472,-0.016397646,-0.06550925,-0.004686494,0.0016151122,-0.020626672,-0.00039774203,0.009728795,-0.016194327,0.015503043,-0.009179835,-0.0064655314,-0.015665699,-0.0057437504,0.01923394,-0.0037003986,0.009555974,0.01803436,0.006526527,0.055587307,0.015218398,0.06888434,0.018745976,0.0038198482,-0.0170381,0.0193356,-0.024520224,-0.017475234,0.008458054,-0.014913419,-0.018867966,0.02218206,-0.042656243,0.018227512,0.015909681,-0.0020471641,0.055790626,0.02480487,0.015889348,-0.019762568,0.016590798,-0.0059877327,-0.012178784,0.013530853,0.019823564,0.023584958,-0.016743287,-0.069331646,0.02403226,0.003982503,-0.0039011757,0.012493928,-0.018186849,-0.054611377,0.013734172,0.03070111,-0.0019416927,0.011162192,0.010633563,0.017526064,0.0143339615,0.008900272,-0.011528165,0.03344591,0.015787689,0.02262936,-0.012168619,-0.005840327,-0.018075025,0.019081451,0.011802645,0.019610079,0.008127661,-0.020840157,0.044689428,0.0073906314,0.0005495956,0.02153144,-0.023666285,0.025272502,0.032286994,0.0009975319,-0.022202391,0.034665823,0.037532613,0.0026787226,-0.014974415,-0.036516022,0.011487501,-0.008178491,0.014445787,0.044689428,0.012646417,-0.021145135,-0.04546204,-0.009149337,0.035682414,-0.025333498,0.007009409,0.032957945,0.0063384576,-0.0023953472,0.031636376,0.02950153,0.02038269,0.014527114,0.019030621,-0.009169669,0.009723713,0.014171307,-0.04084671,-0.010755554,-0.010257424,0.026187437,0.019061118,-0.012260112,-0.001409252,-0.012626085]},{"id":"non-overlapping-intervals","name":"Non-overlapping Intervals","description":"Given an array of intervals `intervals` where `intervals[i] = [start_i, end_i]`, return the minimum number of intervals you need to remove to make the rest of the intervals non-overlapping.\n\nNote: Intervals are *non-overlapping* even if they have a common point. For example, `[1, 3]` and `[2, 4]` are overlapping, but `[1, 2]` and `[2, 3]` are non-overlapping.\n\n**Example 1:**\n\n```java\nInput: intervals = [[1,2],[2,4],[1,4]]\n\nOutput: 1\n```\n\nExplanation: After [1,4] is removed, the rest of the intervals are non-overlapping.\n\n**Example 2:**\n\n```java\nInput: intervals = [[1,2],[2,4]]\n\nOutput: 0\n```\n\n**Constraints:**\n* `1 <= intervals.length <= 1000`\n* `intervals[i].length == 2`\n* `-1000 <= starti < endi <= 1000`\n","difficulty":"Medium","concepts":[],"solutions":{"python":"class Solution:\n    def eraseOverlapIntervals(self, intervals: List[List[int]]) -> int:\n        intervals.sort()\n        res = 0\n        prevEnd = intervals[0][1]\n        \n        for start, end in intervals[1:]:\n            if start >= prevEnd:\n                prevEnd = end\n            else:\n                res += 1\n                prevEnd = min(end, prevEnd)\n        return res\n","javascript":"class Solution {\n    /**\n     * @param {number[][]} intervals\n     * @return {number}\n     */\n    eraseOverlapIntervals(intervals) {\n        intervals.sort((a, b) => a[0] - b[0]);\n        let res = 0;\n        let prevEnd = intervals[0][1];\n\n        for (let i = 1; i < intervals.length; i++) {\n            const start = intervals[i][0];\n            const end = intervals[i][1];\n            if (start >= prevEnd) {\n                prevEnd = end;\n            } else {\n                res++;\n                prevEnd = Math.min(end, prevEnd);\n            }\n        }\n        return res;\n    }\n}\n","cpp":"class Solution {\npublic:\n    int eraseOverlapIntervals(vector<vector<int>>& intervals) {\n        sort(intervals.begin(), intervals.end());\n        int res = 0;\n        int prevEnd = intervals[0][1];\n\n        for (int i = 1; i < intervals.size(); i++) {\n            int start = intervals[i][0];\n            int end = intervals[i][1];\n            if (start >= prevEnd) {\n                prevEnd = end;\n            } else {\n                res++;\n                prevEnd = min(end, prevEnd);\n            }\n        }\n        return res;\n    }\n};\n","java":"class Solution {\n    public int eraseOverlapIntervals(int[][] intervals) {\n        Arrays.sort(intervals, (a, b) -> Integer.compare(a[0], b[0]));\n        int res = 0;\n        int prevEnd = intervals[0][1];\n        \n        for (int i = 1; i < intervals.length; i++) {\n            int start = intervals[i][0];\n            int end = intervals[i][1];\n            if (start >= prevEnd) {\n                prevEnd = end;\n            } else {\n                res++;\n                prevEnd = Math.min(end, prevEnd);\n            }\n        }\n        return res;\n    }\n}\n","csharp":"public class Solution {\n    public int EraseOverlapIntervals(int[][] intervals) {\n        Array.Sort(intervals, (a, b) => a[0].CompareTo(b[0]));\n        int res = 0;\n        int prevEnd = intervals[0][1];\n        \n        for (int i = 1; i < intervals.Length; i++) {\n            int start = intervals[i][0];\n            int end = intervals[i][1];\n            if (start >= prevEnd) {\n                prevEnd = end;\n            } else {\n                res++;\n                prevEnd = Math.Min(end, prevEnd);\n            }\n        }\n        return res;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def eraseOverlapIntervals(self, intervals: List[List[int]]) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[][]} intervals\n     * @return {number}\n     */\n    eraseOverlapIntervals(intervals) {}\n}\n","cpp":"class Solution {\npublic:\n    int eraseOverlapIntervals(vector<vector<int>>& intervals) {\n        \n    }\n};\n","java":"class Solution {\n    public int eraseOverlapIntervals(int[][] intervals) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int EraseOverlapIntervals(int[][] intervals) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/nONCGxWoUfM","embedding":[-0.014510272,-0.020647114,0.029901957,-0.047552265,-0.03717362,0.026883116,0.018619863,0.027786564,-0.0064398283,0.051474556,0.02331339,-0.025164358,0.00016922453,-0.018685969,0.056763038,0.038914412,0.017573183,0.038627952,0.00055776956,0.04455546,0.0029499813,0.030232487,0.011276586,-0.015204385,0.037305832,-0.017363848,0.018553756,0.02809506,0.018641898,0.016328188,0.021693792,-0.011315147,-0.02653055,-0.002974771,0.008555221,0.009827762,-0.0122626675,0.03589557,-0.0032033876,0.004638439,-0.007447945,0.00775644,-0.022266712,-0.032193635,0.0011313771,0.02256419,0.057820734,0.0030849476,0.0031565626,0.01555695,0.014973014,0.01607478,-0.0041261176,-0.04927102,-0.012593198,0.0007047866,0.006219475,0.035476897,0.03589557,0.024657546,0.03607185,-0.008191638,0.043167233,0.00813655,-0.05804109,0.017033318,0.021649722,0.037195656,0.040126357,-0.05037279,-0.035763357,0.011623642,-0.013188152,-0.0073377686,-0.019644506,0.012251649,0.03512433,0.048962526,0.024944006,-0.011045215,0.008979402,-0.02401852,0.027852671,0.030210452,-0.018333403,0.013166116,-0.0129788155,0.008290797,0.026684798,-0.076065995,-0.021164944,-0.00581733,0.0050350754,-0.004985496,0.009833271,-0.00766279,0.06985203,-0.009238317,0.0137390345,0.0012436196,0.01200926,-0.02355578,0.027103469,-0.009133649,-0.03347168,-0.0221345,-0.0034375133,0.041206088,-0.024084628,0.009464179,0.010307031,0.0056079943,0.0037432534,-0.03371407,0.027786564,-0.006886044,-0.092901,-0.041228123,0.051959332,-0.010064642,-0.00061182503,0.0006455666,-0.0064728814,-0.0061423513,-0.061831165,-0.0020327603,0.010813843,-0.038451668,0.011392271,-0.054383222,0.04138237,0.00733226,0.03210549,-0.015446774,-0.037900787,-0.008500133,0.0033548807,0.03433106,-0.0017724677,-0.0077619487,-0.01972163,0.011403289,-0.037239727,-0.014400095,0.04402661,0.018245263,0.015292526,-0.0022916754,0.016890088,0.04993208,0.034639556,-0.01636124,0.027588246,0.04039078,0.0039030097,-0.014642484,0.0010094941,0.024415158,0.037393972,-0.006247019,-0.025494888,-0.0014749906,-0.022674365,-0.04583351,0.0070072385,0.024084628,0.014113636,0.038605917,-0.03362593,-0.042506173,0.0040159407,-0.03754822,0.026508516,-0.023864275,-0.00024944695,0.0021277876,-0.024128698,-0.010824861,-0.016515488,0.026640726,0.018267298,0.046891205,-0.042065464,0.012890674,0.007056818,0.011315147,0.028623907,-0.03192921,-0.04252821,0.0011024557,0.0064563546,0.032832656,0.0409637,0.02326932,0.0070623267,-0.06394656,0.016449383,-0.0033135645,-0.03078337,-0.01801389,-0.048257396,0.019655524,-0.004968969,0.027522141,0.02434905,-0.0040627657,-0.028557802,0.016537523,-0.01262625,-0.004484192,0.029240897,-0.00066347036,0.03164275,-0.06601788,0.044291034,0.004018695,0.010681631,0.020316584,0.029439215,0.04506227,-0.007348786,0.02265233,-0.020724239,0.039333083,0.061654884,0.030827442,0.0041151,0.0075746486,0.011766872,0.024503298,-0.019534329,0.007492016,0.011089285,-0.0040985732,0.0022338326,-0.02974771,0.009987518,-0.05063721,0.0036220592,-0.009778182,0.017716413,-0.0018853989,-0.011111321,-0.034595486,0.0040131863,-0.00079671526,-0.036776982,0.027478069,-0.053942513,-0.035058226,0.02109884,0.0042500664,-0.016724823,-0.057820734,-0.007122924,0.029571427,0.037724502,0.0126923565,-0.039002553,0.015270491,0.0066216197,0.028050989,-0.03759229,-0.058966573,0.016912123,-0.0450182,-0.0010576964,0.045525014,-0.054251008,0.0072275917,0.018002873,0.0018922848,-0.021253087,-0.035498936,0.013011869,-0.0014984031,0.040192463,0.03607185,0.0141907595,-0.09201958,-0.051386416,0.011232515,-0.010411698,-0.014201777,0.046935275,-0.015160315,-0.02393038,0.019975036,0.0012064349,-0.037129547,-0.04475378,0.020889504,0.006610602,0.023048967,-0.029483287,-0.012538109,0.023511708,-0.009993027,0.0688384,-0.029549392,0.03347168,-0.03589557,-0.047596335,0.02430498,-0.04605386,0.013827177,-0.012791515,0.03272248,0.0138822645,0.018509686,-0.027125504,-0.03192921,0.007128433,0.0032750026,-0.007866616,-0.03267841,-0.023952415,0.03569725,0.028073024,-0.016162923,-0.012207579,0.011381254,-0.00624151,0.055440918,0.040522993,0.039795827,0.0008786592,-0.011425324,0.02242096,-0.031157972,-0.04728784,0.0050681285,-0.042506173,-0.00061148073,-0.043916434,0.039134767,0.0037818153,-0.0059054713,-0.0219472,0.04521652,0.029681604,-0.030100275,-0.017562166,-0.0008993173,0.04799297,-0.009436634,0.009084069,0.016912123,-0.0071008885,0.01276948,-0.037724502,-0.03159868,0.023137107,-0.012494038,-0.017044336,0.01452129,0.009348493,0.0143339895,-0.06407877,0.010929529,-0.021032732,0.00893533,0.0005915112,-0.041162018,-0.020889504,-0.008329359,-0.010466787,-0.0075030336,-0.0622278,0.042021394,0.0497558,-0.002823278,0.034154776,-0.007927214,-0.026354268,0.010395172,-0.040082283,-0.0076352456,0.005282973,0.0299901,-0.02227773,0.051298272,0.024745688,-0.009205264,0.050240576,0.018146103,-0.023247285,-0.01130413,-0.09616223,-0.013111028,0.011370236,-0.005778768,0.036909197,-0.008423009,0.050240576,0.009976501,0.0217599,0.050328717,-0.03267841,0.020790344,-0.024282945,-0.010378646,-0.020393709,0.025693208,-0.06795699,-0.0556172,0.033515755,0.04658271,0.022123482,-0.013077974,-0.02005216,0.0049304073,-0.0067373053,0.007817037,0.017341813,0.004608141,-0.037944857,-0.006830956,-0.013000851,-0.038341492,0.00785009,0.013364434,0.02256419,-0.011855014,-0.005054356,-0.015149297,0.001289756,-0.04733191,-0.009150175,-0.05068128,-0.0007684825,0.038804237,-0.017837608,0.0019611453,-0.04715563,0.06354992,0.04332148,0.024327016,0.0046522114,-0.053942513,-0.03309708,-0.09140259,0.042263784,-0.00070995116,-0.061743025,-0.020647114,0.021826005,0.04781669,0.07201149,0.032458056,0.022586225,0.009497232,0.018961411,0.004715563,-0.009662497,0.035961676,-0.040853523,-0.028910367,-0.03153257,-0.0016113343,-0.07694741,-0.018597828,-0.037327867,0.04332148,0.03342761,0.023820203,0.013408504,-0.015854428,0.01745199,-0.0076407543,0.0013806518,0.02520843,0.0226964,0.011171917,-0.038672023,0.008995928,0.009331967,0.055044282,-0.025186395,-0.01594257,0.018234244,-0.07306919,-0.0016801947,0.01679093,0.050769426,-0.007976794,-0.026288161,-0.041184053,-0.030893547,-0.039906003,-0.0018578547,0.028513731,-0.017143495,-0.008555221,0.00158379,-0.013970406,0.006814429,0.0020300057,0.027147539,-0.00081806205,0.012350809,-0.06518054,0.02686108,0.01763929,0.029681604,0.010268468,-0.042462103,-0.052752607,0.007651772,0.02553896,-0.03234788,-0.0024748442,0.009491723,0.013915318,-0.018124068,0.028271342,0.0006472881,-0.020272514,-0.016019693,0.00016147773,-0.010439242,-0.021837022,-0.04781669,-0.020470832,-0.0003227833,0.006654673,-0.013639876,-0.027786564,-0.061831165,-0.0075305775,-0.004434612,0.027984884,-0.038782198,0.040699273,-0.017694378,0.043784223,-0.0016843263,0.008764557,-0.021385299,-0.0021470685,-0.015402704,0.078930594,-0.036402382,0.03750415,-0.026552586,-0.03474973,0.026640726,0.018575793,-0.019831806,0.017463008,-0.02171583,0.0021029979,0.020768309,-0.022266712,-0.012163508,0.0004114411,-0.022586225,-0.015347615,0.040699273,0.024789758,-0.050989777,-0.06002427,0.026596656,0.006610602,-0.0060872626,0.022828612,0.012648285,0.011843995,0.024040557,-0.019159729,-0.006775867,-0.0008628213,0.00075677625,-0.051562697,0.018135086,-0.035763357,0.028117094,-0.02426091,-0.01782659,-0.030232487,-0.016151905,0.009359511,-0.012879657,-0.003858939,-0.012075366,-0.009304423,-0.019137694,0.046362355,0.00442084,-0.004332699,0.00066484755,0.028073024,0.014278901,-0.00718903,-0.012042314,-0.038121138,0.008808628,0.018168138,0.022431977,-0.029571427,-0.022354852,0.043828294,0.022299765,-0.019005481,-0.036953267,0.04010432,-0.0113371825,0.037239727,-0.0123838615,0.01796982,-0.0071339416,-0.0050213034,0.01233979,-0.0024638264,-0.045040235,-0.013375452,-0.008979402,0.027125504,0.031620715,-0.029020544,0.04266042,0.016427347,-0.013243239,-0.0013551734,0.022718437,0.013199169,-0.015975622,-0.01654854,0.014311953,0.031510536,-0.020547954,-0.0034678117,-0.028491696,0.012174525,-0.025715243,-0.030540982,0.003858939,0.030518947,0.011899084,-0.038010962,0.03395646,-0.031863105,0.0005460633,0.011177426,-0.01248302,0.008819645,0.008031881,0.00945867,-0.013177134,-0.0021512,-0.013221204,-0.006704252,0.025825419,-0.019336011,0.02463551,0.004696282,0.00062731863,-0.04993208,0.0070072385,-0.009805727,0.020074196,0.011425324,0.04076538,0.016779913,0.023732062,-0.024944006,0.020547954,-0.0045172446,0.028667979,0.0065665315,-0.003415478,0.021164944,0.034176815,-0.028006919,0.020636097,0.03040877,0.020779327,-0.004889091,-0.020437779,-0.017275708,-0.02937311,0.0435198,-0.00013221205,0.051650837,-0.040280603,0.0097671645,0.001979049,0.0024652036,-0.046847135,-0.013331382,-0.008874734,0.00718903,-0.01267032,0.013077974,0.04347573,0.031664785,0.0097671645,0.035543006,-0.006373722,0.00015639927,0.037724502,-0.03173089,0.0083624115,0.009954466,-0.044114754,0.031995315,0.007293698,0.013011869,-0.013606823,-0.029769745,0.014675537,-0.011921119,-0.018796146,0.020294549,-0.018068979,0.005395904,0.02071322,0.0031345272,-0.002295807,-0.027367894,0.009563338,0.001688458,0.0048257397,0.009623935,-0.012725409,-0.014840802,0.023776133,0.015722215,0.015865445,-0.031334255,-0.034441236,-0.01262625,0.004748616,0.01200926,-0.017000265,0.0011878426,-0.051562697,0.00818062,-0.028513731,-0.010587981,-0.018024908,0.034353096,0.021231052,0.004076538,-0.0073598037,0.053986587,-0.034683626,0.014124653,-0.048169255,0.017760485,-0.061610814,0.005125971,0.014697572,0.011866031,0.0057897856,0.005495063,-0.008296306,-0.0055914675,-0.009133649,0.00283705,0.00695215,0.027566211,-0.039487332,-0.009640462,0.021418352,0.023952415,-0.03239195,0.03214956,0.0040930645,0.013992442,0.015193367,-0.020724239,-0.0054262024,-0.007486507,0.02492197,-0.014653502,-0.004743107,-0.01565611,-0.03106983,0.014168724,-0.026728868,0.019159729,-0.018619863,-0.0017669589,-0.015821375,0.014455183,-0.009001437,0.0063021076,0.033515755,-0.040985733,-0.017154513,-0.029857887,-0.0077619487,-0.006043192,0.0036110415,-0.004979987,-0.011877049,-0.00319237,0.007150468,-0.03759229,-0.00728268,-0.014862837,0.015248456,-0.034154776,0.012394879,0.004834003,-0.019611454,0.0011947287,-0.041272193,-0.0008745276,-0.024062593,0.032413986,-0.019633489,0.014609431,0.081662975,0.003850676,-0.018708004,0.024944006,0.004010432,0.04138237,0.00069411326,-0.003093211,-0.004194978,0.00143092,-0.040236533,-0.02932904,0.057291888,-0.015667127,0.016240045,0.0314885,0.012130455,0.020261496,0.009607408,0.037570257,0.036049817,0.02529657,0.017187566,-0.019964019,-0.0028783663,0.05433915,-0.040633168,0.020272514,0.0066326377,-0.028888332,-0.06390249,0.030298594,-0.017551148,-0.03437513,0.014719607,-0.0058228387,-0.021010697,0.014984032,0.039663613,0.021341227,0.011810943,0.00836792,0.026596656,0.008478098,-0.010637561,0.014091601,0.010648578,-0.02071322,0.024988076,-0.015072173,-0.02223366,-0.013221204,-0.036424417,-0.0044098226,-0.03717362,-0.02813913,0.004285874,0.05751224,-0.028381519,0.010020571,-0.007916196,0.02364392,0.00035325406,0.005944033,0.0113482,0.026133914,0.03750415,0.01801389,-0.010709176,0.028557802,-0.030673195,-0.018476633,0.011535501,0.029152757,0.008301815,0.00638474,0.023137107,-0.016559558,0.028579837,0.013419523,-0.025847455,-0.007817037,0.0221345,0.013188152,0.03750415,0.009017963,-0.008615818,-0.055793483,0.01924787,-0.019126676,0.03177496,-0.0012332905,0.004977233,0.014973014,-0.007872125,-0.015623056,0.019005481,-0.028690014,-0.003093211,0.00004217702,-0.04479785,0.016151905,0.0049304073,-0.027544176,0.0041178544,-0.0070017297,-0.029240897,-0.0026318461,-0.0022393416,0.022960825,0.0155238975,-0.03126815,-0.03342761,0.024437193,0.044445284,0.009904886,0.046847135,0.0028191465,0.015490845,-0.007348786,-0.017749468,0.00600463,-0.006753832,-0.0032557216,-0.02099968,0.026640726,-0.019567383,-0.029262932,-0.027323823,-0.025693208,-0.015446774,-0.037129547,0.014289918,-0.03164275,0.0029830344,-0.008665398,-0.0073763304,-0.046142004,0.0325462,0.0005990858,-0.017286725,-0.017661326,0.00033466175,0.054779857,-0.008489115,-0.026288161,0.046803065,-0.044775814,0.0032942835,-0.022828612,0.033273365,0.018972429,0.008869224,-0.0041509075,-0.034022566,-0.029637534,0.0007147714,-0.008626836,0.004767897,0.00614786,-0.015667127,0.03375814,-0.008577256,-0.020118266,0.019666541,0.0056961356,0.03201735,-0.02553896,-0.02161667,0.010615526,0.015865445,-0.014322972,0.021231052,0.053149242,0.025737278,0.023291355,0.045569085,-0.004756879,0.005718171,-0.011469395,0.014036512,-0.021914147,-0.016823983,0.001596185,0.007326751,-0.007585666,-0.040985733,-0.044533424,0.02904258,-0.005547397,-0.0017297743,-0.06800106,0.01697823,0.007128433,-0.013033904,0.028161166,-0.04484192,-0.040875558,0.011921119,-0.003933308,0.023533745,0.013705982,0.04653864,0.0006163009,-0.039156802,0.009976501,0.044952095,-0.01248302,-0.024194805,-0.0252525,-0.012207579,-0.013331382,0.042440068,0.02463551,0.00027131013,0.02520843,-0.003839658,-0.020977644,-0.011072759,0.008015355,-0.019214816,0.0056162574,0.0037239725,-0.03040877,0.0029775253,0.008224691,-0.024150733,-0.0059605595,-0.017815573,0.028645944,-0.019192781,-0.008059426,-0.01456536,0.0051232167,0.009513758,0.00794374,0.039685648,0.011910101,-0.028227272,0.023842238,0.007288189,-0.0016443873,0.008042899,0.019115658,-0.020569991,0.0022847895,-0.0162731,-0.034485307,-0.0014433148,0.005718171,-0.00024875833,-0.006037683,-0.020019107,-0.0097175855,-0.014124653,-0.021671757,-0.023115072,-0.022531135,-0.019302959,0.039729718,0.0013200546,0.000029545432,-0.06090568,0.00889126,0.024194805,0.0040737838,0.021308174,0.010296013,0.014433148,0.0066216197,0.013827177,0.018696986,-0.0223218,-0.0015989394,-0.015468809,-0.018002873,0.024327016,0.026574621,0.0329208,0.017275708,-0.0055694324,-0.012703374,0.008582765,-0.0055170986,-0.010290504,-0.012637268,0.014157707,0.009728603,0.0039470806,-0.054779857,0.014741643,-0.0037680434,0.002598793,0.0016719315,0.0066601816,0.038627952,-0.013066957,0.006616111,-0.04640643,0.028932402,-0.03007824,-0.01035661,0.026420373,-0.031752925,0.048257396,0.012560144,0.016493453,-0.0113482,-0.02128614,0.05169491,-0.03532265,-0.02335746,-0.005690627,-0.022002287,-0.011204971,0.0030574035,-0.037393972,-0.008004338,-0.018829199,-0.043872364,-0.0056630825,0.0042913826,0.005740206,-0.029923992,-0.004018695,0.02904258,-0.015865445,0.005778768,0.013044922,-0.0607294,0.025472853,-0.031003725,0.018465616,0.052532252,0.009502741,-0.0093374755,-0.010868932,0.009210773,0.016636683,0.029483287,0.00016233849,-0.016251063,-0.043828294,-0.015281509,-0.013419523,0.0033658983,-0.02335746,-0.014973014,0.056763038,0.040985733,-0.0034788295,-0.0037157093,-0.025957631,-0.015413721,0.006092772,-0.020349637,-0.0061974395,0.014201777,0.013860229,0.004200487,0.04658271,0.027015328,-0.009849797,0.0029059106,-0.008268761,-0.008400974,0.010119731,0.0010384155,-0.009293405,0.0094807055,-0.0014405604,0.003916782,-0.0023577814,-0.051342342,0.013243239,-0.01754013,0.017275708,-0.008423009,-0.0040737838,-0.01584341,0.020151319,-0.013772088,-0.004434612,-0.04799297,0.0007354295,0.024503298,-0.0105273845,-0.06394656,0.008995928,0.031180007,-0.023048967,0.009370529,0.036424417,-0.015490845,0.04737598,0.014433148,0.026464444,0.020074196,0.00003458085,-0.05945135,-0.005855892,-0.03259027,-0.022145517,0.039421223,-0.015821375,-0.0024569405,0.023577815,0.010185836,-0.017055353,-0.010125239,0.050857566,0.00041109681,-0.0256271,0.02653055,-0.030563017,-0.037482116,-0.022002287,-0.015567969,-0.001418525,-0.00025116844,0.050769426,-0.027676389,-0.018851234,-0.00054124306,0.05187119,-0.018741058,-0.06306514,-0.020614062,-0.057159673,-0.018674951,0.04310113,-0.018939376,-0.007387348,0.040831488,0.019192781,-0.04786076,-0.0052416567,0.0028783663,0.03210549,0.00032760354,0.02081238,-0.031708855,-0.006516952,-0.0018440826,-0.025494888,-0.018432563,-0.004492455,-0.0050047766,0.0226964,0.0075250687,-0.0068640085,-0.0034953558,-0.014675537,0.04706749,-0.008803119,-0.009871833,-0.016262082,0.005219621,-0.008973893,-0.0010680255,0.030827442,-0.018663934,-0.0012718523,0.041184053,0.023401532,0.015006067,-0.007861108,0.008009846,0.034309026,0.0033879336,0.01276948,0.01697823,-0.009006945,-0.01485182,-0.009882851,-0.035675216,0.0017104934,0.0035256546,0.01598664,0.00014142213,0.014917926,0.03296487,-0.015116244,-0.014135671,-0.0061313338,-0.005222376,-0.0002974771,-0.0018000118,-0.00551159,0.006924606,0.0033273364,0.0409637,-0.0143339895,-0.022784542,-0.00012937155,0.017341813,0.021220034,0.016537523,-0.010345592,0.022454012,-0.0002034826,0.00803739,-0.0071945386,-0.042726524,-0.0012594574,0.026089843,-0.02099968,0.056630827,-0.020206407,0.013551734,-0.027081434,0.0028728575,0.04303502,0.0039939056,0.01650447,0.008048409,0.014367042,-0.0071339416,-0.01163466,-0.027720459,-0.0025781349,0.02293879,0.0024445455,0.020547954,0.017760485,0.018223226,-0.011667713,-0.0018151612,-0.03375814,-0.007894161,0.028028954,0.004035222,0.017187566,-0.0031758435,-0.037658397,-0.024569405,0.027588246,0.02322525,0.012923728,0.016515488,-0.007552613,-0.012416914,-0.0067373053,0.024062593,-0.053898443,-0.0008697074,-0.00624151,0.034176815,0.008351394,0.023842238,0.021484457,-0.014884872,0.0011437719,-0.012350809,0.0003351782,-0.020823397,-0.0063957577,-0.01863088,-0.032413986,-0.007883143,-0.018465616,-0.019236853,-0.026750904,-0.028381519,0.012449968,-0.016625665,-0.03395646,0.0073432773,0.0059991213,0.004867056,-0.0075636306,0.0037652887,0.025781348,0.018531721,0.03173089,0.0006848171,-0.009937938,0.01200926,-0.027500106,0.016019693,0.0217599,-0.020977644,0.020702202,-0.0005632784,0.017429955,-0.0073432773,0.0056107487,0.007073344,0.04649457,-0.015755268,-0.014025494,-0.0050213034,0.044533424,-0.0090289805,0.015567969,0.0035063736,0.002572626,-0.0036330768,-0.017584203,-0.008847189,-0.0030353682,-0.012361826,0.039355118,-0.018201191,0.010488822,-0.03569725,-0.022431977,-0.012615233,-0.0044070682,-0.0031042285,0.023489673,0.027279751,-0.002875612,0.025847455,-0.04493006,-0.02104375,-0.0453928,0.009535794,0.03446327,-0.0043354533,0.0008235709,0.012064349,-0.0051204623,0.03787875,0.019732649,0.046186075,0.010400681,0.005811821,-0.016669735,-0.004938671,-0.018972429,0.006891553,-0.01815712,-0.011392271,0.0072441185,0.027654354,-0.040655203,0.011568554,0.0016705543,-0.0016085799,0.023071002,0.011480412,0.018135086,-0.03164275,0.02393038,0.017650308,-0.0016113343,0.02104375,0.0025974158,0.0040985732,-0.017892696,-0.029527357,0.018983446,-0.010466787,0.013485628,0.011502448,-0.022674365,-0.043718114,-0.009772673,0.0050157947,0.0027957337,0.026508516,0.0036220592,0.02388631,-0.01532558,-0.008400974,-0.01726469,0.022828612,0.021164944,0.042792633,-0.01844358,-0.0036826562,-0.029307004,0.009497232,0.011799925,0.0438944,0.006924606,-0.028844262,0.03276655,0.01210842,-0.010554928,0.0149289435,-0.026222056,-0.015468809,0.017881678,0.014267883,-0.00018334092,0.026640726,0.009998536,-0.00051920774,-0.0035669708,-0.030585052,0.00016999921,-0.0023302373,0.010472296,0.021627687,-0.014984032,-0.03248009,-0.028050989,0.00048202308,0.021814987,-0.04711156,-0.020536937,0.03391239,0.016989248,0.017297743,0.021583617,-0.008929822,0.010852405,-0.0041316263,0.019644506,-0.019358046,0.031841066,0.019148711,-0.04285874,0.033273365,-0.023798168,0.026155949,0.02937311,0.00031520866,0.011502448,0.016019693]},{"id":"spiral-matrix","name":"Spiral Matrix","description":"Given an `m x n` matrix of integers `matrix`, return a list of all elements within the matrix in *spiral order*.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/fe678b92-8606-4e07-ce70-08ec3479aa00/public)\n\n```java\nInput: matrix = [[1,2],[3,4]]\n\nOutput: [1,2,4,3]\n```\n\n**Example 2:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/8a460616-db14-4ccf-068b-00aa6d398400/public)\n\n```java\nInput: matrix = [[1,2,3],[4,5,6],[7,8,9]]\n\nOutput: [1,2,3,6,9,8,7,4,5]\n```\n\n**Example 3:**\n\n```java\nInput: matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]\n\nOutput: [1,2,3,4,8,12,11,10,9,5,6,7]\n```\n\n**Constraints:**\n* `1 <= matrix.length, matrix[i].length <= 10`\n* `-100 <= matrix[i][j] <= 100`\n","difficulty":"Medium","concepts":[],"solutions":{"python":"class Solution:\n    def spiralOrder(self, matrix: List[List[int]]) -> List[int]:\n        res = []\n        left, right = 0, len(matrix[0])\n        top, bottom = 0, len(matrix)\n\n        while left < right and top < bottom:\n            for i in range(left, right):\n                res.append(matrix[top][i])\n            top += 1\n            for i in range(top, bottom):\n                res.append(matrix[i][right - 1])\n            right -= 1\n            if not (left < right and top < bottom):\n                break\n            for i in range(right - 1, left - 1, -1):\n                res.append(matrix[bottom - 1][i])\n            bottom -= 1\n            for i in range(bottom - 1, top - 1, -1):\n                res.append(matrix[i][left])\n            left += 1\n\n        return res\n","javascript":"class Solution {\n    /**\n     * @param {number[][]} matrix\n     * @return {number[]}\n     */\n    spiralOrder(matrix) {\n        const res = [];\n        let left = 0;\n            let right = matrix[0].length;\n        let top = 0;\n            let bottom = matrix.length;\n\n        while (left < right && top < bottom) {\n            for (let i = left; i < right; i++) {\n                res.push(matrix[top][i]);\n            }\n            top++;\n            for (let i = top; i < bottom; i++) {\n                res.push(matrix[i][right - 1]);\n            }\n            right--;\n            if (!(left < right && top < bottom)) {\n                break;\n            }\n            for (let i = right - 1; i >= left; i--) {\n                res.push(matrix[bottom - 1][i]);\n            }\n            bottom--;\n            for (let i = bottom - 1; i >= top; i--) {\n                res.push(matrix[i][left]);\n            }\n            left++;\n        }\n\n        return res;\n    }\n}\n","cpp":"class Solution {\npublic:\n    vector<int> spiralOrder(vector<vector<int>>& matrix) {\n        vector<int> res;\n        int left = 0, right = matrix[0].size();\n        int top = 0, bottom = matrix.size();\n\n        while (left < right && top < bottom) {\n            for (int i = left; i < right; i++) {\n                res.push_back(matrix[top][i]);\n            }\n            top++;\n            for (int i = top; i < bottom; i++) {\n                res.push_back(matrix[i][right - 1]);\n            }\n            right--;\n            if (!(left < right && top < bottom)) {\n                break;\n            }\n            for (int i = right - 1; i >= left; i--) {\n                res.push_back(matrix[bottom - 1][i]);\n            }\n            bottom--;\n            for (int i = bottom - 1; i >= top; i--) {\n                res.push_back(matrix[i][left]);\n            }\n            left++;\n        }\n\n        return res;\n    }\n};\n","java":"class Solution {\n    public List<Integer> spiralOrder(int[][] matrix) {\n        List<Integer> res = new ArrayList<>();\n        int left = 0, right = matrix[0].length;\n        int top = 0, bottom = matrix.length;\n\n        while (left < right && top < bottom) {\n            for (int i = left; i < right; i++) {\n                res.add(matrix[top][i]);\n            }\n            top++;\n            for (int i = top; i < bottom; i++) {\n                res.add(matrix[i][right - 1]);\n            }\n            right--;\n            if (!(left < right && top < bottom)) {\n                break;\n            }\n            for (int i = right - 1; i >= left; i--) {\n                res.add(matrix[bottom - 1][i]);\n            }\n            bottom--;\n            for (int i = bottom - 1; i >= top; i--) {\n                res.add(matrix[i][left]);\n            }\n            left++;\n        }\n\n        return res;\n    }\n}\n","csharp":"public class Solution {\n    public List<int> SpiralOrder(int[][] matrix) {\n        List<int> res = new List<int>();\n        int left = 0, right = matrix[0].Length;\n        int top = 0, bottom = matrix.Length;\n\n        while (left < right && top < bottom) {\n            for (int i = left; i < right; i++) {\n                res.Add(matrix[top][i]);\n            }\n            top++;\n            for (int i = top; i < bottom; i++) {\n                res.Add(matrix[i][right - 1]);\n            }\n            right--;\n            if (!(left < right && top < bottom)) {\n                break;\n            }\n            for (int i = right - 1; i >= left; i--) {\n                res.Add(matrix[bottom - 1][i]);\n            }\n            bottom--;\n            for (int i = bottom - 1; i >= top; i--) {\n                res.Add(matrix[i][left]);\n            }\n            left++;\n        }\n\n        return res;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def spiralOrder(self, matrix: List[List[int]]) -> List[int]:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[][]} matrix\n     * @return {number[]}\n     */\n    spiralOrder(matrix) {}\n}\n","cpp":"class Solution {\npublic:\n    vector<int> spiralOrder(vector<vector<int>>& matrix) {\n        \n    }\n};\n","java":"class Solution {\n    public List<Integer> spiralOrder(int[][] matrix) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public List<int> SpiralOrder(int[][] matrix) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/BJnMZNwUk1M","embedding":[0.019599827,-0.015549406,-0.017506232,-0.03227712,-0.030130921,0.017590398,-0.00067463174,-0.034044575,-0.015949188,0.053402428,-0.0033639532,-0.070740335,-0.004555408,0.021062186,0.010268079,0.022934848,0.04797381,-0.02480751,-0.04239791,0.00092449534,0.013508416,-0.007885169,0.0016767163,-0.013266442,-0.0004280558,0.0054969992,0.03894716,-0.009889338,-0.017201137,0.0430081,0.022808602,-0.0055233007,-0.019326292,-0.004100393,-0.011898768,0.013876636,-0.016654067,0.050919574,0.0019029086,0.054496568,0.00679629,0.032929394,-0.019168483,-0.012182823,0.005239245,0.011635753,-0.023818577,-0.009105556,0.018263714,0.04246103,0.007422264,0.040651493,0.014907652,0.016254285,-0.050120007,-0.0048526144,-0.04406016,0.012067097,0.005528561,0.03364479,0.057021502,-0.0022869096,0.029289275,-0.013739868,0.028826369,0.013697785,-0.0102365175,0.030783195,0.01856881,-0.019726073,-0.08727867,-0.033771038,-0.0053576017,-0.0074748667,-0.02240882,-0.0133821685,0.023187343,0.015107542,0.05028834,-0.0231663,-0.011435863,-0.041408975,0.057568572,0.042124372,0.0011309616,0.01285614,0.024576059,0.008153444,-0.019768156,-0.03989401,-0.005105108,-0.025333539,-0.050120007,0.036674716,0.04239791,-0.006933057,0.024533976,0.037747815,-0.012530002,0.035790987,-0.010631039,-0.014097568,0.036317017,0.034759972,0.0037348033,-0.031330265,0.0057968358,-0.0048578745,-0.007958814,-0.021009583,-0.018842345,-0.015623051,0.022808602,-0.02590165,0.053739086,0.01487609,0.001981813,-0.027248284,-0.0019305251,-0.012456358,-0.000020106212,-0.01947358,-0.035286,-0.008395417,-0.031182978,0.012182823,0.00062202883,-0.01891599,-0.0030220344,0.041703552,-0.0035664742,-0.004337106,0.009100296,-0.03307668,-0.02149353,-0.023944823,0.011888247,0.04073566,0.034233943,0.066405855,-0.013455813,-0.008805719,-0.021377804,-0.018400481,0.06973036,0.007459086,-0.023965865,-0.007548511,0.0035506934,0.006596399,0.040567327,0.04079878,-0.0012736468,0.05643235,-0.007895689,-0.009116076,-0.002866856,0.00070422085,0.040525246,0.013666224,-0.0054654377,-0.01377143,-0.0147393225,-0.030783195,0.004573819,-0.004942039,-0.025060004,-0.004097763,-0.0279216,-0.053781167,0.05054083,-0.047090083,-0.023460878,-0.020851776,0.055716954,0.024155235,-0.024723345,-0.04852088,-0.056011528,-0.027984723,-0.03911549,-0.0025380882,-0.047342576,-0.054286156,0.00606511,0.05083541,-0.041619387,-0.03255065,-0.045659285,0.00826917,0.001781922,0.029078864,-0.034044575,0.041661467,0.027858477,-0.0039478447,0.039704643,-0.05201371,-0.0074748667,0.042776648,-0.02461814,-0.0074748667,-0.033139803,0.017180094,0.007606374,-0.039936095,-0.075916454,-0.0123511525,0.013213839,-0.020662405,0.03511767,-0.04885754,0.008479581,-0.054033663,0.012224905,0.016106997,0.0109939985,-0.012835098,0.029604891,0.036948252,-0.029457605,0.02609102,-0.030215085,0.044354733,-0.000030287743,0.024660222,0.040083382,-0.01487609,0.009468515,0.0047894907,-0.02074657,-0.015959708,0.029331356,-0.012814058,0.0367168,-0.03452852,-0.053570755,-0.019599827,-0.015370557,-0.0007423579,0.03762157,0.008863582,0.02625935,-0.006575358,0.0090950355,-0.030699031,-0.0060493294,0.014760364,-0.022114243,0.049909595,0.0004556723,0.014718281,-0.045112215,-0.05567487,-0.03417082,0.057105668,-0.00845328,-0.01910536,-0.029310316,-0.00013561676,-0.012235426,0.06926745,-0.041261688,-0.037179705,-0.012961346,-0.021272598,0.0056495476,-0.005349711,0.0017003876,0.021987997,0.018221632,-0.013098113,-0.0150128575,0.003232446,0.01782185,-0.020125855,-0.0319615,-0.019505141,-0.0031114593,-0.03227712,-0.022135286,0.0032797887,0.03619077,-0.005454917,0.028195135,0.007832566,0.037390117,0.020462515,-0.0074170036,-0.050120007,-0.02499688,-0.0016675108,-0.021346241,0.055001553,-0.013192798,-0.017537795,-0.012908743,0.0021948544,-0.017695604,0.0063807275,-0.0035664742,-0.023734411,-0.02186175,0.037495323,-0.041766673,-0.013645183,-0.018084865,-0.016790833,-0.018158508,0.014644638,-0.027269324,0.047005918,0.027753271,0.020304706,-0.0025643895,-0.04852088,-0.0061650556,-0.017674562,0.0040083383,-0.050035845,-0.034844138,-0.03343438,0.029415522,0.047090083,0.012593126,0.021135831,-0.034065615,0.024744388,0.015496803,-0.030362373,0.0043397364,-0.016611984,0.0014952364,-0.019452538,-0.046374686,0.009073994,0.06287094,0.017653521,-0.020451993,-0.010867751,0.019768156,0.021798627,0.041072316,-0.01139378,-0.04410224,-0.0062123984,-0.012729893,0.0046711345,0.012456358,-0.008058758,-0.009968243,0.0054233554,0.015454722,0.03360271,0.00266302,0.0047368878,-0.043260597,0.02699579,-0.012319591,0.0070856055,-0.041030232,-0.031582758,0.002866856,0.0020830734,0.011498986,0.06043017,-0.018284755,0.019526184,0.042124372,0.038589463,0.06371259,-0.03048862,0.007769443,-0.002131731,-0.011351698,-0.03509663,-0.002993103,0.06741583,-0.013077072,-0.040104423,-0.050246254,0.009026651,-0.02150405,0.031835254,0.0180007,0.044396818,-0.0022500874,0.012572085,-0.033665832,0.024512934,0.0070698247,0.0006253165,0.029457605,0.046585098,0.05971477,-0.0012019754,0.05752649,0.017043328,0.015623051,0.005728452,0.03290835,-0.037979268,-0.0152863925,-0.011456904,-0.023671288,-0.059588525,0.035559535,0.022156326,-0.005970425,0.007616895,-0.010189175,-0.014371103,0.0043634074,0.003840009,-0.04519638,0.019578787,-0.044396818,0.027227242,-0.016475217,0.040167548,-0.012687811,-0.011677836,0.017779768,0.015402119,-0.010299641,0.032950435,-0.006922537,-0.009158159,0.0012328796,-0.0075800726,0.014781404,0.050751243,-0.010888793,0.00606511,-0.021693422,0.029141987,0.0183584,0.0040477905,0.03362375,-0.030930484,0.026385596,-0.031666923,0.0006710153,0.020525638,0.03837905,-0.020978022,0.017148534,0.04999376,0.012835098,0.011877727,0.022850685,-0.035349123,0.07196072,0.020473035,-0.0120250145,0.0013242771,-0.010699422,-0.0033376517,-0.0024000057,-0.008290212,-0.021535613,0.015296913,-0.03764261,-0.014455267,0.022913808,-0.0037058718,0.005047245,-0.054833226,0.0030535962,-0.021966957,-0.00973153,-0.0018608263,0.000679892,0.0063859876,-0.016633026,0.06287094,-0.0031088293,0.020967502,-0.017769247,0.009805174,0.01873714,-0.031351306,-0.056011528,0.02958385,0.041682508,0.019757636,-0.021609256,-0.0672475,-0.015538886,0.004313435,0.023734411,0.028047847,-0.03452852,-0.006533276,0.0591677,-0.028026806,-0.053739086,-0.07945137,0.02440773,-0.015559927,0.0030641167,0.0034638986,-0.008905665,0.006643742,0.018768702,-0.029857386,-0.016496258,-0.02386066,0.023923783,0.07549563,-0.041977085,0.008542705,-0.014276417,-0.0036611594,0.011162328,0.049825434,0.002551239,-0.01303499,-0.010089229,-0.0063965083,-0.0011500301,-0.030551743,-0.04023067,-0.025207292,0.041030232,-0.038526338,-0.012530002,-0.017948097,-0.03840009,0.014139649,-0.029163027,0.017516753,-0.022156326,0.04889962,-0.007090866,0.014770884,0.008337554,0.0004033982,-0.031835254,-0.008558486,0.011783041,0.032992516,-0.02390274,0.02278756,0.016338449,-0.030614866,-0.00021764435,-0.008248129,-0.019810239,0.03930486,-0.0042897635,-0.032676898,0.0023723892,-0.014812967,-0.007737881,-0.0014426336,0.011004519,0.02480751,0.041177522,0.032171912,-0.024323564,0.0064438507,0.0002972062,-0.013676745,-0.00605985,0.0039215437,-0.00012345235,-0.019778676,0.01158315,0.026869543,0.0010204955,-0.0066595227,0.015770338,-0.024576059,-0.0065543167,-0.009379091,-0.03509663,-0.043849748,-0.02680642,0.0065069743,-0.035012465,-0.019168483,-0.017390506,-0.0231663,0.012214385,-0.012393234,-0.0009034542,0.027458696,0.034128737,-0.027837435,-0.009021391,0.023734411,-0.0051524504,-0.00021534297,-0.00844802,-0.046711344,0.01488661,0.04574345,0.025291458,-0.0031456512,-0.000981701,0.03541225,0.014581514,-0.014307979,-0.043765582,-0.0022119505,0.021714462,0.050246254,0.018716099,0.014623596,-0.0056074653,0.010962437,-0.0025117868,-0.040651493,0.009052953,0.020693967,-0.0022711286,0.024954798,0.03337126,-0.018084865,-0.0030983086,0.03705346,0.04683759,0.023734411,0.0026551296,-0.010436408,0.0073065376,-0.028700123,-0.041366894,0.01690656,-0.0005861932,0.0027090474,-0.0049762307,-0.0050209435,-0.04481764,-0.00018443879,0.008111361,-0.0048079016,0.020525638,0.0027774312,-0.009747311,0.0024276222,-0.051887464,0.0012427426,0.0028326642,0.020336267,0.033118762,0.017358946,-0.05933603,-0.010273339,0.00023013754,-0.00845328,0.03417082,0.01743259,0.015623051,-0.005712671,-0.012750934,-0.079198875,0.018474126,-0.037768856,0.012530002,0.022703396,0.005975685,0.0002723842,0.0013979211,-0.0116988765,-0.03983089,-0.0015767708,0.03379208,0.016938122,0.030593826,0.011709398,0.00044317913,-0.013613621,-0.0074170036,-0.008942487,-0.00073644007,0.016359491,-0.018242674,-0.013350607,-0.012109179,0.012193344,0.012992907,0.05016209,-0.0020488815,-0.00201995,-0.044018075,0.029141987,-0.027143078,-0.003634858,0.0061071925,0.008358595,-0.023965865,0.0017556206,0.03050966,-0.0035954057,-0.006259741,0.013308524,0.0036637895,-0.049530856,0.013571539,0.027227242,0.0011013724,0.0115936715,-0.023061095,-0.0044580926,0.0023460877,0.016506778,0.0016438395,-0.007401223,0.025838526,-0.033749998,-0.015538886,0.014539432,-0.073854424,0.0069698794,0.017527275,-0.030593826,-0.005912562,0.0004260832,0.011120246,0.01083619,-0.017790288,-0.06371259,-0.025501868,-0.033118762,0.0051708617,0.024050029,-0.0064754123,-0.021535613,0.019042237,0.03145651,0.04020963,-0.012908743,0.019862842,-0.035159755,0.030088838,-0.015118063,-0.011183369,0.012445837,-0.043386843,-0.009889338,-0.0032219253,-0.0022737589,0.001148715,0.01101504,-0.027479736,0.00038860366,-0.043639336,0.009226542,-0.03381312,0.0037637348,0.049025867,0.008127143,-0.014634117,-0.024007946,-0.0060703703,-0.053023685,-0.020357309,0.012172302,-0.01763248,0.022240492,-0.023019014,-0.06005143,0.030425496,-0.023355672,-0.0039531053,0.03198254,0.0027958422,-0.0027800614,0.017190617,0.011193889,0.030656949,-0.007906211,0.009116076,0.009820955,-0.0054338756,0.0123511525,0.01011027,-0.043428924,-0.03236128,0.045617204,-0.0077221002,0.022072162,0.025354581,0.017716644,-0.0018897579,-0.017190617,0.035917234,-0.0035322823,-0.034654766,-0.00238554,0.033181887,-0.02903678,-0.009952461,-0.0323192,0.014602555,0.0056548077,-0.048983786,-0.006317604,-0.017927056,0.014791925,-0.019610347,-0.00059737125,0.015212748,0.010962437,-0.008258649,0.0038505297,-0.03675888,0.031709008,0.02426044,0.05424407,-0.029310316,0.0037532144,0.005933603,-0.028679082,0.014560472,-0.02002065,-0.0010395641,0.015033899,0.008232349,-0.04427057,-0.026953707,0.036127646,-0.013487374,0.0028826369,0.011046601,0.011341178,0.022471944,-0.0038163378,0.025081046,-0.013718827,-0.03840009,0.0095369,0.04020963,0.011793562,0.03255065,-0.060850993,0.025501868,0.011656795,0.017001245,0.044775557,-0.02074657,-0.02333463,-0.022261532,0.02369233,-0.01911588,-0.061650556,0.041640427,-0.03282419,0.0058862604,0.03402353,0.04410224,-0.027269324,-0.016201682,-0.0025301978,0.02038887,0.005181382,-0.0062018777,-0.003321871,0.02903678,-0.021535613,-0.009531639,-0.04683759,0.0009744681,-0.04187188,-0.0009784133,0.016506778,-0.013150716,0.009342269,0.0035349124,-0.015412639,-0.04241895,-0.002606472,0.015780859,0.025817486,-0.05525405,-0.0038663105,-0.0095369,0.01965243,-0.003548063,0.0011907973,-0.052981604,0.025480827,-0.016033353,-0.029310316,0.0013689895,-0.0117514795,0.03875779,-0.012740414,-0.034675807,0.012887701,0.0426504,-0.00808506,0.008121883,0.024660222,0.032171912,-0.028447628,0.028216176,0.025354581,-0.003971516,0.014234335,0.019452538,0.041219603,-0.017180094,0.013855594,0.0059283427,-0.006869934,-0.033181887,-0.0091792,-0.028889492,0.0113201365,-0.020104814,-0.0015964969,0.029415522,0.041451056,0.00881624,-0.02023106,-0.034949344,-0.011130766,0.020872816,-0.039788805,-0.0055443416,-0.0152863925,0.024218358,0.013066552,0.020441473,-0.008684733,0.06539588,-0.008321773,0.025501868,0.015044419,0.027143078,-0.0005950699,-0.03505455,-0.017043328,-0.020094294,0.008805719,-0.0014899761,-0.017411549,-0.010031366,0.0031929938,-0.03177213,0.009820955,-0.0054286155,-0.056811094,0.038631544,0.0036874607,0.055590708,0.011825124,0.020736048,-0.028195135,0.020304706,-0.039178614,-0.04498597,-0.015675653,-0.030551743,-0.020504596,0.028047847,0.010783587,-0.019336812,-0.019305252,0.026617048,-0.0071802908,0.01359258,0.016075436,0.002866856,-0.023566082,0.01744311,0.0013203318,-0.013718827,-0.016633026,-0.017138014,0.042566236,-0.020693967,-0.021135831,-0.0143605815,-0.029878426,0.010262819,-0.030046755,0.037390117,-0.034465395,-0.04831047,-0.0005345766,0.016885519,-0.034823097,-0.0051919026,0.0019765527,0.0021974847,-0.015054939,0.050709162,0.05971477,0.037537403,0.027332447,-0.030004673,0.0063807275,0.012898223,-0.003321871,-0.018400481,0.008016677,-0.028952615,-0.05033042,0.005859959,-0.014760364,-0.000027184995,-0.022366738,0.06594295,-0.00826391,-0.029983632,0.007211853,-0.021882791,0.011467424,-0.0053576017,0.016096476,0.014013403,-0.040335875,0.037179705,-0.020104814,-0.020336267,-0.02699579,0.020567719,-0.014476308,0.028952615,-0.0016727711,0.00053490535,-0.03650639,-0.0054864786,0.057274,0.04780548,0.00808506,0.0026143624,0.0019607719,-0.008221827,-0.020904377,-0.015644092,0.013003428,0.011088683,-0.037705734,0.005712671,0.00024657592,0.025985815,0.015822941,-0.03034133,0.007127688,0.010047147,-0.029710097,-0.022114243,-0.0017911275,0.0032797887,-0.030362373,0.0009738105,-0.010452189,-0.03286627,-0.017169574,-0.014255376,-0.004442312,0.06400716,0.032256074,0.0333923,-0.00079430325,-0.04334476,-0.0008206047,0.011004519,-0.009826215,0.011498986,-0.032424405,0.008747856,-0.034233943,-0.0463326,-0.025060004,0.010546874,0.008942487,-0.036906168,-0.0053365603,-0.006927797,-0.04294498,-0.037453238,-0.0022606081,-0.009326488,-0.021114789,0.004481764,0.02151457,0.025964774,-0.003011514,0.014770884,0.008237609,0.010052407,0.014276417,-0.020473035,-0.00036000085,0.020609802,0.022177367,0.0051892726,-0.008174485,0.002922089,-0.012203865,0.018442564,-0.045112215,0.0024841703,0.012898223,-0.0092055015,0.009021391,-0.0067173857,-0.037979268,-0.033223968,-0.002974692,-0.042208537,0.010010325,-0.016433135,-0.023524001,0.0074748667,-0.014570993,-0.033918325,-0.009110816,-0.0017963878,-0.010688902,-0.010941396,0.002553869,0.0054812185,0.005902041,0.023755454,-0.03419186,-0.0057810545,0.0062334393,-0.024365647,-0.013140195,-0.0025854309,0.0030036236,0.02901574,0.025985815,-0.0238817,0.0140870465,-0.03842113,-0.005802096,-0.007364401,-0.02039939,-0.03879987,-0.016422614,-0.021945914,0.012803537,0.022135286,0.0021646079,-0.008411198,0.008206047,0.03894716,0.015822941,0.0038531597,0.05643235,0.020736048,0.0042739827,0.0007541936,0.0367168,0.018453084,-0.016359491,0.0090950355,-0.0046027508,-0.022514025,0.005383903,-0.034696847,0.012919263,-0.038989242,0.026364556,-0.01946306,-0.030425496,-0.001653045,0.004663244,-0.008547965,0.009752571,0.02811097,0.01248792,0.013539977,-0.004936779,0.021367284,-0.0064964537,0.003211405,-0.026006855,0.022282572,0.016370011,0.013087592,-0.0024381427,-0.021135831,0.011162328,-0.0031982542,-0.0014018663,-0.0045238463,0.0071908114,-0.017180094,-0.011498986,0.010815149,-0.02426044,0.03513871,0.0030167743,0.02808993,-0.02480751,0.0066227005,-0.010567916,-0.030930484,0.0201995,0.009594763,0.004479134,0.010641559,-0.034381233,-0.009394871,-0.008153444,-0.008779418,0.039010283,-0.015907105,-0.0190738,-0.016380532,-0.001094797,0.0400413,0.013161236,-0.045617204,-0.00991564,-0.03436019,-0.004421271,0.00070619344,0.010783587,-0.010068188,0.003524392,0.015360036,-0.00089424866,-0.0011138656,-0.010615258,0.018063823,-0.039809845,-0.0064385906,0.021966957,0.017222177,0.012666769,0.011783041,-0.00028931574,-0.01597023,0.005184012,-0.017579878,0.008311252,-0.017390506,0.03143547,0.07549563,-0.026680173,-0.009847256,0.020052211,0.0038847215,-0.017232697,0.028889492,-0.007853608,0.0042161196,0.04780548,-0.017232697,0.00844802,0.0006604947,-0.0047474084,0.032466486,-0.021009583,0.028679082,-0.018631935,-0.014644638,0.046585098,-0.007674758,-0.009031911,-0.032466486,0.0026340885,-0.0045790793,-0.01673823,0.04302914,0.0070856055,-0.024092112,0.05824189,0.0021251556,0.002611732,-0.027016832,-0.003579625,-0.0006009877,0.011099204,0.019757636,0.009231803,-0.0013874006,-0.0017661412,0.026301432,0.03364479,0.007806265,0.027479736,0.016380532,-0.009047693,0.030762155,0.009031911,0.010520573,-0.026722254,0.035727866,0.0027116777,-0.0032771584,-0.0029510206,0.04092503,0.0034454875,0.03486518,0.011120246,0.005176122,-0.0034507478,-0.031603802,-0.006044069,-0.0016846067,-0.0075853327,0.021903832,0.0029378699,-0.037179705,0.004936779,0.0016556751,0.03623285,0.00006706865,-0.012361673,-0.041766673,-0.0002817541,-0.033181887,-0.008584787,0.0041109137,-0.02977322,-0.000017866481,-0.033771038,0.01284562,-0.0099209,-0.011877727,0.02259819,-0.00028405545,0.020294186,-0.04334476,0.006080891,0.03783198,-0.02977322,0.017906014,0.0017661412,-0.005126149,-0.044480983,-0.0011907973,-0.043092266,-0.0018358399,-0.01524431,0.017569356,0.008963528,0.04239791,-0.011825124,-0.03760053,-0.020304706,0.0050288336,-0.0029089383,-0.043260597,0.013645183,0.05213996,0.024681265,-0.027627025,-0.029352399,0.037979268,-0.0077799633,0.013182278,0.007895689,0.004663244,0.060346004,0.028594917,0.033834163,-0.06501714,0.01432902,-0.026785377,0.042524155,0.016327929,-0.009479036,0.032571692,-0.0030351852,0.047132164,0.009342269,0.006596399,-0.033118762,-0.009263365,-0.05731608,0.018453084,0.0093633095,-0.03894716,-0.038505297,-0.04077774,0.00422664,-0.038841955,-0.009258104,0.013161236,0.019399935,-0.022745479,0.006265001,-0.016601464,0.029289275,0.012224905,0.035538495,0.012908743,0.023292549,0.0007173715,0.03652743,-0.029794263,0.043302678,-0.0023658138,-0.004321325,-0.01724322,0.04464931,0.026553925,0.046500932,0.014392143,0.019431498,0.037579484,0.011036081,0.0018766072,0.017716644,0.0064543714,0.010562655,0.003008884,0.00826391,-0.0033192406,0.021083228,-0.04578553,-0.044228487,-0.002535458,0.013245401,-0.00808506,-0.043807663,-0.04058837,0.0029668014,-0.011288575,-0.023439836,-0.02150405,-0.03768469,-0.0003820283,-0.012729893,-0.02444981,0.012014494,0.0140870465,-0.009947201,-0.0068383724,0.003029925,0.01909484,-0.01213022,0.027963683,0.017569356,0.007858868,0.041598346,0.0069593587,0.025859568,-0.0018332098,0.018863387,-0.027100995,-0.012877181,-0.04936253,0.020304706,0.028805329,-0.01668563,0.0015636202,0.006186097,-0.05563279,0.041366894,0.012203865,0.0123511525,0.04208229,-0.02426044,0.0059809457,-0.0011513452,0.0077010593,0.008711034,0.029625934,-0.018316317,-0.005168231,-0.028742205,-0.007280236,-0.029646974,0.018432043,-0.021072708,0.0333923,0.0060493294,0.017884973,-0.004544887,0.01158315,-0.020841254,-0.003216665,0.015675653,-0.0074748667,-0.0023763343,-0.019747116,0.027669106,-0.0016425244,0.0063123438,-0.006649002,-0.001157263,0.014297458,0.0034139259,-0.0060388087,0.022745479,0.036885127,0.00918446,-0.013171757,-0.028405547,0.030530702,0.0019726073,-0.03511767,0.021735502,-0.0042187497,0.013434771,0.026196226,0.0040662014,0.0050814366,0.0075274697,0.014202774,0.020262623,-0.0086058285,-0.029604891,0.021346241,-0.0319615,0.029625934,0.029415522,-0.019610347,-0.010231257,-0.013108633,0.015665133,0.009410652,-0.0009402762,0.002774801,0.019505141,0.00021879503,0.045617204,0.031246101,0.016306888,-0.0102891205,-0.0043397364,0.04852088,0.039578393,0.037579484,-0.008674212,0.006028288,-0.044733476,-0.01743259,0.02003117,0.011078163,0.024302524,-0.017674562,-0.03842113]},{"id":"set-zeroes-in-matrix","name":"Set Zeroes in Matrix","description":"Given an `m x n` matrix of integers `matrix`, if an element is `0`, set its entire row and column to `0`'s.\n\nYou must update the matrix *in-place*.\n\n**Follow up:** Could you solve it using `O(1)` space?\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/49ffd14e-b32b-4ed8-e0d0-9378e5eb9b00/public)\n\n```java\nInput: matrix = [\n  [0,1],\n  [1,1]\n]\n\nOutput: [\n  [0,0],\n  [0,1]\n]\n```\n\n**Example 2:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/04d99cc8-e453-464d-888c-58d0a95daf00/public)\n\n```java\nInput: matrix = [\n  [1,2,3],\n  [4,0,5],\n  [6,7,8]\n]\n\nOutput: [\n  [1,0,3],\n  [0,0,0],\n  [6,0,8]\n]\n```\n\n**Constraints:**\n* `1 <= matrix.length, matrix[0].length <= 100`\n* `-2^31 <= matrix[i][j] <= (2^31) - 1`\n","difficulty":"Medium","concepts":[],"solutions":{"python":"class Solution:\n    def setZeroes(self, matrix: List[List[int]]) -> None:\n        ROWS, COLS = len(matrix), len(matrix[0])\n        rowZero = False\n\n        for r in range(ROWS):\n            for c in range(COLS):\n                if matrix[r][c] == 0:\n                    matrix[0][c] = 0\n                    if r > 0:\n                        matrix[r][0] = 0\n                    else:\n                        rowZero = True\n\n        for r in range(1, ROWS):\n            for c in range(1, COLS):\n                if matrix[0][c] == 0 or matrix[r][0] == 0:\n                    matrix[r][c] = 0\n\n        if matrix[0][0] == 0:\n            for r in range(ROWS):\n                matrix[r][0] = 0\n\n        if rowZero:\n            for c in range(COLS):\n                matrix[0][c] = 0\n","javascript":"class Solution {\n    /**\n     * @param {number[][]} matrix\n     * @return {void}\n     */\n    setZeroes(matrix) {\n        const ROWS = matrix.length;\n            const COLS = matrix[0].length;\n        let rowZero = false;\n\n        for (let r = 0; r < ROWS; r++) {\n            for (let c = 0; c < COLS; c++) {\n                if (matrix[r][c] == 0) {\n                    matrix[0][c] = 0;\n                    if (r > 0) {\n                        matrix[r][0] = 0;\n                    } else {\n                        rowZero = true;\n                    }\n                }\n            }\n        }\n\n        for (let r = 1; r < ROWS; r++) {\n            for (let c = 1; c < COLS; c++) {\n                if (matrix[0][c] == 0 || matrix[r][0] == 0) {\n                    matrix[r][c] = 0;\n                }\n            }\n        }\n\n        if (matrix[0][0] == 0) {\n            for (let r = 0; r < ROWS; r++) {\n                matrix[r][0] = 0;\n            }\n        }\n\n        if (rowZero) {\n            for (let c = 0; c < COLS; c++) {\n                matrix[0][c] = 0;\n            }\n        }\n    }\n}\n","cpp":"class Solution {\npublic:\n    void setZeroes(vector<vector<int>>& matrix) {\n        int ROWS = matrix.size(), COLS = matrix[0].size();\n        bool rowZero = false;\n\n        for (int r = 0; r < ROWS; r++) {\n            for (int c = 0; c < COLS; c++) {\n                if (matrix[r][c] == 0) {\n                    matrix[0][c] = 0;\n                    if (r > 0) {\n                        matrix[r][0] = 0;\n                    } else {\n                        rowZero = true;\n                    }\n                }\n            }\n        }\n\n        for (int r = 1; r < ROWS; r++) {\n            for (int c = 1; c < COLS; c++) {\n                if (matrix[0][c] == 0 || matrix[r][0] == 0) {\n                    matrix[r][c] = 0;\n                }\n            }\n        }\n\n        if (matrix[0][0] == 0) {\n            for (int r = 0; r < ROWS; r++) {\n                matrix[r][0] = 0;\n            }\n        }\n\n        if (rowZero) {\n            for (int c = 0; c < COLS; c++) {\n                matrix[0][c] = 0;\n            }\n        }\n    }\n};\n","java":"class Solution {\n    public void setZeroes(int[][] matrix) {\n        int ROWS = matrix.length, COLS = matrix[0].length;\n        boolean rowZero = false;\n\n        for (int r = 0; r < ROWS; r++) {\n            for (int c = 0; c < COLS; c++) {\n                if (matrix[r][c] == 0) {\n                    matrix[0][c] = 0;\n                    if (r > 0) {\n                        matrix[r][0] = 0;\n                    } else {\n                        rowZero = true;\n                    }\n                }\n            }\n        }\n\n        for (int r = 1; r < ROWS; r++) {\n            for (int c = 1; c < COLS; c++) {\n                if (matrix[0][c] == 0 || matrix[r][0] == 0) {\n                    matrix[r][c] = 0;\n                }\n            }\n        }\n\n        if (matrix[0][0] == 0) {\n            for (int r = 0; r < ROWS; r++) {\n                matrix[r][0] = 0;\n            }\n        }\n\n        if (rowZero) {\n            for (int c = 0; c < COLS; c++) {\n                matrix[0][c] = 0;\n            }\n        }\n    }\n}\n","csharp":"public class Solution {\n    public void SetZeroes(int[][] matrix) {\n        int ROWS = matrix.Length, COLS = matrix[0].Length;\n        bool rowZero = false;\n\n        for (int r = 0; r < ROWS; r++) {\n            for (int c = 0; c < COLS; c++) {\n                if (matrix[r][c] == 0) {\n                    matrix[0][c] = 0;\n                    if (r > 0) {\n                        matrix[r][0] = 0;\n                    } else {\n                        rowZero = true;\n                    }\n                }\n            }\n        }\n\n        for (int r = 1; r < ROWS; r++) {\n            for (int c = 1; c < COLS; c++) {\n                if (matrix[0][c] == 0 || matrix[r][0] == 0) {\n                    matrix[r][c] = 0;\n                }\n            }\n        }\n\n        if (matrix[0][0] == 0) {\n            for (int r = 0; r < ROWS; r++) {\n                matrix[r][0] = 0;\n            }\n        }\n\n        if (rowZero) {\n            for (int c = 0; c < COLS; c++) {\n                matrix[0][c] = 0;\n            }\n        }\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def setZeroes(self, matrix: List[List[int]]) -> None:\n        \n        ","javascript":"class Solution {\n    /**\n     * @param {number[][]} matrix\n     * @return {void}\n     */\n    setZeroes(matrix) {}\n}\n","cpp":"class Solution {\npublic:\n    void setZeroes(vector<vector<int>>& matrix) {\n        \n    }\n};\n","java":"class Solution {\n    public void setZeroes(int[][] matrix) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public void SetZeroes(int[][] matrix) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/T41rL0L3Pnw","embedding":[-0.004628114,-0.0076275663,-0.01637348,0.019728525,-0.017947854,-0.033441857,0.021335471,0.0036020572,0.0147882495,0.049815338,-0.019880533,-0.051074836,0.0018051002,0.025559133,0.028360432,0.013203019,0.04551567,-0.014288793,-0.015570007,0.012095529,0.037741523,0.018056432,-0.005678601,-0.029837085,0.03843642,0.014191073,0.038262695,0.012681847,-0.006579794,0.0014807251,0.011954378,0.008371322,-0.015504861,-0.0126492735,-0.012768709,-0.019999968,0.0031813195,0.008517901,-0.014864254,0.028816458,-0.0005306723,-0.008903352,0.004807267,-0.026905494,-0.00151737,0.009256228,-0.004060797,0.004497821,0.02846901,0.033181272,-0.019576516,0.0005510306,-0.0030184533,-0.03024968,-0.0640607,-0.012942433,-0.03765466,0.024321351,-0.00871877,0.057285465,0.039370187,0.0025447842,0.027926123,0.00703039,0.024104197,0.023018422,-0.04258408,0.00866991,-0.01642777,-0.018338732,-0.069228984,-0.027339803,0.015689442,-0.004394673,-0.042084623,0.01237783,0.022757836,0.02885989,0.01247555,-0.025884867,0.03950048,-0.027578674,0.044473328,0.026036875,0.029706793,-0.0019693237,-0.023756748,-0.007350694,-0.011596072,-0.019489653,-0.021617772,-0.016123753,-0.029750224,0.05750262,0.023431016,-0.02764382,0.0434527,0.008691626,-0.0026207883,-0.0004774015,-0.008691626,0.020097688,0.042692658,0.06883811,-0.005977189,0.009647107,-0.032399513,-0.029837085,0.018946767,0.0013185375,-0.009191082,-0.024386497,0.047383204,-0.042844664,0.006460359,-0.007915297,-0.027426666,-0.0114332065,-0.031574324,-0.0125515545,0.012301826,-0.030184533,-0.008512473,0.005496734,-0.013398458,-0.0056134546,0.004883271,-0.012464692,-0.016384339,-0.014875112,-0.0021294754,0.025884867,0.013745906,0.014332225,-0.044191025,-0.0040580826,0.04160688,0.053680696,-0.00023836145,0.006058622,0.008051018,0.0065635075,0.019489653,-0.020271411,0.028099846,0.0035531973,-0.00712811,0.042736087,0.017730698,-0.0065852227,0.06792606,0.027318088,0.04581969,0.04456019,-0.0020982593,-0.02475566,0.018230155,-0.012062956,0.023105282,-0.03203035,0.015700301,-0.0066015096,0.026775202,-0.008821919,-0.0032356083,0.010336574,-0.031422317,-0.062019445,-0.03507052,-0.086210504,0.0517263,-0.0027320802,-0.012160676,-0.037459224,0.013322454,0.048903286,-0.04041253,-0.006248633,-0.038458135,-0.039761066,-0.006617796,-0.029120475,-0.050510235,-0.015233417,-0.006948957,0.01830616,0.0065635075,-0.052204043,-0.034527633,-0.03009767,0.0061780573,-0.0023968474,-0.023691602,0.039956506,0.05650371,-0.028447295,0.034223616,-0.008023874,-0.01777413,0.024929384,-0.024429929,-0.0135721825,0.011069472,0.03900102,0.031161731,-0.0455591,-0.049337596,-0.015200844,-0.008637337,-0.01676436,-0.0048398403,-0.03120516,-0.0060369065,-0.04460362,0.016482059,0.03780667,0.010716595,0.010656877,-0.002536641,0.040542822,-0.04460362,0.048208393,0.029446207,-0.00008351133,0.014049923,0.015884882,-0.031856626,0.027578674,0.050032493,0.0074104117,0.025168255,-0.044516757,0.008322462,-0.007779575,0.00944081,-0.05207375,-0.06436472,-0.03144403,-0.010955466,0.020673148,0.016872937,-0.018371306,0.008219314,0.00036102004,-0.02192179,-0.0022000507,-0.012356115,-0.008034732,0.01377848,-0.0018729612,0.003520624,0.031096583,-0.006438643,-0.054201867,-0.06901183,0.04634086,-0.01705752,-0.029098758,-0.004155802,0.009847975,-0.02172635,0.048251823,-0.07682941,-0.052334335,0.009267086,-0.029120475,-0.019587373,0.034701355,0.0021444047,0.03357215,0.0440173,0.01281214,0.020369131,-0.039934788,0.0027035787,0.0071986853,-0.034527633,0.0073344074,-0.013148731,-0.02783926,-0.03385445,0.021997793,0.06853409,0.03144403,0.02023884,-0.014245363,-0.023474446,0.06306179,-0.019153064,-0.011150905,0.0149185425,0.000079482095,0.012399546,0.05090111,0.0012452477,-0.03771981,-0.055808812,-0.039739348,-0.020249696,-0.02471223,0.04955475,-0.0058251806,-0.02538541,-0.0030754565,-0.048468977,0.0038979307,-0.042801235,-0.034983657,0.004619971,0.030466834,-0.031378884,0.015070551,0.020542854,0.057242036,0.00031266914,-0.05771978,-0.026449468,-0.049989063,0.011921805,-0.012345257,-0.057980362,-0.028078131,0.0022543394,0.038957592,-0.0066883713,0.0049212733,-0.026644908,0.018186724,0.045906547,-0.041324582,-0.0172421,0.013474463,-0.009674251,-0.005094997,-0.069489576,-0.009809974,0.022714404,0.008751343,-0.043365836,-0.040694833,-0.013257308,0.03092286,-0.007844721,0.022236664,-0.029945662,0.0074538426,0.017687269,0.020922877,0.012736136,-0.027600389,-0.0092779435,-0.010955466,-0.004782837,-0.005428873,0.013843626,0.024234489,-0.045863118,0.007041248,-0.008355035,0.011112903,-0.03064056,-0.02321386,0.000817724,0.006482074,0.014907685,0.027296374,-0.0028393005,0.0093268035,0.046253998,0.05515735,0.03150918,-0.00019204638,-0.004856127,0.0072366875,0.015255133,-0.07604765,-0.0023059137,0.041107427,-0.027470097,-0.030683989,-0.05646028,0.0059554735,0.042844664,-0.0062432038,0.02071658,0.041889183,-0.028186709,-0.011726365,-0.02408248,-0.01642777,0.0104125785,0.035135664,-0.0011801013,0.020825157,0.08125937,-0.024538506,-0.009788258,0.06306179,0.015439714,-0.00915308,0.011140048,-0.025798004,0.024581937,-0.0007105037,-0.009082505,-0.066015095,0.03787182,0.038349558,-0.016438628,0.033441857,0.000817724,-0.020032542,0.021335471,0.0671443,-0.035483114,0.00058190734,-0.0042019477,0.05524421,-0.025233401,0.029381061,-0.034310475,0.007437556,0.015135698,-0.01401735,0.006031478,0.03346357,-0.041129142,0.00003206428,-0.027491812,-0.040325668,-0.011335487,0.057806637,-0.004975562,0.0025977157,0.0034744786,0.056416847,-0.00688924,0.03463621,0.041129142,0.00068675244,-0.013333312,0.010537443,-0.012345257,-0.028642733,-0.0072258296,-0.044429895,-0.0026099307,0.04097713,0.023040136,0.015439714,0.0017630265,-0.06301836,0.060716514,-0.0034256189,0.012258395,-0.03352872,0.04768722,0.0062866346,-0.0169598,-0.007643853,-0.056590572,-0.026406039,-0.0071552545,0.0077850036,-0.008213885,0.047817513,0.014451659,-0.011444064,-0.010711166,-0.009077076,-0.024777375,-0.0020982593,0.029033612,0.03900102,-0.037980396,0.011216052,0.030184533,0.03900102,-0.013072726,-0.02605859,0.016644925,-0.07882723,0.003564055,0.0033659013,0.05524421,0.0511617,-0.06670999,-0.0016123753,0.006612367,-0.013941346,0.013648187,0.034896795,-0.0063734967,-0.00794787,0.046601444,-0.038284414,-0.027187796,-0.022801267,-0.0195548,0.0067752334,-0.018317018,-0.0029071614,-0.03919646,0.02870788,-0.009207369,-0.023995617,-0.022323525,-0.013952203,0.018317018,0.076264806,-0.021715492,0.023995617,-0.02192179,-0.017263817,0.004277952,0.07209543,0.0030863143,-0.0077361437,-0.06545049,-0.028534155,0.009239942,-0.0050081355,-0.040868554,-0.029272482,0.004668831,-0.029207336,-0.024495075,-0.022627542,-0.04175889,0.028403863,-0.020640574,0.02933763,-0.00838218,0.042801235,-0.0018241013,0.028099846,-0.020749152,0.014125927,0.0009968767,-0.002909876,0.0008862635,0.030835997,0.005418015,-0.017502686,0.0026900065,-0.027817545,0.009554816,-0.011596072,-0.016482059,0.04017366,0.010684022,-0.019174779,-0.034223616,-0.04725291,-0.009549388,0.008930496,0.013322454,0.030358257,0.03365901,0.017274674,-0.05124856,0.00712811,0.022193233,0.0057546054,-0.034961943,0.028338717,-0.00852333,0.016786074,-0.0005646028,-0.024733946,-0.005263292,0.017947854,0.006796949,-0.015298564,-0.011509211,0.016927226,-0.027383234,-0.044864208,-0.019087916,0.0084799,-0.015787162,-0.010754597,-0.018143293,-0.0017657409,-0.040911987,-0.01921821,-0.0003939326,0.022095513,0.007529847,-0.034310475,-0.019174779,0.04516822,0.013203019,0.012366973,-0.015928313,-0.017708983,0.025515703,0.050423373,0.004446247,-0.00944081,0.02518997,0.027209511,0.010684022,0.0065743653,0.0007960085,0.0057383184,0.012312683,0.026862063,0.0017820275,-0.01194352,0.00013249843,0.030879429,0.010662306,-0.0062920637,-0.00047434776,-0.01705752,-0.0011027398,0.036178008,0.034788217,-0.020303985,0.002387347,0.009674251,0.019587373,-0.0044571045,-0.02230181,-0.0019191066,-0.009044502,0.013431031,0.0072366875,0.028186709,-0.019435365,-0.010233426,0.006460359,-0.005803465,-0.038175832,-0.008925067,-0.00056188833,0.018849047,0.026623193,-0.019109633,-0.0047936947,-0.009429952,-0.018241012,-0.026992356,0.002779583,-0.0013606113,0.026384322,0.051378854,-0.030618843,-0.018621035,-0.003241037,0.0046796883,0.036286585,-0.019011913,0.020912018,-0.022323525,-0.0012649274,-0.04238864,0.013724191,0.00095208857,-0.014744819,-0.0014997261,-0.023952188,-0.005765463,-0.036742613,-0.015819736,-0.034766503,-0.0045439666,0.0147231035,0.019077059,-0.0033740446,0.0067643756,-0.018555887,0.026558047,0.007133539,0.03507052,-0.0016164469,-0.0066829426,-0.03741579,0.003944076,0.015982602,0.008089021,0.011965236,0.026666624,-0.02668834,-0.010890319,-0.007518989,0.025363695,-0.009799115,-0.059326723,0.0073669804,0.015884882,-0.000018714767,0.0018716039,0.0057817497,-0.01271442,-0.032356083,-0.0025827864,0.010504869,-0.05967417,-0.022345241,0.0055510225,0.015960887,0.031530894,0.012573269,0.0017372393,-0.010249712,0.019174779,0.041216005,-0.0010681307,0.0065960805,-0.02562428,0.002909876,0.0037920678,-0.061715428,0.0034066178,0.044321317,0.009685109,-0.0017860992,-0.0061563416,0.0025773575,-0.0024402784,-0.039348472,-0.02099888,-0.02566771,-0.040043365,0.010092274,-0.0022434818,-0.012214964,0.008463613,0.012746993,0.007231259,0.022258379,0.042736087,0.054201867,-0.038371272,0.006031478,0.021976078,0.007432127,-0.013051011,-0.054375593,-0.00674266,0.026579762,0.00018356377,-0.017079234,0.038023826,-0.018295301,-0.0052660066,-0.027600389,0.004796409,-0.045298517,0.0044353893,0.0339196,0.005485876,-0.043170396,-0.009066218,-0.0008190812,-0.021552626,-0.018729612,-0.0091639375,-0.052204043,0.047035754,-0.022258379,-0.04638429,0.02605859,0.01830616,-0.01656892,-0.0025583564,0.017904423,-0.022822982,0.0033170413,0.002543427,0.008165025,0.0031948916,0.019739382,-0.010830602,0.0081758825,-0.04421274,-0.02162863,-0.022909844,-0.031053154,0.07383267,-0.0018458167,0.021509195,-0.0038653575,0.006617796,0.017166097,-0.027882691,0.010179137,-0.013593898,-0.017372394,0.0057003167,0.022475533,-0.010434294,0.022649258,-0.0054885903,0.01700323,-0.0040879413,-0.00067351956,0.00013309221,-0.020868588,0.011726365,-0.011026041,0.020684006,0.012866429,0.014093354,-0.0054315873,0.013420174,-0.017850135,0.018371306,-0.021498337,0.034809932,-0.06492932,-0.023257291,0.0016585207,0.00079736573,0.029011896,-0.027578674,0.00915308,0.019489653,-0.011965236,-0.05950045,-0.034201898,0.024191057,-0.0016558062,-0.010374576,-0.003097172,0.027578674,0.008626479,-0.005013564,0.014462518,-0.018013,-0.006568936,0.020108545,0.039999936,0.017220385,0.06058622,-0.033745874,0.05124856,0.01969595,0.0062052016,0.03709006,-0.027144365,-0.009685109,-0.01787185,0.026796916,-0.0025094964,-0.038783867,0.039847925,-0.035092235,0.001187566,-0.0027565102,0.012030383,-0.042410355,-0.0103962915,-0.016796933,0.015298564,-0.019055344,-0.018968482,0.010602589,-0.010217139,-0.015808878,0.0040472248,-0.045689393,0.01170465,-0.035331104,-0.023431016,-0.0004393994,0.00766014,0.0072855474,0.041498303,-0.008697054,-0.046558015,0.01820844,0.015309421,-0.015211702,-0.021693775,-0.0059066135,0.03346357,0.011454922,-0.01806729,-0.021368043,-0.017567832,0.021845784,-0.006080338,-0.03029311,0.018664464,0.013170445,-0.0006833594,-0.040325668,0.0062974924,-0.0062052016,0.022030367,-0.01532028,0.003289897,-0.013083584,0.021563483,-0.033007547,0.05563509,0.04733977,0.017372394,-0.0032546094,0.03765466,0.0023357726,-0.03748094,0.0016897367,-0.017806703,0.010385434,-0.05963074,-0.020097688,0.008387608,-0.0012730707,-0.029315913,-0.007252974,0.0091313645,0.040195376,0.006438643,-0.016167184,0.0003203035,0.0125515545,-0.0034310478,-0.007041248,0.022909844,0.011389775,0.061107393,0.017589549,-0.018284444,0.0036672037,0.06623225,0.021910932,0.04080341,-0.0050081355,0.016938083,-0.0044353893,-0.029489638,-0.006710087,-0.042084623,0.02827357,0.018121578,-0.04859927,-0.018555887,-0.0025760003,-0.039739348,0.015103124,-0.013897914,-0.044277888,0.018469026,0.018327875,0.01874047,0.036829475,0.030901145,-0.009305088,0.004668831,-0.04353956,-0.02851244,0.011596072,0.0044706766,-0.015624296,-0.003718778,-0.016178042,-0.01035829,-0.021031454,-0.00047706222,-0.020217123,0.013615613,0.012985864,0.0066340826,-0.02586315,0.001328038,-0.01546143,0.0064549297,-0.017350677,-0.0054885903,0.0091313645,-0.024256203,-0.0125841275,-0.0372855,-0.00018203689,0.014288793,-0.013528751,0.04306182,-0.018718753,-0.02153091,0.035374537,-0.01781756,-0.020499423,-0.02586315,0.016156325,-0.013072726,0.009657965,0.06427786,0.035613406,0.011357202,0.021737207,-0.013051011,-0.009337662,-0.0052198614,0.021943504,-0.024343066,0.018013,-0.037784956,-0.017111808,0.010651449,0.009891407,0.009554816,-0.024864238,0.03526596,-0.040933702,-0.031965204,0.01633005,-0.029077044,-0.0049701333,0.020108545,-0.014071639,-0.0060857665,-0.00339576,0.034766503,-0.04060797,-0.026015159,-0.024169343,0.028925035,-0.010151993,0.03174805,0.007741573,0.0025827864,-0.013365885,-0.01064059,0.023561308,0.041129142,0.03333328,-0.007182399,-0.013387601,0.0019041771,-0.0032817537,-0.0026859348,0.023257291,0.016818648,0.017014088,0.005447874,-0.008740486,0.033311564,0.012052098,-0.020488566,0.0029017325,-0.0024796377,-0.005988047,-0.0005710496,-0.0011095259,-0.01522256,-0.017513543,-0.03444077,0.007985872,-0.0172421,0.04002165,-0.03589571,0.027882691,0.043278974,-0.008029303,0.05268178,0.010684022,0.010895748,-0.00172231,-0.010705737,-0.0041992334,0.009576532,-0.022182375,0.011791512,-0.041932613,-0.032594953,-0.025037961,0.010293143,0.007692713,-0.01512484,-0.027665537,-0.05394128,-0.0058143227,-0.025168255,-0.0017793131,-0.027318088,-0.021889215,0.012269253,-0.013105299,0.028360432,-0.02230181,-0.023344154,0.041063994,0.029793654,0.02360474,-0.0084799,-0.01656892,0.030770851,0.013897914,0.019826245,-0.011748081,-0.0050977115,-0.0013314311,0.023344154,-0.031422317,-0.0024714945,0.0033604724,-0.016362622,-0.03787182,-0.011140048,-0.027795829,-0.02870788,0.006221488,-0.03044512,0.02812156,0.013963061,-0.01998911,-0.049294166,0.003178605,-0.03765466,0.026406039,-0.0012371044,-0.034592777,0.0035939137,-0.025602564,0.014191073,0.008946783,0.04295324,-0.026015159,0.040369097,0.013930487,-0.03072742,-0.01593917,-0.0031216019,0.0125515545,-0.0045982553,0.07070564,-0.010130277,0.005901185,0.0102008525,-0.023257291,-0.0057166032,-0.021042312,-0.037741523,-0.04473391,-0.013040152,0.013181304,0.0103800045,0.00052592205,-0.008729627,-0.03945705,0.020846872,0.012627559,0.0075732777,0.051509146,-0.0048425547,0.029381061,-0.008089021,0.011541784,0.027144365,0.0026099307,0.0025203542,-0.019174779,-0.0021430475,-0.0416286,-0.06445158,0.019663377,-0.030705705,-0.0021864786,0.008116165,-0.033897884,0.008023874,0.01237783,-0.010977181,0.001125134,0.012692705,0.023192145,-0.020564571,0.003241037,0.005168287,0.008241029,0.02071658,-0.009011929,0.021889215,0.011237767,-0.017991284,0.015863167,-0.039283324,0.009201939,0.028903319,-0.032681815,-0.0040689404,-0.0063354946,-0.022844696,-0.017480971,0.012909859,-0.021704635,0.033637296,-0.021172604,0.045298517,-0.03722035,0.02851244,0.005591739,-0.007920725,0.014321366,-0.004359385,-0.0007437556,-0.0076275663,-0.02566771,0.011183478,0.029359344,0.0035124808,0.030336542,-0.009250799,-0.00491313,-0.023973903,-0.02071658,0.031292025,0.014712245,-0.033050977,-0.024429929,-0.024799092,-0.022649258,0.015624296,-0.0003242055,-0.0003416797,-0.011867516,0.007649282,-0.030379973,0.0022719833,-0.002742938,0.0068240934,-0.023669885,-0.023561308,0.028208423,0.022801267,-0.022193233,0.011834943,-0.007090108,-0.0036020572,-0.011216052,-0.00457654,0.01011399,-0.026275745,0.022757836,0.05867526,-0.0057817497,0.018154152,0.007942441,-0.009978268,-0.0025271403,0.03780667,-0.0035586262,-0.013561324,0.053984713,0.026471185,0.023387585,0.0015350138,-0.033202987,0.038914163,-0.04225835,0.024929384,0.017958712,-0.020075971,0.022757836,-0.009429952,-0.02518997,-0.0049701333,-0.004022795,-0.008832776,0.016362622,0.066796854,0.02673177,-0.020445134,0.06006505,-0.0147231035,0.02061886,-0.043083534,-0.0018675323,-0.0045493953,0.015146555,0.008148738,-0.0040662256,-0.016981514,-0.0050162785,0.037437506,0.035483114,0.0028338716,0.022432104,0.021422332,-0.022649258,0.034614492,-0.0030021667,0.0048045525,-0.022844696,-0.0006857345,0.003564055,-0.024581937,-0.01030943,0.005819752,-0.00090390735,-0.0015010834,0.015407141,-0.0040770834,0.013203019,-0.04349613,0.008659053,-0.0021552625,0.008626479,-0.023431016,0.017643837,-0.029489638,0.00799673,-0.009679681,0.025472272,-0.0033604724,-0.019250784,-0.010238854,-0.0080618765,-0.0032980402,-0.005988047,0.010249712,-0.054115005,0.00023734354,-0.014397371,0.017035803,-0.007480987,0.01637348,0.06093367,-0.027404951,0.023561308,-0.06197601,-0.021140032,0.05524421,0.017068377,-0.0062649194,-0.008013017,-0.0019177493,-0.014136785,-0.018132435,-0.03064056,-0.004999992,0.015982602,-0.019576516,0.0234093,0.04768722,0.015776305,-0.03357215,-0.004929417,-0.0025217114,0.034744788,-0.015439714,0.012757852,0.028078131,0.0573289,-0.007133539,-0.02196522,0.000365431,-0.012008667,-0.0022041225,-0.0146905305,0.007861008,0.0344842,0.0068458086,0.06753518,-0.039522193,0.025298547,0.024125911,0.026275745,0.022757836,0.019902248,0.027622106,0.0007837935,0.017155237,0.0052062892,0.024169343,-0.0063354946,-0.0021756208,-0.02755696,-0.010461438,-0.007926155,-0.047079187,-0.012670989,-0.047035754,0.00038986094,0.015189987,-0.01579802,-0.03150918,0.014896827,-0.008697054,0.012877286,-0.014473375,0.021748064,-0.0033116124,0.021313755,0.004334955,0.012204106,-0.019294214,-0.002581429,-0.014940258,0.03352872,-0.012833855,-0.008984785,0.010151993,0.035287675,0.010265999,0.034527633,0.0018566746,0.012877286,-0.01073831,0.011541784,0.026232313,0.014104212,0.011281198,0.00014776713,0.016644925,0.02846901,0.000098228666,0.039326753,-0.018816473,-0.0075352755,-0.017687269,0.007915297,-0.0029587357,-0.021118315,-0.04214977,0.029489638,0.0047176904,-0.026297461,-0.006161771,-0.02451679,-0.011324629,-0.019565659,-0.018523315,-0.0037323502,-0.0018444596,-0.0032084638,-0.014505948,0.012497266,0.050206218,-0.020510282,0.005722032,0.019001056,0.01016285,-0.012432119,-0.007518989,0.047513496,0.022909844,0.010629733,-0.04002165,0.0082573155,-0.035374537,0.03622144,0.001069488,-0.01902277,-0.0064440724,0.01676436,-0.043713283,0.028099846,-0.02456022,0.0008774416,0.0026886493,-0.022953274,0.023735031,-0.0147556765,0.028773027,-0.000006065069,0.009989127,0.001685665,-0.020684006,0.030901145,-0.0056243124,-0.01950051,0.013507036,-0.005018993,0.035222527,0.0052768644,0.005393585,0.029967379,-0.021715492,-0.01902277,-0.0069761015,-0.0011102045,-0.0012608557,0.01998911,-0.018773042,0.02071658,-0.0012459264,0.020021683,-0.03404989,-0.038914163,-0.002798584,0.006639512,-0.01160693,0.012844713,0.024386497,0.00228827,-0.0034744786,-0.025884867,0.013376743,0.024907669,-0.0016340908,0.011617788,0.03428876,-0.003545054,0.023539593,-0.0053718695,0.012985864,-0.032160643,0.024777375,-0.015906598,-0.009869691,0.004476106,-0.026102021,-0.024994532,0.0029370203,0.00039291466,-0.0066829426,-0.00038341415,-0.033832736,0.03309441,-0.020282269,0.013213877,-0.03830613,0.035483114,0.011932663,0.041889183,0.05394128,0.0074049826,0.017263817,-0.012779566,0.042475503,0.007774146,0.028838173,-0.007171541,0.015244275,-0.0068078064,-0.019543942,0.012301826,0.021661203,0.026210599,-0.019467939,0.0038164977]},{"id":"counting-bits","name":"Counting Bits","description":"Given an integer `n`, count the number of `1`'s in the binary representation of every number in the range `[0, n]`.\n    \nReturn an array `output` where `output[i]` is the number of `1`'s in the binary representation of `i`.\n\n**Example 1:**\n\n```java\nInput: n = 4\n\nOutput: [0,1,1,2,1]\n```\n\nExplanation:\n0 --> 0\n1 --> 1\n2 --> 10\n3 --> 11\n4 --> 100\n\n**Constraints:**\n* `0 <= n <= 1000`\n","difficulty":"Easy","concepts":["Bit Operations"],"solutions":{"python":"class Solution:\n    def countBits(self, n: int) -> List[int]:\n        dp = [0] * (n + 1)\n        offset = 1\n\n        for i in range(1, n + 1):\n            if offset * 2 == i:\n                offset = i\n            dp[i] = 1 + dp[i - offset]\n        return dp\n","javascript":"class Solution {\n    /**\n     * @param {number} n\n     * @return {number[]}\n     */\n    countBits(n) {\n        const dp = new Array(n + 1).fill(0);\n        let offset = 1;\n\n        for (let i = 1; i <= n; i++) {\n            if (offset * 2 == i) {\n                offset = i;\n            }\n            dp[i] = 1 + dp[i - offset];\n        }\n        return dp;\n    }\n}\n","cpp":"class Solution {\npublic:\n    vector<int> countBits(int n) {\n        vector<int> dp(n + 1);\n        int offset = 1;\n\n        for (int i = 1; i <= n; i++) {\n            if (offset * 2 == i) {\n                offset = i;\n            }\n            dp[i] = 1 + dp[i - offset];\n        }\n        return dp;\n    }\n};\n","java":"class Solution {\n    public int[] countBits(int n) {\n        int[] dp = new int[n + 1];\n        int offset = 1;\n\n        for (int i = 1; i <= n; i++) {\n            if (offset * 2 == i) {\n                offset = i;\n            }\n            dp[i] = 1 + dp[i - offset];\n        }\n        return dp;\n    }\n}\n","csharp":"public class Solution {\n    public int[] CountBits(int n) {\n        int[] dp = new int[n + 1];\n        int offset = 1;\n\n        for (int i = 1; i <= n; i++) {\n            if (offset * 2 == i) {\n                offset = i;\n            }\n            dp[i] = 1 + dp[i - offset];\n        }\n        return dp;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def countBits(self, n: int) -> List[int]:\n        ","javascript":"class Solution {\n    /**\n     * @param {number} n\n     * @return {number[]}\n     */\n    countBits(n) {}\n}\n","cpp":"class Solution {\npublic:\n    vector<int> countBits(int n) {\n        \n    }\n};\n","java":"class Solution {\n    public int[] countBits(int n) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int[] CountBits(int n) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/RyBM56RIWrM","embedding":[0.018310415,-0.009877179,0.023266925,-0.047557924,-0.0005072359,0.035944942,-0.013681607,0.016948398,-0.036252163,0.024536775,0.044977263,-0.016948398,-0.0066206283,-0.012114776,0.014255088,-0.0128828315,-0.0006026026,0.02431148,0.0478037,0.050712068,-0.0016705182,0.027506586,0.07676447,-0.031029394,0.05992872,-0.008607329,-0.020245912,-0.046165183,0.027035512,0.0011219993,0.012217184,-0.0067793597,0.00017777257,0.025417477,0.017614046,-0.029595694,0.020153746,0.007153146,-0.013732811,0.008412755,-0.026236735,-0.020051338,-0.040655676,0.013456312,-0.0020315037,-0.014234607,-0.018269451,0.0054634265,0.018894136,0.03211491,-0.0148183275,0.039590638,-0.005489028,0.00565288,-0.04284719,0.0007136505,-0.003832591,0.051981915,-0.010076873,0.013384626,0.04878681,-0.018883895,0.024966886,-0.009462429,0.034285944,-0.0018113281,-0.031479985,0.022079002,-0.014869532,-0.038382236,-0.008387153,0.029657137,-0.049401253,0.007439886,0.009713327,0.031848654,0.01187924,0.016456844,0.030025803,0.023553666,-0.041618302,-0.064721376,-0.016354436,-0.024188591,0.01470568,-0.009687725,-0.02857162,0.006431175,-0.068653814,-0.051531326,0.03664131,0.004201257,-0.028510176,0.047475997,0.0035791332,-0.03891475,0.033589575,0.047557924,-0.008735338,0.0022798413,-0.0020251032,0.030578803,0.011111186,0.0113160005,-0.009744049,0.0257247,-0.023021149,-0.036252163,-0.057348054,0.06025642,0.005570954,0.010783482,0.022263335,-0.01102926,0.026728291,0.031869132,-0.010025669,0.018904377,0.038034048,0.013405108,-0.033179946,0.010261206,0.009539234,-0.012852109,-0.033179946,0.007926321,-0.04143397,-0.059478126,0.035248574,0.020327838,0.027260808,0.009687725,-0.0007974964,0.036969014,0.0041065305,-0.04075808,-0.015965289,0.03551483,-0.0129442755,0.024413887,0.005304695,0.015596623,0.02361511,-0.027465623,0.05206384,0.015330364,-0.01837186,-0.035985906,-0.008361551,0.018504988,0.019539302,-0.016927917,0.05022051,0.032729354,0.012125017,-0.02347174,-0.012503924,0.0053200563,-0.007864877,0.042642377,0.021853706,-0.037009977,-0.018976063,0.04198697,0.007424525,0.019221839,-0.015289402,-0.057470944,-0.012053332,-0.022017557,0.0013351344,-0.025233144,0.03604735,-0.021095892,0.041474935,0.0257247,-0.024147628,-0.028633066,-0.03805453,-0.017276103,-0.035576276,0.014500866,-0.024946405,-0.046820592,0.03291369,-0.022181408,0.0059447405,-0.04706637,-0.02459822,0.0031157404,-0.0019239761,0.061198566,-0.0025947434,0.012094296,-0.056446873,-0.037726827,0.024454849,-0.0005693203,-0.007895598,-0.044076078,-0.05132651,0.012749702,0.02433196,0.03352813,0.030578803,-0.029575212,-0.022283817,0.003735304,0.0387509,0.0124629615,0.015371327,-0.0064158137,0.014111718,-0.09274,-0.004470076,0.011551537,0.0013197734,-0.025253626,-0.028039103,0.028530657,-0.01202261,-0.017849583,-0.008463958,0.03447028,0.066032186,0.043625485,-0.021853706,0.001257689,0.031623356,0.0070353774,-0.01456231,-0.012350313,0.022754889,-0.020307356,-0.0016666779,-0.0033768788,0.0063594896,-0.028919805,-0.044731483,-0.0056938427,0.027055994,-0.008090172,-0.006830563,0.015074346,0.025581328,-0.0033051937,-0.04976992,0.038115975,-0.05173614,-0.0158424,-0.0010509543,0.012606331,-0.0038709939,-0.031766728,-0.013968348,0.017757416,0.016159862,0.026339144,0.036538903,0.0065796655,-0.010425057,-0.040553268,-0.04378934,-0.08643171,-0.040799044,-0.031295653,-0.017777897,0.0322378,-0.0047286544,-0.01980556,0.019068228,-0.016487567,0.022386223,-0.020747708,0.012073814,-0.03987738,0.01567855,-0.047353107,0.006589906,-0.023983777,-0.00044771167,-0.026134329,0.009308819,0.033691984,0.04649289,-0.02121878,0.03082458,-0.0257247,0.016620696,-0.052514434,0.0098362155,0.012217184,-0.0077727097,0.014224366,-0.02842825,-0.040225565,-0.05218673,-0.037440088,0.049319327,-0.014326774,-0.01286235,-0.03520761,0.048991624,-0.02177178,-0.028674027,-0.05669265,0.031828173,0.021710336,-0.00551463,-0.011756351,0.046288073,-0.039099086,-0.046042297,0.023000667,-0.023942813,-0.020583855,-0.014408699,-0.008330829,-0.0068612853,0.0055658338,0.0011476012,0.009206411,0.029493285,0.022713926,0.04649289,0.068449,-0.018289933,0.05980583,0.034408834,-0.022222372,-0.013179812,0.034695573,0.014060514,0.03111132,-0.085284755,-0.030005323,0.065786414,-0.0342245,-0.03610879,0.018986303,0.032299243,0.018627878,0.052842136,-0.013077405,0.013937626,0.018177286,-0.0062622027,0.03195106,0.030169174,0.019989893,-0.0114388885,-0.0034818463,0.091838814,0.0023156838,0.00031186207,0.017614046,-0.03207395,0.0032130273,-0.015617104,0.02345126,-0.07393803,-0.008356431,0.033671502,0.0013466552,-0.007296516,0.024352442,-0.010906371,-0.058658868,0.009319059,0.035453387,0.037542496,0.07442959,-0.0062826844,-0.013599682,-0.009785012,0.0015949928,0.007194109,0.033036575,-0.004352308,-0.026666846,-0.033384763,0.024905441,0.026011439,0.013282219,0.0030722173,0.043338746,0.010547946,-0.007112183,-0.045509778,-0.04157734,0.017992953,-0.046206146,0.08184387,0.028039103,-0.003422962,-0.018126082,0.01117263,0.047885627,-0.012759943,0.021177817,-0.014910495,0.00089990365,0.011981647,0.0005318776,-0.02375848,-0.047598887,0.017788138,0.035269056,0.025417477,0.018023675,-0.0045596827,0.0018612517,0.014173162,-0.027649956,0.035678685,0.014910495,-0.034593165,0.007844395,0.004470076,0.0047977795,0.0111316675,0.00848444,-0.026011439,-0.03252454,0.019713394,-0.023983777,-0.032463096,-0.002954449,0.042191785,-0.012739461,-0.012698498,0.038136456,-0.011899722,0.05194095,-0.0005715604,0.015443012,-0.0074859695,0.040225565,0.0041398127,0.01626227,-0.037235275,-0.018761007,0.03293417,0.0017550042,-0.038791865,-0.020624818,-0.010763001,-0.003860753,0.06402501,-0.045509778,-0.022939222,-0.019539302,-0.0099079,-0.008433237,-0.04567363,-0.015381568,0.032585986,0.024352442,0.041393008,-0.049524143,-0.029739063,0.03760394,-0.025396995,-0.0035612117,0.010558187,0.0147568835,-0.052227695,0.009134726,0.04047134,0.014500866,-0.01130576,-0.010752761,-0.0025345793,0.04088097,0.022427186,0.025540367,0.024372924,0.08421972,-0.024393406,0.008668773,-0.034982312,-0.011019019,-0.010978056,0.0044367937,0.03068121,0.042929117,0.052637324,0.021403113,0.012350313,-0.011059982,-0.023574147,0.0014183403,0.013568959,-0.0058781756,0.0060983514,-0.003970841,0.04071712,-0.00046819312,-0.0072606737,-0.014439421,-0.04895066,-0.0023233644,-0.030066766,-0.024454849,0.057880573,-0.014255088,0.029390879,-0.01384546,-0.0183821,0.027752362,-0.001922696,-0.009272976,-0.006431175,-0.008970874,0.00049187476,-0.025417477,0.0025089774,-0.03219684,-0.013876181,-0.016211066,0.0056631207,-0.0078034317,0.0032027864,0.031705283,0.022816334,-0.03774731,-0.038628012,-0.012084055,-0.042232748,-0.016333954,-0.01172563,-0.008591968,-0.010430178,0.019283284,-0.023574147,0.0117973145,0.04157734,0.032852244,-0.012995479,-0.013917144,0.03664131,0.036375053,-0.038443677,-0.033302836,-0.006692313,-0.009073282,-0.013261738,0.008704616,-0.000820538,0.016743584,-0.016323714,0.0061956383,0.009769651,-0.032606468,-0.032647427,-0.022181408,-0.01739899,0.009247374,0.013282219,0.026974067,-0.004626247,-0.052555397,-0.033159465,0.00022113563,0.017931508,0.019191118,0.005432704,-0.001767805,0.03127517,-0.008438357,-0.014244847,0.014787606,0.0027368336,-0.020532653,0.025704218,-0.030865543,-0.036375053,0.0061751567,-0.0048873858,0.002574262,0.01215574,-0.0051562046,-0.008376912,-0.023307888,0.0031515828,0.016958639,0.047721773,0.024721108,0.0183821,-0.04069664,-0.017050806,0.027035512,0.01668214,0.010681075,-0.010081993,-0.015320123,-0.006277564,0.05194095,-0.015494215,-0.015658068,0.005401982,0.046574812,-0.021157335,-0.039652083,0.0021812744,-0.01286235,-0.017265862,0.041331563,-0.008382033,0.010537705,-0.034531724,0.010307289,0.05702035,-0.02246815,-0.004790099,-0.01567855,-0.0017703652,-0.016364677,-0.0029339674,0.026769252,0.019754358,0.02063506,0.019119432,0.014726161,-0.015371327,0.021300707,-0.03227876,0.016897194,-0.015023142,0.023983777,-0.020102542,0.023676554,0.0031592634,0.04411704,-0.055340875,0.013415349,0.030640246,0.019918209,0.017460436,-0.012995479,0.017081529,-0.029534249,-0.004032285,0.008274505,0.0019700592,0.013302701,-0.00551463,0.014388218,0.00735284,-0.013804496,0.019395933,0.039242454,0.016753824,-0.02871499,-0.0084793195,0.026093366,-0.047148295,-0.019221839,-0.01174611,-0.000102327234,0.011356963,-0.04256045,0.019559784,-0.016313473,-0.006108592,-0.015258679,0.0060420274,-0.0017652449,-0.008361551,-0.025417477,-0.059601016,0.028161991,0.03715335,-0.009528994,-0.006236601,0.01343583,-0.0018126082,-0.006011305,-0.019129673,-0.01088589,0.0069739334,-0.0018586915,-0.017020084,0.04878681,0.014214125,-0.0124629615,-0.01851523,0.014797847,-0.008136256,-0.037808754,-0.012749702,-0.012872591,-0.027035512,-0.0065796655,0.028755954,-0.0037250635,0.04114723,0.025007848,0.007414284,-0.06595027,-0.0072862753,0.039713528,-0.020041097,-0.011612982,-0.010844927,-0.01966219,-0.03447028,0.035043757,-0.006093231,-0.0034204018,-0.0067896,-0.005064038,-0.013906904,0.018341137,-0.04637,0.025437959,-0.012217184,0.02545844,0.047148295,-0.010112715,-0.019334488,-0.0099591045,-0.015637586,-0.008448597,0.014111718,-0.00011000778,-0.0019726194,0.0029211666,0.014992421,0.019262802,-0.009528994,0.013743052,0.02021519,-0.012718979,-0.011705148,0.008187459,-0.018832691,0.03758346,-0.012770183,-0.0251717,-0.052268658,0.032708872,0.05276021,-0.04227371,0.028080067,0.037214793,-0.06992366,0.0063390085,-0.051490363,0.010967815,-0.04694348,0.002530739,0.0035535314,-0.037829235,-0.019723635,0.030763136,-0.020880837,-0.009815734,0.013589441,0.005555593,0.011019019,0.0017166014,-0.012217184,-0.0053200563,0.004354868,0.0006803681,-0.025007848,0.0023297647,0.009703086,0.029145101,-0.017317064,0.0059652217,0.015361086,-0.023062112,0.008837745,-0.042068895,-0.017132731,-0.0029083656,-0.021095892,-0.02079891,-0.015012901,-0.027957177,0.018863413,0.012063573,0.0032309485,0.012995479,0.0011130387,-0.00016433162,0.004395831,-0.045509778,0.0008282186,0.010215122,-0.040061712,-0.031746246,0.018576674,0.0069790534,0.0024526534,-0.015432771,0.0035842534,-0.013886422,0.016989361,-0.029247507,0.0059754625,-0.01924232,0.013087645,0.018156804,-0.011326241,0.014050273,-0.004754256,0.03291369,0.0024436929,0.047885627,-0.0071019423,0.043912224,0.03635457,0.011838277,-0.018330896,-0.005632398,0.045919407,-0.014357495,0.011346722,-0.015576142,0.0129442755,-0.0029442082,0.0033000733,0.025990957,0.00030850183,0.025233144,0.065294854,0.028735472,0.016149621,0.01723514,-0.035944942,0.029431842,-0.007900719,0.01950858,0.021259744,0.010343132,0.007875117,0.0054787872,-0.0017268421,-0.0018599716,-0.015893605,-0.025048811,-0.06209975,0.0013088926,0.012811146,-0.014244847,0.004295984,-0.01612914,-0.016497808,0.033610057,0.0045750435,-0.026318662,-0.036682274,0.030373989,0.04227371,0.005273973,0.0099591045,-0.022795852,0.050998807,0.0076959045,-0.0198158,-0.005709204,-0.014070755,-0.00053347775,-0.009109125,-0.0013671367,-0.03633409,-0.039181013,0.012084055,0.0010618351,0.0019009344,0.006630869,0.0007322118,-0.012852109,-0.016630936,0.023594629,-0.0049795522,-0.024721108,0.034552205,-0.011715389,-0.014244847,0.032831762,0.00055939954,-0.007086581,0.00069252896,0.010046151,-0.0094163455,-0.040921934,0.028059585,-0.031213727,0.019826042,-0.031152284,-0.0206453,-0.026830697,0.05329273,0.013568959,0.031193245,-0.038361754,-0.021259744,-0.03336428,-0.011868999,0.0251717,-0.035944942,-0.032565504,-0.017634528,-0.014879772,-0.03383535,0.0034716055,0.0065387026,0.013824978,0.0140297925,0.042068895,0.06255034,0.00073029165,-0.022242853,0.031070357,0.025581328,0.0079365615,0.024966886,-0.009651883,-0.011182871,0.0050537973,-0.010967815,0.006149555,0.0009799093,-0.02701503,0.036067832,-0.00495139,0.05415295,0.03207395,-0.014777365,0.0063287676,-0.021874188,-0.024516294,-0.01654901,-0.0018817331,0.025396995,-0.004255021,-0.018965822,-0.010660594,-0.009569957,-0.014511107,0.014787606,0.025396995,0.012258147,-0.042478524,0.0044444744,0.04157734,0.020573614,-0.02814151,-0.019334488,-0.0076959045,-0.017265862,0.0030773375,0.055013172,0.008991356,0.02545844,-0.013067164,0.057184204,-0.00072005094,0.031234208,-0.016221307,0.00035426507,-0.0011962446,0.020870596,0.035699166,0.028182473,-0.053456582,0.04243756,-0.014224366,-0.01583216,-0.0001640116,-0.004452155,-0.038423195,-0.06492619,-0.0038965957,0.010681075,-0.032360688,-0.004649289,0.013988829,-0.015709272,0.028121028,0.02008206,0.014541828,-0.00031922257,0.020000134,-0.005949861,0.051490363,0.0047414554,0.030210137,0.03082458,-0.008412755,-0.021013966,0.007055859,-0.043174893,0.0049846726,-0.03889427,-0.017450195,0.010220243,-0.04358452,0.02347174,0.017880304,-0.002882764,-0.04170023,0.04710733,0.009866938,0.0050102742,0.0047004926,-0.008602208,0.005770648,0.00048035398,-0.022386223,0.0364365,0.012206944,0.02277537,0.006958572,-0.008085052,-0.03424498,-0.014531587,-0.050015695,-0.01456231,0.051777102,-0.035576276,-0.0055914354,0.0067742392,0.030763136,-0.01894534,0.020737467,0.01867908,0.004060447,-0.031479985,-0.00055363914,-0.022754889,-0.022836816,-0.00551463,-0.001853571,-0.008085052,0.030660728,-0.0031183006,0.01555566,-0.010926853,-0.034859426,0.0026369866,0.01498218,-0.034552205,0.00805945,0.0010733559,0.0012064853,-0.043215856,0.02883788,-0.005765528,0.0019111752,0.021853706,0.0035791332,0.058003463,0.023819925,0.0072913957,0.020163987,0.00016017133,0.007414284,-0.023860887,0.027219845,0.005596556,-0.0025000167,-0.0027624355,-0.04243756,-0.019150155,-0.02926799,0.0049283486,0.016446603,-0.019057987,-0.0006378051,-0.018177286,-0.028776435,-0.001400419,-0.02332837,0.00693297,-0.038505122,-0.017757416,-0.026093366,-0.011367204,-0.043011043,0.0069944146,0.016313473,0.001511787,0.043461632,-0.0148183275,0.0071224235,-0.000028502016,0.014183403,-0.008274505,-0.012637054,0.018464025,-0.002105749,-0.008940152,-0.019201359,-0.038115975,-0.0036969015,-0.006528462,0.01811584,0.006856165,-0.013446071,-0.02361511,-0.046206146,-0.027527066,-0.01541229,-0.0057040835,-0.029042695,0.0106503535,-0.0282644,-0.034285944,0.04227371,-0.03774731,-0.04088097,0.014296051,-0.0010714357,-0.0048387423,-0.0057245647,0.021013966,0.020420004,-0.0008659812,0.00777783,-0.056610722,-0.04047134,0.016917676,0.001328734,-0.004482877,-0.00041666947,0.017931508,-0.030517358,-0.0016589974,-0.013087645,-0.009452188,0.022427186,0.0129442755,-0.004682571,-0.0086892545,0.054480653,-0.008940152,0.0017358027,-0.015565901,-0.006180277,0.00080581696,-0.0032002262,0.005128043,0.034388352,0.013917144,-0.0045724832,-0.024106665,-0.005448065,0.007593497,-0.019754358,-0.023963295,-0.013405108,-0.014377977,-0.01526892,-0.03281128,-0.029042695,0.0084793195,-0.005924259,0.0095648365,0.004582724,-0.0076498208,0.044362817,0.015043624,0.0014337014,0.03010773,-0.0047312146,-0.005949861,0.021259744,0.019283284,0.012698498,0.04354356,0.027240327,0.0012352874,0.0035842534,0.0064465357,-0.0030107729,0.015770715,0.02037904,-0.014050273,0.0048157005,0.013333423,-0.034306426,-0.012739461,-0.042396598,0.017726693,0.019457376,0.024557257,0.009800373,-0.026072884,-0.0331185,0.007547414,0.006267323,0.0053251768,0.0040937294,-0.011868999,0.025274107,-0.006164916,-0.022959704,-0.005924259,0.042068895,-0.018556193,0.016528528,0.020932041,-0.024229553,-0.014797847,0.019989893,0.020768188,0.023717517,0.01880197,-0.03012821,0.020338079,-0.003479286,-0.019918209,0.0066359895,0.0027675556,-0.041474935,0.003166944,0.023635592,0.0015937127,-0.007987765,0.008238663,0.0065950262,0.016630936,0.0055811945,0.005248371,0.015340605,-0.0010099914,-0.022119964,-0.059560053,0.009856697,0.016241789,0.01626227,-0.014992421,0.025233144,0.07254529,0.01173587,0.0007558935,-0.007992885,-0.030353507,-0.0041526137,-0.0077266265,0.0045622424,-0.021546483,0.023533184,0.0061597954,-0.029759545,-0.015596623,0.008796782,0.021730816,-0.016528528,0.0003773067,0.016538769,-0.012770183,0.02246815,-0.012073814,-0.051121697,-0.021034447,-0.04481341,-0.0036380172,-0.032729354,0.0013607362,-0.018965822,0.0024833756,0.05017955,-0.040225565,-0.04481341,-0.008407635,0.0011604021,0.02234526,0.0060317866,0.032155875,0.0029518888,0.00692273,0.058904644,0.03619072,0.008494681,0.009708206,0.048377182,0.0007936561,-0.014787606,-0.017870063,-0.0056580002,0.047312144,0.009518753,0.036293127,0.012688258,-0.027260808,-0.009160328,0.0025256185,0.008085052,-0.020409763,0.021976594,0.023922332,0.022734407,-0.04047134,0.010660594,0.00805945,0.034183536,0.020962762,0.0079212,-0.0054634265,0.02926799,0.016589973,0.018064637,-0.0074296454,0.036948532,-0.04170023,-0.03492087,0.0008685414,0.020563373,-0.016159862,-0.022857297,0.06255034,0.015309882,0.02531507,-0.011674426,-0.0008557405,0.024721108,-0.021812743,0.006830563,-0.019948931,-0.034838945,0.050261475,0.0015181873,-0.004142373,-0.0071019423,0.0027112318,-0.0393039,-0.01613938,-0.056774575,-0.0047184136,0.017306823,0.030210137,0.03336428,-0.0044009513,-0.001102158,-0.016036974,0.017132731,0.0006208439,0.0075422935,-0.02179226,-0.017450195,0.023225963,-0.007183868,-0.033323318,-0.06177205,0.0019278163,0.0050793993,0.008115774,0.01655925,-0.021751298,-0.0032488697,-0.03496183,0.011234075,-0.016866473,0.014859291,-0.007624219,0.0001824129,0.0038249104,0.00636461,-0.020624818,0.0030850181,0.05173614,-0.015924327,0.012555128,0.0019995014,0.015094828,-0.036067832,-0.039119568,-0.011244316,-0.013661126,-0.051695175,-0.033548612,0.03068121,0.0074450066,-0.0044188723,0.029902915,0.0068408037,-0.005273973,0.029186064,0.012657535,0.016508047,0.016200826,-0.010389214,-0.026195772,-0.011070223,-0.015279161,0.0036431376,-0.016313473,0.0046851314,-0.0016525969,-0.004144933,-0.010916612,-0.001372257,-0.009651883,0.026359623,0.02234526,0.03870994,0.012852109,0.00013552958,0.008556125,-0.0015629905,-0.01879173,-0.0065950262,0.030722173,0.00806457,0.03490039,0.022570556,-0.028612584,-0.010783482,-0.02107541,-0.010302168,-0.0014401019,-0.023103073,0.007864877,-0.019918209,-0.017941749,-0.020256152,0.01625203,0.013046683,-0.0056580002,-0.030025803,-0.007644701,0.025888551,-0.0063594896,-0.012954516,-0.0051152417,-0.00028530016,0.056487836,-0.019641709,0.030087247,0.01089613,0.0012679297,0.04854103,-0.009539234,0.012432239,-0.01117263,0.038812343,-0.027608993,0.023021149,0.03623168,0.0017690851,0.025909033,-0.016374918,0.03717383,0.0029826108,-0.019948931,0.033323318,0.0066769524,0.021976594,0.007946802,0.031869132,-0.028940286,-0.010855168,0.022181408,0.028776435,0.022160927,-0.01117263,-0.013138849,-0.02105493,-0.019979654,-0.009380504,0.005698963,0.007229951,0.025499403,0.018607397,-0.008141376,-0.022857297,-0.0075064506,-0.012391277,-0.004482877,0.053251766,0.019109191,0.01089613,-0.008668773,0.021034447,-0.009283217,0.038791865,0.016620696,0.04002075,0.038955715,0.058904644,-0.027383696,-0.001683319,-0.006246842,0.012176221,-0.027916213,0.011694907,0.036559384,0.0070251366,-0.01399907,0.01258585,0.040799044,-0.0019278163,0.018310415,0.018607397,0.011367204,0.023819925,0.024864478,0.03858705,0.007547414,0.0013351344,-0.0038351512,-0.008223302,-0.021280225,0.01032265,-0.002516658,0.010117835,-0.037501533,-0.02375848,0.024577739,0.0009747889,0.0016858792,0.031336617,0.034716055,0.034859426,0.023881368,-0.031705283,0.0051434035,-0.021382632,0.013108127,0.030722173,0.032012504,-0.0077931914,-0.053989097,0.008653412,-0.007153146,0.012534646,0.026134329,0.0058320924,-0.031623356,0.0396316]},{"id":"reverse-bits","name":"Reverse Bits","description":"Given a 32-bit unsigned integer `n`, reverse the bits of the binary representation of `n` and return the result.\n\n**Example 1:**\n\n```java\nInput: n = 00000000000000000000000000010101\n\nOutput:    2818572288 (10101000000000000000000000000000)\n```\n\nExplanation: Reversing `00000000000000000000000000010101`, which represents the unsigned integer `21`, gives us `10101000000000000000000000000000` which represents the unsigned integer `2818572288`.\n","difficulty":"Easy","concepts":["Bit Operations"],"solutions":{"python":"class Solution:\n    def reverseBits(self, n: int) -> int:\n        res = 0\n        for i in range(32):\n            bit = (n >> i) & 1\n            res += (bit << (31 - i))\n        return res\n","javascript":"class Solution {\n    /**\n     * @param {number} n - a positive integer\n     * @return {number} - a positive integer\n     */\n    reverseBits(n) {\n        let res = 0;\n        for (let i = 0; i < 32; i++) {\n            const bit = (n >>> i) & 1;\n            res += bit << (31 - i);\n        }\n        return res >>> 0;\n    }\n}\n","cpp":"class Solution {\npublic:\n    uint32_t reverseBits(uint32_t n) {\n        uint32_t res = 0;\n        for (int i = 0; i < 32; i++) {\n            uint32_t bit = (n >> i) & 1;\n            res += (bit << (31 - i));\n        }\n        return res;\n    }\n};\n","java":"class Solution {\n    public int reverseBits(int n) {\n        int res = 0;\n        for (int i = 0; i < 32; i++) {\n            int bit = (n >> i) & 1;\n            res += (bit << (31 - i));\n        }\n        return res;\n    }\n}\n","csharp":"public class Solution {\n    public uint ReverseBits(uint n) {\n        uint res = 0;\n        for (int i = 0; i < 32; i++) {\n            uint bit = (n >> i) & 1;\n            res += (bit << (31 - i));\n        }\n        return res;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def reverseBits(self, n: int) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number} n - a positive integer\n     * @return {number} - a positive integer\n     */\n    reverseBits(n) {}\n}\n","cpp":"class Solution {\npublic:\n    uint32_t reverseBits(uint32_t n) {\n        \n    }\n};\n","java":"class Solution {\n    public int reverseBits(int n) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public uint ReverseBits(uint n) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/UcoN6UjAI64","embedding":[0.024868296,-0.020141264,0.009654448,-0.040056456,0.018137414,0.023347426,-0.035165004,0.0059344796,-0.032739833,0.015979422,0.008935117,-0.018168243,-0.04603718,-0.0062376265,0.0064534256,-0.0019820135,0.0266769,-0.016565163,0.0054206722,0.052408393,0.006319836,0.0055799526,0.078139886,-0.036603667,0.024046205,0.019689115,-0.012012826,-0.025916465,0.034980033,0.0056416094,-0.018476527,-0.017705817,0.019863809,0.002613997,0.015270367,-0.022915827,0.010594716,-0.032246575,-0.009428373,0.02544376,-0.0015439924,-0.02606033,-0.04587276,-0.011591503,0.01921641,0.009243402,-0.03247265,0.010728306,0.03849448,0.029677538,-0.023984548,-0.00052568957,-0.0009010904,0.0085292095,-0.047969095,0.007881812,-0.0035375666,0.05199735,-0.028259428,0.030129688,0.06108147,-0.039316572,0.0037610729,-0.022258153,0.03031466,-0.018682051,-0.0051663374,0.055326823,0.007835569,-0.029944718,-0.021189433,0.05684769,-0.012927404,-0.009906214,-0.023902338,0.040529158,0.030807914,0.005610781,0.053189382,0.0019332018,-0.04883229,-0.044434097,0.018404596,0.0072960705,0.004637115,-0.013225412,-0.009901076,-0.007902363,-0.032308232,-0.059026238,0.0067462963,0.008513795,-0.0613281,0.010892725,-0.03041742,-0.005949894,0.019987123,0.031506695,0.0011156051,0.016431572,-0.0045908727,0.04213224,0.041844506,0.023326874,-0.012578014,0.013348727,-0.012999337,-0.034116838,-0.06819257,0.026759109,-0.00026766173,-0.018692328,0.04899671,-0.036665324,0.023902338,0.04328317,-0.022895275,-0.021744344,0.045297295,0.000037391557,-0.014448275,-0.009824005,-0.034938928,-0.023881786,-0.04809241,0.002220934,-0.0324521,-0.05327159,0.047722466,-0.0011901073,0.043735318,0.033911314,0.021621032,-0.001023762,0.01924724,-0.012095035,0.015979422,0.010676926,0.017674988,0.007054581,0.010003838,0.02560818,-0.023162454,-0.06683612,0.01788051,0.040056456,-0.004773274,-0.018825917,-0.012290282,0.04320096,-0.00016160861,-0.0023956287,0.019894637,0.029862508,0.011529847,-0.010974934,0.005084128,-0.008698766,-0.027868934,0.023614606,0.026491929,-0.023984548,-0.031876635,0.009063569,0.010789963,-0.001157352,-0.0012440571,-0.026738556,-0.0164624,-0.03156835,-0.012526634,-0.01662682,0.034219597,-0.050270952,0.0044033327,0.05520351,0.011242114,-0.03946044,-0.01921641,0.008292858,-0.037590176,-0.008303134,-0.026389169,-0.073125124,0.027971696,-0.05059979,-0.037220236,-0.049366653,-0.04250218,-0.014448275,0.0070494427,0.07719448,0.031856082,0.0036660186,-0.037322998,0.007275518,0.028074456,-0.034774512,-0.031239513,-0.038987733,-0.04768136,0.033685237,0.025114924,0.028197771,0.0351239,-0.027190708,-0.005744371,-0.006951819,0.037055817,0.02569039,0.02293638,0.002109181,0.028649922,-0.066137336,0.023676263,-0.00062331307,0.031650558,-0.008452138,-0.010281294,0.011036592,-0.029019864,-0.025094371,-0.016595991,0.039686512,0.0658085,0.044598516,-0.009597929,0.019360278,0.060958154,0.010522784,-0.009428373,-0.007316623,0.019103372,-0.033459164,-0.014468827,-0.027005738,0.0033448886,-0.05088752,-0.056231122,-0.0013551681,0.013708391,0.035144452,0.014664074,0.0137700485,-0.010810516,-0.023080245,-0.04899671,0.014088609,-0.06432874,-0.03582268,-0.04579055,0.0031830391,-0.0077019786,-0.053847056,-0.013883086,0.014283856,0.029759746,0.015804727,0.008220924,-0.020737283,-0.0030263278,-0.057751995,-0.005359015,-0.08442889,0.007717393,-0.029636433,0.0014116869,0.025053268,-0.011303771,-0.030355765,0.017007038,-0.01280409,0.055326823,-0.025135476,-0.0006342315,-0.03041742,0.059067342,-0.043365378,-0.003434805,-0.03547329,-0.012218349,-0.020480378,-0.0067668483,0.014746283,0.005816304,-0.039008286,-0.005821442,-0.0018034653,0.025895912,-0.050188743,-0.02240202,0.025053268,-0.029328149,0.027971696,-0.01619522,-0.015588928,-0.0098034525,-0.006864472,0.049654383,-0.02085032,0.013410383,-0.027992249,0.0014913271,0.03387021,-0.03843282,-0.059478387,-0.0061862455,0.024210623,0.025978122,-0.019719943,0.004480404,-0.0064431494,-0.026019227,0.02603978,-0.02023375,-0.052655023,0.006078346,-0.02579315,-0.013163756,0.0010738582,-0.005333325,-0.0058471328,0.031342275,0.032945354,0.032595966,0.03991259,-0.017078971,0.06383548,0.032267127,-0.024703879,-0.033644132,-0.011149629,-0.014931254,-0.0055748145,-0.0577931,0.008092472,0.02916373,-0.018476527,-0.031157304,-0.011642884,0.047188107,0.027910039,0.031403933,0.024580564,0.009597929,0.021744344,-0.0030802777,0.007198447,0.026430272,0.021107223,-0.03220547,0.003699416,0.043981947,-0.0125882905,0.023141902,0.013276793,-0.02764286,0.013502869,-0.055820078,0.03183553,-0.061862458,-0.029328149,0.0004473339,0.0018073189,0.032678176,0.020778386,-0.028649922,-0.04038529,0.008791251,0.007249828,-0.003437374,0.053024963,0.021723794,0.014376341,0.0022247876,-0.018733433,0.0100398045,-0.012187521,0.010995487,-0.0059087896,-0.06527414,0.022689752,0.012228625,-0.0070288903,-0.005222856,0.03183553,0.02071673,-0.02614254,-0.064452045,-0.040508606,0.0030879849,-0.039234363,0.055861183,0.012701328,0.005012195,-0.0489145,-0.00037026274,0.030437972,-0.015527271,0.041926716,-0.010373779,0.009037879,0.012876023,-0.0032780936,-0.02980085,-0.044228572,0.012783538,-0.010255603,-0.0008850339,-0.018342938,0.0017764904,-0.013811153,0.030088583,-0.018702604,0.007845845,0.0063095596,0.002611428,0.015804727,0.020367341,0.017428359,0.00040911944,0.0070802714,-0.013174032,-0.03902884,0.03389076,-0.0024893987,-0.055450134,-0.012259454,0.038823318,-0.00092999206,-0.013718667,0.010769411,-0.070124485,0.013996124,-0.04348869,0.050476477,-0.000638085,0.04455741,0.0014335237,-0.0048683286,-0.021908764,0.0059087896,0.031609453,-0.011427085,-0.028958207,0.013410383,-0.03247265,0.026430272,0.03734355,-0.041741744,0.022648647,0.008960808,0.006581878,-0.032595966,-0.042995434,-0.014551036,0.037980672,0.030355765,0.018661499,-0.02569039,-0.037816253,0.012762985,-0.000113117996,0.008724456,0.021148328,0.030479077,-0.0444752,0.026245302,-0.0005680787,-0.009058431,-0.022381468,0.024375042,0.026163092,0.026800213,-0.0177983,0.019853532,0.041680086,0.08500436,-0.027272917,0.0062273503,-0.04961328,-0.017870234,-0.0007649313,-0.02106612,-0.007203585,0.029595328,0.018373767,0.024868296,-0.013451488,-0.0026718006,0.03993314,0.005919066,-0.012300558,-0.005549124,0.026985185,0.025484866,0.03387021,0.0064534256,-0.011899788,-0.0059344796,-0.044516306,-0.0036480352,0.013800877,-0.036048755,0.05840967,-0.018240176,0.036069307,0.012845195,-0.015414233,0.03458954,0.019041717,0.0016865741,-0.018507356,-0.019750772,-0.009125226,0.01796272,-0.017623607,-0.034096286,0.0144791035,-0.016637096,-0.01857929,-0.0073577273,-0.003766211,0.0018741139,0.020613968,-0.019761046,-0.012762985,-0.0059704464,-0.04028253,-0.020007676,-0.0066743633,0.0008503519,-0.009957595,0.02640972,-0.026265854,-0.016205497,0.02552597,0.009741795,-0.023758471,-0.026841318,0.0025921604,0.045297295,-0.015445062,-0.024950506,-0.014427722,-0.018414872,-0.009289645,0.0063044215,-0.010635821,0.001068078,-0.010964658,0.018322386,0.0222376,-0.024292832,-0.009125226,-0.040035903,-0.022463676,0.018404596,0.017171456,0.033315297,-0.011889512,-0.012218349,-0.0012363499,-0.017469464,0.047558047,-0.0030571562,-0.015856108,0.015198434,0.0064174593,-0.013451488,0.017222837,0.012917127,0.016822066,-0.029328149,-0.014201647,-0.037898462,-0.041104622,-0.01413999,0.0024958213,0.040857993,0.000007225422,-0.050640896,-0.0018702603,-0.028218323,0.010080908,-0.013657011,0.021209985,-0.007953744,0.0051663374,-0.050928626,-0.01681179,0.03662422,0.024395594,0.0055645383,0.00017003826,-0.02764286,-0.017366704,0.023532396,-0.0053024963,-0.033664685,0.008996774,0.037590176,-0.008452138,0.012249177,0.0140064005,-0.0034065456,0.0033885622,0.02143606,-0.014335237,0.010574164,-0.021929316,0.010178532,0.02908152,0.004752722,0.0047912574,0.0010070632,0.037775148,0.011930617,-0.0057957517,-0.0012280006,0.0026640934,0.012475253,0.03771349,0.01347204,-0.02108667,-0.003296077,-0.045215085,0.043858632,-0.0063660783,0.028485503,-0.023799576,0.013112375,-0.024477802,0.0111188,-0.038823318,0.030006375,0.010363503,-0.0063044215,-0.026101435,-0.061492514,0.008698766,0.0022620386,0.0024624239,0.012095035,-0.024929954,0.024888849,-0.02827998,-0.011447637,-0.009700691,-0.02143606,0.002633265,0.026245302,0.019236963,-0.031630006,-0.0019910051,0.037590176,-0.026512481,-0.035267767,-0.020870872,-0.0024611393,0.016770685,-0.019442486,0.0060886224,-0.01569169,-0.032493204,-0.033459164,0.003108537,-0.010517646,0.012249177,-0.034199044,-0.0426666,0.03761073,0.050229847,-0.011355152,-0.018024378,0.004048805,0.007717393,0.0012093751,-0.007455351,-0.011478466,0.007054581,-0.014499656,-0.009402682,0.043159854,0.012187521,-0.005338463,-0.023552949,0.036110412,-0.015188158,-0.05183293,-0.00071547733,-0.02039817,-0.05059979,-0.010245327,0.0240051,-0.014694902,0.07152204,0.017818853,0.002247909,-0.07875646,0.015321748,0.039069943,0.0013069985,-0.012382767,-0.009603067,-0.023861233,-0.02293638,0.015383405,-0.014263304,-0.030951781,-0.037384655,-0.010769411,-0.03557605,0.021949869,-0.026656348,0.028033353,0.025567075,0.02640972,0.05228508,-0.037775148,-0.015218986,-0.0008651239,-0.017192008,-0.04071413,-0.002186252,0.011570951,-0.016852895,0.026368616,0.018404596,0.025299896,-0.0083391005,0.020007676,-0.0027668548,0.0024534322,-0.0110776955,0.017171456,-0.039337125,-0.0055285715,-0.000116730705,-0.021867659,-0.059355076,0.0005398193,0.03662422,-0.015455338,0.0129685085,0.021806002,-0.051545195,-0.013698115,-0.049284443,-0.007799602,-0.039645407,0.002648679,0.012372491,-0.025813702,-0.011365429,0.017089248,0.0022530472,-0.030931229,-0.007013476,-0.0061143124,-0.01716118,0.0053179106,-0.025978122,-0.02694408,-0.013122651,0.021990974,-0.021107223,0.0037328135,0.01480794,0.042378865,-0.021415507,0.007933192,0.015393681,0.009294783,0.029924165,-0.024888849,-0.019154754,-0.0042235,-0.018774536,-0.024333937,-0.050476477,-0.024847744,0.0012235048,0.019524695,-0.0007257535,-0.009541411,-0.013883086,-0.0051791826,-0.016616544,-0.016534334,-0.013698115,-0.00050321047,0.021107223,-0.03958375,0.026471376,0.012896575,0.0085292095,0.01419137,0.017664712,-0.015671138,0.0035786713,-0.012762985,0.021949869,-0.041454013,-0.0014849044,0.027314022,-0.020727007,0.019154754,-0.05166851,0.020007676,0.0026589553,0.056354437,-0.014304409,0.04648933,-0.012043654,0.033191983,-0.020130988,-0.03717913,0.028444398,0.006597292,0.014828493,-0.0025292188,-0.0125882905,0.021107223,0.009525997,0.022607543,-0.008565175,0.010281294,0.078222096,0.021014739,0.01702759,0.006258179,-0.06420542,0.022792513,-0.016205497,0.023244664,0.0069620954,-0.002020549,-0.0039999937,0.009993562,-0.0004980724,-0.007881812,-0.0144791035,-0.031486142,-0.027889486,-0.00058670423,-0.012382767,-0.0076968404,0.043406483,-0.054710254,-0.04509177,0.01964801,-0.001424532,0.017736645,-0.037302446,-0.019473314,0.037384655,0.021970421,0.011375704,-0.01226973,0.045831654,0.036336485,-0.016791238,-0.032061607,-0.027868934,0.010903001,-0.032513756,-0.017520845,-0.020038504,-0.015815003,-0.001075785,0.00037668532,-0.017418085,0.023737919,0.017387256,-0.016297983,0.0008272305,0.0029929304,-0.025505418,-0.032349337,-0.00039820102,-0.009993562,-0.015763624,0.023285769,0.01973022,-0.026245302,-0.009541411,0.02569039,-0.02365571,-0.04365311,-0.018271005,-0.03929602,0.024580564,-0.039953694,-0.0050199023,-0.024971059,0.028403293,-0.008626833,0.030972334,-0.062109083,-0.01951442,-0.0072189993,-0.012362216,0.021209985,0.00086383935,-0.0364598,-0.02410786,-0.03280149,-0.0355966,-0.014417446,-0.007054581,0.013091822,0.022915827,0.060094956,0.06708274,-0.021949869,-0.027889486,0.0035247214,-0.012351939,-0.003694278,0.013441212,-0.024231175,0.015558099,0.017870234,0.00025080243,0.015270367,0.013626182,-0.02480664,0.03654201,0.012547186,0.040693577,0.0068541956,-0.017572226,-0.049448863,-0.0066435346,-0.02943091,-0.009099536,-0.007316623,0.032965906,-0.008986498,-0.01716118,-0.033130325,-0.024662774,-0.0055131577,0.0074347984,0.010892725,0.03298646,-0.036891397,0.0049197096,0.009454063,0.027704516,-0.03006803,0.00066216977,-0.007964021,-0.019000612,-0.006319836,0.033376954,0.000057803376,0.028423846,0.0020834906,0.030006375,-0.010044942,0.0072960705,-0.00753756,0.040261976,0.01948359,0.03867945,0.014818217,0.030684602,-0.041823953,0.024169518,0.0020436705,-0.02041872,-0.0024508631,0.012814366,-0.0064893924,-0.0533538,-0.0040513743,0.0037764872,-0.015321748,0.010563888,0.017438635,-0.03058184,-0.006283869,0.032226022,0.04722921,0.015321748,-0.0076249074,0.009844557,0.026923528,0.02943091,-0.004675651,0.03317143,-0.0056518856,-0.012125864,0.005728957,-0.03362358,0.014643522,-0.04141291,-0.012064206,-0.0039563198,-0.031773873,0.024169518,-0.00086833513,0.01804493,-0.025834255,0.04784578,0.022998037,-0.017931892,-0.01462297,-0.006026965,0.0062376265,-0.023491291,-0.010260741,0.009633896,-0.0028619093,0.037322998,0.01938083,0.00023217688,-0.03015024,-0.0061194506,-0.041906163,-0.030992886,0.035884336,-0.038371164,-0.003298646,0.0075170076,0.03621317,-0.0071522044,0.006545911,-0.012814366,0.019319173,-0.0144791035,-0.009037879,-0.02712905,-0.009294783,0.010779687,-0.019154754,0.0061554173,0.0062684547,-0.0053744293,0.0045086634,0.023491291,-0.014304409,-0.016503505,0.00475786,-0.027889486,-0.0055080196,0.0072909323,0.00938213,-0.02996527,0.029307596,-0.016123287,0.0030057756,0.015547823,0.019822704,0.08401785,0.029780298,0.017048143,0.0008182389,-0.012444424,0.00054784754,-0.017705817,0.023450186,0.0079126395,-0.01889785,0.0041001863,-0.013379554,-0.016842619,-0.015558099,0.012516358,0.018353214,-0.01881564,0.008729594,-0.013317898,-0.018003825,-0.018209348,-0.013811153,0.0057186806,-0.029903613,0.004477835,-0.014890149,-0.035534944,-0.024786087,0.018743709,0.018106585,-0.006473978,0.03271928,-0.0064123212,-0.009767486,-0.018938955,0.019884361,-0.010861897,0.022299258,0.00042967175,-0.034363464,-0.00376878,-0.029266492,-0.0153731285,-0.01764416,-0.021477165,-0.010173394,0.030355765,-0.014386618,-0.011560675,-0.020562587,-0.020120712,-0.012064206,0.021929316,-0.03183553,0.025197133,-0.015701966,-0.036891397,0.04813351,-0.0315889,-0.046653748,0.0061965217,0.009736657,0.003838144,0.009289645,0.017192008,0.018825917,-0.040118113,-0.01382143,-0.049901012,-0.0355966,0.016750135,0.015506719,0.009695553,-0.0035349976,-0.00063680054,0.00050032034,-0.0016274862,0.013102098,-0.010635821,0.022360915,-0.009541411,-0.02320356,-0.01804493,0.04579055,0.02018237,-0.008724456,-0.0038638345,-0.0038586964,0.03701471,0.0095208585,0.004146429,0.026738556,0.0061862455,-0.0013281931,-0.0009479754,-0.028855445,0.006181108,-0.00809761,-0.019853532,-0.0002408474,-0.02419007,-0.017757198,-0.038288955,-0.040673025,-0.022175943,-0.0067874007,0.030931229,0.0021631308,0.04287212,0.015147054,0.013975572,-0.0137700485,0.05647775,-0.009402682,-0.011940893,0.0064174593,0.022915827,-0.010882448,0.024375042,0.045461714,0.0045831655,-0.018168243,0.021949869,0.0024341643,0.005543986,0.010646097,0.0050584376,-0.003306353,-0.0055850907,-0.015701966,0.019627457,-0.040405843,0.021497717,0.005148354,0.030828467,0.01053306,-0.033644132,-0.01066665,-0.010055218,-0.012814366,-0.0049839355,-0.017777748,0.012834919,0.023470739,-0.009402682,0.0114065325,-0.010491955,0.04480404,0.00041778994,0.027355127,0.006021827,0.005281944,-0.014920978,-0.008210649,0.036665324,0.025628733,0.010116875,-0.040899098,0.009109812,-0.017890787,-0.04155677,0.008806665,-0.010985211,-0.009032741,0.0024470096,0.019391106,0.020326236,-0.0113346,0.016174668,-0.0064380113,0.0177983,0.016822066,0.005410396,0.014170819,-0.031260066,-0.037692938,-0.043981947,0.011930617,0.028649922,0.022710305,-0.042913225,0.015311472,0.050394267,0.009284507,-0.02569039,-0.009428373,-0.0116942655,-0.012567738,0.0008856762,-0.021764897,-0.0038843867,0.02774562,0.005258823,-0.04079634,-0.009710967,0.0070340284,0.0104148835,-0.02023375,-0.024786087,0.01938083,0.004819517,0.011704541,-0.005441224,-0.053066067,-0.013112375,-0.039624855,-0.017623607,-0.00161721,-0.008318548,0.0069312667,0.016606268,0.032041054,-0.016667925,-0.028218323,-0.019791875,-0.033561923,0.047188107,0.01764416,0.035247214,0.0034065456,0.0013114944,0.060341585,0.012783538,0.01702759,0.034815617,0.032431547,0.027540097,-0.04038529,-0.006936405,-0.024518907,0.036583114,0.009633896,0.009448925,0.038823318,-0.04554392,-0.0067514344,0.008061644,0.024087308,-0.0063814926,0.026471376,0.011848408,0.02419007,-0.030705152,0.00047462992,-0.025834255,0.03717913,0.03565826,0.01804493,0.0032652484,0.013009613,0.0036172068,-0.006006413,-0.015537547,0.023326874,0.000907513,-0.023388531,-0.020953082,0.023984548,-0.0075581125,-0.0033397507,0.010296708,-0.010676926,0.014458551,-0.009227987,0.01007577,0.03921381,-0.017633883,0.024971059,-0.0075118695,-0.05520351,0.040138666,0.012043654,-0.0032729555,0.02320356,-0.011499018,-0.05281944,-0.0020500931,-0.05051758,0.0049145715,0.00056839985,0.0031470726,0.023820128,-0.022545885,-0.004408471,0.009561962,0.03228768,0.00860628,-0.025382105,-0.006026965,-0.029677538,0.046078283,0.010008976,-0.042070583,-0.034486778,0.01462297,-0.018661499,-0.021970421,-0.000114402515,-0.03298646,0.02747844,-0.038391717,0.0048400695,-0.007398832,-0.007650598,-0.008518933,-0.008215786,0.03255486,-0.018209348,-0.014088609,-0.00646884,0.0426666,-0.039871484,0.015999975,-0.009546548,0.03413739,-0.026553586,-0.019370554,-0.024786087,-0.022360915,-0.04899671,-0.023409082,0.0032215747,0.01427358,-0.01200255,0.005348739,-0.0063660783,0.0015722518,-0.0055337097,0.004449575,0.035945993,0.02862937,-0.0030186207,0.019267792,0.0068901624,0.009166331,-0.0055388478,-0.014664074,0.022360915,0.018281281,-0.02871158,0.010944106,-0.021559374,0.02023375,0.04953107,0.029985823,0.062643446,0.013667287,-0.003763642,-0.0002586701,0.010594716,-0.0030622943,-0.0020488086,-0.00046499603,0.02250478,0.010142566,0.013348727,-0.023429634,0.003630052,-0.024066756,0.0030288969,0.0022864447,-0.018558737,-0.014992911,-0.01307127,-0.030253002,0.012423872,0.026985185,0.011180458,0.013040441,-0.008390481,-0.034466226,0.013554249,-0.015496443,-0.016318535,0.020891424,0.013955019,0.02320356,-0.035144452,0.03851503,0.016791238,0.021970421,0.03763128,0.020110436,0.0095208585,-0.014900425,0.01737698,-0.041988373,0.018065482,0.025854807,0.023676263,0.030376315,-0.0044752657,0.037775148,0.0015478459,-0.031445038,0.021764897,0.012310835,-0.0042748805,0.0031213823,0.018938955,-0.03228768,-0.011499018,-0.012146416,0.048174616,0.030191345,-0.004349383,-0.0008124586,-0.034815617,-0.0082312,-0.006479116,0.019904913,0.004495818,0.045996074,0.002280022,0.016606268,0.0032549724,-0.009438649,-0.019021165,0.0058933753,0.05787531,-0.0015928041,0.009931904,0.0063712164,0.025998674,-0.01903144,0.052655023,0.012485529,0.042214446,0.024518907,0.042543285,-0.01871288,0.016051356,0.0007174041,0.020911977,-0.05088752,0.011129077,0.06560298,-0.017921615,0.012999337,0.024251727,0.0023236957,0.023183007,0.0324521,0.026697453,0.020788662,0.029184282,0.04030308,0.03592544,0.018569013,-0.015588928,0.009967871,-0.00016473961,0.0048708976,0.024929954,-0.015845831,-0.003892094,-0.031075094,-0.03239044,0.013040441,-0.02897876,-0.01125239,0.012095035,0.019421933,0.032226022,0.015917765,-0.020490654,0.012578014,0.010820792,0.02712905,0.0113346,0.034199044,-0.011344876,-0.045050666,-0.0022581853,-0.0007527284,0.022299258,0.03041742,0.021025015,-0.026471376,0.023696816]},{"id":"missing-number","name":"Missing Number","description":"Given an array `nums` containing `n` integers in the range `[0, n]` without any duplicates, return the single number in the range that is missing from `nums`.\n\n**Follow-up**: Could you implement a solution using only `O(1)` extra space complexity and `O(n)` runtime complexity?\n\n**Example 1:**\n\n```java\nInput: nums = [1,2,3]\n\nOutput: 0\n```\n\nExplanation: Since there are 3 numbers, the range is [0,3]. The missing number is 0 since it does not appear in nums.\n\n**Example 2:**\n\n```java\nInput: nums = [0,2]\n\nOutput: 1\n```\n\n**Constraints:**\n* `1 <= nums.length <= 1000`\n","difficulty":"Easy","concepts":["Bit Operations"],"solutions":{"python":"class Solution:\n    def missingNumber(self, nums: List[int]) -> int:\n        res = len(nums)\n\n        for i in range(len(nums)):\n            res += i - nums[i]\n        return res\n","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {number}\n     */\n    missingNumber(nums) {\n        let res = nums.length;\n\n        for (let i = 0; i < nums.length; i++) {\n            res += i - nums[i];\n        }\n        return res;\n    }\n}\n","cpp":"class Solution {\npublic:\n    int missingNumber(vector<int>& nums) {\n        int res = nums.size();\n\n        for (int i = 0; i < nums.size(); i++) {\n            res += i - nums[i];\n        }\n        return res;\n    }\n};\n","java":"class Solution {\n    public int missingNumber(int[] nums) {\n        int res = nums.length;\n\n        for (int i = 0; i < nums.length; i++) {\n            res += i - nums[i];\n        }\n        return res;\n    }\n}\n","csharp":"public class Solution {\n    public int MissingNumber(int[] nums) {\n        int res = nums.Length;\n\n        for (int i = 0; i < nums.Length; i++) {\n            res += i - nums[i];\n        }\n        return res;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def missingNumber(self, nums: List[int]) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {number}\n     */\n    missingNumber(nums) {}\n}\n","cpp":"class Solution {\npublic:\n    int missingNumber(vector<int>& nums) {\n        \n    }\n};\n","java":"class Solution {\n    public int missingNumber(int[] nums) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int MissingNumber(int[] nums) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/WnPLSRLSANE","embedding":[-0.021410968,0.018802723,0.0091045275,-0.023162775,0.05555173,0.015503487,-0.059249986,0.008262687,0.002031609,0.055318154,-0.0114645995,-0.05597995,-0.0048369323,-0.013303997,0.06236431,0.0413037,-0.01573706,0.00018278397,-0.0037688168,0.041264772,0.013703019,0.053722065,-0.000035488527,-0.03637918,0.06972189,-0.015532684,0.021547219,0.0031167555,0.009411094,0.020865962,0.004948853,-0.006900171,-0.0506856,0.018199323,0.011474332,-0.020788103,0.015990099,0.023065452,0.0062286453,-0.032544672,0.02392189,-0.036787935,0.014316152,-0.03538649,0.020846497,0.036632217,0.025537444,0.007347855,0.05434493,-0.0067347223,0.007722547,0.010442713,-0.022462051,0.026257632,0.0030607951,0.005766363,-0.016145816,0.040564053,-0.0033843927,-0.00020848321,0.020671315,-0.0048174676,-0.006384361,0.047726993,-0.010033958,0.0056301113,0.031337872,-0.025693161,-0.014939016,-0.05146418,-0.07299194,0.0253428,0.018374503,-0.01685627,0.016194478,0.064038254,0.043250155,0.03733294,-0.0054938598,-0.025965665,0.017771102,0.018520487,0.010763877,-0.015921975,0.015357503,0.018656738,-0.046831626,-0.0504131,-0.033420574,-0.058899626,-0.009158054,0.01534777,0.011707907,0.03116269,0.0023527734,-0.031999663,0.048272,0.016914664,0.024447432,0.031415727,-0.0056009144,0.012116661,0.012554613,-0.0063940934,-0.014004719,0.014170168,0.017119043,-0.02512869,-0.00838434,0.01702172,0.035717387,-0.006661731,-0.0045692953,-0.05555173,0.026257632,-0.006087527,-0.04951773,-0.024681006,0.016749216,-0.0032286765,0.014598387,-0.013226138,0.0012043669,-0.023123845,-0.020535065,0.0069196355,0.005542521,-0.044885173,0.001695846,0.018140929,0.020028986,-0.029586064,-0.0028442524,0.024719935,-0.042783007,-0.037527587,0.01641832,0.024875652,-0.009031535,0.040836554,0.056602813,0.010364855,-0.014685977,0.02651067,0.06470005,0.005089971,-0.0011301584,0.028184619,-0.0007183623,0.0054111355,0.059444632,-0.0038247774,-0.0025157887,0.01607769,0.0114062065,-0.014491332,0.015824651,-0.01405338,0.016973058,-0.0075570983,-0.015717596,-0.019990059,0.024642076,0.0025766152,0.022286871,0.0051824274,0.0031556846,-0.008783363,0.005693371,-0.00024132959,0.0035668726,-0.055201367,0.002523088,-0.016145816,0.0091337245,-0.021041142,-0.022423122,-0.07859772,-0.042043354,-0.0011186014,-0.042043354,0.0087736305,-0.026277097,-0.03556167,0.00043734335,-0.009143457,0.035036128,-0.013255335,-0.0081458995,-0.018209055,0.036145605,-0.004875861,0.055162437,0.011172632,-0.038150452,-0.009732258,-0.0034865814,0.05866605,-0.013703019,0.006953698,-0.017430473,0.040758695,0.028418193,0.0023126279,0.030715005,-0.040330477,-0.025362264,0.00013663177,-0.009523015,-0.008754166,0.014209096,-0.0073770517,0.023844032,-0.055201367,0.0007378268,0.04387302,0.01853022,0.023610458,-0.017362349,0.028963199,0.026043523,-0.00079317903,-0.008462198,0.046169832,0.069410466,0.0048928927,0.012574078,0.030286787,-0.018822188,0.006856376,-0.0060972595,-0.008501127,0.009454888,0.011785764,-0.0093527,-0.037527587,-0.0069196355,0.0155910775,-0.023065452,0.031532515,0.017673781,-0.004257863,-0.007902593,0.025459588,0.009547345,0.01822852,-0.03797527,0.052787766,-0.0025449854,-0.054928865,0.038442418,0.03328432,0.04266622,-0.049673446,-0.01853022,0.067697585,-0.011756567,0.025109226,-0.01163978,0.011085042,-0.05426707,-0.024758864,-0.02853498,-0.0854103,-0.00054865604,-0.053644206,0.0073867836,0.02676371,0.049595587,0.010277265,-0.017527796,-0.016067958,0.017615387,-0.02651067,-0.004226233,0.009425692,-0.011951213,0.023007058,0.03990226,-0.085021004,0.004153241,-0.016632428,-0.0027250322,0.052982412,0.015406164,-0.005815024,0.020885427,0.015542416,0.0025522846,-0.014559458,-0.051308464,-0.022247942,-0.011863623,0.012223716,-0.03013107,0.024836723,-0.0126908645,-0.020749174,0.0101507455,-0.02779533,0.04504089,-0.0068174466,-0.04180978,-0.028865878,-0.057614967,-0.040291548,0.00881256,0.01616528,-0.025965665,0.0068709743,0.0059123468,0.021839187,-0.030987509,0.0038028797,0.03669061,-0.089381054,-0.02129418,-0.021177392,0.056057807,0.0152309835,0.012593542,0.01680761,0.031006973,0.03336218,0.0056544417,0.022968128,0.024272252,0.010900129,0.015824651,-0.0014026617,-0.0518924,-0.022014368,-0.017566726,0.052359547,-0.041965496,0.029157845,0.034296475,0.004484138,0.02810676,0.028457122,0.032856103,0.00256445,0.052009188,0.01336239,0.02913838,-0.018053338,-0.012982832,0.0064476207,0.04546911,-0.03563953,0.015844116,0.018150661,0.05344956,-0.016924396,-0.035055593,0.037216153,-0.03809206,-0.005810158,0.012428094,0.002096085,-0.037157763,-0.00404132,0.020398812,-0.039279394,0.03176609,0.024466896,0.003615534,-0.033420574,-0.02736711,0.04138156,-0.00467635,0.022053296,-0.011221293,-0.010189674,-0.032135915,-0.010676287,-0.0400969,0.0038807378,-0.031629838,-0.008530324,-0.013148281,-0.018987635,0.024914581,-0.019376926,0.023902426,0.03421862,-0.009727391,-0.043717302,-0.034841485,-0.025498515,-0.031415727,-0.01668109,0.065790065,-0.032700386,0.031649303,0.017226096,0.033517897,0.049634516,-0.0078442,-0.0014878189,0.03369308,0.026238168,0.0031021573,0.021625077,0.0105595,-0.010617893,0.022364728,0.0168952,0.03780009,-0.037780624,-0.0015157992,-0.003776116,0.0038028797,-0.009673865,0.034627374,0.0023917025,0.017430473,0.031902343,0.016457248,-0.024992438,0.008890417,-0.0031118896,0.017011987,0.0051094354,0.007435445,-0.017751638,-0.03659329,-0.05504565,-0.0011477981,-0.041537277,-0.024291717,0.003883171,0.004598492,0.02257884,-0.09132751,0.0470652,-0.00959114,0.04138156,0.0001912997,-0.07166835,-0.0045936257,-0.05387778,0.0070704855,-0.042510502,-0.0018649439,-0.028379263,-0.029002128,0.040408336,0.051308464,0.02651067,0.02736711,-0.03612614,0.03478309,0.019143352,-0.015766257,-0.003506046,0.03464684,-0.0054549305,-0.013021762,0.0031362202,-0.065790065,0.0193088,-0.0009282141,-0.00092760584,0.02115793,-0.030500896,-0.049907017,0.0035109122,0.044418026,0.011698174,0.021430433,-0.010578965,0.023727246,0.031240549,-0.05629138,-0.030715005,0.0014574056,0.08455386,0.023688316,-0.0056398436,-0.000998773,-0.059249986,-0.011902551,-0.008277286,0.0074403114,-0.013012029,0.009659266,-0.009323503,0.027133536,0.009172653,-0.064583264,-0.003549841,0.013926861,-0.0042189336,0.032174844,0.013119084,0.009561944,0.0052992143,0.004982916,0.00035492328,-0.016836807,-0.08906963,-0.0021934076,0.040797625,0.024233323,-0.021430433,0.008797961,-0.00010644657,0.00043430203,0.08276312,-0.019445052,-0.0025474185,0.0029318428,-0.021780793,0.0184037,0.05477315,-0.02409707,-0.06123537,-0.00832108,-0.024038678,0.0013515673,0.020846497,0.022228478,0.009780919,-0.0028418193,-0.044729456,-0.03293396,-0.0052894824,-0.05348849,0.027775865,-0.011007184,0.023649387,0.030792864,0.062636815,-0.032914497,0.020535065,0.0434448,-0.018316109,-0.01676868,-0.013041225,0.007401382,0.017187167,-0.021021677,-0.010870933,-0.016486445,-0.008905016,0.03634025,0.03116269,-0.015746793,0.023999749,-0.0063551646,-0.0037055572,0.010403784,-0.024174929,-0.0079074595,-0.045702685,-0.0042797606,0.03521131,0.02754229,0.01487089,-0.048544504,-0.014909819,-0.0053819385,0.02598513,-0.0074208467,-0.003021866,-0.007016958,0.004605791,0.020865962,-0.024856187,-0.0050072465,0.012729794,0.019386658,-0.04422338,0.026491206,-0.024992438,-0.024136,-0.013605697,-0.0193088,0.034121297,-0.007858798,-0.01634046,-0.0011417156,-0.015610542,-0.051697753,0.0057614967,-0.01866647,0.018987635,0.027230857,-0.030150535,0.0071872724,-0.012778454,0.026569065,-0.0063989596,-0.012661668,-0.021060606,-0.047376633,0.029235704,0.044418026,-0.0020741874,0.044379096,0.00866171,-0.0040486194,0.008418404,0.002164211,-0.00009435728,0.020846497,0.04655912,-0.011328348,0.028048368,-0.03464684,-0.004749342,0.0008321081,-0.03542542,-0.0123307705,-0.0093429675,0.041926567,0.013158013,0.0049877823,0.0051580966,0.011600851,-0.005659308,0.016126351,0.015766257,0.007922058,-0.023727246,-0.028028904,0.010822271,-0.017595923,0.016700555,-0.05302134,0.0058539533,0.025070297,-0.029683387,-0.013926861,0.043328013,-0.03577578,-0.007547366,-0.018617809,-0.05313813,0.02470047,-0.012476754,-0.01762512,-0.037469193,0.015931707,0.007158076,-0.0031143227,-0.009196984,0.00827242,-0.004647153,-0.010063155,-0.0017189601,0.007425713,-0.024875652,0.0072651305,-0.008389207,-0.023824567,-0.0135765,0.006087527,-0.011308883,-0.0005717701,0.0196105,0.049984876,0.00064476207,0.008583851,-0.037644375,0.03147412,-0.030423038,0.031123761,-0.017664049,-0.026744245,0.029041057,-0.0010310111,-0.03059822,0.0027007016,0.01715797,0.01469571,0.019240674,-0.044768386,-0.017518064,0.031532515,0.011542458,-0.024466896,0.04231586,0.027717471,0.026101915,0.0010389185,0.031240549,-0.010754145,0.010189674,0.014345348,-0.02857391,-0.0049877823,-0.021683471,0.026899962,-0.0043868152,0.0031970467,0.029410884,0.0006678762,-0.012924438,-0.003357629,-0.014403742,0.0126908645,0.020535065,-0.056524955,0.019970594,0.00079743686,0.016272336,-0.0062432433,0.021975439,0.043211225,0.023649387,0.013644625,-0.024116535,-0.033907186,0.0017797867,0.02115793,0.011211561,0.014802764,-0.04142049,-0.017741906,0.012934171,-0.0075425,0.005124034,0.007396516,0.025965665,0.011454867,0.0048417985,0.043133367,-0.0007852716,-0.008004782,-0.011844158,-0.014199364,0.016252872,0.016330728,-0.03525024,-0.040019047,0.037527587,-0.017946284,-0.027036212,-0.02065185,0.022831878,0.03453005,-0.022306336,0.021449897,0.042432643,-0.02004845,0.012068,-0.04180978,0.039084747,-0.039162606,0.0007937873,0.00410458,0.011357545,0.033109143,-0.0016788145,0.012068,0.0060048033,-0.00708995,0.010267532,-0.022033833,0.04258836,0.008700639,0.010316193,0.041887637,0.0046958146,-0.03488041,0.02814569,-0.0013831971,0.032817174,-0.0009902572,-0.02874909,-0.034549516,-0.045235533,0.009785785,-0.029644458,-0.029002128,-0.02754229,-0.026744245,0.0023783206,-0.02327956,0.021839187,0.0155910775,0.016739484,-0.0022226044,0.012700597,0.018919509,0.0069634304,0.016350193,-0.042238,-0.008038845,-0.022734554,-0.014773567,-0.049984876,0.03830617,0.008919614,-0.009094795,0.00067213405,0.055240296,-0.047259845,0.0096544,0.030909652,0.01974675,-0.014257758,0.029722316,-0.022286871,0.0030340315,-0.01288551,0.03719669,0.015756525,-0.009863644,0.047104128,-0.02456422,0.020788103,0.012856313,-0.013985255,-0.009182385,0.017751638,-0.0012037586,-0.027230857,0.0015012008,-0.018559417,-0.026296562,0.017352616,0.018783258,-0.023863496,0.012077732,0.020184703,0.033868257,-0.000078998564,0.018870847,0.020749174,-0.050919175,0.009391629,-0.02616031,0.032817174,0.020282026,0.027639613,0.008642245,0.036749005,0.017041184,0.037235618,0.018695667,-0.029761245,-0.011484064,0.042821936,-0.028671231,-0.02207276,0.0026155442,-0.032641992,-0.013605697,-0.0003835118,0.012340503,0.0048953258,-0.01128942,0.017664049,0.01957157,0.033381645,-0.03563953,-0.014666513,0.017041184,-0.01634046,0.008038845,-0.01836477,-0.041576207,0.032213774,-0.005922079,-0.017771102,-0.026043523,-0.04943987,0.05181454,0.018520487,-0.01918228,-0.036865793,0.0044257445,0.000060142313,-0.0093429675,-0.025926735,0.021274716,-0.03818938,0.016126351,0.015143394,-0.009824715,0.05107489,0.023299025,-0.049790233,0.010890396,0.034140762,0.0063162353,-0.021080071,0.02388296,-0.046520192,0.00071227964,-0.009518148,-0.037391335,-0.006681195,0.034802556,-0.025556909,0.047181986,-0.014549726,-0.035191845,-0.005596048,-0.0013454846,0.010783342,-0.000310824,0.00006865804,0.0009750506,0.030306252,0.0045692953,0.000037237292,0.007172674,-0.021021677,0.024992438,0.00012629126,0.038150452,0.0026982685,0.001583925,-0.022267407,0.043250155,-0.010014493,0.027055677,-0.028807484,-0.009070464,-0.0007627657,0.028515516,0.017099578,-0.0039464305,0.016330728,0.016603231,0.007956121,0.030500896,-0.0056106467,0.0025060563,-0.02913838,-0.011756567,-0.0026617725,-0.016408587,-0.004138643,0.015951172,-0.014588655,-0.025634767,0.011785764,-0.023065452,-0.003909935,0.009985297,-0.011026648,0.0011940264,-0.012321038,0.025109226,0.022306336,0.03542542,-0.018004678,-0.015649471,-0.014802764,-0.045624826,-0.006880706,0.013751681,0.004559563,0.016574034,-0.005420868,0.011085042,-0.034744162,0.009678731,0.004559563,-0.0063551646,-0.027620148,0.009299172,0.009153188,-0.021858651,-0.05181454,0.026783174,-0.007654421,-0.028496051,-0.0045814603,-0.010997452,0.0004552872,-0.047376633,0.008841757,0.0005602131,0.041770853,0.044456955,-0.0033795265,-0.008720103,0.01573706,0.0013807641,0.021741865,0.00010454574,0.012943903,0.03052036,0.008807694,0.04254943,0.03143519,-0.02146936,-0.020262562,-0.011221293,-0.01676868,-0.04379516,0.031357337,-0.044729456,-0.010131281,0.0032700386,-0.023766175,-0.008909882,0.0039804936,0.020963283,-0.032992356,0.018209055,0.0058296225,-0.017342884,0.011318616,-0.015308842,-0.026880497,0.003058362,0.012827116,0.021586148,-0.009484085,0.052359547,0.016973058,0.010053422,-0.010102084,0.012846581,0.033673614,0.0039804936,0.0034257548,-0.049284153,-0.024369573,0.0139755225,0.061663587,-0.01654484,0.002798024,-0.024583684,-0.031396266,-0.022559375,-0.007080218,-0.015824651,0.03542542,-0.024038678,-0.016126351,0.0217224,0.0091921175,-0.028963199,0.010929326,-0.026101915,0.0072894613,-0.02133311,-0.024350109,-0.0035595733,0.006087527,-0.04219907,0.025381729,-0.02115793,0.028826948,0.007158076,-0.012505951,-0.01710931,0.012155591,0.01529911,0.023221167,0.035152916,0.011133703,0.009946368,-0.03762491,-0.035697922,0.02253991,0.0135570355,-0.017391546,-0.023571528,-0.034101833,-0.046753768,-0.022617767,-0.016282067,-0.005888016,-0.03974654,0.029624993,-0.020028986,-0.012350235,-0.047688063,-0.00030793474,0.0044257445,0.015162858,0.01856915,-0.024369573,-0.020768639,-0.016963325,0.032778244,0.04219907,0.0072213355,0.008797961,-0.00073661027,0.0018527786,-0.0035011799,0.039629754,0.024603149,0.006982895,0.00026048996,-0.00009542175,0.0021861084,-0.0038320767,-0.027717471,-0.003506046,0.010082619,-0.008150766,0.006267574,-0.019464515,0.011007184,-0.0065546758,0.007766342,0.035931498,0.0037250218,-0.019425588,-0.014909819,0.010588696,-0.025011903,0.008656844,-0.051230606,-0.05228169,-0.008053443,-0.009284575,-0.009323503,-0.018763794,-0.018890312,-0.019075226,-0.0010529087,0.03336218,-0.044924103,-0.010909861,0.020846497,0.031357337,-0.028398728,0.029566599,-0.02310438,-0.05181454,-0.030851258,-0.03180502,0.008822292,0.021955974,0.026471741,-0.04114799,0.016603231,0.03055929,0.02129418,-0.019863538,-0.0071532098,-0.0039707613,0.015114197,0.014335616,0.0067687854,0.051619895,0.0056009144,0.011211561,0.0156884,-0.00016423185,0.015883045,0.022656696,-0.020612922,0.021021677,-0.048700217,0.012515684,0.007829602,-0.010540036,-0.012077732,-0.022033833,0.02974178,0.0065060146,0.014043649,0.0076398226,-0.022442587,-0.0057177017,0.034666304,0.0030024017,-0.018102,-0.0027785597,-0.0171969,-0.021177392,0.06427183,-0.0013126383,0.020710245,-0.0073867836,0.050023805,0.018890312,0.0031800154,0.0037931476,-0.0070704855,-0.008895284,-0.00042000777,-0.002946441,-0.0024963242,-0.045546968,0.042432643,0.043289084,0.011065577,-0.011717639,-0.003734754,-0.020807568,-0.007352721,-0.005270018,0.0043186895,-0.011386742,0.007425713,-0.032272168,-0.0063162353,-0.02388296,-0.008131302,0.049984876,-0.022053296,-0.0060583306,0.0022505848,0.0022226044,-0.016408587,-0.011192096,0.014715174,0.0019829476,-0.010481642,-0.04655912,-0.027873186,-0.037488658,-0.05056881,0.0017518065,-0.01698279,-0.026666386,-0.0013904964,0.036710076,0.017187167,-0.009975565,0.002722599,0.0006234728,-0.008715237,0.036515433,0.02275402,-0.0053332774,-0.032505743,-0.01534777,-0.042354785,-0.01526018,0.052593123,-0.0009391629,-0.018763794,-0.012788187,0.066490784,-0.022617767,0.015892778,-0.011746835,-0.03223324,-0.018033873,0.04539125,0.0005215882,-0.029255167,0.0093721645,0.009839313,-0.017372081,0.004068084,-0.010189674,0.018870847,-0.009430558,-0.0019233375,-0.01435508,-0.0190071,0.021878116,-0.0048490977,-0.03857867,-0.02672478,-0.023980284,0.010773609,0.0056009144,0.00009070768,-0.009737124,-0.010004762,0.005055908,0.009508416,-0.017060649,-0.016525375,-0.027308716,0.021410968,0.010909861,0.03491934,0.026861032,-0.0010778476,0.014520529,0.04379516,-0.015883045,-0.0015425629,0.02257884,-0.009664132,-0.010549768,-0.007887995,0.0037542186,0.0021094668,-0.01163978,0.019678626,-0.019591035,0.017994946,-0.03672954,0.042082284,0.0061313226,0.0048466646,0.0003971978,-0.00015966986,0.008048577,0.004647153,0.011630048,-0.014238293,-0.01603876,-0.024914581,-0.0013357524,0.013206674,0.032953426,-0.0057566306,-0.018452361,-0.0040729498,0.019328265,0.021683471,-0.005352742,-0.0034744162,0.019425588,-0.009810116,-0.03953243,-0.007571697,-0.0122723775,0.007673885,-0.025790483,-0.0033819596,-0.006150787,-0.05738139,0.019104423,-0.03297289,-0.018559417,0.047999498,-0.013907396,0.004720145,-0.044534814,-0.012009607,0.0070364224,-0.0034792821,-0.04702627,-0.014520529,0.030247858,0.018822188,0.03456898,-0.010277265,0.006043732,0.0038661396,0.0024683438,-0.028826948,-0.012106929,-0.010481642,0.0013856302,0.065089345,0.019162815,-0.0033357313,-0.052593123,0.030286787,-0.01137701,-0.0011830776,0.037916876,-0.0065692742,-0.019659162,-0.016233407,0.014647048,-0.032466814,-0.019104423,0.0068466435,-0.0004720145,0.032992356,0.024330646,0.01685627,-0.015853848,0.031084832,-0.0019963295,-0.007805271,-0.032096986,0.023376884,-0.027386574,-0.03521131,0.021644542,-0.01034539,-0.037644375,-0.013420784,0.021566683,0.0034500854,-0.016749216,0.026199238,0.025011903,-0.008189695,0.008014514,0.0059464094,0.048855934,0.0069585643,0.026257632,0.0054111355,0.012408629,0.017167702,0.008982874,-0.04297765,0.0061215903,-0.023065452,-0.03789741,0.030247858,0.008433001,-0.01646698,0.002905079,0.0093429675,0.061585728,-0.0015851415,0.032427885,-0.0018771093,-0.03488041,-0.022773484,0.0029172443,0.025148155,0.012710329,0.00043004414,0.04110906,-0.01974675,-0.021702936,0.015522951,-0.011367277,-0.00862278,-0.010939058,-0.017449938,0.022559375,-0.019464515,-0.0041946033,-0.023844032,0.000998773,0.02551798,-0.041731924,0.0022639665,0.039804935,-0.046481263,-0.038773317,-0.024914581,-0.032739315,0.03669061,-0.027230857,0.036826864,0.03147412,0.023474207,0.049751304,-0.010608161,0.025790483,0.006861242,0.00048965425,-0.016330728,0.010423249,-0.008189695,-0.024427967,-0.0012773589,-0.0002157824,0.015026607,0.028243013,-0.018306376,0.02779533,0.017751638,0.011561923,0.030987509,-0.0007700649,0.011318616,-0.022403657,0.014296687,0.040680837,0.011951213,0.015464558,-0.025868341,-0.0033892589,-0.001620421,-0.029586064,0.0032530073,0.005693371,0.0027153,0.00077067316,0.016836807,-0.020865962,0.013917129,-0.008486529,-0.040291548,0.00027569663,-0.022170084,-0.0046422873,0.028165154,-0.003700691,0.014715174,0.034452192,0.022617767,0.008223758,0.022598304,0.020106845,-0.028418193,0.01573706,-0.0058247563,0.012126394,-0.007347855,-0.018374503,0.026296562,0.012535148,-0.0052846163,-0.01758619,0.021410968,0.019289335,0.0011964595,-0.007381918,0.00479557,-0.0021544786,0.011902551,0.016320996,-0.005016979,0.020788103,-0.037313476,-0.02314331,0.013420784,0.019542374,0.038130987,0.021021677,-0.003965895,0.021878116,-0.0067736516,-0.0028101895,-0.017080113,0.0024598283,0.018510755,0.022228478,0.025459588,-0.029761245,0.0630261,0.00055321807,0.0031045903,0.002598513,-0.0009130075,0.016496178,-0.01948398,0.0018527786,-0.021372039,0.006982895,0.045235533,-0.032466814,-0.008155632,0.011542458]},{"id":"sum-of-two-integers","name":"Sum of Two Integers","description":"Given two integers `a` and `b`, return the sum of the two integers without using the `+` and `-` operators.\n\n**Example 1:**\n\n```java\nInput: a = 1, b = 1\n\nOutput: 2\n```\n\n**Example 2:**\n\n```java\nInput: a = 4, b = 7\n\nOutput: 11\n```\n\n**Constraints:**\n* `-1000 <= a, b <= 1000`\n","difficulty":"Medium","concepts":["Bit Operations"],"solutions":{"python":"class Solution:\n    def getSum(self, a: int, b: int) -> int:\n        def add(a, b):\n            if not a or not b:\n                return a or b\n            return add(a ^ b, (a & b) << 1)\n\n        if a * b < 0:  \n            if a > 0:\n                return self.getSum(b, a)\n            if add(~a, 1) == b: \n                return 0\n            if add(~a, 1) < b:  \n                return add(~add(add(~a, 1), add(~b, 1)), 1)  \n\n        return add(a, b)  \n","javascript":"class Solution {\n    /**\n     * @param {number} a\n     * @param {number} b\n     * @return {number}\n     */\n    getSum(a, b) {\n        return this.add(a, b);\n    }\n\n    /**\n     * @param {number} a\n     * @param {number} b\n     * @return {number}\n     */\n    add(a, b) {\n        if (a === 0 || b === 0) {\n            return a | b;\n        }\n        return this.add(a ^ b, (a & b) << 1);\n    }\n}\n","cpp":"class Solution {\npublic:\n    int getSum(int a, int b) {\n        return add(a, b);\n    }\n\nprivate:\n    int add(int a, int b) {\n        if (a == 0 || b == 0) {\n            return a | b;\n        }\n        return add(a ^ b, (a & b) << 1);\n    }\n};\n","java":"class Solution {\n    \n    public int getSum(int a, int b) {\n        return add(a, b);\n    }\n\n    private int add(int a, int b) {\n        if (a == 0 || b == 0) {\n            return a | b;\n        }\n        return add(a ^ b, (a & b) << 1);\n    }\n}\n","csharp":"public class Solution {\n    \n    public int GetSum(int a, int b) {\n        return Add(a, b);\n    }\n\n    private int Add(int a, int b) {\n        if (a == 0 || b == 0) {\n            return a | b;\n        }\n        return Add(a ^ b, (a & b) << 1);\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def getSum(self, a: int, b: int) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number} a\n     * @param {number} b\n     * @return {number}\n     */\n    getSum(a, b) {}\n}\n","cpp":"class Solution {\npublic:\n    int getSum(int a, int b) {\n        \n    }\n};\n","java":"class Solution {\n    public int getSum(int a, int b) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int GetSum(int a, int b) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/gVUrDV4tZfY","embedding":[0.011746512,-0.035830025,0.021236513,-0.0043654004,-0.030916313,0.010591895,-0.020772558,0.0042125056,0.03880356,0.01235809,0.00018189168,-0.030431269,-0.042515203,-0.015721768,0.020698747,0.0039383504,-0.0008606903,0.021616112,-0.015057468,0.020477312,-0.006896067,0.009537451,0.06440547,-0.010665706,0.046859514,-0.04635338,-0.038086537,0.015806124,0.013191101,-0.019085446,0.04424449,-0.022754913,-0.0064901058,-0.014519701,-0.061874803,0.026888335,-0.0070173284,0.0019309515,0.016480967,-0.011936312,-0.02889178,-0.01976029,-0.010022495,0.031865314,0.015563601,-0.009500545,0.004808267,0.008973323,0.021974623,0.04120769,0.005546378,-0.0032766864,0.023092335,-0.0014538154,-0.0364416,-0.03787565,-0.044371024,0.038887914,-0.03140136,0.012294823,0.01947559,-0.045762893,-0.025011424,-0.021099435,-0.018916735,-0.012853678,0.040912446,0.038318515,-0.009363467,-0.05107729,-0.012516256,0.058584936,0.013064568,0.02165829,-0.013011845,0.07039472,0.029587712,0.02986187,0.00860954,-0.009764156,0.0014709501,-0.041566204,0.07583565,0.035070825,0.02796387,0.0011645021,-0.04601596,0.015426523,-0.013391445,-0.046437737,-0.009247478,-0.044961516,0.020002812,0.034522515,0.032814313,0.01740888,0.016712945,0.045889426,0.0057203616,0.04926365,0.025728446,-0.012948578,0.05073987,-0.008013778,0.039288603,0.011272012,0.05398756,-0.012727145,-0.081614,0.01862149,0.0037063726,-0.007375839,0.0065164673,-0.054029737,-0.035851113,0.015226179,-0.022902535,-0.018832378,-0.017324524,-0.04690169,0.021521213,-0.033299357,0.010692067,-0.01919089,-0.027921692,-0.008019051,-0.009584901,-0.080433026,0.030389091,-0.02678289,0.028343469,-0.013317634,0.021457946,0.016586412,-0.009621806,-0.069129385,0.024357669,0.005145689,-0.018463323,0.01060244,-0.0019994904,0.023872623,-0.017714668,-0.011567256,-0.0164177,0.0031686057,-0.007180767,-0.028933957,-0.02545429,-0.024020245,0.00086596253,-0.023682823,0.003767003,0.0066377283,0.015331623,-0.05647605,0.0017319251,-0.013602334,0.014372079,0.01968648,0.057319604,-0.0143193565,-0.018210256,-0.024779446,0.00397262,0.03593547,-0.04046958,-0.03916207,-0.024252225,-0.045383293,0.026445469,0.0034902114,-0.024167867,-0.012474079,0.01921198,-0.041165512,-0.055421602,-0.0660504,-0.042262137,0.01131419,-0.025391024,-0.010354646,-0.016649678,0.007671084,0.029313557,0.020888546,0.0097694285,-0.026888335,0.022607291,-0.020677658,0.017187446,0.05128818,0.054662403,0.0013523251,0.0010808057,0.0046553724,0.019433413,-0.006679906,-0.02889178,0.011999578,-0.016618045,0.0056043724,0.052933116,0.0065164673,-0.00062673545,-0.04825138,0.028448913,0.0066640894,0.024969246,-0.014930935,0.013096201,-0.051625602,0.04008998,-0.030515624,0.011904678,0.02851218,0.014551334,-0.020255879,-0.0030710697,0.030684335,-0.018906191,0.019032724,-0.011482901,0.045552004,-0.0013292591,0.04103898,-0.008662262,0.018980002,0.009874873,0.030199291,0.008662262,-0.009047134,-0.029208113,0.030431269,0.02718358,0.0063583003,0.006152684,-0.0030420725,-0.0048451726,-0.018726934,-0.008830973,-0.011345823,0.018199712,-0.013749956,-0.016133001,0.013317634,-0.0028575447,0.017946646,-0.004220414,0.03171769,0.0047080945,0.002841728,0.014688412,-0.03992127,-0.052216094,-0.020361323,0.027774068,-0.010750062,0.0031606974,-0.03178096,-0.11177112,0.01463569,-0.06963552,-0.06065165,-0.02488489,-0.05491547,-0.020034445,0.04884187,0.033109557,0.047576535,0.017472146,0.0041887807,0.02602369,-0.009811606,-0.008641173,-0.09591227,0.023071246,0.015468701,0.022438578,-0.05934414,-0.010454818,0.026740713,0.028048225,0.013433623,0.020909635,-0.022375312,-0.025749534,0.028385647,0.03157007,-0.019085446,-0.026740713,0.016017012,-0.018442234,-0.019929001,-0.024484202,-0.032012936,-0.0222066,-0.03914098,0.034649048,0.001374732,-0.00520632,-0.018853467,-0.01359179,0.013127835,0.012126112,-0.033932023,0.010776423,0.03553478,0.011208745,0.02697269,-0.007813434,-0.015521423,-0.031295914,0.031253736,-0.021784823,-0.055337247,0.0015434432,-0.023050157,-0.05968156,0.001683157,0.026719624,0.004381217,0.031675514,0.01055499,0.026171314,0.025854979,-0.03570349,0.014466979,0.0075181895,-0.06119996,-0.01769358,0.017535413,-0.012389723,-0.0041176057,-0.032582335,0.0023698641,0.0482092,-0.0015737584,-0.00045176357,0.046522092,0.04198798,-0.0042309584,-0.010570806,-0.010760606,0.031612247,-0.009611262,0.07313627,0.021995712,0.070226006,0.00062706496,0.018484412,-0.006368845,0.016976556,-0.022248778,0.0032529612,-0.0106446175,-0.02661418,0.0132965455,-0.025201224,0.015247268,-0.05630734,-0.00444712,-0.02338758,-0.03361569,-0.0101543,-0.0015988015,0.04749218,0.0013286001,0.009189484,0.057994448,0.016164634,0.04314787,-0.037369512,-0.015806124,0.033320446,-0.0366314,0.01492039,0.010017223,-0.010101578,-0.02433658,-0.03589329,0.049094938,0.0042151418,-0.0022301502,0.038887914,0.013813223,0.019517768,0.022544025,-0.001019516,-0.00055753754,0.05968156,-0.02319778,0.035429336,0.0070964117,0.02298689,0.046479914,0.037812382,0.040701557,-0.0037063726,0.014192823,0.009859056,-0.012558434,0.020909635,-0.049558893,-0.014013568,-0.018125901,0.013876489,0.012221012,0.043190047,0.0041835085,0.013096201,-0.0032450529,-0.0009358195,-0.006126323,-0.0013042161,-0.036989912,0.009052406,0.055801205,0.02184809,0.016618045,-0.006374117,0.007391656,0.04998067,-0.0070436895,0.008794067,-0.015563601,-0.014994201,-0.008646445,-0.0047107306,-0.00006133078,-0.0014894028,0.025707357,-0.035661314,0.0117148785,-0.020719836,0.09405645,-0.017514324,0.056222983,-0.020129345,-0.0070700506,-0.062254403,-0.025159046,-0.0029814418,-0.008630629,-0.05778356,-0.0151945455,0.020055534,0.0444132,0.048715338,-0.0079926895,0.03755931,-0.039098803,0.05736178,0.034712315,-0.05567467,0.033468068,0.0038988085,0.04291589,-0.0071175005,0.017872835,0.017630313,0.039077714,-0.039415136,0.01767249,-0.022839269,-0.017429968,0.024484202,-0.022712735,-0.017556502,0.009679801,-0.0055780113,-0.005425117,0.022797091,0.0016383432,-0.033889845,-0.0003670785,-0.0021405225,0.079167694,-0.005425117,-0.0010036994,-0.049305826,-0.03762258,-0.010771151,-0.031085024,-0.018125901,-0.031612247,0.0036088363,-0.034859937,-0.015184001,-0.008330111,-0.03399529,-0.0070489617,0.008973323,-0.006896067,0.015595234,0.027014868,-0.008008506,-0.005662367,0.068749785,0.005074514,0.01311729,-0.031422447,-0.051583424,-0.037095357,0.030325824,-0.03175987,0.022776002,-0.030072758,-0.012769323,0.036884468,-0.005704545,-0.06959334,0.032034025,0.011999578,-0.013950301,0.017060911,-0.04563636,-0.008393378,0.02101508,-0.031000668,-0.020972902,-0.03631507,-0.00060004485,0.005804717,-0.015458156,-0.048462268,-0.02606587,-0.020350778,-0.044666268,-0.007075323,0.004932164,0.01911708,-0.002298689,0.046100315,-0.013633967,0.008931145,0.034902114,0.010238656,0.0060103335,0.008688623,-0.013243823,0.030916313,-0.012083934,0.0047634533,-0.0041545113,-0.007892517,0.023682823,-0.01150399,0.014720045,-0.014720045,0.03669467,-0.023682823,-0.009526907,-0.030895224,-0.005709817,-0.0444132,0.03268778,0.030241469,0.009721979,-0.012611156,-0.010454818,-0.038930092,0.0032872309,-0.02490598,0.0027125585,-0.005074514,0.008224667,-0.023999156,0.020171523,0.000033301498,-0.013760501,0.0073389336,-0.022944713,-0.034944292,0.01700819,0.009474184,0.013275457,-0.033341534,0.0054620225,-0.0069066114,0.004998067,-0.015858846,-0.04673298,-0.021057257,-0.017345613,0.006980423,0.009120945,0.008962778,0.04749218,-0.024167867,-0.020382412,0.031042846,0.014361534,0.039858002,0.010286106,0.002488489,-0.042852625,-0.013771045,-0.0071385894,0.008472461,0.0067168116,0.021152157,0.026297847,0.015953746,-0.02944009,0.0017042459,0.03192858,0.02564409,-0.013486345,0.025601912,0.0046501,-0.01691329,0.007881973,-0.0099381395,-0.031844225,0.010439001,-0.0021642474,0.012885312,0.01738779,0.0048135393,0.035998736,0.011187656,0.052933116,-0.006152684,0.02099399,0.021257602,-0.041270956,0.046522092,0.056897826,0.048546627,-0.01254789,0.012073389,-0.017082002,-0.0082352115,0.0035482058,0.032793224,-0.0025965697,-0.0035956558,-0.0011078258,-0.049474537,0.012041756,0.03213947,-0.0014590876,-0.061115604,-0.017250713,0.010033039,-0.026192402,0.029777514,0.0066430005,-0.05036027,-0.00879934,0.02623458,-0.0004194712,0.009173667,0.011272012,0.0073811114,0.011324734,-0.045678537,-0.012463534,0.0053934837,-0.029039402,-0.00027135471,-0.0066430005,0.03097958,0.021426313,0.0045841974,0.002350093,0.011883589,0.038466137,-0.036357246,-0.029292468,-0.010191206,-0.02661418,0.0051035113,-0.024420936,0.034649048,-0.00078292505,-0.010665706,-0.057277426,-0.0017187445,-0.0065481006,-0.008087589,-0.011778145,0.01805209,-0.017176902,-0.0044102143,-0.00555165,0.004929528,-0.010112123,-0.037327334,-0.013085657,-0.01805209,-0.0018597766,-0.0068802503,0.018168079,-0.02735229,0.019106535,0.024737269,-0.00026196355,-0.1121929,-0.013918667,-0.036040913,0.032919757,-0.009959228,-0.035450425,-0.04148185,-0.008372289,0.0334048,0.004381217,0.008667534,-0.021173246,0.016270079,-0.0026914696,0.03209729,-0.017967734,0.0062370393,0.018674212,0.033193912,0.006553373,-0.0120523,-0.015521423,-0.0007618362,-0.04219887,0.005493656,0.022101156,0.02412569,-0.008725529,0.032392535,0.046648625,0.012948578,-0.006795895,-0.019222524,-0.0023962252,0.00052227953,-0.01454079,-0.011862501,-0.034501426,-0.008377561,-0.012484623,-0.022269867,-0.032413624,0.01302239,0.0040833363,-0.01036519,0.032434713,0.010755334,-0.027921692,0.0051087835,-0.035808936,0.007792345,-0.027099224,0.0040859724,0.016480967,-0.037938915,0.001800464,0.011208745,-0.029524446,-0.0007460195,0.014182279,-0.019907912,-0.007628906,-0.018632034,-0.008145584,0.0025214404,-0.011514534,-0.02796387,-0.016744578,-0.0010873959,0.020572212,-0.012969667,-0.016691856,-0.008725529,0.0026110683,0.016712945,-0.006653545,0.014456434,-0.014108468,-0.02794278,0.0069593336,-0.01949668,0.020635478,0.027795156,-0.00473182,0.024357669,-0.0008389424,0.017946646,0.038550492,-0.005019156,-0.0107658785,-0.051709957,0.03268778,-0.010207023,-0.05225827,-0.025559735,0.058416225,0.027647534,-0.0083090225,-0.01634389,0.018442234,-0.011904678,-0.0018808654,0.016386067,0.015289445,0.0014024111,0.008883695,-0.009078767,0.010243928,0.02507469,-0.012927489,-0.0046553724,0.023830445,0.010739517,-0.00097074796,0.0052142283,0.0011493445,0.027984958,-0.014930935,0.015732313,0.016428245,0.021447401,0.0031791502,0.000674515,0.008683351,0.017493235,0.014909846,0.022860358,0.013887034,0.0075920005,0.02794278,0.048546627,-0.01492039,0.011999578,-0.014424801,0.036589224,0.06482725,0.044919338,0.040722646,0.023155602,-0.02156339,0.028828513,-0.010818601,-0.007881973,-0.027014868,0.016565323,0.019391235,0.012927489,-0.023703912,-0.012115567,0.03570349,-0.040005624,-0.032055113,-0.010265017,-0.0073389336,-0.010955678,0.0011150751,0.007771256,0.019074902,-0.008788795,-0.030093847,-0.0053381254,0.054114092,0.022312045,-0.0069962395,0.006305578,-0.0019467681,0.014762223,0.0041070613,0.0030631614,0.008920601,-0.03097958,0.034079645,0.006558645,0.0063899336,-0.0083090225,0.025728446,-0.0020443043,0.000053298874,0.0061895894,-0.010085762,-0.0021299778,0.071196094,0.008414467,-0.012600612,0.014477523,0.03612527,-0.060946893,0.0050402447,-0.006980423,-0.009990862,0.0020192612,-0.0060683284,-0.032266002,0.029334646,-0.0120312115,-0.006379389,-0.0091842115,0.01871639,0.0014129557,0.032392535,-0.023619557,-0.012147201,-0.009020773,-0.008451372,0.009690345,-0.02735229,-0.005045517,-0.012832589,-0.00013996103,-0.033678956,-0.02374609,-0.025559735,-0.0056201895,0.024758358,0.005230045,0.024589647,0.0061632283,-0.016565323,-0.0009120945,0.0182208,0.0136128785,-0.01748269,-0.021194335,-0.026086958,-0.016449334,0.0064848335,-0.014783312,-0.0145618785,0.00079544657,0.043991424,-0.018073179,0.023725001,-0.014087379,0.009231661,-0.044497557,-0.04732347,0.0005291993,-0.0030684336,-0.023598468,0.023577379,-0.0053829392,-0.06482725,-0.019770835,-0.008034867,-0.031696603,-0.02716249,-0.036779024,-0.0010676251,-0.022480758,-0.014119012,0.02967207,0.030747602,-0.029355735,0.007344206,-0.0028127308,-0.0061157783,-0.011904678,-0.001987628,-0.019897368,0.017661946,0.030557802,0.028765246,-0.042620648,-0.02061439,0.030874135,-0.01814699,0.017978279,0.033320446,0.030241469,0.025348846,-0.032244913,-0.011767601,-0.021521213,-0.031633336,0.00058192154,-0.037264068,-0.03933078,-0.0030078029,-0.002537257,0.020097712,0.0086253565,-0.006368845,0.0016238445,-0.040575024,0.013950301,-0.006368845,-0.014772767,0.009057678,0.018653123,-0.027774068,0.047239114,0.03667358,0.009210573,-0.00044451427,-0.015141823,-0.008013778,0.0012244737,-0.027584268,0.02118379,-0.03802327,0.00029079602,-0.028364558,-0.055843383,0.04276827,0.009658712,0.0054672947,-0.017915012,0.03553478,-0.026403291,-0.04428667,-0.0023843627,-0.0033715863,-0.016101368,-0.013633967,-0.030262558,0.0060577835,0.011841412,0.03460687,-0.02298689,-0.053650137,-0.04504587,0.002601842,0.014762223,-0.021036169,0.0028970863,-0.020414045,0.009200028,0.004694914,0.029461179,0.002415996,0.016491512,-0.004449756,0.019813012,0.025496468,-0.008135039,-0.024631824,0.03194967,0.008324839,-0.0047898144,0.021036169,-0.013560156,-0.01264279,0.0042625917,-0.018104812,0.026213491,-0.025686268,0.027310112,-0.03684229,-0.019465046,0.000639916,0.012695512,0.01976029,0.046437737,-0.045130227,-0.03287758,-0.00046758025,-0.0048135393,0.0024515835,0.007681628,-0.009342378,0.00044451427,0.00984324,-0.041524027,-0.015363256,0.005477839,0.017208535,-0.018990546,0.0009588855,-0.04981196,-0.045720715,-0.01050754,0.003223964,0.00038684934,-0.013475801,0.020150434,-0.014213912,-0.047028225,-0.032624513,-0.002560982,0.016523145,-0.009004956,0.013201646,0.006136867,-0.003126428,0.013739412,0.0114723565,-0.012748234,-0.024800535,-0.005143053,-0.025854979,0.0182208,0.017609224,0.022522936,-0.004310042,-0.0011038716,0.0073547503,-0.002534621,0.026276758,-0.020667113,-0.009948684,-0.012010123,0.007249306,0.021225968,0.025201224,-0.03574567,-0.011145478,-0.015574145,-0.028027136,0.009721979,0.022269867,-0.017714668,0.017904468,-0.013475801,-0.03114829,0.022501847,-0.028448913,-0.031675514,-0.020930724,0.02099399,-0.011134934,-0.03930969,0.045931604,-0.017799024,-0.015331623,0.023450846,-0.03804436,-0.05453587,-0.026867246,0.015553056,-0.010180661,0.03138027,-0.029292468,-0.041966893,-0.039098803,-0.0260026,0.007528734,0.027689712,0.0026229308,-0.012431901,-0.023682823,0.0086991675,-0.019507224,-0.04542547,-0.012611156,-0.030494535,-0.005100875,-0.03213947,0.01748269,0.042430848,-0.0021589752,0.025981512,0.013908123,-0.015848301,0.016575867,0.0139292125,-0.03800218,0.004903167,-0.021679379,-0.0016633862,-0.022354223,-0.003013075,-0.045931604,-0.0055411058,0.03705318,0.034754492,0.026888335,0.03916207,-0.0010696022,-0.015289445,-0.02528558,0.0010623528,0.008145584,-0.01567959,0.0022907807,-0.010786967,0.046311203,0.0060894173,0.007180767,0.0000071205895,0.027014868,0.011071667,0.007903062,-0.020846369,-0.01959158,-0.034100734,-0.017588135,0.000069527436,0.019085446,-0.009500545,0.024927069,0.005852167,0.023450846,0.01577449,-0.0032318723,-0.005572739,0.012273734,-0.00018172692,-0.006084145,-0.021573935,-0.0044392115,0.01169379,0.023725001,-0.0065481006,-0.01968648,0.040511757,-0.038107626,-0.016449334,0.020477312,-0.0014511793,0.002723103,-0.014888757,0.018262979,-0.0126638785,0.00084223755,-0.045003694,-0.019559946,-0.042662825,-0.022480758,0.01444589,0.00048899866,-0.00785034,0.012579523,0.020392956,0.0041307863,-0.007950512,-0.00602615,0.008340656,0.006753717,0.049938492,-0.00032951392,-0.0169871,-0.0022446488,-0.025749534,-0.052890938,-0.026761802,0.0051351446,-0.023261046,-0.029123757,0.03152789,0.021078346,-0.018347334,0.018990546,0.00031979324,-0.010655162,0.0036931918,0.00915785,-0.003977892,-0.024378758,0.032371446,0.0030974308,0.0065902784,0.012590067,-0.006948789,0.005730906,-0.00856209,0.02794278,0.041545115,0.0008804612,0.018125901,0.0107184285,-0.007581456,-0.04428667,-0.03918316,0.010945134,0.029608801,0.03572458,0.0062950337,-0.013707778,0.029777514,-0.027246846,0.0005614917,0.016997645,0.0025636181,0.026761802,-0.012568979,0.023493024,0.009732523,-0.0033715863,0.026867246,0.035471514,0.021289235,-0.0070700506,0.039984535,0.065249026,-0.005000703,0.009368739,-0.004499842,0.02184809,-0.026192402,0.002348775,0.0154370675,-0.016386067,-0.035977647,-0.0021141612,0.020572212,0.023767179,-0.002936628,0.009405645,0.0044919336,-0.059386317,-0.030747602,-0.035977647,-0.012864223,0.0017859654,-0.009384556,-0.016860567,0.009758884,0.010660434,0.045594182,0.0120312115,0.0042889533,-0.010924045,0.010228111,-0.02547538,0.037348423,-0.0030236195,-0.031844225,-0.006585006,0.0038170891,-0.009126217,-0.009806334,-0.020266423,-0.0045657447,-0.059765916,0.015669046,0.01140909,-0.020656569,0.03441707,-0.021784823,0.006084145,-0.02602369,0.026867246,-0.008598995,-0.034712315,-0.0028127308,0.0045604724,0.004452392,-0.0033004114,0.031232646,-0.0020482584,0.034944292,-0.022965802,0.0032819586,-0.006780078,0.0071175005,-0.0062106783,-0.017134724,0.041376404,0.021932445,-0.048124846,-0.040343046,0.024758358,0.0035692947,-0.018073179,-0.013960846,0.02165829,-0.016618045,0.024231134,0.005662367,-0.011282557,-0.033004113,-0.0053381254,0.009822151,0.017640857,-0.0042283223,0.0089416895,0.02452638,0.028448913,0.005498928,0.02023479,-0.0030868864,0.020878002,-0.03116938,-0.028765246,-0.014709501,-0.018031001,-0.03076869,-0.011662156,0.047576535,0.0029972584,0.019043269,0.052595694,0.015816668,-0.025601912,-0.01245299,-0.01501529,0.0012356772,-0.012484623,0.007908334,0.020171523,-0.02471618,-0.02699378,-0.028828513,-0.032266002,-0.00951109,0.023450846,-0.022691647,0.0014037293,0.0023382306,0.020087168,-0.0045657447,0.0053644865,0.0482092,0.021637201,-0.0013879125,0.008841517,0.023682823,-0.00042770905,-0.0039462587,0.04597378,0.003102703,0.005657095,0.005999789,0.0019757655,0.00014292666,-0.010101578,0.01700819,0.0083564725,-0.017535413,-0.001445907,-0.016111912,-0.030157113,0.0052458616,-0.054999825,0.020772558,0.001681839,-0.04103898,-0.0151945455,0.046817336,-0.0038539947,-0.031865314,-0.018094268,-0.025791712,0.052426983,0.0016225264,0.03323609,0.028765246,0.025517557,0.041144423,-0.011915223,0.004054339,0.0028786336,-0.021552846,-0.022459669,0.003814453,0.0054145725,-0.00849355,0.0072862115,-0.020023901,-0.021099435,0.022438578,-0.0023092334,0.01055499,-0.002390953,-0.011672701,0.04981196,-0.02317669,0.027521001,-0.028828513,-0.008883695,0.003337317,0.042093426,-0.027584268,-0.0117886895,0.018189168,-0.024378758,-0.025032513,0.013655056,0.0034190363,0.002699378,0.017704124,0.020002812,-0.02300798,-0.009669256,0.0054409336,-0.029904047,0.022185512,-0.0015249904,-0.008525183,-0.0034269446,0.045214582,-0.04508805,0.014994201,0.0044655725,0.035640225,0.007997962,0.048124846,-0.010776423,0.009663984,0.019011635,0.0011565938,-0.027626446,-0.0079926895,0.054788936,0.00884679,0.0068117115,0.045720715,0.033489157,0.016828934,-0.010275561,0.022354223,-0.015848301,-0.058922358,0.022902535,0.0030262556,-0.028596535,0.051541246,-0.028933957,-0.049179293,-0.0024014974,0.012199923,-0.00060993026,0.018589856,0.008177217,-0.03097958,0.003983164,0.015574145,-0.054240625,0.040364135,0.03194967,-0.011113845,0.030136025,0.011725423,0.016744578,-0.024399847,0.030452358,-0.014614601,0.0042994977,0.005899617,-0.02642438,0.0007941285,-0.020762013,0.0056412783,0.02089909,-0.008688623,0.011873045,0.023429757]},{"id":"top-k-elements-in-list","name":"Top K Elements in List","description":"Given an integer array `nums` and an integer `k`, return the `k` most frequent elements within the array.\n\nThe test cases are generated such that the answer is always **unique**.\n\nYou may return the output in **any order**.\n\n**Example 1:**\n\n```java\nInput: nums = [1,2,2,3,3,3], k = 2\n\nOutput: [2,3]\n```\n\n**Example 2:**\n\n```java\nInput: nums = [7,7], k = 1\n\nOutput: [7]\n```\n\n**Constraints:**\n* `1 <= nums.length <= 10^4`.\n* `-1000 <= nums[i] <= 1000`\n* `1 <= k <= number of distinct elements in nums`.\n","difficulty":"Medium","concepts":["Hash Usage","Bucket Sort"],"solutions":{"python":"class Solution:\n    def topKFrequent(self, nums: List[int], k: int) -> List[int]:\n        count = {}\n        freq = [[] for i in range(len(nums) + 1)]\n\n        for n in nums:\n            count[n] = 1 + count.get(n, 0)\n        for n, c in count.items():\n            freq[c].append(n)\n\n        res = []\n        for i in range(len(freq) - 1, 0, -1):\n            for n in freq[i]:\n                res.append(n)\n                if len(res) == k:\n                    return res\n","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @param {number} k\n     * @return {number[]}\n     */\n    topKFrequent(nums, k) {\n        const count = {};\n        const freq = Array.from({ length: nums.length + 1 }, () => []);\n\n        for (const n of nums) {\n            count[n] = (count[n] || 0) + 1;\n        }\n        for (const n in count) {\n            freq[count[n]].push(parseInt(n));\n        }\n\n        const res = [];\n        for (let i = freq.length - 1; i > 0; i--) {\n            for (const n of freq[i]) {\n                res.push(n);\n                if (res.length === k) {\n                    return res;\n                }\n            }\n        }\n    }\n}\n","cpp":"class Solution {\npublic:\n    vector<int> topKFrequent(vector<int>& nums, int k) {\n        unordered_map<int, int> count;\n        vector<vector<int>> freq(nums.size() + 1);\n\n        for (int n : nums) {\n            count[n] = 1 + count[n];\n        }\n        for (const auto& entry : count) {\n            freq[entry.second].push_back(entry.first);\n        }\n\n        vector<int> res;\n        for (int i = freq.size() - 1; i > 0; --i) {\n            for (int n : freq[i]) {\n                res.push_back(n);\n                if (res.size() == k) {\n                    return res;\n                }\n            }\n        }\n\n        return res;\n    }\n};\n","java":"class Solution {\n    public int[] topKFrequent(int[] nums, int k) {\n        Map<Integer, Integer> count = new HashMap<>();\n        List<Integer>[] freq = new List[nums.length + 1];\n\n        for (int i = 0; i < freq.length; i++) {\n            freq[i] = new ArrayList<>();\n        }\n\n        for (int n : nums) {\n            count.put(n, count.getOrDefault(n, 0) + 1);\n        }\n\n        for (Map.Entry<Integer, Integer> entry : count.entrySet()) {\n            freq[entry.getValue()].add(entry.getKey());\n        }\n\n        int[] res = new int[k];\n        int index = 0;\n        for (int i = freq.length - 1; i > 0 && index < k; i--) {\n            for (int n : freq[i]) {\n                res[index++] = n;\n                if (index == k) {\n                    return res;\n                }\n            }\n        }\n        return res;\n    }\n}\n","csharp":"public class Solution {\n    public int[] TopKFrequent(int[] nums, int k) {\n        Dictionary<int, int> count = new Dictionary<int, int>();\n        List<int>[] freq = new List<int>[nums.Length + 1];\n\n        for (int i = 0; i < freq.Length; i++) {\n            freq[i] = new List<int>();\n        }\n\n        foreach (int n in nums) {\n            if (count.ContainsKey(n)) {\n                count[n]++;\n            } else {\n                count[n] = 1;\n            }\n        }\n\n        foreach (var entry in count){\n            freq[entry.Value].Add(entry.Key);\n        }\n\n        int[] res = new int[k];\n        int index = 0;\n        for (int i = freq.Length - 1; i > 0 && index < k; i--) {\n            foreach (int n in freq[i]) {\n                res[index++] = n;\n                if (index == k) {\n                    return res;\n                }\n            }\n        }\n        return res;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def topKFrequent(self, nums: List[int], k: int) -> List[int]:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @param {number} k\n     * @return {number[]}\n     */\n    topKFrequent(nums, k) {}\n}\n","cpp":"class Solution {\npublic:\n    vector<int> topKFrequent(vector<int>& nums, int k) {\n        \n    }\n};\n","java":"class Solution {\n    public int[] topKFrequent(int[] nums, int k) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int[] TopKFrequent(int[] nums, int k) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/YPTqKIgVk-k","embedding":[-0.027504984,0.010942542,0.009097285,-0.031924628,0.032687407,0.024184644,-0.062233955,0.031543236,-0.027594725,0.07044507,0.0019307893,-0.018183352,-0.006618247,0.0050394023,0.081707306,0.023332125,-0.007936288,0.018587178,-0.004823468,0.030197153,0.0073361583,0.019148046,0.038116615,0.013191625,0.04184078,-0.008441069,0.01210354,0.027325507,0.0027903202,-0.026764639,0.042760603,-0.013662754,-0.016769964,0.02671977,-0.023601342,-0.018811526,0.007644636,0.01244006,-0.020987695,-0.023982732,-0.020303436,-0.027684463,-0.01597353,-0.035940446,0.020180045,0.012933625,0.031386193,-0.004355143,0.027437681,0.00039821654,-0.006612638,0.038879395,-0.007986765,-0.0042289477,0.025239076,-0.008530808,-0.01746544,0.013012147,0.024655774,0.01525562,0.027751766,-0.022546908,0.0319695,0.03241819,-0.034504622,0.017712222,0.009142155,-0.0073361583,-0.025037164,-0.018418917,-0.04538547,0.017140137,-0.0032979061,-0.0071398546,0.01099302,0.0023584515,-0.005558206,0.0036933182,0.026809508,0.006012509,0.03941783,-0.0077231573,0.036456443,-0.0011652041,0.00954598,-0.036276966,-0.014156317,0.014044144,-0.047830854,-0.067483686,-0.018564744,0.013808579,-0.021312999,0.03459436,0.032709844,0.03979922,0.07448332,0.0024762338,0.009383328,0.055907357,0.009955414,0.013449623,-0.0014863012,-0.0065004644,0.028626721,0.06681064,-0.047875725,-0.018295527,0.004587903,-0.021974823,0.005471271,0.0021635497,-0.0389467,-0.0009646936,0.007504419,0.004248578,-0.048324417,0.000443086,0.034571927,-0.011621193,-0.004554251,-0.0013292581,-0.014526491,0.0054768794,-0.056939356,0.008239157,0.0074595492,-0.00941698,0.04448808,-0.03250793,0.02023613,-0.052945975,-0.007005246,0.022300126,-0.039350525,-0.0368154,-0.029165156,-0.00020401587,-0.00015783186,0.04018061,0.009231893,-0.008743938,-0.022670299,0.026809508,0.061291695,-0.010477021,-0.03502062,0.021548564,-0.027415246,-0.0042597954,0.016893355,-0.01598475,0.008743938,0.06272752,-0.011755801,-0.005297402,0.0013194429,-0.0070837676,0.0131355375,0.019563088,0.007465158,-0.025710206,0.0076670707,0.018261874,0.014279709,-0.023175081,-0.018923698,-0.026158901,-0.012832669,-0.010112457,0.026158901,-0.056356054,0.0027931244,0.024476295,0.042558692,-0.0013881492,-0.05689449,-0.035222534,-0.057208575,-0.04563225,-0.033338018,-0.014874229,-0.00720155,-0.036411576,0.010505064,0.015737966,0.038767222,-0.06353517,-0.02122326,0.014133883,0.028738895,-0.0066743335,0.02044926,0.023354558,-0.010505064,0.008384982,0.02535125,0.0046804463,-0.063580036,-0.010998629,-0.040562,0.007885809,-0.0013488884,-0.011486584,0.023870558,-0.057298314,0.0063041607,0.026607595,0.033136103,-0.06963742,0.026921682,0.017902918,0.03652375,0.01376371,-0.013606667,-0.0025239077,0.018093614,0.008743938,-0.025889684,0.041078,0.017588831,0.004545838,-0.01989961,0.018183352,0.051151194,0.01896857,0.003485797,0.019507002,0.020864304,0.06322108,-0.0015872575,-0.010835977,0.03149837,-0.031588107,-0.0067808987,-0.044331037,-0.039462697,-0.003239015,-0.0073866365,0.009658153,0.024162209,0.0017569201,-0.011357585,0.05837518,-0.011811888,-0.013483276,-0.061112218,0.045609817,-0.025844814,0.012630756,0.019450916,-0.0081830695,-0.048324417,-0.04495921,0.0031072109,0.018564744,0.006494856,-0.01350571,0.0066911597,0.005246924,-0.03448219,0.008239157,-0.031341325,-0.04841416,-0.01977622,-0.034751404,-0.012765364,0.002682353,0.021021347,-0.0036708836,-0.041594,-0.03587314,0.03194706,-0.011699714,-0.01857596,-0.017745875,0.013875883,-0.05065763,-0.0005857569,-0.13415971,-0.017667353,-0.00045956153,0.045475207,-0.036456443,0.01896857,-0.024094906,0.011811888,0.021548564,0.0030875804,-0.04666425,-0.038901832,-0.030825326,-0.008794416,0.009641327,-0.03414567,-0.009024372,-0.046798855,0.006651899,0.019181699,-0.047157813,0.016646573,-0.0448246,-0.02757229,0.013146754,-0.061291695,-0.015794054,0.063939,-0.0074315057,-0.029389502,0.03800444,-0.016713878,0.015861357,-0.0059732483,0.028581852,-0.012686842,-0.05308058,0.02918759,0.008811242,0.04206513,-0.015446315,-0.007930678,-0.041997824,0.035918012,0.05743292,0.0056703794,0.020572651,0.012350322,0.009635719,0.017431788,-0.033338018,0.0032782757,-0.008317678,-0.012574669,0.031677846,-0.09234137,0.020146392,0.033988625,-0.02539612,-0.014470404,0.031677846,0.057881616,0.028469678,0.030354196,-0.031767584,0.010039544,0.047920592,0.0050394023,0.031902194,0.00074875925,0.0031801236,0.027796637,0.019832306,0.03439245,0.028626721,0.004055078,-0.028963244,-0.019024655,0.0072800713,-0.017375702,0.0012240952,-0.02488012,0.020718478,0.029838197,-0.04529573,0.0167924,-0.022344995,-0.030286891,-0.07816262,-0.02449873,0.061875,0.0114473235,0.027684463,0.0102302395,-0.04711294,-0.03336045,-0.0058610747,-0.017790744,0.0016924203,0.019675262,0.0015171489,-0.010549934,-0.03549175,-0.015737966,-0.03573853,0.066676036,0.046215553,-0.020135175,-0.021122303,-0.068605416,-0.010931324,-0.024700643,0.0058274223,0.07641271,-0.016971877,0.04639503,-0.014414317,0.025956988,0.070624545,-0.024229513,0.02867159,0.0058610747,0.016052052,0.011077151,0.037757657,-0.008828068,-0.027549854,-0.013292581,0.047696248,0.046036076,-0.037039746,0.018643266,0.008446678,0.0004725316,-0.04307469,0.013045798,0.041392084,-0.022423517,0.010544325,-0.042087562,-0.008614938,0.008547634,0.00018789091,0.014930316,-0.024723077,0.012417626,0.005732075,0.022670299,-0.05263189,-0.001623714,-0.03149837,-0.020819433,-0.003553101,-0.011935279,0.01828431,-0.018710569,0.0052216845,0.015906228,0.080675304,-0.009826414,-0.050074328,-0.015098576,-0.05079224,-0.0013608069,0.004618751,-0.010510674,-0.009097285,-0.013191625,0.026271075,0.05918283,0.015244402,0.038498007,-0.028312635,0.011144455,0.0067640725,-0.021828998,-0.03652375,0.05321519,0.023332125,0.008250373,-0.023803255,-0.023242386,0.02799855,-0.029950371,-0.047741115,0.01580527,-0.034796275,-0.01546875,0.0049608806,0.067483686,0.019563088,0.039709482,-0.006881855,-0.017241094,0.07291289,-0.004010209,-0.019372394,0.05137554,0.029344633,0.018475004,0.046170685,-0.032440625,-0.03576097,-0.04666425,0.016119357,0.0064443774,0.0048262724,0.0592277,0.044084255,0.002542136,-0.010735021,-0.06259291,0.0019476154,-0.0073698102,-0.009198241,0.009983457,0.04078635,0.015872575,-0.008536417,-0.008413025,-0.04334391,-0.0028604288,-0.056445792,0.028447244,0.02258056,0.013449623,0.04439834,-0.013808579,-0.025530728,-0.020740913,0.08448921,0.0036905138,0.0031801236,0.019821089,0.01435823,0.00097030227,0.029456807,0.00023942068,-0.038318526,-0.028222896,-0.0017751484,-0.026652465,0.03481871,-0.007986765,0.03383158,-0.00792507,-0.024700643,-0.032822017,-0.04325417,-0.024992295,-0.0040803174,0.01696066,0.002779103,0.0043270993,0.035110362,-0.014100231,0.00185367,0.049491026,-0.0041560344,0.00076558534,-0.022546908,0.01359545,0.021054998,-0.010286326,-0.020841869,-0.005378728,-0.0034942098,0.04341121,0.0038727962,-0.029456807,-0.016253965,-0.0130794505,-0.027347941,0.0033007103,-0.02539612,-0.009624502,-0.023578906,-0.005552597,0.03899157,0.024364121,-0.005126337,-0.011408063,-0.008452286,0.0033652103,0.017308397,-0.02885107,-0.034370013,0.015592141,0.029793328,-0.0062312474,-0.0017513115,0.0038531658,0.0039429045,0.025665337,-0.032709844,0.0336521,-0.02262543,-0.01977622,0.02539612,-0.0320368,0.043837473,-0.017308397,0.012888755,-0.018329179,-0.009736675,-0.021671955,-0.024745513,-0.0064275516,0.04000113,0.0075212447,-0.03540201,0.05689449,0.0069772024,0.019237785,0.00933285,-0.009473067,-0.011329541,-0.040719043,-0.012238148,0.03573853,0.015311707,-0.008665416,0.037869833,-0.01333745,-0.029815763,-0.018037526,0.010813543,0.0069042896,0.03212654,-0.0045149904,0.0421773,-0.02058387,-0.037264094,-0.03643401,-0.0060573784,0.006792116,-0.02458847,-0.013617884,-0.001099302,-0.006096639,0.019237785,0.030152284,-0.014167535,-0.0018396482,-0.005019772,0.0075156363,-0.0015886597,0.0051712063,0.02373595,-0.022995602,-0.024386557,-0.029591415,-0.012294235,-0.014133883,-0.02096526,-0.04009087,0.034796275,-0.0022687125,-0.016713878,0.017443007,0.0133150155,0.0655543,0.011957713,-0.0053927493,-0.01094815,0.019271437,-0.005732075,-0.019192915,-0.017902918,0.017095268,-0.009624502,0.022513257,-0.0062705083,-0.007151072,-0.013617884,0.0065509425,0.0039008395,-0.010729412,-0.03033176,-0.015233185,0.005849857,-0.0016517574,0.010112457,0.041863214,0.001501725,0.009725458,-0.042558692,0.02918759,0.014481622,0.062458303,0.023825688,-0.006354639,0.04543034,0.0030987978,-0.038789656,-0.006494856,0.012630756,0.021447606,-0.0022743212,-0.035334706,-0.009259936,-0.011811888,0.0076558534,-0.04415156,0.04193052,-0.00059662375,-0.014717186,0.028581852,-0.03495332,-0.016669009,0.025149338,-0.0009569817,-0.00082027,-0.02885107,-0.0017190615,0.011430497,-0.009523545,-0.0125298,0.020516565,-0.0379147,-0.020146392,0.00203455,0.01606327,0.008979503,0.016590487,-0.027078725,-0.015715532,0.033338018,0.009231893,0.01994448,0.0034493406,0.036478877,0.023713514,-0.021806562,0.0029024938,-0.041952953,-0.0005387842,-0.0010642477,-0.0076558534,0.006012509,-0.028626721,-0.009590849,0.04457782,-0.015311707,-0.009299197,0.006393899,0.01819457,0.0352001,0.0038026876,0.023982732,-0.0074932016,0.020303436,-0.004972098,0.0035783402,-0.0054909014,-0.01926022,-0.044375904,-0.03515523,0.02155978,-0.045228425,-0.028918372,-0.027370377,0.016568052,0.012832669,-0.0074932016,0.017757094,0.0028856678,-0.0116548445,0.019843522,-0.081617564,0.0027258203,-0.022961952,0.0057489006,0.027549854,0.03932809,0.062009607,0.011363193,0.004456099,0.019417264,-0.010583586,0.03230602,0.0054488364,0.046125814,-0.008951459,-0.007992375,0.023466732,0.008581286,0.013393537,0.035693664,-0.017364485,0.035805836,0.033854015,-0.03643401,0.01094815,0.008727112,0.02274882,-0.018430134,-0.065868385,0.012170844,-0.029299764,0.027594725,-0.033988625,-0.008979503,0.010157326,-0.006292943,0.0023963102,-0.020023001,0.0106452815,0.014369448,0.008884155,-0.008900981,0.00033213923,0.010095631,-0.034235407,-0.0021719628,0.0038419482,0.026114032,-0.011155672,-0.017588831,-0.013157972,-0.024453862,0.03089263,0.041661303,0.0118343225,-0.036075052,0.011172498,-0.0032922972,0.030556109,0.005291793,0.015547271,0.011879192,0.018721785,0.043613125,0.014044144,-0.0136739705,0.031632975,-0.016893355,-0.026966551,-0.0120698875,0.006388291,-0.015289272,0.02539612,0.017689789,-0.016511966,-0.002535125,-0.0029641893,-0.008676634,0.00090930786,0.02198604,0.0017022355,0.03051124,0.034908447,0.006096639,-0.004265404,0.0341681,-0.008592503,0.038453136,-0.00027219643,0.00016624489,-0.0224123,-0.018542308,-0.04136965,0.035446882,0.0035811446,-0.046709117,-0.027729332,0.02918759,0.011273454,-0.03284445,0.0043859906,-0.025799945,-0.018475004,-0.018923698,0.03288932,-0.024229513,-0.0002529166,0.02449873,0.0059788567,-0.0010095631,0.0016293227,0.0066911597,0.006276117,-0.005816205,-0.0116548445,-0.02219917,-0.03690514,0.023982732,-0.040449828,0.0070781587,-0.015704315,-0.04435347,0.013326232,0.040965825,0.0030651456,-0.0240276,0.016265184,-0.015838923,0.0034829925,-0.02061752,0.0008819655,-0.016231531,0.040674176,0.019282654,-0.030780457,0.045318164,-0.011323933,-0.036411576,0.03383158,0.028447244,-0.023444299,-0.024431426,0.011116412,-0.002232256,0.0034521448,-0.024050036,0.02228891,-0.006915507,0.0069603766,-0.016422225,0.042558692,-0.02160465,-0.01802631,-0.018991003,0.009405763,0.019450916,-0.01461623,0.02790881,-0.013045798,0.024229513,-0.013707623,0.010718195,0.017061615,-0.0016138988,0.0050954893,0.020213695,0.05146528,-0.0001294379,-0.0010726608,-0.005546988,0.032193843,0.027437681,0.013000929,-0.018441351,0.013045798,-0.026630031,0.04742703,0.027976114,0.014167535,0.016332487,0.026831944,0.018250657,0.028267765,0.000771194,-0.008076505,-0.033764277,-0.0432093,-0.003421297,0.022165518,0.010533108,0.016747529,0.026652465,0.0069940286,0.03502062,-0.014907882,-0.016074488,0.026360814,0.0013818394,-0.0052216845,-0.020819433,-0.01286632,0.051106326,0.051958848,-0.052811366,-0.03033176,-0.02701142,-0.010751846,-0.00038419483,0.052183192,0.02573264,0.01700553,0.02624864,-0.010819151,-0.007094985,0.008424243,-0.0112678455,-0.00021610959,0.011385628,0.034998186,-0.002403321,-0.003241819,-0.028065853,0.047830854,0.017970223,-0.0083625475,0.021077434,-0.032373324,-0.023578906,0.007953114,-0.022232823,0.005210467,0.0027103964,-0.013214059,0.015648227,-0.01598475,-0.0051151197,0.0085139815,0.01729718,-0.013000929,0.023197515,0.024094906,0.024341688,0.011150063,0.020797,-0.019742567,-0.014167535,0.013214059,-0.006494856,-0.006741638,0.021279346,-0.0033175363,-0.0004939147,-0.0061975955,-0.03780253,0.024453862,-0.00034528458,-0.018396482,-0.045183554,0.051330674,-0.046170685,-0.016859703,0.0010193783,-0.060439177,-0.015670663,-0.029479241,-0.00988811,0.036254533,-0.0122718,0.026114032,-0.007397854,0.015266837,-0.014930316,-0.010078805,0.023152646,-0.023713514,-0.0011385628,-0.031094542,-0.026001858,0.019978132,0.025328815,-0.006292943,0.010718195,0.009259936,-0.013303798,-0.0035671229,-0.0040466655,-0.025171772,0.0046636206,-0.0043270993,-0.025979424,0.008743938,0.030107414,-0.003724166,-0.0045262077,-0.013180407,-0.0011315519,0.0006060884,-0.016803617,-0.05608684,-0.0002075213,-0.04724755,0.027213333,0.003592362,-0.0008651395,0.00057068357,-0.005471271,0.018867612,0.01350571,0.011823106,0.023960296,0.0032137758,-0.0076109837,-0.0021018542,-0.012641973,-0.0043747732,0.007852158,-0.030915065,-0.010045152,-0.023937862,-0.026226206,-0.006736029,-0.019271437,0.0040691,-0.029052982,-0.032395758,-0.011924062,0.0023191907,-0.009271154,-0.0118343225,0.018676916,0.03804931,0.00029130102,-0.008255983,-0.012383973,-0.023848124,-0.013292581,0.01112202,0.049670503,-0.0063322037,-0.013113103,0.0069828113,0.010791107,0.023354558,0.054426666,0.009360893,0.0033427754,-0.0008910796,-0.0018172135,-0.02885107,-0.025598032,-0.0022154301,0.029210025,0.0054460317,-0.019697698,-0.0018368439,-0.027123595,-0.009865674,-0.026001858,0.008143809,0.029344633,-0.0058947266,-0.006494856,0.01781318,0.020718478,-0.019349959,0.014705969,-0.037084617,-0.033988625,-0.0013166385,-0.011991366,-0.02006787,-0.011234193,-0.004273817,-0.011666062,0.0049664895,0.009456241,-0.037982006,-0.018071178,0.0077904616,0.0144031,-0.0063322037,0.012832669,-0.0042177304,-0.04666425,-0.031722713,0.0016699856,0.0050814673,0.047202684,-0.010740629,-0.0131355375,0.009484285,0.008536417,-0.028783765,-0.050478153,-0.01977622,-0.0008931829,0.019394828,0.012978494,-0.008115766,0.046125814,0.009029981,-0.017319616,-0.011245411,-0.017880484,0.036546182,0.025373684,-0.009344067,0.03746601,-0.014167535,0.00030952922,-0.00997224,0.025485858,0.019966913,-0.012675625,0.023825688,0.005687205,-0.0116548445,-0.0056058792,-0.012675625,0.014223622,-0.013573014,-0.0076895053,-0.006573377,-0.01065089,-0.0050478154,-0.031790018,0.035671227,-0.022558127,0.0042597954,0.018273091,0.0027342334,-0.011924062,0.017869266,0.0065341163,-0.008620547,-0.0081382,-0.010819151,-0.022513257,0.0025856032,-0.025755076,0.038789656,0.025373684,0.026630031,-0.017779527,-0.019237785,-0.009276763,0.008676634,-0.014795708,0.0088056335,-0.02407247,-0.032261148,-0.012383973,0.002995037,-0.02177291,-0.042042695,0.031184282,-0.016343703,0.0047617727,0.00020191261,-0.018015092,-0.024835251,-0.0031240368,0.014313361,0.010123674,-0.026405683,-0.06577864,-0.0076838965,0.0035082316,-0.027168464,0.011789453,0.008334504,-0.032530367,0.028155591,0.07273341,0.027258202,0.014773273,0.0013411765,-0.0047365334,0.003519449,0.027976114,0.027078725,-0.01291119,0.00464399,0.0035699273,-0.007717549,-0.007897027,0.03905887,-0.011497801,0.0030118632,-0.01077989,0.04917694,-0.024341688,-0.014167535,-0.009747893,-0.005067446,-0.004380382,0.025261512,-0.017577615,-0.025642902,-0.0019363981,0.046036076,-0.004543034,0.0028660374,-0.030623414,0.01461623,-0.0120138,0.02885107,-0.0060069,-0.006545334,0.005075859,0.0062649,-0.0142011875,-0.020359522,0.00066217524,0.018205788,-0.016523182,0.038542874,-0.026988987,0.007930678,0.006119074,-0.009153372,-0.030578544,0.020516565,-0.00033687157,0.030309327,0.0016181052,0.009377719,0.01614179,0.00092403067,0.026091596,-0.006758464,-0.01670266,0.017656136,0.06160578,0.032956626,-0.027751766,0.016994312,0.014963968,-0.015939878,-0.01103789,0.027594725,-0.018138483,-0.01137441,0.005356293,0.0106172385,0.019417264,0.030825326,0.013988057,0.009097285,0.008076505,0.014010492,0.030264458,0.015558489,0.0052048583,0.015737966,-0.004719707,-0.013113103,0.023376994,0.027347941,0.034796275,0.016310053,0.03861018,-0.0083962,0.0013145353,0.011116412,-0.018385265,0.016669009,-0.01350571,0.02006787,0.0077455924,0.034437317,-0.020000566,-0.027370377,-0.010835977,-0.013920753,0.0030483196,0.010415326,-0.0066238553,0.025037164,-0.01035363,0.033338018,-0.020550217,-0.003051124,0.010521891,0.021324215,-0.05577275,-0.010600412,0.0042149257,0.015749184,0.0126644075,0.027796637,0.052003715,-0.020639956,0.0100227175,-0.056400925,-0.02210943,0.01269806,0.003864383,0.041773476,0.008070895,-0.011666062,-0.040203046,-0.011800671,0.0104377605,-0.0058891177,0.037735224,0.019888392,-0.021660736,-0.0027089943,0.04572199,-0.017959006,-0.009024372,0.01670266,-0.011436106,-0.014178752,-0.004329904,0.026562726,-0.035110362,0.033472624,-0.00017851389,0.016040836,-0.025710206,-0.0061527262,-0.0042121215,-0.04401695,-0.0039905785,-0.02075213,-0.028761331,-0.04150426,0.034841143,-0.009456241,0.0012654592,0.035469316,0.015053707,-0.014795708,-0.015917445,0.020740913,0.024364121,0.01359545,-0.00052055594,0.003264254,0.003404471,-0.0044897515,0.006876246,0.0069996375,0.018901264,-0.013819797,-0.015300489,-0.0063322037,0.0081550265,-0.008693459,-0.0051459675,0.006612638,0.049132068,-0.015715532,-0.00047112943,0.025710206,-0.025149338,-0.01878909,-0.017252311,0.017398138,-0.010656499,-0.0018985395,0.0160184,-0.031229151,-0.04065174,0.011015455,-0.054292057,-0.006898681,0.0014063774,0.03212654,-0.017140137,0.009114111,-0.010740629,-0.023892993,0.010381673,0.0035615142,-0.032866888,0.024835251,0.0368154,-0.0501192,-0.06366978,-0.039171048,-0.018396482,0.020516565,-0.002068202,0.040203046,0.015659444,-0.022692734,0.055458665,-0.006119074,0.020673608,-0.009175806,-0.019372394,-0.02126813,0.01210354,-0.025575597,-0.018542308,-0.007868983,-0.013685188,0.0053086192,0.025485858,-0.035379577,0.029591415,0.005331054,0.0024383753,0.023444299,0.009904935,0.031991933,-0.023646211,-0.0075212447,0.040113308,0.0017246703,-0.012081104,0.001172916,0.031677846,0.010723803,-0.052856237,0.047023203,0.013662754,-0.0020878324,0.004052274,-0.015221967,-0.06102248,-0.0054039666,-0.031790018,-0.02411734,0.006522899,-0.040674176,0.019720132,0.020247348,0.018777873,-0.0039485134,0.018228222,0.013954405,0.050074328,0.007089376,0.000397866,-0.031857323,-0.0066238553,0.011475367,0.0046383813,-0.012653191,-0.0218963,0.034100797,-0.0012668615,0.0014246056,0.03194706,0.004756164,-0.011368802,0.036972445,-0.017532745,0.039911393,0.0085981125,0.014593795,0.027415246,0.007728766,-0.037600614,-0.0040242304,-0.01269806,0.018912481,0.020146392,0.030309327,0.0032249931,-0.03984409,-0.027662028,-0.008149417,-0.009820805,-0.033741843,0.0020527781,0.00643316,0.010723803,0.031116977,-0.01964161,0.04000113,-0.00784094,-0.0072127674,0.015322924,-0.01461623,0.008558852,0.006085422,-0.008188678,-0.03174515,0.021010129,0.04639503,-0.024857687,0.03553662,-0.00093735126]},{"id":"anagram-groups","name":"Anagram Groups","description":"Given an array of strings `strs`, group all *anagrams* together into sublists. You may return the output in **any order**.\n\nAn **anagram** is a string that contains the exact same characters as another string, but the order of the characters can be different.\n\n**Example 1:**\n\n```java\nInput: strs = [\"act\",\"pots\",\"tops\",\"cat\",\"stop\",\"hat\"]\n\nOutput: [[\"hat\"],[\"act\", \"cat\"],[\"stop\", \"pots\", \"tops\"]]\n```\n\n**Example 2:**\n\n```java\nInput: strs = [\"x\"]\n\nOutput: [[\"x\"]]\n```\n\n**Example 3:**\n\n```java\nInput: strs = [\"\"]\n\nOutput: [[\"\"]]\n```\n\n**Constraints:**\n* `1 <= strs.length <= 1000`.\n* `0 <= strs[i].length <= 100`\n* `strs[i]` is made up of lowercase English letters.\n","difficulty":"Medium","concepts":["Hash Usage"],"solutions":{"python":"class Solution:\n    def groupAnagrams(self, strs: List[str]) -> List[List[str]]:\n        ans = defaultdict(list)\n\n        for s in strs:\n            count = [0] * 26\n            for c in s:\n                count[ord(c) - ord(\"a\")] += 1\n            ans[tuple(count)].append(s)\n        return ans.values()\n","javascript":"class Solution {\n    /**\n     * @param {string[]} strs\n     * @return {string[][]}\n     */\n    groupAnagrams(strs) {\n        const ans = {};\n\n        for (const s of strs) {\n            const count = Array(26).fill(0);\n            for (const c of s) {\n                count[c.charCodeAt(0) - 'a'.charCodeAt(0)]++;\n            }\n\n            const key = count.join('#');\n            if (!ans[key]) {\n                ans[key] = [];\n            }\n\n            ans[key].push(s);\n        }\n\n        return Object.values(ans);\n    }\n}\n","cpp":"class Solution {\npublic:\n    vector<vector<string>> groupAnagrams(vector<string>& strs) {\n        unordered_map<string, vector<string>> ans;\n\n        for (auto& s : strs) {\n            vector<int> count(26, 0);\n            for (char c : s) {\n                count[c - 'a']++;\n            }\n\n            string key;\n            for (int i : count) {\n                key += \"#\" + to_string(i);\n            }\n\n            ans[key].push_back(s);\n        }\n\n        vector<vector<string>> result;\n        for (auto& pair : ans) {\n            result.push_back(pair.second);\n        }\n\n        return result;\n    }\n};\n","java":"class Solution {\n    public List<List<String>> groupAnagrams(String[] strs) {\n        Map<String, List<String>> ans = new HashMap<>();\n\n        for (String s : strs) {\n            int[] count = new int[26];\n            for (char c : s.toCharArray()) {\n                count[c - 'a']++;\n            }\n\n            String key = Arrays.toString(count);\n            if (!ans.containsKey(key)) {\n                ans.put(key, new ArrayList<>());\n            }\n\n            ans.get(key).add(s);\n        }\n\n        return new ArrayList<>(ans.values());\n    }\n}\n","csharp":"public class Solution {\n    public List<List<string>> GroupAnagrams(string[] strs) {\n        var ans = new Dictionary<string, List<string>>();\n\n        foreach (var s in strs) {\n            var count = new int[26];\n            foreach (var c in s) {\n                count[c - 'a']++;\n            }\n\n            var key = string.Join(',', count);\n            if (!ans.ContainsKey(key)) {\n                ans[key] = new List<string>();\n            }\n\n            ans[key].Add(s);\n        }\n\n        return new List<List<string>>(ans.Values);\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def groupAnagrams(self, strs: List[str]) -> List[List[str]]:\n        ","javascript":"class Solution {\n    /**\n     * @param {string[]} strs\n     * @return {string[][]}\n     */\n    groupAnagrams(strs) {}\n}\n","cpp":"class Solution {\npublic:\n    vector<vector<string>> groupAnagrams(vector<string>& strs) {\n        \n    }\n};\n","java":"class Solution {\n    public List<List<String>> groupAnagrams(String[] strs) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public List<List<string>> GroupAnagrams(string[] strs) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/vzdNOK2oB2E","embedding":[-0.0050413464,-0.0039403327,0.016082568,-0.014103334,-0.010181136,0.01032621,-0.056744937,-0.017077366,-0.012839112,0.03840335,-0.03914945,-0.0249943,0.0036346398,-0.0077925846,0.022714555,0.0008808108,-0.0076734163,0.014890883,-0.041968044,0.03235166,0.038652048,0.01805144,-0.019201675,-0.008243352,0.028890593,0.048993804,0.0075749727,-0.010492011,0.028683344,0.05119065,-0.025470974,-0.0050542993,-0.0033418997,-0.016455617,0.04037222,0.027937245,0.022279331,0.009227788,-0.0033703966,0.0037460364,0.015522994,-0.023522828,0.009890987,-0.026486497,0.010714804,0.03469358,-0.01136764,0.029014943,-0.028932042,0.021087646,-0.029035667,0.014693996,-0.0001661235,-0.030527866,0.013927173,-0.037595075,-0.02281818,0.022382956,0.0015712109,0.0005715555,0.025698949,0.004777103,-0.005792626,0.026527947,0.0021644628,-0.0015725063,0.025222275,-0.0006087957,-0.033118486,-0.031481214,-0.036911152,0.0133261485,-0.010631904,0.02294253,-0.047999006,0.026548672,-0.0060983193,-0.008383246,0.023730079,-0.002474042,-0.019201675,-0.021802656,0.0368697,0.0028341382,-0.010932416,0.010507554,-0.018642101,0.001646339,0.001680017,-0.035377506,-0.0254917,-0.04464156,-0.018859712,0.020455536,0.007668235,-0.021719757,0.03892147,0.019149862,0.022631655,0.0043885102,0.02824812,-0.038382623,-0.012082651,0.027729996,0.008657851,-0.026320698,0.018082527,0.008243352,0.0016269092,-0.012175914,-0.052848645,0.031481214,0.0028496818,-0.039771196,0.017854553,0.008460964,-0.046714056,0.0031994155,0.028185945,0.0126215005,0.020092849,-0.028621169,0.036662452,-0.006808149,-0.033532985,0.032289486,-0.0062693,-0.035792004,0.0030750658,-0.024414001,0.0076578725,-0.03067294,0.013077449,0.02828957,-0.033450086,-0.026175624,0.03154339,0.01712918,-0.0128702,0.042175293,0.043895464,-0.041159768,-0.004961037,0.019460736,0.04646536,-0.04559491,-0.05061035,0.011740689,-0.03166774,0.006507637,-0.01771984,-0.046838406,0.01095314,0.06035108,0.0030025283,-0.058775984,-0.008243352,0.004139811,0.03054859,-0.0011981617,0.017108453,-0.031108163,0.013232887,-0.009621562,-0.01169924,0.015139583,0.0053729457,0.011585252,-0.0026631572,-0.06495202,-0.021657582,-0.041843694,-0.0250772,0.027170422,-0.029387992,-0.039315246,-0.05620609,-0.05102485,-0.09168722,-0.0022097987,-0.00948685,0.026362147,-0.019191312,-0.08828832,0.009424675,0.012124101,0.03403038,-0.04609231,-0.020610971,0.038279,0.04484881,0.035170257,0.03313921,-0.0037123582,-0.010274398,-0.024082402,0.0046087126,0.012383163,-0.015377919,0.04176079,-0.0384448,-0.026051274,-0.0045413566,0.00094233797,-0.028828418,-0.031356864,-0.0005317247,0.030942364,0.004538766,-0.0040439577,0.031149613,-0.0503202,0.03840335,-0.04120122,0.026983896,-0.00012394496,-0.019626535,0.009979067,0.018289777,0.0013574848,-0.00050484703,0.04460011,-0.0019546228,0.037677977,-0.020051397,0.021263808,-0.00043651945,-0.009227788,0.047087107,-0.024662701,-0.0013004912,0.024268927,-0.0038444798,-0.022154981,-0.021761207,-0.053677645,-0.0017823465,0.017232804,-0.009020538,-0.017440053,0.017077366,0.010776979,0.057988435,0.018072164,0.0073262732,0.017554041,-0.027170422,0.03498373,0.010061967,-0.009077532,0.0059791505,0.048289154,-0.0038444798,-0.018351952,-0.021823382,0.06022673,-0.018662825,-0.053801995,-0.0010582682,-0.013978985,-0.005248596,0.04551201,-0.020517709,-0.026217073,-0.022300055,-0.0015064455,0.01521212,0.037491452,0.025305174,-0.00033775208,-0.046175208,0.039025098,-0.017056642,-0.028932042,0.0256575,-0.035833456,-0.017875277,-0.031501938,-0.022051357,-0.01354376,0.012383163,-0.01901515,0.032828335,-0.020237923,0.01646598,0.025698949,0.032455284,-0.040931795,-0.0750658,-0.018642101,-0.02545025,-0.002218866,-0.009103438,0.064040124,-0.018569563,-0.021056559,-0.03005119,0.0123728,0.03235166,-0.009849537,0.021450333,0.011357278,-0.0015841641,0.01249715,-0.06573957,-0.010010155,-0.0392738,-0.024144577,0.029450167,0.018942613,0.04200949,0.06988456,0.038714223,-0.007953203,-0.01488052,-0.07867195,0.029989015,-0.042196017,0.015626619,-0.004334107,-0.034652133,0.049242504,0.06602972,-0.031211788,-0.0034999275,-0.016072206,-0.0059895134,-0.016735405,0.025823299,-0.0011703125,-0.014611096,-0.029180743,-0.0062433938,0.051770948,-0.048828002,-0.027128972,0.0078703035,0.019864874,0.036082152,-0.0048289155,-0.024890676,0.0035802366,0.019429648,0.0044221883,-0.04621666,0.063501276,0.037429277,0.010435017,-0.028496819,0.012238088,0.024040952,0.021740481,-0.020455536,0.01383391,-0.026714472,0.017854553,-0.025719674,0.03757435,-0.017813101,0.028932042,0.029056393,0.021864831,-0.018652463,-0.008248534,0.005575014,0.049201053,-0.010243311,0.03552258,0.02520155,0.0031916436,0.019243125,-0.059480634,0.031626288,-0.03701478,0.01985451,0.044102713,-0.00910862,0.022051357,0.02857972,0.004173489,-0.02845537,0.002725332,-0.021201633,-0.022465855,0.012010113,0.038175374,-0.009564568,0.005595739,-0.011264015,-0.042175293,0.0039843735,0.023543553,-0.0013302834,0.053138796,0.0034014839,-0.010673354,0.042527616,0.017326066,-0.03840335,0.019647261,0.022258606,0.001713695,0.0074868915,0.0048703654,-0.0247456,-0.010300305,-0.029719591,0.053428944,-0.005958426,0.00760606,0.026818097,0.00685478,0.004230482,-0.007155292,-0.01654888,0.005331496,-0.02486995,0.024559077,0.0012519171,0.008321071,-0.0031294688,-0.023025429,0.04609231,-0.014352034,-0.0012072289,0.014611096,0.014310584,-0.051066298,-0.009378044,-0.024973575,0.005466208,0.03514953,0.013574848,-0.047087107,-0.010574911,0.038175374,-0.0022370003,0.09939691,0.025346626,-0.035688378,-0.01747114,-0.0030698846,-0.019916685,-0.018859712,0.0037123582,-0.0249943,0.010673354,0.059107583,0.027978694,-0.008880645,0.018621376,-0.042610515,-0.009979067,-0.0013257497,0.01617583,0.0016554061,-0.016984103,-0.004865184,0.022631655,-0.0032564092,0.022631655,-0.027626371,-0.053221695,-0.014714721,0.039418872,-0.008963545,-0.006481731,-0.026030548,0.04107687,-0.023004705,0.017688753,0.041968044,-0.024849227,0.031812813,-0.019823423,0.028911319,-0.00032560853,0.052972995,0.004909225,-0.03807175,0.015978944,-0.038755674,0.011719964,0.027315496,-0.021263808,0.011398727,0.0032201405,-0.032745436,0.015854593,0.0042771134,-0.024621252,0.03005119,-0.00091837475,-0.0064869123,0.05678639,-0.02047626,0.012569687,-0.030279165,0.0032486373,-0.035108082,0.015823506,-0.06399868,0.0050309836,-0.032248035,0.047294356,0.018123977,-0.010543823,-0.007051667,0.0048133717,0.08638163,-0.022113532,-0.053055894,-0.0009060693,-0.02018611,-0.04082817,-0.011077491,-0.0498228,-0.008036103,-0.012424613,-0.014776896,0.00011066804,-0.032579634,0.010901328,0.024455452,0.014673271,-0.0365381,-0.02758492,0.020072123,-0.03832045,0.018642101,-0.0054713893,0.012124101,0.0127665745,0.027647095,-0.020123934,-0.0014714721,0.0056061014,-0.008284803,0.037222028,-0.014424572,-0.021616133,0.039791923,0.012922012,-0.007492073,-0.00409577,-0.02294253,0.021823382,0.050486002,0.007984291,0.00794284,0.012652587,-0.036123604,0.04008207,-0.048413504,-0.011232927,-0.047045656,-0.013388324,0.010756254,0.026237799,0.013678473,-0.039439596,-0.03925307,0.017315703,-0.0052019646,0.013077449,0.041864417,0.017947815,0.040641643,0.0045154504,0.0072485544,0.01985451,0.0073366356,-0.010642267,-0.031605564,0.014714721,-0.050486002,0.009186338,-0.012279538,0.009730368,0.031937163,-0.023294855,-0.013937535,-0.008186359,0.012548963,-0.036786802,0.023812978,-0.0094454,0.0122899,0.0124867875,-0.036019977,0.02273528,0.0043651946,0.01763694,0.0014675861,-0.026009824,-0.03038279,0.015367557,-0.058858883,0.014269134,0.010227768,0.021346709,0.013823547,0.0011631884,-0.003352262,-0.048786554,-0.015491907,-0.015937494,0.032413837,0.004062092,0.025968373,0.028745519,-0.02536735,-0.026382873,-0.0010997182,0.00890137,-0.010642267,-0.008989451,0.02010321,0.016683592,-0.0064299186,0.04447576,0.013471223,0.04062092,0.012901287,0.02828957,0.016248368,-0.01981306,0.004036186,-0.038631324,0.03560548,-0.052765746,0.01169924,-0.00865267,-0.020963296,-0.03009264,-0.00865267,-0.0007143634,-0.006466187,0.03610288,0.013419411,0.011025678,-0.0504031,0.03067294,0.010466104,0.006222669,-0.011885764,0.0127873,-0.0022706783,-0.014113697,-0.0051760585,0.023419203,0.047874656,0.048247706,0.037760876,0.008657851,0.0012286014,-0.02824812,-0.044890262,-0.023958053,-0.022051357,0.0037693519,-0.019564362,0.014828708,0.015916768,0.03597853,-0.055957388,0.016579967,0.015626619,0.018828625,-0.006543906,-0.01663178,-0.0061708568,0.068931215,0.011471265,-0.026714472,-0.00505689,0.01901515,-0.03572983,-0.008637127,-0.013854635,-0.011916852,0.01169924,-0.010067149,0.023129053,0.024393277,-0.0016489296,-0.015896043,0.019999586,-0.03689043,0.0024170484,-0.008015378,-0.0010589159,-0.029180743,0.012155188,0.034548506,-0.0067304303,-0.02708752,0.057739735,0.013978985,-0.006196763,0.040434394,0.005069843,0.0042771134,0.015481545,-0.046506807,-0.0005307532,0.053387493,0.0144452965,0.016766492,0.0071915607,0.008906551,0.034134008,-0.029657416,0.0504031,-0.04464156,0.03840335,0.035999253,-0.014559284,0.0026942447,-0.05450664,0.004069864,0.039025098,-0.048330605,0.014300222,0.000341638,-0.024724877,0.03577128,-0.021927007,-0.024849227,-0.0067148865,-0.0049506747,0.022134256,0.009885806,-0.004308201,-0.022880355,-0.015440094,-0.012859837,0.03631013,-0.035108082,-0.03823755,0.001178732,-0.0010420769,-0.03289051,-0.0007137158,-0.00752316,0.014061885,-0.013232887,0.021201633,-0.07013326,0.044309963,-0.04016497,0.0027020166,0.017522953,0.0058185323,-0.00041676598,0.03218586,0.013502311,-0.003196825,-0.0010362479,-0.002766782,0.016486704,0.013989347,-0.0255746,-0.028683344,0.043563865,0.052268345,-0.029491616,0.033180658,-0.040123522,0.03461068,0.011709602,-0.0043366975,0.029719591,-0.011108578,-0.036475927,-0.04020642,0.0061242254,-0.002060838,0.0057200887,-0.00547657,-0.04082817,0.0068185115,-0.0040335953,0.028227394,0.015367557,0.02277673,-0.007476529,-0.029553792,0.010932416,-0.011543802,0.020341547,0.032372385,0.013139624,-0.005689001,0.012393526,-0.022631655,-0.016196556,0.008419515,0.010704441,-0.025346626,-0.0031113345,0.03247601,0.0018289776,-0.007108661,0.027398396,-0.011523077,0.008678577,-0.010201861,-0.022673106,-0.026030548,0.009222607,0.06059978,0.009222607,-0.027356947,0.0023082423,-0.0023043563,-0.025989098,0.056993637,0.0027564196,0.028227394,-0.030134091,0.0074868915,-0.01671468,0.014227685,0.049242504,0.018009989,0.020745683,-0.008264078,0.046962757,0.018227601,0.0058444384,0.028331019,-0.034092557,0.028331019,0.05069325,0.032724712,0.0029740317,0.0019999587,0.014714721,0.002650204,0.016403805,0.0014805392,-0.014621459,-0.04555346,0.008937638,-0.0029999379,-0.015688794,-0.0073780855,0.02269383,-0.019761248,0.038838573,-0.01508777,-0.0036968146,0.008113821,-0.020507347,0.014424572,0.006704524,0.015222482,-0.04451721,0.001826387,0.06010238,-0.008072372,0.007953203,-0.040724546,-0.011844314,-0.00036203914,0.018362314,0.008704483,-0.060268182,-0.042942114,0.015502269,0.0748171,-0.0013076154,0.005424758,0.0051682866,-0.0016165468,0.024932126,0.041284118,0.023792254,-0.009222607,0.048620753,0.009264057,-0.024807775,0.016559243,-0.018082527,-0.046631157,0.049035255,0.012165551,0.010087874,0.01488052,0.021927007,0.009181157,-0.005155334,0.014538559,-0.0031579656,0.030279165,0.035792004,-0.035833456,0.062133428,0.026092723,-0.0009002404,0.004497316,-0.016901204,0.0017421918,0.01780274,0.01742969,0.016901204,-0.0006418261,0.02285963,0.008502414,-0.0253259,-0.053428944,-0.004240845,0.016165469,0.016662868,0.0029558972,0.0027305135,-0.04074527,0.046838406,0.006087957,0.021781933,0.008030921,0.01488052,0.0039351517,0.03606143,-0.001604889,0.0015932312,0.0029999379,0.0249943,-0.011264015,0.007922116,-0.013181074,0.044765912,-0.0365381,-0.01605148,0.0026255932,-0.0038367081,0.0011055471,-0.011543802,-0.031564113,-0.03560548,0.024496902,-0.024766326,-0.026134172,-0.004559491,-0.03514953,-0.031481214,-0.02110837,0.03260036,0.022051357,0.049242504,-0.0051423805,-0.0003027787,-0.0030828377,-0.013730286,-0.034134008,-0.032538187,-0.04157427,-0.029615967,0.006315931,0.018807901,-0.016310543,0.02298398,-0.02766782,-0.020061761,0.02528445,-0.013802823,0.010144867,-0.038009576,-0.025243001,0.027232597,-0.02010321,0.0018730182,0.009631924,-0.033615883,-0.006761518,0.04070382,0.012020476,0.012548963,-0.0025141966,0.009885806,-0.024165303,0.007429898,-0.014300222,-0.0021178317,-0.038589872,-0.005792626,-0.020642059,0.034113284,-0.014870158,0.03293196,-0.021844108,-0.005240824,0.014030797,-0.015906407,0.00074545084,-0.023875153,0.035253156,0.019149862,0.018828625,-0.025180826,-0.03141904,0.0067097056,0.00065898895,-0.0052848645,-0.06897266,0.03309776,-0.016351992,-0.009367681,0.01625873,-0.0249943,0.0016567014,0.018393401,0.016445255,-0.003339309,0.010694079,-0.01169924,-0.025180826,0.017160267,-0.03172991,0.0059946943,-0.0011055471,-0.0001285595,-0.026735198,-0.0050879773,-0.0062537566,-0.0021903692,0.012383163,0.0051423805,0.018424489,-0.012362438,0.015740607,-0.014984146,0.006196763,0.010129324,-0.030776564,-0.0061656754,-0.0072485544,0.011595614,-0.002051771,-0.02298398,0.0062433938,-0.014849433,-0.008554227,-0.007585335,0.006891049,-0.01149199,-0.0066008996,-0.01796854,-0.0141655095,0.0038004394,0.023357028,-0.011668152,-0.004696794,0.027564196,-0.00455431,0.059231933,0.0155644445,0.02094257,0.010305486,0.013015274,-0.0017085138,0.007797766,0.010621541,-0.005689001,-0.038506974,-0.029408718,-0.04144992,-0.03950177,0.031688463,-0.001479244,-0.011191478,-0.042651966,-0.0031812813,-0.015688794,0.007865122,-0.02988539,0.01541937,0.020673146,-0.040600196,0.03564693,-0.0392738,0.015481545,0.011564527,0.017139541,-0.010170774,-0.0067511555,-0.030403515,-0.00584962,0.01504632,-0.0035361962,-0.00902572,0.011460902,-0.005357402,-0.010714804,0.00810864,0.004279704,-0.023937328,-0.023025429,0.010605997,-0.023937328,-0.010818428,0.023709353,-0.04505606,-0.06719032,0.029325817,-0.035667654,0.02035191,-0.009144888,0.0063366564,0.008720026,-0.00007844721,-0.02775072,0.01763694,-0.004183851,-0.049905702,0.008492052,-0.044102713,-0.01642453,0.032786883,0.015181033,0.0028082319,-0.010662992,0.041843694,-0.021885557,-0.03970902,-0.01747114,0.034424156,-0.006694162,-0.012093013,-0.0022991751,-0.048910905,-0.015450457,-0.02828957,-0.0008218742,-0.004857412,-0.02741912,-0.007025761,-0.0067304303,0.015657706,0.030320615,-0.012476426,0.016124018,0.00401287,-0.008165634,0.03405111,0.024331102,0.054133594,0.0011670743,-0.034963004,-0.013346873,-0.008637127,0.00885992,-0.03740855,0.0045413566,0.011046403,-0.04242399,0.02470415,-0.010942779,0.012248451,-0.014528196,-0.038900748,0.04132557,0.00956975,0.02327413,0.027170422,0.0048081903,-0.027356947,0.014714721,-0.035626203,-0.0026683386,0.004857412,0.00547657,0.0015362375,0.026051274,-0.002306947,-0.013388324,0.0064091934,0.010932416,-0.0067666993,-0.042983565,-0.033636607,-0.017067004,-0.021989182,-0.0015038549,-0.018144703,-0.004497316,-0.032413837,0.040931795,0.001830273,0.040310044,0.004041367,-0.013854635,0.011129303,0.026051274,-0.022051357,-0.024662701,-0.010481648,-0.035170257,-0.029387992,-0.021211995,-0.02065242,-0.052599948,0.0070723924,-0.048413504,-0.00037887815,-0.027108246,0.0023561688,-0.0010414292,-0.006466187,-0.007932478,-0.025263725,-0.06088993,-0.047543056,-0.005797807,-0.037304927,-0.013429773,-0.00706203,-0.011098215,-0.03450706,0.004909225,0.011709602,0.006533543,-0.0054558455,-0.02795797,-0.015450457,0.043978363,0.014227685,-0.0050724335,-0.0092018815,-0.010523098,0.0053107706,-0.004901453,0.026942447,0.028911319,-0.015243207,-0.00848169,0.0053677643,0.016279455,0.013771735,0.020289734,0.0127044,-0.015191395,-0.010087874,0.038009576,0.0025232637,-0.031957887,0.05044455,0.020870034,-0.0016346811,0.020818222,-0.004940312,0.010274398,-0.051770948,0.027108246,-0.011440177,0.005854801,0.039190896,0.0062796627,-0.0071190232,-0.022590205,-0.010067149,0.014642184,-0.011844314,-0.005502477,-0.007714866,-0.03355371,0.042693418,-0.026299974,0.0070464863,0.0019300118,0.013450499,0.008875464,-0.019647261,0.034320533,0.023315579,0.006528362,0.008911733,0.0021579864,-0.02002031,-0.014621459,0.02545025,0.008657851,0.008911733,0.03618578,-0.008678577,0.011626702,-0.0054713893,0.0255746,-0.01630018,-0.0068599614,0.033781685,0.00065121707,0.010098237,0.031709187,-0.004401463,-0.017502228,-0.008030921,-0.06694162,-0.025429524,-0.011295103,0.01370956,0.0021838925,0.008186359,0.024683427,0.017782016,0.0019610992,-0.00442996,-0.0056579136,-0.003100972,-0.020362273,0.032703985,0.01868355,0.030362066,-0.034797207,0.032040786,-0.0056268265,0.016766492,0.0048056,0.020704234,-0.03643448,0.0046242564,-0.030776564,0.0018056621,0.0071242047,0.017771652,0.03610288,-0.0036916332,-0.007025761,0.021305257,0.010124142,-0.0045905784,-0.053097345,-0.0032020062,-0.0073988102,0.00225643,0.030714389,0.037636526,0.018082527,-0.01178214,-0.032268763,-0.016372718,0.0096112,0.00819154,-0.025989098,0.005813351,0.029968292,0.014631821,-0.027522746,-0.01981306,-0.010611179,-0.006740793,-0.012673313,0.04053802,-0.0070050363,0.003435162,0.0034247995,0.033305008,-0.018331226,0.012818387,-0.016134381,-0.016756129,-0.0074247164,-0.015326107,0.02065242,-0.024496902,0.017605852,-0.029408718,0.014611096,0.02323268,-0.0039688298,-0.0010615065,-0.017408965,-0.029139293,-0.012808025,-0.021844108,0.021678308,0.01605148,-0.015118858,-0.010932416,0.019212037,0.004233073,0.03527388,-0.034424156,0.022569481,-0.0014572237,0.01667323,-0.021491783,0.011201841,0.017067004,0.03139831,0.006419556,-0.020859672,0.008745933,-0.03618578,-0.016859755,0.003979192,0.03029989,0.0051216553,-0.008756295,-0.008973908,0.02261093,0.0031994155,0.0046423906,0.017274253,0.012383163,0.0066578933,-0.018165426,0.011937576,-0.008704483,0.0075127976,-0.0026812917,-0.012476426,-0.021056559,-0.043149363,-0.058444384,0.00072666886,-0.042693418,0.0088495575,-0.039025098,-0.013377961,-0.0147250835,-0.02857972,-0.043190815,0.02770927,0.0047874656,0.005502477,0.014051522,-0.03689043,-0.057532486,-0.034465607,0.019958135,-0.008305527,-0.00026489087,0.06043398,0.018341588,0.03280761,0.07485855,-0.006113863,0.016942654,0.019284574,0.0067148865,0.014030797,0.02190628,-0.011595614,0.0015025595,0.0004122324,0.022341507,0.008616402,0.044309963,-0.036848977,-0.0037771238,0.0051501524,0.0062848437,0.069179915,-0.04033077,0.018807901,0.009295144,0.024206752,-0.02252803,-0.01504632,0.03108744,-0.011771777,0.00048153146,-0.013274336,0.003339309,0.03276616,0.018621376,0.02236223,-0.028393194,0.023585003,-0.06093138,-0.009471307,-0.012725125,-0.004049139,-0.028662618,0.0001449128,0.0046838406,0.027439846,0.022009907,-0.009087894,-0.0035051086,0.006305569,0.010600816,0.0048470497,0.0017421918,-0.0069117737,0.0061086817,0.033843856,0.015533357,0.014807983,0.015440094,0.021118734,0.018155064,-0.0094091315,0.0250772,0.03732565,0.011274378,0.0008963545,0.03593708,-0.0023160141,0.049035255,0.009517938,0.018196514,-0.010942779,-0.029263642,-0.03798885,0.007828853,0.02561605,0.039978445,0.034444883,-0.04070382,-0.063915774,0.011077491,0.020984022,-0.0011761414,0.014196597,0.016455617,-0.014704359,-0.020155022,0.034776483,0.025885474,0.01124329,-0.019719798,0.0009106029,-0.00046469245,0.004834097,-0.010683716,-0.017098092,0.0025245592,-0.017522953,0.023522828,0.058029886,-0.015916768,-0.015274295,-0.015657706]},{"id":"lowest-common-ancestor-in-binary-search-tree","name":"Lowest Common Ancestor in Binary Search Tree","description":"Given a binary search tree (BST) where all node values are *unique*, and two nodes from the tree `p` and `q`, return the lowest common ancestor (LCA) of the two nodes.\n\nThe lowest common ancestor between two nodes `p` and `q` is the lowest node in a tree `T` such that both `p` and `q` as descendants. The ancestor is allowed to be a descendant of itself.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/2080ee6a-3d27-4cd5-0db2-07672ead8200/public)\n\n```java\nInput: root = [5,3,8,1,4,7,9,null,2], p = 3, q = 8\n\nOutput: 5\n```\n\n**Example 2:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/2080ee6a-3d27-4cd5-0db2-07672ead8200/public)\n\n```java\nInput: root = [5,3,8,1,4,7,9,null,2], p = 3, q = 4\n\nOutput: 3\n```\n\nExplanation: The LCA of nodes 3 and 4 is 3, since a node can be a descendant of itself.\n\n\n**Constraints:**\n* `2 <= The number of nodes in the tree <= 100`.\n* `-100 <= Node.val <= 100`\n* `p != q`\n* `p` and `q` will both exist in the BST.\n","difficulty":"Medium","concepts":["Binary Tree","Binary Search Tree","Depth-First Search"],"solutions":{"python":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nclass Solution:\n    def lowestCommonAncestor(self, root: TreeNode, p: TreeNode, q: TreeNode) -> TreeNode:\n        while True:\n            if root.val < p.val and root.val < q.val:\n                root = root.right\n            elif root.val > p.val and root.val > q.val:\n                root = root.left\n            else:\n                return root\n","javascript":"/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     constructor(val = 0, left = null, right = null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {TreeNode} root\n     * @param {TreeNode} p\n     * @param {TreeNode} q\n     * @return {TreeNode}\n     */\n    lowestCommonAncestor(root, p, q) {\n        while (true) {\n            if (root.val < p.val && root.val < q.val) {\n                root = root.right;\n            } else if (root.val > p.val && root.val > q.val) {\n                root = root.left;\n            } else {\n                return root;\n            }\n        }\n    }\n}\n","cpp":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n\nclass Solution {\npublic:\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        while (true) {\n            if (root->val < p->val && root->val < q->val) {\n                root = root->right;\n            } else if (root->val > p->val && root->val > q->val) {\n                root = root->left;\n            } else {\n                return root;\n            }\n        }\n    }\n};\n","java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n        while (true) {\n            if (root.val < p.val && root.val < q.val) {\n                root = root.right;\n            } else if (root.val > p.val && root.val > q.val) {\n                root = root.left;\n            } else {\n                return root;\n            }\n        }\n    }\n}\n","csharp":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\npublic class Solution {\n    public TreeNode LowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n        while (true) {\n            if (root.val < p.val && root.val < q.val) {\n                root = root.right;\n            } else if (root.val > p.val && root.val > q.val) {\n                root = root.left;\n            } else {\n                return root;\n            }\n        }\n    }\n}\n"},"starterCode":{"python":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nclass Solution:\n    def lowestCommonAncestor(self, root: TreeNode, p: TreeNode, q: TreeNode) -> TreeNode:\n        ","javascript":"/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     constructor(val = 0, left = null, right = null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {TreeNode} root\n     * @param {TreeNode} p\n     * @param {TreeNode} q\n     * @return {TreeNode}\n     */\n    lowestCommonAncestor(root, p, q) {}\n}\n","cpp":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n\nclass Solution {\npublic:\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        \n    }\n};\n","java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n        \n    }\n}\n","csharp":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\npublic class Solution {\n    public TreeNode LowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/gs2LMfuOR9k","embedding":[0.030691464,0.0035045033,0.026381189,-0.036791272,0.039408226,0.03276963,-0.023302421,0.020820165,-0.048875432,0.051992685,0.0003081774,0.020319866,-0.050376333,-0.04433425,0.027324062,-0.024514686,0.03529037,-0.025669225,-0.0019579036,0.028132237,0.031769034,-0.009005395,0.06222959,-0.055533268,0.06222959,-0.014537555,0.03165358,0.030537525,-0.019049874,0.008615739,0.0666938,0.0040312614,-0.008004796,0.06465412,0.006349958,0.031057067,0.02982556,0.007846046,-0.003174979,0.04483455,-0.032885086,0.0057149623,-0.026246494,-0.027170124,0.0051665567,-0.029671622,-0.031037824,-0.012266965,-0.02153213,0.0097414125,-0.016567618,0.004389649,0.0050126184,0.04741302,-0.06615502,-0.049221795,-0.006181588,0.004454592,0.019463584,0.037464753,0.01709678,0.005320495,-0.020416077,0.0154900495,0.04775938,0.00050841755,0.024668625,-0.010352355,0.0017414279,-0.055802662,-0.018876694,0.004437755,-0.03904262,0.0053156847,0.037041422,0.016384816,0.00083042536,0.02722785,-0.013094383,-0.013969908,-0.0035862832,0.011045079,0.040370338,0.0025760625,-0.012911581,-0.0066722664,-0.0147299785,-0.010121448,-0.03527113,-0.0986745,-0.017577838,-0.037079908,0.028690265,0.0006794936,0.049144827,-0.017616322,0.033808716,0.032885086,-0.007846046,-0.00026879084,-0.012873096,-0.0769307,0.024938017,-0.01833791,0.0070763547,0.005628372,0.019838808,-0.007860478,-0.061806258,0.015374595,0.0062537463,-0.056341447,0.0323463,0.005647614,0.0023066704,-0.046296965,-0.06550078,-0.031846,0.033962656,0.014248921,0.044603646,-0.048798464,-0.01441248,-0.013123247,-0.011150911,0.03276963,0.0022345118,-0.01676004,0.039562162,-0.030364344,0.026823763,0.037907325,0.0036752787,0.026111796,-0.03709915,0.01130485,0.04002398,0.0111701535,0.013892938,0.009443157,0.0062393146,0.012247722,-0.03963913,-0.00586409,0.004113041,0.0134503655,0.008447369,0.041524876,-0.026361946,0.049375735,0.052993286,-0.024938017,-0.0069224164,0.012420903,-0.002722785,0.00066145393,0.043756984,0.041063063,-0.019223055,-0.043025777,0.0064461697,-0.026785277,0.020627743,-0.021243496,0.0028695075,0.011901361,-0.046373937,-0.014508692,-0.019530931,-0.023090756,0.010371598,-0.031345703,0.025726952,0.012247722,0.008966911,-0.024245294,-0.030518282,0.013536956,0.02445696,0.050337847,0.0015045071,0.04298729,0.0045508035,-0.033539325,0.009144901,0.03157661,-0.0028021594,-0.023090756,-0.018376393,-0.0050559137,-0.009871298,0.016702313,-0.010987352,0.0041419044,0.009313271,0.017683672,0.025592254,0.004969323,0.012286207,0.023764236,0.014229679,-0.029844802,0.004582072,0.016192393,0.0098905405,-0.021128042,-0.019588659,-0.009765466,-0.018366773,-0.060112935,0.027362546,-0.0030306617,0.010612126,0.024091356,0.020165928,0.0039326446,0.017625945,-0.011045079,0.021820765,0.06750198,-0.008639791,0.0025327674,0.05480206,0.054494184,0.03142267,-0.00023000558,-0.003954292,-0.023821963,0.05310874,-0.0048899488,0.02588089,0.019040253,-0.019251918,0.014171951,0.011757043,-0.005854469,-0.0427179,-0.068771966,-0.04256396,-0.03342387,-0.00853877,0.0019218244,0.03854232,0.0024305426,-0.021224253,-0.030922372,0.005705341,0.010121448,-0.03057601,0.027670423,0.022782879,-0.00988092,-0.045296367,-0.02253273,-0.00018971702,-0.012517114,0.051030573,-0.04164033,0.030056467,-0.039716102,-0.0387155,0.019819565,-0.015730578,-0.06750198,-0.01750087,-0.068541065,0.032788873,0.0074948748,-0.018732376,0.03124949,0.034790073,-0.036829755,0.034251288,-0.012353554,-0.018472604,-0.010746823,-0.011785907,-0.044218797,-0.009322893,-0.034751587,-0.050568756,0.050068457,0.050761178,0.01080455,-0.008452179,0.015990349,-0.017645186,0.007855668,0.021089558,0.014768463,-0.023802722,-0.0031797895,0.0046614464,-0.021897733,-0.011882118,0.0036800893,-0.0025327674,-0.006946469,0.024399232,-0.0886685,-0.021512888,-0.052146625,-0.010525537,0.018405257,0.047605444,-0.067463495,0.060613237,0.045565758,-0.04841362,0.006994575,-0.05637993,0.029883288,0.016355952,0.011372197,-0.037849598,-0.026900731,-0.0074323374,-0.05865052,-0.008942857,0.03369326,-0.005036671,-0.03713763,0.005397464,0.01876124,0.036098547,0.04314123,-0.06515442,0.028170723,0.028536327,-0.010496673,-0.02103183,-0.00077209715,0.04044731,-0.0002325612,-0.033039022,0.0079807425,0.0012832207,0.024591656,-0.040524278,0.016153907,0.012940445,0.0032952433,0.008134681,-0.050645724,-0.033962656,-0.019155707,0.0051473146,0.015855653,0.032788873,0.041755784,-0.011247123,-0.013527335,0.04564273,0.0021238686,0.015316868,0.03694521,0.0037209792,0.023244694,-0.038657773,0.030537525,-0.048375133,-0.051069055,-0.021993946,-0.022551972,0.028805718,-0.004861085,-0.014518313,-0.062306557,0.038138233,0.026592854,-0.04087064,0.019915778,-0.00059771386,-0.00015514102,-0.039908525,0.008062523,-0.012863476,0.0065712444,-0.0055177286,0.051877234,0.0019711328,0.025957858,0.01741428,0.011718559,-0.02178228,-0.0033649968,0.033808716,0.023379391,0.0023235073,0.00012259447,0.028671023,-0.028266935,0.032269333,0.0010709541,0.021589857,0.014527935,0.019973503,-0.0074948748,0.02153213,0.033154476,0.006811773,0.011785907,-0.02740103,-0.011122048,-0.045681212,-0.018212834,0.012218858,0.025900131,-0.004497887,-0.0681947,-0.0055321604,0.06546229,-0.01851109,-0.006667456,-0.011131668,-0.029594652,-0.0040480983,-0.0402164,-0.034539923,-0.024264537,0.024899533,-0.019001769,0.02815148,0.038484596,0.0007426324,0.054571155,0.020589259,0.012661431,0.064731084,-0.008567633,0.039754584,0.014152709,-0.041601848,-0.009486453,0.029267535,0.0447191,0.0201082,0.025919374,-0.012555599,-0.0060180286,-0.047951803,-0.01750087,0.039947007,-0.014903159,-0.0015261547,0.013748622,-0.01784723,0.013498471,-0.038753986,-0.021051073,-0.021820765,0.034905527,0.03057601,-0.007927827,-0.009751034,0.008957289,0.06780986,0.029286776,0.032442514,-0.026323462,-0.038638532,0.028632538,0.03215388,0.027304819,0.028247692,-0.020165928,0.0044594025,0.0030354722,0.013104004,-0.030556768,0.023725752,0.0014155115,-0.017962685,0.0036680629,-0.0010565224,-0.00059921714,0.020165928,-0.0027035428,-0.043680016,-0.044911522,-0.0129308235,-0.016865874,0.020531531,0.002081776,0.01801079,-0.029671622,0.044526674,0.037253086,-0.012382418,-0.024014387,0.0017294014,-0.017962685,0.018645786,-0.003862891,0.018924799,0.034636136,0.0042862217,0.0043174904,-0.017298825,-0.004606125,-0.00464942,-0.017462384,0.0031364944,0.026323462,-0.012286207,-0.036579605,0.011016215,0.031326458,0.034289774,0.0534551,-0.02003123,-0.023321664,-0.024379991,-0.019781081,-0.009573042,0.012844233,-0.023610298,-0.0003935651,0.013652409,0.012661431,0.01240166,-0.04633545,0.025592254,0.017241098,-0.005594698,0.0017714939,-0.027901331,0.022340307,-0.03500174,-0.015865274,0.0094094835,0.018232075,0.046604842,0.03904262,-0.011680074,0.0447191,0.032307815,-0.015134066,-0.011901361,-0.010871897,0.0011088373,0.0035309615,-0.0049981866,-0.030287376,-0.008278999,0.011420303,0.016567618,-0.0053637903,0.011083563,0.027862847,0.014710736,-0.033866443,-0.019992746,-0.032365542,0.0054648123,-0.028940415,-0.0031076309,0.004252548,0.022494245,0.01616353,-0.004892354,-0.025322862,0.019858051,-0.004081772,0.019858051,0.0027035428,0.0076199495,0.008202029,0.00044527877,-0.0029729349,0.062922314,-0.029209808,-0.025861647,-0.033443112,0.028882688,-0.006147914,0.008264567,-0.03365478,0.007393853,0.0009320488,-0.00661935,-0.009101607,-0.059535667,0.020223655,-0.0047624684,-0.0068310155,-0.0059747333,0.023821963,0.0196079,0.0144702075,0.0064221164,0.029921772,0.039562162,0.01215151,-0.06484654,-0.0015502075,-0.016567618,-0.010082964,-0.021493645,0.013421502,-0.013306049,0.010766065,0.0043126796,0.06542381,0.0075189276,-0.015105203,0.021820765,0.01516293,-0.04179427,0.034809314,0.0030523094,-0.017144887,-0.020820165,0.01650989,0.010823792,-0.02882496,-0.0011966303,0.0053156847,0.052300565,0.016307848,0.022301823,-0.0144702075,0.022321064,0.03667582,0.018867072,0.010265766,-0.03713763,0.05722659,0.0067155617,0.011487652,-0.05153087,0.041063063,-0.0119302245,0.023898933,0.0033217014,-0.051992685,-0.005912196,0.0065038963,-0.035559766,-0.014037255,-0.009510505,0.04926028,-0.038657773,-0.04525788,-0.041755784,0.04429577,-0.021589857,0.03861929,-0.011737801,-0.02430302,-0.0026265734,0.019954262,0.016913978,0.038830955,-0.0124305235,0.008697518,-0.039158076,-0.039061863,-0.032307815,0.03702218,-0.036290973,-0.015028234,0.008861078,0.024957258,-0.021974703,-0.00301623,0.015538155,0.04868301,-0.0058496585,-0.070349835,0.026150282,0.00971255,0.006624161,-0.044680614,-0.030768434,-0.015942244,-0.007672866,0.0047769,-0.011708938,-0.03482856,0.010313871,0.021493645,-0.026669824,0.053762976,0.0013505687,-0.0008833417,-0.03157661,-0.016962085,-0.022859849,-0.023725752,0.005840037,-0.002176785,-0.034924768,-0.023975901,-0.034058865,-0.0028478599,0.022301823,0.043987893,0.032404028,-0.0691953,-0.02068547,-0.022147885,0.016057696,0.010544779,-0.0048226006,0.0069416584,-0.0069993855,0.03525189,0.051299963,-0.013334912,0.03365478,0.041524876,0.017356552,0.022975303,-0.0012699916,0.004081772,0.004702336,0.036060065,0.0127384,-0.021512888,-0.039562162,0.02320621,0.009366188,0.008452179,-0.0031533313,-0.009702928,-0.023109999,-0.002496688,-0.038657773,0.004382433,-0.054571155,0.007754646,0.014835811,0.007355368,-0.02722785,0.018924799,-0.022321064,0.040909123,0.0064557907,0.0022417277,0.009438347,0.0026746793,0.007095597,-0.03394341,0.0013926612,-0.0016909168,-0.017260341,0.01817435,-0.013267564,0.03509795,0.0119109815,0.0008394452,-0.02872875,-0.04306426,0.008567633,0.0045532086,0.014297026,-0.005479244,-0.04314123,-0.034462955,-0.013325291,0.005253147,-0.016057696,-0.0069897645,0.009524937,0.009582664,-0.016057696,-0.005392654,0.017346932,0.0452194,0.0052627684,-0.017472006,0.03207691,0.012545978,0.012382418,-0.005917006,-0.011122048,0.00419001,-0.023225453,0.007042681,-0.021628343,0.007807562,-0.0033457545,-0.021993946,0.019290403,0.007942258,0.012324691,0.0097414125,-0.07208165,-0.002780512,-0.013084762,0.0005938053,-0.026843004,-0.0126902945,0.0124112815,-0.011757043,-0.012805749,-0.025515286,-0.025091955,-0.043987893,-0.014287406,0.025072712,0.038773227,-0.021378191,-0.042102147,0.06176777,0.006417306,-0.04868301,-0.023937417,0.019617522,-0.028420873,0.028170723,0.013334912,-0.008774487,0.019001769,0.04960664,-0.022667427,-0.022551972,0.011247123,0.031595852,-0.020897135,-0.0066626454,0.027285578,0.02235955,0.022782879,-0.0036921157,0.0086301705,0.018953662,-0.0070571126,-0.011901361,0.042448506,-0.010265766,-0.012680674,0.049375735,-0.0030595253,0.0062104515,0.0254768,-0.015105203,-0.0333469,0.01231507,-0.033481598,-0.017953062,-0.0034539923,-0.076776765,0.002291036,0.040100947,0.048721496,-0.01801079,-0.001474441,-0.07061923,-0.019781081,-0.003978345,-0.0062345043,0.021185769,-0.03659885,0.022244096,-0.01993502,0.029690864,0.00678291,-0.0048971646,-0.0038484593,-0.008317483,-0.016731177,-0.013296427,-0.023148483,-0.016692692,-0.019030632,-0.02445696,-0.0131905945,-0.012295828,0.011785907,0.004723984,-0.011025836,0.008442557,-0.007903773,-0.0013818374,-0.041486394,-0.0070041963,0.012180374,-0.0003920618,0.041447908,0.019396236,0.00036229638,-0.009510505,0.009909783,0.007653624,0.025419075,0.02328318,0.016067319,-0.017635565,0.01206492,0.012892339,0.035963852,-0.0014227274,-0.0020793707,-0.007923015,-0.0058592795,-0.025919374,-0.01617315,-0.00006231197,-0.006792531,-0.0026602475,-0.00014980428,-0.009438347,0.01683701,0.00075886806,-0.009024637,0.006508707,0.012776885,0.001876124,-0.021589857,-0.04094761,-0.044603646,0.01707754,0.02588089,0.017943442,-0.005084777,0.017125644,-0.016125046,0.024938017,-0.0005165354,-0.042102147,-0.033885684,-0.0005805762,0.0264774,-0.028324662,-0.027862847,0.02865178,0.009236302,-0.030826159,0.0116896955,0.026515884,0.01599997,-0.031480398,0.0029921771,0.014229679,-0.02103183,-0.030710706,0.048529074,-0.029248292,0.012613325,-0.03896565,-0.012286207,-0.023725752,-0.0211088,0.005286821,-0.024591656,-0.047874834,0.023244694,0.024976501,0.025342105,-0.022224853,0.011343334,0.016259741,-0.032711904,-0.04633545,-0.0026458157,-0.0063066627,0.011122048,-0.0022477407,-0.0038171906,-0.0030426881,0.013017414,0.032269333,0.024495443,0.029844802,0.00444016,0.035309616,0.007129271,0.0030450935,0.0028671022,0.04002398,-0.023225453,0.02345636,0.012950066,-0.037907325,0.000046978264,0.004974134,0.01935775,0.010275386,0.013200216,0.031153278,-0.045180913,-0.015557397,0.024014387,0.042602446,-0.02940223,0.004697526,-0.0063114734,0.040177915,-0.0067588566,0.055571754,0.035425067,-0.016442543,0.013536956,0.048990887,-0.006628971,0.04926028,0.006576055,0.008235703,-0.027554968,-0.006460601,-0.023013787,-0.014874295,0.006258557,-0.017192991,-0.01617315,0.018722756,0.0067444253,-0.011834012,-0.03142267,-0.00829343,-0.0009116038,0.04179427,0.020839408,0.009269977,0.024861047,-0.0011803947,-0.019069117,-0.021089558,-0.0100541,-0.006008407,-0.0063018524,0.041601848,-0.006874311,-0.010689096,-0.008230893,-0.030556768,-0.019530931,0.01851109,-0.0016187582,-0.012469009,0.027554968,-0.024149083,-0.021763038,-0.00854839,-0.0038989703,-0.017106403,-0.019049874,0.017904958,-0.019502068,-0.045334853,-0.014094982,0.03550204,-0.05780386,-0.00322549,-0.013767864,-0.025746193,0.00888513,0.024514686,-0.0023259127,0.015605503,-0.015124446,-0.0023162914,-0.004339138,0.029209808,-0.002004807,0.004615746,0.005580266,0.0073697995,-0.025842404,-0.015547776,0.012959687,0.03575219,0.043372136,0.010169554,0.011256744,-0.017924199,-0.004786521,-0.027785877,0.007999985,-0.00089356414,-0.037811115,0.013161731,-0.0064461697,-0.0289789,-0.053801462,-0.026689066,-0.051299963,0.022167126,0.042640932,-0.02715088,-0.004642204,0.005224284,-0.017125644,-0.033212204,0.03761869,-0.007499685,-0.0060709445,-0.00653276,0.0126902945,0.037849598,-0.0076343813,0.0076007075,0.0028598865,-0.007095597,-0.021974703,0.016211635,0.008428126,0.005286821,-0.0011864079,0.022744395,-0.021089558,-0.043680016,-0.03482856,-0.027612695,-0.0363487,0.03559825,0.019001769,-0.018636165,0.039947007,0.014527935,0.011737801,0.012613325,-0.0024726351,0.007134082,-0.003937455,-0.016625345,-0.022013187,0.004336733,0.023398634,0.0062441253,0.016875494,0.0052675786,-0.017135266,-0.0007155729,0.018501468,-0.015961485,-0.018318666,0.041332453,0.00044437678,0.020916376,-0.028305419,-0.0010817779,0.0016103397,-0.011997572,-0.035194162,-0.010535157,0.009592285,-0.0126710525,0.024187567,-0.01390256,0.020262139,0.006123861,0.021820765,0.003886944,0.002520741,0.03869626,-0.0008256148,-0.031961456,0.036791272,0.012844233,0.013748622,0.014066119,-0.0063018524,0.019030632,-0.03802278,-0.040755186,0.0001389805,0.011275986,0.017779883,0.009654823,-0.0042309,-0.0050126184,-0.021589857,-0.005662046,0.023052271,0.019078737,0.008962099,-0.0029344503,0.003300054,-0.0077065397,-0.0017582648,-0.047105145,0.039023377,-0.009765466,0.010092584,0.022128642,-0.021974703,0.017895335,-0.007143703,-0.0019037848,-0.020223655,-0.026073312,-0.0032856222,-0.009197818,-0.015307248,0.027362546,0.027439516,-0.008187598,0.041447908,0.041063063,-0.0013349344,-0.019877292,0.010833413,-0.023860449,0.0146914935,-0.030152678,-0.0028935603,-0.01080455,0.0035405827,-0.014874295,-0.038176715,-0.0011840026,0.020743197,0.037503235,-0.02772815,-0.027997542,-0.035983097,-0.03067222,0.022186369,0.019338509,-0.027362546,0.0023463576,0.012363176,-0.015643988,0.013277185,-0.0026650582,0.0043102745,0.04698969,-0.010140691,0.016683072,-0.014258542,-0.018616922,-0.0041178516,-0.011574241,0.006677077,-0.0022477407,-0.0077017294,-0.053801462,-0.02805527,-0.02412984,-0.031730548,0.020723954,0.010535157,-0.0075093065,-0.016634965,-0.006893553,0.06461563,0.012882718,-0.012776885,-0.0056331824,-0.013046278,0.020589259,0.020723954,-0.022667427,0.015615124,0.023995144,-0.024264537,-0.0137101365,-0.013681273,-0.006980143,-0.011324092,0.019992746,-0.024841806,0.011882118,-0.0134503655,0.00004100263,0.018549575,0.009101607,-0.009294029,-0.008254945,0.04525788,0.010323492,0.0018653001,0.0069753327,0.02932526,0.030845402,-0.020550773,-0.026881488,0.023417875,-0.014681873,0.02093562,0.0038051642,0.041178517,0.026592854,-0.012882718,0.0149512645,-0.01231507,0.015114824,0.025284378,0.022455761,0.024091356,-0.037253086,0.023648784,-0.013421502,0.02362954,-0.012238101,-0.012122647,0.023417875,-0.012892339,0.007307262,-0.012796127,0.03819596,0.067425005,0.0174239,0.002132287,0.016384816,-0.041486394,-0.005036671,-0.01967525,0.0042357105,-0.0329813,-0.0022934412,-0.0254768,-0.006099808,-0.019954262,-0.011131668,0.023668025,0.018780481,-0.003292838,-0.0095201265,0.03702218,0.0059603015,0.0019374588,-0.0041010147,-0.015605503,0.0033313227,-0.0116896955,-0.0011377009,0.014277784,-0.0017197803,-0.013411881,0.010236902,-0.03929277,-0.028189965,-0.010525537,-0.003619957,0.020088958,0.030499041,-0.036925968,-0.048490588,0.0067155617,-0.021147285,-0.0065616234,0.04029337,-0.010179175,0.019992746,0.015634365,0.018289803,-0.0129308235,-0.016269362,0.022590457,-0.01607694,-0.04633545,-0.0062248833,0.030056467,0.029787077,-0.053647526,0.0028863444,-0.0072735883,-0.005536971,-0.01608656,0.026015585,0.007913395,0.018222455,0.01783761,-0.0092603555,0.0022176746,-0.02270591,0.000036887333,0.0031677631,-0.008976531,-0.0009657228,-0.013585062,-0.010159933,-0.0073842313,0.020262139,-0.018376393,0.0035453932,0.0026506265,0.014816568,-0.019742597,0.028112996,0.0006758857,-0.018491847,0.00007561621,-0.023918176,-0.019723354,0.028170723,0.007990364,0.02605407,0.0054167067,0.0070811654,-0.0030474989,0.017981926,0.009284408,0.010063721,0.015451564,0.0006398064,0.013113625,-0.03744551,-0.011718559,0.02463014,0.008283809,0.002412503,0.03713763,0.014094982,0.014171951,0.0005814782,-0.02253273,0.020531531,0.010727581,-0.0073361257,0.017520111,-0.005796742,-0.00427179,0.05118451,0.02270591,-0.02453393,0.012603705,-0.007663245,-0.033577807,-0.011574241,0.006600108,-0.05291632,0.025496043,-0.035886884,-0.022590457,-0.02522665,0.00044527877,-0.06450018,-0.012199616,-0.008933237,0.013806348,-0.03307751,-0.031114794,0.041486394,-0.018030033,-0.034655377,-0.012295828,-0.03819596,0.02035835,-0.031095551,-0.0053253057,0.034559164,-0.0373493,0.036925968,0.020993346,0.028921172,0.0046470147,-0.023321664,-0.023687268,-0.024149083,0.006109429,-0.0201082,0.0051136403,-0.0033024591,0.0024173136,0.014595282,-0.009433536,0.011997572,-0.04044731,0.018818967,0.017106403,0.031461157,-0.014220057,-0.0196079,-0.034963254,0.04791332,0.00452675,0.026381189,0.03602158,-0.0008400465,0.025361348,-0.060497783,0.035617493,0.029113594,-0.023052271,0.008274187,0.039485194,-0.031634334,-0.004413702,-0.015384217,0.0076295706,-0.0060276496,0.011439546,0.018126244,0.0002118156,-0.0018689081,-0.012209238,0.031211006,0.025919374,0.020743197,-0.038830955,0.031384185,-0.0029777454,0.0031196573,-0.005469623,0.023494845,-0.0070041963,-0.0048346273,0.0058496585,-0.01775102,0.01089114,0.031057067,0.02680452,0.020377593,0.06342261,-0.020589259,-0.03165358,0.007134082,-0.021416677,0.0015562208,-0.016788904,-0.039408226,-0.0037738956,-0.019502068,0.0323463,-0.02715088,-0.013257942,-0.0042910324,-0.017866474,0.003944671,-0.005652425,-0.008101007,-0.014383617,-0.018068517,0.025419075,0.020377593,0.010371598,-0.0008514716,0.025419075,-0.035963852,0.038234442,0.013739,0.03032586,0.022378791,0.0017979521,0.0095201265,-0.027073912,-0.015355353,0.03987004,0.015923,0.023494845,0.004517129]},{"id":"level-order-traversal-of-binary-tree","name":"Level Order Traversal of Binary Tree","description":"Given a binary tree `root`, return the level order traversal of it as a nested list, where each sublist contains the values of nodes at a particular level in the tree, from left to right.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/a4639809-0754-4eda-221f-a4cd58bd9c00/public)\n\n```java\nInput: root = [1,2,3,4,5,6,7]\n\nOutput: [[1],[2,3],[4,5,6,7]]\n```\n\n**Example 2:**\n\n```java\nInput: root = [1]\n\nOutput: [[1]]\n```\n\n**Example 3:**\n\n```java\nInput: root = []\n\nOutput: []\n```\n\n**Constraints:**\n* `0 <= The number of nodes in both trees <= 1000`.\n* `-1000 <= Node.val <= 1000`\n","difficulty":"Medium","concepts":["Breadth-First Search"],"solutions":{"python":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nclass Solution:\n    def levelOrder(self, root: Optional[TreeNode]) -> List[List[int]]:\n        res = []\n        q = deque()\n        if root:\n            q.append(root)\n\n        while q:\n            val = []\n\n            for i in range(len(q)):\n                node = q.popleft()\n                val.append(node.val)\n                if node.left:\n                    q.append(node.left)\n                if node.right:\n                    q.append(node.right)\n            res.append(val)\n        return res\n","javascript":"/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     constructor(val = 0, left = null, right = null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {TreeNode} root\n     * @return {number[][]}\n     */\n    levelOrder(root) {\n        const res = [];\n        const q = [];\n        if (root) {\n            q.push(root);\n        }\n\n        while (q.length > 0) {\n            const val = [];\n\n            for (let i = 0, len = q.length; i < len; i++) {\n                const node = q.shift();\n                val.push(node.val);\n                if (node.left) {\n                    q.push(node.left);\n                }\n                if (node.right) {\n                    q.push(node.right);\n                }\n            }\n            res.push(val);\n        }\n        return res;\n    }\n}\n","cpp":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n\nclass Solution {\npublic:\n    vector<vector<int>> levelOrder(TreeNode* root) {\n        vector<vector<int>> res;\n        deque<TreeNode*> q;\n        if (root) {\n            q.push_back(root);\n        }\n\n        while (!q.empty()) {\n            vector<int> val;\n\n            for (int i = 0, len = q.size(); i < len; i++) {\n                TreeNode* node = q.front();\n                q.pop_front();\n                val.push_back(node->val);\n                if (node->left) {\n                    q.push_back(node->left);\n                }\n                if (node->right) {\n                    q.push_back(node->right);\n                }\n            }\n            res.push_back(val);\n        }\n        return res;\n    }\n};\n","java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    public List<List<Integer>> levelOrder(TreeNode root) {\n        List<List<Integer>> res = new ArrayList<>();\n        Deque<TreeNode> q = new ArrayDeque<>();\n        if (root != null) {\n            q.add(root);\n        }\n\n        while (!q.isEmpty()) {\n            List<Integer> val = new ArrayList<>();\n\n            for (int i = 0, len = q.size(); i < len; i++) {\n                TreeNode node = q.poll();\n                val.add(node.val);\n                if (node.left != null) {\n                    q.add(node.left);\n                }\n                if (node.right != null) {\n                    q.add(node.right);\n                }\n            }\n            res.add(val);\n        }\n        return res;\n    }\n}\n","csharp":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n \npublic class Solution {\n    public List<List<int>> LevelOrder(TreeNode root) {\n        var res = new List<List<int>>();\n        var q = new Queue<TreeNode>();\n        if (root != null) {\n            q.Enqueue(root);\n        }\n\n        while (q.Count > 0) {\n            var val = new List<int>();\n\n            for (int i = 0, len = q.Count; i < len; i++) {\n                var node = q.Dequeue();\n                val.Add(node.val);\n                if (node.left != null) {\n                    q.Enqueue(node.left);\n                }\n                if (node.right != null) {\n                    q.Enqueue(node.right);\n                }\n            }\n            res.Add(val);\n        }\n        return res;\n    }\n}\n"},"starterCode":{"python":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nclass Solution:\n    def levelOrder(self, root: Optional[TreeNode]) -> List[List[int]]:\n        ","javascript":"/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     constructor(val = 0, left = null, right = null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {TreeNode} root\n     * @return {number[][]}\n     */\n    levelOrder(root) {}\n}\n","cpp":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n\nclass Solution {\npublic:\n    vector<vector<int>> levelOrder(TreeNode* root) {\n        \n    }\n};\n","java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    public List<List<Integer>> levelOrder(TreeNode root) {\n        \n    }\n}\n","csharp":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n \npublic class Solution {\n    public List<List<int>> LevelOrder(TreeNode root) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/6ZnyEApgFYg","embedding":[0.02579229,0.015913133,-0.0013901807,-0.053043775,0.013310241,0.0041237096,-0.044564657,0.00054689066,-0.06136514,0.070080884,0.030268474,0.021256948,-0.041291326,-0.02259783,0.0056198793,-0.024707751,0.0217302,-0.008557992,-0.019639999,0.05679036,0.016169477,-0.02579229,0.056672048,-0.043539274,0.03229952,-0.0023527083,0.025319036,0.025279598,-0.0062065157,-0.015124377,0.063534215,-0.005329026,0.008099528,0.052649397,-0.0012755648,-0.0013347213,0.06156233,0.011318634,0.011515823,0.02910506,-0.031629074,0.014572249,-0.03015016,-0.0155581925,-0.0002722129,-0.008518554,-0.03135301,-0.012452469,-0.020803412,0.026857108,-0.030386787,0.03135301,0.020566788,0.027192328,-0.06783293,-0.020665381,-0.036677107,0.02190767,-0.021690762,0.043854777,0.03929972,-0.016800482,0.023603493,0.02417534,0.04961269,0.008646727,0.01874279,-0.03663767,0.019501967,-0.04034482,-0.059274938,-0.012067951,-0.033265743,-0.024451405,0.044091403,0.02593032,0.03263474,0.0067389254,0.036065824,-0.07071189,-0.015124377,-0.019925924,0.069489315,-0.013034176,0.005925522,-0.040206786,-0.018377991,-0.04365759,-0.04697036,-0.07820506,-0.018525884,-0.03957578,0.037643332,0.028079677,0.00003808978,-0.03084032,0.032141767,0.03612498,-0.0030761445,0.018279398,-0.01997522,-0.059156626,0.0010882354,-0.038451806,-0.0066156825,0.02944028,0.029736064,0.01593285,-0.07903325,0.010234096,-0.0021518222,-0.0568298,0.028000802,-0.02104004,0.022380924,-0.018624477,-0.046339355,-0.023071084,-0.01841743,0.011012992,0.061759517,-0.07012032,-0.025871163,-0.0054719876,-0.04712811,0.018841386,0.014365201,0.0052846586,0.026147228,-0.011525682,0.043736465,0.017273735,-0.011249619,0.010667912,-0.05501566,0.0063149696,0.0009754681,0.015282128,0.015676506,0.0031993876,-0.013172208,-0.020941446,-0.0019497038,-0.015449739,0.0026497238,-0.0033053765,-0.044682972,0.050914135,-0.026699357,0.03135301,0.041449074,0.0020840387,0.0033719277,0.020547068,0.0064086346,-0.0074438755,-0.0043751253,0.020606225,0.01771741,-0.022479517,0.013960963,-0.022972489,0.021473855,-0.016406104,-0.023642931,0.026443012,-0.015715944,0.009262942,0.015114518,-0.036677107,0.0057776305,-0.02417534,0.07449791,-0.017401908,0.019472389,-0.0006128257,-0.041804016,0.03561229,-0.012363735,0.02908534,-0.016514558,0.016662449,-0.033541806,-0.022972489,0.009898875,0.031786826,0.0015750452,-0.027783895,-0.042158954,0.021079477,0.0035814408,0.031510763,-0.0037120783,0.05414803,0.03137273,0.0035124246,0.01912731,-0.008602359,0.0014789157,0.007310773,-0.0027359938,0.025812007,-0.021178072,0.018348413,0.015291988,-0.0072023193,-0.035710882,0.007991075,0.008814337,-0.04949438,0.04436747,0.0005906419,-0.002068017,0.0014826129,-0.014010261,0.00841503,0.007345281,-0.01893998,0.027133172,0.030367067,0.0112299,-0.0024562324,0.011298915,0.032831926,0.017382188,0.015262409,-0.021099197,-0.021769637,0.034429155,-0.0047300654,0.01524269,0.0056741065,0.0070889355,0.0013975753,-0.014789157,-0.005979749,-0.046536546,-0.027389517,-0.030879758,-0.04420972,0.034606624,0.01683006,-0.004720206,-0.009691827,-0.0024044702,-0.023110522,0.0014752183,0.0108946785,-0.018437149,0.019590702,0.023011927,-0.0168202,-0.051111326,-0.041370198,-0.021454137,-0.01069749,0.011791888,-0.008927721,0.037012327,-0.019531546,-0.01929492,0.012452469,-0.0350996,-0.05769743,-0.020606225,-0.07658811,0.028474055,-0.0071086544,-0.03084032,0.028730402,0.04184345,-0.05611992,0.04570835,-0.02330771,0.00084113324,-0.0026793021,0.009341817,-0.019068152,-0.010579176,-0.049691565,-0.02157245,0.036874298,0.060615823,0.005348745,-0.010608755,0.023287991,-0.014049699,-0.0035272138,0.0096376,0.0066699097,-0.0165047,0.013635602,-0.015715944,-0.025752852,-0.02119779,0.0005398042,0.016958233,0.035671446,0.030919196,-0.05623823,-0.03663767,-0.048311245,-0.006176938,0.036578514,0.0035173544,-0.08250377,0.015114518,0.029499438,-0.049178876,0.02472747,-0.008178404,0.05765799,0.025299316,0.012482048,-0.02084285,-0.05817068,0.005876225,-0.055883292,-0.013073614,0.0034162952,0.0123933125,-0.006241024,0.011929919,0.064796224,0.026521888,0.039772972,-0.04819293,0.036065824,0.005856506,-0.025259878,0.0068325903,-0.031471323,-0.0003989991,0.008321365,-0.041488513,-0.008183333,0.044288594,0.030662851,-0.03683486,0.04381534,0.059314378,0.001603391,0.02050763,-0.008730532,-0.044051968,-0.013201787,0.011801747,0.033778433,0.018979417,0.02188795,-0.035750322,-0.049533814,0.030091003,-0.007749518,-0.016583573,0.014227169,-0.007912199,0.0044959034,0.020409036,0.01997522,-0.055883292,-0.015262409,-0.033758715,-0.03450803,0.016376525,0.015508895,0.00341876,0.0006106689,0.010401706,0.015863836,0.02224289,0.015706085,0.009129839,0.0051663453,-0.006891747,-0.016159618,0.00012586189,0.014187731,-0.012136968,0.028355742,-0.020468192,0.003031777,-0.0099678915,0.029203653,0.018151224,0.015104658,0.050716948,0.01630751,-0.00035401544,-0.013093333,0.027488112,0.00893265,0.06207502,0.035454538,0.027606426,0.008434749,0.030169878,0.036933452,0.045511164,0.008025582,0.015055361,0.028099397,-0.012117249,0.002113617,-0.042868834,-0.06219333,0.04239558,0.017125843,0.0067882226,-0.04874506,-0.03070229,0.027803615,-0.0015023318,-0.024096465,-0.012403172,0.0067093475,-0.006645261,-0.050085943,-0.038727872,0.018516025,-0.005664247,-0.014611687,0.00050560426,0.038392648,0.031451605,0.029696627,0.0069213253,0.010470723,0.0395955,0.018180802,0.02104004,0.025121847,-0.03330518,-0.000025361092,0.028296586,0.033423495,0.016741324,0.033324897,-0.00076287397,-0.009277731,-0.013606024,0.011289056,0.027290924,-0.010766506,0.0043233633,0.019117448,0.026502168,0.055252288,0.007764307,-0.035355944,0.01506522,0.03703205,-0.0009298682,-0.037761647,-0.007660783,-0.022361204,0.0273698,0.016958233,0.0120186545,-0.008607289,-0.05048032,0.05489735,0.018476587,0.0072614755,0.017106123,-0.023800682,0.0034680571,-0.0135172885,0.03170795,-0.06235108,0.043933652,0.0006257662,-0.009864368,-0.013744056,-0.0006433283,0.04629992,0.043066025,0.015844116,-0.036677107,-0.013921526,-0.016869498,-0.03086004,0.014365201,0.0017623744,0.047956303,-0.0049666916,0.044998474,0.0052156425,-0.030583976,-0.012738394,0.0051466264,-0.0037391917,0.017638534,-0.00429132,0.05489735,0.021118915,-0.022380924,-0.04330265,0.0135172885,-0.01893998,-0.015715944,-0.031057227,0.000023281367,-0.024609156,-0.005541004,-0.0750106,-0.02453028,0.04278996,0.029834658,0.057263613,-0.023918996,-0.016780762,-0.028119115,-0.007946706,0.018151224,-0.020803412,-0.022538675,-0.013783494,-0.0035888352,-0.009563655,-0.015735662,-0.014690562,0.055528354,0.007798815,0.005181134,-0.0017783961,-0.010539738,0.01576524,-0.017835723,-0.020803412,0.013073614,-0.02506269,0.004961762,0.047601365,-0.014966627,0.026541606,0.024628876,0.02155273,0.01349757,0.003278263,-0.008794618,0.02472747,0.0017229368,-0.034981284,0.008183333,-0.025910601,0.006990341,-0.02417534,0.003206782,0.025989477,0.021789357,-0.027330361,-0.020251285,-0.046378795,-0.009593233,-0.0013273268,-0.0015910667,-0.0023674974,0.03275305,0.013458132,0.0058614356,-0.0068079415,0.000006850576,0.021454137,0.002437746,0.0023773569,-0.011131305,0.012245421,0.02190767,0.0142468875,0.064875096,-0.020823132,-0.008730532,-0.01840757,0.019758312,-0.01912731,0.004503298,-0.03892506,0.0016428288,-0.008612218,-0.013408835,-0.013122912,-0.057776306,-0.00057400414,-0.0044983686,0.0023995405,0.033403773,0.039279997,0.04570835,-0.017569518,0.017086405,0.039378595,0.015183534,0.02648245,-0.026541606,-0.031116385,0.022913333,-0.016583573,0.011072149,0.009543936,-0.0255951,0.027665582,0.002383519,0.04850843,-0.00005414988,-0.021079477,0.031984016,0.043933652,-0.016021585,0.031471323,0.006872028,-0.047443613,-0.015942711,0.0037071486,0.015745522,0.009548865,0.0045476654,0.017224437,0.02944028,0.009420693,0.020665381,0.012462329,-0.0037071486,0.042158954,0.017835723,0.021079477,-0.03101779,0.033975624,-0.0053586042,0.023682369,-0.040542006,0.028690964,0.01665259,0.03125442,0.010214377,-0.05347759,-0.0023773569,-0.013044036,0.0049173944,0.0069016065,0.03399534,0.027882488,-0.040542006,-0.033443213,-0.031826265,0.034764376,-0.006413564,0.029676907,-0.035415098,-0.016563855,0.010924256,0.00026420213,0.028612088,0.01980761,-0.010293253,0.029006464,-0.030820603,-0.055094536,-0.016041305,0.0015972289,0.002925788,-0.024431687,0.027645864,0.0336404,-0.01243275,-0.01261022,-0.0060043973,0.039851848,0.0064086346,-0.01489761,0.0062508835,0.01912731,0.007907269,-0.018082209,-0.02750783,-0.025141565,0.008725602,0.012136968,-0.020182269,-0.030051565,0.002245487,0.010224237,-0.030800883,0.049731,0.009918594,0.0025659187,-0.034291122,-0.010569317,-0.02295277,-0.007848112,-0.003315236,-0.0155581925,-0.042356145,0.0041237096,-0.02579229,0.011367931,0.020192128,0.064441286,0.04590554,-0.06408634,-0.005245221,-0.007818534,-0.014444076,-0.0025979618,-0.03766305,0.017510362,-0.031136103,0.03555313,0.012363735,-0.030426225,0.010391847,0.0017512826,0.011446807,0.024431687,-0.0046733734,0.013921526,0.013024317,0.0107073495,0.03190514,-0.017658252,-0.042711083,0.01175245,0.043894216,-0.008069949,0.003926521,0.020231565,-0.024234498,0.003734262,-0.020586506,-0.021118915,-0.029874096,0.03312771,0.018170943,0.0075671184,-0.038451806,0.018092068,-0.055764977,0.03490241,0.0040226504,0.011082008,-0.0016415963,0.005245221,0.02190767,-0.022223173,-0.012738394,-0.010204518,-0.019501967,0.03192486,-0.06432297,0.03125442,-0.0006476418,0.0016798016,-0.020724537,-0.031845983,0.012748253,0.006236094,-0.009484779,-0.037091203,-0.0021777032,-0.007641064,-0.034961566,-0.006975552,-0.01771741,-0.04089695,0.007621345,-0.00998761,-0.011160883,-0.0045205522,0.013527148,0.04172514,0.012383454,-0.005664247,0.057894617,-0.003647992,0.0050874697,0.018535743,0.008045301,0.0013556726,-0.025161285,-0.025989477,-0.045392852,0.031136103,0.018289257,-0.006275532,0.0094995685,0.028533213,0.01524269,0.007167811,-0.0021419628,-0.047088675,-0.036755983,-0.047916867,-0.024411967,0.0016452937,0.005910733,-0.0052156425,-0.022282328,0.0039708884,-0.024983814,-0.06396803,-0.006817801,0.02770502,0.005925522,-0.020349879,-0.021355541,0.03346293,0.014690562,-0.050677508,-0.025003534,0.017490642,-0.027310641,0.0449196,-0.03523763,0.013990542,0.005045567,-0.00007336808,-0.039161686,-0.04018707,0.005048032,0.013251084,0.029558593,-0.009297449,0.012215843,0.011653855,-0.03647992,0.032733332,0.03032763,0.0010746787,-0.00089289533,-0.018949838,0.062784895,-0.0062952507,-0.02715289,0.036302447,0.0032684035,0.011427088,0.055173412,0.0035148894,-0.0076854317,0.010855241,0.0027433885,-0.0023909137,0.013960963,-0.08057132,-0.026048634,0.023366867,-0.00039283696,-0.00052131776,0.0054226904,-0.048823934,0.0013458133,0.008617149,0.0022960166,0.0020298117,-0.05115076,0.029519156,-0.01629765,0.018200522,0.00015836721,-0.015804678,0.02890787,0.006872028,-0.0028419828,-0.019393513,0.0023071084,-0.03588835,-0.010579176,0.003766305,0.011604558,0.010569317,0.023090802,-0.0112693375,-0.012482048,-0.0036578514,0.01175245,0.010051697,-0.048311245,-0.018289257,0.0018634337,0.021059759,0.027074015,0.013793353,0.02052735,0.000043982334,0.012728534,-0.025950039,0.031826265,0.025200723,0.028296586,-0.013753915,0.0032141767,0.02224289,0.017628673,0.0083854515,-0.019087872,0.012136968,-0.0010611219,0.017589236,0.0007604091,-0.0078234635,-0.0049888752,-0.022518955,0.03770249,0.014937048,0.034586906,-0.017963896,-0.012127108,0.0025511296,-0.012058092,-0.011003132,-0.031510763,-0.012817269,-0.030445943,0.039536346,0.029696627,0.013063755,0.0015577911,0.00056660955,-0.019028714,0.010263675,-0.0066403314,-0.03330518,-0.0018252283,0.01455253,-0.026028914,-0.031234698,-0.037426423,0.027290924,0.020103393,-0.024057027,0.006926255,0.010756646,0.0020359738,-0.0142468875,-0.026916264,0.021375261,-0.034862973,-0.039201126,0.0018683635,-0.027764177,-0.009923524,-0.04085751,-0.03766305,-0.010086205,0.0021296386,-0.0048335893,0.00561002,-0.016751185,0.06321871,0.014483513,0.06467791,0.0056691766,-0.00019395362,0.0012644728,-0.012876426,-0.025614819,-0.014039839,-0.011860903,0.032891084,0.017796285,0.0076114857,-0.018801948,-0.0007043336,0.053162087,0.024786625,-0.0032018523,0.006645261,-0.0021062223,0.024254216,-0.01562721,0.02348518,-0.0035346083,-0.023248553,0.03226008,0.012551064,-0.027685301,-0.007907269,-0.010086205,0.009903805,0.0067734336,0.0061276406,0.04381534,-0.052452207,-0.032989677,0.03141217,0.015538474,-0.025733132,-0.016751185,-0.009598162,0.031333294,0.010303113,0.058801685,0.03610526,-0.009563655,0.014000401,0.022045702,-0.017954037,0.058683373,-0.021533012,-0.004503298,-0.030031847,-0.027054297,-0.020123113,-0.0081044575,0.018693494,-0.012698956,0.051742326,0.02715289,0.0511902,0.00420998,-0.032693896,-0.014000401,0.014789157,0.036164418,0.017283594,-0.0011363002,0.029065622,-0.03346293,-0.017766707,-0.041291326,0.021671044,-0.002856772,0.01138765,0.0508747,0.005999468,-0.008390381,0.0064924397,-0.0055804416,-0.0044786497,0.014296184,-0.002610286,-0.02488522,0.01613004,-0.022420362,-0.02050763,0.013793353,0.010687631,-0.030288192,-0.009100261,0.029065622,-0.018644197,-0.017727269,-0.03220092,0.019590702,-0.017677972,0.004242023,-0.021355541,-0.00805023,-0.00184125,0.03137273,0.0015984613,-0.023702089,-0.04803518,-0.016524417,0.010934116,0.00011022543,0.022223173,0.0046388656,0.016445542,0.024135903,-0.05363534,-0.019176606,-0.0016699423,0.029203653,0.03732783,-0.0051071886,0.026502168,-0.035513695,0.016218774,-0.04227727,0.037840523,0.012560924,-0.04152795,0.010608755,-0.02084285,-0.011141164,-0.044091403,-0.021375261,-0.02750783,0.022972489,0.033561524,0.0025314107,-0.017816003,0.0121961245,-0.01662301,0.002174006,0.039339155,-0.012501767,-0.03385731,0.006255813,0.017372329,0.012235562,-0.015577911,0.013221506,-0.00928759,0.011200321,-0.008484046,0.022420362,0.0030490311,0.001640364,0.013990542,0.00893265,-0.023445742,-0.061128512,-0.030583976,-0.018368132,-0.010381987,0.028119115,0.052609958,-0.026699357,0.0050233835,-0.0061473595,-0.02437253,-0.0011911433,-0.018476587,-0.009317168,-0.017520221,0.008804478,-0.005974819,-0.011141164,-0.0003404587,0.0018153689,0.047561925,-0.00009628357,-0.033936184,-0.0013297916,0.014493373,-0.008286857,0.017746987,0.039339155,-0.02401759,-0.020783694,-0.029381124,0.0043726605,-0.024392249,-0.004084272,-0.020980883,-0.015301847,-0.009282661,0.0060142567,0.011200321,0.006571315,0.017037109,-0.005161416,0.040739197,0.008957299,0.014010261,0.04089695,0.0061867973,-0.03399534,0.012058092,0.029026184,0.011367931,-0.028336024,-0.011072149,0.033167146,-0.023583775,-0.031431887,-0.029834658,0.010539738,-0.025516225,0.018999137,-0.025338754,0.01717514,0.0045131575,0.008745321,0.014858172,0.0095094275,0.017559659,-0.007231897,-0.0076558534,-0.028178273,-0.014424358,-0.04645767,0.016889216,0.027665582,-0.011072149,0.004486044,-0.025516225,0.0031969226,-0.0001657618,-0.0067438553,0.012600361,0.029854378,-0.010727068,0.007271335,-0.0019386119,-0.014345482,0.038392648,-0.004924789,0.015508895,0.024668314,0.014483513,-0.017914599,0.01506522,-0.0192752,0.002392146,-0.017618814,-0.0046413303,0.006674839,0.0036184136,-0.013113052,-0.04046313,0.01367504,-0.01822024,0.04326321,-0.011772169,-0.03683486,-0.011131305,-0.028099397,0.02683739,0.01697795,-0.038353212,-0.0017759312,0.002731064,0.0016724071,-0.005462128,0.019748453,-0.015439879,0.0028247288,-0.0040423693,-0.011929919,0.005020919,-0.012008795,-0.016770903,0.003014523,0.053871967,0.0021210115,0.021178072,0.010362268,-0.020271003,-0.03153048,-0.0078234635,0.022302048,-0.009711546,-0.017658252,-0.020103393,0.014177871,0.07236827,0.022341486,-0.0020088605,0.0068128714,-0.003840251,-0.0135172885,0.010884819,-0.028513493,-0.00067906873,0.020882288,-0.038806748,-0.025969759,0.021848513,-0.0142567465,0.0041951905,-0.005481847,0.0077396585,-0.012156687,-0.0065811747,0.020724537,-0.0135074295,-0.0041976557,-0.0061079217,-0.026699357,0.036499638,-0.009869297,0.00055952306,0.0013963429,0.04012791,0.010549598,-0.01963014,0.004414563,0.0032388251,-0.00999254,0.02015269,-0.000066897825,0.0431449,0.019896345,-0.031845983,0.004836054,-0.01860476,-0.013241225,0.029006464,0.010480582,0.040936384,-0.026166948,0.01667231,-0.030524818,0.023761244,-0.027448675,0.025003534,-0.021868233,0.012176406,0.0018387851,0.0071826004,0.0155680515,0.04507735,0.028690964,0.018673774,0.01489761,-0.024352811,-0.011959498,-0.033384055,0.018801948,-0.04259277,0.018476587,-0.045156226,-0.002664513,-0.010648193,0.010549598,0.0121961245,0.022164015,-0.039201126,0.0062853913,0.019570984,0.030091003,0.025496505,0.008843916,-0.0034927058,-0.019541405,-0.0008879656,0.0133201005,0.007167811,-0.011496104,-0.029164216,0.013241225,-0.051978953,-0.00093664654,-0.0011825163,-0.006960763,0.033561524,0.002082806,-0.020783694,-0.05292546,0.008301646,-0.015528614,0.0008990575,0.023268273,0.031392448,0.023761244,0.020231565,0.010391847,-0.00858757,-0.002340384,0.008577711,0.011003132,-0.020428754,-0.01244261,0.05186064,0.033384055,-0.0476408,-0.02910506,-0.01455253,-0.0028888152,0.0069656926,0.014276465,-0.0016687098,0.035139035,0.010618614,-0.0073304917,-0.034764376,-0.04503791,-0.032713614,0.02577257,0.015114518,-0.01910759,-0.006029046,-0.005940311,0.007853042,0.023347149,-0.009105191,-0.01963014,0.010648193,-0.025969759,0.01175245,0.012491907,0.0031821334,-0.023918996,-0.0123933125,0.015706085,-0.020744257,0.012491907,0.018121647,0.021868233,-0.010766506,0.007576978,0.0037736997,0.026561325,0.019413233,0.03433056,0.024510562,-0.022045702,0.009351676,-0.0068818876,-0.0119102,0.01596243,0.01893998,-0.016938513,-0.0018474121,0.0040719477,-0.0119102,0.025693694,-0.043578714,0.032220643,0.014365201,-0.015015923,0.026068352,-0.0066156825,0.023918996,0.053595904,0.022144297,-0.02890787,0.014148293,0.013606024,-0.041409638,-0.006556526,0.006517088,-0.044998474,0.030307911,-0.030169878,-0.0021247088,-0.005245221,-0.032476988,-0.041330762,0.0055607227,-0.018377991,0.019669577,-0.023347149,-0.031116385,0.008715743,-0.015232831,-0.034803815,-0.016859638,0.00753754,0.018456867,-0.01945267,0.026640201,0.0015738127,-0.009800281,0.037840523,0.045629475,0.011663714,0.022025984,-0.00068399846,-0.016327228,-0.029124778,-0.0055804416,0.0017710015,0.017313173,-0.02804024,0.012935582,0.017411767,-0.023524618,0.026896546,0.020921726,0.033403773,0.004767038,0.013231365,-0.015469458,-0.042829398,0.0061029918,0.019324498,0.016238494,-0.026857108,0.023366867,-0.00841996,0.0099777505,-0.038648997,0.015873695,0.011959498,-0.015913133,0.0067389254,0.043973092,-0.006591034,0.02699514,-0.024490843,0.0037391917,0.014562389,0.006453002,-0.016011726,0.01699767,0.021079477,0.023071084,0.02628526,0.022380924,0.015508895,-0.030091003,0.041764576,-0.011851044,0.010658052,0.0012841917,-0.0064875097,-0.026147228,-0.0058614356,0.015489176,-0.00806502,-0.014049699,0.019354075,0.029538875,-0.01157498,0.07520779,-0.026640201,-0.034310844,0.04436747,-0.001121511,0.022814738,-0.020744257,-0.027961364,-0.006216375,-0.03961522,0.019393513,0.0078234635,-0.018851245,-0.0068079415,-0.011515823,-0.021256948,0.007572048,-0.0043775905,0.008148825,0.015844116,0.0045895684,0.015341285,-0.0041311043,-0.016593434,0.0041483585,-0.028079677,0.011062289,0.03103751,0.044959035,0.014739859,0.017461063,0.010372128,-0.02979522,-0.010480582,0.039063092,0.029558593,0.016386386,-0.008799548]},{"id":"valid-binary-search-tree","name":"Valid Binary Search Tree","description":"Given the `root` of a binary tree, return `true` if it is a **valid binary search tree**, otherwise return `false`.\n\nA **valid binary search tree** satisfies the following constraints:    \n* The left subtree of every node contains only nodes with keys **less than** the node's key.\n* The right subtree of every node contains only nodes with keys **greater than** the node's key.\n* Both the left and right subtrees are also binary search trees.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/18f9a316-8dc2-4e11-d304-51204454ac00/public)\n\n```java\nInput: root = [2,1,3]\n\nOutput: true\n```\n\n**Example 2:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/6f14cb8d-efad-4221-2beb-fba2b19c8a00/public)\n\n```java\nInput: root = [1,2,3]\n\nOutput: false\n```\n\nExplanation: The root node's value is 1 but its left child's value is 2 which is greater than 1.\n\n**Constraints:**\n* `1 <= The number of nodes in the tree <= 1000`.\n* `-1000 <= Node.val <= 1000`\n","difficulty":"Medium","concepts":["Binary Tree","Binary Search Tree","Depth-First Search"],"solutions":{"python":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nclass Solution:\n    def isValidBST(self, root: Optional[TreeNode]) -> bool:\n        def valid(node, left, right):\n            if not node:\n                return True\n            if not (left < node.val < right):\n                return False\n\n            return valid(node.left, left, node.val) and valid(\n                node.right, node.val, right\n            )\n\n        return valid(root, float(\"-inf\"), float(\"inf\"))\n","javascript":"/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     constructor(val = 0, left = null, right = null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {TreeNode} root\n     * @return {boolean}\n     */\n    isValidBST(root) {\n        return this.valid(root, -Infinity, Infinity);\n    }\n\n    /**\n     * @param {TreeNode} node\n     * @param {number} left\n     * @param {number} right\n     * @return {boolean}\n     */\n    valid(node, left, right) {\n        if (!node) {\n            return true;\n        }\n        if (!(left < node.val && node.val < right)) {\n            return false;\n        }\n\n        return (\n            this.valid(node.left, left, node.val) &&\n            this.valid(node.right, node.val, right)\n        );\n    }\n}\n","cpp":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n\nclass Solution {\npublic:\n    bool isValidBST(TreeNode* root) {\n        return valid(root, LONG_MIN, LONG_MAX);\n    }\n\nprivate:\n    bool valid(TreeNode* node, long left, long right) {\n        if (!node) {\n            return true;\n        }\n        if (!(left < node->val && node->val < right)) {\n            return false;\n        }\n\n        return valid(node->left, left, node->val) && valid(node->right, node->val, right);\n    }\n};\n","java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\npublic class Solution {\n    \n    public boolean isValidBST(TreeNode root) {\n        return valid(root, Double.NEGATIVE_INFINITY, Double.POSITIVE_INFINITY);\n    }\n\n    private boolean valid(TreeNode node, double left, double right) {\n        if (node == null) {\n            return true;\n        }\n        if (!(left < node.val && node.val < right)) {\n            return false;\n        }\n\n        return valid(node.left, left, node.val) && valid(node.right, node.val, right);\n    }\n}\n","csharp":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\npublic class Solution {\n    \n    public bool IsValidBST(TreeNode root) {\n        return Valid(root, double.NegativeInfinity, double.PositiveInfinity);\n    }\n\n    private bool Valid(TreeNode node, double left, double right) {\n        if (node == null) {\n            return true;\n        }\n        if (!(left < node.val && node.val < right)) {\n            return false;\n        }\n\n        return Valid(node.left, left, node.val) && Valid(node.right, node.val, right);\n    }\n}\n"},"starterCode":{"python":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nclass Solution:\n    def isValidBST(self, root: Optional[TreeNode]) -> bool:\n        ","javascript":"/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     constructor(val = 0, left = null, right = null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {TreeNode} root\n     * @return {boolean}\n     */\n    isValidBST(root) {}\n}\n","cpp":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n\nclass Solution {\npublic:\n    bool isValidBST(TreeNode* root) {\n        \n    }\n};\n","java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    public boolean isValidBST(TreeNode root) {\n        \n    }\n}\n","csharp":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\npublic class Solution {\n    public bool IsValidBST(TreeNode root) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/s6ATEkipzow","embedding":[0.0011938572,0.0017046527,0.01924577,-0.009320369,0.01303219,0.026256453,-0.034592446,-0.0032316374,-0.03949032,0.083974555,0.020014063,0.032057073,-0.04552143,-0.06649586,0.007063505,0.008614498,-0.023970779,-0.0071163247,-0.030904634,0.038357086,0.042870816,-0.018179761,0.05785255,-0.037608,0.06104097,-0.026333284,0.026602186,0.0004972904,0.01259042,-0.006160759,0.016431892,-0.023068033,-0.021761933,0.043869596,-0.009027457,0.008965033,0.045713503,0.045559846,0.033574454,-0.02679426,-0.035322323,0.009334775,-0.0032628493,-0.0077405637,-0.02569944,-0.021224126,-0.0258531,0.008729743,-0.025084805,-0.008153522,-0.027889078,0.017507503,0.05335803,0.0034669274,-0.032479636,-0.011418772,-0.042563498,0.02047504,0.008662517,0.053012297,0.025142428,0.0100934645,-0.0048570596,0.032422014,0.038433917,0.010112672,0.014587985,-0.03541836,0.004556945,-0.06465196,-0.0077501675,-0.015413902,-0.009752534,-0.009987825,0.018448664,0.021742726,0.03703178,0.050515343,0.035744887,-0.048325703,-0.012427159,0.012830513,0.06549708,-0.021896385,0.023471387,0.0013997359,-0.05604706,-0.04748058,-0.043062888,-0.06864709,-0.012638439,-0.013061001,0.06019585,0.033151895,0.025007976,-0.04371594,0.018679153,-0.019860405,-0.002288076,-0.022472605,-0.037800074,-0.052244004,0.022741508,-0.0052916263,0.017075337,0.036321107,0.023759497,-0.0030587711,-0.024873525,-0.0038438719,0.0014213442,-0.037800074,-0.002888306,-0.010179898,0.0075676977,-0.078750156,-0.07072148,-0.048671436,0.0015413902,-0.021915592,0.055009864,-0.058275115,-0.034285128,-0.023989987,-0.04494521,0.032133903,-0.003392499,0.017728388,0.06004219,-0.0065016896,-0.003298863,0.014770456,-0.003692614,0.023125654,-0.050861076,0.0009279553,-0.02984823,-0.0072507765,0.007711753,0.0023553018,-0.017824424,-0.038971722,-0.002225652,0.007519679,-0.029540911,-0.018285401,-0.04448423,0.05539401,-0.057237916,0.0041487888,0.034035433,0.021185713,-0.020148516,0.024796695,0.013147434,-0.021147298,-0.00026245049,0.028446091,0.021589067,-0.035111044,0.01632625,-0.018429456,0.0417952,-0.03144244,0.020916808,0.03601379,0.00825436,0.022414982,0.023893949,-0.010218313,0.07498551,0.006290409,0.015615579,-0.017593937,0.020090893,0.014847285,0.004636175,-0.019437842,0.027063163,-0.01982199,-0.017555522,0.0021860371,-0.032287564,-0.03324793,-0.0024753478,0.008638508,0.01237914,-0.016518325,-0.016969698,0.00010188901,-0.0138292955,0.009853373,0.03804977,0.0310775,0.031404026,-0.021320164,-0.0041751987,0.018535096,-0.009032259,0.06565074,0.03194183,-0.02170431,0.020244552,-0.00060052995,0.0057910173,-0.012177463,-0.035898544,0.0088978065,0.0039471113,-0.034822933,0.029137557,0.0045209313,-0.008220748,0.022261323,0.011370754,0.020014063,0.035187874,0.0048450553,0.010612063,0.033997018,-0.017593937,0.033958603,0.04371594,0.061233047,0.028791824,0.022587849,0.0069530625,0.001146439,0.033516835,-0.011524413,0.030866219,0.00021698308,0.009349179,0.0031692134,-0.028849447,-0.018343024,-0.03295982,-0.011822127,-0.028157981,-0.006448869,-0.0017802817,0.035322323,0.0071499376,-0.046212897,-0.034803726,-0.011956578,0.018928848,0.021723518,-0.016912075,0.01916894,-0.0051715802,-0.032767747,-0.03972081,-0.036858913,-0.022376567,-0.023317728,0.0018871226,-0.047250092,0.029579327,-0.02883024,-0.065842815,-0.028426884,-0.01553875,-0.11324656,-0.021589067,-0.049900707,0.021934798,0.0086193,0.009402,0.0003220233,0.030923842,-0.027139992,0.04705802,-0.060080606,-0.018784793,-0.009286756,0.01444393,0.024719866,-0.033728115,-0.030462865,-0.03781928,0.02875341,0.04886351,-0.0005507109,-0.024047608,0.018246986,-0.007087514,-0.051859856,-0.0033997018,0.030616524,-0.013541185,0.012600024,-0.020129308,-0.0010047847,0.0028787022,-0.02447017,0.011754901,0.0042400234,0.051168393,-0.051091563,-0.042409837,-0.022011628,-0.026410112,0.02708237,0.011591638,-0.047134846,-0.0059974967,0.04986229,-0.014636004,0.023356143,-0.041910447,0.025872307,0.019428238,-0.011149869,-0.046942774,-0.03353604,-0.02358663,-0.04052752,-0.015250639,0.022299739,-0.005622953,-0.011975786,0.025084805,0.049439732,0.03766562,0.027101576,-0.07406356,0.038011353,0.019428238,-0.014981736,-0.0028642968,-0.038568366,0.03687812,0.0062279846,-0.023260105,-0.0066505466,0.005022723,-0.008638508,-0.03224915,0.013301093,0.035956167,-0.021838762,0.02825402,0.025680233,-0.034131467,-0.0011572432,-0.01089057,0.016307045,0.011668468,0.045175698,-0.023221692,-0.04398484,0.0336897,-0.034496408,-0.02598755,0.029310424,-0.010496819,0.065765984,-0.01237914,0.02541133,-0.05881292,-0.00462177,-0.038299464,-0.008561678,0.011927767,-0.012359933,-0.007510076,-0.001517381,-0.00864331,0.015836464,0.0071595414,0.041910447,-0.004794636,0.007534085,0.004705802,0.020743944,0.0057526026,-0.026160417,-0.019476257,0.05539401,-0.024374133,0.039989714,-0.0030251583,0.0026866286,-0.02032138,-0.003685411,0.046059236,-0.026218038,0.013493166,0.012532799,0.036532387,-0.0023853134,0.002228053,0.012110237,0.03514946,0.020302175,0.0032844576,0.043370206,0.037300684,0.045098867,-0.0047202073,0.043178134,-0.055201937,0.027466517,-0.016499117,-0.0012556808,0.035283912,0.04275557,0.01444393,-0.045406185,-0.030021096,0.0005855242,-0.0054836995,-0.044138502,0.025468953,0.02483511,0.004115176,0.009536452,-0.0145783825,-0.0041896044,-0.008004665,-0.014280668,0.0005507109,0.022568641,0.01851589,0.004998714,0.024489377,-0.005651764,0.004468111,-0.0012436762,0.05620072,0.02170431,-0.03071256,0.002288076,0.004112775,0.035898544,0.03295982,0.02723603,-0.0208976,0.011764505,-0.050400097,-0.03536074,0.027946701,-0.021877177,-0.020244552,0.024969561,0.017334638,0.03405464,0.008873798,-0.049939122,0.018736774,0.015452317,0.020206137,-0.042064108,-0.013118623,0.007020288,0.035111044,0.014616797,0.013944539,-0.0031331996,-0.047749482,0.022587849,-0.005214797,0.027716212,0.014933718,-0.018919244,-0.0045065256,0.020667113,0.035783302,-0.07598429,0.044138502,-0.003690213,0.021627482,0.0017850836,-0.027754627,0.019601105,0.0071883523,0.00368301,0.0098437695,-0.026198832,-0.01796848,-0.0024849514,0.021166505,-0.008532867,0.034803726,-0.0003523349,0.05977329,0.03593696,-0.029368045,-0.00673698,0.0054020686,-0.009978221,-0.02133937,-0.0032220336,0.040028125,-0.013425941,-0.021473823,-0.002885905,0.021800347,-0.0073996335,-0.002614601,-0.025296086,-0.019937234,0.008628904,-0.009517244,-0.047864728,-0.042140935,0.020532662,-0.00276826,0.03745434,-0.023490595,-0.014146216,-0.0076253195,0.0019675533,0.013569996,-0.020667113,-0.005704584,-0.018006895,-0.013061001,0.003147605,-0.001710655,-0.012235085,0.03776166,0.00916671,-0.005416474,-0.022357361,-0.022933582,-0.015289054,-0.029022312,-0.00511876,-0.0059014596,-0.008628904,0.031154329,0.014636004,-0.020686321,0.009214728,0.013512374,0.030501278,-0.0006092333,-0.013464356,0.013406733,-0.010295142,0.0008571282,-0.030040303,-0.019130524,0.014645608,0.023509802,-0.0045473413,-0.007764573,0.017257808,0.0023156868,-0.031980246,-0.025276879,-0.0305589,0.017190583,-0.006991477,-0.0011194287,-0.026871089,0.0177572,0.033881772,-0.038664404,-0.00009633689,-0.00021668297,0.019495465,-0.01666238,-0.018861622,-0.037800074,0.039528735,0.005094751,0.025315294,0.035783302,-0.0054260776,-0.014952925,-0.0089986455,0.0464818,-0.011274717,-0.0065545095,-0.07049099,-0.008585688,-0.00958447,-0.010612063,-0.0415263,-0.057314746,0.01982199,-0.014280668,0.008950627,0.008427227,0.0323836,0.016883265,-0.01770918,-0.0031956236,0.024623828,0.058198284,0.019399429,-0.037108608,-0.016700795,-0.02896469,-0.0054260776,-0.017958876,-0.0070010806,-0.003125997,-0.007318002,0.052397665,0.04371594,0.02569944,-0.0047730277,0.037608,0.03246043,0.02969457,0.025007976,-0.009752534,-0.03774245,0.011774109,-0.0017958876,-0.017411467,-0.0045113275,-0.029079935,0.043946426,0.038453124,-0.01770918,-0.007471661,0.00856648,0.01804531,0.0066457447,-0.009762138,-0.010977003,0.00067705923,0.037204646,0.0071307304,0.0208976,-0.05220559,0.019783575,0.02199242,-0.002917117,-0.012475177,-0.056354377,-0.0054692943,0.01321466,-0.029079935,0.008508858,0.004756221,0.019159336,-0.0148760965,-0.061194632,-0.018746378,-0.0053348425,-0.007558094,0.048248876,-0.009901391,-0.03899093,-0.0072651817,0.021685103,0.011485998,0.018141346,-0.03455403,0.007668536,-0.032133903,-0.040565934,-0.016460704,0.0063192197,0.0065545095,-0.011630053,0.0079998635,0.041449472,-0.018285401,-0.019764367,-0.0065641133,0.031423233,0.0020347792,-0.026659807,0.004314452,0.022818336,-0.0044489033,-0.06903123,-0.0057574045,-0.018352628,0.006304814,-0.01781482,-0.008965033,0.016412685,-0.013521978,0.039682396,-0.04421533,0.053857423,-0.0040647564,-0.0011032224,0.0084992545,-0.020782357,-0.039836053,-0.009968617,0.005498105,-0.013128227,-0.049401317,0.016076555,-0.0389141,0.00024159251,-0.005522114,0.05481779,0.02940646,-0.051360466,-0.0078990245,-0.02133937,0.010208709,-0.026218038,-0.022683885,-0.0006014303,-0.008273568,0.041987278,0.053742178,-0.01136115,-0.0038582773,0.0126864575,0.004725009,0.008350397,-0.007831799,-0.0014969732,0.041564714,0.041987278,0.015682805,-0.012811305,-0.024009192,0.008864194,0.01810293,0.031404026,0.01974516,0.027889078,-0.012820909,-0.02039821,-0.0336897,-0.009440415,-0.040335443,-0.0056325565,-0.015212225,0.0030515685,0.0005996296,0.012215878,-0.024911938,0.046212897,0.022914374,-0.0035581624,0.0025113616,0.00856648,-0.015615579,-0.04267874,-0.03659001,0.00410077,-0.039010137,0.01838144,-0.054049496,0.063691586,0.03361287,0.00081451185,0.009214728,-0.045675088,0.017036924,0.009459622,-0.017882047,-0.014088594,-0.005027525,-0.019687539,-0.039317455,0.011975786,-0.029022312,-0.000885339,0.008782563,0.020782357,-0.02614121,-0.0056421603,-0.016787227,0.030174755,-0.0023372949,-0.019341806,0.0428324,-0.028119568,0.023202484,0.027754627,0.0021380186,-0.04632814,-0.008134315,-0.052244004,0.0030371628,0.015817257,0.037934527,0.0084992545,0.019572293,0.026390905,-0.0039687194,0.02518084,-0.014395912,-0.026333284,-0.04755741,-0.027908286,-0.04986229,-0.01608616,0.020379003,0.004468111,-0.025584197,0.0089458255,-0.01339713,-0.058467187,-0.02614121,-0.0048930733,0.016527928,0.0011980587,-0.02729365,0.05393425,0.0060647223,-0.034822933,0.007865411,0.009862976,-0.0015653993,0.033516835,-0.005296428,-0.0020227744,-0.011534017,0.025641818,-0.014376705,0.0024381336,-0.0020311777,-0.0038222636,0.046366554,0.0030899832,0.044561062,0.0415263,-0.025641818,-0.002073194,0.022645472,-0.0007226767,0.009968617,0.015481127,0.019860405,0.0081487205,-0.027793042,0.04690436,-0.017373051,0.012388743,0.054279983,0.0075724996,0.002705836,0.021896385,-0.008825779,-0.013723655,-0.0041175764,-0.06315378,0.008014268,0.004576152,0.015769238,-0.011783712,-0.012311914,-0.0650361,-0.024086023,-0.019706747,0.0038582773,-0.0076013105,-0.027831458,0.019725952,0.009891788,0.004576152,-0.0113899615,-0.010064654,0.017305827,0.012532799,0.0011134263,-0.026025966,-0.0036157845,-0.023202484,-0.0059062615,-0.024335718,0.018314213,0.020993639,0.015164207,-0.01470323,0.0042640325,-0.0029411262,-0.014712834,-0.02316407,-0.036148243,0.014271065,0.019764367,0.015759634,0.031999454,0.003387697,0.031903416,0.0062615974,-0.0037430332,-0.024297303,0.0045209313,0.026813466,0.011284321,-0.010861759,0.009161908,0.031192744,0.0028498913,0.00344772,-0.0066457447,0.0027994718,0.0006992677,-0.0050035156,0.0050083175,-0.008941024,-0.013934935,-0.0068858364,0.020090893,0.0034093054,0.014914511,-0.04602082,0.013512374,0.0013313098,-0.013445148,0.00300355,-0.02032138,-0.024623828,-0.0326525,0.056239136,0.01851589,0.0067129703,0.0013445148,0.02569944,-0.046212897,0.018976865,-0.03407385,-0.02990585,-0.028945483,0.016460704,-0.0063576344,-0.041411057,-0.04110374,0.024450962,0.022357361,-0.019332202,0.001963952,-0.007615716,-0.00864331,-0.008849788,-0.010323953,0.032345183,-0.030213168,-0.036916535,0.01480887,-0.0428324,0.006544906,-0.044676308,-0.028350055,-0.039163794,-0.03251805,0.002681827,-0.007049099,-0.014568779,0.02308724,-0.01909211,0.029713778,-0.005147571,0.032690916,0.011831731,-0.031269573,-0.04878668,-0.0047754287,0.0074572554,0.022626264,0.025949135,-0.00092675484,-0.011025022,0.013512374,0.012235085,0.050630588,0.015433109,0.0227223,-0.023855533,-0.011207491,-0.0009051466,-0.011975786,-0.0005729194,-0.026928712,0.006583321,0.021262541,-0.0051331655,0.002277272,0.0056997826,0.013800484,0.0056997826,0.003951913,0.01895766,-0.032402806,-0.01603814,0.042986058,0.018266194,-0.0061991736,-0.013541185,-0.00673698,0.048978753,-0.004885871,0.06653427,0.057122674,-0.018218176,0.019312995,0.032422014,-0.019072903,0.06657269,-0.01517381,-0.019764367,-0.024662243,-0.018842414,-0.016883265,0.0049747047,0.0011902557,-0.034457993,0.013262678,0.022184495,0.019879611,-0.00023559021,-0.030366827,-0.0030131538,-0.007812591,0.04436899,-0.016643172,0.00127969,0.044176914,-0.0040335446,0.0079518445,-0.008153522,-0.0031115913,0.011284321,0.020282967,0.042717155,0.017622748,-0.011409168,0.0040863645,-0.03520708,-0.01506817,0.004444102,0.0142326495,-0.01810293,0.018179761,-0.010631271,0.012071822,0.001575003,0.026698222,-0.0006860627,-0.019341806,-0.0006560512,-0.022837544,-0.02642932,-0.032133903,0.03426592,-0.053396445,-0.018016499,-0.0077597713,-0.025161635,0.003663803,0.012004596,-0.001065408,0.003154808,-0.026525356,-0.018170157,0.0027322462,-0.008691328,0.022587849,0.00041385848,0.011121058,0.030597316,-0.009738129,-0.02781225,-0.0026025965,0.03622507,0.024527792,0.010823344,0.016816039,-0.027658591,-0.016230214,-0.03972081,0.021166505,-0.012964964,-0.052167173,0.009997428,-0.015798049,-0.029540911,-0.024700658,-0.030904634,-0.03261409,0.020628698,0.06795562,-0.014472742,-0.029867437,0.034515616,-0.04602082,-0.029656155,0.024700658,0.0006806606,-0.01718098,0.009377991,0.017622748,0.016758418,-0.030654937,-0.0059014596,0.020532662,-0.0035581624,-0.0055797365,0.0065545095,0.01575003,-0.011005814,0.025161635,0.018352628,-0.007937439,-0.03803056,-0.03188421,-0.04698119,-0.0045449403,0.030213168,-0.0013577199,-0.0020071685,0.0044729128,-0.020590285,0.0017070536,0.02961774,-0.015682805,-0.0013229066,-0.035168666,0.0013000978,-0.003781448,-0.023951571,0.028273227,-0.003990328,0.035956167,0.027101576,-0.02374029,-0.020455832,0.014251857,-0.02518084,0.0150777735,0.030539693,-0.02032138,-0.015740426,-0.010381575,0.022760715,-0.0049795066,0.0051331655,0.013281886,0.0048282486,-0.014655212,0.013877314,0.024662243,0.006285607,0.011860541,-0.006588123,0.035610434,-0.018448664,0.023509802,0.041948862,0.017824424,-0.034803726,0.017901255,0.01676802,-0.008484849,0.0016554339,-0.0036998168,0.024719866,-0.01569241,-0.01313783,-0.0068378183,-0.01650872,-0.02170431,-0.003752637,-0.0077789784,0.020494247,-0.010064654,-0.011745297,0.0075436886,0.025161635,0.012158255,0.009137899,0.00707791,-0.011668468,0.013992557,-0.024066815,0.023970779,0.021204919,0.019466653,-0.0002595994,0.036993366,0.0008733344,0.021224126,-0.00065244985,-0.026775053,-0.054548886,0.0047778296,-0.02178114,-0.0044777147,-0.026102794,0.03616745,-0.015481127,0.041449472,0.013445148,0.005805423,-0.031807378,-0.011754901,-0.020455832,-0.00012567312,-0.019860405,0.00051649776,0.008355199,0.008830581,-0.00493629,-0.03826105,0.041334227,-0.022318946,0.025468953,-0.021300957,-0.03745434,-0.0012106636,-0.026314076,0.02468145,0.014597589,-0.014357498,-0.007903826,0.009248341,-0.04878668,0.014770456,0.025007976,-0.010371972,0.027908286,-0.019860405,-0.009037061,-0.0008337192,-0.0037694434,-0.0034165082,-0.00300355,0.02133937,0.0026049975,0.008585688,-0.0047442163,-0.017344242,-0.03676288,0.016595155,0.007937439,-0.00014202938,-0.011351546,-0.024431756,0.009421207,0.061271463,0.02425889,0.012801702,0.003541356,0.0019207355,-0.012427159,0.0067129703,-0.017901255,0.00049819076,0.05178303,-0.026102794,-0.03027079,0.022280531,0.0031860198,-0.003272453,-0.0029627343,-0.0034069044,0.0040599545,-0.01499134,-0.01041999,0.021435408,-0.0037598396,0.007865411,-0.0057526026,0.031173537,-0.012350329,0.031749755,-0.00017166573,0.031480853,0.023759497,-0.010016635,-0.019581897,0.00078810175,0.00061583583,0.015500335,0.0030587711,0.055854987,0.026122002,-0.025603404,0.022856751,0.0074476516,-0.010612063,0.025814684,0.011207491,0.04640497,-0.0013337106,0.02279913,-0.0658044,0.032786954,-0.015116188,-0.009781346,0.018131742,-0.022683885,0.008393614,-0.027562553,0.007908628,0.05504828,0.02039821,0.03361287,-0.0041175764,-0.041372642,-0.02199242,-0.03724306,-0.010151087,-0.042793985,0.025257671,-0.031711344,-0.030174755,-0.023048826,0.014424724,0.052436076,0.039144587,0.005978289,-0.009814958,0.012993775,0.030520486,0.032498844,0.028330848,0.004429696,-0.0071835504,-0.0258531,0.026333284,0.008849788,-0.023394559,-0.023221692,0.015058566,-0.03319031,-0.0008211144,-0.017584333,0.0172386,0.0036253883,-0.015961312,-0.04264033,-0.03860678,-0.008787365,0.0044224933,-0.0041247793,0.0039375075,0.014933718,0.009978221,0.004914682,0.0086481115,-0.0023408963,-0.03972081,0.006568915,0.0024801497,-0.020955224,-0.01339713,0.012868928,0.0519751,-0.053127542,-0.012033408,-0.0048258477,0.0015257843,0.005358852,0.0014069388,0.01433829,0.018976865,0.01796848,0.008686526,-0.01713296,-0.007908628,-0.039183002,0.0047970368,0.02410523,-0.008758553,-0.009238738,-0.011447583,-0.0026674212,0.024239682,-0.014213442,0.00673698,0.0031836191,-0.023490595,-0.004549742,-0.0071835504,-0.024566207,-0.02105126,-0.029291216,0.010871363,-0.019293787,0.016307045,-0.00024624428,0.05815987,-0.012648043,-0.021396993,0.016201403,0.023932364,-0.000053532996,0.022318946,0.021723518,-0.0153274685,0.031019878,-0.0042664334,-0.01517381,0.0041511897,0.011793315,-0.024777487,0.03267171,0.0024633433,-0.009618083,-0.011975786,0.010832948,0.04748058,-0.012446365,0.01078493,0.014674419,-0.006664952,-0.021012846,0.012436762,0.011610846,-0.003219633,0.026755845,0.020743944,-0.018112535,0.01848708,0.011399565,-0.02802353,-0.008950627,0.009435613,-0.014491949,-0.014674419,-0.0038222636,-0.020571077,0.018026102,-0.023605838,0.018477475,-0.009402,-0.033420797,0.034746103,-0.008475245,-0.047442164,-0.01825659,-0.01575003,0.0113899615,-0.021435408,0.008215946,0.015116188,-0.036686048,0.0049843085,0.0015101782,0.021742726,0.008504056,-0.008667319,-0.045636673,-0.011591638,-0.00070106843,-0.034131467,-0.0043312586,-0.05451047,-0.024623828,0.01838144,0.00825436,0.023605838,-0.005853441,-0.00368301,-0.0113899615,0.010592856,-0.035572022,-0.03783849,0.012235085,0.0028186792,-0.0046817926,-0.009450018,0.016796831,-0.026122002,0.007106721,-0.003366089,0.010179898,0.009968617,-0.010007031,0.025315294,0.006626537,-0.025315294,-0.0051523726,-0.014309479,0.030827804,-0.022991203,0.022357361,0.004821046,0.0078077894,0.010602459,0.013109019,0.038088184,0.011149869,0.0232409,-0.012283104,0.020206137,-0.02039821,0.022626264,-0.004105572,0.012532799,-0.0232409,-0.018246986,-0.0040983693,0.014242253,-0.0059398743,0.01041999,0.07075989,0.036321107,0.06830135,0.003956715,-0.05481779,-0.007385228,-0.01099621,0.048594605,-0.022088457,-0.010535234,0.019293787,-0.025737856,0.005646962,-0.0051235617,0.004285641,-0.020743944,-0.0068570254,0.007735762,0.019361014,-0.00689544,-0.03486135,0.004636175,0.019918026,0.016124574,0.014837681,-0.0080959,0.023778705,0.0030755776,0.027793042,0.02831164,0.025084805,0.020417418,-0.024239682,0.008883402,-0.023989987,-0.036782082,0.0673794,0.040681176,0.015653994,0.00040305432]},{"id":"kth-smallest-integer-in-bst","name":"Kth Smallest Integer in BST","description":"Given the `root` of a binary search tree, and an integer `k`, return the `kth` smallest value (**1-indexed**) in the tree.\n\nA **binary search tree** satisfies the following constraints:    \n* The left subtree of every node contains only nodes with keys **less than** the node's key.\n* The right subtree of every node contains only nodes with keys **greater than** the node's key.\n* Both the left and right subtrees are also binary search trees.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/02eca3db-f72f-4277-7134-faec4f02e500/public)\n\n```java\nInput: root = [2,1,3], k = 1\n\nOutput: 1\n```\n\n**Example 2:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/dca6c42d-2327-4036-f7f2-3e99d8203100/public)\n\n```java\nInput: root = [4,3,5,2,null], k = 4\n\nOutput: 5\n```\n\n**Constraints:**\n* `1 <= k <= The number of nodes in the tree <= 1000`.\n* `0 <= Node.val <= 1000`\n","difficulty":"Medium","concepts":["Binary Tree","Binary Search Tree","Depth-First Search"],"solutions":{"python":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nclass Solution:\n    def kthSmallest(self, root: Optional[TreeNode], k: int) -> int:\n        stack = []\n        curr = root\n\n        while stack or curr:\n            while curr:\n                stack.append(curr)\n                curr = curr.left\n            curr = stack.pop()\n            k -= 1\n            if k == 0:\n                return curr.val\n            curr = curr.right\n","javascript":"/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     constructor(val = 0, left = null, right = null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {TreeNode} root\n     * @param {number} k\n     * @return {number}\n     */\n    kthSmallest(root, k) {\n        let stack = [];\n        let curr = root;\n\n        while (stack.length > 0 || curr !== null) {\n            while (curr !== null) {\n                stack.push(curr);\n                curr = curr.left;\n            }\n            curr = stack.pop();\n            k--;\n            if (k === 0) {\n                return curr.val;\n            }\n            curr = curr.right;\n        }\n    }\n}\n","cpp":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n\nclass Solution {\npublic:\n    int kthSmallest(TreeNode* root, int k) {\n        stack<TreeNode*> stack;\n        TreeNode* curr = root;\n\n        while (!stack.empty() || curr != nullptr) {\n            while (curr != nullptr) {\n                stack.push(curr);\n                curr = curr->left;\n            }\n            curr = stack.top();\n            stack.pop();\n            k--;\n            if (k == 0) {\n                return curr->val;\n            }\n            curr = curr->right;\n        }\n\n        return -1; \n    }\n};\n","java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    public int kthSmallest(TreeNode root, int k) {\n        Stack<TreeNode> stack = new Stack<>();\n        TreeNode curr = root;\n\n        while (!stack.isEmpty() || curr != null) {\n            while (curr != null) {\n                stack.push(curr);\n                curr = curr.left;\n            }\n            curr = stack.pop();\n            k--;\n            if (k == 0) {\n                return curr.val;\n            }\n            curr = curr.right;\n        }\n\n        return -1;\n    }\n}\n","csharp":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\npublic class Solution {\n    public int KthSmallest(TreeNode root, int k) {\n        Stack<TreeNode> stack = new Stack<TreeNode>();\n        TreeNode curr = root;\n\n        while (stack.Count > 0 || curr != null) {\n            while (curr != null) {\n                stack.Push(curr);\n                curr = curr.left;\n            }\n            curr = stack.Pop();\n            k--;\n            if (k == 0) {\n                return curr.val;\n            }\n            curr = curr.right;\n        }\n\n        return -1;\n    }\n}\n"},"starterCode":{"python":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nclass Solution:\n    def kthSmallest(self, root: Optional[TreeNode], k: int) -> int:\n        ","javascript":"/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     constructor(val = 0, left = null, right = null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {TreeNode} root\n     * @param {number} k\n     * @return {number}\n     */\n    kthSmallest(root, k) {}\n}\n","cpp":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n\nclass Solution {\npublic:\n    int kthSmallest(TreeNode* root, int k) {\n        \n    }\n};\n","java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    public int kthSmallest(TreeNode root, int k) {\n        \n    }\n}\n","csharp":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\npublic class Solution {\n    public int KthSmallest(TreeNode root, int k) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/5LUXSvjmGCw","embedding":[-0.008388864,0.003107438,0.00068424566,-0.04546852,0.0439867,0.023455674,-0.038546856,0.004913408,-0.044337656,0.06262645,0.0056543187,0.0063026156,-0.056114238,-0.056309216,0.01195206,-0.028700542,0.013404635,-0.014330774,0.0020167883,0.04297282,0.023104716,-0.032093134,0.07163437,-0.005980904,0.09530452,-0.0033267867,-0.005873667,0.013736095,0.005069389,-0.03591467,0.04722331,-0.0038215395,0.013209659,0.022266317,-0.010236267,0.021135453,0.024586538,0.026594795,0.021115955,0.0348618,-0.020959975,-0.021759378,-0.06075468,0.006248997,-0.0020167883,-0.030650306,-0.04971901,-0.012585733,-0.023124214,-0.017001951,-0.016904464,-0.000652562,-0.0032756054,0.0054495935,-0.054749403,-0.025288453,-0.0068095545,-0.01244925,0.015744353,0.044844598,0.04324579,-0.022519786,-0.015208168,0.032717057,0.042426888,-0.008647208,0.026926255,0.018064573,0.0035022656,-0.05400849,-0.042426888,0.0096757095,-0.06828077,-0.029733917,-0.00078538974,0.020453036,-0.0030270102,0.046989337,0.04987499,-0.03012387,-0.011464618,-0.031020762,0.07003556,0.011961808,-0.0078380555,-0.03144971,-0.039190277,-0.042543873,-0.063172385,-0.068592735,-0.012965938,-0.023689646,0.027862143,0.013414384,0.025268955,0.017118936,0.027316209,-0.017255422,0.0066243266,0.007716195,-0.036324125,-0.073311165,0.0116206,-0.04141301,-0.020394543,0.037123527,0.02714073,0.010460489,-0.057635054,0.006297741,-0.0332045,-0.06344535,-0.011376879,0.009310128,0.019907102,-0.055295337,-0.05178576,-0.019955846,-0.011094163,-0.026048861,0.041491,-0.04847116,-0.026243838,-0.015403144,-0.045351535,0.039209776,0.034549836,-0.0030976892,0.018230304,-0.0061466345,0.028505566,0.010830945,-0.03162519,0.02250029,-0.029675424,-0.012878198,-0.026848264,0.01958539,0.008369367,0.0040823207,-0.02614635,-0.020316552,-0.03952174,-0.009768323,-0.008691078,0.0055958256,-0.00647322,0.07951142,-0.04687235,0.03180067,0.057635054,0.030143367,-0.0027613547,0.043947704,-0.017070193,0.026516804,0.017148184,0.02614635,0.00058584346,-0.046989337,-0.0029124615,-0.018766489,0.018561764,0.009895057,-0.050576907,0.012605231,-0.019273428,0.0026736152,-0.0027126106,0.008842184,0.0126247285,-0.051161837,0.074013084,0.019965595,0.019390414,0.018766489,-0.020141073,0.0035071399,0.002014351,0.022929236,-0.035232253,0.0032049264,-0.008778817,-0.022753758,0.03583668,0.00021934857,0.022480791,-0.03419888,-0.017499141,-0.0009913336,-0.010392248,0.003958023,-0.0049792123,-0.0030635684,0.008598464,0.035661202,-0.0048817242,-0.0072385026,0.006151509,0.03119624,0.025775895,0.003343847,0.0036874933,-0.023962613,0.053696528,-0.0348618,-0.040126164,0.023202205,0.029480448,-0.035290748,0.030084874,-0.019702377,0.013521621,0.04780824,0.02556142,0.026867762,0.018893223,-0.01865925,-0.0022519787,0.059116878,0.0020070395,0.040282145,0.011776581,0.048081208,0.035563715,0.016767979,-0.02117445,-0.031898156,0.033535957,-0.0015598121,0.0365191,0.010002295,-0.004111567,0.008890929,0.012663724,-0.030513823,-0.039853197,-0.047184315,-0.03203464,-0.02912949,-0.01933192,-0.0040579485,-0.0077405674,-0.00048195754,-0.01775261,-0.016816724,-0.02622434,-0.008276753,-0.058999892,0.04141301,-0.0037459861,-0.05494438,-0.02090148,-0.00713614,-0.038975805,0.012800207,0.03702604,0.0041993065,0.031430215,-0.0026029365,-0.0072482517,-0.029012505,-0.0018803047,-0.08243607,-0.033984404,-0.06948963,0.025834387,0.0028320337,0.0021020905,0.034978785,0.017937839,-0.054905385,0.017674621,-0.027959632,-0.013999313,0.011640097,0.025424937,-0.011337884,-0.017167682,-0.032112632,-0.008476604,0.064225264,0.058726925,-0.023689646,0.005824923,0.027589176,0.018678749,-0.01800608,0.020764997,-0.0058151744,-0.059857786,-0.0035412607,-0.012965938,0.013804337,-0.035310246,-0.016251292,-0.026165847,-0.00074395724,0.007643079,-0.07405208,-0.022129834,-0.020842988,-0.0018754302,0.02283175,0.014009062,-0.07526093,0.039424248,0.022129834,-0.040711094,0.025912378,-0.029558439,0.035641704,0.010246015,0.023553163,-0.03427687,-0.018396033,0.0423489,-0.07186834,0.030630808,0.025463931,-0.019117447,-0.053735524,0.035719696,0.02290974,0.036792066,0.029187983,-0.053306576,0.039131787,0.029948391,-0.022090837,-0.021252438,-0.009924304,0.055646297,0.02191536,-0.024079598,0.0058005513,0.03702604,0.015003442,-0.019897353,0.032990023,0.025327448,-0.0018352164,0.03868334,-0.024995988,-0.012566236,0.007535842,0.0062684948,0.013921322,0.020570021,0.035173763,-0.014155295,-0.017781857,0.037376996,-0.010119281,-0.018863978,0.037571974,-0.038488362,0.038858816,-0.0075065955,0.0053716027,-0.08524373,-0.023026725,-0.021895861,-0.03628513,0.028973509,-0.015715107,-0.01883473,-0.051668774,-0.0014671982,0.028700542,-0.009846314,0.020726003,0.024196584,-0.01800608,-0.023767635,-0.019283177,-0.0018108443,0.025268955,0.027433194,0.04624843,-0.028583556,-0.0012673473,-0.011240396,0.0056250724,-0.0070142797,-0.022051843,0.047379293,0.023163209,-0.004793985,0.022110336,0.026087856,0.0038873442,0.041452006,-0.011484116,0.01335589,0.014477005,0.007989163,0.03603166,0.032678064,0.057752043,0.026731279,0.01386283,-0.028525064,-0.009353998,-0.034881297,-0.0448056,0.006214876,0.021466913,0.02290974,-0.07081547,0.011396376,0.022071341,-0.009363746,-0.0655901,-0.007794186,-0.008320622,0.014603741,-0.00904691,-0.052487675,0.0049109706,-0.0052351193,-0.0057225605,0.0017109188,0.014330774,0.020531027,0.05993578,0.014174792,0.030338345,0.07182934,-0.008876305,0.028525064,0.03718202,-0.017694118,-0.0119715575,0.028759034,0.00916877,0.017294416,0.044337656,-0.011289139,-0.009607468,-0.06114463,-0.00680468,0.06582407,-0.025990369,0.0045405156,0.036207136,0.002038723,0.025190964,0.003329224,-0.030650306,0.0058151744,-0.0031513078,-0.0065024663,-0.024820508,-0.008320622,-0.023377683,0.08087625,0.012936691,0.043128803,0.007852679,-0.01834729,0.03195665,0.020219063,-0.003933651,-0.0032268611,-0.012400506,0.025600415,0.018893223,0.013648355,-0.030338345,0.060793675,-0.02946095,-0.010002295,0.014087053,-0.009661086,0.023397181,0.00991943,0.008530222,-0.036226634,0.0029831405,-0.004308981,-0.009368621,0.016787477,0.0023068157,-0.01261498,-0.04051612,0.035953667,0.032834042,-0.016329283,-0.012351762,-0.002097216,0.007321368,0.01601732,-0.0038922185,0.05053791,0.062938415,-0.0047574267,-0.011211149,-0.020355547,-0.03178117,-0.02446955,0.013589863,-0.014642736,0.048627142,-0.029577935,-0.032249115,-0.0010681057,0.0051327567,0.019780366,0.017001951,-0.03478381,-0.030396838,-0.0062733693,-0.0010181429,0.008876305,-0.008301125,-0.0044747107,-0.012147036,-0.013979816,0.015656613,-0.010479988,-0.0039994554,0.014759721,0.013414384,-0.017040947,0.0033024147,-0.016027069,0.002432332,-0.041841958,-0.0048061707,-0.023884622,0.001137566,0.035290748,0.042933825,-0.007477349,0.018581262,0.03197615,-0.000018431372,0.02298773,0.027842645,0.012078795,0.003497391,-0.009753699,-0.02671178,-0.019448906,0.025756396,0.0010291104,-0.037045535,0.008081776,0.031313226,0.0036021909,-0.02008258,-0.016836222,-0.052643657,-0.009276007,-0.023670148,-0.0024774203,0.01760638,0.014671982,0.026204843,0.010080285,-0.016836222,0.001913207,0.009402742,0.007477349,-0.016027069,-0.0059906533,0.022461293,0.014496503,-0.009246761,0.06215851,-0.024625532,-0.000492925,-0.04589747,0.012205529,-0.004572199,-0.011435372,-0.020199565,0.022597777,0.019809613,-0.009295505,-0.022851247,-0.06757886,0.01552013,-0.004111567,0.0043431018,0.000684855,0.011006424,0.011298888,-0.012410254,0.03911229,0.01975112,0.05303361,0.019283177,-0.0398337,0.007930669,-0.036733575,-0.025873382,0.0062294994,0.008700826,-0.013229156,0.023884622,0.017986583,0.0323661,0.01079195,0.008086651,0.017645374,0.0016378027,-0.014983945,0.033886917,0.010060788,-0.025346946,0.0034535213,0.018552015,0.005941909,-0.01360936,0.02041404,-0.0027077363,0.028583556,0.010616471,0.009163896,-0.014301526,0.006980159,0.024274575,-0.008486353,0.023494668,-0.036168143,0.012458999,0.009193142,0.0070142797,-0.020355547,0.048744127,-0.009948676,0.015286158,-0.015910083,-0.06960661,0.012264023,0.017889094,-0.036714077,0.0039312136,0.032151625,0.017869597,-0.018766489,-0.01178633,-0.019741371,0.040711094,-0.010577476,0.05377452,0.0023640902,-0.03445235,0.009968174,0.027257716,-0.0017194491,0.008271879,-0.0024030854,0.036889557,-0.021232942,-0.042894833,-0.008793441,0.0028832152,0.0011077103,-0.004430841,-0.005205873,0.014399015,-0.001771849,-0.01975112,0.013180411,0.03195665,0.011591353,-0.051629778,0.008393738,0.008267004,0.0027418572,-0.053813517,-0.049797,-0.027881641,0.0040238276,-0.006058895,-0.018688498,-0.013131668,-0.008622836,0.011903316,-0.04117904,0.065512106,0.02606836,0.011025921,-0.00064037595,-0.01650476,-0.024684025,-0.006175881,0.018415531,-0.04238789,-0.03784494,0.0036192513,-0.036207136,0.011191651,0.009217515,0.06672096,0.024021106,-0.06870972,0.007121517,-0.0034876422,-0.006458597,0.028564058,-0.025541922,0.031176744,-0.009061533,0.033087514,0.012848952,-0.00963184,0.045858473,0.01600757,0.01642677,0.03242459,-0.01760638,-0.0037386746,0.00713614,0.041529994,0.0125369895,0.0022397926,-0.034549836,0.016904464,-0.010830945,0.028993007,0.013209659,0.03345797,-0.009095654,-0.008418111,-0.002668741,-0.007906297,-0.033672445,0.01668024,0.0051522544,0.009524602,-0.03078679,0.00036558096,-0.057713047,0.04176397,0.0031147497,-0.004499083,-0.0022276065,0.011552358,0.010499485,-0.001165594,-0.021934858,-0.005834672,-0.011571855,0.010713959,-0.044103686,0.024937496,-0.006404978,0.001771849,-0.013931071,-0.01833754,0.041218035,0.007750316,-0.024079598,-0.01476947,-0.019058954,-0.0020679696,-0.025190964,-0.008393738,-0.027686665,0.0074676,0.033048518,-0.00067327823,-0.02747219,-0.0027101734,0.00010853184,0.044259667,0.013599611,-0.015481135,0.009237012,0.018454526,0.0046648127,-0.0030440707,-0.02772566,-0.02622434,-0.042036936,-0.020570021,0.004464962,0.014252783,0.026672786,-0.021447416,0.008408362,-0.013053677,0.00057579,0.014087053,-0.051395807,-0.021622894,-0.028408077,-0.033048518,-0.039287765,-0.019292925,-0.0050840126,-0.0032877913,-0.01834729,-0.004121316,-0.01452575,-0.06578507,0.015159423,0.043518756,0.026906759,-0.014067555,-0.02556142,0.039287765,0.023397181,-0.05194174,-0.026575297,0.007764939,-0.007945293,0.054398444,-0.020180069,-0.0009505105,-0.00834012,0.008564343,-0.009680583,-0.017323663,0.01759663,0.027784152,0.020063082,-0.009412491,0.010440992,0.005732309,-0.005668942,0.0119715575,0.023377683,-0.0067266896,-0.004984087,0.014925452,0.048822116,-0.006687694,0.017128685,0.04663838,-0.0065122154,0.015286158,0.029012505,-0.002517634,-0.024196584,0.008993291,-0.017664872,-0.0152569115,-0.013677602,-0.056777157,0.010674964,0.018873725,0.04098406,0.032580573,0.01228352,-0.0531116,-0.016075812,0.021642393,-0.0207455,0.009704956,-0.054320455,0.020628514,0.008661832,0.023085218,0.003826414,-0.012225027,0.0146914795,-0.012566236,-0.02025806,0.017401652,-0.021135453,0.00963184,-0.030845283,-0.010548229,0.010665215,-0.015919833,0.015705358,0.009714704,0.00003672946,-0.011854571,0.01600757,0.0016865468,-0.034003902,-0.03144971,-0.0073652375,0.006317239,0.023182707,0.024391562,-0.00846198,0.01079195,0.020648012,-0.025736898,0.02107696,0.055880267,0.015227665,-0.031215739,0.009851188,0.015412893,0.035953667,0.0020740626,-0.0011064917,-0.008510725,0.025132472,-0.016611999,0.011649846,-0.0044844598,0.010567727,-0.007847805,0.029694922,-0.0043650367,0.014827963,0.0054739653,-0.02597087,-0.003329224,-0.007150763,0.008028158,-0.00784293,-0.032892536,0.0069704102,0.035875678,0.014350271,0.011006424,-0.015617618,0.022558782,-0.019624386,0.022071341,-0.011308637,-0.018444778,-0.00033298333,0.0070581497,-0.00087678496,-0.022071341,-0.04765226,0.05010896,0.027452692,-0.0082085105,0.015042437,0.022773257,-0.020472534,-0.012322515,-0.038605347,0.023865124,-0.035407733,-0.02474252,0.02016057,-0.019936347,0.009290631,-0.014662233,-0.041062053,-0.0097634485,0.014067555,0.010518982,-0.01029476,-0.053228587,0.012215278,0.020940477,0.027238218,-0.0014757285,-0.010216769,-0.015071684,-0.014467257,-0.04215392,0.012264023,-0.017372407,0.008734947,0.009193142,-0.01865925,-0.027881641,0.033496965,0.027530683,0.021954354,0.023202205,0.011425624,0.018405782,0.034978785,-0.02049203,-0.00059772487,0.03096227,-0.046014454,0.023026725,0.008822687,-0.033808928,-0.0011753427,0.011240396,-0.0035875677,0.018863978,0.0088275615,0.040282145,-0.031469207,-0.02250029,-0.00037228328,0.020394543,-0.02066751,-0.012839203,-0.026536303,0.024859505,-0.0075065955,0.026497306,0.022032345,-0.022246819,0.005400849,0.039482743,-0.011991055,0.058882903,-0.010479988,-0.021193946,-0.008427859,-0.013541118,0.003970209,-0.0070191543,0.032268614,-0.035758693,-0.006200253,0.009948676,0.055334333,-0.0298704,-0.04796422,0.014749973,0.011493865,0.0315277,0.003460833,-0.00821826,0.013063426,-0.028369082,-0.023767635,-0.0132779,-0.004928031,0.004781799,0.0224028,0.07923845,-0.022519786,-0.009568472,-0.0061173877,-0.008661832,-0.008198762,0.00651709,-0.017635625,-0.02456704,0.018396033,-0.025522424,-0.012410254,-0.0054057236,0.010674964,-0.0071068937,-0.02639982,0.021252438,-0.008452232,-0.056387205,-0.024995988,0.029772913,-0.020277556,-0.0240601,-0.04324579,-0.034881297,0.004050637,0.029811908,-0.025249457,0.016056316,-0.002446955,-0.009670835,0.014428262,0.02548343,0.00047403664,0.004781799,-0.013921322,0.024586538,-0.029363463,-0.026633792,0.0018656815,0.023962613,0.008242632,0.022461293,0.026692284,-0.0051571284,0.015812594,-0.064810194,0.025873382,0.022051843,-0.02166189,0.00290515,-0.0033365355,-0.02530795,-0.032522082,-0.001796221,-0.03501778,0.014954698,0.05751807,-0.018415531,-0.04383072,-0.008876305,-0.0030343218,-0.0009249198,-0.011357382,-0.02222732,-0.020316552,-0.02290974,0.018707996,0.03197615,0.00016390212,0.014486754,-0.008783692,-0.005668942,-0.026867762,0.021154951,0.006853424,0.00796479,-0.0028905268,0.013794588,0.012868449,-0.040711094,-0.034549836,-0.013053677,0.010353252,0.028564058,0.0129074445,-0.02505448,0.030318847,-0.0078916745,-0.008929924,0.017586881,-0.006673071,-0.00916877,-0.014701229,-0.015637117,-0.031215739,0.0029953266,0.007087396,-0.0030562568,0.020920979,-0.0055958256,-0.038566355,-0.0037727954,0.012644227,-0.034510843,0.0061612576,0.025912378,0.00800866,-0.0015914957,-0.024586538,-0.0077698138,0.0132779,0.023514166,-0.019292925,-0.01834729,0.0075797117,-0.0013282774,-0.008242632,-0.000812199,-0.025639411,0.015481135,0.031020762,0.015013191,-0.01884448,0.033399474,-0.008325497,-0.04870513,0.0030635684,0.016904464,0.022558782,-0.014467257,-0.01825955,0.01527641,0.006234374,-0.017118936,-0.005030394,0.026204843,0.014291778,-0.012644227,0.011211149,0.015812594,0.006317239,-0.03363345,0.016085561,0.016641244,-0.00025773456,-0.01627079,-0.008725199,-0.006093016,-0.0009815849,-0.038000923,0.03991169,0.0067023174,0.009841439,0.016563253,-0.035563715,0.029850904,0.014077304,-0.00263462,-0.0108406935,-0.0075212186,-0.007355489,-0.018474024,0.007384735,-0.009856062,0.03435486,0.006297741,0.00493778,0.0015037563,-0.012985435,0.021271937,-0.02630233,-0.021388922,0.027647668,-0.013326644,0.009977923,-0.008320622,-0.008798315,0.0027832896,-0.028915016,0.009602593,0.0023689645,0.034393854,-0.019985093,-0.03743549,-0.04507857,-0.015890585,0.040438127,0.028525064,-0.02290974,-0.024333067,0.040711094,-0.024216082,-0.0010693243,-0.0048134825,0.010850443,0.025717402,-0.006882671,0.025775895,-0.0025907503,-0.007053275,-0.010411746,-0.019058954,0.009090779,-0.022305312,0.019546395,-0.022129834,0.000594983,-0.008232883,-0.02398211,0.031254735,-0.0071897586,-0.0007323805,-0.008520474,0.0015756539,0.08126621,0.00043717388,-0.008515599,0.009724453,-0.016758231,0.024703523,0.0036411863,-0.048744127,0.018503271,0.022812251,-0.032073636,0.003473019,-0.004676999,-0.006960661,-0.004350413,0.004986524,-0.005317984,-0.0013514309,-0.0025858758,0.011298888,-0.0012368822,-0.00063245505,0.0024116156,-0.011844823,0.048861112,0.0067998054,0.0170117,0.010392248,0.034588832,0.017889094,-0.021700885,-0.019058954,-0.001983886,-0.006439099,0.019848607,0.0056445696,0.039970186,0.025795393,-0.00066352944,0.024040604,-0.0043772226,0.0033828423,0.030357841,0.04075009,0.042504877,-0.038390875,0.025073979,-0.015588372,-0.0042090556,-0.0122542735,-0.019877855,-0.01269297,-0.043518756,0.013238905,-0.0018145001,0.02016057,0.04117904,0.029168485,-0.0036679956,-0.0026468062,-0.012936691,-0.019965595,-0.005839546,0.018522767,-0.020102078,-0.004808608,-0.034725316,-0.0054495935,0.002680927,-0.004265111,0.020297054,0.052565668,-0.006151509,0.022149332,0.022597777,0.020043585,0.015032689,0.012751464,0.0046867477,-0.020706505,0.021037964,-0.01892247,0.025444435,-0.026107354,-0.027608674,0.014759721,-0.013082923,-0.021388922,0.010099783,0.013160914,0.013394886,-0.013580114,-0.048627142,-0.044142682,0.01933192,-0.019292925,-0.012215278,0.02721872,0.015656613,-0.006083267,0.027101735,0.03328249,-0.0031561821,-0.016456017,0.013268151,0.0012673473,-0.015471386,-0.018357038,0.035973165,0.053891506,-0.04008717,-0.018815232,-0.0018937093,0.014584242,-0.0015330028,0.035329744,0.006663322,0.019439157,0.020726003,0.0032414845,-0.011883818,-0.028759034,0.0012710032,0.017684368,0.012351762,-0.01269297,-0.018181559,-0.017216425,0.008437608,0.01916619,-0.01618305,0.004443027,-0.00032018797,-0.013053677,-0.047379293,0.009583095,0.0023957738,-0.012712468,-0.033068016,0.023299692,-0.021603396,0.030923273,0.01907845,0.016631495,-0.015490883,0.00489391,0.012800207,0.011064917,-0.00044143898,0.022383302,0.029655926,-0.030650306,0.00075065956,-0.006093016,-0.022578279,0.006390355,-0.0093345,-0.013511872,0.022461293,0.02365065,-0.00028408685,-0.0009748825,-0.019185688,0.023007227,-0.0067510614,-0.006166132,0.014593991,0.021115955,-0.009914556,0.028232599,0.008832436,-0.001464761,0.018785987,0.005712812,-0.016173301,0.0038775953,0.0149352,-0.0456635,0.01377509,-0.0021837368,-0.008856808,0.018883474,0.008656957,-0.041023057,0.0149352,-0.015237414,0.0015256911,-0.034725316,-0.033964906,0.036070652,-0.03593417,-0.048276182,-0.020102078,-0.027101735,0.028447073,-0.038117908,0.02589288,0.020570021,-0.020297054,0.05915587,0.0056055747,0.037338,0.013570365,-0.021876365,-0.02530795,-0.013004933,0.0075650886,-0.022090837,-0.00630749,-0.026750777,0.000020830497,0.02298773,-0.024723021,0.023046223,-0.021369426,-0.0047696126,0.0073652375,0.018737242,0.011308637,-0.030903777,-0.0076284558,0.0356807,0.015451889,-0.01269297,0.018766489,0.019468404,0.006414727,-0.030221358,0.034062397,0.036226634,0.00543497,0.009490482,0.008866557,-0.045156557,-0.017001951,-0.026789771,0.01452575,-0.004547827,0.023085218,0.013745843,0.011279391,0.0129074445,-0.00062392483,0.019741371,0.000018079121,0.04207593,-0.011191651,0.015490883,0.010694461,0.03519326,-0.013882327,0.009719579,-0.029343965,-0.018824982,0.026653288,-0.009885309,-0.020433538,0.015178921,0.032678064,0.020199565,0.032756053,-0.021369426,-0.017889094,0.012078795,0.010518982,0.016621748,0.0016499887,-0.040477123,-0.021154951,-0.03376993,0.022207825,-0.001606119,-0.0021228066,-0.0036290002,-0.016875217,-0.014330774,0.00805253,-0.023962613,-0.023065722,-0.005493463,0.0315472,0.013151165,0.002493262,-0.009105403,0.037552476,-0.011825325,0.026107354,0.01252724,0.045195553,0.0083498685,-0.0033389726,0.011269642,-0.04082808,-0.023631152,0.03462783,0.02895401,0.033808928,0.004818357]},{"id":"binary-tree-from-preorder-and-inorder-traversal","name":"Binary Tree from Preorder and Inorder Traversal","description":"You are given two integer arrays `preorder` and `inorder`.\n        \n* `preorder` is the preorder traversal of a binary tree\n* `inorder` is the inorder traversal of the same tree\n* Both arrays are of the same size and consist of unique values.\n\nRebuild the binary tree from the preorder and inorder traversals and return its root.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/938c14d3-6669-47ab-924b-a1a08640f200/public)\n\n```java\nInput: preorder = [1,2,3,4], inorder = [2,1,3,4]\n\nOutput: [1,2,3,null,null,null,4]\n```\n\n**Example 2:**\n\n```java\nInput: preorder = [1], inorder = [1]\n\nOutput: [1]\n```\n\n**Constraints:**\n* `1 <= inorder.length <= 1000`.\n* `inorder.length == preorder.length`\n* `-1000 <= preorder[i], inorder[i] <= 1000`\n","difficulty":"Medium","concepts":["Binary Tree","Depth-First Search"],"solutions":{"python":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nclass Solution:\n    def buildTree(self, preorder: List[int], inorder: List[int]) -> Optional[TreeNode]:\n        if not preorder or not inorder:\n            return None\n\n        root = TreeNode(preorder[0])\n        mid = inorder.index(preorder[0])\n        root.left = self.buildTree(preorder[1 : mid + 1], inorder[:mid])\n        root.right = self.buildTree(preorder[mid + 1 :], inorder[mid + 1 :])\n        return root\n","javascript":"/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     constructor(val = 0, left = null, right = null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {number[]} preorder\n     * @param {number[]} inorder\n     * @return {TreeNode}\n     */\n    buildTree(preorder, inorder) {\n        if (!preorder.length || !inorder.length) {\n            return null;\n        }\n\n        let root = new TreeNode(preorder[0]);\n        let mid = inorder.indexOf(preorder[0]);\n        root.left = this.buildTree(\n            preorder.slice(1, mid + 1),\n            inorder.slice(0, mid),\n        );\n        root.right = this.buildTree(\n            preorder.slice(mid + 1),\n            inorder.slice(mid + 1),\n        );\n        return root;\n    }\n}\n","cpp":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n\nclass Solution {\npublic:\n    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {\n        if (preorder.empty() || inorder.empty()) {\n            return nullptr;\n        }\n\n        TreeNode* root = new TreeNode(preorder[0]);\n        auto mid = find(inorder.begin(), inorder.end(), preorder[0]) - inorder.begin();\n        vector<int> leftPre(preorder.begin() + 1, preorder.begin() + mid + 1);\n        vector<int> rightPre(preorder.begin() + mid + 1, preorder.end());\n        vector<int> leftIn(inorder.begin(), inorder.begin() + mid);\n        vector<int> rightIn(inorder.begin() + mid + 1, inorder.end());\n        root->left = buildTree(leftPre, leftIn);\n        root->right = buildTree(rightPre, rightIn);\n        return root;\n    }\n};\n","java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    public TreeNode buildTree(int[] preorder, int[] inorder) {\n        if (preorder.length == 0 || inorder.length == 0) {\n            return null;\n        }\n\n        TreeNode root = new TreeNode(preorder[0]);\n        int mid = -1;\n        for (int i = 0; i < inorder.length; i++) {\n            if (inorder[i] == preorder[0]) {\n                mid = i;\n                break;\n            }\n        }\n\n        int[] leftPreorder = Arrays.copyOfRange(preorder, 1, mid + 1);\n        int[] leftInorder = Arrays.copyOfRange(inorder, 0, mid);\n        root.left = buildTree(leftPreorder, leftInorder);\n\n        int[] rightPreorder = Arrays.copyOfRange(preorder, mid + 1, preorder.length);\n        int[] rightInorder = Arrays.copyOfRange(inorder, mid + 1, inorder.length);\n        root.right = buildTree(rightPreorder, rightInorder);\n\n        return root;\n    }\n}\n","csharp":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\npublic class Solution {\n    public TreeNode BuildTree(int[] preorder, int[] inorder) {\n        if (preorder.Length == 0 || inorder.Length == 0) {\n            return null;\n        }\n\n        TreeNode root = new TreeNode(preorder[0]);\n        int mid = Array.IndexOf(inorder, preorder[0]);\n        root.left = BuildTree(preorder.Skip(1).Take(mid).ToArray(), inorder.Take(mid).ToArray());\n        root.right = BuildTree(preorder.Skip(mid + 1).ToArray(), inorder.Skip(mid + 1).ToArray());\n        return root;\n    }\n}\n"},"starterCode":{"python":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nclass Solution:\n    def buildTree(self, preorder: List[int], inorder: List[int]) -> Optional[TreeNode]:\n        ","javascript":"/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     constructor(val = 0, left = null, right = null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {number[]} preorder\n     * @param {number[]} inorder\n     * @return {TreeNode}\n     */\n    buildTree(preorder, inorder) {}\n}\n","cpp":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n\nclass Solution {\npublic:\n    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {\n        \n    }\n};\n","java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    public TreeNode buildTree(int[] preorder, int[] inorder) {\n        \n    }\n}\n","csharp":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\npublic class Solution {\n    public TreeNode BuildTree(int[] preorder, int[] inorder) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/ihj4IQGZ2zc","embedding":[-0.0030608673,-0.008011855,-0.020875962,-0.013080388,-0.03185935,0.012393927,-0.021120455,-0.0042175082,-0.071617715,0.05999488,0.025051154,0.013390707,-0.037689574,-0.06924801,-0.0090039335,-0.05521786,0.019352581,-0.01929616,-0.0013623446,0.065862715,0.047995906,0.00090627064,0.061348997,-0.036504723,0.05615822,-0.024355289,0.024825469,0.030524042,0.013353093,-0.02708233,0.005933663,-0.0049039703,0.002433178,0.067818664,-0.015243214,-0.005360044,0.046867475,-0.013456532,0.050854594,0.03379649,-0.045137215,0.007884908,-0.00012393633,-0.02121449,-0.017688146,-0.005181376,-0.028643323,0.014660191,-0.0048075835,0.0069210394,-0.03426667,-0.0063474206,0.022136042,0.052058253,-0.068759024,-0.033138238,-0.04769499,0.009845555,-0.0036415388,0.06902232,0.061085697,-0.02115807,0.004358562,0.022568608,0.02401676,-0.024110796,0.018891806,0.016569119,-0.00416814,-0.032235496,-0.06567465,-0.027853422,-0.02839883,0.0036532932,0.03298778,0.040661108,-0.0009103847,0.026969485,0.0063991407,-0.031182293,-0.021195684,-0.006314508,0.07609382,0.001248326,-0.01995441,0.010296927,-0.005971277,-0.015826236,-0.019164508,-0.07620666,-0.021966778,-0.039457448,0.0267438,0.052923385,0.022700258,-0.0025718808,0.023245666,0.025107576,-0.0036556441,0.0045395815,0.0011278426,-0.046679404,-0.00977973,-0.017584706,-0.019503038,0.007743853,0.04344457,0.0081294,-0.057286646,0.0220232,-0.039495062,-0.047883064,0.03033597,0.0068787234,0.019314967,-0.037275817,-0.041827153,-0.025427297,0.0029174627,-0.03451116,0.047582146,-0.054766487,0.002955077,-0.010851739,-0.045663815,0.022512186,-0.018271169,-0.018882401,0.01549711,0.011660447,0.029433224,0.025822248,-0.040924408,0.0068740216,-0.02960249,0.004210456,-0.0066248267,0.008373894,-0.018666118,0.0060371025,0.008228138,-0.019126894,-0.01054142,-0.011397147,-0.021308526,0.002160474,-0.0006112331,0.013936115,-0.016719576,0.013945519,0.04231614,0.0228131,0.02194797,-0.010635456,-0.009826748,0.024994733,-0.010484999,0.021120455,0.010456788,-0.038968462,0.012093012,-0.014519137,0.025803441,0.007029181,0.0034276072,0.017810393,-0.0044478965,-0.0064884746,0.018967034,-0.035865277,0.056760047,0.0042386665,0.023433737,0.020932384,0.035357486,-0.0055293087,-0.052772928,-0.011350129,0.017387232,-0.024486938,-0.0024731432,0.020311747,-0.045851886,-0.032686867,0.00048692946,-0.003178412,-0.012469156,-0.02089477,-0.012393927,0.02074431,0.009507026,0.008246945,0.016249398,0.036824442,0.023584194,-0.03419144,-0.0025859862,0.0018713137,-0.010221698,0.009704501,0.018299378,0.0009462359,-0.029301574,0.045137215,0.050854594,-0.014208819,-0.028342409,-0.018214747,0.0077203442,-0.021007612,0.04743169,-0.000029588238,-0.017152142,0.019390196,0.0134847425,0.002933919,0.011707465,0.017189756,-0.00014024567,0.03710655,-0.007870802,0.019352581,0.024505746,0.038028102,0.042917967,-0.0015492409,-0.0065166852,-0.02467501,0.026781414,-0.032009806,-0.0019312615,-0.008829967,0.001738488,0.012215259,-0.029583683,-0.014218222,-0.007156129,-0.04769499,-0.02294475,-0.024355289,0.0087359315,0.03178412,-0.032385953,-0.0008727704,-0.007880205,-0.0052189906,-0.0058819433,0.02687545,-0.037351046,0.046340875,0.004584248,-0.03851709,-0.028191952,-0.028022688,-0.03552675,0.0013270811,0.012224662,0.0127324555,-0.01051321,-0.024693817,-0.042015225,-0.000018641875,-0.006178156,-0.07643235,-0.016484488,-0.035413906,0.036673985,-0.00072877796,0.00042639388,0.02001083,0.03552675,-0.0180925,0.004661828,-0.055180244,-0.013108599,-0.01872254,0.01001482,0.008524351,0.008858179,-0.05435273,-0.05773802,0.04803352,0.031276327,0.018995244,-0.019352581,0.033420347,0.0030843762,-0.02766535,-0.03214146,-0.003208974,-0.017189756,0.0138985,-0.016164765,-0.007974241,-0.021778706,-0.014227626,-0.0025530737,0.020368168,0.03930699,-0.044309698,0.0069398466,-0.04664179,0.025107576,0.029527262,0.0070809005,-0.08026902,-0.013108599,0.018468644,-0.012196451,0.018242957,-0.02826718,0.017434249,0.011547604,0.007165533,0.007024479,-0.040284965,0.00977973,-0.07086543,-0.010268716,0.022662643,-0.02189155,0.011462972,0.0029057083,0.06086001,0.025841055,0.041827153,-0.04690509,0.03930699,0.02960249,-0.004121122,-0.024938311,-0.029941019,0.008656002,0.0027152856,-0.02068789,0.0037755398,0.031708892,-0.015562936,0.004015331,0.014650787,0.05574446,-0.04295558,0.032649253,0.020706696,-0.050177537,-0.016587926,0.0044173347,0.06067194,0.001248326,0.017067509,-0.026217198,-0.025051154,0.03838544,-0.057399493,-0.017274389,0.049237177,0.0000019537235,0.047243617,-0.020255325,0.042353753,-0.039156534,-0.033946946,-0.026386464,-0.04077395,0.0068975305,0.0051907795,-0.013550568,0.004114069,-0.03710655,0.04908672,0.02467501,0.0230764,-0.0020100165,0.019597074,-0.020067254,-0.029433224,0.002034701,0.028417638,0.012563191,0.011980169,-0.062289357,0.017518882,-0.022643836,0.00731599,-0.02706352,0.02766535,0.05946828,-0.015854446,-0.0092719365,0.010851739,0.025521334,-0.0020582099,0.028793782,0.016409257,-0.0069445483,0.002973884,0.021327334,0.057926092,0.01749067,0.019484231,-0.01164164,0.018365204,-0.04122532,0.010033627,-0.06349301,-0.0715801,0.033683646,-0.025107576,0.006544896,-0.043595027,-0.007616905,0.0019818058,-0.007847292,-0.025370875,-0.015243214,0.036090963,-0.009751519,-0.042993195,0.0025577755,0.01654091,0.010945775,-0.028304795,0.0013670464,0.024863083,-0.007095006,-0.0003876041,0.004231614,0.013409514,0.03334512,-0.01360699,0.02147779,0.02074431,-0.01051321,0.015487706,0.032179072,0.024336481,0.0356584,0.036862057,-0.0067705824,-0.0056327484,-0.028963046,0.002590688,0.02886901,-0.030279549,-0.024599781,0.030317163,0.011209075,0.047920678,0.015393671,-0.020913577,-0.0077908714,0.042880353,0.029320382,-0.007156129,0.022399344,0.0314644,0.02121449,0.040172122,0.0043115444,-0.028793782,-0.041864768,0.033213466,0.008072979,0.0001755826,-0.021101648,-0.0075651854,-0.025577756,0.01397373,0.027684158,-0.054390345,0.043745484,-0.027383244,-0.003961261,-0.02142137,-0.013804465,0.031690087,0.012243469,0.045325287,-0.024712624,-0.015666375,-0.012892317,-0.03125752,0.026405271,0.02055624,0.027702965,-0.019117491,0.061612297,-0.0125161735,-0.024994733,0.008171717,-0.012224662,-0.0028986556,0.0043491586,-0.00208407,0.030542849,0.022004392,-0.026969485,-0.034624007,0.009770326,-0.0052424995,0.0026447587,-0.032103844,0.0072172526,0.0068505127,0.008778248,-0.033100624,-0.03073092,0.031182293,0.0015457146,0.050177537,-0.03466162,-0.014359277,0.010353348,0.012290487,0.007090304,0.009751519,-0.012093012,-0.0043068426,0.019785145,-0.029922212,0.0057408893,-0.01227168,0.025201611,0.004370317,0.0147730345,0.019841567,-0.021270912,-0.0039941734,-0.02706352,-0.007005672,0.022775486,-0.0018630855,0.030787341,0.040999636,-0.016794804,0.026687378,0.0010520262,0.016381048,0.0020170694,0.006173454,-0.0024660905,0.001955946,-0.012779474,-0.0061452435,-0.023903916,0.0017678742,0.017763374,-0.0019700513,-0.000058001027,0.043331727,0.019249141,-0.015158582,-0.022643836,-0.044798687,-0.018647311,-0.030486427,-0.016183572,0.0042010522,0.017114528,0.0068317056,-0.019352581,-0.00053600443,-0.016522102,0.027458472,0.024938311,-0.0018912964,-0.022305306,0.00291041,0.013889097,0.014255837,0.0456262,-0.022512186,0.0028163742,-0.010748299,0.027232787,-0.0056562573,0.014707209,-0.074551634,-0.00941299,-0.020969998,-0.021647057,-0.018412221,-0.05115551,0.008134102,-0.02354658,0.032668058,-0.0012859404,0.01672898,0.044347312,-0.015186792,-0.013465935,0.027778193,0.034868497,0.013879693,-0.025728213,-0.02787223,-0.034473546,-0.016738383,0.015026931,-0.003841365,-0.022643836,0.014359277,0.03846067,0.048409663,-0.007151427,-0.023734652,0.034849692,0.0038437159,-0.015036334,0.023433737,0.008044768,-0.03152082,0.004908672,0.016183572,-0.003613328,-0.0091543915,0.013475339,0.037087746,0.014509734,-0.0044714054,0.013465935,-0.014434505,-0.004144631,0.044196855,0.0019853322,-0.003998875,-0.0058114165,0.022643836,0.021233298,0.017312003,-0.0220232,-0.025239225,0.0089710215,-0.00946471,0.0060182954,-0.053073842,0.013315478,0.0025789335,-0.006093524,0.0040106294,0.022230078,-0.0014058362,-0.03180293,-0.050591294,0.008538457,0.041939996,-0.003157254,0.0626655,-0.011716869,-0.019653495,0.012666631,0.020650275,0.028586902,0.013381303,0.011557007,0.018816575,-0.042090453,-0.043595027,-0.019314967,0.022606222,-0.012563191,-0.033439152,0.014255837,0.032762095,-0.0025154594,-0.025107576,0.021553019,0.05029038,-0.0070150755,-0.040548265,-0.015205599,0.0230764,0.00395891,-0.02627362,-0.05581969,-0.031031836,0.015976693,-0.01589206,-0.018496854,-0.028173145,0.013315478,0.025859863,-0.034680426,0.04024735,0.018177133,-0.004932181,-0.0043256497,-0.015243214,-0.016484488,-0.044460155,0.010212295,-0.038084526,-0.023358509,-0.015318442,-0.032498796,0.017349618,-0.0043374044,0.06281596,0.022888329,-0.06349301,-0.029809369,-0.0091543915,-0.019597074,0.019916795,-0.014584962,0.020311747,-0.019239739,0.051117897,0.015215003,0.000019578561,0.015666375,-0.0021169824,0.00359217,0.033025395,-0.035620786,0.025239225,0.0020676136,0.012600806,0.026687378,-0.034586392,-0.03866755,-0.006460264,0.0048028817,0.047770217,0.021458983,-0.021458983,-0.019785145,0.020913577,-0.0230764,-0.001124904,-0.034097403,0.007372412,-0.014180608,-0.004320948,-0.04908672,0.04415924,-0.058452692,0.038818005,0.025182804,0.0011172636,-0.0115287965,-0.00768273,0.015252617,-0.007757959,-0.032874938,-0.0014234679,-0.029715333,0.031840544,-0.056571975,0.04423447,-0.0019571213,-0.000011387156,-0.021364948,-0.03392814,0.0008786476,-0.016634945,-0.009676291,-0.019973217,0.004462002,-0.011942554,-0.024073182,0.024769047,-0.019597074,-0.009107374,0.0031008327,0.009163795,-0.0031690085,-0.006295701,-0.017876217,0.029922212,0.005844329,-0.01565697,0.045739044,-0.040999636,-0.0052472013,0.002160474,-0.0099395905,-0.008820564,-0.030824956,-0.054992173,0.018393414,0.036673985,0.040886793,0.0272704,0.020048447,0.004433791,-0.00075581326,0.040698722,0.011209075,-0.029564876,-0.009130882,-0.047883064,-0.034153827,-0.020819541,-0.0006694178,-0.014838859,-0.029922212,0.007334797,-0.002087596,-0.038705163,0.006027699,0.0065307906,-0.011331322,0.00012753614,-0.032762095,0.030806148,-0.011566411,-0.05773802,-0.002705882,0.005280114,-0.02221127,0.011180864,-0.022060813,0.011500586,-0.013324882,-0.010597842,-0.02162825,-0.010616649,0.015779218,0.003817856,0.010607245,-0.0061076293,-0.0011689833,0.027383244,-0.0024590378,-0.006300403,0.01882598,-0.031652473,0.015111564,-0.017932639,0.052509625,-0.0036485915,-0.0044525983,0.04077395,0.0035498538,0.008778248,0.03059927,-0.0017843305,0.012234066,0.025502525,-0.026424078,-0.013578779,0.01263842,-0.03904369,-0.018261764,0.016550312,0.038968462,0.00075581326,0.01051321,-0.027119944,0.004499616,0.0069633555,0.019314967,-0.027966266,-0.038028102,0.037745997,0.005176674,0.006070015,-0.0008469105,0.0055810283,0.040698722,-0.0015939078,-0.011321918,0.0034370108,-0.026837835,-0.014678998,-0.020217711,0.010682474,0.017650532,-0.0030914291,0.028511673,0.0041281744,0.008961618,-0.027119944,-0.013089792,-0.009807941,-0.032874938,0.013644604,-0.019916795,0.014246433,0.047920678,0.01982276,0.016616138,0.00035469152,-0.000183223,-0.031125871,0.0023979144,0.045739044,-0.0048334436,-0.016371643,0.0025977406,0.047920678,0.024355289,-0.010108856,0.007880205,-0.0034088,0.012939335,-0.00059654,0.03772719,0.002682373,-0.009107374,-0.023828687,0.04013451,0.015290231,0.042729896,-0.031295136,-0.0023979144,0.0043044914,-0.029771755,-0.030636884,-0.00881116,0.002330914,-0.022324113,0.015901465,0.038253788,0.020142483,0.018572083,0.023697037,-0.025521334,-0.0031713594,-0.017133335,-0.014829456,-0.014970509,0.028963046,-0.017678743,-0.02687545,-0.056459133,0.06101047,0.023941532,-0.014575559,0.012422138,0.026593342,0.020405782,-0.019860374,-0.012911124,-0.00019850383,-0.016465679,-0.0019500687,-0.008858179,-0.012384524,-0.01892942,-0.020142483,-0.0338153,-0.04103725,-0.005341237,-0.010682474,0.0022145447,-0.023715844,0.03372126,-0.010437981,0.014876474,-0.036956094,0.014152397,0.005157867,-0.0103251375,-0.025051154,-0.03957029,-0.019973217,-0.0055716247,0.023565387,-0.020593854,-0.023001172,0.028417638,0.063417785,0.021120455,0.02540849,0.004518423,-0.008557264,0.027759386,-0.02367823,0.012788878,-0.020274132,-0.024073182,-0.016888842,0.031426787,0.0041540344,-0.02142137,-0.0076921335,-0.00017954972,0.04216568,0.024204832,0.01882598,-0.044761073,-0.041676696,0.01845924,0.023903916,0.009144988,-0.002435529,-0.020951191,0.0435198,0.0065354924,0.0545408,0.04570143,-0.021252105,0.0023908617,0.040623493,-0.030542849,0.009257831,-0.03610977,-0.019841567,-0.048785806,-0.022587415,0.007579291,-0.008190524,0.0133342855,-0.037708383,0.023095207,0.014406295,0.012600806,-0.0014963457,-0.026123162,-0.02048101,0.025822248,0.0634554,0.011961361,0.010588438,0.055594,-0.037012517,-0.025163997,-0.035620786,0.016710173,-0.012027187,0.0002305348,0.038893234,0.032009806,-0.011350129,0.004774671,-0.01712393,0.0035380994,0.0152244065,0.001738488,-0.0026941274,0.019042263,6.5430226e-7,-0.027646543,-0.0074053244,0.013616393,-0.023979146,-0.026894256,0.02868094,-0.027308015,-0.01908928,-0.026424078,0.038253788,-0.020104868,-0.009568149,0.0025507228,-0.01014647,0.026950678,0.034379512,-0.0007082076,0.013813868,0.010569631,-0.0063051046,0.017979657,-0.019239739,0.024656203,0.0125161735,0.02619839,0.032385953,-0.018769559,-0.02821076,-0.008458526,0.025258033,0.0461528,0.006864618,0.00954464,-0.03710655,0.029151117,-0.046604175,0.028624516,0.0064696674,-0.04096202,0.001727909,0.00804947,-0.01822415,-0.04442254,-0.02142137,-0.03326989,-0.014650787,0.051569268,-0.01675719,-0.020819541,0.04682986,0.007781468,-0.025314454,0.034379512,0.014331066,-0.0068787234,-0.012694841,0.039758362,0.024863083,-0.021252105,0.008110593,0.0039471556,-0.0033688347,-0.018421626,0.020725504,0.015064545,0.008815862,0.01300516,0.013287268,0.0010361577,-0.03524464,-0.046453718,-0.022568608,0.009704501,0.014039555,0.017114528,-0.0022545098,0.029828176,0.013983133,0.009398884,0.025558949,-0.019145701,-0.009262533,0.006930443,-0.015882658,0.0028445849,-0.011162057,0.022925943,0.009408288,0.0019042263,0.014011344,-0.010334541,0.005228394,0.018882401,-0.008825266,0.022794293,0.041187707,-0.019023456,-0.01536546,-0.037031323,-0.011980169,-0.027702965,-0.0084350165,-0.005439975,0.007974241,-0.018007867,0.0004446133,0.0005515791,-0.016277608,0.007555782,0.02268145,0.058640763,-0.011792097,0.0035874683,0.02973414,0.01872254,-0.050967436,-0.0049886024,0.021101648,-0.0073253936,-0.011340725,-0.018214747,0.017236773,-0.012158837,-0.023114014,-0.055029787,0.028380023,-0.002567179,0.028963046,-0.021496598,0.033758875,0.002136965,0.012074205,-0.02488189,0.011331322,0.037144165,-0.0055293087,-0.008115295,-0.019540653,0.0137856575,-0.025596563,0.00964808,0.012788878,0.023866301,0.020198904,-0.009751519,0.014274644,0.02973414,0.0065166852,-0.03272448,-0.048522506,0.00087041943,-0.008834669,-0.009817344,-0.03610977,0.007964837,-0.0072031473,0.028981853,0.009032145,0.0018995245,-0.00532243,0.03253641,-0.0063239117,-0.016061325,-0.00613584,-0.0052424995,0.02986579,-0.0048334436,-0.0005242499,-0.051719725,0.016211784,-0.00041552098,0.01772576,-0.010184084,-0.05679766,-0.018148921,-0.022737872,0.036542337,0.015948482,-0.017810393,0.000153396,-0.005458782,-0.024336481,0.02268145,0.021440176,-0.022888329,-0.0054728873,-0.018487452,-0.010654263,-0.007913118,-0.015798025,-0.010579035,0.012431541,0.027157558,0.023057593,-0.012995756,-0.030298356,-0.03246118,-0.043106038,-0.014415698,0.011923747,-0.0063239117,-0.0031102363,-0.01227168,-0.0149234915,0.07929104,0.01350355,-0.020857155,0.00171733,0.008656002,-0.009516429,-0.009535236,-0.031238714,-0.008115295,0.028323602,-0.035413906,-0.034567583,-0.014556752,-0.03086257,0.013193232,-0.027909845,-0.0054869927,0.0013212039,-0.0217599,0.00500741,0.005933663,0.005844329,-0.01690765,0.0067705824,0.036768023,-0.003474625,0.033288695,0.013494146,0.030354777,0.020650275,-0.016324626,-0.013644604,0.013014563,-0.004163438,-0.0017949096,0.018816575,0.018891806,0.028436445,-0.005110849,0.019230334,-0.026066741,-0.009996012,0.022719065,0.013776254,0.060634326,-0.0068552145,0.009666887,-0.029207539,0.0060841204,-0.027251594,0.027702965,-0.0065119835,0.025220418,0.014378084,0.0015186792,0.0063850353,0.047017932,0.03206623,0.0022039656,0.009789133,-0.03445474,-0.0041728416,-0.051117897,0.014039555,-0.049989466,-0.004386773,-0.022925943,-0.010381559,-0.029771755,-0.005092042,0.03547033,0.049237177,-0.032498796,0.007043286,0.017170949,0.03232953,0.023264473,0.013014563,-0.004003577,-0.002522512,-0.026706185,0.0046547754,-0.013954923,-0.02913231,-0.02055624,0.025690598,-0.048710577,0.020838348,-0.032705672,0.0013118003,0.021778706,-0.014754227,-0.06593795,-0.06898471,0.024355289,-0.021910356,0.0021310877,0.008834669,0.02740205,0.025634177,0.010466192,0.00831277,-0.0031831139,-0.023903916,0.016832419,-0.0001425231,-0.03612858,-0.014331066,0.023038786,0.053713284,-0.04156385,0.0037543818,-0.0045771957,0.008717124,-0.008322174,0.019992024,0.008458526,0.033288695,0.019578267,-0.007964837,-0.039495062,-0.038498282,-0.04491153,0.046491332,0.011660447,-0.0039189444,-0.007334797,-0.013550568,0.006662441,0.031991,-0.015685182,-0.0051907795,-0.011425357,-0.02800388,-0.0021863338,-0.042090453,-0.030824956,-0.0015092756,-0.0144721195,-0.000102264,-0.029075889,0.03358961,0.03319466,0.014349873,-0.020951191,0.017312003,-0.0019171562,0.013663411,0.027815808,0.033025395,0.0017161545,-0.016775997,0.014180608,-0.0057549947,-0.009116777,-0.015271424,0.02813553,-0.034040984,0.034360703,-0.013174425,-0.012882913,-0.0020100165,-0.0016326976,0.032818515,-0.004250421,-0.0040388405,0.023903916,-0.02234292,0.012149434,0.050064694,-0.00241202,-0.018525066,0.021402562,0.0015163283,-0.0135693755,-0.0069398466,0.0010014819,-0.01919272,0.012563191,-0.021064034,-0.007278376,-0.01955946,-0.031031836,-0.02428006,0.010795318,-0.030354777,0.03851709,-0.023621809,-0.029320382,0.029433224,-0.0060559097,-0.03432309,-0.022737872,0.002708233,0.02800388,-0.024091989,-0.008237542,0.01686063,-0.032103844,0.042654667,-0.0037802418,0.048409663,0.022173656,-0.0045372304,-0.043106038,-0.009657484,0.015751008,0.0029903403,0.024975926,-0.022004392,0.05262247,0.026066741,-0.014528541,0.023697037,-0.01735902,0.008947512,-0.0056327484,0.028718553,-0.004224561,-0.031934578,0.0037167675,0.036974903,0.02740205,0.0007981294,0.009337761,0.0067940913,0.008458526,-0.011547604,-0.012393927,0.031013029,0.006159349,0.0062016654,0.02999744,-0.02839883,0.013682218,0.022888329,0.03878039,0.013710429,0.024073182,0.022004392,0.009948994,0.01942781,-0.008077681,0.023866301,0.000031424875,0.011970766,-0.031633664,0.06469668,-0.017321406,0.0010579035,-0.008232839,-0.004210456,0.012986353,0.0073630083,0.020838348,-0.026668571,-0.03332631,0.02002964,0.04761976,0.011049214,0.021383755,-0.0070761987,-0.025295647,0.013353093,-0.029113503,0.009883169,-0.03300659,-0.034868497,-0.007029181,-0.027759386,0.009050952,0.017406039,-0.023245666,-0.015967289,-0.005618643,-0.011359532,0.0088534765,0.014095976,-0.006051208,0.012779474,0.024505746,0.023753459,0.0019700513,-0.024298867,0.013287268,-0.017942043,0.057324264,-0.00045431076,0.04077395,0.039231762,0.0051625688,0.028756168,-0.024242446,-0.014481523,0.042729896,0.0045372304,0.04111248,-0.019258546]},{"id":"binary-tree-maximum-path-sum","name":"Binary Tree Maximum Path Sum","description":"Given the `root` of a *non-empty* binary tree, return the maximum **path sum** of any *non-empty* path.\n\nA **path** in a binary tree is a sequence of nodes where each pair of adjacent nodes has an edge connecting them. A node can *not* appear in the sequence more than once. The path does *not* necessarily need to include the root.\n\nThe **path sum** of a path is the sum of the node's values in the path.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/9896b041-9021-44c2-ab3e-5cff76adf100/public)\n\n```java\nInput: root = [1,2,3]\n\nOutput: 6\n```\n\nExplanation: The path is 2 -> 1 -> 3 with a sum of 2 + 1 + 3 = 6.\n\n**Example 2:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/19ce1187-387e-4323-f2c9-1a317ab36200/public)\n\n```java\nInput: root = [-15,10,20,null,null,15,5,-5]\n\nOutput: 40\n```\n\nExplanation: The path is 15 -> 20 -> 5 with a sum of 15 + 20 + 5 = 40.\n\n**Constraints:**\n* `1 <= The number of nodes in the tree <= 1000`.\n* `-1000 <= Node.val <= 1000`\n","difficulty":"Hard","concepts":["Binary Tree","Depth-First Search"],"solutions":{"python":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nclass Solution:\n    def maxPathSum(self, root: Optional[TreeNode]) -> int:\n        res = [root.val]\n\n        def dfs(root):\n            if not root:\n                return 0\n\n            leftMax = dfs(root.left)\n            rightMax = dfs(root.right)\n            leftMax = max(leftMax, 0)\n            rightMax = max(rightMax, 0)\n\n            res[0] = max(res[0], root.val + leftMax + rightMax)\n            return root.val + max(leftMax, rightMax)\n\n        dfs(root)\n        return res[0]\n","javascript":"/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     constructor(val = 0, left = null, right = null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {TreeNode} root\n     * @return {number}\n     */\n    maxPathSum(root) {\n        const res = [root.val];\n        this.dfs(root, res);\n        return res[0];\n    }\n\n    /**\n     * @param {TreeNode} root\n     * @param {number[]} res\n     * @return {number}\n     */\n    dfs(root, res) {\n        if (root === null) {\n            return 0;\n        }\n\n        const leftMax = Math.max(this.dfs(root.left, res), 0);\n        const rightMax = Math.max(this.dfs(root.right, res), 0);\n\n        res[0] = Math.max(res[0], root.val + leftMax + rightMax);\n        return root.val + Math.max(leftMax, rightMax);\n    }\n}\n","cpp":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n\nclass Solution {\npublic:\n    int maxPathSum(TreeNode* root) {\n        int res = root->val;\n        dfs(root, res);\n        return res;\n    }\n\nprivate:\n    int dfs(TreeNode* root, int& res) {\n        if (!root) {\n            return 0;\n        }\n\n        int leftMax = max(dfs(root->left, res), 0);\n        int rightMax = max(dfs(root->right, res), 0);\n\n        res = max(res, root->val + leftMax + rightMax);\n        return root->val + max(leftMax, rightMax);\n    }\n};\n","java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\npublic class Solution {\n\n    public int maxPathSum(TreeNode root) {\n        int[] res = new int[]{root.val};\n        dfs(root, res);\n        return res[0];\n    }\n\n    private int dfs(TreeNode root, int[] res) {\n        if (root == null) {\n            return 0;\n        }\n\n        int leftMax = Math.max(dfs(root.left, res), 0);\n        int rightMax = Math.max(dfs(root.right, res), 0);\n\n        res[0] = Math.max(res[0], root.val + leftMax + rightMax);\n        return root.val + Math.max(leftMax, rightMax);\n    }\n}\n","csharp":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\npublic class Solution {\n\n    public int MaxPathSum(TreeNode root) {\n        int res = root.val;\n        Dfs(root, ref res);\n        return res;\n    }\n\n    private int Dfs(TreeNode root, ref int res) {\n        if (root == null) {\n            return 0;\n        }\n\n        int leftMax = Math.Max(Dfs(root.left, ref res), 0);\n        int rightMax = Math.Max(Dfs(root.right, ref res), 0);\n\n        res = Math.Max(res, root.val + leftMax + rightMax);\n        return root.val + Math.Max(leftMax, rightMax);\n    }\n}\n"},"starterCode":{"python":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nclass Solution:\n    def maxPathSum(self, root: Optional[TreeNode]) -> int:\n        ","javascript":"/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     constructor(val = 0, left = null, right = null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {TreeNode} root\n     * @return {number}\n     */\n    maxPathSum(root) {}\n}\n","cpp":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n\nclass Solution {\npublic:\n    int maxPathSum(TreeNode* root) {\n\n    }\n};\n","java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    public int maxPathSum(TreeNode root) {\n        \n    }\n}\n","csharp":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\npublic class Solution {\n    public int MaxPathSum(TreeNode root) {\n\n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/Hr5cWUld4vU","embedding":[0.028054405,0.012698798,0.033906814,-0.023316741,-0.005796672,0.018997107,-0.0061496743,0.0005544693,-0.02597355,0.059007145,0.018383997,-0.00653519,-0.038198583,-0.07074913,0.018616235,-0.01626598,0.014733207,0.01548566,0.0036995586,0.015216264,0.025100332,-0.011528317,0.06658741,-0.020511301,0.054213744,-0.014417363,0.008982983,0.031119954,0.024635855,-0.04288051,0.007979713,-0.0023339966,-0.014658892,0.05272742,-0.026382288,-0.0027009333,0.026623817,0.021997627,0.0010363641,0.023892693,-0.0028518883,0.032922123,0.0027682823,0.009475329,0.000021336908,-0.0578924,-0.025824916,-0.00814228,0.014389494,0.01448239,0.016470352,0.00895976,0.047413804,0.031565852,-0.05915578,-0.024208536,-0.0060242657,0.014408074,-0.018662682,0.04529579,0.028463146,-0.017965967,-0.013832122,0.010562205,0.07342451,0.03000521,0.027236925,-0.021848993,0.010032701,-0.06071642,-0.039759222,-0.031324323,-0.02030693,-0.018579077,0.042360295,0.03039537,0.008578889,0.01952661,0.0050627985,-0.059007145,0.011807003,-0.032959282,0.06900269,-0.008987628,-0.009586804,0.0022550353,-0.05395364,-0.038681637,-0.08018729,-0.08330858,0.00745021,-0.06331749,0.059861783,0.008857574,-0.0037901315,-0.0022678084,-0.008834351,0.027887193,0.0028774345,0.009322052,-0.012605904,-0.073535986,0.014240862,-0.00543438,-0.000027705322,0.01649822,-0.002886724,-0.010023411,-0.052430153,0.01428731,0.015810793,-0.047450963,-0.008555665,-0.013023932,0.0007541944,-0.06506392,-0.06718194,-0.028277354,0.016405325,-0.023353899,0.052207205,-0.03624778,-0.023967009,-0.017566517,-0.057595138,0.030674055,0.0027102227,0.013776385,0.01711133,0.0029401388,0.028611777,0.021588886,-0.0012947294,-0.0017534003,-0.015337028,-0.030878425,-0.020957198,0.0041013313,0.016052322,0.009605383,-0.016832644,0.012931038,-0.024004167,0.0013434995,-0.0029540733,-0.00083838083,-0.028091563,0.08122772,-0.034705713,0.009772594,0.030525424,-0.01689767,0.0032141802,0.049568977,0.0010961655,-0.025397597,-0.0030446462,0.039201852,0.013497699,-0.029745102,-0.0039410866,-0.044775575,-0.00043893067,-0.00946604,0.0012018341,0.050683722,-0.034185503,0.00009289538,0.0045983214,-0.018987816,0.013841412,-0.043958094,0.045964636,-0.0039155404,0.029652206,-0.032606278,-0.06915132,0.012782405,-0.009061945,0.037845578,-0.045221474,0.00219117,-0.043326408,0.0005007642,-0.00614503,0.012104268,0.042397454,-0.020251194,-0.010329966,0.01408294,0.019015685,0.03381392,0.02471017,0.008485993,-0.01831897,0.027701404,0.030488264,-0.024821647,-0.026382288,-0.0023630264,-0.0065630586,0.012986775,0.00904801,-0.0072922874,0.015559977,-0.0074780784,-0.03520735,0.026177919,-0.0063865576,-0.03455708,0.030711213,-0.023372479,0.0019786716,0.0021412387,0.028909042,0.017603675,0.046410535,0.00007663869,0.0023804442,0.054845434,0.017585097,0.014668181,0.0123272175,0.03158443,0.033683866,0.0106551,-0.0181146,-0.006939285,0.04265756,0.018653393,0.039684907,-0.012717378,-0.013925018,-0.02194189,-0.031677324,-0.023093792,-0.025341861,-0.021180147,-0.021663204,-0.04083681,-0.0018822927,0.011509738,0.012048531,-0.00002404031,-0.042397454,-0.014770366,-0.012392244,0.018597655,-0.038124263,0.020139718,0.013525568,-0.0013400159,-0.007882173,-0.012968196,-0.008616047,-0.019015685,-0.016674722,-0.019396557,0.027738562,-0.042397454,0.005569078,0.0069485744,-0.035783302,-0.07357314,-0.0025824916,-0.05778093,0.031454377,-0.00053850294,0.0060892925,0.013943597,0.026400868,-0.038755953,0.019470872,-0.044998523,-0.017371437,-0.013934308,0.0317888,0.01809602,-0.024877384,-0.076099895,-0.004347504,0.04882581,0.03556035,0.0057177106,-0.006414426,-0.0075013023,0.022164838,0.011388974,-5.5111275e-7,0.009716857,-0.06695899,0.006962509,-0.029392099,-0.02835167,0.012187874,0.011584055,-0.021012936,0.020585617,0.058189668,-0.049977716,-0.049011603,-0.022034785,-0.011546896,0.024821647,0.020585617,-0.057409346,0.03459424,0.0333866,-0.019861033,0.017269252,-0.032364752,0.019247923,0.030915583,0.02675387,-0.01229006,-0.020065403,0.022815106,-0.07223545,0.002615005,0.016461061,0.019043554,0.0045634857,0.02333532,0.04685643,0.029039096,0.057223555,-0.062314223,0.04288051,0.025806338,-0.034129765,-0.0058291852,-0.0160709,0.019322239,0.008402388,-0.032160383,0.0031561207,0.010813023,0.0048026913,-0.025007438,0.05391648,0.041765764,-0.02374406,0.02054846,-0.01126821,-0.040725335,-0.016776906,0.04908592,0.05670334,0.020046823,0.023075214,-0.037251048,-0.022369208,0.03203033,0.027366979,-0.004359116,0.03580188,-0.028556041,0.020251194,-0.015903689,-0.0009997865,-0.05688913,-0.020622775,-0.031956013,-0.053024683,-0.01587582,0.00066710496,-0.029968051,-0.0075013023,-0.021477412,0.031621587,0.006855679,0.01648893,-0.016043033,0.02030693,-0.014751786,-0.0166933,0.011937057,0.010227782,-0.0030121328,0.013339777,-0.004721408,0.034092605,-0.019842453,0.042174503,0.001503744,-0.0181146,0.039499115,0.010134886,0.035151612,-0.01729712,0.045035683,-0.01913645,0.034984402,0.011193894,-0.015197685,0.019786717,0.017882362,0.051278252,0.03803137,0.019582346,0.020158298,0.02034409,-0.004746954,0.00077393465,-0.00863927,-0.03524451,0.035969093,0.03739968,0.01329333,-0.047971174,0.014157256,0.028816149,-0.018030994,-0.038161423,0.0106458105,0.0079518445,-0.016173087,-0.00914555,-0.06781363,-0.009605383,-0.008917957,0.043400723,-0.005095312,0.013906439,0.017603675,0.01046002,0.051352568,0.0044705905,0.04284335,0.029429257,0.047153696,0.04128271,-0.005694487,0.021551728,-0.0014143322,0.042137347,0.018467601,0.031157112,-0.019693822,0.0050627985,-0.024208536,-0.028537462,0.021050094,-0.0241528,0.013897149,0.03905322,0.028258776,0.037919894,0.017055592,0.013423383,0.032104645,-0.004909521,-0.018644104,-0.033442337,-0.02456154,0.010970945,0.06458087,0.071640916,-0.026698133,0.009238446,-0.0042174505,0.06194264,0.006623441,-0.0023049668,-0.009521777,-0.0036089856,0.018012416,0.018272521,0.007120431,-0.038793113,0.047599595,-0.038161423,-0.035151612,-0.025583388,-0.006600217,0.009219867,-0.0062239906,0.0063447547,-0.0014120098,-0.007882173,-0.03684231,-0.006070713,0.029949471,-0.0008848285,-0.00006168834,-0.02235063,0.04302914,0.0036809796,0.0008627659,0.00673956,-0.023818376,0.0028379539,0.011834872,-0.0017023078,0.010441441,0.0032954637,-0.01407365,0.021793257,0.0045611635,-0.0165168,0.013246882,-0.04061386,-0.013386224,-0.0126709305,0.010237071,-0.0499034,-0.008792548,0.029354941,0.0045077484,0.054027956,-0.04120839,-0.04388378,0.004493814,0.010701548,0.019062132,0.0031909563,-0.03318223,-0.027348401,0.016609695,-0.01548566,-0.032346174,-0.018551208,0.013432672,0.028871885,-0.022239154,0.0009214061,-0.026475184,0.014157256,-0.027125452,-0.007524526,0.00007123189,0.0064330054,-0.0013005354,0.022480683,-0.0146960495,0.012197164,0.011258921,0.032346174,0.010069859,0.0054250904,-0.00835594,0.006516611,-0.028481724,-0.027441297,-0.008662495,-0.00081631815,0.018272521,-0.0082584,0.003509123,-0.0045983214,0.0040061134,-0.04061386,-0.029819418,-0.05373069,0.003490544,-0.010515757,-0.020864302,0.012373665,0.03175164,-0.0030701924,-0.02212768,-0.0047005066,0.018671973,-0.00081922114,-0.008904022,-0.007882173,-0.00054634095,0.033145074,0.021254463,0.029819418,0.024208536,0.0063354652,0.002452438,-0.009191998,0.039796382,-0.017622255,-0.017631544,-0.054436695,-0.0032699176,-0.023223845,-0.024877384,-0.0060010417,-0.023093792,0.013404803,-0.02212768,0.015030473,0.015234843,-0.0004342859,0.028797569,-0.01626598,-0.023000896,0.03015384,0.04529579,0.025286123,-0.035318825,-0.021811835,-0.017938098,-0.015903689,-0.0054018665,0.01710204,-0.0058291852,0.014500969,0.03946196,0.03037679,-0.010376414,-0.02034409,0.025286123,0.028091563,0.008026161,0.04484989,0.0050349296,-0.055811547,0.0094521055,-0.009716857,0.0038481914,0.025230385,0.008746101,0.02374406,0.03277349,-0.015411344,0.019155027,0.00863927,0.030469686,-0.0018892599,-0.016256692,-0.0069067716,-0.031454377,0.037269626,0.04247177,0.015541398,-0.022034785,0.03277349,0.014779655,0.0061032264,0.019489452,-0.029837998,-0.020604195,-0.0058616986,-0.007310867,-0.020604195,0.046224743,0.031695906,-0.044924207,-0.038681637,-0.024914542,0.031324323,-0.010079149,0.038347214,0.013850702,-0.030878425,-0.028890464,0.031138532,0.00015792216,0.02411564,-0.014863261,0.0146867605,0.0012517653,-0.061868325,-0.016414614,-0.008360584,0.00219117,-0.016145218,0.02353969,0.0442182,0.003725105,-0.004663348,0.022796527,0.05778093,0.0078032124,-0.03901606,-0.025323281,0.008801837,-0.008643915,-0.0021853638,-0.030302474,-0.033275127,-0.015253422,-0.019285081,-0.023205267,-0.019229345,0.017780175,0.021681782,-0.017250672,0.048454233,-0.028444566,0.022908002,-0.001262216,-0.013339777,-0.021848993,-0.011937057,-0.004535617,0.0056433943,-0.036359254,-0.012020662,-0.027794298,-0.011370395,0.0015153559,0.04447831,0.020734249,-0.088807985,0.0016314752,-0.033293705,-0.017167067,-0.009540356,-0.042769033,-0.0018021704,-0.030934162,0.03119427,0.037251048,-0.025304703,-0.008165504,-0.0075338157,0.008239821,-0.019210765,-0.006786008,0.023651164,0.028407408,0.04566737,-0.0035880841,-0.04109692,-0.040130805,0.0018265555,0.007631356,0.010283519,0.0020483432,0.009029431,-0.0053972215,-0.0153741855,-0.0019531255,0.027144032,-0.035133034,-0.029299203,-0.038644478,0.0032048908,-0.032048907,0.0051603387,-0.03838437,0.024895962,-0.009020141,-0.0026475184,0.00602891,0.014705339,-0.010339256,-0.04704222,-0.006799942,-0.0043684053,-0.028481724,-0.00041106206,-0.0578924,0.03838437,0.02374406,0.00005983769,-0.0033163652,-0.041171234,0.03556035,0.025044596,-0.015643582,-0.013813543,0.038755953,-0.02052988,-0.03739968,-0.0024686947,-0.0002646067,-0.016126638,-0.0023827665,-0.016749037,-0.026066445,0.005689842,-0.027831458,0.023186687,-0.002566235,-0.022889422,0.03281065,-0.008332716,-0.005513341,-0.0007989003,-0.010590074,-0.05893283,-0.008588178,-0.043326408,0.010701548,0.029856576,0.016618984,0.0005266007,-0.00045721946,0.0028936912,-0.006484098,0.018012416,0.0012784727,-0.014816813,-0.00084999274,-0.048342757,-0.034835767,-0.011862741,0.04020512,0.014751786,-0.008021517,0.016563246,-0.0023943784,-0.06576993,-0.015216264,0.006925351,-0.022090523,-0.013423383,-0.040502388,0.04890013,0.01567145,-0.048194125,-0.022480683,-0.0007559362,-0.025100332,0.014584575,-0.02896478,-0.003230437,-0.002203943,0.0102928085,-0.041617133,-0.036563624,0.024059905,0.033256546,0.010933787,0.02777572,0.017687282,0.017343568,-0.03639641,0.056257445,-0.010617943,0.0034394516,0.0013237592,0.020585617,0.053210475,-0.0075198812,-0.005151049,0.044775575,0.0055458546,0.02673529,0.051241092,0.0038389016,-0.011240342,0.022573577,-0.0106551,-0.01306109,0.0021180147,-0.04607611,-0.005573723,0.015625004,0.018802026,0.0010299776,-0.0136834895,-0.05213289,0.00073445414,-0.0013121472,-0.007078628,0.0068649687,-0.02034409,0.03595051,0.010552916,0.01690696,-0.011686239,-0.018328259,0.014612444,0.0031421864,0.0015966394,-0.010394993,-0.022090523,-0.005573723,-0.022480683,-0.025992129,-0.00523001,0.015281291,0.03238333,-0.0060196207,0.018774157,0.010339256,0.0069114165,-0.0037785198,-0.052987527,0.014380205,-0.008379163,0.023428215,0.0241528,-0.005164983,0.01188132,-0.0040966864,0.009312762,-0.03281065,0.019210765,0.038310055,0.013107538,-0.0019136448,0.011212473,-0.016423903,0.0017719794,-0.013339777,-0.019470872,0.017176356,-0.0049652583,-0.008072609,0.019359399,-0.053842165,0.026809607,-0.009061945,0.016191665,-0.0058245403,0.026438026,-0.044626944,-0.002198137,0.003834257,0.012893879,-0.02054846,-0.05896999,-0.0066280854,-0.025416177,0.017194936,-0.016971987,0.02634513,0.0042615756,0.035913356,0.0030841266,-0.0043753725,0.0027102227,-0.04882581,0.0027706048,-0.0044775573,-0.01809602,-0.02316811,-0.026066445,0.031064216,0.010255651,-0.010794443,0.030488264,-0.026326552,-0.0009742403,0.016210245,-0.0012041564,0.020882882,-0.035300244,-0.038198583,0.024004167,-0.009373144,-0.020176876,-0.018003125,-0.022759369,-0.054994065,-0.017009145,-0.017074171,-0.0025290768,-0.062239908,0.050609406,0.02695824,0.04852855,-0.02012114,0.016479641,-0.022276312,-0.011714107,-0.059675995,-0.01950803,0.0071390104,0.013553436,0.009419592,0.02471017,-0.021012936,0.008801837,0.047859702,-0.00030423238,0.019155027,-0.006744205,0.0091269715,0.036154885,-0.042323135,0.0060660685,0.020028245,-0.0030539357,0.0019403523,0.004180292,-0.026475184,0.013358356,0.010450731,0.0016895348,0.024078483,-0.008917957,0.026902502,-0.0681109,-0.01950803,0.022852264,-0.0031793446,-0.03076695,-0.011593344,-0.025248965,0.05774377,0.010199913,0.046224743,0.06692183,-0.015532108,0.020864302,0.012587325,-0.0065212557,0.07877529,0.00086973305,-0.035337403,-0.01849547,-0.0079472,0.018802026,0.001232025,0.007143655,-0.007622066,0.0093685,0.033349443,0.007287643,-0.024487223,-0.009484619,-0.031324323,0.0011031326,0.025137492,0.015978007,-0.005002416,0.035913356,-0.028816149,-0.004354471,-0.03416692,-0.017975256,0.010134886,0.007426986,0.02493312,0.009335986,-0.008026161,0.031231428,-0.029522153,-0.013841412,-0.010339256,0.0006822005,-0.02012114,0.020975778,-0.0068463897,-0.00753846,0.025137492,0.020083982,-0.013637043,-0.01790094,-0.024208536,-0.01767799,-0.029373521,-0.021291621,0.00016329267,-0.03396255,0.0026800318,-0.04228598,-0.024412906,0.023000896,0.057483662,0.019099291,-0.0003776778,-0.03379534,-0.01087805,-0.008973694,-0.014203704,0.010738706,0.014751786,-0.017733729,0.006990378,-0.029745102,-0.0069717984,-0.0048398497,0.020028245,0.021235885,0.0048212702,0.038904585,-0.00774283,0.009201287,-0.057855245,0.022369208,0.010069859,-0.043920938,0.007403762,-0.009122327,-0.05049793,-0.022387788,-0.03058116,-0.011491159,0.018207494,0.038124263,0.008815772,0.0025894588,0.02612218,-0.010710837,-0.008699653,0.02777572,-0.014826103,-0.018486181,0.002656808,0.036749415,0.037659787,-0.0020762119,0.0014247829,-0.013562726,0.0054483144,0.0024245696,0.025267543,-0.010970945,-0.0020924686,0.0142966,0.038347214,0.01307967,-0.04908592,-0.04202587,-0.02316811,-0.00032368235,0.052615944,0.01626598,-0.014677471,0.017176356,0.006010331,-0.03158443,0.00813299,-0.009205933,-0.03639641,-0.012605904,0.02474733,-0.03097132,-0.037771262,0.024301432,-0.013646332,0.029373521,0.021347359,-0.036898047,-0.0051231803,0.0010456536,-0.0058291852,-0.018755578,0.02837025,-0.015829373,-0.03639641,-0.022555,0.0056480393,-0.02838883,-0.014528838,-0.008671784,-0.019582346,-0.005109246,-0.002935494,-0.0028379539,-0.025397597,0.0008116734,-0.010478599,0.048342757,0.0077939224,0.02114299,0.030302474,0.026400868,-0.015996585,0.047711067,0.017037014,0.031863116,-0.02212768,-0.024970278,0.020678513,-0.024450066,-0.043363564,-0.0070461147,-0.0041222326,-0.028128723,-0.0010514596,-0.020771408,0.0031537982,-0.0046470915,-0.015392765,-0.00032513385,0.002547656,-0.00038783823,-0.024097063,-0.001153064,-0.033683866,-0.0039898567,-0.019322239,0.02171894,0.008741455,-0.023874113,0.00427551,-0.012048531,0.02233205,0.025732022,0.010506468,-0.0022979996,0.0032374042,0.012977485,0.0023351577,-0.0015281291,-0.0128753,0.044589784,0.0077985674,0.020399826,0.0016558602,-0.0061264504,-0.028203038,0.005295037,0.00075651676,0.009015497,-0.035095874,-0.011509738,-0.012503719,-0.0013562726,0.0031073506,-0.027366979,0.019340819,-0.01610806,-0.004342859,0.016749037,-0.025453335,-0.025286123,-0.013376935,0.025843496,0.007910042,-0.047599595,-0.029020518,0.0040734624,-0.023056634,0.007018246,-0.014231573,-0.004705151,0.012791694,-0.005773448,-0.006210056,-0.0008557987,-0.014761076,0.0010793282,-0.012605904,0.032866385,0.0059453044,0.012912458,-0.0096332515,-0.017956678,-0.01649822,-0.005411156,0.002271292,0.025044596,-0.011193894,-0.0011176476,0.020678513,0.043326408,7.733722e-7,0.0028286644,-0.010580784,-0.008523151,0.019266503,0.010571495,-0.03078553,0.028110143,0.025304703,-0.027032556,-0.0081051225,-0.0012088012,-0.00915484,-0.002022797,0.011351815,0.009986253,0.01893208,-0.025471915,-0.00087786134,0.01407365,0.038124263,-0.013637043,-0.029410679,0.026865344,0.0009812075,0.022555,-0.007826436,0.009874779,0.010627232,-0.013451251,0.00223994,-0.007422341,-0.007970423,0.033943973,-0.007900752,0.039387643,0.015652873,-0.0023641875,0.03138006,0.011695528,-0.008379163,0.00013622237,0.015327739,0.04362367,-0.033646706,0.027831458,-0.03961059,0.018681262,-0.03539314,0.019972507,-0.028630357,-0.025137492,-0.010998813,-0.006981088,0.0069299955,0.037362523,0.01026494,0.031510115,-0.0005091828,-0.0382729,-0.0000640833,-0.012308639,0.010580784,-0.060084734,-0.00417797,-0.023242425,-0.022610737,-0.008379163,0.038310055,0.015847953,0.062462855,-0.015559977,0.011584055,0.0046912166,-0.0048212702,0.02112441,0.0033302994,0.016832644,-0.006056779,-0.031807378,0.000631108,-0.004270865,-0.031045636,-0.0435122,0.019099291,-0.059044305,-0.008476703,0.01631243,0.019953929,0.034464188,-0.025992129,-0.028314512,-0.025713442,0.014408074,0.0049188104,-0.007375893,-0.006762784,0.0019484806,-0.0029749747,0.0033837142,0.026066445,-0.012299349,-0.03219754,0.029522153,-0.010199913,0.0064469394,-0.049346026,0.060419157,0.027701404,-0.047562435,-0.062091272,0.00594066,0.006010331,-0.03321939,0.017585097,0.0109616555,0.015764346,0.015188395,-0.016451772,-0.002649841,-0.019675242,-0.0019705433,0.002879757,0.012708088,-0.023651164,0.009763305,-0.022685053,0.012856721,-0.0092709595,-0.021403097,-0.01626598,0.012122847,-0.028128723,-0.012615193,0.008128346,-0.016934829,-0.032364752,-0.026252234,0.024227116,-0.038681637,0.02615934,0.027794298,0.023261003,-0.018393286,0.0010491372,0.02052988,0.019062132,0.000038827366,0.020046823,0.018774157,-0.031807378,0.025286123,0.0012831175,-0.009475329,-0.014166546,-0.00024239889,-0.032476224,0.011091709,0.0011937057,0.0010520403,0.012150716,-0.042583242,0.037771262,0.0008267689,0.0060660685,-0.015179105,-0.005346129,-0.004198871,0.038310055,0.03583904,-0.031565852,0.0047005066,0.018662682,-0.023576848,0.01307038,-0.025806338,-0.03320081,0.033906814,-0.009229156,-0.007705672,-0.03262486,-0.033943973,-0.021105831,-0.023409637,0.007631356,0.0032257922,-0.029540733,-0.040167965,0.018727709,0.006553769,-0.038570162,-0.034780033,-0.021384517,0.003629887,-0.003859803,0.006140385,-0.005192852,-0.017603675,0.026921082,0.006516611,0.013367645,-0.005439025,0.02294516,-0.028816149,-0.0039945017,0.0028844017,-0.011844161,0.015206974,-0.05046077,0.017194936,0.017185645,-0.032067485,0.016841933,-0.0036600782,0.0064887423,0.02755277,-0.013033222,0.005592302,-0.031361483,0.007970423,0.031863116,0.04187724,0.010394993,0.025862075,0.0016396035,-0.005415801,-0.038198583,0.00041570683,0.026196498,-0.022759369,0.009819042,0.028277354,-0.006920706,-0.01229006,-0.004105976,0.013311909,-0.011156736,0.00028666935,0.008021517,0.011184604,0.03535598,-0.0013330488,0.028816149,0.019656664,0.030897005,0.0058616986,0.018365417,-0.0072737085,0.011714107,0.004524005,-0.0040525612,-0.0011182282,-0.0039898567,0.0037065258,0.00926167,-0.021440255,0.012773115,0.048417073,0.0003440032,0.07067481,-0.009707567,-0.04644769,0.0027706048,-0.0031816668,0.011231052,0.00844419,-0.018616235,0.014965446,-0.040390912,0.00945675,0.008588178,0.0024245696,0.0013504666,0.0013133085,-0.0059453044,-0.0034022934,-0.0007861272,-0.03121285,0.024227116,0.024803067,0.021997627,-0.011862741,0.00058843417,0.038310055,-0.04228598,0.039387643,0.021848993,0.042211663,0.010432151,0.0126616405,0.032290436,-0.014315179,-0.0008308331,0.029020518,0.0322347,0.050014876,0.005504051]},{"id":"serialize-and-deserialize-binary-tree","name":"Serialize and Deserialize Binary Tree","description":"Implement an algorithm to serialize and deserialize a binary tree.\n\nSerialization is the process of converting an in-memory structure into a sequence of bits so that it can be stored or sent across a network to be reconstructed later in another computer environment.\n\nYou just need to ensure that a binary tree can be serialized to a string and this string can be deserialized to the original tree structure. There is no additional restriction on how your serialization/deserialization algorithm should work.\n\n**Note:** The input/output format in the examples is the same as how NeetCode serializes a binary tree. You do not necessarily need to follow this format.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/a9dfb17f-70e9-42a3-ba97-33cfd82f6100/public)\n\n```java\nInput: root = [1,2,3,null,null,4,5]\n\nOutput: [1,2,3,null,null,4,5]\n```\n\n**Example 2:**\n\n```java\nInput: root = []\n\nOutput: []\n```\n\n**Constraints:**\n* `0 <= The number of nodes in the tree <= 1000`.\n* `-1000 <= Node.val <= 1000`\n","difficulty":"Hard","concepts":["Binary Tree","Depth-First Search"],"solutions":{"python":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nclass Codec:\n    \n    # Encodes a tree to a single string.\n    def serialize(self, root: Optional[TreeNode]) -> str:\n        res = []\n\n        def dfs(node):\n            if not node:\n                res.append(\"N\")\n                return\n            res.append(str(node.val))\n            dfs(node.left)\n            dfs(node.right)\n\n        dfs(root)\n        return \",\".join(res)\n        \n    # Decodes your encoded data to tree.\n    def deserialize(self, data: str) -> Optional[TreeNode]:\n        vals = data.split(\",\")\n        self.i = 0\n\n        def dfs():\n            if vals[self.i] == \"N\":\n                self.i += 1\n                return None\n            node = TreeNode(int(vals[self.i]))\n            self.i += 1\n            node.left = dfs()\n            node.right = dfs()\n            return node\n\n        return dfs()\n","javascript":"/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     constructor(val = 0, left = null, right = null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Codec {\n    /**\n     * Encodes a tree to a single string.\n     *\n     * @param {TreeNode} root\n     * @return {string}\n     */\n    serialize(root) {\n        const res = [];\n        this.dfsSerialize(root, res);\n        return res.join(',');\n    }\n\n    dfsSerialize(node, res) {\n        if (node === null) {\n            res.push('N');\n            return;\n        }\n        res.push(node.val.toString());\n        this.dfsSerialize(node.left, res);\n        this.dfsSerialize(node.right, res);\n    }\n\n    /**\n     * Decodes your encoded data to tree.\n     *\n     * @param {string} data\n     * @return {TreeNode}\n     */\n    deserialize(data) {\n        const vals = data.split(',');\n        const i = { val: 0 };\n        return this.dfsDeserialize(vals, i);\n    }\n\n    dfsDeserialize(vals, i) {\n        if (vals[i.val] === 'N') {\n            i.val++;\n            return null;\n        }\n        const node = new TreeNode(parseInt(vals[i.val]));\n        i.val++;\n        node.left = this.dfsDeserialize(vals, i);\n        node.right = this.dfsDeserialize(vals, i);\n        return node;\n    }\n}\n","cpp":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n\nclass Codec {\npublic:\n    // Encodes a tree to a single string.\n    string serialize(TreeNode* root) {\n        vector<string> res;\n        dfsSerialize(root, res);\n        return join(res, \",\");\n    }\n\n    // Decodes your encoded data to tree.\n    TreeNode* deserialize(string data) {\n        vector<string> vals = split(data, ',');\n        int i = 0;\n        return dfsDeserialize(vals, i);\n    }\n\nprivate:\n    void dfsSerialize(TreeNode* node, vector<string>& res) {\n        if (!node) {\n            res.push_back(\"N\");\n            return;\n        }\n        res.push_back(to_string(node->val));\n        dfsSerialize(node->left, res);\n        dfsSerialize(node->right, res);\n    }\n\n    TreeNode* dfsDeserialize(vector<string>& vals, int& i) {\n        if (vals[i] == \"N\") {\n            i++;\n            return NULL;\n        }\n        TreeNode* node = new TreeNode(stoi(vals[i]));\n        i++;\n        node->left = dfsDeserialize(vals, i);\n        node->right = dfsDeserialize(vals, i);\n        return node;\n    }\n\n    vector<string> split(const string &s, char delim) {\n        vector<string> elems;\n        stringstream ss(s);\n        string item;\n        while (getline(ss, item, delim)) {\n            elems.push_back(item);\n        }\n        return elems;\n    }\n\n    string join(const vector<string> &v, const string &delim) {\n        ostringstream s;\n        for (const auto &i : v) {\n            if (&i != &v[0])\n                s << delim;\n            s << i;\n        }\n        return s.str();\n    }\n};\n","java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Codec {\n    \n    // Encodes a tree to a single string.\n    public String serialize(TreeNode root) {\n        List<String> res = new ArrayList<>();\n        dfsSerialize(root, res);\n        return String.join(\",\", res);\n    }\n\n    private void dfsSerialize(TreeNode node, List<String> res) {\n        if (node == null) {\n            res.add(\"N\");\n            return;\n        }\n        res.add(String.valueOf(node.val));\n        dfsSerialize(node.left, res);\n        dfsSerialize(node.right, res);\n    }\n\n    // Decodes your encoded data to tree.\n    public TreeNode deserialize(String data) {\n        String[] vals = data.split(\",\");\n        int[] i = {0};\n        return dfsDeserialize(vals, i);\n    }\n\n    private TreeNode dfsDeserialize(String[] vals, int[] i) {\n        if (vals[i[0]].equals(\"N\")) {\n            i[0]++;\n            return null;\n        }\n        TreeNode node = new TreeNode(Integer.parseInt(vals[i[0]]));\n        i[0]++;\n        node.left = dfsDeserialize(vals, i);\n        node.right = dfsDeserialize(vals, i);\n        return node;\n    }\n}\n","csharp":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\npublic class Codec {\n    \n    // Encodes a tree to a single string.\n    public string Serialize(TreeNode root) {\n        List<string> res = new List<string>();\n        dfsSerialize(root, res);\n        return String.Join(\",\", res);\n    }\n\n    private void dfsSerialize(TreeNode node, List<string> res) {\n        if (node == null) {\n            res.Add(\"N\");\n            return;\n        }\n        res.Add(node.val.ToString());\n        dfsSerialize(node.left, res);\n        dfsSerialize(node.right, res);\n    }\n\n    // Decodes your encoded data to tree.\n    public TreeNode Deserialize(string data) {\n        string[] vals = data.Split(',');\n        int i = 0;\n        return dfsDeserialize(vals, ref i);\n    }\n\n    private TreeNode dfsDeserialize(string[] vals, ref int i) {\n        if (vals[i] == \"N\") {\n            i++;\n            return null;\n        }\n        TreeNode node = new TreeNode(Int32.Parse(vals[i]));\n        i++;\n        node.left = dfsDeserialize(vals, ref i);\n        node.right = dfsDeserialize(vals, ref i);\n        return node;\n    }\n}\n"},"starterCode":{"python":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nclass Codec:\n    \n    # Encodes a tree to a single string.\n    def serialize(self, root: Optional[TreeNode]) -> str:\n\n        \n    # Decodes your encoded data to tree.\n    def deserialize(self, data: str) -> Optional[TreeNode]:\n","javascript":"/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     constructor(val = 0, left = null, right = null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Codec {\n    /**\n     * Encodes a tree to a single string.\n     *\n     * @param {TreeNode} root\n     * @return {string}\n     */\n    serialize(root) {}\n\n    /**\n     * Decodes your encoded data to tree.\n     *\n     * @param {string} data\n     * @return {TreeNode}\n     */\n    deserialize(data) {}\n}\n","cpp":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n\nclass Codec {\npublic:\n\n    // Encodes a tree to a single string.\n    string serialize(TreeNode* root) {\n        \n    }\n\n    // Decodes your encoded data to tree.\n    TreeNode* deserialize(string data) {\n        \n    }\n};\n","java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\npublic class Codec {\n\n    // Encodes a tree to a single string.\n    public String serialize(TreeNode root) {\n        \n    }\n\n    // Decodes your encoded data to tree.\n    public TreeNode deserialize(String data) {\n        \n    }\n}\n","csharp":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\npublic class Codec {\n\n    // Encodes a tree to a single string.\n    public string Serialize(TreeNode root) {\n        \n    }\n\n    // Decodes your encoded data to tree.\n    public TreeNode Deserialize(string data) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/u4JAi2JJhI8","embedding":[0.023549775,-0.0030420278,-0.03906029,-0.028989378,0.04406298,0.03622034,0.029753981,-0.028552461,0.0030119899,0.024489144,0.051075485,0.003937706,-0.028443234,-0.063178055,0.007323805,-0.077465214,0.028312158,0.015718054,0.012889023,0.0520367,0.0025286514,0.00072159414,0.046007257,-0.020797202,0.04858506,-0.025778046,0.001385843,0.082489744,0.026782952,-0.037028633,-0.036438797,0.0106552895,0.03211333,0.040261813,0.008224945,-0.060906094,0.015488673,0.005543372,0.03377361,0.024423607,0.008967701,0.023899307,-0.034975126,-0.014887913,0.04548296,0.01830678,-0.035302814,0.016810345,-0.000037675472,0.021561805,-0.019934293,0.023069166,-0.012998252,0.011512737,-0.05675539,0.010475062,-0.048410296,0.023200242,-0.03622034,0.003973205,0.048060764,-0.011283357,0.018317705,0.006258822,0.030911809,-0.024161456,-0.01954107,-0.0067940443,-0.040261813,-0.031763796,-0.0038312073,-0.010573368,-0.015313907,-0.007711568,0.036395106,-0.004789692,-0.040502116,0.0030229127,0.005663524,-0.05208039,-0.0015483212,0.006182362,0.027962625,-0.000007424159,0.01133797,0.0029601061,-0.07143577,0.024620218,-0.020119984,-0.040436577,-0.010589752,0.006679354,-0.028290313,0.035259124,0.029426293,0.033096388,-0.0012411146,0.015728977,-0.007990101,-0.004393737,-0.013063789,-0.041550715,-0.021419808,-0.023265779,0.025210055,0.0038694376,0.016559117,-0.019082308,-0.07353297,-0.031916715,-0.014964374,-0.028399542,-0.0076678763,-0.00028211804,0.0064608958,-0.013653626,-0.028639846,-0.011982422,0.0029737598,-0.0076787993,0.00880932,-0.04172548,-0.020961046,-0.0045138886,0.010294834,0.009852456,0.0032468322,0.032288093,0.046837397,-0.03735632,-0.0051392247,-0.012910869,-0.018656313,-0.010753595,-0.042075012,-0.016198661,-0.042206086,0.0063025136,-0.012004267,0.07318343,-0.037815083,-0.036766484,0.006963349,-0.0071545,-0.011698427,0.008798396,-0.08139746,0.025799891,-0.054090206,0.003528097,0.022850707,0.015237446,-0.045220807,-0.00042701713,-0.049196746,-0.037137862,-0.025668817,0.0228944,0.005690831,-0.058677822,-0.017629562,-0.012222726,0.008989547,0.026193116,-0.007564109,0.0060840556,-0.0064827413,0.02907676,0.0010827326,0.021397963,0.02711064,-0.020098137,0.008405172,0.0076787993,-0.0024917866,-0.056012634,0.006269745,-0.067678295,-0.036963094,-0.00843248,-0.036045574,0.020961046,-0.04002151,0.024510989,-0.0049043824,-0.0062260535,0.02955737,0.01878739,-0.010857363,0.025406666,-0.0028672614,0.06383343,0.019082308,0.04063319,0.009502923,-0.03272501,0.0011905961,0.021802109,0.02805001,0.0018063746,0.023353161,0.03038751,-0.02835585,-0.0015346676,-0.0055788714,-0.066323854,-0.090092085,0.018022787,-0.019901525,-0.036875714,0.020939201,-0.016122201,0.008405172,0.0060567483,-0.004093357,0.03532466,0.0228944,0.00500815,0.013413322,-0.006307975,-0.008711013,0.03174195,-0.016198661,0.024445452,0.021245042,-0.0003915177,-0.023593465,-0.009022316,0.044368822,-0.03351146,0.028552461,-0.0077552595,-0.0037219783,0.017804328,-0.046662632,0.020393055,-0.061998382,-0.05422128,-0.011949654,0.0036919403,-0.0030666043,0.01566344,0.028596153,-0.0078044124,-0.03969382,0.016034817,-0.02274148,-0.025756199,-0.049939502,0.023746386,-0.002105389,-0.011545506,-0.014636687,0.002308828,-0.012288263,-0.04718693,-0.022938091,-0.00078986224,0.051949315,0.0012083459,0.027569402,-0.050900716,-0.028181084,-0.072309606,-0.0009270812,-0.04089534,0.048410296,-0.05286684,0.007061655,0.018514317,0.053784363,-0.05806614,0.023375008,0.020764435,-0.045395575,0.025297439,0.013020097,-0.003735632,0.018252168,-0.02835585,-0.011261511,0.035936344,0.0074494183,0.017826173,-0.0424027,0.0044647357,0.00096189795,0.0104477545,0.006985195,0.028814612,0.01457115,0.010884671,-0.025122672,-0.042533774,-0.020742588,0.010272988,0.033380385,0.03257209,0.03174195,-0.019104153,-0.03261578,-0.030846272,-0.035302814,0.012834408,-0.042927,-0.027394636,-0.023484236,-0.014494689,0.014177925,0.0037219783,0.005019073,0.01607851,0.006340744,-0.0021859454,-0.022938091,-0.042053167,0.0436916,-0.058022447,-0.0049426127,0.012288263,-0.02304732,-0.015357599,0.027787859,0.015750824,0.0025955543,0.059857495,-0.08406264,0.040436577,0.009568461,-0.012725179,-0.027482018,-0.021485345,0.053959128,0.05815352,-0.0014063234,-0.022348255,0.0065537402,0.03641695,-0.047055855,0.031960405,-0.010824595,-0.033030853,-0.0042954306,0.027088793,-0.05015796,0.031195804,0.019988908,0.04548296,-0.030343818,-0.010469601,-0.019661222,-0.03569604,0.0086181685,-0.010136452,0.016034817,0.034865897,-0.0047214236,0.03480036,-0.013446091,-0.013424245,-0.07501848,0.024074074,-0.02684849,-0.008252251,-0.0009004566,-0.03506251,-0.045657724,0.019136922,0.036700945,0.019748604,0.0037028634,0.041594405,-0.0200326,0.009846995,0.023287624,-0.033795454,-0.013478859,-0.0033833685,0.005349491,-0.0057672914,-0.03449452,-0.018284936,-0.043167304,0.01841601,-0.0007482187,-0.008984086,0.03261578,0.033533305,0.004680463,0.00971592,-0.012179034,-0.020950124,0.00500815,0.052954223,0.012561336,0.012473953,0.030037977,-0.014177925,0.038776297,0.011327048,0.00052941934,0.039038446,-0.017793406,0.0186017,-0.02632419,0.0051610707,0.08340727,0.017214492,0.023527928,-0.013009175,0.0057782144,-0.022544866,0.0075968774,-0.05369698,0.02164919,-0.031610873,-0.00046627133,-0.037924312,-0.011567351,0.0066520465,0.0010840979,0.00459308,-0.053871747,-0.010567906,0.016897727,0.044259593,0.012091651,0.0065155104,0.03163272,0.0004024406,0.06925119,0.019136922,-0.0074166497,0.023833768,0.025406666,-0.035980035,0.016296968,0.060032263,-0.000091308626,0.03685387,-0.024314377,0.015827283,0.009055085,-0.023615312,-0.010698982,-0.0127142565,0.026280498,0.027656784,-0.015870975,-0.029885055,-0.011206896,0.011010284,-0.049065668,-0.046531558,-0.029906902,-0.03984674,0.017422026,0.034865897,-0.021223197,-0.04010889,-0.04078611,0.032637626,-0.0010957035,0.010835517,-0.014811453,-0.057017542,0.007798951,0.0032741395,0.02466391,-0.011578275,0.050638568,0.011567351,-0.04797338,-0.022042414,0.011763964,-0.021660112,0.07008133,0.010322141,-0.00046285792,-0.050813332,-0.019246152,-0.02721987,-0.015008066,0.049065668,-0.046007257,0.025275592,0.04609464,-0.037137862,0.024729447,0.0006290908,0.005969365,-0.009437386,0.025843583,-0.008082947,0.0009782823,0.004765115,-0.069688104,0.014199771,-0.0036837482,-0.03818646,0.017968172,0.0073893424,0.008749244,0.012375646,-0.004134318,-0.037989847,-0.03027828,0.045876183,-0.029054916,0.06160516,0.016406197,-0.011600121,0.006766737,0.022075182,0.00026726973,-0.0071599614,-0.05404651,-0.024467297,-0.030889964,-0.025166363,-0.014243462,-0.038667068,0.042752232,-0.030605968,-0.017968172,0.0131293265,-0.010578829,-0.021856723,-0.023440545,-0.025035288,0.013675472,0.0019115076,0.016362505,0.024183301,-0.025253747,0.07715937,0.00011554381,0.0028235698,-0.0008799762,-0.03807723,0.013140249,0.009027777,-0.0075750314,-0.04692478,0.01641712,0.031523492,-0.03938798,-0.05343483,-0.020808125,-0.004937151,0.013609935,-0.074275725,0.006466357,-0.050245345,-0.019267997,0.012889023,0.019464608,-0.04557034,-0.027591247,0.0065045874,0.015379444,0.0017080685,0.027984472,0.01803371,-0.019399071,0.009950763,-0.03372992,0.034407135,0.04002151,-0.00007599096,0.04963366,-0.04266485,-0.033030853,-0.015281138,-0.027045103,-0.009213467,0.004393737,-0.0447402,-0.028814612,-0.016875882,0.0058492133,-0.02060059,-0.008880318,0.0021750226,-0.023593465,-0.0026733798,0.006848659,0.019704912,0.00077893934,-0.026367882,0.04696847,0.02187857,0.01355532,0.0018391433,-0.052429922,0.005551564,-0.003525366,-0.034363445,-0.049502585,0.025035288,-0.009961685,-0.008153945,-0.008197637,0.049808428,0.011905962,-0.0070288866,0.0056198323,0.02986321,-0.026717415,0.026804797,0.0228944,0.0063243597,0.012943638,-0.037924312,0.03678833,-0.0061659776,-0.0043363916,0.018973079,-0.0022760595,-0.008579939,0.00870009,0.009393695,-0.02715433,0.039934125,-0.012943638,0.015619748,-0.0010806845,0.004380083,0.012441183,0.025668817,-0.041157488,0.021419808,0.013413322,0.024270685,0.016744807,-0.030868117,-0.016428042,-0.012550413,-0.003418868,0.0022187142,-0.0023716348,0.021671034,-0.0025054403,0.012943638,-0.025887275,-0.023265779,0.00020395103,0.039322443,0.0094701545,-0.023134703,-0.0089513175,0.0010274353,0.0171708,0.024358068,-0.0043773525,0.018197553,-0.027700476,-0.041769173,-0.02477314,0.015357599,-0.0062915906,-0.046050947,0.004341853,-0.0030829888,-0.015313907,0.009710459,0.0010144644,0.041048262,-0.014942528,-0.023855615,-0.005057303,0.023222087,-0.0083887875,-0.025537742,-0.01638435,-0.019890603,0.0017067032,0.011873193,-0.029273374,-0.0016398005,-0.022413792,0.035543118,-0.017782481,0.02081905,0.019267997,-0.001897854,-0.02109212,0.008525324,-0.01336963,0.0026174001,-0.01423254,-0.012943638,-0.037006788,0.01713803,-0.025559587,0.004052396,0.0064499727,0.02440176,0.02944814,-0.07969348,-0.024183301,0.015772669,-0.019322611,0.003309639,-0.022086104,0.009109699,-0.018022787,0.049808428,0.006471819,-0.040502116,0.007875412,-0.0070889625,-0.022719633,0.03600188,-0.010163759,-0.012812562,-0.013806546,0.011763964,0.014254386,-0.025210055,-0.022140719,0.03694125,-0.018907541,-0.007651492,0.0009386868,0.008678244,-0.016854035,-0.0003135214,-0.039562747,0.0055297185,-0.05155609,0.0043473146,-0.003197679,0.009218928,-0.045876183,-0.0017107993,-0.04535188,0.0017039725,0.012419338,-0.017345566,0.0071763457,0.018437857,-0.0055351797,-0.002951914,-0.014461921,0.011381662,-0.0074767256,0.007083501,-0.034712978,0.02783155,0.0186017,0.005147417,-0.046531558,-0.029797673,0.0013271325,0.002632419,0.018361395,-0.010327603,-0.0039595515,-0.018842004,-0.068071514,-0.01875462,-0.011600121,-0.01329317,-0.0027580324,-0.0053686057,-0.0124848755,-0.030999191,0.0017258183,0.046531558,-0.012736103,0.008175791,0.0007427572,-0.02986321,0.048847213,0.005843752,-0.027045103,0.01690865,-0.0011639716,-0.007340189,-0.002583266,0.011993345,0.0010813671,0.0018364127,0.008383326,0.0066028936,-0.014407306,-0.0036154801,-0.03287793,-0.04037104,-0.026149424,-0.020054445,0.03174195,0.027329097,0.002499979,-0.006209669,-0.0034407137,-0.079038106,-0.028290313,-0.012179034,-0.015608825,0.02357162,-0.033424076,0.02123412,-0.013577165,0.028312158,0.004808807,-0.05727969,0.008132099,0.009147929,-0.038645223,-0.0045330036,-0.00062362937,0.00036762387,-0.035608657,0.000077825665,-0.0009530231,-0.022271795,0.029906902,0.042839617,0.014756839,0.029513678,-0.0020002562,0.010797287,-0.023768231,-0.003626403,0.029885055,-0.012910869,-0.01789171,-0.030234588,0.0424027,0.026564494,-0.002093101,0.026367882,-0.030147206,0.014396383,0.01844878,0.009633998,-0.016548194,-0.04635679,0.023593465,0.002281521,-0.009191621,-0.056362167,0.012495798,-0.007143577,-0.010906517,0.021638267,-0.014876991,-0.02601835,-0.02010906,0.007334728,0.014953451,0.0036591718,-0.039671976,0.0014472844,0.012015191,0.02658634,-0.0005987115,0.025341129,0.02643342,-0.00004812903,-0.013074712,0.0020084484,-0.012768871,-0.03729078,0.0033232926,0.008978624,-0.03324931,0.03445083,-0.003885822,-0.026608186,0.014745916,0.007083501,-0.029819518,-0.03449452,-0.025057133,0.019639375,-0.038535994,0.023112858,0.0058055217,-0.007034348,0.008197637,-0.04635679,0.029207837,-0.018197553,0.029207837,0.03729078,0.035106204,-0.010895593,-0.0065755863,0.011916884,0.028115546,-0.016067587,-0.0067121224,0.011829501,-0.015040834,0.055750486,0.015292061,-0.016176816,-0.0124848755,0.010529676,0.033009004,0.0002892862,0.03185118,-0.05186193,-0.007902718,-0.008661861,-0.026149424,-0.000700431,-0.0049808426,-0.024183301,-0.03246286,0.050289035,-0.0047678463,0.018776467,-0.019890603,0.0038175539,-0.02440176,0.03257209,-0.021168582,-0.04078611,0.030037977,0.024642063,-0.005166532,-0.011064898,-0.04085165,-0.011048514,0.021408886,-0.012310109,-0.0019947947,0.030605968,0.013009175,-0.036351413,0.026630031,-0.027241714,-0.037793238,0.0066684308,-0.020207366,0.003279601,-0.014396383,-0.05037642,-0.009388234,-0.04696847,0.00009207664,-0.01016922,-0.01830678,-0.0353902,0.032222558,-0.017443873,0.019715836,0.034516364,0.024969751,-0.021255964,0.011359816,-0.012222726,-0.015444982,0.038601533,0.034778517,0.007400265,-0.0047023087,0.004262662,0.012976406,0.012768871,-0.00982515,0.0010294834,-0.00028672614,-0.016286045,-0.011763964,0.0003703546,-0.0044647357,0.006963349,-0.023506083,-0.0017722406,0.025210055,-0.01043137,-0.005049111,0.010895593,0.011621966,0.007263729,0.048191838,0.021496268,0.017312797,-0.018896619,-0.014822376,-0.019049538,0.009797842,0.0002916756,-0.027460173,0.04574511,-0.020425824,0.02037121,0.02752571,-0.015750824,-0.014876991,0.052124083,0.021998722,0.0863783,0.017443873,0.0059092892,-0.0023866538,-0.0010690789,0.021933185,0.0116328895,0.007504033,0.008164868,0.022828862,0.022828862,-0.009644921,-0.028508771,0.0048634214,-0.05893997,0.0012691045,0.020218289,0.0011530487,-0.0032959853,0.019977985,0.00896224,-0.018317705,-0.029011223,-0.0019743142,-0.00205214,0.042599313,0.027700476,0.032353632,-0.0006161199,-0.0038721683,-0.037596624,-0.007072578,0.02330947,0.024598373,0.0033560612,-0.011927808,-0.027307251,-0.0037301707,0.02304732,-0.018634468,-0.027394636,-0.057454456,-0.0012697872,-0.015881898,-0.018492471,0.008984086,-0.0005536545,-0.0128999455,-0.0053686057,-0.007203653,0.0010963861,0.0021477153,0.0089294715,-0.03490959,0.0395409,-0.01238657,-0.014964374,0.02918599,0.010311218,0.026105732,-0.0083669415,0.00933908,0.044346977,-0.06413927,0.006684815,-0.015302984,-0.0133150155,0.017804328,-0.003418868,0.026935874,-0.010316679,0.017640484,-0.032025944,0.03558681,0.029819518,-0.03480036,-0.01883108,-0.032288093,-0.028596153,-0.030584121,-0.010595214,-0.026630031,0.013249478,0.03449452,0.01363178,-0.04052396,0.005374067,-0.0003904937,-0.01837232,0.04312361,-0.017651407,-0.038841836,-0.0049207667,0.010835517,0.051512398,-0.013795624,0.0035827113,-0.009011393,0.015827283,-0.017148955,0.030977346,-0.0040278197,-0.010622521,-0.0008287751,0.0024603833,0.042424545,-0.043604217,-0.03490959,-0.054177586,0.020742588,0.002979221,0.021518115,0.0037110555,0.02715433,0.017236337,-0.0044483515,0.0019401802,-0.019715836,0.013675472,0.0018295859,-0.017454796,-0.022501174,0.008186714,0.027329097,0.021190427,0.018132014,0.0195083,-0.022009645,0.011348894,0.022697788,-0.026236808,0.008519863,0.052779455,0.0123538,0.031610873,0.007433034,0.0141888475,-0.0031840256,0.0045548496,-0.021245042,-0.01412331,-0.036657255,0.02518821,-0.014920683,-0.03182933,0.010081837,-0.017498488,0.041288566,0.010152836,-0.0005492171,0.041856553,-0.012768871,-0.03685387,0.031392418,0.05526988,-0.009726843,-0.03265947,0.01581636,-0.006679354,-0.014046851,-0.028006317,0.039453518,0.016897727,-0.02711064,0.012189957,-0.023964845,0.0200326,-0.006193285,-0.013118404,0.01644989,0.03257209,0.016351582,0.009104238,-0.009333619,-0.030584121,0.010911978,-0.04281777,0.030649658,-0.0070234253,0.0025204592,0.024074074,-0.026892181,0.030081669,-0.016045742,-0.024532834,0.0047623846,-0.0038175539,-0.028312158,-0.03069335,0.013588089,-0.007105347,-0.0120698055,-0.0074166497,0.0026378804,0.0059092892,-0.016111279,-0.039999664,-0.009218928,-0.0069524264,0.009541154,0.0118404245,0.023396853,-0.003487136,-0.009191621,-0.0009380041,-0.04157256,0.003754747,-0.013391476,-0.0021190427,-0.030059822,-0.03178564,-0.013467937,-0.00045159366,0.037531085,-0.0029300682,-0.015696209,-0.0016466273,-0.018470624,0.031654567,0.0077334135,-0.0025900928,0.026149424,-0.012561336,-0.00010829032,-0.013992236,0.029382603,0.00095848454,-0.050594877,0.02805001,0.03512805,0.020436747,0.0029928747,-0.021376116,0.014855145,-0.022184411,0.0032877931,0.023287624,0.0056198323,-0.010245681,0.018732775,0.011305202,0.04391006,0.021736572,-0.0027730514,-0.010780903,0.008066562,0.021638267,0.013183941,0.014582072,0.022206256,0.0252319,-0.0062970524,-0.044281438,0.025974657,-0.019486455,-0.013839315,-0.057978757,0.012189957,-0.007864488,-0.008934933,-0.0035335585,-0.014014081,0.019464608,-0.009016855,0.019835988,0.027503863,-0.02226087,-0.045614034,0.009584845,0.025057133,0.011130435,-0.041441485,0.025625125,-0.013063789,0.021113968,0.0028781842,0.016165894,0.01212442,0.01728003,-0.0024467297,0.014931605,-0.018197553,0.008203099,0.014909759,-0.014997142,0.03215702,-0.0013612665,0.007995564,-0.030758888,0.041856553,-0.005338568,-0.010895593,0.036307722,0.017979095,0.033205617,0.00063455227,0.025384821,0.03128319,0.0088257035,-0.010163759,0.0005492171,-0.0036946712,0.022501174,-0.00685412,0.02877092,-0.026040195,0.027547555,-0.015488673,-0.00072910363,0.014789607,0.0049535353,0.024139611,0.00009386868,-0.014145156,-0.017968172,0.048410296,0.011643812,-0.00083014043,0.007842642,0.0073183435,-0.0040660496,-0.0035117127,-0.0069524264,0.023833768,-0.0031758333,-0.037487395,-0.010529676,-0.030715197,-0.0045248116,-0.03377361,0.039584592,0.026280498,0.025821738,0.0018582585,-0.025450358,0.015849128,0.0058492133,-0.029120453,0.012015191,0.016996033,0.05487665,0.015750824,-0.026258653,0.012168111,0.008896703,0.023659002,-0.022195334,0.012845331,-0.018350473,0.023003628,-0.013883007,-0.011960576,-0.011436277,0.0070234253,0.04718693,-0.005674447,0.025646972,-0.007340189,0.03429791,0.03370807,0.029011223,-0.042992536,0.013031021,-0.0018609891,0.015357599,0.043451298,-0.0011243761,-0.014025005,0.0030775273,-0.00466954,0.03132688,0.009808765,-0.0043363916,0.01220088,0.0023579812,-0.003167641,-0.027176177,-0.04146333,0.04875983,-0.016799422,0.026608186,-0.020196443,0.008350558,-0.005475104,0.019825066,0.0010840979,-0.014461921,-0.008514401,0.015270215,0.010737211,0.006706661,0.012179034,-0.03204779,0.007727952,-0.015302984,-0.0314798,-0.009213467,-0.01600205,-0.008978624,0.01370824,0.031545337,0.002338866,-0.018361395,-0.027023256,0.022916246,-0.018252168,-0.0067612757,-0.021321502,-0.0124848755,-0.0017872596,0.023331316,0.033140082,-0.00007441226,-0.010152836,0.0003696719,-0.012889023,0.01133797,-0.0067612757,-0.037421856,0.022959936,-0.009027777,-0.013020097,-0.03449452,-0.008427017,-0.00089567783,0.018689083,0.0034352522,0.00884755,-0.020644283,-0.030103514,-0.0033342154,-0.0015128218,-0.061779927,-0.019180613,0.027372789,-0.011665658,0.0030720658,0.017411103,-0.007924564,-0.0006048556,0.013063789,0.028639846,0.006684815,-0.015849128,0.011873193,0.002951914,-0.047012165,0.014407306,-0.015324829,0.014221617,-0.008749244,0.03980305,0.023134703,0.0059475196,0.0056252936,-0.022162566,-0.013402399,-0.0034134064,-0.0062752063,0.014134234,-0.03370807,-0.0040305504,0.021889493,-0.008132099,0.013599011,0.046225715,-0.009164314,0.008044716,-0.0051829163,0.012441183,0.020928277,-0.022544866,0.02346239,0.02429253,0.007323805,-0.028508771,-0.030758888,-0.007990101,0.015008066,0.017083416,0.0064936643,0.011359816,0.032812394,0.002842685,0.060207028,0.0076733376,-0.0054423353,0.008973163,0.04500235,0.0039295135,0.01784802,-0.008711013,-0.0035308276,0.010879209,0.01193873,0.033314846,-0.017749714,-0.009797842,0.005963904,-0.0021859454,0.004186202,0.0400652,-0.0071981917,-0.034538213,0.019322611,0.00037171997,0.018973079,0.033970222,-0.03517174,0.0034352522,0.02632419,0.008716474,-0.014876991,-0.022566713,-0.024838677,-0.021911338,-0.033489615,-0.008498017,0.01363178,0.027962625,-0.003943167,-0.014811453,0.02466391,-0.003058412,0.002940991,0.010972054,-0.04417221,0.02918599,0.011458123,-0.0010718097,0.014876991,0.042118706,0.0027170714,-0.0008130734,-0.02274148,0.009022316,0.008672783,0.014298077,-0.025210055]},{"id":"valid-sudoku","name":"Valid Sudoku","description":"You are given a a `9 x 9` Sudoku board `board`. A Sudoku board is valid if the following rules are followed:\n\n1. Each row must contain the digits `1-9` without duplicates.\n2. Each column must contain the digits `1-9` without duplicates.\n3. Each of the nine `3 x 3` sub-boxes of the grid must contain the digits `1-9` without duplicates.\n\nReturn `true` if the Sudoku board is valid, otherwise return `false`\n\nNote: A board does not need to be full or be solvable to be valid.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/0be40c5d-2d18-42b8-261b-13ca50de4100/public)\n\n```java\nInput: board = \n[[\"1\",\"2\",\".\",\".\",\"3\",\".\",\".\",\".\",\".\"],\n [\"4\",\".\",\".\",\"5\",\".\",\".\",\".\",\".\",\".\"],\n [\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\".\",\"3\"],\n [\"5\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"4\"],\n [\".\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"5\"],\n [\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"],\n [\".\",\".\",\".\",\".\",\".\",\".\",\"2\",\".\",\".\"],\n [\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"8\"],\n [\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]]\n\nOutput: true\n```\n\n**Example 2:**\n\n```java\nInput: board = \n[[\"1\",\"2\",\".\",\".\",\"3\",\".\",\".\",\".\",\".\"],\n [\"4\",\".\",\".\",\"5\",\".\",\".\",\".\",\".\",\".\"],\n [\".\",\"9\",\"1\",\".\",\".\",\".\",\".\",\".\",\"3\"],\n [\"5\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"4\"],\n [\".\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"5\"],\n [\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"],\n [\".\",\".\",\".\",\".\",\".\",\".\",\"2\",\".\",\".\"],\n [\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"8\"],\n [\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]]\n\nOutput: false\n```\n\nExplanation: There are two 1's in the top-left 3x3 sub-box.\n\n**Constraints:**\n* `board.length == 9`\n* `board[i].length == 9`\n* `board[i][j]` is a digit `1-9` or `'.'`.\n","difficulty":"Medium","concepts":["Hash Usage"],"solutions":{"python":"class Solution:\n    def isValidSudoku(self, board: List[List[str]]) -> bool:\n        cols = defaultdict(set)\n        rows = defaultdict(set)\n        squares = defaultdict(set)  # key = (r /3, c /3)\n\n        for r in range(9):\n            for c in range(9):\n                if board[r][c] == \".\":\n                    continue\n                if (\n                    board[r][c] in rows[r]\n                    or board[r][c] in cols[c]\n                    or board[r][c] in squares[(r // 3, c // 3)]\n                ):\n                    return False\n                cols[c].add(board[r][c])\n                rows[r].add(board[r][c])\n                squares[(r // 3, c // 3)].add(board[r][c])\n\n        return True\n","javascript":"class Solution {\n    /**\n     * @param {character[][]} board\n     * @return {boolean}\n     */\n    isValidSudoku(board) {\n        const cols = new Map();\n        const rows = new Map();\n        const squares = new Map(); // key = (r / 3) * 3 + c / 3\n\n        for (let r = 0; r < 9; r++) {\n            for (let c = 0; c < 9; c++) {\n                const cell = board[r][c];\n                if (cell === '.') {\n                    continue;\n                }\n                if (\n                    rows.get(r)?.has(cell) ||\n                    cols.get(c)?.has(cell) ||\n                    squares\n                        .get(Math.floor(r / 3) * 3 + Math.floor(c / 3))\n                        ?.has(cell)\n                ) {\n                    return false;\n                }\n                cols.set(c, new Set(cols.get(c)).add(cell));\n                rows.set(r, new Set(rows.get(r)).add(cell));\n                squares.set(\n                    Math.floor(r / 3) * 3 + Math.floor(c / 3),\n                    new Set(\n                        squares.get(Math.floor(r / 3) * 3 + Math.floor(c / 3)),\n                    ).add(cell),\n                );\n            }\n        }\n        return true;\n    }\n}\n","cpp":"class Solution {\npublic:\n    bool isValidSudoku(vector<vector<char>>& board) {\n        unordered_map<int, unordered_set<char>> cols;\n        unordered_map<int, unordered_set<char>> rows;\n        unordered_map<int, unordered_set<char>> squares;  // key = (r / 3) * 3 + c / 3\n\n        for (int r = 0; r < 9; r++) {\n            for (int c = 0; c < 9; c++) {\n                char cell = board[r][c];\n                if (cell == '.') {\n                    continue;\n                }\n                if (rows[r].count(cell) || cols[c].count(cell) || squares[(r / 3) * 3 + c / 3].count(cell)) {\n                    return false;\n                }\n                cols[c].insert(cell);\n                rows[r].insert(cell);\n                squares[(r / 3) * 3 + c / 3].insert(cell);\n            }\n        }\n        return true;\n    }\n};\n","java":"class Solution {\n    public boolean isValidSudoku(char[][] board) {\n        Map<Integer, Set<Character>> cols = new HashMap<>();\n        Map<Integer, Set<Character>> rows = new HashMap<>();\n        Map<Integer, Set<Character>> squares = new HashMap<>();  // key = (r / 3) * 3 + c / 3\n\n        for (int r = 0; r < 9; r++) {\n            for (int c = 0; c < 9; c++) {\n                char cell = board[r][c];\n                if (cell == '.') {\n                    continue;\n                }\n                if (rows.getOrDefault(r, new HashSet<>()).contains(cell)\n                        || cols.getOrDefault(c, new HashSet<>()).contains(cell)\n                        || squares.getOrDefault((r / 3) * 3 + c / 3, new HashSet<>()).contains(cell)) {\n                    return false;\n                }\n                cols.computeIfAbsent(c, k -> new HashSet<>()).add(cell);\n                rows.computeIfAbsent(r, k -> new HashSet<>()).add(cell);\n                squares.computeIfAbsent((r / 3) * 3 + c / 3, k -> new HashSet<>()).add(cell);\n            }\n        }\n        return true;\n    }\n}\n","csharp":"public class Solution {\n    public bool IsValidSudoku(char[][] board) {\n        Dictionary<int, HashSet<char>> cols = new Dictionary<int, HashSet<char>>();\n        Dictionary<int, HashSet<char>> rows = new Dictionary<int, HashSet<char>>();\n        Dictionary<int, HashSet<char>> squares = new Dictionary<int, HashSet<char>>();  // key = (r / 3) * 3 + c / 3\n\n        for (int r = 0; r < 9; r++) {\n            for (int c = 0; c < 9; c++) {\n                char cell = board[r][c];\n                if (cell == '.') {\n                    continue;\n                }\n                if (rows.TryGetValue(r, out var rowSet) && rowSet.Contains(cell)\n                        || cols.TryGetValue(c, out var colSet) && colSet.Contains(cell)\n                        || squares.TryGetValue((r / 3) * 3 + c / 3, out var squareSet) && squareSet.Contains(cell)) {\n                    return false;\n                }\n                cols.TryAdd(c, new HashSet<char>());\n                rows.TryAdd(r, new HashSet<char>());\n                squares.TryAdd((r / 3) * 3 + c / 3, new HashSet<char>());\n                cols[c].Add(cell);\n                rows[r].Add(cell);\n                squares[(r / 3) * 3 + c / 3].Add(cell);\n            }\n        }\n        return true;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def isValidSudoku(self, board: List[List[str]]) -> bool:\n        ","javascript":"class Solution {\n    /**\n     * @param {character[][]} board\n     * @return {boolean}\n     */\n    isValidSudoku(board) {}\n}\n","cpp":"class Solution {\npublic:\n    bool isValidSudoku(vector<vector<char>>& board) {\n        \n    }\n};\n","java":"class Solution {\n    public boolean isValidSudoku(char[][] board) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public bool IsValidSudoku(char[][] board) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/TjFXEUCMqI8","embedding":[-0.03711088,-0.00096013,0.03443737,-0.016624572,0.000105925945,0.012232374,-0.0110123195,-0.021610882,0.0006249465,0.050160162,0.013028062,-0.04952361,0.004259582,0.027753592,0.02370089,0.0023804328,-0.0033524982,-0.007293805,0.022703627,0.0065352493,0.065607116,0.011139629,0.0481232,-0.028899383,0.07002053,0.044516083,-0.0006461648,-0.0154151255,0.022258041,-0.0363258,0.006105578,-0.020900067,-0.030045172,-0.011426077,-0.029896645,-0.0040845308,-0.020507528,0.06106639,-0.028008211,-0.04169404,0.022279259,-0.02701095,0.008614647,-0.029154003,-0.02113347,0.0050870976,-0.033779602,0.015595482,-0.01870397,0.059963036,-0.0069702254,0.038596164,0.07850786,-0.028623544,-0.054064337,0.019414783,-0.049905542,0.035625596,0.04135455,0.03815058,0.020825803,-0.020910677,0.01279466,0.009527036,-0.01459822,0.03286721,0.010243155,-0.042139627,-0.012582477,-0.013654003,-0.026713893,0.020327171,0.06335797,-0.018459957,-0.004309976,0.023127994,0.0701054,0.048802186,0.03685626,-0.02353114,-0.030830251,-0.0025435488,0.07116632,-0.021897329,-0.026798766,0.021695755,-0.050499655,0.019849759,-0.02355236,-0.028517451,-0.0045725526,-0.015828883,0.013898014,0.0068270015,0.03186995,-0.03327036,0.020305954,0.010391683,0.008800307,-0.0013924537,-0.0018327343,0.0009806852,0.03365229,0.033334017,-0.013303901,0.016857972,0.032421626,0.029090347,0.0010900924,-0.022427788,-0.0137282675,0.014704311,0.0064928127,0.006248802,0.026968513,-0.008985968,-0.0011935318,-0.071718,0.011606433,-0.045492128,0.029642025,-0.01395106,-0.027371662,0.008497946,0.004185318,0.054106772,-0.0018791495,-0.042648867,0.030236138,0.012359684,-0.02071971,0.0025236567,0.015001368,0.01056143,-0.019754278,-0.01023785,-0.030405885,-0.012550649,-0.023106774,0.011351814,0.024040382,-0.009558863,0.0022995379,-0.007797741,-0.0031084872,-0.017027719,0.0054743323,0.052027375,-0.050626963,0.02048631,0.03660164,-0.01471492,0.027965775,0.008625256,-0.0035567246,-0.060387403,0.0010668847,0.025525665,0.05682272,0.030618068,-0.035370976,0.009070842,0.02650171,-0.038723476,0.011404859,-0.017632442,-0.0015025239,-0.0013844968,-0.007474161,-0.04438877,0.075961664,0.0073256325,-0.012858315,-0.0027066648,0.022491442,0.0051056636,0.0012379576,0.0016484,-0.030511977,-0.030957561,-0.033800818,-0.02597125,-0.043158107,-0.021939766,0.019987678,-0.012380903,0.023318958,-0.04931143,0.007182409,-0.033843257,0.025186172,-0.038108144,0.027180696,0.020793976,0.03571047,-0.046128675,0.0540219,0.0032835384,-0.032739904,-0.00819028,-0.027286788,0.00023936943,0.0029413926,0.013579739,0.0068376106,0.00342411,-0.025292264,0.00082287384,0.0047714747,-0.04595893,0.024358656,-0.0011000384,0.0110123195,-0.020369608,0.007002053,-0.012688569,0.03303696,0.01560609,0.042648867,0.03178508,-0.062254615,0.033440106,-0.004211841,0.03288843,0.038171798,0.024995208,0.029981518,0.026140997,0.012497604,-0.020263517,-0.011998973,-0.0143542085,0.0060366183,-0.0029122175,0.023361394,-0.06641341,-0.007346851,-0.0057926076,-0.004821868,0.0335462,0.03418275,0.019764885,-0.008285763,-0.015277207,-0.01996646,-0.013685831,0.002391042,0.038447637,-0.017208075,0.029960299,0.0046812966,0.015393907,-0.027180696,-0.061872687,-0.05134839,0.042691305,-0.026692675,-0.055889115,0.02853867,-0.026692675,-0.029642025,0.058689933,-0.056483228,-0.13825873,-0.014767966,-0.008015228,-0.01932991,0.049735796,0.024252566,0.043455165,-0.03581656,-0.005153405,0.025058862,-0.077362075,0.029005473,-0.032400407,-0.01778097,0.02123956,-0.030257355,-0.05707734,-0.007537816,0.034013003,0.044473644,0.04044216,-0.0040792264,0.030554414,-0.0071081445,-0.0013374187,-0.044516083,-0.027159479,-0.018226556,-0.017727925,-0.01599863,0.07031759,-0.049990416,-0.020825803,-0.041821353,-0.008805612,0.021324433,-0.019977069,-0.007023271,0.02150479,-0.022236822,0.017101984,-0.050372344,-0.011712525,0.006959616,0.028305268,0.03110609,0.0053470223,-0.029960299,0.017876454,0.013558521,0.039360024,-0.03547707,-0.067049965,-0.015521217,-0.01945722,0.04646817,-0.016741272,0.01369644,0.003750342,0.06170294,0.03456468,-0.00016668002,0.021918548,-0.007017967,0.046171114,-0.009516426,-0.013781314,-0.0000779111,-0.0027875598,-0.011892881,0.0586475,-0.09870773,-0.03441615,0.0003043506,0.015128678,-0.050966457,0.0036442503,0.010709958,0.020772757,0.034543462,0.0062169745,-0.052876107,0.023658453,-0.03174264,0.018078027,0.04275496,-0.04748665,-0.02123956,-0.020963723,0.02048631,0.0017133811,-0.015775837,-0.019977069,-0.060387403,0.07019027,0.009882443,0.005315195,0.0064928127,-0.019595139,-0.023446267,-0.0012392838,0.010391683,0.021854892,-0.024146473,-0.03059685,0.022258041,0.03286721,0.017017111,0.024125256,-0.0025422226,0.0067527373,0.019160163,-0.008264544,-0.013303901,0.030809034,-0.058435313,0.019807322,-0.02802943,0.042585213,0.01803559,0.027796028,0.037195753,0.021313826,0.0061214915,-0.03492539,0.013303901,0.008057665,0.008041752,-0.02546201,0.024676932,-0.012317248,0.031954825,0.010137063,0.035774127,0.065097876,-0.0033816732,0.007447638,-0.011659479,0.043073233,-0.016529089,0.016041066,-0.056143735,-0.0010728524,0.07052977,0.026565364,-0.014449691,0.005044661,-0.011054756,-0.042436685,-0.0069277887,-0.012688569,0.049905542,-0.003116444,-0.049396303,-0.0044346335,0.020210471,0.034119096,-0.0154151255,-0.03469199,0.011691307,-0.042415466,0.032718685,0.027180696,-0.004214493,-0.040229976,0.011182066,-0.02790212,0.02713826,0.056780282,0.0360924,-0.024825461,-0.017600615,0.018979806,0.0049624396,-0.015956193,0.015171114,-0.011998973,-0.04837782,-0.039466117,0.038426418,-0.0038007356,-0.004657426,-0.007728781,0.027668718,0.036453113,0.037959613,-0.02060301,0.018587267,-0.008100102,0.028772073,0.011627652,-0.014163244,-0.0028406056,-0.00095416233,-0.0053045857,0.002970568,0.016995892,-0.02930253,0.01292197,-0.026077343,0.052366868,0.037026007,0.027244352,-0.053088292,0.030639287,0.0120732365,-0.0064981175,-0.008100102,0.013208418,0.05003285,0.05975085,-0.009240588,0.0015197637,-0.0008958119,0.029005473,-0.0031084872,-0.02304312,-0.0065829908,-0.017197466,-0.00034247732,0.0021032682,0.07226967,-0.014057152,-0.032060914,-0.0240616,-0.032994524,-0.0047847363,-0.051857628,0.008688911,-0.0041985796,-0.0070073577,0.022258041,-0.020507528,0.014428473,0.009527036,0.03199726,-0.0051507526,0.03161533,0.00933607,0.004320585,0.022300478,0.035158794,-0.041142367,-0.0038909134,-0.027074605,0.009129192,0.015648527,-0.0060100956,0.052324433,0.013463038,-0.020518137,0.007129363,-0.03121218,-0.009203456,-0.008434291,-0.052112248,0.011192676,-0.005670602,-0.018661533,0.008370636,-0.023191648,0.029005473,-0.01805681,-0.011500342,-0.019446611,-0.06696509,0.013887405,-0.03186995,0.004522159,0.0030474844,0.03121218,0.014810403,-0.017197466,0.01050308,0.012773442,0.007320328,-0.027498972,0.025313482,0.0057819984,-0.017568788,0.010821355,0.0014163244,0.01420568,0.0053523267,-0.00062196265,-0.019308692,0.0008043078,0.022852154,-0.022130731,-0.0017969284,0.0014017368,0.019446611,0.011786789,-0.0005569815,0.027477752,-0.01589254,0.050626963,-0.005580424,-0.02291581,0.012773442,-0.0044505475,0.0052860193,0.0029864816,-0.014279945,0.00084740756,0.0019772842,0.013409993,-0.003206622,0.0039015226,-0.025759067,-0.04044216,0.052579053,-0.0060472274,-0.012359684,-0.020762147,-0.031127308,-0.0049067414,0.01177618,-0.03787474,-0.013802532,-0.021960985,-0.053979464,0.018916152,0.002046244,0.020274127,0.01447091,-0.034840517,-0.044303898,0.029132783,0.010407597,0.008179671,-0.012550649,-0.032845993,-0.01625325,0.032739904,0.0029281313,0.01548939,0.010396988,-0.025652977,0.055125255,0.000044633114,-0.0079515735,-0.024528403,0.019743668,0.046680354,0.03286721,0.009351985,-0.010534907,-0.035137575,0.00595705,0.0026310745,-0.02573785,-0.020210471,-0.019085899,0.04748665,0.037004787,-0.008970054,-0.00041011078,0.031594113,0.034628335,-0.013898014,-0.01344182,-0.0019825888,-0.017600615,0.019308692,-0.04277618,0.0314668,-0.024952771,-0.018873716,0.008948836,-0.0143223815,0.00080828625,0.011447296,0.022979464,-0.0115109505,0.037535246,-0.004174709,0.045364816,-0.012052018,-0.0018062114,-0.012094455,-0.0030819643,0.026522927,0.013240245,0.014396645,0.021451743,-0.02879329,0.008460814,0.015574263,0.017356604,0.03201848,-0.01177618,0.0039306977,0.0028140827,-0.022767281,-0.014990759,0.020380218,-0.035752907,-0.007447638,-0.0018725187,-0.025355918,-0.00076253415,-0.0629336,-0.023467487,-0.0034294145,-0.0031641852,0.0074211154,-0.047274467,0.0030130045,-0.016974675,-0.030639287,-0.012497604,0.015807666,0.022321695,-0.030511977,-0.010370465,0.045110196,0.013473648,0.0050844452,-0.044091716,0.034882955,-0.013006844,-0.00011338552,-0.0048404345,-0.014831621,-0.019022243,-0.042457905,0.025058862,0.018608486,-0.032697465,-0.010821355,-0.017483914,0.012709787,0.009383812,-0.0057130386,0.002672185,-0.041121148,0.035646815,0.014545173,0.017515741,-0.00652464,-0.008089493,-0.019425392,-0.0008686259,-0.023340177,0.0045513343,0.0023512575,0.014523955,0.0016590091,0.0020780715,0.018661533,-0.011033538,0.0009707392,0.028177958,-0.004368326,0.036198493,-0.0070604035,-0.027371662,-0.017080765,-0.02919644,-0.038320325,0.015043804,0.01650787,0.008200889,-0.009606604,0.0019693275,-0.00004019881,-0.0043524127,-0.012720396,0.010938056,0.0119777545,0.017261121,0.00037463635,-0.00003876906,0.042139627,-0.012837097,-0.025695413,-0.038490072,0.018597877,-0.007930355,-0.03660164,-0.02802943,0.015807666,-0.04173648,0.032336753,-0.08792881,0.06934154,0.035859,0.0041826656,0.037429158,-0.03560438,-0.00091570406,0.005835044,-0.012677959,0.014767966,0.014672483,0.0075961663,-0.00092100864,0.01459822,-0.03838398,-0.019393565,0.028729636,0.047019847,-0.02046509,0.006678473,0.00581913,0.024761805,-0.0020581791,-0.0144603,0.046043802,0.0048802188,-0.015393907,-0.036962353,0.0011285506,-0.029939082,0.007002053,-0.027329225,-0.028729636,-0.012868925,0.01190349,0.01843874,0.013378165,-0.0055061597,0.030639287,0.016242642,0.045492128,-0.036495548,-0.028453797,0.02609856,-0.029939082,0.021069814,0.0039890483,-0.02688364,-0.012296029,-0.012752224,0.019393565,0.0077712177,0.014746748,-0.010725872,0.030172482,0.011298767,0.037004787,0.039614644,-0.0126673505,-0.03573169,-0.0052144076,0.000734022,0.0028140827,0.07316084,0.011118411,-0.005097707,0.023997946,0.009595995,0.015234769,0.04680766,-0.009675564,-0.009845311,0.028114304,-0.011850445,-0.008497946,0.0050844452,-0.018608486,0.009723306,-0.018152291,0.02790212,-0.0015900495,0.019128336,-0.0384052,0.0015476128,-0.03734428,0.039487336,0.046425734,0.04059069,0.05117864,0.017940108,0.0011484427,-0.010534907,-0.04608624,0.020571183,-0.044982884,-0.043837097,-0.021727582,-0.00684822,-0.021228952,-0.07515537,0.0021709017,-0.058435313,0.028856946,-0.009723306,-0.0047422997,-0.007383983,-0.0054133297,-0.014842231,0.0013036019,-0.0019998287,-0.0072885007,0.03611362,0.04196988,0.044261463,0.015807666,-0.024549622,-0.014226899,-0.010481861,-0.01664579,-0.04888706,-0.030384665,0.0013447125,-0.0002886026,-0.02930253,-0.018863106,-0.0007399897,-0.017462695,-0.015139287,0.044346336,-0.015309034,0.024231346,-0.021292606,0.027159479,-0.031042434,-0.00014687072,0.041609168,0.0061214915,-0.035986308,0.019340519,0.01382375,-0.0021695755,-0.013325119,0.011489732,0.022639971,0.019287473,-0.01867214,-0.008911704,0.03802327,0.014417863,-0.0409514,0.038065705,0.02060301,-0.010476557,-0.015096851,0.010582648,-0.021695755,-0.043837097,-0.014545173,0.012402121,-0.018608486,-0.007914442,-0.028199177,-0.035243668,-0.020051334,-0.019913414,0.007962183,0.0058668717,0.028878164,0.030363448,0.008306981,0.012338466,0.024422312,-0.00787731,-0.006683778,0.0073786783,-0.025695413,0.013431211,-0.01857666,-0.015903147,0.020433264,0.00729911,-0.030511977,0.015149896,0.011627652,0.0051348386,0.01369644,0.021345653,0.010211327,-0.015839493,-0.0076332986,0.016486652,-0.019955851,-0.0078560915,-0.01803559,-0.04339151,-0.025398355,-0.04888706,-0.030342229,0.012115673,-0.013982887,0.016698835,0.00096609764,-0.028432578,0.002978525,-0.0019282169,-0.004466461,-0.04169404,-0.019987678,-0.0131659815,-0.0034957218,0.005532683,-0.020931894,-0.03418275,-0.02546201,-0.00525154,0.005079141,0.025037644,0.022767281,-0.0053125424,-0.044982884,-0.0120414095,-0.03172142,-0.0025687455,-0.0038935659,0.007972792,-0.023785762,-0.04494045,-0.008444901,-0.011500342,-0.00046315664,0.02561054,-0.020072551,-0.019372346,-0.0065936,-0.030066391,0.02790212,-0.03108487,-0.03197604,-0.029535932,0.024592059,0.021568445,0.010030971,-0.0071081445,0.048674878,-0.011192676,0.0032755816,-0.003333932,0.016295686,-0.013038672,0.030023955,-0.023913072,0.013622176,-0.0071877134,-0.03290965,0.023658453,0.02919644,-0.019892195,-0.078889795,0.03212457,-0.015977412,0.0115109505,0.016974675,-0.02650171,0.015924366,0.0106675215,0.013802532,-0.035943873,0.012052018,0.024549622,0.002454697,-0.029748116,-0.035413414,0.005325804,0.019085899,-0.0029599587,0.014757357,0.024676932,-0.02097433,0.013282682,-0.0046786447,-0.0012180655,0.012455167,0.012274811,-0.008121321,0.00921937,0.013558521,-0.018459957,0.024379876,0.038171798,0.0065989043,-0.0095747765,-0.01868275,0.035901435,0.016794318,0.01753696,-0.010025667,-0.025695413,0.023849417,0.004747604,-0.015669746,-0.010253764,0.0018672141,-0.016794318,0.023743326,-0.022937028,-0.00085934286,-0.0056493836,-0.00927772,0.04532238,0.020772757,0.04799589,-0.001350017,0.0003152913,-0.04031485,0.0019016939,0.0048324773,-0.0025528318,-0.020019505,0.029281313,-0.007914442,-0.041630387,0.009060232,-0.013632785,-0.019298082,-0.024273783,-0.026459273,-0.034501024,-0.018332647,-0.031551674,-0.016147159,0.008747262,0.013155372,0.037174534,-0.008550992,-0.008948836,0.02367967,-0.033079397,0.024592059,0.008572211,0.011054756,-0.04033607,-0.016592743,0.028114304,0.017844627,0.024761805,-0.015255989,-0.0026217913,0.047953453,0.015033196,0.0095429495,-0.019510265,0.026034907,0.006954312,0.002580681,-0.016359342,-0.03518001,-0.033758383,0.0068323063,-0.0240616,0.011733743,-0.05644079,0.021197123,0.002906913,-0.004930612,0.000602402,0.029344967,-0.002119182,-0.034331277,-0.0016484,-0.004376283,0.022809718,-0.0126991775,0.03441615,-0.034288842,0.031572893,0.023255304,-0.005967659,-0.020072551,-0.009007187,0.0025408964,-0.023255304,0.043497603,-0.012317248,-0.027796028,-0.004699863,0.007023271,-0.012147501,0.010969883,0.0071611907,-0.022279259,0.019181382,-0.01420568,0.026841203,0.014195071,0.014534565,-0.012052018,0.01215811,-0.011701915,0.016592743,0.060429838,0.04300958,-0.007129363,0.0042728437,0.018958589,-0.00090907334,-0.0035620292,0.0044797226,0.013919232,-0.0042622345,0.015309034,-0.024422312,-0.03329158,-0.009351985,0.0027292094,0.025674194,-0.04608624,0.019542092,0.024507185,-0.021027377,0.018650923,-0.00794627,-0.0014905885,0.001948109,0.0148210125,0.024761805,0.019934632,0.022258041,-0.012709787,0.01803559,0.0020767453,0.024401093,0.010174195,-0.014905886,0.005103011,-0.02688364,-0.05873237,0.02304312,-0.016624572,-0.020369608,-0.03186995,0.013664613,0.004970397,0.039720736,0.024295002,0.013091717,-0.0077075628,-0.013622176,-0.011829226,-0.016094113,0.026735112,-0.010370465,-0.0057024295,0.003089921,-0.026904859,-0.0034718513,0.036665294,-0.038829565,0.0008308307,-0.0024493923,-0.030533195,-0.0009879791,0.028496234,0.032315534,-0.014481518,-0.016974675,-0.040420942,-0.025674194,-0.07065708,0.0032490587,0.019478438,-0.017600615,0.0014786533,0.0030660504,-0.010752395,0.037280627,0.015977412,0.006869438,-0.01766427,0.01152156,0.025058862,-0.020369608,0.015850103,-0.00476617,-0.026013687,-0.010152977,-0.00393335,0.009447467,-0.006885352,0.0192026,0.0018764972,0.03596509,-0.037683778,0.015340862,0.020560574,-0.012179328,-0.028963037,0.026671456,0.017101984,-0.024019163,0.08279397,-0.0011079953,-0.028496234,0.019351128,0.018014373,0.020836413,-0.022767281,-0.046425734,-0.0031350101,-0.035095137,-0.003750342,0.004882871,-0.03815058,0.021600273,0.0054318956,0.018247774,-0.015468172,0.0409514,0.015457562,-0.043433946,0.028708417,0.01958453,-0.032718685,0.0074158106,0.021833675,0.025122518,-0.019860368,0.01279466,-0.0075325114,-0.02675633,0.038086925,0.04438877,-0.003434719,0.0312334,0.018237166,0.011086584,0.030999998,0.029663242,-0.0031323577,0.012571868,-0.0063283704,0.012359684,-0.0052303215,-0.011627652,0.019446611,-0.012847707,-0.009240588,0.00035640184,0.0035912045,0.044558518,0.016486652,-0.04863244,-0.016412389,-0.030745378,-0.046171114,0.004620294,0.008306981,0.028326487,-0.0062063653,-0.0132614635,0.003341889,0.02713826,0.023000684,-0.0052674534,-0.043964405,-0.0010542864,0.007978097,0.0012565237,-0.001485284,0.012911362,0.0067103007,-0.011553387,-0.0073521556,-0.012349076,0.011245721,-0.015181724,0.008848049,-0.006529945,-0.0030607458,0.003867043,-0.0036044659,-0.008906399,-0.010545516,0.00095880387,-0.010025667,-0.024592059,-0.023573577,-0.011797398,-0.017971937,0.027583845,0.026819985,0.008397159,0.017547568,-0.027159479,-0.010752395,-0.006529945,-0.013505475,0.016550306,0.008773784,0.018619096,-0.004368326,-0.05270636,-0.0039094794,-0.00928833,-0.006460985,-0.048590004,0.017377822,0.0037476898,0.0120732365,-0.0014441734,0.036813825,-0.034904175,-0.0014203028,0.004185318,0.00057090604,0.015510608,0.029281313,-0.0076067755,0.012497604,0.042797398,-0.010821355,-0.006540554,0.011606433,0.0063655027,-0.026565364,-0.008805612,-0.03596509,-0.07014784,-0.03825667,-0.044855576,-0.0036018137,-0.015213551,0.0019786104,-0.0034294145,0.00025080744,-0.021037987,-0.020380218,-0.00092100864,-0.021271389,-0.0001851632,0.021186516,0.014035934,0.022045858,-0.008694216,0.0076173847,-0.028093085,-0.0019083247,-0.007850787,0.005654688,-0.00009772041,0.014502737,-0.0072142365,0.018375084,0.024485966,0.035031483,0.0038882613,0.01598802,-0.0077606086,-0.010662217,-0.029663242,-0.008582819,0.006938398,0.0009912944,0.011075974,0.035625596,-0.019107116,-0.017738534,-0.013325119,0.0044797226,-0.005209103,0.034119096,-0.018990416,-0.025080081,0.033991784,-0.0037636035,-0.037195753,0.002726557,0.034225184,-0.018385693,-0.034097876,0.030130045,-0.022364132,-0.024889115,-0.008715434,-0.004882871,0.018650923,-0.013399383,0.004275496,-0.014046542,-0.033737164,0.007463552,-0.012762832,0.013102327,-0.022852154,-0.00015996641,-0.009176933,0.010052189,-0.016995892,0.0014189767,0.006179842,-0.026671456,-0.008439596,0.007452943,-0.0040712697,0.0023220824,-0.01011054,0.012242983,-0.016688226,0.0045274636,-0.0060843597,-0.019733058,0.02802943,0.009988534,-0.031275835,-0.0037715603,-0.0075484253,-0.017547568,0.0012359684,-0.020178644,0.006588295,-0.009792265,0.0067898696,-0.036707733,0.0007008684,-0.0013778661,0.001123246,-0.028963037,0.01163826,-0.0021828369,-0.015712183,0.025143735,-0.0054053725,-0.007293805,0.00806297,0.028453797,-0.006588295,0.0021430526,0.009537645,-0.024698151,-0.034013003,-0.006784565,0.004140229,0.0015820926,0.0044876793,0.0055008554,0.016560916,0.02957837,-0.035519507,0.019637575,0.040123884,-0.010174195,0.026607802,0.040760435,0.015298425,0.025249828,-0.0076120803,0.017590005,-0.031657767,-0.039126623,-0.009245893,-0.0016258555,-0.011203284,0.009972621,0.022130731,-0.014110197,-0.015351471,0.025652977,-0.0076173847,0.00036800563,-0.039190277,0.033970565,-0.0047900407,0.04735934,0.03571047,0.01805681,0.014513346,-0.015637917,0.04097262,-0.00080298167,0.009590691,0.03072416,-0.003487765,0.00819028,-0.006938398,0.02009377,0.019319301,0.015043804,-0.007065708,-0.024698151]},{"id":"two-integer-sum-ii","name":"Two Integer Sum II","description":"Given an array of integers `numbers` that is sorted in **non-decreasing order**.\n\nReturn the indices (**1-indexed**) of two numbers, `[index1, index2]`, such that they add up to a given target number `target` and `index1 < index2`. Note that `index1` and `index2` cannot be equal, therefore you may not use the same element twice.\n\nThere will always be **exactly one valid solution**.\n\nYour solution must use $O(1)$ additional space.\n\n**Example 1:**\n\n```java\nInput: numbers = [1,2,3,4], target = 3\n\nOutput: [1,2]\n```\n\nExplanation:\nThe sum of 1 and 2 is 3. Since we are assuming a 1-indexed array, `index1` = 1, `index2` = 2. We return `[1, 2]`.\n\n**Constraints:**\n* `2 <= numbers.length <= 1000`\n* `-1000 <= numbers[i] <= 1000`\n* `-1000 <= target <= 1000`\n","difficulty":"Medium","concepts":["Two Pointers"],"solutions":{"python":"class Solution:\n    def twoSum(self, numbers: List[int], target: int) -> List[int]:\n        l, r = 0, len(numbers) - 1\n\n        while l < r:\n            curSum = numbers[l] + numbers[r]\n\n            if curSum > target:\n                r -= 1\n            elif curSum < target:\n                l += 1\n            else:\n                return [l + 1, r + 1]\n","javascript":"class Solution {\n    /**\n     * @param {number[]} numbers\n     * @param {number} target\n     * @return {number[]}\n     */\n    twoSum(numbers, target) {\n        let l = 0;\n        let r = numbers.length - 1;\n\n        while (l < r) {\n            const curSum = numbers[l] + numbers[r];\n\n            if (curSum > target) {\n                r--;\n            } else if (curSum < target) {\n                l++;\n            } else {\n                return [l + 1, r + 1];\n            }\n        }\n\n        return [];\n    }\n}\n","cpp":"class Solution {\npublic:\n    vector<int> twoSum(vector<int>& numbers, int target) {\n        int l = 0, r = numbers.size() - 1;\n\n        while (l < r) {\n            int curSum = numbers[l] + numbers[r];\n\n            if (curSum > target) {\n                r--;\n            } else if (curSum < target) {\n                l++;\n            } else {\n                return {l + 1, r + 1};\n            }\n        }\n        \n        return {};\n    }\n};\n","java":"class Solution {\n    public int[] twoSum(int[] numbers, int target) {\n        int l = 0, r = numbers.length - 1;\n\n        while (l < r) {\n            int curSum = numbers[l] + numbers[r];\n\n            if (curSum > target) {\n                r--;\n            } else if (curSum < target) {\n                l++;\n            } else {\n                return new int[]{l + 1, r + 1};\n            }\n        }\n\n        return new int[0];\n    }\n}\n","csharp":"public class Solution {\n    public int[] TwoSum(int[] numbers, int target) {\n        int l = 0, r = numbers.Length - 1;\n\n        while (l < r) {\n            int curSum = numbers[l] + numbers[r];\n\n            if (curSum > target) {\n                r--;\n            } else if (curSum < target) {\n                l++;\n            } else {\n                return new int[]{l + 1, r + 1};\n            }\n        }\n        \n        return new int[0];\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def twoSum(self, numbers: List[int], target: int) -> List[int]:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} numbers\n     * @param {number} target\n     * @return {number[]}\n     */\n    twoSum(numbers, target) {}\n}\n","cpp":"class Solution {\npublic:\n    vector<int> twoSum(vector<int>& numbers, int target) {\n        \n    }\n};\n","java":"class Solution {\n    public int[] twoSum(int[] numbers, int target) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int[] TwoSum(int[] numbers, int target) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/cQ1Oz4ckceM","embedding":[-0.009386061,-0.045706037,0.04672626,-0.041155837,0.01575226,0.036687255,-0.036687255,0.05852005,0.00066250795,0.018221201,0.00878923,-0.040135615,-0.008911657,-0.013711811,0.0018580831,0.006804894,0.03456519,0.0064172093,0.023403939,0.058275197,-0.020690143,0.02883153,0.059785128,-0.008763724,0.0710484,-0.030361867,-0.01762947,-0.0069018155,-0.022057243,-0.02728079,0.057173356,-0.012334509,-0.009590106,0.02864789,0.002490622,0.0008793056,0.015282956,0.024464972,0.021424705,0.0063815014,0.026831891,0.032728788,0.017843718,0.00623867,-0.007539456,0.0039431658,0.027790902,-0.006682467,0.025607623,0.04546118,0.019986188,-0.007927141,-0.0073252087,0.00938096,-0.0044328733,-0.023975264,-0.025974903,0.02554641,0.022689782,-0.017700886,0.01876192,-0.029484475,0.010865386,0.008325028,0.035054896,0.023057062,0.015129922,0.03174937,-0.006672265,-0.05770387,-0.041115027,0.019843357,0.01698673,0.01676228,-0.022791805,0.0414415,0.0063406923,0.023342725,0.054071873,-0.03878892,0.008814735,-0.039992783,0.0011094937,0.037993144,-0.011008217,0.013283317,-0.043053456,-0.018680302,-0.042196468,-0.048562665,-0.0148646645,-0.02677068,-0.00082574383,0.029688518,0.03862568,-0.005815277,0.012487542,0.02587288,0.0047108843,0.024566995,-0.014313743,0.018180393,0.011314284,-0.02891315,0.016058326,0.023710007,0.0428086,0.031851396,0.0052337493,0.014732035,0.005958108,0.03313688,0.05060311,-0.031953417,0.009753342,-0.011681565,-0.028709104,-0.03952348,0.020139223,-0.0022623467,0.028851936,-0.054112684,-0.0040247836,-0.02381203,-0.021955222,0.022934636,0.021363491,-0.052398708,0.0122222835,0.013415946,0.043461543,-0.022098053,-0.007891433,0.06843663,-0.03327971,-0.00897287,0.008355635,-0.0029356945,-0.004384413,0.011477521,0.03250434,0.000102580336,-0.014048485,-0.0029994587,0.03348375,-0.00084423536,-0.01707855,-0.0014066339,-0.013538373,-0.021016615,0.027117554,-0.0027239982,0.026403397,0.019771941,0.0024064535,-0.04521633,-0.0053714793,0.019792346,0.010467499,0.032892022,0.02768888,-0.030810766,0.013211901,-0.0033412336,0.031769775,0.025750455,-0.03211665,-0.0069783325,-0.000095646006,-0.037646268,0.011467318,-0.032953236,-0.0068661077,-0.011232667,0.009539095,-0.050888773,-0.039645907,-0.04125786,-0.07002818,0.0028540767,-0.05068473,-0.0035299752,-0.0118856095,-0.054316726,0.035177324,0.015497203,0.027790902,-0.0437064,-0.003484065,0.0024804196,0.016313381,0.029790541,0.07137487,0.023648793,-0.019027177,-0.015262552,0.023852838,0.018802729,-0.00089652184,-0.023526367,-0.0018708358,-0.01347716,0.04795053,0.028525464,0.0026270768,-0.021098234,-0.017139765,0.0019639314,-0.010508307,-0.004522143,0.035075303,-0.03456519,0.02987216,-0.004517042,-0.015252349,0.022098053,-0.025260746,-0.017904932,-0.024893466,0.035544604,0.014915675,0.050929584,-0.001452544,0.006498827,0.045869272,0.05766306,-0.011314284,0.025199534,0.013905654,0.0035911887,-0.011344891,-0.015660439,0.015313563,-0.015507406,0.014507586,-0.043788016,-0.00833523,-0.015925698,0.00087739265,-0.018139584,0.05933623,-0.0016310832,0.009182016,0.00419057,0.0051980414,-0.0018300269,-0.020751357,0.022750996,-0.015691046,-0.013079272,0.0428086,0.0076924893,0.017068349,-0.045257136,-0.034095887,-0.00012330365,0.027301194,-0.029668115,-0.0144667765,0.009717634,-0.0010903644,-0.014119901,-0.06962009,-0.05656122,-0.03238191,-0.05227628,-0.035299752,0.03534056,0.04133948,0.02166956,-0.006151951,-0.034197908,0.027954139,0.002922942,-0.014925878,-0.036830086,0.012834419,-0.006718175,0.024220118,-0.088800296,-0.01101842,0.017139765,0.034503978,-0.0074068266,0.045501992,-0.038686894,-0.014160709,0.0478281,0.015823675,-0.016588842,-0.02577086,0.00038640984,0.000618192,-0.010804173,-0.026587037,-0.00068801356,-0.0090238815,-0.04103341,0.009987993,-0.032218676,-0.023648793,-0.028076565,-0.02291423,0.012579362,-0.02746443,-0.053500548,-0.008192399,0.010895993,-0.012997654,0.021159446,-0.012875227,-0.020282054,0.027546048,0.04117624,0.012303902,-0.08153631,-0.012997654,0.0030785261,-0.02012902,0.021098234,0.017833516,0.01042669,0.048072957,0.0664778,0.050929584,0.0063457936,-0.00005388058,-0.000653581,0.012946643,-0.034626402,-0.0072078826,-0.053949445,-0.033442944,0.040625323,-0.056071512,0.017282596,0.045379564,-0.008141388,-0.015068709,0.028545868,0.00997269,-0.004152312,0.0273216,-0.017139765,0.017833516,-0.0514601,0.0428086,0.011028621,0.022506142,-0.022342905,0.022057243,-0.0015813472,0.023138681,0.01739482,-0.052929223,0.051256057,-0.03283081,-0.017782506,0.0058815917,0.0148646645,-0.018517066,0.0072792983,-0.008401545,-0.03774829,0.0017382067,0.04795053,0.011763183,-0.01881293,0.022077648,0.07117083,0.012773205,0.016384797,-0.0056367377,0.013028261,-0.016660258,0.0066314563,0.018323224,0.0069477255,-0.014089294,-0.020139223,-0.029443666,-0.01876192,-0.020996211,-0.0041778176,-0.00034591972,0.049623698,0.025423983,-0.020516705,-0.005697951,-0.023669198,0.012946643,-0.030382272,0.008202601,0.0067232763,0.030076204,0.0014959035,0.04244132,0.07459878,0.009421769,0.013354733,0.012722193,-0.026893105,0.026199354,0.012507946,0.0062692766,-0.00805977,0.0146198105,0.048970755,0.059050567,0.0032672675,-0.012303902,0.008875949,0.021526728,0.0487259,0.01794574,0.010732757,-0.022893827,0.022281693,-0.0030606722,-0.035605818,-0.036360785,0.0016043023,0.050031785,-0.016456213,-0.0037238176,-0.02166956,-0.028158182,-0.017619269,0.026831891,0.0065549393,-0.03060672,0.011875408,-0.032851215,0.0037212672,-0.06394764,0.08749441,0.0005780207,0.057173356,0.0068559055,-0.05456158,-0.03515692,-0.024281332,0.030565912,0.011395902,-0.0145892035,-0.008350533,-0.016466416,0.06464139,0.05468401,0.010804173,0.0122528905,0.042522937,0.015252349,0.0011063054,-0.02513832,0.011497925,0.046930306,-0.00084678596,0.025219938,0.015548214,-0.03313688,-0.0035325256,-0.038340017,-0.024913872,0.028178588,-0.009549296,0.011446914,0.0026398296,0.005027154,0.004802705,0.02381203,0.011436711,-0.03852366,0.008513769,-0.02281221,0.008875949,0.04672626,0.04758325,0.008258713,0.040645726,-0.032177866,-0.026015712,-0.0057948725,0.0061570522,-0.03401427,-0.082230054,0.03297364,-0.010171633,0.019465875,-0.026015712,-0.024464972,-0.003019863,0.029198812,-0.0054581985,0.00783532,0.014170912,0.0091463085,0.003351436,-0.006927321,0.0040502893,0.0121304635,-0.082230054,-0.004517042,0.0026270768,0.05039907,-0.033544965,0.025974903,-0.019884167,-0.01953729,0.04676707,-0.021873603,-0.03829921,-0.020149425,-0.035034493,0.011304082,0.026791083,-0.016823495,-0.025158724,0.0041650645,-0.009258533,0.010447094,-0.009595207,-0.007554759,0.007809815,-0.010258352,0.010589926,-0.02395486,0.008763724,-0.046032507,-0.012456936,0.0022189873,-0.005437794,-0.0024434365,0.03311647,-0.01976174,0.034095887,0.004848615,0.015578821,-0.04521633,-0.025995309,0.0018364033,0.02536277,-0.0016604146,0.0031499418,-0.041013006,-0.011222464,0.016905112,0.03197382,-0.014670822,-0.0145892035,0.018802729,-0.017690685,-0.0036192448,-0.02632178,0.0013505216,-0.059621893,-0.020414682,0.040992603,0.022118457,-0.023791624,-0.053133268,-0.026648251,0.027076745,-0.0033080764,0.008967769,-0.0031065822,0.002090184,-0.008916758,0.00015598269,0.029219216,0.049011562,0.010783768,-0.00028614094,-0.07851644,0.026933914,-0.0061774566,-0.016976528,-0.026199354,-0.013109879,0.011763183,-0.018241605,-0.021547131,-0.042278085,-0.05154172,0.023934456,-0.023281513,-0.020210639,0.026566634,0.049664505,-0.03064753,0.015844079,0.016446011,0.02008821,0.02691351,-0.0109266,-0.026546229,-0.02166956,-0.018119179,0.025852477,-0.015456394,0.032545146,0.018292617,-0.013487361,0.0013619991,-0.04362478,0.015813472,0.030117013,0.020659536,-0.013324126,0.027301194,0.008763724,0.006840602,0.00064465404,-0.003037717,-0.030443486,-0.018517066,0.031096429,0.02787252,0.008330129,0.009687027,0.008223006,0.021873603,0.03350416,0.005249053,0.020486098,-0.00550921,-0.046195745,0.027076745,0.013691407,0.0050348057,-0.054031063,-0.0033004247,0.020475896,-0.005442895,-0.033320516,0.02454659,-0.008830039,0.0002945897,-0.010477701,-0.036972918,0.043502353,0.019282235,-0.016660258,-0.028811127,-0.0047516935,0.015364574,-0.010691948,0.028219396,0.014211721,-0.02062893,-0.041869994,0.0038105368,0.0227714,-0.035728246,0.003976323,0.0031499418,-0.0073660174,-0.035809863,-0.013966867,0.00519294,-0.038584873,-0.0033080764,0.006029524,0.021261469,-0.012099857,-0.01061033,0.019251628,-0.012212082,0.030076204,-0.026036117,-0.048113763,0.008365837,0.0048817717,0.00069183944,-0.0142219225,0.038503256,0.01011042,0.033402134,-0.010268555,-0.008580084,0.030627126,-0.0052745584,-0.009778847,-0.0039610197,0.008432152,0.03064753,-0.013354733,0.0068610064,-0.0042951433,0.015517607,0.0039431658,-0.020190233,-0.031545326,0.007809815,0.0546432,-0.042359702,0.024873061,0.024934275,-0.017007135,-0.059254613,-0.011793789,-0.0355242,0.0010533814,0.0009226651,-0.0323411,0.01011042,-0.010084915,0.0146504175,0.0126201715,0.026729869,0.0033004247,0.0024485376,0.011140847,0.0026831892,-0.04084977,0.0061825574,0.0073252087,0.012089655,-0.0081617925,-0.032708384,-0.026709465,0.007717995,-0.023852838,0.016139945,0.003756975,0.019098593,-0.021363491,0.00032248645,0.060315646,-0.026933914,0.01606853,-0.010967408,-0.040053997,0.033912245,-0.020639133,-0.025403578,-0.053582165,0.031688157,-0.018180393,-0.013793428,-0.028219396,-0.008850443,0.018190594,-0.018782325,0.039217412,0.051949807,-0.01953729,0.013283317,-0.050031785,0.026607443,-0.049052373,0.0028362228,0.029260024,-0.021791985,0.013742418,0.01831302,0.0039814245,0.027484836,0.008416848,0.026423803,-0.03105562,-0.0014015328,-0.003425402,0.007529253,0.03248393,-0.0061723553,-0.02066974,0.056724455,-0.004560401,0.029015172,-0.021914411,-0.02987216,0.028341824,-0.029566092,0.01443617,-0.0071262647,-0.036993325,-0.0058968947,-0.01316089,-0.010753161,0.003402447,0.038380828,0.024607804,0.048154574,0.015170732,-0.010457296,0.044563387,0.0010667718,0.01744583,-0.054806434,0.018527268,-0.02273059,-0.042563748,0.020863581,0.038727704,0.017139765,-0.028892744,-0.015017698,-0.002272549,-0.018884346,0.019924976,-0.017772302,0.014048485,-0.018802729,-0.015629832,-0.032443125,-0.029606901,0.0043869633,-0.013171093,-0.017802909,-0.03223908,0.016201157,-0.018302819,-0.021547131,0.016497023,-0.012895632,-0.0038768514,0.016364394,0.02016983,-0.0011994009,-0.009034084,-0.019792346,0.018272212,0.019700525,0.007942444,-0.010146128,-0.010288959,0.015150327,0.009090196,0.017823314,-0.004945536,-0.00096666225,-0.014017878,0.027790902,0.033463348,0.00997269,0.035095707,0.031259663,0.0027290992,0.048521854,-0.021241065,0.012824216,0.01621136,0.00088058086,0.011130644,0.031076023,-0.020914592,-0.0026831892,0.031769775,-0.0120386435,-0.01953729,0.0035682335,0.0042237276,0.018027358,-0.026464611,0.027892925,0.013375137,-0.014364755,-0.013150687,-0.035687435,0.017966146,0.010773566,-0.012263093,-0.037238177,-0.040686533,0.019965785,-0.024893466,-0.018833335,0.022608165,-0.025485197,0.015344169,0.00810568,-0.011722374,-0.010895993,0.033708204,0.0039151097,-0.002295504,0.01962911,0.005866288,-0.0010725105,0.057540637,0.008733118,-0.032810405,0.048929945,0.029525284,-0.03662604,0.040094804,0.003815638,-0.0023528917,-0.02072075,0.025219938,-0.055173714,0.021751177,0.0048715696,-0.019914772,-0.0259545,0.016905112,0.03966631,0.046399787,-0.01794574,0.0010151229,-0.004991446,0.018772122,0.035871077,0.0004890699,-0.00008030279,-0.010197139,0.033687796,-0.0020417233,-0.020955402,-0.0011821846,0.0075241523,0.020955402,0.0015864484,0.009034084,0.017272392,-0.012487542,0.003570784,0.03589148,0.012059048,0.005386783,-0.017466236,0.029443666,-0.019914772,0.029627306,0.009595207,-0.0074221296,0.012426329,-0.0033667393,0.029545687,0.04517552,0.0079475455,0.01530336,-0.0040732445,-0.025852477,-0.017660078,-0.017007135,-0.011232667,-0.0053714793,-0.0045017386,-0.0760679,0.0241385,-0.019272031,0.0021947569,-0.018241605,0.005391884,0.005901996,-0.026995128,0.015089113,0.030933192,0.030708743,-0.012732396,0.017782506,-0.025485197,-0.009095297,-0.008814735,-0.015282956,-0.017935539,0.04484905,0.013946462,0.017955942,-0.042890217,-0.01757846,0.015364574,-0.018506864,-0.022444928,-0.005131727,0.020414682,0.0028617284,-0.046971112,0.01006451,-0.024485378,-0.024607804,0.00039788737,-0.037054535,0.00751395,-0.026076926,-0.0036830087,0.0025888185,-0.013528171,0.043012645,0.009345252,-0.041829184,0.0035019189,-0.017068349,0.023159085,0.0039992784,-0.013711811,-0.013701608,0.015446192,0.07019141,0.015946101,0.008299522,-0.016272573,-0.027525645,0.011793789,-0.049011562,-0.0011515779,-0.050113406,-0.021832794,0.0145279905,-0.033565372,0.022526547,0.0023988017,-0.008799432,-0.024444567,0.033728607,-0.011875408,-0.016190955,-0.026097331,-0.012018239,-0.031851396,-0.009574803,0.0026423803,0.0059326026,0.00960541,0.042645365,-0.021710368,-0.009743139,-0.052725177,-0.03279,0.018292617,-0.024893466,0.036177143,-0.029260024,-0.018323224,-0.004070694,0.018884346,-0.0059734117,0.0071976804,0.010044105,-0.0032392114,0.02691351,0.026485017,-0.011579542,0.048440237,0.031708565,-0.04321669,0.037095346,-0.004318098,-0.028668296,-0.008942263,-0.010814374,0.0038998064,-0.022506142,-0.012824216,0.009136106,0.0041370085,-0.046195745,-0.004534896,-0.02199603,0.030729149,-0.041645546,-0.02399567,0.015507406,0.005175086,0.024301736,0.040278446,0.0020238694,0.008733118,0.0066314563,-0.022750996,-0.043053456,-0.016078731,0.009329949,0.012446733,-0.02495468,-0.04240051,-0.030994406,-0.058846522,0.011283678,-0.008768826,-0.029545687,0.053582165,-0.014313743,-0.020934997,-0.02987216,-0.008712714,0.030729149,0.011712172,0.005345974,0.002541633,0.0031856496,-0.017507045,-0.006029524,-0.012640576,-0.015384979,-0.0050067496,-0.031157643,0.017976347,0.027790902,0.0259545,0.009993094,-0.004591008,-0.0062029622,0.0122222835,-0.010865386,-0.000021201531,0.019292437,0.008386241,-0.008518871,-0.010181836,0.02846425,-0.033953056,0.0027035936,-0.008768826,-0.048685092,-0.0068252985,-0.020618727,-0.03401427,-0.002313358,-0.006106041,-0.03789112,0.025628028,-0.017782506,-0.044563387,0.0020506503,0.0009985443,-0.00009126223,-0.0018708358,0.009131005,-0.034544785,0.010987813,0.027403217,-0.030178227,-0.032728788,-0.012416126,0.028382633,-0.022648973,0.032892022,-0.017149966,-0.054847244,-0.057867106,-0.023873242,0.007585366,-0.011599947,-0.014548395,-0.029790541,-0.00969723,0.016190955,0.007682287,0.022322502,-0.003751874,-0.019996392,0.02395486,-0.010865386,0.0068610064,0.048521854,0.008773927,0.03313688,0.025974903,-0.0004763171,0.02381203,-0.0056367377,-0.014548395,0.0030734248,-0.032218676,0.0072946018,-0.0031550429,-0.006636557,-0.017313201,0.0036906605,0.0014283137,0.008671904,0.042767793,0.013273114,-0.019741334,-0.005442895,0.00555512,-0.006070333,-0.004152312,-0.0013734766,0.022302097,-0.005437794,0.043828823,-0.010345072,0.0035911887,0.004914929,-0.008610691,0.015456394,0.012079452,0.0064172093,-0.0227714,-0.023016253,-0.010671543,-0.018619088,-0.009579903,-0.02846425,0.053174075,0.0040502893,-0.0047618956,0.004022233,0.0061672544,-0.015150327,0.036075123,-0.013691407,-0.019771941,-0.025036298,-0.017802909,0.036095526,0.0008563505,-0.023975264,-0.0022266388,0.015864484,-0.015609427,0.003935514,0.03625876,-0.014099496,0.002122066,-0.013732215,0.031259663,-0.0043231994,-0.021894008,-0.04140069,-0.025260746,-0.020302458,-0.040278446,-0.002472768,-0.021118637,-0.022791805,0.008131186,0.063457936,0.01693572,-0.013099677,0.0067283777,-0.03009661,0.015650237,0.057214163,0.03925822,-0.0018274763,-0.03678928,-0.043747205,-0.053296503,0.00423648,0.035850674,-0.027199173,0.0050118505,0.015701247,0.03464681,-0.018466055,-0.0049429853,-0.007845523,0.006029524,0.023669198,0.01771109,-0.022567356,-0.030565912,-0.0036600537,0.0029535485,0.008983073,0.00692222,0.0030351665,0.023301916,-0.011569341,0.028423442,0.025893286,-0.0122834975,0.012446733,-0.0019039931,0.004876671,-0.050113406,-0.021261469,0.02291423,0.010681746,0.011304082,0.011936621,-0.01206925,0.031014811,-0.01070215,-0.0052388506,0.0040094806,0.013028261,0.015844079,-0.019159807,0.03478964,-0.011681565,-0.00070012873,0.046277363,0.025995309,0.006401906,-0.014242328,0.027750093,0.03319809,0.012824216,0.021649154,0.040768154,0.023975264,-0.02273059,-0.01006451,-0.0031167844,0.043094262,-0.049338035,0.038360424,-0.002759706,-0.002805616,0.030504698,0.003269818,0.031198451,-0.026117735,-0.01297725,0.002564588,-0.009182016,-0.005340873,-0.011712172,-0.0150279,0.0030836272,0.01671127,0.016833697,0.018670099,0.008636196,0.0049429853,-0.004848615,0.008646399,-0.0032417618,0.003200953,-0.018037561,-0.006452917,0.0053255693,0.0028566273,-0.021281874,-0.0144055635,0.021526728,-0.023016253,0.013813834,0.0036983122,0.003907458,0.06721236,0.0024651163,0.011538734,-0.041992422,0.03350416,-0.003037717,-0.011426509,-0.022077648,-0.009906376,-0.0090544885,0.0067283777,0.047664866,0.029953778,0.022424525,-0.009406465,0.025423983,-0.03213706,0.006702872,0.03774829,-0.019139403,0.068518244,0.037605457,-0.035605818,-0.03211665,0.027117554,0.015507406,-0.0051393784,0.02281221,-0.0047108843,0.013324126,0.018965965,0.046195745,-0.010732757,-0.031443305,0.03452438,0.01393626,0.012722193,0.027219577,0.005218446,0.017996753,0.03842164,0.005565322,-0.0018057965,-0.013048666,0.008748421,-0.006039726,-0.051704954,0.0013454205,-0.0022776502,-0.05427592,-0.03183099,0.039176602,-0.010763364,-0.0076210736,0.040523298,-0.0011005667,-0.022955041,0.01940466,0.016813291,0.035850674,0.035809863,0.0029714024,0.017843718,-0.00023608621,0.026485017,-0.0015137574,-0.017537652,-0.0033182786,-0.019516885,-0.031422902,0.02783171,0.0007186203,0.02199603,-0.006580445,-0.018792527,0.03625876,0.028158182,0.009350353,0.00560103,0.005269457,0.003484065,0.015976708,0.046236552,-0.029055981,-0.0045119408,0.03448357,-0.013773024,0.0013849541,-0.009345252,0.01794574,0.016058326,0.019088391,0.008309725,-0.0036957616,-0.04786891,-0.014987091,-0.043461543,-0.009493184,0.025219938,-0.021730771,-0.014568799,0.02632178,-0.008977971,-0.040727343,-0.023771219,-0.0045272443,0.009891072,-0.0074935453,0.039503075,0.033626582,0.019639313,0.04582846,-0.0055908277,0.051623337,0.0011560414,0.028933553,-0.04129867,-0.00012928151,-0.011518329,-0.015813472,0.0067436807,-0.013589384,0.005427592,0.0005936429,-0.041135434,0.025199534,-0.017272392,0.0143749565,0.056234747,-0.028423442,0.0033488853,-0.030810766,-0.02891315,0.021751177,-0.014813653,-0.006524333,0.016976528,0.0010903644,-0.052929223,-0.03844204,0.006713074,-0.004320649,-0.011997835,0.0044252216,-0.008758623,0.01083478,0.0020659536,-0.016701067,-0.035075303,0.026199354,-0.008702511,0.029443666,0.020934997,0.0002582442,0.0029484474,0.018914953,0.03452438,0.022791805,-0.00033890567,0.03742182,-0.021159446,-0.020241246,-0.011630554,0.017782506,-0.0071466696,-0.0032366607,0.03478964,-0.0033361325,0.018047763,0.04019683,0.028035756,0.015078912,0.03478964,0.012538553,0.0073252087,-0.0030249644,0.017292798,0.01325271,-0.018659897,0.030361867,-0.002095285,-0.025383174,0.025464792,0.039115388,0.012599767,0.04107422,0.010579723,-0.023771219,-0.010783768,0.017047944,-0.047379203,0.045012284,0.02454659,0.026280971,0.034687616,-0.009013679,0.01922102,-0.014017878,-0.0072843996,-0.019771941,-0.0037212672,-0.03378982,-0.029484475,0.018333426,-0.023750816,0.015140125,0.03146371,-0.026260566,0.0015902742,0.02354677]},{"id":"trapping-rain-water","name":"Trapping Rain Water","description":"You are given an array non-negative integers `heights` which represent an elevation map. Each value `heights[i]` represents the height of a bar, which has a width of `1`.\n\nReturn the maximum area of water that can be trapped between the bars.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/0c25cb81-1095-4382-fff2-6ef77c1fd100/public)\n\n```java\nInput: height = [0,2,0,3,1,0,1,3,2,1]\n\nOutput: 9\n```\n\n**Constraints:**\n* `1 <= height.length <= 1000`\n* `0 <= height[i] <= 1000`\n","difficulty":"Hard","concepts":["Two Pointers"],"solutions":{"python":"class Solution:\n    def trap(self, height: List[int]) -> int:\n        if not height:\n            return 0\n\n        l, r = 0, len(height) - 1\n        leftMax, rightMax = height[l], height[r]\n        res = 0\n        while l < r:\n            if leftMax < rightMax:\n                l += 1\n                leftMax = max(leftMax, height[l])\n                res += leftMax - height[l]\n            else:\n                r -= 1\n                rightMax = max(rightMax, height[r])\n                res += rightMax - height[r]\n        return res\n","javascript":"class Solution {\n    /**\n     * @param {number[]} height\n     * @return {number}\n     */\n    trap(height) {\n        if (!height || height.length === 0) {\n            return 0;\n        }\n\n        let l = 0;\n        let r = height.length - 1;\n        let leftMax = height[l];\n        let rightMax = height[r];\n        let res = 0;\n        while (l < r) {\n            if (leftMax < rightMax) {\n                l++;\n                leftMax = Math.max(leftMax, height[l]);\n                res += leftMax - height[l];\n            } else {\n                r--;\n                rightMax = Math.max(rightMax, height[r]);\n                res += rightMax - height[r];\n            }\n        }\n        return res;\n    }\n}\n","cpp":"class Solution {\npublic:\n    int trap(vector<int>& height) {\n        if (height.empty()) {\n            return 0;\n        }\n\n        int l = 0, r = height.size() - 1;\n        int leftMax = height[l], rightMax = height[r];\n        int res = 0;\n        while (l < r) {\n            if (leftMax < rightMax) {\n                l++;\n                leftMax = max(leftMax, height[l]);\n                res += leftMax - height[l];\n            } else {\n                r--;\n                rightMax = max(rightMax, height[r]);\n                res += rightMax - height[r];\n            }\n        }\n        return res;\n    }\n};\n","java":"class Solution {\n    public int trap(int[] height) {\n        if (height == null || height.length == 0) {\n            return 0;\n        }\n\n        int l = 0, r = height.length - 1;\n        int leftMax = height[l], rightMax = height[r];\n        int res = 0;\n        while (l < r) {\n            if (leftMax < rightMax) {\n                l++;\n                leftMax = Math.max(leftMax, height[l]);\n                res += leftMax - height[l];\n            } else {\n                r--;\n                rightMax = Math.max(rightMax, height[r]);\n                res += rightMax - height[r];\n            }\n        }\n        return res;\n    }\n}\n","csharp":"public class Solution {\n    public int Trap(int[] height) {\n        if (height == null || height.Length == 0) {\n            return 0;\n        }\n\n        int l = 0, r = height.Length - 1;\n        int leftMax = height[l], rightMax = height[r];\n        int res = 0;\n        while (l < r) {\n            if (leftMax < rightMax) {\n                l++;\n                leftMax = Math.Max(leftMax, height[l]);\n                res += leftMax - height[l];\n            } else {\n                r--;\n                rightMax = Math.Max(rightMax, height[r]);\n                res += rightMax - height[r];\n            }\n        }\n        return res;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def trap(self, height: List[int]) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} height\n     * @return {number}\n     */\n    trap(height) {}\n}\n","cpp":"class Solution {\npublic:\n    int trap(vector<int>& height) {\n        \n    }\n};\n","java":"class Solution {\n    public int trap(int[] height) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int Trap(int[] height) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/ZI2z5pq0TqA","embedding":[0.004837574,-0.0056946366,0.053355154,-0.036720898,-0.019169226,0.019978004,-0.021438632,0.0033256435,0.0067961426,0.03338922,-0.018517377,-0.016899822,-0.04963719,-0.0002600988,-0.0021894323,-0.027329426,0.03874888,0.009500114,-0.032713227,0.030999102,-0.016936036,-0.013097362,0.030999102,-0.017877597,0.003678729,0.019833148,0.0051091784,0.034089357,-0.0002983875,0.021390347,0.037083037,-0.017141247,-0.05214802,-0.012493797,0.039038587,0.00063638395,-0.010067466,0.013061148,0.0091741895,0.005199713,0.04396368,0.021957697,-0.054176,-0.02105235,0.00003593098,0.018432878,0.035586197,0.014956342,-0.015330553,0.019350296,-0.0100855725,-0.004997519,0.018650161,0.041814987,-0.019736579,-0.0376866,-0.005993401,0.024070175,0.035199914,0.033075366,0.030830104,-0.020629855,0.00080274156,-0.007804096,-0.002196977,0.043649826,0.013157719,0.007671312,0.013387073,-0.041863274,-0.023309683,0.0022905294,0.047971353,-0.027257,-0.002210557,-0.001175443,-0.018215593,0.0041012247,0.00414951,-0.0047802352,0.008781872,-0.051423743,0.0149201285,-0.025808442,-0.011654842,-0.019157154,-0.017539602,-0.024070175,-0.03172338,-0.06943413,-0.03387207,-0.024239173,0.0365519,0.037614174,-0.0106891375,-0.017853456,0.04343254,0.010357177,-0.008009308,-0.010918492,0.027498424,-0.002450474,0.04973376,0.026291294,0.005251016,-0.004716861,-0.01011575,0.046595223,0.015608192,0.020653997,-0.0005771591,-0.050409753,-0.019398581,-0.020159073,0.074600644,-0.033630647,0.0033950536,0.00918626,0.0095484,0.042152986,0.028077846,-0.02124549,0.017117105,-0.045050096,-0.038072884,-0.0039111017,-0.021498987,-0.032326944,-0.027208714,-0.0002757538,0.033534076,0.013833712,0.034741204,0.015632335,-0.02718457,-0.07856003,-0.006210685,0.040390573,0.047464356,0.044470675,0.010658959,0.064219326,-0.05760425,0.016923964,0.038338453,0.029719545,-0.016561825,0.059487373,-0.011835911,0.03792803,0.03691404,0.0101580005,-0.011413416,0.034523923,-0.017213676,-0.053934574,0.042080555,0.04630551,0.036479473,0.0054532103,-0.009753612,-0.035199914,0.008389555,-0.01344743,0.01781724,0.00029008847,0.0051936773,-0.018300094,-0.050602894,-0.025277305,0.011697091,-0.019857291,0.013556072,-0.029188408,0.0018016418,-0.033606503,-0.032302804,0.022307765,-0.045870945,-0.019458938,-0.046136513,-0.011353059,-0.01210148,-0.030757677,0.04954062,-0.0016371702,0.016103117,-0.023225185,-0.0025847675,0.035441343,-0.016380755,0.060066797,0.018348379,-0.03623805,-0.005060893,-0.010652923,0.027908849,-0.0072186384,0.0021290758,-0.03404107,-0.03218209,-0.013145647,0.008981048,0.030830104,-0.01029682,-0.013652642,0.0081602,0.042321984,0.01099092,-0.054755423,0.020738496,-0.035079204,0.028488271,-0.057459395,0.011950589,0.038241882,0.03302708,0.006759929,-0.0055045136,0.09063133,-0.025494589,0.008075701,-0.011902303,-0.018034525,-0.016235901,0.009210403,0.024697883,-0.002643615,0.0365519,0.055672843,0.002210557,-0.0064400393,0.014714916,0.0040499214,0.029381547,-0.010290785,0.030395538,-0.02754671,-0.019048514,0.0022362086,0.01984522,-0.025373876,0.0024791434,0.012831793,-0.012023016,-0.027812278,-0.040269863,0.026508577,-0.023514895,0.040969998,0.040294003,-0.0050699464,-0.040969998,-0.059487373,-0.022754403,0.04582266,-0.008685301,-0.028415844,-0.0014779799,-0.0473195,0.009681184,-0.02522902,-0.04439825,-0.0718001,0.004804378,-0.07122068,0.019229583,0.0011739341,0.007864453,0.013700927,0.01075553,-0.011328916,0.0046987543,-0.038097028,0.016984321,0.014413134,0.07658034,0.012324799,-0.0050367503,-0.03867645,-0.03570691,0.05118232,0.026194723,-0.008419733,0.015246053,0.016948108,0.02345454,0.010357177,0.00681425,-0.029453976,-0.047464356,0.01160052,-0.00691082,0.02142656,-0.006723715,0.013338788,-0.011443594,0.022150839,0.034523923,-0.09821211,-0.0023041097,-0.009494078,0.0026209813,-0.012952507,-0.03136124,-0.020666068,0.042635836,-0.004804378,-0.013000792,-0.028802125,-0.04439825,0.014449348,-0.021776628,0.047633354,-0.02365975,-0.113663375,0.008232628,-0.019567579,-0.00029650133,-0.03580348,0.053162012,0.010936599,0.037541747,0.040752713,0.058956236,0.044374105,-0.021438632,-0.020279786,0.0111418115,-0.05760425,-0.021776628,-0.022512978,-0.051713455,-0.037759032,-0.01763617,0.04657108,0.058859665,-0.009204367,0.009536328,0.026605148,0.052582588,-0.003198895,0.01080985,0.05388629,0.016247971,0.01326636,0.032520086,-0.03860402,0.017406818,-0.0020943708,-0.003093271,-0.008329198,0.0283917,-0.02604987,-0.027619138,0.03331679,-0.04620894,-0.005169535,-0.034258354,0.018191451,-0.05789396,-0.0075626704,-0.0014274314,-0.010707244,-0.02486688,0.06325362,0.015789263,-0.020291857,0.018662231,0.043094546,0.0013685838,0.020243572,0.006234827,-0.026870716,0.007816168,-0.027884707,0.025277305,0.044953525,0.0021894323,0.0032532157,-0.032785654,0.031506095,-0.0071944958,-0.026291294,0.0025410089,0.008250735,0.008830157,-0.016960178,-0.042370267,-0.041694276,0.053741433,-0.009916574,0.030902531,0.020653997,0.016754966,-0.0042460803,0.06301219,0.026653433,-0.0005880987,0.048647344,-0.0038266026,-0.046595223,-0.037855603,-0.007942916,0.006044704,-0.0352482,0.04343254,0.03254423,0.02940569,-0.02940569,0.0155236935,0.027691565,0.011630699,-0.05296887,0.0027869616,0.035030916,-0.01816731,-0.012445511,-0.043191116,-0.029647116,-0.038097028,-0.053355154,0.023997746,0.013544,-0.006301219,0.006361576,-0.009083655,-0.0122040855,0.012674866,0.025567016,0.03440321,-0.028898695,-0.022235338,0.031578526,-0.055141706,0.056831688,-0.023708036,0.021486916,0.021667985,-0.013845783,-0.016103117,-0.023478681,0.0825677,0.025349732,-0.009005191,-0.038531594,0.010622745,0.061563637,0.03358236,0.011739341,0.029743686,-0.00066958,0.043722253,-0.0117453765,-0.033799645,-0.0031506096,0.027860563,0.013230146,0.00068504637,0.016018616,-0.031288814,0.05277573,0.011262524,-0.021221347,0.039449014,-0.01716539,-0.0060597933,0.0054501924,0.027039716,-0.027015572,-0.016030688,-0.012306692,0.05369315,0.0054200143,0.0043456685,0.0071462104,0.01781724,0.021486916,-0.017032607,-0.025711872,0.007381601,-0.06730957,0.0026496507,-0.030202396,0.015753048,0.002818649,0.0013746194,-0.050747752,0.010109715,-0.011817805,-0.027112143,-0.0070556756,0.029526403,-0.0117453765,0.0053294795,-0.0064400393,0.026556863,0.009530293,-0.0128076505,-0.0022588423,0.012723152,-0.039811153,-0.016175544,0.014932199,0.028729698,-0.013881996,-0.015511623,-0.011528092,-0.015692692,0.06214306,-0.058763094,-0.02271819,0.011691055,0.020641925,0.012505868,0.016091045,-0.0128076505,-0.02522902,0.024432315,-0.030926675,0.002298074,-0.019120941,-0.015366767,0.004783253,-0.00009265667,-0.032809798,-0.026774146,0.01530641,-0.03773489,-0.011347024,-0.000017482167,-0.016115187,-0.00012146747,0.057314537,-0.009469936,0.028777983,0.0027703636,-0.015740978,-0.004900948,-0.0107615655,-0.0019238637,0.048671488,0.00904744,0.051230602,0.0030495126,-0.0202315,-0.0031113778,0.003714943,-0.022778546,0.00061375025,-0.0190123,0.0005865898,-0.021160992,-0.048816342,-0.006778036,-0.017382674,0.020002147,0.021933554,0.03254423,0.0055045136,-0.036720898,-0.01716539,-0.014642488,0.0056071193,-0.00788256,0.001744303,0.013350859,0.0009279813,0.019929718,0.0010751003,0.04676422,-0.0030887444,0.01595826,-0.054851994,0.037034754,-0.024215031,-0.018082809,-0.029115979,0.026967287,-0.0026058923,-0.017455101,0.0055256383,0.015125341,-0.01930201,-0.0045418274,-0.014895986,-0.01734646,0.058859665,0.018348379,-0.014123423,0.014823558,0.042152986,0.022694048,0.03198895,-0.008461982,-0.013024935,-0.005700672,0.019181298,0.01038132,-0.022706117,0.01984522,0.02069021,0.013592285,-0.030830104,-0.0148477005,0.012916292,0.012385155,0.034016926,-0.007852382,-0.01344743,-0.006657323,-0.014871843,-0.019700363,-0.017841384,-0.023370039,-0.04526738,-0.00890862,0.0096328985,0.029333262,-0.008703409,0.0063495045,0.014063066,0.01502877,0.01242137,-0.026701719,0.003043477,-0.03469292,0.014292421,-0.03295465,0.009119868,-0.035489626,-0.0011678984,-0.011208204,-0.0000602622,0.0037119251,0.011793662,0.000051255876,0.0064521106,0.0143165635,-0.027691565,0.016078973,0.011956624,0.004617273,-0.0122765135,-0.0009008209,0.021595558,-0.013773355,0.0009747576,-0.00788256,-0.015511623,0.011860054,-0.011528092,0.007906702,0.015330553,0.010314927,0.0072126025,-0.0021049331,-0.034016926,0.014871843,0.005954169,0.010707244,0.0376866,0.03312365,0.035006773,0.026267152,-0.026701719,-0.0062951837,-0.0111418115,0.018939871,-0.0081179505,0.014618346,0.02773985,0.034065213,0.011340988,0.0058123316,-0.0031687166,0.0019751666,0.019217512,-0.07281409,-0.016863609,0.014340706,-0.012179943,-0.030636963,0.010073501,-0.0064521106,-0.000156644,-0.03635876,0.011872125,-0.012831793,0.045967516,-0.00041532822,-0.023261398,-0.033968642,0.011787626,0.046136513,-0.029357405,-0.015318481,0.02207841,0.042442694,-0.07170353,0.014557989,-0.007164317,-0.030492106,-0.0040891534,-0.005413979,0.00004760148,-0.0034282496,-0.0031596632,0.023539038,0.0134112155,-0.015415052,-0.026460292,-0.01669461,-0.014618346,-0.027763993,0.047053933,-0.000505863,0.009385437,0.029019408,-0.013049077,-0.008461982,0.004270223,-0.036938183,-0.020545354,-0.0119747305,0.040414717,0.003886959,-0.012089408,0.03867645,-0.035924193,-0.022247408,0.0066090375,-0.020183217,-0.00480136,-0.0059662405,-0.006186542,-0.03674504,-0.0044663814,0.0016100098,-0.028633127,0.0070436043,0.039666295,0.021088563,0.026460292,0.053451724,0.020569498,-0.010550317,0.008232628,-0.04403611,-0.0052661053,-0.0031294848,0.008075701,-0.0044452567,-0.022754403,0.025494589,0.012385155,-0.037324462,0.021221347,0.022887187,0.010351141,0.0071220677,0.009620828,0.007586813,-0.062094774,0.03208552,-0.019603793,-0.05378972,-0.034765348,0.044929385,0.021317918,0.009832075,-0.022597477,0.00890862,0.003648551,0.0013648116,-0.01604276,-0.011214239,-0.013157719,-0.004713843,-0.03273737,-0.011413416,0.026315438,-0.0065124673,0.006017544,-0.021849055,0.022657832,-0.002020434,0.00001015569,0.03162681,-0.022307765,0.0022678957,-0.05509342,-0.014666631,-0.05137546,0.028826268,-0.0052479985,-0.010671031,-0.015185697,-0.017720671,-0.031795807,0.017515458,0.03172338,0.026508577,-0.011105597,-0.007447993,0.025035879,-0.0025017771,-0.014570061,-0.011184061,0.027015572,-0.039135158,0.047005646,-0.0229234,0.0036666577,0.01298872,-0.02484274,-0.0038296203,-0.006252934,-0.01642904,0.05137546,0.015644407,0.0047621285,0.001494578,0.00825677,-0.0011098053,0.012952507,0.04676422,0.025398018,0.02604987,0.049033627,-0.01595826,-0.0021849056,-0.04377054,0.02356318,0.019289939,0.0058123316,0.014147566,-0.0048526633,-0.0067116437,0.045508806,0.023128614,0.023080328,-0.019893505,-0.063108765,-0.035924193,-0.00030819542,0.031240528,0.0027371675,0.031023245,-0.010260606,0.03136124,0.036793325,0.024709955,0.0027039715,-0.0047289324,0.012469654,0.015813405,0.009427686,-0.021945626,0.009282831,0.019133013,0.009995038,0.0143165635,-0.026653433,-0.020195287,-0.0060356506,-0.009910539,-0.008039487,0.0011943044,0.0056282445,0.029478118,0.022694048,-0.03358236,0.034354925,0.0054320856,-0.0020838084,-0.02012286,0.016308328,0.02253712,-0.009349223,0.007073783,0.00077784446,0.011497915,0.030178253,0.010833993,-0.016187616,0.011039205,-0.00051717984,0.026387865,-0.035224058,0.033147793,-0.0033950536,0.027039716,0.013290503,-0.041138995,0.031844094,-0.0049311267,-0.04886463,0.037517603,0.0056855828,-0.013338788,-0.021209277,0.019857291,0.020835066,0.025084164,0.006014526,-0.013954424,0.010888314,-0.024142602,0.0010652924,-0.02271819,0.0030962888,-0.006373647,0.033847928,0.021366203,0.009651005,-0.0071462104,0.017648242,0.020738496,0.004046904,0.021559345,-0.010103679,0.026315438,0.01243344,0.009976931,0.0044482746,-0.0013157718,0.0052751587,0.026387865,0.012029052,0.038097028,0.0058726883,0.0134836435,0.0021049331,-0.018143166,-0.00621672,0.010514104,-0.011703127,0.033896215,0.024371957,-0.057362825,-0.03886959,-0.040583715,-0.021909412,0.016356613,-0.03338922,0.030999102,-0.04297383,-0.006548681,0.004834556,0.0077618468,-0.03573105,0.052920584,0.004074064,-0.019458938,-0.01845702,0.0068564992,-0.0041012247,0.0155236935,-0.008111915,0.03423421,-0.013049077,-0.0052811946,0.011353059,0.02604987,0.032037232,0.0458468,0.005978312,0.03814531,-0.05910109,-0.03969044,0.003250198,-0.020460855,0.041501135,-0.009759647,-0.017781027,-0.006114114,0.0014342215,0.032785654,0.009868289,0.031023245,0.0052389447,-0.021366203,0.03191652,0.008208485,-0.002384082,-0.00049643224,-0.04654694,-0.006940998,0.019543437,0.012216157,0.0095604705,0.057459395,-0.016054831,-0.0054924423,-0.023877034,-0.023140686,0.010441676,0.015837548,-0.0125782965,-0.009198331,-0.027450139,0.027788136,-0.023490753,-0.017793098,-0.045412235,0.045025956,0.014594204,0.0010177616,-0.019181298,-0.008003273,-0.03701061,0.034161784,-0.0030857264,0.001625099,-0.0007469118,0.001934426,0.007707526,-0.009162118,-0.017563744,-0.019519294,0.010984885,0.011715198,0.028053705,-0.013338788,0.014678703,0.0035549982,0.03423421,-0.008238663,0.04183913,-0.019772792,0.0046353796,0.018143166,-0.0012539064,-0.011045241,0.047053933,0.005604102,-0.01243344,-0.011057312,-0.005045804,0.01650147,0.028077846,-0.01033907,0.027160428,-0.03244766,-0.007357458,-0.03874888,0.015982402,0.011926446,-0.011389273,0.017660314,0.021812841,-0.061322212,-0.022247408,-0.0060658287,0.045098383,0.027474282,-0.0045659696,-0.018613948,0.018263878,0.021498987,-0.034934346,-0.01437692,-0.01734646,0.042539265,-0.017455101,0.048019636,-0.02076264,-0.015934117,-0.0030842174,-0.023116542,0.007297102,-0.008142093,0.0134836435,-0.011703127,-0.02402189,-0.042539265,-0.009210403,-0.01094867,-0.023116542,-0.0010494487,-0.0076592406,0.011238381,0.022887187,-0.017213676,0.012010945,0.027932992,0.024553027,-0.024963452,0.029912684,0.0202315,0.028729698,0.017117105,-0.024432315,-0.0137129985,0.019362368,0.052630875,0.0070798183,-0.010091608,-0.00197064,-0.013350859,0.005927009,0.011117669,-0.058859665,-0.008594766,-0.005386818,-0.019446867,0.017322317,0.003630444,-0.026387865,0.008902585,-0.026870716,0.0005220838,0.010459783,0.0015919029,-0.032254517,0.01863809,-0.022343978,0.010495997,-0.01966415,-0.007345387,0.010652923,0.017008463,0.0029680312,-0.0243116,-0.010097643,0.024082247,-0.015511623,0.022187052,0.045798518,-0.008383519,-0.051327173,-0.028971123,-0.03906273,-0.03459635,-0.0006167681,0.023575252,-0.03005754,0.006153346,0.018300094,-0.018263878,-0.01863809,0.008437839,-0.020062502,0.03623805,-0.015789263,0.00018691656,0.06243277,-0.0064038252,-0.029333262,0.009566506,-0.0005100125,0.030178253,0.02699143,0.013676785,-0.014171707,-0.04925091,-0.01242137,-0.016670467,-0.02420296,-0.013797497,-0.0035429269,-0.011485843,-0.019881433,-0.008528374,0.011015062,-0.007616991,-0.01437692,-0.011540164,0.02875384,-0.013085291,-0.037879743,-0.009747576,-0.042056415,0.03449978,0.015004627,0.013556072,0.00088950404,0.0008276386,0.023128614,-0.017177463,-0.0020174163,-0.018288022,-0.032206234,0.006596966,-0.000049746966,-0.0076833833,-0.047609214,0.05620398,0.01020025,0.042128842,-0.016851537,-0.00029970778,-0.025856728,0.0061261854,0.014087209,-0.001969131,-0.018517377,0.0006748612,0.017153319,-0.010278713,-0.048550773,-0.0352482,0.0432394,-0.015233982,0.020436713,0.020002147,-0.012916292,-0.025204876,-0.022802688,0.0056282445,-0.004170635,-0.024371957,-0.024939308,-0.0022030126,-0.044784527,-0.00825677,-0.0003117791,0.020086646,0.026412008,0.01558405,0.017793098,-0.004146492,-0.022826832,0.06296391,-0.019145085,-0.0014681721,0.018481163,0.024178816,0.029985113,-0.038917877,-0.025542874,-0.029526403,0.02653272,0.003506713,-0.0028050686,-0.016730824,0.009168154,0.03254423,0.02206634,-0.051713455,-0.009349223,-0.02604987,-0.0014387482,0.0111478465,-0.026677577,-0.016030688,0.016272115,-0.008449911,0.009608756,0.037855603,-0.026750004,0.025470447,0.012149765,0.00017805169,0.0036425153,-0.042587552,0.025011737,-0.0047923066,-0.0077859894,-0.008492161,-0.014811487,0.029791972,-0.018481163,-0.0017307228,0.009958823,-0.05692826,0.05721797,-0.0048617166,-0.005839492,-0.02235605,-0.0012938926,0.00095815957,0.019326154,0.046691794,0.031385385,0.0026722844,0.00936733,0.015704764,0.0047078077,0.0060779,-0.0056825653,0.02105235,-0.02217498,0.00014674176,-0.020134931,0.021366203,-0.028246846,0.010634816,-0.008757729,-0.014582132,-0.016103117,0.02921255,-0.009572542,0.03348579,0.036865756,0.013290503,0.00009369405,-0.029429832,-0.016115187,-0.017974168,0.002091353,-0.0023750286,-0.00663318,-0.020074574,0.0190968,-0.02356318,0.018951943,0.03382379,0.029864399,0.012029052,0.020714354,0.000907611,0.026967287,-0.014702845,-0.005413979,-0.011624663,0.0022377174,-0.007164317,0.007954988,0.014908058,0.012179943,-0.03812117,-0.002056648,-0.019869363,-0.009361294,0.06112907,-0.043553255,0.021595558,-0.0022588423,-0.007834274,-0.00015853014,0.00549546,-0.022669904,-0.0077135614,-0.00018399303,0.023756322,0.0070254975,0.042466838,0.037541747,-0.038338453,-0.0014704354,-0.004900948,0.0024444386,-0.005540727,-0.0111478465,0.027039716,0.04348083,-0.025108308,-0.050892606,0.013906139,-0.0107615655,-0.009041404,0.024347816,-0.018867444,0.0029816115,-0.016308328,0.013362931,-0.048164494,-0.017587885,0.011105597,-0.017865526,-0.0052057486,-0.0067297504,0.007912738,-0.013833712,0.0024957415,-0.029188408,0.013580214,-0.008896549,0.005163499,0.009500114,-0.012940435,0.0006722206,-0.014437277,-0.013749212,-0.06504017,-0.0077618468,-0.043094546,-0.009850182,0.024794454,0.004581059,-0.051616885,-0.022573333,0.029888542,0.029840257,0.010520139,0.04229784,0.031844094,-0.022899259,0.016960178,0.019688293,-0.022283623,-0.019048514,0.033751357,0.007013426,0.027112143,0.025856728,0.010272677,0.010604639,-0.01816731,0.03273737,0.018336307,0.012940435,-0.010664995,0.019314082,-0.0010585022,0.019048514,0.029502261,0.0067357863,0.003648551,-0.029043552,0.0029333262,-0.044591386,-0.025301447,0.016091045,0.0039322264,-0.021933554,-0.010369248,-0.014751131,-0.030033398,-0.022850974,0.006947034,0.0004179688,-0.019446867,-0.0434084,-0.02059364,0.029164264,-0.021390347,-0.0070858537,-0.028367558,-0.07107582,0.0029755759,0.009898467,-0.0018906676,0.0391593,0.006880642,0.042346124,0.032109663,0.038241882,0.0110693835,0.020883352,-0.047150504,0.018819159,-0.012759365,0.019603793,0.028126132,-0.008679266,0.018746732,0.01344743,-0.045025956,0.025156593,0.046619367,-0.009826039,0.009657041,-0.0122765135,0.0037632282,-0.025446303,0.0077497754,0.01788967,0.034934346,-0.004686683,0.003458428,0.024046032,-0.011093526,-0.009940716,0.018517377,0.049033627,0.019422725,0.003334697,0.019857291,-0.044180963,0.00024444386,-0.0028956034,-0.0059028664,0.0107615655,-0.024287459,0.0070798183,0.001192041,-0.0027281141,-0.00089553965,0.02653272,0.012590367,0.04249098,-0.018420806,0.02718457,-0.034210067,-0.01243344,0.006500396,0.0068021785,-0.009771719,0.013845783,-0.0011595994,-0.020328071,-0.019108871,0.03505506,0.022573333,0.00060318783,0.029936828,-0.0152219115,-0.011063348,0.031288814,0.020726424,0.0034252317,-0.020328071,0.01205923,-0.023297612,-0.013350859,-0.007067747,0.015825476,0.0095544355,0.0031596632,0.016948108,-0.033147793,0.0052993014,0.02058157,0.0077316687,0.053113725,0.016875679,-0.008504231,-0.010139893,-0.020847138,-0.005163499,-0.005214802,-0.008051558,-0.00031932365,0.003992583,-0.017793098,-0.008890513,0.01641697,-0.02718457,-0.016211757,0.004013708,0.007447993,0.0045025954,-0.013073219]},{"id":"permutation-string","name":"Permutation String","description":"You are given two strings `s1` and `s2`.\n    \nReturn `true` if `s2` contains a permutation of `s1`, or `false` otherwise. That means if a permutation of `s1` exists as a substring of `s2`, then return `true`.\n\nBoth strings only contain lowercase letters.\n\n**Example 1:**\n\n```java\nInput: s1 = \"abc\", s2 = \"lecabee\"\n\nOutput: true\n```\n\nExplanation: The substring `\"cab\"` is a permutation of `\"abc\"` and is present in `\"lecabee\"`.\n\n**Example 2:**\n\n```java\nInput: s1 = \"abc\", s2 = \"lecaabee\"\n\nOutput: false\n```\n\n**Constraints:**\n* `1 <= s1.length, s2.length <= 1000`\n","difficulty":"Medium","concepts":["Sliding Window Fixed Size","Sliding Window Variable Size"],"solutions":{"python":"class Solution:\n    def checkInclusion(self, s1: str, s2: str) -> bool:\n        if len(s1) > len(s2):\n            return False\n\n        s1Count, s2Count = [0] * 26, [0] * 26\n        for i in range(len(s1)):\n            s1Count[ord(s1[i]) - ord(\"a\")] += 1\n            s2Count[ord(s2[i]) - ord(\"a\")] += 1\n\n        matches = 0\n        for i in range(26):\n            matches += 1 if s1Count[i] == s2Count[i] else 0\n\n        l = 0\n        for r in range(len(s1), len(s2)):\n            if matches == 26:\n                return True\n\n            index = ord(s2[r]) - ord(\"a\")\n            s2Count[index] += 1\n            if s1Count[index] == s2Count[index]:\n                matches += 1\n            elif s1Count[index] + 1 == s2Count[index]:\n                matches -= 1\n\n            index = ord(s2[l]) - ord(\"a\")\n            s2Count[index] -= 1\n            if s1Count[index] == s2Count[index]:\n                matches += 1\n            elif s1Count[index] - 1 == s2Count[index]:\n                matches -= 1\n            l += 1\n        return matches == 26\n","javascript":"class Solution {\n    /**\n     * @param {string} s1\n     * @param {string} s2\n     * @return {boolean}\n     */\n    checkInclusion(s1, s2) {\n        if (s1.length > s2.length) {\n            return false;\n        }\n\n        const s1Count = new Array(26).fill(0);\n        const s2Count = new Array(26).fill(0);\n        for (let i = 0; i < s1.length; i++) {\n            s1Count[s1.charCodeAt(i) - 'a'.charCodeAt(0)]++;\n            s2Count[s2.charCodeAt(i) - 'a'.charCodeAt(0)]++;\n        }\n\n        let matches = 0;\n        for (let i = 0; i < 26; i++) {\n            if (s1Count[i] === s2Count[i]) {\n                matches++;\n            }\n        }\n\n        let l = 0;\n        for (let r = s1.length; r < s2.length; r++) {\n            if (matches === 26) {\n                return true;\n            }\n\n            let index = s2.charCodeAt(r) - 'a'.charCodeAt(0);\n            s2Count[index]++;\n            if (s1Count[index] === s2Count[index]) {\n                matches++;\n            } else if (s1Count[index] + 1 === s2Count[index]) {\n                matches--;\n            }\n\n            index = s2.charCodeAt(l) - 'a'.charCodeAt(0);\n            s2Count[index]--;\n            if (s1Count[index] === s2Count[index]) {\n                matches++;\n            } else if (s1Count[index] - 1 === s2Count[index]) {\n                matches--;\n            }\n            l++;\n        }\n        return matches === 26;\n    }\n}\n","cpp":"class Solution {\npublic:\n    bool checkInclusion(string s1, string s2) {\n        if (s1.length() > s2.length()) {\n            return false;\n        }\n\n        vector<int> s1Count(26, 0);\n        vector<int> s2Count(26, 0);\n        for (int i = 0; i < s1.length(); i++) {\n            s1Count[s1[i] - 'a']++;\n            s2Count[s2[i] - 'a']++;\n        }\n\n        int matches = 0;\n        for (int i = 0; i < 26; i++) {\n            if (s1Count[i] == s2Count[i]) {\n                matches++;\n            }\n        }\n\n        int l = 0;\n        for (int r = s1.length(); r < s2.length(); r++) {\n            if (matches == 26) {\n                return true;\n            }\n\n            int index = s2[r] - 'a';\n            s2Count[index]++;\n            if (s1Count[index] == s2Count[index]) {\n                matches++;\n            } else if (s1Count[index] + 1 == s2Count[index]) {\n                matches--;\n            }\n\n            index = s2[l] - 'a';\n            s2Count[index]--;\n            if (s1Count[index] == s2Count[index]) {\n                matches++;\n            } else if (s1Count[index] - 1 == s2Count[index]) {\n                matches--;\n            }\n            l++;\n        }\n        return matches == 26;\n    }\n};\n","java":"class Solution {\n    public boolean checkInclusion(String s1, String s2) {\n        if (s1.length() > s2.length()) {\n            return false;\n        }\n\n        int[] s1Count = new int[26];\n        int[] s2Count = new int[26];\n        for (int i = 0; i < s1.length(); i++) {\n            s1Count[s1.charAt(i) - 'a']++;\n            s2Count[s2.charAt(i) - 'a']++;\n        }\n\n        int matches = 0;\n        for (int i = 0; i < 26; i++) {\n            if (s1Count[i] == s2Count[i]) {\n                matches++;\n            }\n        }\n\n        int l = 0;\n        for (int r = s1.length(); r < s2.length(); r++) {\n            if (matches == 26) {\n                return true;\n            }\n\n            int index = s2.charAt(r) - 'a';\n            s2Count[index]++;\n            if (s1Count[index] == s2Count[index]) {\n                matches++;\n            } else if (s1Count[index] + 1 == s2Count[index]) {\n                matches--;\n            }\n\n            index = s2.charAt(l) - 'a';\n            s2Count[index]--;\n            if (s1Count[index] == s2Count[index]) {\n                matches++;\n            } else if (s1Count[index] - 1 == s2Count[index]) {\n                matches--;\n            }\n            l++;\n        }\n        return matches == 26;\n    }\n}\n","csharp":"public class Solution {\n    public bool CheckInclusion(string s1, string s2) {\n        if (s1.Length > s2.Length) {\n            return false;\n        }\n\n        int[] s1Count = new int[26];\n        int[] s2Count = new int[26];\n        for (int i = 0; i < s1.Length; i++) {\n            s1Count[s1[i] - 'a']++;\n            s2Count[s2[i] - 'a']++;\n        }\n\n        int matches = 0;\n        for (int i = 0; i < 26; i++) {\n            if (s1Count[i] == s2Count[i]) {\n                matches++;\n            }\n        }\n\n        int l = 0;\n        for (int r = s1.Length; r < s2.Length; r++) {\n            if (matches == 26) {\n                return true;\n            }\n\n            int index = s2[r] - 'a';\n            s2Count[index]++;\n            if (s1Count[index] == s2Count[index]) {\n                matches++;\n            } else if (s1Count[index] + 1 == s2Count[index]) {\n                matches--;\n            }\n\n            index = s2[l] - 'a';\n            s2Count[index]--;\n            if (s1Count[index] == s2Count[index]) {\n                matches++;\n            } else if (s1Count[index] - 1 == s2Count[index]) {\n                matches--;\n            }\n            l++;\n        }\n        return matches == 26;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def checkInclusion(self, s1: str, s2: str) -> bool:\n        ","javascript":"class Solution {\n    /**\n     * @param {string} s1\n     * @param {string} s2\n     * @return {boolean}\n     */\n    checkInclusion(s1, s2) {}\n}\n","cpp":"class Solution {\npublic:\n    bool checkInclusion(string s1, string s2) {\n        \n    }\n};\n","java":"class Solution {\n    public boolean checkInclusion(String s1, String s2) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public bool CheckInclusion(string s1, string s2) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/UbyhOgBN834","embedding":[0.027364848,-0.03058695,0.026789473,-0.034499504,-0.0032508704,0.02098969,0.015972419,-0.019620297,-0.024787167,0.047410924,0.00046137907,-0.063889675,-0.022761846,0.043130133,-0.016628345,0.012577704,-0.027134698,0.016524779,0.0018872309,0.010437308,0.027548969,0.037491452,0.027940223,0.017882664,0.024787167,-0.022681294,0.012819361,0.0075144013,0.006139254,-0.026099022,0.00968932,-0.0149137275,-0.0070656086,-0.009626028,-0.07733044,0.053486887,-0.019183012,0.023256669,0.013026496,-0.051231414,-0.017641006,0.03884934,-0.010034545,-0.025201438,-0.014223277,-0.0043440834,0.03233609,0.0040880414,-0.053717036,0.026237113,-0.029321125,0.025845857,0.013670917,-0.07001167,-0.0067836745,0.012589212,-0.035742313,0.037974767,0.03113931,-0.022301545,0.033440813,-0.039862,0.0044562817,-0.015028803,-0.008716935,-0.023590386,-0.00022871168,-0.000407078,0.019539746,-0.030195694,-0.036386732,0.049758453,-0.008682413,0.018147336,-0.016352165,0.050725084,0.008901056,0.06043742,0.055696327,0.002773309,-0.040345315,-0.053118646,0.05495985,0.011472983,-0.015983926,0.02980444,-0.034177292,0.021530543,-0.08096681,-0.0676181,-0.035604224,-0.0005653062,0.00694478,-0.0010932131,0.08451112,0.01091487,0.056662958,-0.034844726,-0.053072616,0.0076467376,0.02879178,-0.0063406355,0.015926387,0.019067938,0.014188754,-0.017652513,0.09491391,0.016916033,-0.013935589,-0.035696283,0.01116228,0.025339527,-0.0075834463,0.015891865,0.06246274,-0.009395879,-0.022244008,-0.05808989,0.012911421,-0.003377453,0.040161196,-0.026996609,0.017134676,-0.03486774,-0.032474183,0.005658816,-0.03548915,-0.056386776,-0.020287734,-0.012531674,0.004542588,-0.052474227,0.013072526,0.04092069,-0.031162325,-0.011122004,-0.03224403,-0.016524779,-0.0389414,0.06232465,-0.010713488,0.005819921,-0.025523648,0.047687102,-0.010615674,0.00009718448,-0.020678988,-0.0017793481,0.0073705576,0.01914849,0.021024212,0.011841224,0.023866568,0.020920645,-0.010051806,-0.024672093,-0.00060414406,-0.005937873,0.05390116,0.029090974,-0.016467242,-0.04230159,0.01804377,0.018964369,0.007336035,-0.038481098,0.020702003,-0.027111683,-0.03659387,-0.037307333,-0.0044447742,-0.0145800095,-0.004502312,-0.0047641075,0.027594998,-0.018481053,-0.042692848,-0.055374116,-0.029551275,0.0011593812,0.02288843,0.024971288,0.009769873,-0.048469614,0.050494935,-0.020425823,0.015535133,-0.011294617,0.019861955,-0.012094389,0.025914904,0.016214076,0.041404005,0.022128934,0.0026567953,-0.07521306,0.044741184,-0.019873463,0.010730749,0.000671391,-0.019781403,-0.003820492,-0.025017317,0.01965482,0.009988515,-0.049436245,-0.019585775,0.0037974769,-0.011490244,-0.0031070265,0.0029516753,0.011409692,0.00438436,-0.008699674,0.04046039,0.005440173,0.0026251497,-0.0194707,0.014246292,0.0040333807,-0.047456954,0.025730783,0.039654866,0.049574334,0.010615674,0.057813708,0.014200262,0.00434696,0.022865415,-0.041357975,0.019804418,0.015063325,0.025753798,-0.02144999,0.005845813,-0.040391345,0.012830869,0.008912563,-0.040115166,-0.015212922,-0.01481016,-0.0030235972,0.016306136,0.028653689,-0.0008609053,-0.02255471,-0.008394726,0.06227862,-0.03486774,0.0022727323,0.01047183,0.021012705,0.008296912,-0.066145144,-0.027203744,0.012692778,0.025040332,-0.0073417886,0.031415492,-0.0066686,-0.10006927,0.037767634,-0.043728523,-0.09067915,-0.027479924,-0.053440858,0.034039203,0.05818195,0.0136939315,0.011852731,0.015788298,0.009090929,0.036363717,-0.02278486,-0.013440766,-0.036064524,-0.013049511,0.012451122,-0.010155374,0.005284822,-0.06476424,-0.012934436,0.031921823,-0.017928693,0.009879193,0.018458039,0.008256636,-0.023659432,-0.064902335,-0.03376302,0.0051956386,0.0317377,-0.0041887322,0.049160063,-0.048883885,-0.0058055366,-0.030978205,0.021714663,-0.008210605,-0.010161128,0.05592648,0.031944837,0.013429259,0.043475356,-0.034752667,-0.017675528,-0.017169198,0.057261348,-0.0007990524,0.027664043,0.015063325,0.021737678,-0.02043733,-0.007008071,-0.04586892,-0.070425935,-0.015155385,-0.014211769,0.0023949996,0.016559301,0.0012651064,-0.00044375818,0.041772246,0.017192213,0.0007059136,0.06168023,-0.0065074945,0.03012665,0.009280804,-0.0412429,-0.006703122,-0.052428197,0.037721604,0.017341811,-0.04642128,0.003837753,0.013647902,0.0709783,-0.026283143,0.06232465,0.001037114,-0.02002306,0.017963216,0.049068004,-0.03339478,-0.036662914,0.012462629,0.023314206,0.0054315426,0.005034534,0.013199109,-0.0004915863,-0.012094389,0.009090929,-0.03981597,0.021565067,-0.025661739,0.023682447,0.008233621,0.0075604315,0.008762966,0.018711204,-0.008371711,-0.0042491467,-0.026237113,0.016041463,-0.013452274,0.0138320215,-0.0036708943,0.010817056,-0.00781935,0.01660533,0.0030638734,0.016363673,-0.004789999,0.053809095,-0.042416666,0.04467214,0.009913716,-0.004093795,-0.027641028,0.0561106,0.00883201,-0.011979314,0.01849256,0.062048472,0.030794086,0.00566457,-0.02952826,-0.033947144,0.0015161139,-0.010293464,0.0349598,0.011841224,0.0055753863,-0.024695108,0.032497197,0.036156584,-0.032313075,0.037399393,0.010184143,-0.05855019,-0.00022781265,-0.03169167,-0.03401619,0.012635241,0.011139265,-0.0145800095,-0.009050653,0.028929869,-0.0150518175,0.017698543,0.0326583,-0.02823942,0.017871156,0.022577725,-0.024372898,0.0371002,0.031461522,-0.020000044,0.064027764,-0.023705462,0.017802112,-0.010483338,0.047733136,-0.007750305,-0.0008925509,0.013003482,0.016593823,-0.047318865,-0.051599655,0.030333785,0.026352188,-0.003052366,-0.051921867,0.037491452,0.0009982762,0.043751538,0.006869981,-0.030771071,-0.03229006,-0.016812466,0.01582282,0.002117381,0.025523648,-0.02745691,-0.0035788342,0.033279706,0.055696327,0.008072515,-0.0025978193,-0.019954015,-0.0016901649,0.007249729,0.014349859,0.010500599,-0.017468393,0.018906832,0.024050687,-0.0156041775,-0.015558148,0.00402475,-0.020609943,-0.0029890747,0.04632922,0.03026474,-0.012819361,-0.024487972,0.01887231,-0.03113931,-0.009355602,-0.049528304,0.022082904,0.021426976,-0.02718073,-0.0012061305,0.045845903,0.044119775,-0.019723864,-0.032773376,-0.026467264,-0.04289998,0.0071116383,0.006789428,-0.01361338,-0.0065765395,0.029735396,-0.011265848,-0.01928658,-0.01882628,-0.024994303,0.0013895313,0.025707768,-0.009930978,-0.0005631486,-0.01153052,0.08906809,-0.020126628,0.008803242,-0.02311858,-0.034591563,-0.024948273,0.018412009,-0.022865415,0.022957474,0.0025647352,-0.041450035,-0.06191038,-0.027433895,-0.0016959186,0.010552383,-0.01878025,0.0375605,0.011611073,-0.008061008,-0.021933306,0.009746857,0.014349859,-0.041357975,-0.002406507,-0.0020929277,-0.04193335,-0.0043728524,-0.010494845,-0.0017937324,-0.035857387,-0.0033803298,-0.0349598,-0.03779065,-0.05693914,-0.00094649236,-0.0076524913,0.003958582,0.022301545,-0.008273897,0.0015319367,0.005253176,0.002429522,-0.008446509,0.0062313145,0.027940223,-0.0045310804,0.009821656,-0.0031271647,0.0017347565,-0.008538569,0.020448837,0.008458016,-0.010874593,-0.03021871,-0.009338341,-0.00045454648,0.011047206,-0.020828586,-0.020460345,-0.000196167,-0.008860779,-0.015949402,-0.031622626,-0.008670906,-0.006029933,-0.041357975,0.008596106,-0.009493692,0.0071346536,0.031760715,-0.008147314,-0.0047008162,0.04138099,0.028814794,0.024073701,-0.010523614,-0.030794086,-0.021484513,0.015627192,-0.01743387,-0.013601872,-0.012658256,-0.002022444,-0.012255494,0.0018987384,0.022704309,-0.002626588,-0.03044886,-0.024257822,-0.008250882,-0.011795193,-0.008314173,-0.01804377,-0.03215197,0.009476431,0.019079445,0.06849267,0.0019318225,0.00809553,-0.032474183,-0.035811357,-0.031415492,-0.013072526,0.018066784,0.006979302,0.007468371,0.04023024,-0.0038435068,0.015569655,-0.026467264,0.06315319,0.027272789,0.013371722,0.04359043,0.011852731,-0.0031271647,0.023820536,-0.009798641,0.040598482,0.03486774,0.0032451167,0.001024168,0.023705462,-0.021783708,0.011231326,0.020874616,0.02883781,0.015719254,0.03673196,0.021933306,-0.014879205,0.014326844,0.003489651,0.042600784,-0.025569677,0.030978205,0.009758364,-0.013659409,-0.018929847,-0.0025532278,0.0019764141,0.031162325,0.02745691,0.005261807,0.02182974,-0.03054092,0.012738809,-0.06310716,-0.01859613,-0.0008925509,0.033072572,0.024073701,0.034660608,-0.010632935,0.0034982818,0.011818209,0.039286625,0.010730749,0.025293497,-0.002662549,-0.0086536445,-0.020414315,-0.017871156,-0.023360237,0.00584869,-0.005359621,0.013774484,-0.0174799,0.011565044,-0.032520212,-0.01965482,-0.00745111,0.025339527,-0.013394737,-0.0009982762,0.0018814772,0.024142748,-0.016720407,-0.03063298,-0.0038061074,0.01439589,0.0154660875,-0.050218754,0.018688189,0.02998856,0.009464923,-0.0037572007,-0.019010399,-0.009660551,0.005336606,-0.010437308,-0.006547771,-0.035189953,-0.029137004,-0.0038262457,-0.01448795,0.00039628972,-0.013095542,0.02902193,-0.0039470745,0.036156584,-0.0016700268,-0.011363662,-0.092934616,0.03044886,0.025293497,0.024004657,-0.010805548,-0.019643312,-0.038872354,0.02071351,0.001467207,-0.036110554,-0.02181823,-0.009746857,0.026467264,-0.006639831,0.023981642,-0.01490222,-0.0043929904,-0.01536252,-0.021622604,0.019723864,-0.013716947,0.0020914893,0.017836634,-0.004810137,0.0073705576,-0.034545533,-0.005123717,0.024994303,0.015569655,0.0060126716,-0.0004779211,-0.0007968948,0.003443621,-0.027042639,0.025178423,0.023958627,-0.02333722,-0.005730738,0.06020727,-0.038688235,0.0065305093,0.001355728,0.016582316,0.028377509,0.02952826,-0.023291191,0.016352165,-0.040621497,0.018101307,-0.06246274,0.023728477,-0.011363662,0.0068642274,0.022876922,-0.022163456,-0.032635286,0.021910291,0.03067901,0.0006052229,-0.010189896,0.036570854,0.018895324,0.020655973,-0.029160019,-0.016237091,0.022681294,0.039056476,-0.036893062,-0.002983321,-0.016893018,0.022416621,-0.03976994,-0.024649078,0.019758387,-0.008619122,-0.014591517,-0.021634111,-0.022359084,0.0009953992,0.036824018,-0.013843529,0.0075892,-0.003138672,-0.010166882,0.018975876,0.010120851,0.023532849,-0.011288863,-0.006818197,0.052750405,-0.0024338374,-0.009240527,0.0067836745,-0.039746925,-0.024856212,-0.00049086707,-0.0022928705,-0.011864238,-0.04391264,-0.008388972,0.010771025,0.032681316,-0.009349848,0.019931,0.023348728,-0.010575398,-0.038319994,-0.027917208,0.0012600719,-0.031898804,-0.046444293,-0.016536286,0.044580076,-0.016386688,0.0073072664,0.018952861,0.044465,-0.011749163,0.045132436,0.046582382,0.034614578,0.018791758,0.017468393,-0.005080564,-0.009925224,-0.018722711,-0.020126628,0.0086536445,0.01692754,0.023820536,0.03972391,-0.0017620868,0.007261236,-0.03284242,0.03095519,0.02962032,0.041772246,0.0026567953,-0.009815902,0.013325691,-0.00576526,-0.014096694,0.02934414,0.0011565044,-0.037330348,-0.051737744,0.03426935,-0.033486843,-0.021323409,0.014476442,-0.025316512,0.025615707,0.003975843,0.023889583,-0.02722676,-0.009620274,0.046099067,-0.010782533,0.005696215,0.005440173,0.021634111,0.051645685,0.03972391,-0.0033716992,-0.018158844,0.005727861,-0.0009371425,0.012405091,0.022669787,-0.03558121,0.014338352,-0.00023842114,0.014683577,0.034683622,-0.021910291,0.0024367142,-0.02911399,0.053210706,0.021473005,0.024994303,-0.015281968,0.03861919,0.005221531,-0.028377509,0.03380905,-0.02200235,-0.046030022,0.006058702,0.022209486,0.012784839,0.0014535418,0.051001266,-0.010696227,0.023325713,-0.012071374,-0.029413184,-0.0018109938,0.008826257,-0.013256647,0.026375202,0.03548915,-0.006657092,0.0039959815,-0.0041311947,0.040023103,-0.016754929,-0.0034378674,-0.0045051887,0.0059493803,-0.014695085,-0.02966635,-0.0074568638,-0.027364848,-0.039470743,0.024672093,0.01056389,-0.029459214,0.016536286,-0.0009328272,0.03100122,0.026191084,-0.017376333,0.0011593812,-0.005615663,-0.015120863,-0.009959746,-0.016409703,-0.0011449968,0.022968981,0.028584644,0.010650196,-0.007940179,0.027065653,-0.00065916433,0.0099655,-0.028032284,-0.052059956,-0.020840093,-0.0032192247,0.0057566296,-0.033924125,-0.013636394,-0.02962032,-0.031346444,-0.06324525,-0.032727346,-0.06959739,-0.018745726,-0.074798785,-0.0019375762,0.010926377,0.009666305,-0.010932131,0.0019735373,-0.043291237,-0.016478749,-0.004916582,-0.038826324,0.00026970718,0.022899937,0.016789451,0.050448906,0.0028682458,0.044971332,0.006208299,-0.0021777954,0.035949446,0.0010910553,-0.0039700894,0.019505221,-0.05878034,0.003495405,0.013176094,-0.008803242,0.016916033,-0.030517906,-0.005696215,-0.014016142,0.037859693,0.0018901079,-0.0064384495,-0.022439636,-0.0074108336,-0.00071670185,0.021323409,0.017963216,0.009861932,0.031392477,0.007830857,0.026168069,0.016237091,-0.024142748,0.016536286,-0.0017908555,-0.021288885,-0.015293475,-0.0002592785,-0.0030092127,0.0021979336,-0.0018541468,0.043291237,-0.0036967862,-0.024119733,0.016122015,0.016168045,-0.048423585,-0.031392477,-0.00941314,0.03270433,0.011593812,0.03288845,-0.008032239,-0.010184143,0.013153079,0.012324539,0.029919514,0.027157713,0.021104766,0.006869981,-0.006306113,-0.00883201,-0.00021594553,0.0037428162,0.0026237112,0.0076179686,0.0064844796,0.01375147,-0.007945932,0.056708988,-0.014073679,0.0048561674,-0.00228424,-0.008912563,-0.00680669,0.026582338,-0.0075144013,0.02952826,0.044027716,-0.011064467,-0.026559323,-0.0147180995,0.006680107,0.016352165,-0.008112792,-0.03123137,-0.031024236,0.014982772,0.024142748,-0.009223266,-0.010178389,-0.0033170385,-0.019907985,0.05822798,-0.014223277,-0.0065592784,0.008337188,0.0018268166,0.018446531,0.02348682,-0.00032904276,0.035351057,0.0056242933,-0.021668633,-0.035719298,0.006265837,0.003912552,-0.013291169,-0.024764152,-0.023268176,-0.024557017,0.011680119,0.020609943,-0.0054603117,-0.036662914,0.0017548946,0.0056473087,-0.014453427,-0.053394828,0.013498304,0.018423516,0.012876899,0.008550077,-0.02773309,-0.01914849,0.025431588,-0.0005113648,0.021426976,-0.04243968,-0.025247468,-0.021426976,0.015166893,0.00356445,0.03021871,0.008153068,0.0014420343,-0.012267001,0.013785992,0.0060126716,0.010799794,-0.00052395114,0.014787145,-0.012761824,0.023245161,0.0266744,-0.036110554,-0.03187579,-0.013463782,-0.06227862,0.024211792,-0.026812488,-0.005307837,0.014050664,0.00809553,-0.002793447,0.0052445456,0.011519013,-0.0030638734,-0.007922918,0.008072515,0.015523626,0.018734219,0.015972419,-0.011294617,0.021162303,0.009660551,-0.039977074,-0.019367132,-0.03118534,0.037928738,0.03224403,0.0045972485,0.0034062217,-0.042370636,-0.009142714,-0.022704309,-0.00084508245,-0.011283109,0.019355625,-0.012151926,0.015420058,-0.011795193,0.01632915,0.023417775,-0.0026711798,-0.009994268,0.023233654,0.0038061074,0.018895324,0.057767678,0.014476442,-0.0015463211,0.013601872,0.024257822,0.008256636,-0.018791758,-0.005356744,0.023383252,-0.014522472,0.015661715,0.013245139,-0.029689364,0.0019922368,-0.036225628,0.036939092,0.0010845824,0.019263564,0.053026587,0.015845835,-0.031047251,0.00932108,0.0028308465,0.024487972,0.0042520235,0.016409703,-0.009326833,-0.0058084135,0.005445927,-0.001697357,0.017215228,0.002806393,0.0044591585,-0.03647879,-0.0063003595,-0.029367154,-0.03613357,0.013118557,0.0025302127,-0.03275036,-0.03502885,0.031944837,-0.024050687,0.04421184,0.029044945,-0.03049489,0.0185501,-0.0066743535,0.024649078,-0.0033458073,-0.018446531,-0.037583515,0.0036018493,-0.00057501567,-0.017353319,-0.019067938,-0.0019677836,-0.01490222,0.016237091,0.0010148182,-0.023463804,-0.0000026521204,0.020748032,0.02025321,0.018837787,0.0049942574,-0.04092069,-0.01743387,-0.069413275,-0.004214624,0.021611096,0.024695108,-0.0040333807,0.028538615,0.006749152,0.016858496,-0.01798623,-0.016501764,-0.0407826,-0.03090916,0.018745726,-0.032036897,0.017894171,-0.008475278,-0.021599589,-0.03224403,-0.0010507791,-0.008567338,0.0076697525,-0.026352188,-0.008544323,0.017963216,0.023544356,-0.023613403,0.014775638,-0.022623757,0.028929869,0.036294673,-0.007750305,-0.016570808,0.05647884,0.003981597,-0.03949376,0.008262389,-0.017077139,0.014338352,-0.03063298,0.0029171526,-0.008521308,0.00060917856,0.005509218,-0.010316479,0.009021885,-0.0073648035,-0.046605397,0.024441943,-0.025155408,-0.0074396026,0.006329128,-0.0053653745,0.0223821,-0.021645619,-0.028607659,0.016018448,0.019459192,-0.004280792,-0.029712379,0.037399393,0.014890713,0.0029027683,0.037882708,-0.014787145,0.0065247556,0.005379759,0.022911444,0.0007041155,0.006156516,0.0016657114,0.006720383,0.00548908,-0.0060414406,-0.005163993,-0.023958627,0.009815902,0.01388956,0.019436177,-0.013924082,0.029321125,0.0006962041,0.011979314,0.022922952,-0.03063298,-0.022623757,-0.008532816,-0.007871134,-0.014867698,0.008072515,0.02962032,-0.015281968,0.0039240597,0.0011449968,0.039033458,0.013164586,0.010736503,0.0030149666,-0.008452263,0.034200307,-0.020264717,-0.036708944,0.006800936,-0.013026496,-0.029275095,0.009298065,-0.009574245,0.024050687,0.00040527998,-0.010678966,-0.004795753,-0.01097816,0.025776813,0.012267001,-0.015788298,-0.012186449,-0.023187624,-0.010552383,-0.022738831,0.011283109,-0.014407397,-0.0028351618,0.032405134,0.018814772,0.00438436,-0.0027502938,-0.021611096,-0.0080034705,-0.019252056,-0.046766505,-0.014384382,-0.001549198,-0.010109344,-0.012922929,-0.050771113,-0.0016585193,-0.010374016,0.016075986,-0.02823942,0.00010446658,0.01508634,0.008319926,0.0051381015,0.03907949,-0.0017462639,-0.011852731,-0.037422407,-0.016812466,0.01398162,0.008308419,-0.017295782,0.041634157,0.024119733,-0.03109328,-0.016662868,0.0033832067,-0.017617991,-0.027548969,-0.0011370854,-0.055788387,-0.03546613,-0.018158844,-0.038458083,0.050172724,-0.0041772244,0.006565032,0.0021418345,-0.00064442033,0.000256941,-0.0106617045,0.01997703,-0.0039183055,0.025937919,0.015028803,0.043314252,0.016616838,0.015143878,0.043866612,0.017917186,0.0072957585,0.007606461,0.012612226,0.0024424682,0.025316512,-0.00008819424,-0.013878052,-0.023245161,0.02800927,0.012220971,0.0050575486,0.004499435,0.03136946,0.0032451167,-0.008078269,0.030609965,-0.012082881,0.021196825,0.0060471944,-0.009332587,-0.029367154,-0.013210617,-0.02094366,-0.0024252068,0.0037773387,-0.023406267,-0.011415445,-0.022945967,-0.013348707,-0.013739962,-0.02975841,0.0021648495,-0.013130064,0.0085155545,0.05868828,-0.0561106,-0.04637525,-0.02172617,-0.008958593,0.03608754,-0.024096716,0.05436146,0.036317687,0.005310714,0.049850516,-0.0037341856,0.033279706,0.0011752041,-0.023245161,0.024810182,-0.016870003,0.013394737,-0.016593823,0.028101329,-0.018837787,0.01056389,0.029160019,-0.01559267,-0.0047669844,-0.011818209,-0.01771005,0.06333731,0.011432707,0.011029944,-0.023199132,0.019252056,-0.019620297,0.020678988,0.0061852844,0.023935612,-0.0019044922,0.0064557106,0.008849272,0.021519035,-0.0037658312,0.013187601,-0.022853907,0.003190456,-0.051139355,-0.013463782,-0.0017491409,-0.0070713623,0.029413184,-0.0031530566,0.033141617,-0.004490804,0.018952861,0.0149137275,0.011041452,0.010891854,0.03456855,0.0077387975,0.016593823,-0.017180705,0.003745693,0.024234807,0.017215228,-0.008181836,0.0058256746,-0.005512095,0.013647902,-0.03215197,0.023728477,-0.027088668,0.004490804,0.010586905,0.032635286,-0.0075489236,-0.015420058,0.010212911,-0.012934436,-0.038043816,0.011081728,0.009603013,-0.010132358,-0.0061622695,0.07456864,0.008394726,0.0149137275,-0.024326866,-0.013452274,0.015845835,0.025017317,0.0005160397,0.0073590497,-0.005333729,0.06545469,0.02695058,0.03825095,0.0035500654,0.0023317083,-0.003515543,0.0025805582,0.017928693,-0.011519013,-0.00959726,0.004424636,-0.005563879,-0.00374857,0.03054092,0.01132914,-0.023636417,0.025707768]},{"id":"sliding-window-maximum","name":"Sliding Window Maximum","description":"You are given an array of integers `nums` and an integer `k`. There is a sliding window of size `k` that starts at the left edge of the array. The window slides one position to the right until it reaches the right edge of the array.\n\nReturn a list that contains the maximum element in the window at each step.\n\n**Example 1:**\n\n```java\nInput: nums = [1,2,1,0,4,2,6], k = 3\n\nOutput: [2,2,4,4,6]\n\nExplanation: \nWindow position            Max\n---------------           -----\n[1  2  1] 0  4  2  6        2\n 1 [2  1  0] 4  2  6        2\n 1  2 [1  0  4] 2  6        4\n 1  2  1 [0  4  2] 6        4\n 1  2  1  0 [4  2  6]       6\n```\n\n**Constraints:**\n* `1 <= nums.length <= 1000`\n* `-1000 <= nums[i] <= 1000`\n* `1 <= k <= nums.length`\n","difficulty":"Hard","concepts":["Queues","Sliding Window Fixed Size","Sliding Window Variable Size"],"solutions":{"python":"class Solution:\n    def maxSlidingWindow(self, nums: List[int], k: int) -> List[int]:\n        output = []\n        q = deque()  # index\n        l = r = 0\n\n        while r < len(nums):\n            while q and nums[q[-1]] < nums[r]:\n                q.pop()\n            q.append(r)\n\n            if l > q[0]:\n                q.popleft()\n\n            if (r + 1) >= k:\n                output.append(nums[q[0]])\n                l += 1\n            r += 1\n\n        return output\n","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @param {number} k\n     * @return {number[]}\n     */\n    maxSlidingWindow(nums, k) {\n        const n = nums.length;\n        const output = new Array(n - k + 1);\n        const q = [];\n        let l = 0;\n        let r = 0;\n\n        while (r < n) {\n            while (q.length > 0 && nums[q[q.length - 1]] < nums[r]) {\n                q.pop();\n            }\n            q.push(r);\n\n            if (l > q[0]) {\n                q.shift();\n            }\n\n            if (r + 1 >= k) {\n                output[l] = nums[q[0]];\n                l++;\n            }\n            r++;\n        }\n\n        return output;\n    }\n}\n","cpp":"class Solution {\npublic:\n    vector<int> maxSlidingWindow(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<int> output(n - k + 1);\n        deque<int> q;\n        int l = 0, r = 0;\n\n        while (r < n) {\n            while (!q.empty() && nums[q.back()] < nums[r]) {\n                q.pop_back();\n            }\n            q.push_back(r);\n\n            if (l > q.front()) {\n                q.pop_front();\n            }\n\n            if (r + 1 >= k) {\n                output[l] = nums[q.front()];\n                l++;\n            }\n            r++;\n        }\n\n        return output;\n    }\n};\n","java":"class Solution {\n    public int[] maxSlidingWindow(int[] nums, int k) {\n        int n = nums.length;\n        int[] output = new int[n - k + 1];\n        Deque<Integer> q = new ArrayDeque<>();\n        int l = 0, r = 0;\n\n        while (r < n) {\n            while (!q.isEmpty() && nums[q.peekLast()] < nums[r]) {\n                q.pollLast();\n            }\n            q.offer(r);\n\n            if (l > q.peekFirst()) {\n                q.pollFirst();\n            }\n\n            if (r + 1 >= k) {\n                output[l] = nums[q.peekFirst()];\n                l++;\n            }\n            r++;\n        }\n\n        return output;\n    }\n}\n","csharp":"public class Solution {\n    public int[] MaxSlidingWindow(int[] nums, int k) {\n        int n = nums.Length;\n        int[] output = new int[n - k + 1];\n        LinkedList<int> q = new LinkedList<int>();\n        int l = 0, r = 0;\n\n        while (r < n) {\n            while (q.Count > 0 && nums[q.Last.Value] < nums[r]) {\n                q.RemoveLast();\n            }\n            q.AddLast(r);\n\n            if (l > q.First.Value) {\n                q.RemoveFirst();\n            }\n\n            if (r + 1 >= k) {\n                output[l] = nums[q.First.Value];\n                l++;\n            }\n            r++;\n        }\n\n        return output;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def maxSlidingWindow(self, nums: List[int], k: int) -> List[int]:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @param {number} k\n     * @return {number[]}\n     */\n    maxSlidingWindow(nums, k) {}\n}\n","cpp":"class Solution {\npublic:\n    vector<int> maxSlidingWindow(vector<int>& nums, int k) {\n        \n    }\n};\n","java":"class Solution {\n    public int[] maxSlidingWindow(int[] nums, int k) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int[] MaxSlidingWindow(int[] nums, int k) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/DfljaUwZsOk","embedding":[-0.032777026,0.032755923,0.009782455,-0.049935896,-0.0046617035,0.0060836948,-0.030286564,-0.0062841983,-0.030729782,0.036111716,0.024841314,-0.020029234,-0.019185008,0.023596082,0.051497713,0.017116657,0.010125421,0.03184838,-0.0006074461,0.070070654,-0.0014470541,-0.010536981,0.015713133,-0.014583983,0.016715651,-0.002019544,0.019723201,0.036301665,0.028154897,0.008906571,0.03623835,-0.00974552,-0.012315129,0.034085575,-0.020862905,-0.0067696273,-0.033325773,0.022667436,-0.046474576,-0.03560518,-0.00023826266,-0.059433423,-0.016103588,-0.015607606,0.02520011,0.029927768,0.024398096,-0.0047408496,0.020240288,0.018235255,0.0061997757,0.021474969,-0.0007393562,0.024566941,0.04007957,-0.0027173485,0.00912818,0.040269524,0.06749577,0.015111623,0.014605089,-0.009618886,-0.0072233984,0.06103745,-0.013803075,0.00625254,0.011935228,0.014109107,0.009502805,-0.025664434,-0.062430423,-0.0137081,-0.03777906,-0.016810626,0.013243776,0.03222828,0.01303272,0.023659399,0.039594144,0.045841407,0.004719744,-0.024208145,0.04533487,0.018995058,-0.013655336,0.005540225,-0.041599177,0.047234375,-0.01956491,-0.059771113,-0.0010387922,-0.007624405,0.010262608,0.023258394,0.028534798,0.07002845,0.039910726,0.00041683597,0.010568639,0.044406224,0.031341843,0.0026685419,-0.012863875,-0.019786518,-0.0050468813,0.028471481,0.0037093125,0.0043477574,-0.06855105,-0.02602323,0.0018955484,-0.036407195,0.015702581,-0.032840345,0.04677005,-0.013655336,-0.037019257,0.013475938,0.04668563,0.01014125,-0.0039836857,-0.022519697,-0.0026289688,-0.04254893,-0.036491618,0.01682118,-0.018836765,-0.030940838,0.010278436,0.03387452,-0.012114625,-0.023427237,0.020134762,-0.009566122,-0.049809262,-0.03511975,-0.034972012,0.013855839,0.012009097,0.025833279,0.03777906,-0.0006892304,-0.039150923,0.014963884,-0.0076982747,-0.0023216181,-0.005292234,0.06804452,-0.028978016,0.015185493,0.03522528,-0.029590078,0.021759894,0.08594208,-0.015111623,0.007840738,0.030793099,0.00016315634,0.05111781,0.022709647,-0.008236468,-0.011956333,-0.012821664,0.00920205,-0.021401098,0.020145314,0.0066271643,0.0015947934,-0.0039520273,0.016409619,0.035584074,-0.03609061,0.04090269,-0.0035879554,0.04105043,-0.0049202475,-0.040966008,-0.039931834,-0.04360421,-0.01633575,-0.048880614,-0.018298572,0.020820694,-0.046516787,-0.0005477568,-0.010067381,0.029737817,-0.06884653,-0.016240774,0.007318374,0.036744885,0.02467247,0.02587549,0.007729933,-0.007598023,0.019987023,0.028450375,0.05854699,-0.027036298,-0.0240393,-0.026698608,0.0018612518,0.009872153,-0.028007157,0.02707851,-0.0826496,-0.00022012502,0.015554842,0.0014892652,-0.050948966,0.0398052,0.015312127,0.04588362,0.00597289,0.02005034,0.0086005395,0.042485613,0.0015670923,-0.02486242,0.053270582,0.006257816,-0.01438348,-0.050991178,0.032840345,0.039931834,0.0296745,0.014626195,-0.008109834,0.019237772,0.04626352,-0.0069384724,-0.057702765,0.0036987597,-0.01081663,-0.022815175,-0.013718653,-0.03421221,-0.05419923,-0.017021682,-0.0010328563,0.04187355,-0.005424144,0.0011106832,0.0053054253,-0.018762896,0.007065106,-0.04841629,0.016768415,-0.03657604,-0.0240393,-0.00278858,-0.024250356,-0.005772387,-0.015143282,0.0023123845,0.035436336,-0.012600055,0.0034481306,-0.028513692,0.0030339328,-0.021221701,-0.017844802,-0.04668563,-0.035309702,-0.007867119,-0.01611414,-0.0064794254,0.008969888,0.0071706343,0.019185008,-0.029400129,-0.030771993,0.012927192,-0.025981018,-0.008774661,-0.00007972318,0.021738788,-0.01524881,-0.010447281,-0.08999436,-0.024799103,-0.013760864,0.0010711101,0.000046828092,0.02568554,-0.0035985082,0.01491112,0.017929224,-0.010837736,-0.02659308,-0.045039393,-0.05854699,-0.004899142,0.020261394,-0.008711345,0.026192075,-0.0627259,0.044364013,0.009091246,-0.032777026,0.0032001396,-0.015955849,0.017665403,0.02117949,-0.06576511,-0.020588532,0.024545835,-0.002775389,-0.026339814,0.012072414,-0.010953817,0.018952847,0.02098954,-0.00046300452,-0.017148316,-0.022393063,0.021200595,-0.0032027778,0.028365953,-0.042570036,0.01888953,0.0038227553,0.0709993,0.02355387,0.019237772,0.034676533,0.009360342,0.014784486,0.038243383,-0.054283652,-0.04172581,-0.017559875,-0.015438761,0.020799588,-0.07918829,0.014520667,0.027479516,0.0070703826,-0.0065955063,0.008975165,0.013824181,0.04976705,0.02313176,0.0019905237,0.013011615,0.020461898,0.033473514,0.00047454666,0.019913152,0.03552076,-0.029948873,0.007281439,0.030054402,0.0057090702,0.019258877,-0.028323742,-0.02501016,0.0048753982,-0.05276405,0.008268126,-0.00888019,0.01498499,0.021907633,-0.026635291,-0.007086212,0.003843861,-0.01551263,-0.079779245,-0.027036298,0.05647864,0.032312702,0.012515632,-0.014858356,0.0019786519,-0.027015192,-0.020377476,-0.008927677,0.019702096,0.04364642,-0.020113656,-0.04968263,-0.0117663825,-0.029780028,-0.011164873,0.03560518,0.024946842,-0.014341269,0.0036776543,-0.012315129,-0.026909664,-0.038707707,0.004727659,0.045166027,0.0001529333,0.0061839465,-0.005561331,0.03260818,0.024777997,-0.0052315556,-0.013127696,0.03165843,-0.028323742,0.02020863,0.021052856,-0.05137108,-0.05517009,-0.001074408,0.049893685,0.03368457,-0.05010474,0.020176973,-0.007956819,-0.0069173668,-0.042147923,0.0021052856,0.03617503,-0.048669558,-0.002828153,-0.016873943,0.013781969,0.0097507965,0.013866392,0.017960882,0.0077193803,0.024841314,-0.004849016,0.010463111,-0.070281714,0.013127696,-0.021095067,-0.0046880855,0.018076964,0.017739274,0.03034988,-0.038623285,0.046432365,-0.012790006,0.049007248,-0.024651363,-0.060741972,-0.011850805,-0.03815896,0.0071495287,0.01250508,-0.019026715,0.019702096,-0.008758832,0.035710707,0.026677502,0.027395094,0.021717682,-0.03617503,0.009766625,-0.00084026746,-0.021865422,-0.02467247,0.06736914,0.0044163507,-0.0020116293,-0.015544289,-0.034233313,-0.0029389574,-0.036554933,-0.0072339512,0.02520011,-0.0015037754,0.0028123239,0.007270886,0.04389969,-0.0032397127,0.031468477,-0.00045574948,-0.008906571,0.05044243,-0.032354914,0.0034507688,0.05137108,0.011249295,0.030539831,-0.010642509,-0.015903084,-0.0018942293,-0.011660854,0.0060678655,0.012747794,-0.008115111,0.020008128,-0.027437305,0.03127853,0.012325682,-0.050653487,0.026424235,-0.019575462,-0.006949025,0.0058831912,0.01885787,-0.012790006,0.016884496,-0.03165843,-0.012832217,0.010072657,-0.066187225,0.03775795,-0.00035582756,0.014510114,0.0289147,-0.020831246,-0.019744307,-0.0074080722,0.046179097,-0.05314395,-0.006579677,0.02211869,-0.015565394,0.009360342,0.027901629,-0.0058884677,-0.043730844,-0.01667344,0.010146527,-0.030603148,0.029737817,-0.011724171,0.0042448677,0.02197095,0.004025897,-0.03898208,0.0031948632,-0.0664827,-0.0026250114,-0.0032529037,0.016019166,-0.01776038,0.040269524,-0.007402796,0.002282045,0.033895627,0.0010196653,-0.014805592,-0.04740322,0.004221124,-0.0051181125,-0.015417655,-0.014088001,-0.0076032993,-0.010194014,0.03805343,0.015354338,-0.028260425,-0.025833279,-0.029927768,0.0036512723,0.0065427423,-0.0028835554,0.01664178,-0.024545835,-0.00597289,0.057702765,0.00080333266,0.03549965,-0.020461898,-0.00081718323,0.011386482,-0.026339814,-0.005015223,-0.02745841,-0.0005757877,0.013539255,0.01269503,-0.015153835,0.0002778357,0.001627771,0.03199612,-0.02693077,0.011428693,-0.014562878,-0.000045385328,-0.013876945,-0.024777997,0.017981987,-0.0014523305,-0.012737242,-0.015934743,-0.008743003,-0.025580011,-0.02384935,-0.008436971,0.0071600815,0.006373897,-0.037610214,0.008758832,-0.022772964,0.013739758,0.018657368,-0.00500467,-0.016430724,-0.03815896,0.029843345,0.014372927,-0.033663463,-0.00061404164,0.021907633,-0.0027173485,0.0047672316,-0.0014299058,0.015575947,-0.013993026,0.02313176,-0.0037225035,-0.0039335596,-0.005252661,-0.013497043,-0.008964612,-0.024271462,-0.010135974,0.007138976,-0.019818177,0.01356036,-0.006790733,-0.005434697,0.005424144,0.016546806,0.0028967464,0.0050890925,0.0156181585,-0.012547291,-0.060826395,0.024271462,-0.019744307,-0.005614095,-0.030054402,0.0028941082,-0.006500531,-0.020113656,-0.020029234,0.028365953,0.004912333,-0.029379023,0.025959913,-0.013760864,0.03195391,0.026466446,-0.0024047215,-0.014668406,-0.00071429333,0.023933772,-0.014742276,0.0022306002,0.00805707,-0.008526671,0.01739103,0.00066284835,0.005819875,-0.013623677,0.0030840586,-0.00031543008,-0.010468387,-0.04596804,-0.0013758226,-0.0012129135,0.008194257,0.009017376,0.04423738,0.01855184,0.04292883,-0.03516196,0.020936774,0.03189059,0.05246857,0.014425691,-0.009814113,0.02114783,0.015787004,-0.015554842,0.005176153,-0.014088001,0.0040047914,0.028154897,-0.022709647,0.0080254115,-0.02996998,0.031405162,-0.030434303,0.05457913,-0.013444279,-0.007993753,0.0032977532,-0.02032471,-0.021738788,0.018678473,0.0066957576,0.011987992,-0.022329746,-0.03811675,0.026107652,0.021506626,-0.006347515,0.009154563,-0.0017451709,-0.0694797,0.0138347335,0.009107075,0.0005358849,0.036787096,-0.046432365,-0.010943264,0.018615156,0.0009240304,0.010505322,-0.015343785,0.05517009,-0.0031500137,-0.005471632,-0.011966886,-0.037652425,0.0034771508,0.014700064,-0.030539831,-0.0016620675,-0.005302787,-0.0060942476,-0.0029231282,-0.039298665,0.013349304,-0.029758923,0.039045397,0.0034903418,-0.0003914433,0.036153927,0.023975983,0.019691544,-0.0065955063,0.010436729,-0.009027929,-0.020609638,-0.039193135,-0.020303605,0.020345816,-0.04596804,-0.021116173,-0.016430724,-0.0144679025,0.00209869,0.020799588,0.04229566,0.012747794,-0.020293053,0.018182492,-0.06998623,0.045419294,-0.01900561,0.0037963733,0.0012604012,0.0096347155,0.045039393,0.037040364,-0.0034718744,-0.0009721776,0.00027058064,0.0069543016,-0.0051656,0.014742276,-0.027521728,-0.026508657,0.029568972,-0.024461413,-0.008774661,0.05787161,0.0048411014,0.027289566,0.023068443,-0.038243383,0.005561331,-0.0011218956,0.018446311,-0.017591534,-0.06728472,0.0064055556,-0.007270886,0.040311735,-0.027437305,-0.0069543016,0.018161386,-0.02163326,0.021010645,-0.03575292,0.028492587,0.030075507,0.025242321,-0.0035404677,0.009001547,-0.014320163,-0.02020863,-0.009307578,-0.0013421855,0.024144828,-0.011365376,0.0046748947,0.009729691,-0.035921764,0.04457507,0.04263335,0.014636748,-0.048289657,-0.014868909,0.0014773933,0.04090269,-0.040206205,-0.01828802,-0.0096927555,0.0063633444,0.02857701,-0.039235346,0.0012399552,0.055803258,-0.019396065,-0.01356036,-0.018699579,-0.026170969,-0.002878279,0.01566037,0.016705098,-0.049302727,0.013307093,0.021844316,-0.004806805,0.0070070657,0.040501684,0.0077615916,0.030138824,0.04677005,-0.045714773,-0.034085575,0.020789035,0.008495012,0.061121874,-0.008605816,-0.0059887194,-0.023047337,0.0106161265,-0.040501684,0.029801134,0.010869394,-0.052637417,-0.008611092,0.013001062,-0.0028703643,-0.010230949,-0.0034877036,-0.042190135,-0.02098954,-0.016747309,0.046474576,0.020071445,-0.0042000185,0.023490554,0.02298402,0.027711678,-0.0059517846,0.0049176095,0.004730297,-0.004754041,-0.014890014,-0.015639264,-0.050822333,0.03786348,-0.04191576,-0.017855354,-0.023110654,-0.04221124,0.04423738,0.0151010705,-0.014520667,-0.020377476,0.0289147,-0.016050823,0.012737242,-0.027015192,0.024735786,-0.011513116,0.0056088185,0.020409133,-0.023933772,0.037293628,-0.031215211,-0.03908761,0.03218607,0.020778483,0.003817479,-0.038897656,0.016757863,-0.03459211,-0.006764351,-0.014805592,-0.0065585715,-0.009629439,0.035963975,-0.041768022,0.052552994,-0.027542833,-0.009376171,-0.035204172,-0.021781,0.005534949,0.03286145,0.023089549,-0.0065321894,0.028007157,0.013053826,0.0076296814,-0.008162598,0.015639264,0.015470419,0.003701398,0.053439427,0.019543804,-0.0061470116,0.009698032,0.025115687,-0.0156181585,0.029505655,-0.01855184,0.006305304,-0.0061997757,0.026107652,0.018604605,-0.00476987,0.024461413,0.013412621,0.001499818,0.061797254,-0.020124208,0.020767929,0.0049176095,-0.03334688,-0.0103312,0.0023836158,0.01445735,0.013919156,0.02621318,-0.0037963733,0.007956819,-0.014436244,-0.02602323,0.05010474,-0.031679533,0.040269524,-0.011829699,0.006637717,0.017929224,0.07218122,-0.043055464,-0.003049762,-0.051962037,-0.027057404,0.02520011,0.032692604,0.037736848,0.0016093035,0.0015961125,0.017486006,-0.026466446,0.011998544,-0.0027674744,-0.016715651,-0.0008231192,0.03189059,0.001969418,0.004796252,-0.022435274,0.032755923,-0.00018780703,0.0027252631,0.020767929,-0.030370986,-0.013233223,-0.007956819,0.009355065,0.02062019,0.02098954,0.02437699,0.04774091,-0.03448658,0.00846863,0.003946751,0.0013507596,-0.027585045,-0.011597538,0.021274464,0.017253844,0.020113656,0.024777997,0.0126844775,0.0117663825,0.0013171226,0.008125664,-0.034866482,0.048163023,0.0010526428,-0.015428208,0.011776935,-0.06276811,0.033853415,0.0005170877,0.0037884586,-0.033811204,0.01476338,0.004822634,-0.017623192,-0.017559875,-0.03725142,-0.017770931,0.00846863,0.019575462,0.022815175,-0.006110077,-0.007703551,-0.01772872,-0.0033135822,-0.020303605,-0.061839465,0.014700064,-0.0038596902,0.017570429,-0.03518307,-0.012420657,0.020947328,0.042126816,0.027352883,0.01709555,0.0012749113,-0.030265458,-0.021654366,0.0026236924,0.0075399824,0.042232346,-0.016251327,-0.017158868,0.0016396429,-0.010310095,0.0055191196,0.0008613731,0.023954878,0.02197095,-0.009571399,0.010252055,-0.037356947,-0.021073962,-0.04465949,0.054114807,0.0034718744,0.012030203,-0.033790097,-0.016082482,0.0007611214,0.024165934,0.01329654,0.03448658,0.033262458,-0.008616369,-0.017137762,-0.0058145984,0.011787488,0.016156351,-0.017074447,-0.023532765,0.015723687,-0.020229736,-0.02370161,-0.013686994,0.011291507,-0.024925737,-0.039214242,0.019364405,0.0138347335,-0.013803075,-0.041810233,0.015744792,0.018583499,0.01859405,-0.012652819,-0.020240288,-0.05204646,-0.0037726294,0.04740322,0.046474576,0.008737726,-0.0049466295,-0.0067590745,-0.007350032,0.026888559,0.035035327,0.045503717,0.011660854,0.0033980047,-0.003545744,-0.00460894,-0.003754162,-0.016409619,-0.0037436092,0.00231898,0.015987506,-0.017211633,-0.05170877,-0.009893259,-0.010088487,0.00968748,0.039150923,-0.026994087,-0.017000576,0.02197095,0.00920205,-0.010837736,-0.023406131,-0.012737242,-0.036744885,-0.011175426,0.0015908361,-0.0077879736,-0.0044269036,0.0043345666,0.0058990205,-0.00042145283,0.014024684,-0.030624254,-0.013993026,0.013792522,0.00349298,0.007102041,0.026614185,-0.008283956,-0.055001244,-0.05449471,-0.018193044,-0.024440307,0.02861922,0.0027516452,-0.034233313,0.0064161085,0.0015987507,-0.0125683965,-0.059602268,-0.029189073,-0.0047382116,0.042907726,0.035288595,0.0014430968,0.059813324,0.0015420293,0.0004883972,0.00406547,-0.004859569,0.040459473,0.032840345,-0.027922735,0.022561908,-0.058420356,0.0058620856,-0.02050411,-0.011038239,0.019396065,-0.021654366,-0.010062104,-0.023680504,-0.0012485293,0.0012148923,-0.047825333,0.0134337265,0.0065585715,-0.0199026,0.0074872184,-0.0038781576,-0.017116657,-0.021158384,0.024609152,-0.009027929,-0.002371744,0.026972981,-0.035204172,0.026909664,0.031785063,-0.0015525821,0.02050411,0.010236225,0.0040338114,-0.01577645,0.0037858204,-0.021506626,0.025938807,0.007244504,0.031447373,-0.0068593263,-0.01806641,-0.0069543016,-0.009486976,-0.004326652,-0.040776055,-0.0074766655,0.005809322,0.022139795,0.008906571,-0.018340783,-0.027859418,0.0439419,0.0055085667,0.0021593687,0.014932225,-0.033452407,-0.022477485,-0.0009853686,0.0439419,0.018752342,-0.024925737,-0.056689695,-0.00544525,-0.014362374,-0.021042302,0.012610608,0.01780259,-0.015955849,0.03237602,0.08176317,0.031806167,0.004556176,-0.010579192,-0.027015192,0.031215211,0.027331777,0.042232346,-0.012600055,-0.0020960518,-0.008890742,-0.0067854566,0.0067590745,0.025179004,-0.015048306,-0.017865907,-0.005693241,0.027585045,-0.03710368,0.004017982,-0.00500467,0.005247385,-0.0010328563,0.024904631,-0.01562871,-0.007218122,-0.0010988113,0.015185493,-0.020736272,-0.006036207,-0.0057671107,0.030265458,-0.00841059,0.014921673,0.0026355642,0.0054558027,0.007360585,0.029547866,-0.023342814,-0.038433332,-0.01430961,0.018330231,0.011354824,0.03127853,0.005957061,0.014742276,0.0043213754,0.00096887985,-0.0051708766,0.030244352,-0.011576433,-0.011660854,-0.007988477,0.015976954,0.016884496,0.0009965809,0.0476987,0.040881585,-0.0035404677,0.008400037,0.039615247,0.019702096,-0.01937496,0.03969967,0.016768415,-0.005133942,-0.02501016,0.010974922,-0.025094582,-0.01809807,0.004342481,-0.0013520787,0.0193433,0.014267399,0.009719138,0.008104558,0.012726689,0.015987506,0.00584098,0.0018665282,0.0071495287,0.000039037153,0.005418868,-0.0067590745,0.023089549,0.0115342215,0.0046432363,-0.02144331,0.0075399824,-0.015153835,0.0017583619,-0.028703643,-0.00064998714,0.026846347,0.021337781,0.034106683,0.024271462,0.032481547,0.00043035677,-0.008574158,0.008990994,-0.027057404,0.018826213,-0.020820694,0.01758098,0.02467247,-0.014668406,0.034972012,-0.0394253,0.017855354,0.018446311,-0.0032106924,-0.049640417,-0.017264396,-0.019332748,0.023532765,0.02249859,0.030940838,0.023469448,-0.015787004,-0.0016805349,-0.03083531,-0.0045297937,0.022561908,-0.010600298,0.053988174,0.03406447,-0.05749171,-0.05415702,0.024799103,0.02775389,-0.0011819147,0.041514754,0.00466698,-0.019944811,-0.014225188,0.036787096,-0.01122819,-0.011692513,0.045166027,0.018900082,0.007154805,-0.022688542,0.011586986,-0.04457507,0.036048397,-0.015470419,-0.01476338,-0.024693575,0.017296055,-0.016029717,-0.041768022,0.0015196046,-0.03585845,-0.039277557,-0.037884586,-0.000052516716,-0.012082967,-0.01014125,0.018235255,0.008674409,-0.02952676,0.008885466,0.037546895,0.027162932,-0.012251812,0.0074344543,0.034275524,0.0036169756,-0.017939776,0.015438761,-0.024271462,-0.0027938564,-0.030138824,-0.029041333,0.0050495192,0.045461506,0.02986445,0.036343876,-0.0070809354,0.04398411,-0.000053959484,0.0022503866,-0.001244572,-0.005149771,-0.0010381327,-0.037568003,0.023659399,-0.01411966,-0.004899142,-0.0030312946,-0.041789126,-0.025769962,0.013982473,-0.03132074,-0.015058859,-0.018488523,0.019332748,-0.019987023,0.009471146,-0.028302636,-0.0023400856,-0.0055085667,0.00110079,-0.025157899,0.011112109,0.039277557,-0.008204809,-0.055803258,-0.009112352,-0.033262458,0.025643328,-0.027247354,0.041493647,0.009064863,-0.0009029248,0.06728472,0.008004306,0.033747885,-0.006764351,0.027057404,-0.022287535,0.017823696,-0.017317161,-0.0010209844,0.004279164,-0.011724171,0.016325196,0.024165934,-0.029357918,0.031447373,0.008152045,0.0058990205,0.030793099,-0.0019905237,0.014752828,-0.022055373,0.016504595,0.038264487,-0.012737242,0.006474149,0.011787488,0.028471481,-0.009307578,-0.051497713,0.019121692,-0.00584098,0.020936774,-0.027880523,-0.013328198,-0.04221124,-0.013718653,-0.03552076,-0.028809171,-0.005656306,-0.032819238,0.025938807,-0.005057434,0.034908693,-0.00014707979,0.0042844405,0.005614095,0.07036614,0.014932225,-0.0053924858,-0.015016648,0.0033742609,-0.0008547776,0.030877521,-0.012536738,-0.02032471,0.029379023,0.008901295,-0.028809171,0.007714104,0.032418232,-0.0085424995,0.007856566,-0.0015459866,0.036554933,0.022730753,0.037462473,0.0065955063,-0.0053370837,-0.019670438,-0.013845286,-0.013644783,0.011428693,0.015734239,-0.01122819,0.038602177,-0.028555904,-0.020556873,-0.005772387,-0.008294509,-0.027015192,0.016842285,0.012040756,-0.00846863,0.004986203,-0.0056088185,0.0036671015,-0.021422204,-0.011703066,0.00072088884,0.020672955,-0.008078176,-0.019026715,-0.0032608183,0.00233349,0.0439419,0.012610608,-0.00051247084,0.00833672,-0.012177942]},{"id":"minimum-stack","name":"Minimum Stack","description":"Design a stack class that supports the `push`, `pop`, `top`, and `getMin` operations.\n\n* `MinStack()` initializes the stack object.\n* `void push(int val)` pushes the element `val` onto the stack.\n* `void pop()` removes the element on the top of the stack.\n* `int top()` gets the top element of the stack.\n* `int getMin()` retrieves the minimum element in the stack.\n\nEach function should run in $O(1)$ time.\n\n**Example 1:**\n\n```java\nInput: [\"MinStack\", \"push\", 1, \"push\", 2, \"push\", 0, \"getMin\", \"pop\", \"top\", \"getMin\"]\n\nOutput: [null,null,null,null,0,null,2,1]\n\nExplanation:\nMinStack minStack = new MinStack();\nminStack.push(1);\nminStack.push(2);\nminStack.push(0);\nminStack.getMin(); // return 0\nminStack.pop();\nminStack.top();    // return 2\nminStack.getMin(); // return 1\n```\n\n**Constraints:**\n* `-2^31 <= val <= 2^31 - 1`.\n* `pop`, `top` and `getMin` will always be called on **non-empty** stacks.\n","difficulty":"Medium","concepts":["Stacks"],"solutions":{"python":"class MinStack:\n    def __init__(self):\n        self.stack = []\n        self.minStack = []\n\n    def push(self, val: int) -> None:\n        self.stack.append(val)\n        val = min(val, self.minStack[-1] if self.minStack else val)\n        self.minStack.append(val)\n\n    def pop(self) -> None:\n        self.stack.pop()\n        self.minStack.pop()\n\n    def top(self) -> int:\n        return self.stack[-1]\n\n    def getMin(self) -> int:\n        return self.minStack[-1]\n","javascript":"class MinStack {\n    constructor() {\n        this.stack = [];\n        this.minStack = [];\n    }\n\n    /**\n     * @param {number} val\n     * @return {void}\n     */\n    push(val) {\n        this.stack.push(val);\n        val = Math.min(\n            val,\n            this.minStack.length === 0\n                ? val\n                : this.minStack[this.minStack.length - 1],\n        );\n        this.minStack.push(val);\n    }\n\n    /**\n     * @return {void}\n     */\n    pop() {\n        this.stack.pop();\n        this.minStack.pop();\n    }\n\n    /**\n     * @return {number}\n     */\n    top() {\n        return this.stack[this.stack.length - 1];\n    }\n\n    /**\n     * @return {number}\n     */\n    getMin() {\n        return this.minStack[this.minStack.length - 1];\n    }\n}\n","cpp":"class MinStack {\nprivate:\n    std::stack<int> stack;\n    std::stack<int> minStack;\n\npublic:\n    MinStack() {}\n\n    void push(int val) {\n        stack.push(val);\n        val = std::min(val, minStack.empty() ? val : minStack.top());\n        minStack.push(val);\n    }\n\n    void pop() {\n        stack.pop();\n        minStack.pop();\n    }\n\n    int top() {\n        return stack.top();\n    }\n\n    int getMin() {\n        return minStack.top();\n    }\n};\n","java":"class MinStack {\n    \n    private Stack<Integer> stack;\n    private Stack<Integer> minStack;\n\n    public MinStack() {\n        stack = new Stack<>();\n        minStack = new Stack<>();\n    }\n\n    public void push(int val) {\n        stack.push(val);\n        val = Math.min(val, minStack.isEmpty() ? val : minStack.peek());\n        minStack.push(val);\n    }\n\n    public void pop() {\n        stack.pop();\n        minStack.pop();\n    }\n\n    public int top() {\n        return stack.peek();\n    }\n\n    public int getMin() {\n        return minStack.peek();\n    }\n}\n","csharp":"public class MinStack {\n    \n    private Stack<int> stack;\n    private Stack<int> minStack;\n\n    public MinStack() {\n        stack = new Stack<int>();\n        minStack = new Stack<int>();\n    }\n\n    public void Push(int val) {\n        stack.Push(val);\n        val = Math.Min(val, minStack.Count == 0 ? val : minStack.Peek());\n        minStack.Push(val);\n    }\n\n    public void Pop() {\n        stack.Pop();\n        minStack.Pop();\n    }\n\n    public int Top() {\n        return stack.Peek();\n    }\n\n    public int GetMin() {\n        return minStack.Peek();\n    }\n}\n"},"starterCode":{"python":"class MinStack:\n\n    def __init__(self):\n        \n\n    def push(self, val: int) -> None:\n        \n\n    def pop(self) -> None:\n        \n\n    def top(self) -> int:\n        \n\n    def getMin(self) -> int:\n        \n","javascript":"class MinStack {\n    constructor() {}\n\n    /**\n     * @param {number} val\n     * @return {void}\n     */\n    push(val) {}\n\n    /**\n     * @return {void}\n     */\n    pop() {}\n\n    /**\n     * @return {number}\n     */\n    top() {}\n\n    /**\n     * @return {number}\n     */\n    getMin() {}\n}\n","cpp":"class MinStack {\npublic:\n    MinStack() {\n        \n    }\n    \n    void push(int val) {\n        \n    }\n    \n    void pop() {\n        \n    }\n    \n    int top() {\n        \n    }\n    \n    int getMin() {\n        \n    }\n};\n","java":"class MinStack {\n\n    public MinStack() {\n        \n    }\n    \n    public void push(int val) {\n        \n    }\n    \n    public void pop() {\n        \n    }\n    \n    public int top() {\n        \n    }\n    \n    public int getMin() {\n        \n    }\n}\n","csharp":"public class MinStack {\n\n    public MinStack() {\n        \n    }\n    \n    public void Push(int val) {\n        \n    }\n    \n    public void Pop() {\n        \n    }\n    \n    public int Top() {\n        \n    }\n    \n    public int GetMin() {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/qkLl7nAwDPo","embedding":[-0.0022168695,-0.021792514,-0.024345351,-0.034307644,0.037835956,-0.0038474165,-0.024781201,0.027728379,-0.009583517,0.0051549673,0.011394371,-0.033103865,-0.013231169,-0.028268004,0.03762841,-0.025756676,-0.009189176,0.020951945,-0.00020900706,0.04632466,0.019831188,-0.01608495,0.030364236,0.022477422,0.08542665,0.0045297295,0.036403876,0.029886875,0.01175758,0.0093292715,0.038437843,-0.01338683,-0.009894839,0.05076618,-0.0046931733,-0.032668017,0.011612297,0.0070929443,0.061973758,0.021854779,-0.0091217235,-0.02720951,0.023722708,-0.013677397,0.05167939,0.001059142,0.005811337,0.016396273,0.02386799,0.07077378,0.0025346768,-0.04512088,-0.009002384,-0.013729284,0.0048981267,0.023639688,-0.010066066,-0.010875502,0.019841565,0.040368035,0.031630278,0.006101904,-0.038562372,0.071603976,0.024615163,0.028330268,0.004262512,-0.011176446,-0.025632147,0.014808532,-0.08314363,-0.02121138,-0.04333597,-0.012567016,-0.020754775,0.0005363812,-0.024490634,0.06616622,0.005915111,0.01938496,-0.018212315,-0.018015144,0.06766056,-0.012328336,-0.027417058,-0.03812652,-0.008333042,0.007591059,-0.016344385,-0.069445476,-0.022103835,-0.048400134,0.048607685,0.037317086,0.06546056,-0.0010935172,0.08413986,-0.0012893904,-0.052883167,-0.010164651,0.02173025,-0.0547511,0.0053651095,-0.024967995,-0.0024801956,-0.0025307853,-0.01453872,0.007902381,-0.07330587,0.026524602,-0.014144379,-0.024656672,0.0012141543,-0.01703967,-0.014860419,0.0020093217,-0.03320764,0.017413257,-0.023245348,-0.009666536,0.0058736014,-0.02451139,0.009542008,-0.026441583,-0.024718937,0.0030250084,0.0460756,-0.040845398,-0.051015235,-0.010636822,-0.032896318,-0.037192557,0.01751703,0.032834053,-0.0134387165,-0.03046801,-0.05533223,-0.004672419,0.022622705,-0.035324626,0.010481161,-0.0830191,-0.038707655,0.029492535,0.022851007,0.02355667,-0.019789677,0.08106815,-0.013334943,0.06097753,0.071188875,0.043751065,0.00865993,0.038458597,-0.0419454,-0.0053287884,0.019322695,-0.022539686,0.04341899,-0.051015235,0.015950045,-0.0124321105,-0.016655708,-0.05255109,0.0004828728,0.058362428,-0.0018809015,-0.006133036,-0.015524572,-0.037130293,0.04632466,-0.029783102,0.04358503,0.014590607,0.014611362,-0.0032818487,-0.09231724,0.0016954057,-0.022435911,-0.012577394,-0.031194426,-0.027417058,-0.027479323,-0.0073108696,-0.0321699,0.0002955934,-0.011705693,-0.040181246,0.005816526,0.01247362,0.020080244,0.0443322,-0.039620865,0.008561345,0.011269843,-0.031069899,0.007969834,-0.0016655707,0.024117049,-0.03246047,-0.0197793,0.035801988,-0.040202,0.036652934,0.023805726,-0.022934027,-0.055664305,0.032668017,0.01286796,-0.03383028,0.009905216,-0.031028388,-0.013770794,0.014134002,0.008161815,0.04024351,0.007253794,-0.04773598,0.032834053,0.030447254,0.009023138,0.04981146,0.01938496,0.0021325531,0.0051731276,-0.016676461,-0.001765453,-0.029284988,0.06637377,-0.000021626314,-0.012899092,-0.012338714,-0.025030259,0.019696282,0.005274307,0.0048799664,-0.05711714,0.00715002,0.05280015,-0.011311352,-0.013158527,-0.021626476,-0.045037862,-0.02538309,0.018067032,0.015576459,-0.016852878,-0.019675527,-0.024552898,0.024324596,0.011228333,-0.049603913,0.0115189,-0.011415126,-0.034577455,0.036486894,0.039911434,-0.03777369,0.033934057,0.0045894,-0.033913303,-0.009012761,-0.016832123,-0.017683068,-0.030322727,-0.06201527,0.0043766634,-0.03343594,-0.0012167487,0.061475642,-0.0053599207,0.0041794926,0.02994914,0.011871731,0.019623639,-0.0030353859,0.029658573,0.019457601,0.006262753,0.024884975,-0.029845366,0.02737555,0.008675496,0.037918974,0.033062357,0.0051419954,0.024532145,0.006708981,0.016437782,0.0030794898,0.011965128,0.023432141,0.013947208,-0.02613026,0.04316993,-0.0066726604,-0.028309513,0.01827458,0.018762317,-0.03474349,-0.010636822,-0.053796377,0.0006064286,0.010066066,-0.019727414,-0.055000152,0.023971764,-0.02224912,-0.043128423,0.03046801,-0.03468123,0.0057802047,0.019789677,-0.007502851,0.01080286,-0.012162298,-0.0033752453,0.01569061,-0.008431627,0.007689644,-0.035137832,0.007440587,0.06176621,-0.022269873,0.050226554,-0.027230265,0.0008905096,0.0022285439,0.013251924,-0.039060485,-0.02677366,-0.03669444,-0.01434155,0.013366075,-0.011145314,-0.01823307,0.034535944,0.05512468,-0.014839664,0.026441583,0.03246047,-0.01671797,-0.00022084378,0.014279285,-0.010346255,-0.022145346,0.02764536,0.0031209993,0.027935928,-0.031920843,0.020920813,-0.0028252436,0.036320858,-0.038064256,0.0038837374,0.016344385,0.00022019519,-0.014735891,0.009925971,0.027043471,0.0020975294,-0.0055467137,-0.043502007,-0.044622768,0.017932126,-0.020484963,-0.014165134,-0.06097753,-0.009780687,0.0052172313,0.004062747,0.022767989,0.019696282,0.00861842,0.008582099,-0.042339742,-0.013417962,0.058528464,0.04082464,0.013459472,-0.0113424845,0.002116987,0.0008963469,0.06948698,0.014632116,0.0035646325,0.043128423,0.0063250177,-0.023888746,0.018264202,0.006781623,-0.02729253,0.0038785485,0.056785066,0.056909595,0.019717036,-0.054086942,0.05163788,0.008322665,0.0367152,0.023784973,-0.0073471903,-0.0304265,-0.010782106,-0.02256044,-0.039101996,-0.0058009597,0.04024351,0.07384549,-0.06616622,0.03034348,-0.019623639,-0.002176657,0.00018079355,-0.033871792,-0.016199103,-0.0015073156,-0.012608525,0.025777431,0.015441553,0.017164199,0.01914628,0.008218891,0.0029809047,0.0304265,0.030966124,0.026109507,-0.0469473,0.027001962,0.006620773,0.041364267,-0.021875532,0.013853813,0.007523606,0.031671785,0.004000483,-0.021418927,0.06072847,0.042215213,-0.037400104,-0.02764536,0.006319829,0.025154788,-0.0010785997,0.01834722,-0.013449094,-0.005707563,-0.024594408,0.023660444,0.004690579,0.04051332,0.013044376,0.034785002,0.043502007,-0.031630278,-0.02125289,0.06276244,0.02594347,-0.0012024798,0.026275545,-0.013262301,0.0073575675,-0.058279406,0.056785066,-0.015234005,0.007814173,0.025362335,-0.010071254,0.02729253,0.010621256,0.032751035,0.0065481314,-0.014549097,0.0254246,-0.0010824912,-0.038873695,0.0035516608,-0.04146804,0.0040653413,-0.005279496,0.05080769,-0.043003894,0.019644395,-0.0239095,-0.009500498,0.034224626,-0.0027474132,0.011653806,0.009469366,-0.030011404,-0.03960011,0.025569882,0.038230296,-0.006449546,0.015732119,0.012058524,0.014756645,-0.018399108,-0.061641682,0.0053287884,0.04620013,-0.022415157,-0.03538689,-0.00988965,0.032377448,-0.016271744,-0.02093119,0.015586836,0.048317116,-0.020111376,-0.0048358627,-0.04976995,-0.034141604,0.0021351476,-0.003253311,0.032003865,0.029201968,0.012317959,-0.023577424,0.023286857,-0.015275515,-0.015752874,0.003305198,-0.0328133,-0.037877463,-0.010304746,-0.026981207,-0.0069061513,0.0012563125,-0.032273676,-0.05358883,-0.013812303,-0.016271744,0.022415157,-0.029845366,0.013002867,0.009038704,0.03202462,0.012286827,-0.02855857,0.024179313,0.03893596,0.0032740657,0.009863707,-0.015254759,0.017309483,0.003305198,0.043709558,0.0058684126,0.009801443,0.0030976501,0.013241546,0.012317959,-0.020713266,-0.009884462,-0.0044311443,-0.03150575,0.0071863406,0.026420828,0.000095747615,0.0077674747,-0.018243447,0.024303842,0.0030276028,-0.010709464,-0.029201968,-0.018046277,0.022477422,0.00092618185,-0.028952911,0.016614197,0.004594588,-0.016634952,-0.052302033,0.019281186,0.0041327947,-0.009199554,-0.016261365,0.007694833,-0.0055155815,-0.00035445264,-0.0047969474,-0.021875532,-0.03852086,-0.012826451,0.038188785,-0.029181214,0.010616068,0.020547228,0.032315183,-0.0030691123,-0.011093427,0.019997226,-0.005723129,-0.0077467198,-0.012359468,-0.02613026,0.010341067,-0.017008537,0.022456666,-0.016240612,0.035885006,0.008556156,0.023100065,-0.022083081,0.00088142935,0.0082396455,0.012276449,-0.008483514,0.028454797,-0.017620804,0.00242312,0.0032636884,0.0032481223,0.012110411,-0.02633781,0.011072673,-0.009054271,-0.00901795,-0.0112179555,-0.0123075815,0.0042080306,-0.00083927123,0.009261819,-0.010356633,-0.04316993,-0.009619839,-0.017880239,0.0153689105,0.0075339833,-0.014611362,0.0028434042,-0.025901958,-0.010273614,-0.007876437,-0.018015144,-0.0056712423,-0.0034504812,-0.0041094455,-0.028226495,0.032003865,0.00897644,-0.031069899,-0.014196266,0.015784007,-0.005116052,-0.026151016,0.037005764,-0.02534158,0.0047009564,-0.015794383,0.013718906,0.038500108,-0.039371807,-0.011031163,0.022269873,-0.047486924,-0.02295478,0.019322695,0.0037799634,0.0048877494,0.02768687,0.018326467,0.018886846,0.0070410576,-0.021896288,-0.004503786,0.010782106,0.077000216,-0.015804762,-0.041052945,-0.035490666,0.025798185,0.0050615706,-0.021834023,0.012691545,0.0021507135,0.023017045,-0.013085886,0.019405715,0.048441645,0.014113247,-0.030364236,0.014424569,-0.041717097,-0.01601231,0.0083641745,0.020785907,0.00953163,-0.030779332,0.0077467198,-0.00014828314,0.0012167487,-0.024635918,-0.0020625058,0.0063820933,-0.0074769077,0.018731184,-0.006262753,-0.029471781,0.01862741,0.001742104,0.015036834,0.0037721803,-0.049562402,0.017589672,-0.022996292,0.02776989,-0.024781201,0.04437371,-0.0154934395,-0.02164723,-0.035594437,-0.0045375125,-0.041281246,-0.014756645,-0.017257595,-0.01727835,-0.00017787491,0.017340615,-0.029098194,0.033685,0.0058736014,-0.008089174,-0.04524541,-0.017683068,0.01290947,0.01823307,-0.036486894,-0.0001754427,-0.0002271675,0.005915111,0.00028618888,0.018814204,-0.011456636,-0.026379319,-0.03241896,-0.0034971796,-0.023307612,-0.024220822,-0.027334038,0.021460438,0.021055719,0.017413257,-0.01608495,0.016105706,-0.036756705,0.028475551,-0.026462339,-0.017817974,-0.03181707,0.003209207,0.014424569,0.024407616,0.05076618,0.01664533,-0.0018575523,-0.03225292,-0.0060500167,-0.009583517,-0.0073731337,-0.0021442277,-0.030364236,-0.010278802,-0.0001632817,-0.027956681,-0.025279315,0.02442837,0.010216538,0.04163408,0.026628377,-0.032481223,0.043751065,0.03347745,-0.053132225,0.018824581,0.014767023,-0.060603943,-0.03383028,-0.019052884,-0.004031615,0.019893453,0.03746237,-0.022851007,0.021149116,0.026918944,0.01616797,0.02133591,0.02386799,-0.044456728,-0.019052884,-0.024926485,-0.04063785,-0.017361369,-0.014040605,-0.032439712,-0.005012278,-0.029845366,0.013179282,-0.00988965,-0.0076118135,0.028288757,0.011830222,-0.015981177,-0.017444389,-0.004771004,-0.004859212,-0.042962383,0.050475612,-0.008322665,-0.005821714,0.017620804,-0.024781201,0.019042507,0.013283056,0.003403783,-0.006625962,0.0033467074,0.009671725,0.02482271,0.0074613416,0.025071768,-0.010813238,0.0074302093,0.024449125,-0.024988748,0.020246282,0.004874778,0.006703792,0.015680233,0.01680099,-0.014953815,0.023411386,0.045369938,0.009318894,0.021834023,0.0012044256,-0.019021751,0.0067712455,0.035490666,-0.004874778,0.024635918,0.032668017,-0.053630337,0.019634018,-0.014673626,0.0075806817,0.011570787,0.012266072,-0.00006266969,0.042713325,0.030073669,0.009557574,-0.01084437,0.0010597907,0.027271774,0.037939727,0.010512293,0.01338683,0.016956652,0.054709587,0.028330268,-0.0056712423,0.03698501,-0.023722708,-0.0026527196,-0.014434946,0.0035360947,-0.009194366,-0.00023138331,0.009640593,0.027811399,-0.01076135,-0.0059618093,-0.0049863346,-0.0025774837,-0.016811367,0.02613026,-0.024926485,0.023328368,0.010154273,0.016199103,-0.013791548,-0.0024347946,0.0049110986,0.0003661272,0.0060500167,0.019768924,0.03252273,-0.012567016,0.011913241,-0.0015540138,-0.0072019068,-0.032709524,-0.011944373,0.019768924,0.03329066,-0.0045530787,0.026898189,0.040575586,0.0070254914,-0.019405715,0.013303811,0.028579324,0.00953163,-0.010989653,-0.004210625,0.04186238,0.022415157,-0.05267562,-0.0005123835,-0.0410737,-0.017724577,0.002168874,-0.0060344506,0.00034018373,0.029388761,0.009848141,0.063260555,-0.0041950587,-0.024656672,-0.081939854,-0.02911895,0.037317086,0.04449824,-0.025486864,-0.0591096,0.0591096,0.05927564,-0.010403331,0.03407934,0.01660382,-0.0033155752,-0.0008451085,-0.02494724,-0.02737555,-0.027707625,-0.0040809074,-0.036383122,-0.0060759606,-0.0040964736,-0.025466109,-0.0021559023,0.009708046,-0.0093292715,0.013293433,0.04206993,-0.022435911,0.029783102,0.02395101,-0.012587771,-0.0070721894,-0.005235392,0.0111349365,0.017392501,0.0065792636,-0.028143475,-0.032439712,0.031318955,0.022498176,-0.012120789,-0.043502007,0.0034530757,0.017267972,-0.0050019007,-0.032896318,0.0064910557,0.007502851,0.025901958,0.023120819,0.013334943,-0.026669886,0.021875532,0.022892516,-0.027500076,-0.034224626,0.03617557,-0.0054325624,-0.01108305,0.019540621,0.006423603,0.037960485,0.0020326707,-0.013729284,-0.0029030743,-0.0072953035,-0.029284988,0.009635405,-0.011145314,0.014767023,0.0076118135,0.034100097,0.01664533,-0.013314188,0.009401913,-0.0019029534,-0.02451139,0.027022718,0.024013275,-0.024926485,-0.008026909,-0.020609492,-0.032709524,-0.011487768,0.057781294,-0.044954844,0.0037877464,0.0019379772,-0.03364349,0.04864919,-0.010647199,-0.016676461,-0.03642463,0.004091285,-0.0075806817,-0.0047528436,0.02224912,-0.020401943,-0.020474585,-0.04968693,-0.011041541,-0.05072467,0.0038759543,-0.034058586,0.005212043,-0.014798154,0.020339679,0.013251924,0.025984978,0.024283087,-0.0025671062,-0.011000031,-0.030239707,0.0056504873,-0.00993116,0.029409517,0.018596279,-0.031879336,0.009920782,0.0022376243,0.0115500325,-0.029326497,0.028434042,0.003948596,-0.010418897,0.0026903376,-0.027666114,-0.0019392743,0.018523637,0.036237836,-0.017942503,0.040658604,-0.0012031284,-0.018502882,-0.009718424,-0.01997647,-0.0038136898,0.035532176,-0.0072226617,0.019052884,0.0035698214,-0.042796347,-0.009407102,0.000041185256,0.020308547,-0.023888746,0.037275575,-0.01763118,-0.0154934395,-0.037752934,-0.013667019,0.017620804,0.03190009,0.016136838,-0.029866122,-0.010854747,-0.033871792,-0.011155692,-0.017475521,0.024532145,-0.0058372803,0.0035879817,-0.0100505,-0.023764217,0.015441553,0.021315154,-0.010413708,-0.03746237,0.0018757128,-0.019706659,-0.013500981,0.023307612,0.008649552,0.026566112,0.011840599,-0.00260213,0.010081632,-0.012556639,-0.0029679327,0.015420798,0.020599114,0.015794383,-0.013843435,-0.031360466,-0.022913272,-0.039392564,0.026441583,0.003971945,0.027043471,-0.01712269,0.001346466,0.0057335068,0.011031163,0.022684969,-0.03181707,-0.023764217,0.007238228,-0.022809498,-0.026981207,-0.018689675,0.021107607,-0.049147308,-0.024490634,0.018523637,-0.0328133,-0.010512293,0.01056418,-0.026400074,0.018378353,0.016697217,-0.019353827,-0.00103255,-0.03086235,-0.040700115,-0.0053339773,-0.00949531,-0.0042080306,0.010927389,-0.027541587,-0.021501947,0.00013393315,-0.03798124,0.022726478,-0.0024996533,-0.029658573,0.033871792,-0.012421733,0.047694474,0.010232104,-0.030800086,0.024864221,0.053630337,0.046864282,-0.00066544994,-0.024220822,0.018243447,-0.02860008,-0.0025411628,0.005551902,-0.008535401,-0.01612646,-0.012598149,-0.018461373,0.009656159,0.02776989,0.00009834196,-0.023930255,0.03293783,0.023639688,-0.00031796965,-0.0003202397,-0.031235937,-0.008447194,-0.025403844,0.006978793,-0.016219856,-0.007170775,0.017091557,-0.023743462,-0.01024767,0.03538689,-0.030011404,-0.021086851,-0.008047664,0.014559475,-0.017672691,0.049562402,-0.030073669,0.030073669,0.036964253,-0.013791548,0.012100033,-0.019042507,0.020682134,-0.021709494,0.011103804,0.0064028483,0.03241896,0.023743462,0.002220761,-0.0046620416,-0.024262331,-0.0144453235,0.010730219,0.0087221945,0.0023115631,-0.020765152,-0.017392501,-0.011020785,0.0013957586,0.03385104,0.01927081,0.0057179406,-0.0015138014,-0.0036087364,-0.015794383,0.013168905,-0.012961357,0.0060915262,-0.0080320975,-0.010221726,-0.004246946,0.019426469,-0.030883105,-0.024926485,-0.017008537,0.019623639,0.037317086,-0.0026721773,-0.043668047,-0.006708981,-0.0056297327,0.020370811,0.03385104,0.008296722,0.01616797,-0.014248153,-0.0018056654,0.018845337,-0.011830222,-0.010413708,-0.009132101,-0.0004582265,-0.009619839,0.04215295,-0.0134802265,0.027583096,0.026296299,0.02125289,0.01632363,-0.029866122,-0.022207608,0.0063042627,0.004755438,-0.011570787,-0.00028391884,-0.023681197,0.06450584,0.03173405,0.03686048,0.007834927,-0.010382576,-0.023535915,-0.010688709,0.013013244,-0.008483514,-0.025258562,0.048317116,-0.024158558,0.049271837,0.012826451,-0.026151016,0.05549827,-0.005676431,0.023701953,-0.0039148694,-0.0035360947,-0.052177504,-0.010548614,0.020028358,0.022767989,0.012961357,0.0064651123,-0.00611747,0.030903859,-0.009261819,0.014466078,0.019893453,0.002355667,-0.029534046,-0.016863255,-0.001503424,0.042443514,-0.009842952,0.045618996,-0.0094122905,0.0077311536,-0.015950045,-0.038105767,0.0074820966,0.038043503,-0.0039978884,-0.011155692,-0.02808121,-0.012660413,0.026607621,-0.015119853,-0.014486833,0.0113424845,0.029928386,0.0035335005,0.03181707,0.0066519054,-0.011103804,0.014715135,0.035013307,-0.0020923407,-0.023847237,-0.0121830525,0.002205195,0.00006956093,0.033685,-0.03789822,-0.00082175934,-0.010574558,-0.007217473,0.0028511873,-0.029928386,0.017413257,0.022747234,-0.022996292,0.0040419926,-0.020526472,-0.026524602,-0.006703792,0.023888746,-0.0047761924,-0.0123906005,0.014185889,0.008898609,-0.006859453,-0.033705756,-0.003785152,-0.010579746,-0.014943438,0.030613294,0.04889825,0.015566081,-0.031235937,-0.0019107364,-0.00010482783,0.01827458,0.015908536,0.030779332,-0.003320764,0.01815005,-0.010034934,0.008561345,-0.007425021,-0.010750974,0.021418927,0.039475583,0.031215182,-0.008322665,-0.0197793,-0.0074665304,-0.0016772453,-0.0063976594,-0.02386799,0.012286827,0.037026517,-0.004441522,-0.013127395,-0.0000063794582,-0.0011233522,0.03507557,-0.041364267,0.016458537,-0.0073835114,0.0011700505,0.011684938,-0.02573592,-0.040845398,0.028828382,0.016551932,-0.015856648,-0.0011077861,0.004695768,0.028662344,0.011850976,-0.025901958,-0.010263236,0.02812272,-0.0029497724,0.017932126,0.01247362,0.02613026,0.03468123,0.010060878,0.016967028,0.012784941,0.030198198,-0.03447368,-0.024013275,0.021917043,0.0393303,-0.023743462,-0.0029342063,-0.0123075815,-0.01934345,0.006013696,-0.019571753,0.00071409397,-0.047569945,0.045992583,-0.00031407812,0.0031080276,-0.049479384,0.0043688803,-0.01688401,-0.016676461,-0.06425678,0.014839664,0.007523606,-0.009894839,0.0020521283,-0.010584936,0.034535944,-0.020547228,-0.050351083,-0.011788712,-0.033394434,0.025445353,0.0028382156,-0.00063658785,0.024034029,-0.015327401,0.0591096,-0.006459924,-0.0018705241,0.020028358,0.019499112,-0.025964223,0.003268877,-0.008286344,-0.02160572,-0.0045504845,-0.020101,-0.019229298,0.029720837,-0.04449824,0.013864189,-0.042754836,0.008213703,0.0023050772,-0.02621328,-0.007622191,-0.004397418,-0.002242813,-0.0159708,-0.018658543,-0.0016253584,-0.017963259,0.009355214,0.0053339773,-0.010750974,0.04408314,0.053837888,-0.016987784,-0.0030483576,0.04798504,-0.031173673,-0.027001962,-0.017267972,0.0052613355,0.008908987,0.012878338,0.021315154,-0.0031910466,0.018201938,-0.006262753,0.01751703,0.016313253,0.031837825,0.019872697,-0.007336813,-0.01024767,0.013708529,0.0011038946,0.019530242,0.02851706,0.029368006,0.024656672,0.0077207764,0.026379319,-0.0005642704,0.00854059,-0.008665118,-0.008654742,0.015898157,-0.03385104,-0.006781623,0.013646265,0.0591096,0.0008250023,-0.021221757,-0.021709494,-0.042796347,-0.0221661,-0.032751035,-0.010719841,-0.0071085105,0.013324565,-0.026918944,0.014715135,-0.01362551,0.011352862,-0.013324565,0.011788712,-0.007975022,0.011653806,-0.018565146,0.031069899,-0.009427857,0.0143623045,0.029368006,0.04358503,0.05993979,-0.024635918,0.00814106,-0.011871731,-0.026379319,0.042879365,-0.013812303,0.01692552,0.008068419]},{"id":"evaluate-reverse-polish-notation","name":"Evaluate Reverse Polish Notation","description":"You are given an array of strings `tokens` that represents a **valid** arithmetic expression in [Reverse Polish Notation](https://en.wikipedia.org/wiki/Reverse_Polish_notation).\n\nReturn the integer that represents the evaluation of the expression.\n\n* The operands may be integers or the results of other operations.\n* The operators include `'+'`, `'-'`, `'*'`, and `'/'`.\n* Assume that division between integers always truncates toward zero.\n\n**Example 1:**\n\n```java\nInput: tokens = [\"1\",\"2\",\"+\",\"3\",\"*\",\"4\",\"-\"]\n\nOutput: 5\n\nExplanation: ((1 + 2) * 3) - 4 = 5\n```\n\n**Constraints:**\n* `1 <= tokens.length <= 1000`.\n* tokens[i] is `\"+\"`, `\"-\"`, `\"*\"`, or `\"/\"`, or a string representing an integer in the range `[-100, 100]`.\n","difficulty":"Medium","concepts":["Stacks"],"solutions":{"python":"class Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stack = []\n        for c in tokens:\n            if c == \"+\":\n                stack.append(stack.pop() + stack.pop())\n            elif c == \"-\":\n                a, b = stack.pop(), stack.pop()\n                stack.append(b - a)\n            elif c == \"*\":\n                stack.append(stack.pop() * stack.pop())\n            elif c == \"/\":\n                a, b = stack.pop(), stack.pop()\n                stack.append(int(float(b) / a))\n            else:\n                stack.append(int(c))\n        return stack[0]\n","javascript":"class Solution {\n    /**\n     * @param {string[]} tokens\n     * @return {number}\n     */\n    evalRPN(tokens) {\n        const stack = [];\n        for (const c of tokens) {\n            if (c === '+') {\n                stack.push(stack.pop() + stack.pop());\n            } else if (c === '-') {\n                const a = stack.pop();\n                const b = stack.pop();\n                stack.push(b - a);\n            } else if (c === '*') {\n                stack.push(stack.pop() * stack.pop());\n            } else if (c === '/') {\n                const a = stack.pop();\n                const b = stack.pop();\n                stack.push(Math.trunc(b / a));\n            } else {\n                stack.push(parseInt(c));\n            }\n        }\n        return stack.pop();\n    }\n}\n","cpp":"class Solution {\npublic:\n    int evalRPN(vector<string>& tokens) {\n        stack<int> stack;\n        for (const string& c : tokens) {\n            if (c == \"+\") {\n                int a = stack.top(); stack.pop();\n                int b = stack.top(); stack.pop();\n                stack.push(b + a);\n            } else if (c == \"-\") {\n                int a = stack.top(); stack.pop();\n                int b = stack.top(); stack.pop();\n                stack.push(b - a);\n            } else if (c == \"*\") {\n                int a = stack.top(); stack.pop();\n                int b = stack.top(); stack.pop();\n                stack.push(b * a);\n            } else if (c == \"/\") {\n                int a = stack.top(); stack.pop();\n                int b = stack.top(); stack.pop();\n                stack.push(static_cast<int>(static_cast<double>(b) / a));\n            } else {\n                stack.push(stoi(c));\n            }\n        }\n        return stack.top();\n    }\n};\n","java":"class Solution {\n    public int evalRPN(String[] tokens) {\n        Stack<Integer> stack = new Stack<>();\n        for (String c : tokens) {\n            if (c.equals(\"+\")) {\n                stack.push(stack.pop() + stack.pop());\n            } else if (c.equals(\"-\")) {\n                int a = stack.pop();\n                int b = stack.pop();\n                stack.push(b - a);\n            } else if (c.equals(\"*\")) {\n                stack.push(stack.pop() * stack.pop());\n            } else if (c.equals(\"/\")) {\n                int a = stack.pop();\n                int b = stack.pop();\n                stack.push((int) ((double) b / a));\n            } else {\n                stack.push(Integer.parseInt(c));\n            }\n        }\n        return stack.pop();\n    }\n}\n","csharp":"public class Solution {\n    public int EvalRPN(string[] tokens) {\n        Stack<int> stack = new Stack<int>();\n        foreach (string c in tokens) {\n            if (c == \"+\") {\n                stack.Push(stack.Pop() + stack.Pop());\n            } else if (c == \"-\") {\n                int a = stack.Pop();\n                int b = stack.Pop();\n                stack.Push(b - a);\n            } else if (c == \"*\") {\n                stack.Push(stack.Pop() * stack.Pop());\n            } else if (c == \"/\") {\n                int a = stack.Pop();\n                int b = stack.Pop();\n                stack.Push((int) ((double) b / a));\n            } else {\n                stack.Push(int.Parse(c));\n            }\n        }\n        return stack.Pop();\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {string[]} tokens\n     * @return {number}\n     */\n    evalRPN(tokens) {}\n}\n","cpp":"class Solution {\npublic:\n    int evalRPN(vector<string>& tokens) {\n        \n    }\n};\n","java":"class Solution {\n    public int evalRPN(String[] tokens) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int EvalRPN(string[] tokens) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/iu0082c4HDE","embedding":[-0.011833459,0.0110024875,0.009082837,-0.05242485,0.053855386,-0.0010025569,-0.020648072,0.04346298,0.017850116,0.035510894,-0.01343229,-0.031829376,-0.033659615,-0.0070422227,0.014631415,-0.03793018,-0.011149748,-0.025581308,-0.043757502,0.026843544,0.016030392,-0.038729597,0.06294348,-0.06744546,0.09710799,-0.012937915,0.025328862,0.050868094,0.0042258594,-0.0035105927,0.014505191,-0.018081525,0.00028235948,-0.02035355,-0.016745659,-0.026822507,-0.03309161,0.016787734,-0.0036815205,-0.011412714,-0.0027611405,-0.017492482,-0.050489426,0.02318306,0.018996647,-0.0073209666,0.018249823,0.0075576357,0.017545074,0.01697707,-0.03631031,-0.007999418,0.011065599,0.018565383,0.009803363,-0.027453624,-0.0010617243,-0.012043832,-0.0060166563,0.02211016,0.06395327,-0.020942593,-0.003723595,-0.022446757,-0.0072736326,0.02619139,-0.0136531815,0.016556324,-0.03109307,-0.018859904,-0.016261803,-0.0006692478,0.014221188,-0.004391528,0.0017092774,0.0351743,0.03546882,0.030209506,0.02096363,-0.032733977,0.013937185,-0.05082602,0.014463116,-0.05797869,0.054991398,-0.029368015,-0.053813312,-0.07072727,0.0014660341,-0.06079768,-0.046576492,-0.019543614,0.010960412,0.053813312,0.018197231,-0.02595998,-0.014936455,0.019491022,0.023624843,0.025749607,-0.011833459,-0.011254935,0.0153572,0.023477582,0.010460777,0.020132657,0.052551076,0.055243846,-0.044641066,-0.028463414,-0.010897301,0.07190535,-0.05082602,-0.049479637,0.019764505,-0.028232003,-0.060461085,-0.024319073,0.00814142,-0.0009683714,-0.01605143,-0.03056714,-0.01343229,-0.025707532,-0.025244713,-0.015704315,0.042558376,-0.011570493,0.066603966,-0.02034303,-0.028673785,-0.035216372,0.033512354,-0.007894232,0.0012714394,-0.060250714,0.025518196,0.023351358,0.01818671,0.03725699,0.02051133,-0.0018276119,-0.031114107,-0.022467794,-0.048259474,-0.02610724,-0.05175166,0.01851279,-0.0878516,0.004086488,0.018575901,0.020995185,-0.0037367432,0.006674071,-0.028926233,-0.101063,-0.035363633,0.008314977,0.016366988,-0.0213423,-0.018817829,0.006395327,0.0025060636,-0.008225569,0.0011458732,0.011328565,-0.015935725,0.018607456,-0.017271591,-0.03401725,-0.012790654,-0.054696877,-0.016451137,-0.01583054,-0.033449244,-0.014873343,-0.052088257,-0.011381158,-0.067529604,-0.0040838583,-0.07472435,-0.028926233,-0.03540571,-0.022152236,0.040118054,0.003594742,-0.013327104,-0.021026742,-0.026086202,-0.030314691,0.04846985,0.041695848,0.054023683,0.021447487,-0.01935428,-0.0034737776,0.00071592425,0.015514979,-0.032607753,0.016577361,-0.005690579,-0.010949894,0.0063690306,0.0074734865,0.050783947,-0.014484154,-0.010318776,0.017797522,0.040286355,-0.019953841,0.035216372,-0.031997673,0.04792288,-0.027727108,-0.0030056986,0.054318205,0.028800009,-0.0026927693,0.057852466,0.007894232,-0.007578673,0.02379314,-0.0045098625,-0.015641203,0.019028202,0.037824992,0.0087515,0.03140863,0.021331782,-0.02457152,-0.019133389,0.037888106,-0.011391676,-0.00014553512,0.016398543,0.027390514,-0.026675247,-0.028673785,-0.022425719,-0.012580282,-0.014400004,0.008236087,0.029557351,-0.024276998,0.023435507,-0.0058536176,0.0013963481,-0.002747992,0.011391676,-0.006942296,0.023561731,-0.0049647936,-0.027727108,-0.0083780885,-0.022720242,0.039129306,-0.0047570504,-0.03033573,-0.004317898,0.017103292,-0.0029531054,0.052004106,-0.033680655,-0.053855386,0.005198833,-0.059072625,-0.062354438,0.017366258,-0.008867205,-0.025518196,0.038876858,0.0072946697,0.012170055,0.026990805,-0.008341273,-0.0048806444,0.059072625,-0.029578388,-0.016903438,-0.022594018,-0.08427527,-0.0063374746,0.09382618,0.020027472,0.007594451,-0.020300956,0.08414904,-0.006942296,0.0040023387,-0.020237844,-0.003087218,-0.011665161,0.061765395,-0.023204098,0.023498619,-0.013116731,-0.0035500377,-0.0059219887,0.03753047,-0.053182192,0.007873194,0.004023376,0.009209061,-0.03717284,-0.0030924773,-0.007110594,-0.0060482123,0.00975603,-0.0382247,0.025749607,-0.01590417,-0.0037367432,0.033912063,0.022278458,0.0109078195,-0.038119517,-0.0081309015,-0.031282406,0.035952676,-0.021321263,0.021605266,0.00026756767,0.04098058,0.032670867,0.04308431,-0.022089124,-0.008777797,0.017765965,-0.0037604102,0.0012411984,-0.042411115,-0.035153262,-0.018333972,0.035574008,-0.07203158,-0.010991968,-0.023877291,-0.020364068,0.008083567,0.061386727,0.04636612,-0.029494239,0.04262149,0.009009207,-0.012864284,0.035889566,0.04430447,-0.01005581,0.0439258,0.036646906,0.013011546,0.01589365,0.04653442,-0.021647342,0.004796495,-0.027979556,-0.021689415,0.01835501,-0.02810578,0.008125641,-0.019480502,-0.0010834188,-0.0021931343,0.009719214,-0.027706072,0.018817829,0.033491317,-0.01343229,-0.04308431,-0.024676707,0.016693067,0.014389486,0.044094097,-0.006610959,0.010250405,-0.025455086,-0.018249823,0.05027905,-0.020921554,-0.026254501,-0.035300523,0.008935576,-0.031008922,-0.013768887,-0.017019143,0.024024552,0.024950191,-0.05768417,-0.012254204,-0.047333837,0.012201611,-0.0382247,0.018060489,0.0015869983,0.042558376,0.009508842,-0.001321403,0.060208637,-0.008309718,0.021100372,-0.015578091,0.02686458,-0.010960412,0.0088777235,-0.0048254216,0.0126854675,0.008719944,0.036247198,0.04178,0.036057863,-0.024697743,-0.06517343,0.021216078,-0.014126521,0.008330755,-0.026464874,0.022362608,-0.013106213,0.007494524,0.03702558,-0.037151802,0.020542884,0.00096574175,-0.056169484,0.0008375459,-0.025560271,-0.002218116,-0.012022794,-0.018870423,0.036205124,0.056548156,-0.008851428,0.0024482112,-0.0026848803,-0.011549456,0.07872143,-0.0036894095,0.07762749,0.022551943,-0.021794602,0.0011609938,0.0128748035,0.0023824698,-0.028063705,-0.042179707,-0.031282406,-0.02619139,-0.015609647,0.0065688845,0.037151802,0.041043695,-0.011791385,0.019859174,0.010013736,-0.04083332,-0.03572127,0.08137212,0.00914069,0.02379314,0.019796062,0.0059851008,-0.015493942,-0.02941009,-0.05305597,0.0213423,-0.056295708,-0.03386999,0.0050463127,-0.012948434,-0.021121409,0.0024968598,0.0053487234,-0.017765965,0.011107673,-0.0147155635,0.00491483,0.014831268,0.026843544,-0.014105483,-0.011928126,0.031576928,-0.048301548,-0.010897301,-0.018197231,0.010118922,0.035447784,-0.011728273,-0.010355592,-0.026612135,0.014231707,0.050489426,0.004959534,-0.020953111,-0.007189484,0.032586716,0.014736601,0.006042953,-0.0103766285,-0.0044704177,-0.013400734,0.009403655,-0.029683575,-0.028926233,0.011559974,0.0093773585,0.033428207,0.0011458732,-0.006158658,-0.016934995,0.016272321,-0.024150774,-0.032691903,-0.032607753,0.0036683723,-0.01920702,-0.012043832,-0.00264938,-0.045903303,-0.013116731,-0.038140554,0.041506514,-0.00691074,0.036499646,0.0071053347,-0.020006435,-0.05044735,-0.0015252014,-0.006942296,-0.04708139,-0.023687955,-0.011791385,0.0010807893,0.019775024,0.04055984,-0.005979841,0.012937915,-0.01244354,0.029809797,0.0014634044,0.021300226,0.0020090584,0.025539234,-0.009172246,-0.0137478495,-0.004359972,-0.0052409074,0.03902412,0.020837406,0.0015869983,-0.009145949,0.015925206,-0.034690443,-0.020847924,-0.034900814,-0.024508407,-0.06475269,0.022278458,0.0153572,0.016566843,0.020995185,-0.012569763,-0.020847924,0.0050016087,-0.015188902,-0.02648591,0.026801469,0.00053513533,0.015083715,0.014147557,0.004060191,-0.0025126378,-0.016104022,-0.0066319965,-0.005104165,0.00998218,-0.026128277,-0.003339665,-0.0065162913,0.008556905,-0.0008546387,0.020101102,-0.014557784,-0.030819586,-0.029957058,-0.021710452,-0.01958569,0.0148102315,-0.024908116,0.004935867,-0.03706765,0.030504027,0.03422762,0.02741155,0.021384375,-0.020385105,0.00007802687,-0.028989345,-0.0026953989,-0.009798104,-0.01796582,0.028631711,0.011339083,0.020868963,0.06849732,-0.013421772,0.020216808,-0.023288246,0.022678167,-0.02726429,0.008509572,0.00107553,-0.032607753,-0.014463116,0.0068686656,-0.028673785,-0.0028847342,0.00437575,0.03717284,-0.004099636,0.0018631123,-0.015031123,-0.0008020456,0.029830836,-0.008562165,0.006495254,0.010886782,-0.01351644,0.042558376,0.004031265,0.027011842,-0.012369909,0.03862441,-0.0147786755,-0.0013779405,-0.006979111,0.032187007,0.019385835,-0.046239898,-0.006705627,-0.046744794,0.042642526,-0.021605266,0.001796056,-0.018796792,-0.028232003,0.038203664,-0.013327104,0.015798982,-0.005098906,-0.027432587,-0.026675247,-0.0022864873,0.01543083,-0.0136531815,0.0033002202,-0.031072034,-0.023856252,-0.02595998,-0.0048175324,-0.024508407,-0.0015081086,-0.005795765,-0.011423232,0.019690875,0.024213886,0.02503434,0.03361754,0.015346682,0.039886646,-0.010250405,-0.06538381,0.014852306,0.005012127,-0.020563921,0.024823967,-0.001481812,-0.0023088392,-0.0049858307,-0.02564442,0.025097452,0.0068371096,-0.014147557,-0.046029527,-0.0015646463,-0.026443835,0.0024284888,-0.0058956924,-0.021878751,-0.028505487,0.020974148,0.0001965669,-0.015599129,-0.00093944516,-0.014799712,-0.008236087,-0.00345537,0.023246173,0.027117029,0.0251816,-0.0483857,0.041401327,-0.0011577067,-0.016093504,-0.0034264438,-0.051246766,0.00073696155,0.004407306,-0.03094581,-0.0008184809,0.011328565,-0.016650992,-0.0056327265,-0.028968308,0.017545074,-0.038393,0.02541301,0.01896509,0.005027905,0.016956031,-0.0038866338,-0.012464576,0.032397382,-0.038203664,-0.0028899936,-0.013937185,-0.0128432475,-0.019133389,0.0030346247,-0.0022352089,0.022383645,-0.005038424,-0.02234157,-0.0037525212,-0.02434011,0.008840908,-0.023309285,-0.007925788,-0.009608769,0.00936684,-0.05305597,-0.0028689564,-0.030356767,-0.0127801355,-0.000840833,0.004028635,0.0505315,-0.0036683723,0.036878318,-0.049016815,-0.023498619,-0.056842677,0.003323887,0.051962033,0.0026625283,0.036899354,0.021247633,-0.0095035825,-0.014831268,-0.013232437,-0.012475096,0.00071592425,-0.005574874,0.006979111,-0.020216808,0.05743172,0.00003381575,-0.019375317,0.020753257,0.0089723915,0.035742305,-0.0109078195,-0.006915999,0.02150008,-0.0053092786,0.04102266,-0.033975177,-0.012085906,-0.03702558,-0.010618557,0.010523889,-0.045356333,-0.00049963495,0.0060955463,0.002533675,0.034206584,0.051541287,0.014421042,0.0011531048,0.02816889,-0.04943756,-0.034522142,0.014189632,-0.020932075,-0.04653442,0.024234924,0.010402925,-0.0118124215,-0.02373003,0.023982476,-0.047249686,0.009561434,0.012759098,0.025560271,-0.01512579,-0.009046022,-0.059703745,0.00016098435,0.06395327,0.024171812,-0.016987588,-0.01189657,0.01589365,-0.04443069,0.016261803,0.020006435,0.029073494,-0.032271158,-0.014105483,-0.0076891184,0.008188753,0.032271158,-0.011360121,0.044052023,0.002688825,0.028673785,-0.021310745,0.0012188463,-0.0007349893,0.0159778,0.04653442,-0.02480293,0.016577361,-0.04085436,0.02595998,0.012643393,0.0147155635,0.03347028,0.03986561,-0.0137794055,0.024403222,-0.008925058,0.04201141,-0.0119702015,-0.04468314,-0.016272321,0.035742305,0.029136606,-0.017250553,0.0028505488,-0.012275241,-0.020774294,-0.021794602,0.060839757,0.006411105,-0.012674949,0.033049535,0.0025704901,-0.0073157074,0.024045588,-0.03437488,0.036099937,0.033638578,0.024045588,-0.012958952,0.0005196861,-0.0119070895,0.018796792,-0.0328602,-0.014305337,-0.0025165821,0.0023837846,-0.026044128,-0.03492185,0.018144637,-0.025160564,-0.016787734,-0.00075076724,0.020027472,-0.019953841,-0.0330285,0.04184311,0.04108577,-0.004867496,0.0032897016,0.015378237,-0.04055984,-0.01728211,0.008456979,0.0035290003,0.0026953989,0.0058693956,0.015472905,0.0007540543,0.0009019725,0.026969768,-0.009429952,0.022047048,0.023561731,0.054318205,-0.0015633313,0.0079100095,-0.020984666,0.009319507,-0.00076128583,0.010423962,0.0014699786,0.013863554,0.004754421,0.033743765,-0.0202694,0.012012276,-0.043589205,0.053350493,0.050405275,-0.015273051,0.007920529,0.0077206744,-0.020332512,0.02358277,0.033238873,0.042852897,-0.045650855,-0.03370169,0.005711616,0.0075471173,0.0055696145,-0.030819586,0.0065320693,0.022173272,-0.026990805,0.017155886,0.016104022,0.0129063595,0.042200744,0.0047123465,-0.04501974,-0.0002879475,-0.035742305,0.0058799144,0.010865745,-0.031156182,-0.029178679,-0.0038813746,-0.0037972254,0.017103292,-0.027663996,0.017860634,-0.020437699,-0.0005285612,0.025896868,0.008404385,-0.005306649,0.0023982476,0.0038498186,-0.027201178,-0.019133389,-0.033764802,-0.020763775,0.06765583,0.0128116915,0.022678167,-0.024087664,-0.019375317,0.0038577076,-0.020437699,-0.016535286,0.0031976635,-0.020942593,0.020690145,-0.037425287,0.009687658,-0.018365528,-0.05444443,0.022530906,0.0047833472,-0.0045677153,-0.0068476284,-0.0020208918,0.03553193,-0.012411984,0.023056837,0.024908116,-0.013232437,-0.011581012,0.03931864,0.01344281,0.028821046,-0.025602346,0.010050551,0.02457152,0.028926233,0.012106943,0.0022707093,-0.006642515,-0.007163187,-0.0030135876,0.005737913,-0.006726664,-0.0009387877,0.04316846,-0.016482694,-0.03671002,0.029220754,-0.0014989048,-0.02448737,-0.0104397405,0.020711184,0.012727543,-0.023561731,0.0070369635,0.010855226,-0.023772104,-0.058946405,-0.026843544,0.0020800591,-0.003615779,0.016598398,-0.035048075,-0.011307527,-0.0037840772,0.0044020466,0.019143907,-0.004086488,-0.0065005133,-0.022762315,0.00023420388,0.0073104477,0.0022549313,-0.023540694,0.016766697,0.00998218,0.035006,-0.017387295,-0.03761462,0.0095351385,0.020059027,0.02657006,-0.035805415,0.02457152,0.003847189,0.051162615,-0.0015462387,-0.0068581467,-0.009482545,-0.006290141,0.01297999,0.020458736,-0.005522281,-0.025244713,0.0109393755,-0.0016132949,0.027558811,-0.032397382,0.023877291,0.00007412347,0.0038182628,0.0031713669,0.016524768,0.009987439,0.013968741,0.0081309015,0.0030819585,-0.034606293,0.013337623,0.004031265,0.027558811,0.010334554,-0.029157642,-0.02003799,-0.011391676,0.011023524,0.005259315,0.0043520834,0.0022470423,-0.04291601,-0.008272902,-0.031534854,-0.007478746,-0.00537239,-0.0065741437,0.015241495,0.006205992,-0.033428207,0.02848445,0.003968153,0.021058297,0.00075668393,-0.0024166552,0.00072381325,0.010792115,0.016745659,0.031008922,0.0010426592,0.030104319,-0.019133389,0.029620463,-0.010697447,0.015367718,-0.019859174,0.0063585117,-0.006810813,-0.009088096,0.026254501,-0.0043652314,-0.008109864,-0.010276701,-0.037046615,0.010387147,-0.0037630398,-0.022993725,0.014789194,0.013137769,-0.0351743,-0.0036368163,-0.030651288,-0.037109725,-0.0019551504,-0.030440915,-0.0058220616,-0.018775756,0.017008625,0.007347263,-0.010324036,0.049353413,-0.07880557,-0.029893946,0.004123303,0.024361147,0.025560271,0.002587583,0.0076786,0.00049503305,-0.033217832,-0.018681087,-0.03248153,-0.02248883,-0.0022273199,-0.006879184,0.011686198,0.01605143,-0.028673785,0.020911036,-0.005659023,0.022131197,0.025139526,0.00622177,0.015767427,0.041338217,0.024298035,0.030840624,0.020132657,-0.00029238506,0.023393434,-0.007857417,-0.02564442,-0.04199037,-0.020048508,0.007883714,-0.023372397,0.0055853925,-0.043967873,-0.013421772,0.016188173,-0.004728124,0.0156201655,0.028316151,0.029914984,-0.0024863412,0.01950154,0.012559244,-0.00852009,-0.022846464,0.03307057,-0.019533096,0.022951651,0.003692039,0.009182764,0.004909571,0.014378968,-0.023498619,0.04628197,-0.0056379857,0.009577213,0.0069002216,0.012885322,-0.013695257,-0.01159153,-0.031513818,0.026002053,-0.008977651,0.0099085495,-0.01789219,0.0038734856,-0.0013378382,-0.017860634,-0.011244415,0.016629955,-0.015872613,0.020995185,0.0054170946,0.020437699,-0.0010433167,-0.00921432,0.034753554,-0.04876437,0.0076365257,0.0054381317,-0.018386565,0.0056064297,-0.013474365,0.038897894,-0.005522281,-0.04960586,-0.018144637,-0.012401465,-0.048343625,0.03502704,-0.017261071,-0.011707235,-0.0330285,0.0024245442,0.011475826,-0.01235939,0.029368015,0.0024140256,-0.0006081083,0.031072034,-0.00088422233,-0.011339083,-0.012233167,0.0015225717,0.00034941576,-0.008977651,0.038582336,0.021479042,0.020016953,-0.005319797,-0.016303876,0.03523741,-0.013064139,-0.010234627,-0.031177219,-0.0439258,-0.026527986,0.014484154,-0.0148102315,-0.009335284,0.03637342,0.0066372557,0.03978146,0.021710452,0.0017303147,-0.025686495,-0.0011807162,0.0044283434,0.036184087,0.038119517,0.032376345,0.0054118354,0.012064869,-0.0118439775,-0.05789454,0.044851437,0.011223379,0.06462646,-0.02779022,0.004425714,0.027579848,-0.028379263,0.0026059905,0.018481232,0.0044572693,0.0071526687,0.011297009,0.047544207,0.0029346978,0.008383349,0.04952171,0.036899354,-0.0075681545,-0.01021359,0.028126817,0.0033344058,0.000099762634,0.013411254,-0.019249093,0.03016743,0.016146097,0.033596504,-0.019091314,-0.021142447,0.015714834,-0.0108762635,0.012317316,0.017986858,-0.0043257866,0.013043101,-0.023898328,-0.06525758,-0.027138066,-0.0061533987,0.016693067,-0.017366258,-0.0054539097,0.0061165835,-0.005948285,0.0058851736,-0.0029110308,0.00452827,0.04247423,-0.0014791824,0.012706505,-0.009419433,0.020879481,0.048806444,-0.00013855008,0.011486344,0.018155156,-0.023393434,-0.0035263707,0.0035158521,0.030735437,-0.014662971,0.0029373274,0.0009210376,-0.04531426,0.016650992,-0.025665458,-0.022551943,-0.029746685,0.0077732676,0.0042942306,-0.0058536176,0.023372397,-0.0048043844,0.007242077,-0.0031424407,0.023498619,0.008988169,-0.0059009516,0.0041601183,0.017503,0.04531426,-0.0052014627,-0.007631266,0.020206288,0.0136531815,-0.0035684453,-0.041443404,-0.038140554,0.04108577,-0.032271158,-0.0038445592,-0.018523308,-0.017902708,-0.027243253,-0.024508407,0.01828138,-0.029010382,0.010734262,0.0084412005,0.024529446,0.003823522,0.001340468,-0.0015475535,-0.026002053,-0.005474947,0.007457709,-0.0027374735,-0.012201611,-0.008620017,-0.0055959113,-0.020826887,-0.020690145,-0.013905629,-0.033386134,-0.016440619,0.01889146,0.011307527,0.009745511,0.02671732,0.015178383,0.0020642811,0.02926283,0.020059027,0.0009848068,-0.018912496,-0.0170507,0.01996436,0.017492482,0.008204532,0.0020708553,0.007157928,0.019469984,0.011686198,-0.024592558,0.033764802,0.018270861,-0.006674071,-0.010302998,-0.030146394,0.010097885,-0.005690579,0.023456546,0.007094816,0.010302998,-0.024613595,0.022615055,0.013926666,0.0063848086,0.01021359,0.013663701,-0.029199718,0.024045588,0.0014962752,0.023624843,0.024319073,-0.00452827,-0.015798982,-0.040938508,-0.02810578,0.017955301,0.01282221,0.010061069,-0.009429952,-0.033596504,-0.03140863,0.02257298,-0.013306067,-0.053939536,0.002371951,0.0046176785,0.042873938,-0.03877167,0.02541301,0.011959682,-0.0014002926,0.022993725,-0.007415634,-0.030588176,-0.0063374746,-0.008115123,0.0013108843,0.028526524,-0.04123303,0.030062245,0.0087515,-0.008451719,0.030546103,0.02219431,0.0035211113,0.011034043,-0.017250553,-0.0047570504,0.006279622,0.0040207463,-0.0040838583,-0.014031853,0.016440619,0.013768887,-0.01742937,-0.025223674,-0.012390946,0.015041641,-0.002371951,-0.03969731,0.050573573,0.05044735,0.0014989048,-0.011465306,-0.005732653,-0.0038892634,-0.025434047,-0.008551646,0.00031292925,0.0098138815,0.0036420757,0.0061323615,0.007746971,0.03056714,-0.0012504022,0.020711184,0.021321263,0.033659615,-0.009866475,0.041254066,-0.0033291464,-0.02111089,0.04039154,0.0058904327,0.0028111038,0.018723162,0.02718014,0.018197231,-0.03408036,0.008562165,0.023140986,-0.020300956,0.02471878,0.036352385,-0.017292628,0.028968308,0.023435507,0.0046492345,0.0055643553,-0.04501974,-0.027916444,-0.021605266,0.021920824,0.025896868,0.0007310448,0.009119652,-0.01305362,-0.03986561,0.005574874,0.011549456,-0.03370169,0.02158423,0.0039181896,-0.0035815935,0.034606293,-0.013390216,0.014768156,0.0080993455,-0.025202638,-0.011528418,0.0060745087,-0.004678161,-0.020605996,0.02158423,-0.044514842,0.0041206735,-0.0053802794,-0.013537477,0.029073494,-0.0037945958]},{"id":"generate-parentheses","name":"Generate Parentheses","description":"You are given an integer `n`. Return all well-formed parentheses strings that you can generate with `n` pairs of parentheses.\n\n**Example 1:**\n\n```java\nInput: n = 1\n\nOutput: [\"()\"]\n```\n\n**Example 2:**\n\n```java\nInput: n = 3\n\nOutput: [\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n```\n\nYou may return the answer in **any order**.\n\n**Constraints:**\n* `1 <= n <= 7`\n","difficulty":"Medium","concepts":["Stacks","Tree Maze"],"solutions":{"python":"class Solution:\n    def generateParenthesis(self, n: int) -> List[str]:\n        stack = []\n        res = []\n\n        def backtrack(openN, closedN):\n            if openN == closedN == n:\n                res.append(\"\".join(stack))\n                return\n\n            if openN < n:\n                stack.append(\"(\")\n                backtrack(openN + 1, closedN)\n                stack.pop()\n            if closedN < openN:\n                stack.append(\")\")\n                backtrack(openN, closedN + 1)\n                stack.pop()\n\n        backtrack(0, 0)\n        return res\n","javascript":"class Solution {\n    /**\n     * @param {number} n\n     * @return {string[]}\n     */\n    generateParenthesis(n) {\n        const res = [];\n        this.backtrack(n, 0, 0, '', res);\n        return res;\n    }\n\n    /**\n     * @param {number} n\n     * @param {number} openN\n     * @param {number} closedN\n     * @param {string} current\n     * @param {string[]}\n     * @return {void}\n     */\n    backtrack(n, openN, closedN, current, res) {\n        if (openN === closedN && openN === n) {\n            res.push(current);\n            return;\n        }\n\n        if (openN < n) {\n            this.backtrack(n, openN + 1, closedN, current + '(', res);\n        }\n        if (closedN < openN) {\n            this.backtrack(n, openN, closedN + 1, current + ')', res);\n        }\n    }\n}\n","cpp":"class Solution {\npublic:\n    vector<string> generateParenthesis(int n) {\n        vector<string> res;\n        backtrack(n, 0, 0, \"\", res);\n        return res;\n    }\n\nprivate:\n    void backtrack(int n, int openN, int closedN, string current, vector<string>& res) {\n        if (openN == closedN && openN == n) {\n            res.push_back(current);\n            return;\n        }\n\n        if (openN < n) {\n            backtrack(n, openN + 1, closedN, current + \"(\", res);\n        }\n        if (closedN < openN) {\n            backtrack(n, openN, closedN + 1, current + \")\", res);\n        }\n    }\n};\n","java":"class Solution {\n    \n    public List<String> generateParenthesis(int n) {\n        List<String> res = new ArrayList<>();\n        Stack<Character> stack = new Stack<>();\n        backtrack(n, 0, 0, stack, res);\n        return res;\n    }\n\n    private void backtrack(int n, int openN, int closedN, Stack<Character> stack, List<String> res) {\n        if (openN == closedN && openN == n) {\n            StringBuilder sb = new StringBuilder();\n            for (char c : stack) {\n                sb.append(c);\n            }\n            res.add(sb.toString());\n            return;\n        }\n\n        if (openN < n) {\n            stack.push('(');\n            backtrack(n, openN + 1, closedN, stack, res);\n            stack.pop();\n        }\n        if (closedN < openN) {\n            stack.push(')');\n            backtrack(n, openN, closedN + 1, stack, res);\n            stack.pop();\n        }\n    }\n}\n","csharp":"public class Solution {\n    \n    public List<string> GenerateParenthesis(int n) {\n        List<string> res = new List<string>();\n        Backtrack(n, 0, 0, \"\", res);\n        return res;\n    }\n\n    private void Backtrack(int n, int openN, int closedN, string current, List<string> res) {\n        if (openN == closedN && openN == n) {\n            res.Add(current);\n            return;\n        }\n\n        if (openN < n) {\n            Backtrack(n, openN + 1, closedN, current + \"(\", res);\n        }\n        if (closedN < openN) {\n            Backtrack(n, openN, closedN + 1, current + \")\", res);\n        }\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def generateParenthesis(self, n: int) -> List[str]:\n        ","javascript":"class Solution {\n    /**\n     * @param {number} n\n     * @return {string[]}\n     */\n    generateParenthesis(n) {}\n}\n","cpp":"class Solution {\npublic:\n    vector<string> generateParenthesis(int n) {\n        \n    }\n};\n","java":"class Solution {\n    public List<String> generateParenthesis(int n) {\n        \n    }\n}\n","csharp":"public class Solution {  \n    public List<string> GenerateParenthesis(int n) {\n\n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/s9fokUqJ76A","embedding":[0.01374739,-0.0018506101,0.014626778,-0.06937145,0.018144328,0.016708367,-0.0067902086,-0.02622579,-0.014782619,0.015216746,-0.02831851,-0.03579887,-0.013346656,-0.010179748,0.0055963565,0.0016293718,-0.002717475,0.025468849,-0.030656124,0.0742693,0.06643273,0.014359622,0.027405728,-0.05904142,0.07694086,0.029320344,-0.06772398,0.011309594,0.06113414,0.015105432,0.009856935,-0.009489595,-0.0061445823,0.006005439,0.012445006,0.0052484972,-0.021038515,-0.026426157,0.018556194,0.014381885,0.021506038,-0.062336344,-0.008125988,-0.02638163,0.026537472,0.035821136,0.008471063,0.014738092,0.06082246,0.0012717727,-0.012278033,-0.010591612,0.011292896,-0.05685965,-0.0776978,-0.04221061,-0.030611597,0.021383593,-0.022407688,0.029164504,0.092703044,-0.033505786,0.027628358,0.0058607296,-0.0018019099,0.02600316,0.011153753,-0.028273985,-0.020259311,-0.004975776,-0.032748844,0.033594836,-0.044303328,-0.01882335,-0.0014554423,0.0027188663,0.025290744,0.02368781,0.019936498,-0.043679968,0.025357533,-0.017765857,0.020827018,-0.010057301,0.0034006701,-0.009061033,-0.028830558,0.0013183858,-0.121377766,-0.07159774,0.012767819,-0.010285497,-0.007920055,0.027205361,0.040162414,0.036333185,-0.0012696856,0.021316804,0.023554232,0.01979179,-0.0034841562,0.015795585,0.011743722,0.01262311,-0.021428118,0.025313009,-0.0129013965,-0.014693567,-0.06349402,0.04223287,-0.030299915,0.040696725,0.0062280684,-0.012567452,0.004858895,0.025045851,-0.0072076395,-0.013591549,0.015283535,0.032837894,-0.0127455555,-0.027695147,-0.0066065392,0.022140533,-0.03272658,-0.0008223388,-0.015628612,-0.024533805,0.027984565,-0.0156954,0.03047802,-0.025201693,-0.020459678,0.013157421,-0.036867496,-0.029209029,-0.023821387,0.020003287,0.008621339,0.06910429,0.009005375,-0.0073189544,-0.010279931,-0.039472263,0.017465308,-0.010313326,-0.026715575,0.023309339,-0.03815875,0.066477254,-0.010947821,0.03225906,0.004074125,0.041475933,-0.019335398,-0.049423814,-0.01696439,-0.0027341722,0.044102963,-0.0033116182,-0.030455757,0.022352032,-0.03815875,-0.0047420147,-0.005062045,0.002695212,-0.010970083,-0.04085257,-0.030099548,-0.03869306,0.013847574,-0.04223287,-0.012756688,0.025424322,0.0324149,0.0056575797,-0.045594584,-0.00746923,-0.025357533,0.031413063,-0.051293906,0.0446818,-0.06349402,-0.026849154,0.036489025,-0.03637771,-0.0044859904,-0.049824547,-0.038759846,0.03818101,0.018266775,-0.002379356,0.02644842,0.013034974,-0.0139143625,-0.07689633,0.035576243,-0.048577823,-0.026492946,0.034351777,-0.024823222,0.009422806,-0.00016271108,-0.0065954076,0.038136486,-0.020938333,-0.06523053,-0.035598505,0.07182037,-0.032303583,0.023420654,-0.019257477,0.035821136,-0.0013705647,0.049423814,-0.0014248308,-0.0077308198,-0.000091139074,0.0124784,0.011381948,-0.048577823,0.030344442,0.014337359,0.011521092,0.053965464,0.043880332,-0.00017332078,0.02226298,0.016875338,0.02765062,-0.029053189,0.015817847,0.01643008,0.0070406673,0.007135285,-0.03891569,-0.003887673,-0.04392486,-0.028630191,-0.0077586486,0.04439238,0.008231737,0.017131362,0.012656504,0.07137511,0.020971727,-0.028941873,-0.013791916,-0.012790082,0.00016836378,0.0031780403,0.01038568,0.0010477515,-0.016162923,-0.01101461,0.05058149,0.01117045,-0.036667127,0.02667105,0.010224273,0.019112768,-0.019123899,-0.015951425,-0.04490443,0.007819871,-0.052407056,-0.008905192,0.041453667,-0.018845612,-0.018712034,0.0043997215,-0.0223409,0.013246473,-0.02397723,-0.03196964,0.0075582815,0.0324149,-0.005540699,-0.019769525,-0.014192649,-0.061401296,0.006784643,0.02337613,0.007981278,0.023554232,-0.0016850292,0.034707986,-0.01703118,-0.0062447656,-0.051783692,-0.0047058375,0.009122256,-0.0029943709,0.050403386,0.0038960215,-0.04319018,0.011788248,0.021762062,0.03210322,0.0018547846,0.022240717,-0.05365378,0.02533527,-0.016396685,-0.051160328,-0.06545316,-0.013469103,0.012266902,0.00019601858,0.04401391,-0.0017420781,0.006222503,-0.021394724,-0.0111203585,-0.011866168,-0.022674846,0.008114856,-0.008543419,0.037936118,-0.0017114666,0.005777243,0.008582379,0.058596164,0.0034563276,0.0066510653,0.057126805,-0.0033255327,0.06264803,0.047909934,-0.012144456,-0.048666872,-0.07778685,-0.010786413,0.016352158,-0.011270634,-0.032392636,0.05067054,-0.0047253175,0.003030548,-0.026337106,-0.01605161,0.027628358,0.044281065,0.013435708,-0.0060499646,0.0074024405,0.027739672,0.041965716,0.020660045,0.01217785,0.019468976,0.011765985,0.055479344,0.041943453,0.026025424,0.007229903,-0.007864398,0.0040240334,-0.004906204,0.009918157,-0.027583832,0.0009475681,-0.014726961,-0.008387578,-0.024890011,0.018990321,0.069015235,0.0037234833,-0.013836442,0.043435074,-0.017454175,0.013023843,0.040607676,0.034129146,-0.01576219,-0.009701094,-0.02159509,0.0056130537,0.018333564,-0.018890139,-0.07694086,-0.017365124,-0.03615508,0.025468849,-0.017910568,0.05512314,0.05881879,0.00051865785,-0.018912401,-0.024244385,0.0075360187,-0.06683347,0.050047178,0.0203261,0.014370753,-0.033038262,-0.00051831,0.036644865,0.006283726,0.00903877,0.007330086,-0.009211307,-0.0066065392,-0.0042605777,-0.0020635,-0.03479704,0.046217944,0.03757991,0.027183099,-0.006411738,-0.044481434,-0.005526785,0.011498829,0.022229586,-0.0042049205,-0.0069905757,0.0010150528,0.017064573,0.0073412177,0.043012075,-0.026270317,-0.024199858,0.048310667,-0.039717156,-0.029787866,0.021717537,-0.035954714,-0.016574789,-0.008927455,0.013313262,0.034418568,0.028741507,-0.033817466,0.006567579,0.0057271514,-0.011721459,0.0013810005,0.07885548,0.016185187,-0.0013538675,-0.009461766,0.0088551,0.021127569,-0.008521155,-0.01012409,-0.0073189544,-0.0075415843,-0.0054572127,0.0009273923,-0.016085003,0.0033116182,0.029476184,0.06750135,-0.014448673,-0.016541393,0.030745175,0.03263753,0.030945541,0.010090696,0.006523053,0.0097678825,0.014292833,-0.03953905,-0.041809876,0.018712034,-0.022296375,-0.053787358,-0.012522926,0.01934653,0.009255834,-0.035910185,0.008582379,-0.0118216425,0.012689899,0.022741634,0.034307253,0.007931187,0.054410722,-0.04281171,-0.061089616,0.016096134,-0.0026812977,0.02353197,0.02540206,-0.01950237,0.04955739,0.010252102,-0.008153817,0.022841817,-0.04265587,-0.00047482763,0.024912274,-0.010753019,-0.009094427,0.030388968,0.0026047686,-0.036822967,-0.042388715,-0.033283155,-0.021639617,-0.033505786,-0.020437416,-0.03749086,-0.002443362,0.03729049,-0.04445917,-0.002327873,0.0052540633,0.024088545,0.012289165,-0.03668939,-0.020337231,-0.024110807,-0.036822967,-0.010352286,0.017665675,-0.016574789,-0.033416733,-0.00963987,0.0109645175,0.0024127504,-0.010458034,-0.019981025,0.024377963,-0.007775346,-0.0545443,-0.018188855,-0.025758268,-0.022630319,-0.013558155,-0.011699196,0.00086686475,-0.006951615,0.032593,-0.03348352,-0.017721333,0.016930996,0.022496741,0.0094172405,-0.011348554,-0.041075196,0.07422478,-0.025468849,-0.006328252,-0.025068115,-0.010513692,0.00803137,0.03976168,-0.012411611,-0.0050063874,-0.0064729615,-0.022474479,0.009489595,-0.018712034,-0.012834608,-0.055568397,-0.010719624,0.009255834,0.033973306,0.0020008853,0.004516602,0.0078477,0.011999746,-0.02593637,0.007357915,-0.009205742,0.0047225347,0.00829296,0.021472644,0.024912274,-0.016118398,-0.010508127,0.0092224395,0.006044399,0.020548731,-0.060733408,-0.011743722,0.02451154,-0.01830017,0.0020328884,0.017743595,-0.009606476,-0.03281563,-0.06309328,-0.009884763,-0.00041256085,0.03780254,-0.031925112,-0.007046233,-0.06402833,-0.0136806015,0.0012550754,-0.00034124975,0.021383593,0.006322686,-0.019758394,-0.016396685,0.00087034336,0.0035425967,-0.037691224,0.00050509133,0.004249446,-0.00007952928,0.038581744,0.0039405474,0.0073245205,-0.0035843397,0.034485355,0.00073119975,0.004953513,-0.024199858,0.04684131,-0.0028371385,-0.009428372,0.0011771551,0.013157421,0.040251467,0.023287077,0.0116658015,-0.03869306,0.022864081,0.031435326,-0.013814179,0.037713487,0.0154616395,0.0038793243,-0.009962684,0.0028524443,0.01695326,0.044481434,0.00545443,0.0012467268,-0.010736322,0.027027257,-0.06171298,0.037045598,0.043056604,-0.029164504,-0.012667635,-0.02524622,0.018812219,-0.062336344,0.009450635,0.030010497,-0.023487443,0.041275565,-0.02159509,0.015405982,0.009684396,-0.0132130785,0.010446903,0.02137246,-0.0062058056,-0.0047086203,0.020526467,0.03599924,-0.013012712,-0.059219524,-0.020125734,-0.0034841562,-0.010825374,-0.008532287,0.01763228,-0.016040476,0.009389412,0.013046106,0.007942318,0.01703118,0.0603772,-0.033750676,-0.009740054,0.034240462,0.024222123,0.0005190057,-0.015673138,-0.00601657,0.00093852374,0.007864398,0.024311174,-0.023331603,-0.0061668456,0.02480096,-0.01964708,0.056058183,0.05939763,0.034195937,-0.008838403,0.018389221,-0.021250013,0.007419138,-0.020092338,0.004519385,-0.009962684,0.014281701,0.05432167,-0.013235342,0.0372237,0.013535892,-0.0029164504,-0.020760229,0.018879008,0.013547023,-0.015884636,0.0018088671,-0.0005457909,-0.006767946,0.02667105,0.046351522,0.012211245,0.012790082,-0.00022541267,-0.0089107575,-0.011009043,0.028029092,-0.045906264,0.004541648,0.009812408,-0.010035038,-0.001154892,-0.038448166,0.027205361,0.01785491,-0.034618933,-0.059798364,-0.060911514,0.01553956,0.014470937,-0.012077667,-0.015216746,-0.0040212506,-0.0044025043,0.0066621965,0.021650748,0.033594836,0.0049395985,-0.04118651,-0.039628103,-0.008548984,-0.0038041866,-0.048399717,-0.021728668,-0.037824802,-0.0052067544,0.040741254,-0.001767124,0.024711907,-0.019146163,0.04445917,-0.029075451,0.007953449,-0.036511287,0.0052930233,0.04189893,-0.013736258,0.0002762001,0.0062948577,-0.0021664663,-0.033728413,-0.0050314334,0.0156954,0.01785491,-0.023932703,0.008164948,-0.016162923,0.024155334,-0.0008466889,-0.0054933904,0.016508,-0.005916387,0.030990068,0.023309339,-0.059664786,0.031502116,-0.018044146,-0.016708367,-0.036578074,0.003383973,-0.012545189,-0.0012891657,0.00043656313,-0.0150943,0.012589715,-0.010246537,0.022886343,0.00071032817,0.009561949,-0.018444879,0.0033561443,0.00642287,-0.080636516,0.0018798304,0.005905255,-0.008548984,-0.03495288,-0.0041798744,-0.00036594772,-0.0144932,-0.034351777,-0.032615267,-0.01905711,-0.008766049,-0.0020008853,0.021116436,-0.039160583,0.0057939403,0.0057995063,0.015940294,0.027606094,0.011465435,0.012044272,0.014882802,0.01030776,-0.017532097,0.026025424,0.0013705647,-0.005276326,-0.038737584,0.0031056856,0.002204035,-0.0091445185,0.025825057,-0.001337866,0.0066009737,0.011932957,0.011621275,-0.05654797,-0.016396685,-0.011576749,0.015172221,0.045772687,-0.028964136,-0.011610144,-0.015183352,0.027183099,0.022886343,0.027606094,0.01793283,0.019290872,0.028808296,0.036934283,0.0020342798,0.012111061,0.03526456,-0.014370753,-0.0039127185,0.0012300296,0.0037513121,-0.022552399,-0.0029303648,-0.011654669,-0.014081335,-0.010958952,0.022296375,-0.021862246,-0.028919611,0.025802793,0.036199603,0.009467332,0.015428245,-0.01740965,0.01927974,0.00073467835,-0.016853075,-0.0009823539,-0.004981342,0.00810929,0.029542973,0.026403895,0.01117045,-0.017743595,-0.0011583706,-0.017699068,-0.018812219,0.045015745,-0.003336664,-0.008821705,0.021839984,-0.006673328,0.009172347,-0.03352805,0.050002653,0.008743785,-0.003077857,0.045305163,0.00024402313,-0.015528428,0.034173675,-0.024288911,-0.029832393,-0.041453667,-0.008354183,-0.0066009737,0.010558218,-0.026181264,0.0013483017,0.025268482,0.022084875,0.005331984,0.06095604,-0.032236796,0.0032865724,-0.0113930795,0.024222123,-0.007369046,-0.00084529753,-0.03286016,-0.0038514955,-0.02031497,-0.00066371507,0.0051399656,0.005053696,0.009996078,0.0026743405,0.054099042,0.009484029,0.02391044,0.022585792,0.008988678,0.027405728,0.027004994,0.027427992,-0.0062058056,-0.029921444,-0.024222123,-0.022552399,0.02159509,0.0012835999,-0.012567452,0.019468976,-0.016418947,0.03853722,0.045193847,-0.035064194,0.020782491,0.003164126,-0.0025505025,-0.020192523,0.0059386496,-0.020582125,0.027427992,-0.039561316,-0.021083042,-0.02337613,0.014971854,0.02077136,-0.0019396622,0.01890127,-0.028207196,-0.0070851934,-0.0017559925,-0.023665547,-0.011632407,-0.0022749982,-0.0005141357,-0.019257477,-0.012344822,-0.019925367,-0.00031602997,-0.012389348,-0.022685977,0.03263753,-0.02794004,0.023108972,-0.015116563,-0.012411611,0.0061223195,0.004775409,-0.011487697,0.012010878,-0.004555562,-0.03190285,-0.035598505,-0.047152992,0.029387133,0.016162923,-0.006283726,0.02749478,-0.014726961,0.004341281,-0.0010922775,0.015929163,0.02159509,-0.036444496,0.031324014,0.004037948,-0.0038208838,0.017543228,-0.03370615,0.012144456,0.019969894,0.025424322,0.022630319,0.06064436,0.023821387,-0.017253809,-0.012355953,-0.026893679,0.0045917397,-0.03497514,0.009578647,-0.016029345,-0.018344695,0.03459667,0.0016794635,-0.001582063,-0.022129402,0.039405473,0.024400225,-0.015283535,-0.005128834,-0.024377963,-0.00491177,-0.018066408,-0.016118398,0.051204853,0.04454822,0.0061056223,-0.010146353,-0.01516109,-0.01181051,0.0051872744,-0.04116425,0.025357533,-0.013457972,-0.018990321,0.005407121,0.011381948,0.0050509134,-0.02644842,-0.0010700144,0.014470937,0.044036172,-0.027427992,-0.016151791,-0.0022123836,-0.016018214,0.045728162,0.021639617,-0.03399557,0.037468594,0.0217398,-0.013647206,-0.006856998,0.01300158,0.023554232,0.00020784579,0.0038264496,-0.000082529565,-0.012389348,0.014370753,-0.037713487,0.02451154,0.000350468,0.007836569,0.016574789,-0.016563658,0.03310505,0.031435326,-0.0032420463,0.030945541,-0.0006042312,0.010368983,-0.011699196,-0.002707735,0.016708367,0.015261273,0.0030945542,-0.015918031,0.003030548,0.006155714,0.015851242,-0.015328062,-0.018389221,0.016975522,-0.026804628,-0.014448673,-0.00807033,-0.033194102,0.010207576,-0.012244639,0.004797672,-0.009161216,-0.024645118,-0.030878752,0.022752766,0.0066009737,-0.015973687,-0.008688128,-0.029832393,-0.0018394787,-0.007702991,-0.005359812,-0.010680664,0.030901017,0.044303328,0.004794889,0.0008592119,-0.01905711,-0.003859844,0.017899435,-0.0016196318,0.006255897,0.01935766,-0.033461258,-0.0406522,-0.017788121,-0.02533527,-0.008571248,0.031791534,-0.050403386,-0.0026005944,0.000002005625,-0.020882675,0.012534058,-0.029476184,-0.053475678,0.009022073,-0.021695273,0.009495161,0.004733666,0.010814242,0.0030806398,-0.0104636,-0.013179684,-0.0418544,-0.015450508,-0.016418947,-0.004163177,0.037936118,0.003907153,0.011944088,-0.0045750425,-0.02860793,-0.02122775,-0.008727088,-0.008649168,0.015584086,-0.020682309,0.007997976,-0.019702736,-0.011387514,-0.024444751,-0.0004452596,0.008532287,0.031301748,0.019914236,-0.011743722,0.047776353,0.017977357,-0.024222123,-0.015973687,0.016385553,0.02780646,0.019413318,-0.009734488,-0.032080952,-0.03706786,0.002290304,-0.04684131,-0.005351464,-0.03953905,0.03617734,0.016374422,0.0065787104,0.0038236668,0.035932448,-0.023153499,0.031858325,0.053074945,0.0067067225,0.016686102,0.03760217,0.0036121684,-0.020159129,0.042344186,0.019736132,0.012723293,0.014381885,-0.0031780403,-0.008053632,0.0058829924,0.007229903,-0.0030889884,0.010480298,0.007263297,-0.035954714,0.017654544,-0.017576622,0.020014418,0.02002555,0.0025351967,0.033750676,-0.0209272,-0.04094162,0.00073606975,0.000246806,-0.019246345,0.0031474289,0.0067957747,-0.0032448294,-0.007897792,-0.0035843397,-0.039049268,0.013168553,-0.053163994,0.011599013,0.01703118,-0.014660172,-0.0042689266,0.047731828,0.013157421,-0.018767692,-0.032459423,-0.00960091,0.019001452,-0.023865914,-0.0004358674,0.013469103,-0.024689645,-0.033060525,0.03383973,0.007842135,0.002902536,-0.0060388334,0.0025018023,0.019969894,-0.029609762,0.020058945,-0.041141987,0.010240971,-0.018188855,0.0094562005,-0.06309328,0.015906898,0.0064952243,0.025268482,-0.0195135,0.012367086,0.03286016,-0.0035871225,-0.0010227056,-0.030455757,-0.00869926,-0.002455885,0.0067735114,-0.0037373977,-0.009155651,0.069015235,0.008276262,-0.024823222,0.02122775,-0.008393143,-0.022073744,-0.039628103,0.02337613,-0.0057883747,0.0089107575,0.027917776,-0.0078087403,-0.006389475,-0.021461513,-0.03377294,0.0064284354,-0.0028691415,0.011181582,-0.030099548,0.013513628,0.06313781,-0.03548719,-0.031234961,-0.017610017,-0.00491177,0.0035258995,0.026559735,0.01807754,-0.0054182527,-0.009945986,0.017454175,0.036622602,-0.0052262344,0.0149941165,0.04205477,0.012945923,0.0127455555,0.005084308,-0.013402314,0.03154664,-0.01793283,0.039049268,-0.029721078,-0.0069961413,0.0075360187,0.025580164,0.023175761,0.0023431787,0.01217785,-0.023220288,0.018489406,-0.037824802,-0.0005673581,0.009879197,-0.00069293525,0.024467014,-0.0046807914,-0.018389221,0.003581557,-0.0015319713,0.020125734,0.034485355,0.04550553,-0.04782088,0.00803137,-0.008287394,0.011765985,-0.01203314,0.012645372,0.009522989,0.00048630696,-0.011142622,-0.015194484,-0.039316423,0.03980621,-0.009556384,0.023776863,-0.0043551954,0.02943166,0.023309339,-0.028229458,-0.016519131,0.034685723,-0.0070406673,-0.028229458,-0.0023334385,-0.026403895,-0.0005590095,0.02308671,0.024934538,0.0041715256,0.02578053,-0.0007492884,0.007970147,-0.007903358,-0.03526456,-0.017543228,-0.025068115,0.011164884,0.026982732,0.0011604578,-0.038136486,-0.006261463,0.031346276,-0.024734171,-0.012066535,0.017198151,-0.022697108,-0.0022346466,-0.021038515,0.047331095,-0.028741507,-0.014637909,-0.032993738,0.030144075,0.0027870468,0.012166718,0.010552652,-0.046796784,-0.005145531,0.0053542466,0.016775155,-0.010730756,0.039160583,-0.029253555,-0.012233507,-0.0071686795,-0.01068623,-0.06202466,-0.017309466,0.0113541195,-0.032236796,0.011721459,0.018634114,0.01292366,-0.0025505025,0.009328188,0.0009573081,0.019179557,0.018645246,0.00065119215,0.020827018,-0.0038542785,0.01412586,-0.021862246,-0.011070266,0.0023654415,0.012667635,-0.016942127,0.01890127,0.042923026,0.009851368,0.023776863,0.0112761995,0.008938586,0.005014736,0.0059831757,-0.018545061,0.0031307314,-0.008604642,0.015584086,0.02765062,0.033349942,0.040741254,-0.028118143,-0.015561823,-0.0046418314,-0.018545061,0.012756688,0.016897602,-0.012556321,-0.0033116182,0.0071297195,-0.023710074,0.0068347347,-0.0037568777,0.0019674909,0.02533527,-0.0040017706,-0.024890011,0.0059219524,-0.0066955914,-0.04759825,-0.008766049,0.004822718,0.019669343,-0.031145908,0.026760101,0.006389475,-0.0104969945,0.015884636,-0.006367212,0.005351464,0.0014596166,0.014448673,-0.010864334,0.02987692,0.010769716,0.043524124,0.0076528993,-0.017543228,0.048577823,0.013803047,-0.008376447,-0.005601922,-0.0018019099,-0.027071783,-0.0049368157,0.013079501,-0.016307633,-0.027160835,-0.003336664,0.02106078,0.02226298,0.01861185,-0.028273985,0.014381885,-0.013558155,-0.048755925,0.037179176,0.021160962,0.026047686,0.0068792608,0.009428372,-0.03726823,-0.011966351,-0.019045979,-0.011376383,0.035598505,-0.008320789,0.016096134,0.0070184045,0.011777116,0.0052679777,0.02107191,-0.0031168172,0.060688883,0.005390424,0.023398392,-0.016719498,0.022051482,0.041587245,0.049201187,-0.013357787,0.026337106,0.023598759,-0.00067867304,-0.035242297,-0.010135221,0.018968059,-0.016263107,0.0058329008,0.015528428,-0.004255012,0.018845612,0.020070076,-0.008320789,0.017821515,-0.063226864,0.005877427,-0.011777116,0.013380051,0.047687303,-0.008281829,-0.0016836378,-0.0054238182,-0.028229458,0.006895958,-0.019624816,-0.0001567105,0.025379797,0.0001814085,0.023264814,-0.005229017,-0.024044018,0.005034216,-0.0041798744,-0.040251467,0.011532224,-0.005215103,-0.0035092023,-0.039093792,-0.018099802,-0.0069460496,0.014092466,0.021951297,-0.0060555306,-0.021172093,-0.028452087]},{"id":"daily-temperatures","name":"Daily Temperatures","description":"You are given an array of integers `temperatures` where `temperatures[i]` represents the daily temperatures on the `ith` day.\n    \nReturn an array `result` where `result[i]` is the number of days after the `ith` day before a warmer temperature appears on a future day. If there is no day in the future where a warmer temperature will appear for the `ith` day, set `result[i]` to `0` instead.\n\n**Example 1:**\n\n```java\nInput: temperatures = [30,38,30,36,35,40,28]\n\nOutput: [1,4,1,2,1,0,0]\n```\n\n**Example 2:**\n\n```java\nInput: temperatures = [22,21,20]\n\nOutput: [0,0,0]\n```\n\n**Constraints:**\n* `1 <= temperatures.length <= 1000`.\n* `1 <= temperatures[i] <= 100`\n","difficulty":"Medium","concepts":["Stacks"],"solutions":{"python":"class Solution:\n    def dailyTemperatures(self, temperatures: List[int]) -> List[int]:\n        res = [0] * len(temperatures)\n        stack = []  # pair: [temp, index]\n\n        for i, t in enumerate(temperatures):\n            while stack and t > stack[-1][0]:\n                stackT, stackInd = stack.pop()\n                res[stackInd] = i - stackInd\n            stack.append((t, i))\n        return res\n","javascript":"class Solution {\n    /**\n     * @param {number[]} temperatures\n     * @return {number[]}\n     */\n    dailyTemperatures(temperatures) {\n        const res = new Array(temperatures.length).fill(0);\n        const stack = []; // pair: [temp, index]\n\n        for (let i = 0; i < temperatures.length; i++) {\n            const t = temperatures[i];\n            while (stack.length > 0 && t > stack[stack.length - 1][0]) {\n                const [stackT, stackInd] = stack.pop();\n                res[stackInd] = i - stackInd;\n            }\n            stack.push([t, i]);\n        }\n        return res;\n    }\n}\n","cpp":"class Solution {\npublic:\n    vector<int> dailyTemperatures(vector<int>& temperatures) {\n        vector<int> res(temperatures.size(), 0);\n        stack<pair<int, int>> stack; // pair: {temp, index}\n\n        for (int i = 0; i < temperatures.size(); i++) {\n            int t = temperatures[i];\n            while (!stack.empty() && t > stack.top().first) {\n                auto pair = stack.top();\n                stack.pop();\n                res[pair.second] = i - pair.second;\n            }\n            stack.push({t, i});\n        }\n        return res;\n    }\n};\n","java":"class Solution {\n    public int[] dailyTemperatures(int[] temperatures) {\n        int[] res = new int[temperatures.length];\n        Stack<int[]> stack = new Stack<>(); // pair: [temp, index]\n\n        for (int i = 0; i < temperatures.length; i++) {\n            int t = temperatures[i];\n            while (!stack.isEmpty() && t > stack.peek()[0]) {\n                int[] pair = stack.pop();\n                res[pair[1]] = i - pair[1];\n            }\n            stack.push(new int[]{t, i});\n        }\n        return res;\n    }\n}\n","csharp":"public class Solution {\n    public int[] DailyTemperatures(int[] temperatures) {\n        int[] res = new int[temperatures.Length];\n        Stack<int[]> stack = new Stack<int[]>(); // pair: [temp, index]\n\n        for (int i = 0; i < temperatures.Length; i++) {\n            int t = temperatures[i];\n            while (stack.Count > 0 && t > stack.Peek()[0]) {\n                int[] pair = stack.Pop();\n                res[pair[1]] = i - pair[1];\n            }\n            stack.Push(new int[] { t, i });\n        }\n        return res;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def dailyTemperatures(self, temperatures: List[int]) -> List[int]:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} temperatures\n     * @return {number[]}\n     */\n    dailyTemperatures(temperatures) {}\n}\n","cpp":"class Solution {\npublic:\n    vector<int> dailyTemperatures(vector<int>& temperatures) {\n        \n    }\n};\n","java":"class Solution {\n    public int[] dailyTemperatures(int[] temperatures) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int[] DailyTemperatures(int[] temperatures) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/cTBiBSnjO3c","embedding":[0.019706674,-0.027502606,0.014132108,-0.037340075,-0.0054370533,0.04148662,-0.0066006253,-0.047685284,-0.0033505578,0.023377214,-0.018976796,-0.016882367,-0.043877233,-0.05648612,0.031501062,0.009514843,0.05995568,0.033870514,-0.07252225,0.07709192,0.0017281685,-0.04523121,0.0015827221,-0.0031918888,-0.01855368,0.010646681,-0.02069042,0.022171332,0.029385475,0.00886959,0.040407673,-0.0007378103,-0.03425132,0.0018524592,0.023736864,-0.012005945,0.008457051,0.044342663,-0.0039032544,-0.008673899,-0.00037683858,0.01025001,-0.038461335,0.006769872,-0.042523257,-0.016818902,0.005241362,-0.013106049,0.02253098,-0.023969578,0.031289503,-0.007869977,-0.025196617,-0.04025958,0.046881363,-0.012249237,-0.041930895,0.028327683,0.047939155,0.009335019,0.024879279,-0.03152222,-0.013127205,0.0018141142,0.0015060321,-0.0010068862,0.022742538,0.059447937,-0.0026061363,0.009424931,-0.020669265,0.045442764,0.044977337,-0.0071189436,-0.0102764545,-0.011889587,0.02084909,0.020425973,0.018490212,-0.03858827,-0.021875149,0.0036784734,0.024477318,0.0661755,0.009260973,-0.0654562,0.0027449715,-0.0025149016,0.009768713,-0.040386517,-0.033828203,-0.0031151988,0.015739953,0.025387019,0.02915276,0.011593406,0.0055481214,0.019632628,-0.014798517,0.0047785775,-0.031987645,-0.02115585,-0.012989691,0.072564565,-0.027502606,0.017030459,0.0084993625,0.0059712385,-0.029914372,0.0175382,-0.010017295,0.014301354,0.0621982,-0.033912826,0.03258001,0.027417982,-0.046162065,-0.03262232,0.012788711,-0.020108635,0.012725243,-0.0011569605,-0.02135683,0.036409218,-0.07273381,-0.033278152,0.009959117,-0.08293093,-0.015919777,-0.018744083,0.04296753,-0.04755835,0.03812284,0.025302397,0.0033029572,-0.022932941,0.01840559,0.0287508,0.015306258,0.0013420742,0.025006214,0.05796703,0.0053286296,-0.021483766,0.07535714,-0.00042873653,0.01473505,0.023673397,0.021039493,0.059363313,0.030400956,0.0153485695,0.012238659,0.05225495,0.008467629,-0.05953256,0.026994864,0.025979383,0.024815813,-0.033807047,0.00010883693,-0.06592163,-0.007171833,0.021483766,0.024942746,0.018617148,0.0046251975,0.0011880331,-0.05449747,-0.09037779,-0.0042549702,-0.009197506,0.04455422,-0.017950738,-0.012302127,-0.010863529,-0.020923136,-0.06917963,-0.05572451,0.0062885764,-0.021177005,-0.021229895,-0.044638842,-0.05153565,0.018437322,0.014766783,-0.0030120641,-0.01707277,-0.017569933,-0.0017837026,0.007806509,0.000032498196,0.014354244,-0.016120758,-0.029216228,-0.023948422,-0.00089317356,-0.023440681,-0.02090198,0.043707985,0.026317878,-0.019484539,0.008938347,0.021282785,-0.007489171,-0.015486082,-0.043454114,0.014523491,-0.016998725,-0.044681154,0.051366404,-0.0019463382,0.007732463,-0.02961819,0.028158436,0.037086204,-0.05855939,-0.04578126,-0.018278655,0.07231069,-0.009044126,0.03059136,0.015105276,0.020574063,-0.025175462,-0.017770914,-0.03078176,0.008917191,0.06283288,-0.014904296,0.018849863,-0.0055851443,-0.0028930625,0.007071343,-0.0044480176,-0.010741883,-0.0004115474,-0.038419023,0.022996409,-0.011424159,0.0004032834,-0.020976026,-0.015570706,0.017982472,0.011001042,-0.03059136,-0.015285102,-0.031501062,-0.015665907,0.02650828,0.049420066,-0.021959772,-0.029237384,-0.049673937,-0.0640176,0.048700765,-0.023863798,-0.00810798,0.02039424,-0.0061351964,-0.021452032,0.0036784734,-0.03746701,-0.034737904,0.011223178,-0.040280737,-0.012291549,-0.00083168934,-0.012101146,0.021705901,0.036641933,0.01743242,-0.010498591,-0.014481179,-0.022552136,-0.028306527,0.02191746,0.002204175,-0.019854765,-0.029956684,-0.025492799,-0.0065900474,0.009588889,-0.03630344,0.022954097,-0.024223449,-0.01554955,0.017453576,0.011244334,-0.020108635,-0.0009282129,0.020024013,0.01871235,0.012883913,0.0045696637,0.027502606,-0.013931127,0.011910743,0.015168744,-0.08601969,-0.016713122,-0.020436551,-0.051916454,0.028793111,0.019389337,-0.036113035,-0.01432251,0.00056624954,-0.0010101919,0.0376151,0.025788981,-0.032389607,0.034843683,0.015274524,-0.011371269,-0.05500521,-0.0023006988,0.00489229,0.01697757,0.0032923792,-0.042205922,-0.010101918,0.049885493,0.045527387,0.03808053,0.021177005,-0.010551481,-0.0031151988,-0.0294701,-0.07561101,-0.031289503,-0.030422112,-0.0153485695,0.0549629,-0.058432456,-0.026846774,0.035711076,-0.037297763,-0.04123275,0.058601703,0.020098057,0.011096243,-0.022213642,0.01967494,0.013243562,0.018828707,0.05030861,-0.014840828,0.047727596,-0.008525807,0.040513452,0.042544413,0.013846504,0.0026087807,-0.0629175,0.018225765,-0.010202409,0.05729004,0.002362844,-0.025683202,-0.030337488,0.030168243,0.07688036,-0.012555997,0.05073173,0.043454114,-0.0065953364,0.0054026754,-0.041126974,0.016734278,0.0033532022,-0.017019881,0.000101316684,0.015031232,-0.0004935263,-0.046542868,0.011804964,0.019050842,0.013529166,0.050689418,-0.037488166,0.040090334,-0.010027872,-0.02636019,0.05149334,0.023313746,-0.055470638,-0.0018154364,-0.025471643,-0.063425235,0.03186071,-0.033933982,0.027502606,0.014777361,0.009250395,0.034547504,0.006198664,0.103579044,-0.0014253753,0.01794016,-0.035139866,0.000607239,0.004532641,0.011096243,-0.004450662,-0.0043263715,-0.015560128,0.03226267,0.022911785,-0.04662749,-0.025069682,-0.038059372,-0.0040989458,0.00040460564,-0.008695054,-0.013169517,-0.061140407,0.014280199,-0.011085666,-0.030422112,-0.08263475,-0.016966991,0.05102791,-0.006759294,0.005373586,0.002440856,-0.00069814303,-0.043157935,-0.01855368,-0.0025109348,-0.024540786,0.00013263726,-0.07743041,0.06444072,0.014661004,0.023165656,-0.0033717137,0.019209512,0.038820986,0.0005378214,0.028771956,0.01131838,0.026127474,0.008742655,-0.0640176,-0.0806461,0.00192386,0.030316332,-0.009498976,-0.017866116,0.029448943,0.019410493,0.005474076,0.01743242,-0.014713894,0.037657414,-0.028941203,0.0031363547,0.014259043,0.01815172,-0.03645153,0.012175191,-0.040703855,-0.040344205,-0.0056962124,-0.023673397,0.03501293,-0.0044744625,-0.0046251975,-0.07332618,-0.011244334,0.053989727,-0.005907771,0.0105832135,-0.03645153,0.05250882,0.0068756514,0.012619465,-0.020140368,-0.0028481062,0.013656101,-0.076795734,-0.008605142,0.0017599022,0.010165386,-0.013423387,-0.018056517,-0.016755434,-0.007780064,-0.013846504,-0.010128363,0.005378875,0.039371036,-0.0070977877,0.026127474,0.025281241,-0.027566072,-0.007753619,0.023990734,-0.016194804,0.013148361,-0.032199204,-0.0114876265,0.04216361,0.009599467,0.013433965,0.026233254,-0.02329259,-0.0034325367,0.050097052,-0.014661004,-0.00280315,0.005341852,0.0024990349,-0.013835926,0.025260085,0.024667721,-0.012598309,-0.014301354,-0.023123344,-0.008097402,-0.03634575,0.005749102,0.0027608385,0.035816852,-0.024456162,0.011075088,-0.0093826195,0.0067857387,-0.007208856,0.00066145085,0.008631587,-0.00438455,0.0415924,0.012577153,0.0058654593,-0.0023165655,0.023356058,-0.013708991,-0.030231709,-0.004786511,0.04751604,-0.022509824,0.019093154,0.0176334,-0.02441385,0.019526849,0.036070723,-0.03956144,-0.012799289,-0.0053550745,-0.0200769,0.009017681,-0.042480946,0.023186812,-0.026592903,0.0058178585,0.0126723545,0.024054201,-0.026952554,-0.037911285,-0.0028005056,0.013465699,0.014893718,0.020478863,0.012471373,0.016607342,0.011730919,0.007584372,-0.021832837,-0.003659962,-0.013317607,-0.0023284657,-0.080815345,-0.0024382116,-0.012778133,0.03930757,-0.013962861,-0.004032834,0.035964943,0.0050165807,-0.0021631857,-0.013825348,0.0038344979,0.0055745663,-0.013550322,0.035287958,-0.00749446,0.025302397,-0.083269425,0.02502737,0.03714967,0.0058337254,-0.010620236,0.0021658302,-0.026592903,-0.050097052,0.010657259,-0.013169517,-0.024159981,-0.0011020876,0.034991775,-0.028729644,0.026064007,-0.029131604,-0.008028645,0.010763039,0.046289,-0.03196649,0.0074045477,-0.0059606605,-0.00892248,-0.029448943,-0.014724472,0.0048790677,-0.004863201,0.020108635,0.0376151,0.036218815,0.003874165,0.0007219434,0.040301893,0.0013949638,-0.016956413,0.020891402,0.002335077,-0.012302127,0.002016417,-0.0071189436,0.017675713,0.0031654441,0.003104621,-0.003874165,0.012196347,-0.027354514,0.0081978915,-0.013127205,-0.007346369,0.031564526,-0.025196617,0.05593607,-0.005786125,0.0048314673,-0.024667721,0.021832837,0.028941203,-0.011678029,-0.019431649,0.010424545,0.0052916068,-0.0020785623,0.013296451,0.008843145,0.007642551,0.018839285,0.025090838,-0.038249776,-0.058432456,-0.021980928,-0.0029909082,-0.004373972,-0.03714967,0.025175462,0.008906613,0.024286916,0.007811798,0.0039931666,-0.041084662,0.03666309,0.019135466,-0.013994595,-0.0004984847,0.036684245,0.030104775,0.007584372,0.02401189,0.021452032,0.0016290004,-0.01483025,-0.014809095,0.0001525535,0.012608887,-0.0224252,0.014555225,-0.009456665,0.003974655,0.029237384,-0.002268965,-0.041021194,0.036747713,-0.01182612,0.026127474,-0.029427787,-0.0061457744,0.0044982624,-0.00785411,0.009049415,0.015031232,0.02095487,-0.05153565,-0.0012296838,0.0027978611,-0.0030147086,0.0058390144,0.0003659301,0.034441724,0.032601163,0.024815813,-0.042332854,0.01773918,0.0175382,0.010979886,-0.025154306,0.028116124,-0.03945566,0.019082576,-0.007959888,0.025281241,0.015062965,-0.0017149461,0.022002084,0.02542933,-0.027756475,0.012989691,-0.00044228949,0.012333861,-0.0047679995,-0.013634945,0.011170289,-0.03537258,-0.0039720107,-0.0012872012,0.022552136,0.022954097,-0.012238659,-0.0215155,-0.05572451,0.031077944,0.0065054237,-0.027904566,-0.0041015903,-0.018532524,-0.01081064,0.00017370936,0.014005173,0.029343164,0.0015985889,0.029597035,-0.08436953,0.012767555,-0.037995905,0.0041253907,0.015105276,-0.011699185,0.036049567,0.0010379589,-0.011149133,0.01584573,-0.013550322,-0.0046013976,-0.0231445,0.006754005,0.024963902,-0.025048526,0.026677527,-0.0040513454,-0.01045099,0.017971894,0.0020653398,0.0184479,-0.03501293,-0.0026391922,0.03789013,-0.022086708,-0.00805509,-0.015560128,-0.013497432,0.04362336,0.013201251,0.013497432,-0.015803419,0.032812722,-0.011646295,-0.0079175765,0.017199706,0.014724472,0.053397365,0.023821486,0.04379261,-0.056909237,0.022234797,0.0066323588,-0.026444813,0.03399745,0.03319353,-0.010805351,0.028602708,-0.03378589,0.0012058835,-0.037868973,-0.011445315,0.023779174,0.0048103114,-0.049758557,-0.03475906,-0.0017427132,-0.035668764,-0.0117732305,-0.013095471,0.039434504,-0.023694552,-0.0019132822,-0.03308775,0.009811025,0.023694552,0.0108952625,-0.023736864,-0.023165656,0.0024263116,-0.0007847498,0.010726016,0.0028983515,-0.014089796,0.004291993,0.0352668,-0.010509169,-0.0011681996,0.023165656,-0.010339921,0.010033161,-0.00075301604,-0.026000539,-0.0050747595,0.04878539,0.05593607,0.027714163,0.021282785,0.017051615,0.027121799,0.06422916,0.02365224,0.013285873,-0.0247735,0.02604285,-0.02839115,0.02502737,0.017749758,0.017189128,0.022340577,-0.0028322395,0.018765239,0.029808592,0.023165656,-0.0000928874,0.02564089,0.0022187198,0.023313746,-0.014597536,-0.026423657,-0.015105276,0.027798787,0.015687063,0.042946376,-0.014957186,-0.02441385,0.015782263,0.005267807,-0.019907655,0.010001428,0.004802378,-0.004982203,-0.020013435,-0.027714163,0.021769369,0.018744083,-0.006203953,0.04292522,-0.02090198,-0.009599467,-0.027439138,0.02701602,0.033214685,-0.013444543,0.0038979654,-0.00021304602,-0.057205416,0.02212902,-0.011022198,0.0144600235,-0.015940933,0.01131838,-0.03287619,0.030358644,-0.013613789,-0.018014206,-0.0060875956,0.020616375,-0.028052656,0.05276269,0.040386517,0.013423387,-0.02752376,0.026931398,0.019188356,-0.0071242326,0.007452148,0.0024977126,0.016903523,-0.01815172,0.011582828,-0.033828203,-0.001984683,-0.01151936,0.035393737,0.012852179,0.017781492,-0.0123655945,0.020193258,0.0470083,0.008345983,-0.016660232,-0.0021169072,0.011942477,-0.0031813108,0.021314519,-0.012323283,-0.022848317,0.0020587286,0.030612515,0.018225765,0.05081635,0.053608924,-0.009557155,-0.0062303976,-0.002120874,-0.007700729,0.009631201,0.01611018,-0.014100374,-0.019558582,-0.04823534,-0.008658032,-0.020880824,-0.0012614175,0.0044215727,-0.007166544,0.033722423,-0.02063753,0.0062356866,0.043009844,0.0055692773,-0.0029115737,0.026592903,-0.03059136,0.010244721,-0.01748531,-0.053905107,-0.013592633,0.0421213,0.012471373,0.022404045,-0.01570822,-0.027206423,-0.013984017,-0.0010379589,0.016522719,0.0064578233,0.023863798,0.0406827,0.007780064,0.018902753,-0.028729644,-0.022467513,-0.016395783,0.0036414505,-0.0017294907,-0.0120799905,-0.035393737,0.031395283,-0.010123074,0.042692505,0.014259043,0.0036229393,-0.004955758,-0.034780215,-0.022192486,-0.0013255462,-0.017167972,-0.020478863,0.0114876265,0.051958766,-0.007743041,0.0029036405,0.015665907,-0.00999085,-0.01238675,-0.009112882,0.032283828,0.009440798,0.022298265,-0.009594178,-0.03475906,0.02752376,-0.031331815,-0.029935528,-0.0051355828,0.044131104,-0.010218276,-0.051408716,0.004961047,-0.026275566,-0.02976628,-0.017083349,-0.00917635,0.025577422,-0.0082137585,0.029406631,0.010784195,0.007319924,-0.031606838,-0.0016567674,0.028687332,0.0085099405,0.0374247,-0.018373856,-0.017866116,0.014174419,-0.010059606,0.02146261,0.038419023,0.031924177,0.0068439175,-0.014861984,0.016300581,0.0032500674,0.018014206,0.027946878,-0.05047786,0.017210284,0.021430876,-0.03801706,0.0160044,0.010916418,0.014227309,-0.0044771065,0.026423657,-0.03869405,-0.008996525,-0.0008601175,0.007975755,-0.0028507507,0.03048558,-0.011413581,-0.010382233,0.015158166,-0.008404162,0.015253368,0.031141412,-0.0037736748,-0.011202022,0.018014206,-0.014819673,-0.018775817,-0.015316836,-0.008874879,-0.017781492,0.0011741497,-0.037191983,-0.024985058,-0.035203334,-0.024879279,-0.010133652,0.00025816748,-0.0028005056,-0.015993822,-0.02329259,-0.040407673,-0.0017929582,-0.019748986,0.02676215,-0.023969578,0.025598578,-0.013359919,-0.04123275,-0.019378759,0.00856283,-0.007150677,-0.017654557,-0.0060135503,-0.018310389,0.011159711,0.0029353742,0.007304057,-0.0015060321,0.013391653,-0.017442998,-0.024329226,-0.010540903,-0.014216731,-0.0023073098,0.030252865,0.0049636913,0.0039244103,-0.02253098,0.00405399,-0.0071242326,0.011752075,0.067867965,-0.005167316,-0.005526966,-0.018934486,0.015919777,-0.02380033,-0.005532255,0.00034576593,-0.0016171003,0.015940933,-0.013634945,0.0002903971,-0.003781608,0.01549666,-0.0095836,0.017876694,0.029745124,-0.031162567,-0.021547234,-0.008827278,0.021124115,0.003916477,-0.0021750857,-0.022192486,-0.018056517,-0.059871055,-0.038249776,-0.0020468284,-0.0024223449,-0.023525305,-0.04679674,-0.031501062,-0.002417056,-0.0058707483,-0.008985947,-0.014671582,-0.011350114,-0.0043369494,0.016194804,-0.025915915,0.05432822,0.011339536,-0.03410323,-0.0014928096,0.03844018,0.032135736,-0.012503107,0.021536656,-0.023884954,-0.040534608,0.020626953,-0.013592633,-0.0070766318,-0.04296753,0.0020798845,0.022404045,0.003995811,0.00017536216,0.022192486,-0.012788711,-0.0153697245,0.004781222,-0.0003897304,-0.023081033,0.012566575,0.015486082,-0.020732732,-0.00606644,-0.012968536,-0.011455893,-0.01983361,0.0031627996,0.020150946,0.0032500674,0.0049848473,-0.019399915,-0.013444543,-0.027502606,-0.024456162,0.04317909,-0.03537258,0.032029957,0.013783036,0.005177894,0.00033039486,0.035711076,-0.0052334284,0.019124888,-0.038249776,-0.0002854387,0.018331544,0.013613789,-0.00430786,-0.0066958265,-0.016120758,-0.024731189,0.045315832,-0.014586958,-0.005479365,0.038736362,-0.016681388,0.011445315,-0.032241516,0.05348199,0.003506582,0.0048552677,-0.029068138,-0.037530478,-0.0031337102,-0.041105818,0.022679072,-0.007515616,-0.002467301,-0.00063864223,0.042396322,-0.008166158,0.0033717137,0.0071877,-0.0055798553,-0.005246651,0.049927805,0.019495117,0.007885843,-0.03442057,-0.011445315,-0.028771956,-0.010794773,-0.0058866153,-0.030210553,0.004913446,0.00036361616,0.052974246,-0.02564089,-0.0044004167,-0.0007953277,-0.002758194,0.0014253753,0.037488166,-0.003979944,-0.001417442,0.00054773816,-0.00025205212,0.03120488,-0.012788711,-0.022679072,-0.0009612689,0.007716596,-0.00078342756,0.012259815,-0.026021695,0.04747373,0.0013334797,0.026444813,-0.010175964,-0.028602708,0.004117457,-0.0076742847,0.009467243,0.0030517313,-0.021420298,0.0343571,0.006045284,0.013412809,-0.0055798553,0.031077944,0.03431479,0.023419525,0.022869473,0.01003845,-0.01779207,0.041930895,0.026275566,0.033807047,0.011678029,0.027946878,-0.0014928096,0.0022464867,-0.009038837,0.018469056,-0.02411767,-0.027587228,0.00047931224,0.02253098,0.013920549,0.019262401,-0.023186812,-0.024752345,0.0046093306,0.022806006,-0.011688607,0.014026328,-0.020108635,-0.017263174,0.024096513,0.0055639884,0.016956413,-0.009446087,-0.007473304,0.028073812,-0.012185769,-0.0028375285,0.0401538,0.008018067,0.008885457,0.014534069,0.013539744,0.015232212,-0.0019979056,0.00540532,-0.0075209048,0.0064578233,0.0015298324,0.0041677025,-0.01126549,0.034484036,-0.010043739,0.012640621,-0.04036536,0.007711307,0.02564089,-0.012048257,0.05872864,-0.021875149,0.034843683,-0.017326642,0.00095531886,-0.037234295,-0.01412153,0.010747172,-0.012926225,0.0310991,0.024371538,-0.007161255,-0.024223449,0.009477821,-0.026825618,0.021705901,-0.010567347,0.0029247962,0.021050071,0.0020071613,-0.04078848,-0.045400456,0.0018339477,-0.03059136,-0.004950469,0.036790024,-0.0046093306,0.0040910123,-0.01942107,0.026296722,-0.021631857,-0.014608114,-0.011699185,0.042184766,0.011921321,0.0141532635,0.01513701,-0.019495117,-0.021547234,0.012164613,0.028348839,0.007483882,0.010726016,-0.019304713,-0.042036675,0.015581284,0.000917635,0.00015007431,-0.016490985,0.0023919332,-0.006616492,-0.023546461,0.03543605,-0.019632628,-0.0055745663,-0.008367139,-0.009948539,0.036578465,0.039773,0.016342893,-0.009726402,0.024244605,-0.0060029724,-0.021684745,-0.013095471,0.007780064,0.017019881,-0.0020349284,0.029787436,0.008102691,0.0117732305,0.012799289,-0.029829748,0.019548004,-0.0056063,-0.000582447,0.02987206,-0.02864502,0.020320194,0.019971123,0.04190974,-0.033172373,-0.012048257,0.025725514,-0.0017942805,-0.008483496,-0.0061299074,-0.021642433,0.0051408717,0.008933058,0.004265548,0.0007245879,-0.042692505,-0.02156839,0.012323283,0.0043924833,-0.017495887,-0.0064419564,-0.004725688,-0.014280199,-0.009446087,-0.005791414,-0.020267304,-0.017601667,0.0082084695,-0.005162027,0.013486855,0.029808592,0.015983244,0.027693007,0.0015205767,0.06575238,-0.019653784,0.012735821,-0.0068121837,0.019960545,-0.011170289,-0.02676215,-0.001028042,-0.0054476312,0.0022821873,-0.011392425,-0.03909601,0.007827665,-0.00764784,0.007584372,0.013349341,-0.024054201,-0.00029816525,-0.000047352743,0.00446124,-0.004775933,-0.016639076,0.01871235,-0.010260588,0.019854765,-0.003927055,-0.016152492,0.029639347,-0.0048208893,-0.021589546,0.012957958,-0.0067222714,0.007653129,0.00917635,-0.043157935,-0.024963902,-0.0045035514,0.016025556,0.02451963,0.030337488,-0.015940933,0.011540516,0.045992818,-0.0060928846,0.01712566,0.0031575107,0.018871019,-0.038820986,0.012217503,-0.0033320463,-0.0062462646,-0.043221403,-0.011910743,0.04658518,0.013825348,-0.041190438,0.009255684,0.010170675,-0.0066059143,-0.0072511677,0.012016523,-0.03222036,0.005653901,0.007764197,0.034293633,0.0135608995,-0.013994595,-0.029025827,0.0039138324,-0.0060188393,0.038736362,0.01733722,-0.003736652,-0.023863798,0.0064525343,-0.04307331,-0.017728603,0.022911785,0.031670306,0.024561942,0.015687063,0.017866116,0.009313863,-0.007430992,-0.037636258,0.0032844457,-0.0076848622,0.035034087,-0.0066429367,-0.03767857,-0.017442998,-0.03048558,0.03141644,-0.011752075,-0.01106451,0.022594448,0.0060347063]},{"id":"car-fleet","name":"Car Fleet","description":"There are `n` cars traveling to the same destination on a one-lane highway.\n\nYou are given two arrays of integers `position` and `speed`, both of length `n`. \n* `position[i]` is the position of the `ith car` (in miles)\n* `speed[i]` is the speed of the `ith` car (in miles per hour)\n\nThe **destination** is at position `target` miles.\n\nA car can **not** pass another car ahead of it. It can only catch up to another car and then drive at the same speed as the car ahead of it.\n\nA **car fleet** is a non-empty set of cars driving at the same position and same speed. A single car is also considered a car fleet.\n\nIf a car catches up to a car fleet the moment the fleet reaches the destination, then the car is considered to be part of the fleet.\n\nReturn the number of **different car fleets** that will arrive at the destination.\n\n**Example 1:**\n\n```java\nInput: target = 10, position = [1,4], speed = [3,2]\n\nOutput: 1\n```\n\nExplanation: The cars starting at 1 (speed 3) and 4 (speed 2) become a fleet, meeting each other at 10, the destination.\n\n**Example 2:**\n\n```java\nInput: target = 10, position = [4,1,0,7], speed = [2,2,1,1]\n\nOutput: 3\n```\n\nExplanation: The cars starting at 4 and 7 become a fleet at position 10. The cars starting at 1 and 0 never catch up to the car ahead of them. Thus, there are 3 car fleets that will arrive at the destination.\n\n**Constraints:**\n* `n == position.length == speed.length`.\n* `1 <= n <= 1000`\n* `0 < target <= 1000`\n* `0 < speed[i] <= 100`\n* `0 <= position[i] < target`\n* All the values of `position` are **unique**.\n","difficulty":"Medium","concepts":["Stacks"],"solutions":{"python":"class Solution:\n    def carFleet(self, target: int, position: List[int], speed: List[int]) -> int:\n        pair = [(p, s) for p, s in zip(position, speed)]\n        pair.sort(reverse=True)\n        stack = []\n        for p, s in pair:  # Reverse Sorted Order\n            stack.append((target - p) / s)\n            if len(stack) >= 2 and stack[-1] <= stack[-2]:\n                stack.pop()\n        return len(stack)\n","javascript":"class Solution {\n    /**\n     * @param {number} target\n     * @param {number[]} position\n     * @param {number[]} speed\n     * @return {number}\n     */\n    carFleet(target, position, speed) {\n        const n = position.length;\n        const pairs = position.map((p, i) => [p, speed[i]]);\n        pairs.sort((a, b) => b[0] - a[0]);\n\n        let fleetCount = 0;\n        const timeToReach = new Array(n);\n        for (let i = 0; i < n; i++) {\n            timeToReach[i] = (target - pairs[i][0]) / pairs[i][1];\n            if (i >= 1 && timeToReach[i] <= timeToReach[i - 1]) {\n                timeToReach[i] = timeToReach[i - 1];\n            } else {\n                fleetCount++;\n            }\n        }\n        return fleetCount;\n    }\n}\n","cpp":"class Solution {\npublic:\n    int carFleet(int target, vector<int>& position, vector<int>& speed) {\n        int n = position.size();\n        vector<pair<double, double>> pairs(n);\n        for (int i = 0; i < n; i++) {\n            pairs[i] = { position[i], speed[i] };\n        }\n        sort(pairs.begin(), pairs.end(), [](const pair<double, double>& a, const pair<double, double>& b) {\n            return b.first < a.first;\n        });\n\n\n        int fleetCount = 0;\n        vector<double> timeToReach(n);\n        for (int i = 0; i < n; i++) {\n            timeToReach[i] = (target - pairs[i].first) / pairs[i].second;\n            if (i >= 1 && timeToReach[i] <= timeToReach[i - 1]) {\n                timeToReach[i] = timeToReach[i - 1];\n            } else {\n                fleetCount++;\n            }\n        }\n        return fleetCount;\n    }\n};\n","java":"class Solution {\n    public int carFleet(int target, int[] position, int[] speed) {\n        int n = position.length;\n        double[][] pairs = new double[n][2];\n        for (int i = 0; i < n; i++) {\n            pairs[i][0] = position[i];\n            pairs[i][1] = speed[i];\n        }\n        Arrays.sort(pairs, (a, b) -> Double.compare(b[0], a[0]));\n\n        int fleetCount = 0;\n        double[] timeToReach = new double[n];\n        for (int i = 0; i < n; i++) {\n            timeToReach[i] = (target - pairs[i][0]) / pairs[i][1];\n            if (i >= 1 && timeToReach[i] <= timeToReach[i - 1]) {\n                timeToReach[i] = timeToReach[i - 1];\n            } else {\n                fleetCount++;\n            }\n        }\n        return fleetCount;\n    }\n}\n","csharp":"public class Solution {\n    public int CarFleet(int target, int[] position, int[] speed) {\n        int n = position.Length;\n        double[][] pairs = new double[n][];\n        for (int i = 0; i < n; i++) {\n            pairs[i] = new double[] { position[i], speed[i] };\n        }\n        Array.Sort(pairs, (a, b) => b[0].CompareTo(a[0]));\n\n        int fleetCount = 0;\n        double[] timeToReach = new double[n];\n        for (int i = 0; i < n; i++) {\n            timeToReach[i] = (target - pairs[i][0]) / pairs[i][1];\n            if (i >= 1 && timeToReach[i] <= timeToReach[i - 1]) {\n                timeToReach[i] = timeToReach[i - 1];\n            } else {\n                fleetCount++;\n            }\n        }\n        return fleetCount;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def carFleet(self, target: int, position: List[int], speed: List[int]) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number} target\n     * @param {number[]} position\n     * @param {number[]} speed\n     * @return {number}\n     */\n    carFleet(target, position, speed) {}\n}\n","cpp":"class Solution {\npublic:\n    int carFleet(int target, vector<int>& position, vector<int>& speed) {\n        \n    }\n};\n","java":"class Solution {\n    public int carFleet(int target, int[] position, int[] speed) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int CarFleet(int target, int[] position, int[] speed) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/Pr6T-3yB9RM","embedding":[0.05518169,-0.021283403,0.035191257,-0.036607902,-0.032650292,0.022756264,-0.064266205,0.014537474,-0.0018214005,0.016752386,0.008797814,-0.047041602,-0.03460661,-0.014930987,0.020676268,-0.009393704,0.02299237,-0.027860682,0.004190908,0.049605057,0.023048587,-0.005385499,0.026533982,-0.05347272,0.036652874,-0.0004971608,0.052573264,0.016156496,0.00045745823,-0.044298258,0.080771245,-0.02579193,-0.0011763212,-0.007870249,0.016909793,-0.014818555,0.03498888,0.03723752,-0.028895058,-0.015245797,-0.004545069,-0.001275402,-0.010135757,-0.041375022,-0.009236299,-0.0005379175,0.012626128,0.0011102672,0.029614624,0.021541996,-0.05297802,0.021440808,-0.047221493,0.03177332,-0.008870895,-0.009826568,0.019608164,-0.0012522128,0.039373733,0.03208813,0.01462742,-0.024015503,-0.00042829616,-0.00381426,0.0018705896,0.017899195,0.030873863,0.032065645,-0.014470015,-0.005874579,-0.068358734,0.01655001,-0.0069989003,-0.024307827,-0.010343756,-0.00032341806,0.0076510063,0.020350216,0.051943645,-0.01088343,-0.01767433,-0.036607902,0.04229697,-0.03806952,-0.022025455,-0.050549485,-0.0130758565,-0.0036680982,-0.04308399,-0.08841663,-0.036270604,0.025657011,-0.016156496,-0.008038897,0.028130518,-0.0084548965,0.038271897,-0.0048683113,0.011614239,0.01661747,-0.016527522,0.008983327,-0.0034348015,-0.014886014,0.04360118,-0.006099443,-0.00342918,0.027298521,-0.02135086,-0.016066551,-0.017977897,-0.000013581889,0.046322037,0.023093559,-0.0058802003,0.019450758,-0.013345694,-0.026848793,0.027838195,-0.025094852,0.0031790184,-0.014357583,-0.003971665,-0.022598859,-0.033617206,0.045310147,0.006060092,-0.09921011,0.030131811,-0.00004468738,-0.003271775,-0.042431887,0.046726793,0.02064254,-0.00888776,-0.05203359,0.017235845,-0.019338327,-0.014233908,0.025184797,-0.018944815,-0.0031649645,-0.050549485,0.010911538,-0.0070213866,-0.025499607,-0.031818293,0.008421167,-0.027298521,0.020125352,0.038406815,0.012277588,0.041419998,0.02158697,0.00071429537,-0.030671485,-0.012783533,0.018427625,-0.017033467,-0.021373348,0.00011243213,-0.021317132,-0.034561638,-0.0052786884,0.027298521,0.006358037,-0.024622636,0.013795422,-0.03543861,-0.033392344,0.0046940413,-0.04184724,-0.011524294,-0.040880322,0.010776619,0.0120077515,-0.048750572,0.0039238813,-0.04184724,-0.023610746,-0.040812865,-0.009112624,-0.039058924,-0.04216205,0.026129227,0.0064536044,0.00032622885,0.0029119921,-0.024937447,0.032987587,0.0051662563,0.035730932,0.06084827,-0.012907209,-0.033369858,0.014987203,0.043623667,-0.019270867,-0.0029513433,-0.014413799,-0.020676268,-0.0071057105,-0.009315002,0.008218789,-0.013851639,-0.039238814,-0.04279167,0.049425166,0.0055091744,0.033999477,0.03175083,-0.030469107,-0.00398853,-0.016786117,-0.009315002,-0.0010976187,-0.020282757,0.018225249,0.008325599,-0.00260702,-0.030896349,0.034381744,-0.010220081,0.020001676,-0.020833673,0.06332178,-0.004382042,0.038294382,0.04007081,-0.04272421,-0.0022823722,-0.01802287,0.0193833,-0.019540705,0.00024559392,-0.03069397,0.008460518,-0.042634264,-0.0023132912,-0.017022224,-0.022475183,-0.00794333,0.029772028,-0.04335383,-0.0080445185,-0.024330312,-0.02774825,0.042881615,-0.005357391,0.02925484,0.03732747,-0.02585939,-0.06291702,-0.01774179,0.009590461,0.062377345,0.046456955,-0.043623667,0.021395834,0.016999738,-0.045332637,0.04335383,-0.029817,-0.041419998,-0.03530369,-0.016392605,-0.013469369,-0.025522094,-0.037462387,0.025342202,0.019990433,0.009005814,-0.00058956596,-0.015819201,-0.048165925,-0.0077184658,-0.0016443199,-0.00636928,0.01340191,-0.09939,-0.010967754,0.012221373,0.0035106933,0.011929049,0.03555104,-0.0028178303,0.03310002,0.044658042,0.0140202865,-0.0018719949,-0.03188575,0.021901779,-0.014065259,0.005287121,0.017899195,-0.014110233,-0.034134395,-0.028355382,0.01277229,-0.029434731,0.019495731,0.008505491,-0.023385882,0.00062399835,-0.045579985,-0.013019641,0.012873479,0.010147,-0.022171617,-0.005025716,-0.044950366,0.03552855,0.0005783228,-0.025342202,-0.0329651,-0.072181426,0.005014473,-0.056036174,0.03321245,0.015965363,0.014683636,0.0016429145,0.050504513,0.081131026,0.060758322,-0.00035714768,0.0010463215,0.018382654,0.004623771,-0.019855514,-0.03786714,-0.0081063565,-0.0433988,0.008589814,-0.0042836643,0.01997919,-0.001240267,0.0062512266,0.019360812,0.027860682,0.02925484,0.0015740498,-0.022936154,0.034449205,0.008848408,-0.020372702,-0.009461164,0.024757555,0.053247858,-0.040160757,-0.016887305,-0.019540705,0.01427888,0.04668182,-0.025387175,0.019079732,-0.0379346,0.01886611,-0.046636846,-0.0022373993,-0.020271514,0.0023751287,-0.01277229,-0.034966394,-0.019574434,0.06242232,-0.007060738,0.017280819,-0.05522666,0.00822441,0.02673636,-0.015504391,0.025364688,-0.012839749,0.0073530613,-0.01557185,0.03622563,0.038361844,-0.01928211,0.0059757675,0.0004897825,0.037957087,-0.030559054,0.009843433,0.006886468,0.02522977,-0.00080529513,0.006346794,-0.027658304,-0.05756525,0.03552855,-0.043061506,0.036383037,0.015639309,-0.002792533,0.048390787,0.07613904,0.086527765,0.0038508005,0.030491594,0.00092264614,-0.033122506,-0.0009451326,0.005416418,-0.04474799,-0.018416382,-0.009219435,0.04150994,-0.011338781,0.003415126,0.037642278,0.028085547,0.027568359,0.050729375,0.013345694,0.002673074,-0.010354999,0.022857452,-0.01333445,-0.011186997,0.0040531782,-0.01239002,0.013435639,0.008533599,-0.015358229,0.031930726,0.016066551,-0.0043539344,0.041172646,0.020001676,-0.02365572,0.019731838,0.03447169,0.03465158,-0.05329283,0.03166089,0.019473245,0.051493917,-0.004072854,-0.036720335,-0.015493147,-0.026871279,0.052213483,0.03600077,0.010248189,-0.042431887,0.038496763,0.08850657,0.020091621,0.0065772794,0.00979846,0.060263623,-0.044253286,-0.0053658234,-0.042949073,-0.025881877,-0.012153913,-0.011906562,0.039463677,0.000017732216,-0.020440161,0.014380069,-0.0147286095,-0.04391599,-0.003398261,0.006875225,0.03051408,-0.024217881,-0.0016682118,0.02050762,-0.01780925,0.056171093,0.0023104802,0.0027025873,-0.018764922,0.032380454,-0.02837787,0.05581131,-0.04517523,0.015212067,-0.041892212,-0.034021962,-0.024577664,0.024262853,-0.046726793,0.008949597,0.041689835,-0.065345556,-0.017977897,0.008033276,-0.00011831725,0.021373348,0.025926849,-0.009449921,-0.03076143,-0.020395188,0.00808387,-0.040925294,-0.0027784791,-0.013503099,-0.0018003195,-0.08643782,0.011872833,0.002585939,0.009894027,-0.0042836643,0.00091843,-0.043556206,-0.012524939,0.016898548,-0.012895965,0.011153268,-0.0023062641,0.026039282,0.001146105,-0.0071787913,-0.021508267,-0.0077128443,0.016370118,0.005430472,0.0023329668,-0.069078304,-0.0037439899,-0.0148410415,-0.004542258,-0.017539412,-0.015043419,-0.025049878,-0.04744636,-0.024442745,0.008100735,-0.022924911,-0.025836904,0.010298783,-0.03240294,-0.006588523,-0.017663088,-0.0031930725,-0.027410954,-0.01137251,-0.012446237,0.010045811,-0.029682083,0.017438224,-0.018663734,0.021721888,0.021946752,0.013008397,-0.006875225,-0.031121213,-0.02123843,-0.012198886,-0.0033476667,-0.00997273,-0.016089037,-0.054057367,-0.015279527,-0.0035781525,0.02428534,0.006723441,0.010012081,-0.009270029,0.025657011,-0.017157143,0.002075778,0.05378753,0.009084516,-0.020001676,0.02334091,-0.015931632,0.029164895,-0.0058914437,0.002257075,-0.054642014,0.044972852,0.008741599,-0.015897904,-0.019012272,-0.005399553,0.053202882,-0.007274359,0.0043651774,0.01910222,-0.029277327,-0.01102397,0.015324499,-0.03026673,0.029906947,0.0041150157,-0.026781334,0.019405786,-0.012108941,0.031031268,0.027815709,-0.013986557,-0.020462647,-0.013345694,-0.0065829013,-0.008443653,-0.03863168,-0.008904625,0.0053630127,-0.035078824,0.0069932784,-0.04297156,-0.028512789,-0.0016007525,0.033752125,0.004224637,0.02340837,-0.012300075,0.027410954,-0.031593427,-0.026511496,0.003684963,-0.031076241,-0.018034114,0.00037348547,-0.0043398803,0.00019956703,0.0002924992,0.012108941,0.039508652,0.035955794,0.0011643752,-0.0028234518,-0.06368156,0.023880584,-0.009686028,0.027253548,-0.026893765,-0.021215944,-0.022194102,0.023565775,-0.012322562,-0.01683109,0.010799106,0.0075610606,-0.005273067,0.010602349,0.017944168,0.0014728609,-0.0014201583,-0.02938976,0.0046518794,0.042409398,-0.015448174,0.010051432,0.0044354475,-0.009792838,-0.014121476,-0.008825922,0.023318423,-0.0492003,0.025926849,0.009775974,0.0032071264,-0.029839488,0.009129489,0.012086454,-0.0034066935,-0.0014025908,0.00857295,-0.023048587,0.019405786,-0.021789346,0.029164895,0.015897904,0.0361132,-0.029929433,-0.016302658,0.040340647,0.0058464706,0.0047333925,-0.046861712,-0.019372055,0.034201853,-0.0011903752,-0.04202713,0.0036175037,-0.00878095,-0.0031509104,-0.035955794,0.033257425,0.023520801,0.016819846,-0.026106741,0.019135948,-0.010040189,0.021182213,0.0104168365,-0.0077128443,-0.041577403,0.044140853,0.023385882,-0.000005780812,0.030356675,0.030131811,0.0076060337,-0.045152742,-0.029817,0.0023681019,-0.005441715,-0.02208167,-0.04587231,-0.026106741,0.020620052,0.00215167,-0.008050141,0.015380715,-0.011647969,0.02453269,-0.03901395,0.020271514,-0.043331344,0.03600077,0.015448174,-0.024442745,0.0071787913,-0.016100282,-0.02365572,0.017708061,-0.004991987,0.01588666,-0.05486688,-0.027006198,-0.013244505,0.038226925,0.027838195,-0.016415091,0.032830182,-0.0035472338,-0.019360812,0.03579839,-0.0062961993,-0.028670194,-0.06165778,0.031638402,-0.029209867,0.000056699173,-0.027883168,-0.0005010257,0.0361132,0.007145062,-0.0046069063,0.03424683,-0.013829152,0.060353566,-0.030311702,-0.010422459,-0.043331344,0.0055400934,0.043151453,-0.007993924,0.035640985,-0.005427661,0.024217881,0.030401647,0.0021896157,0.010973376,-0.0063636587,-0.025432147,-0.031436022,-0.016954765,0.009084516,0.018798653,-0.019922974,0.026151713,-0.018247735,0.01994546,0.0018593464,0.0076959794,-0.016178984,-0.016673684,0.0064479825,-0.006183767,-0.020350216,0.07038251,0.013255748,0.011282564,-0.027073657,0.01242375,-0.033302397,0.022070426,0.023993017,0.0016668063,0.037147574,-0.0034797743,0.031615917,-0.039935894,-0.006386145,-0.030041866,-0.033167478,0.0062961993,-0.0031621538,0.00002268406,0.030401647,-0.03415688,-0.015448174,-0.0010491323,-0.018101573,0.0007856195,0.026196687,0.008932733,-0.0006032686,-0.006026362,-0.028737653,0.028242951,-0.011451213,0.028018087,-0.015391959,0.065030746,-0.012232616,0.010557377,-0.01371672,-0.00014212124,-0.014009044,0.01921465,0.010624836,-0.011715428,-0.010546134,-0.0066222525,0.03121116,-0.0012536183,0.0039323135,0.018214006,0.04542258,0.008286248,0.02243021,0.028265437,0.027321007,-0.020451404,-0.00636928,0.032312993,0.023925558,0.027658304,0.06561539,-0.023363397,-0.023790639,0.03134608,0.019068489,0.056126118,-0.02057508,-0.03377461,-0.0029991271,0.03184078,-0.035753418,-0.018978544,0.031975698,-0.030131811,-0.023138532,0.006481712,0.023993017,-0.017640602,-0.002327345,0.049784947,-0.023048587,0.008533599,0.034831475,-0.00051262026,-0.001117997,0.014380069,0.008336842,-0.050864294,-0.023858098,0.0038508005,0.016943522,0.042589292,-0.032178074,-0.02831041,0.032560345,-0.0038648546,-0.0032605317,-0.011400618,-0.017134657,-0.0095230015,0.0050791213,-0.01588666,-0.031593427,-0.031593427,0.020496378,0.0040110163,0.0029372894,0.03377461,0.009967108,-0.0049638785,-0.0024102638,0.01560558,0.0076172766,-0.021643184,0.0347865,-0.056980602,0.04794106,0.009489272,-0.0073530613,-0.008179437,-0.014470015,0.022969885,0.030986294,0.027163602,0.0225314,-0.0101694865,0.026533982,0.042499345,0.025252257,0.0022022643,-0.05293305,0.029794514,-0.008758463,-0.021744374,0.008640409,-0.025004907,0.0026266957,0.037844654,0.0045928527,-0.009933379,-0.009674785,0.0153132565,0.025949335,0.010068297,-0.0041487454,-0.032492887,0.00822441,-0.021159727,0.052438345,-0.016594982,0.017887952,0.042049617,0.03278521,0.019338327,0.012165156,0.022059184,0.029434731,0.016505037,-0.06548047,-0.030491594,0.0022528588,-0.012727317,0.017606871,0.021710644,-0.04573739,0.045917284,0.01273856,0.001289456,-0.02264383,0.0053658234,0.051628835,-0.04731144,0.018978544,0.014413799,0.00808387,-0.054776933,0.0056356606,-0.032987587,-0.028400356,0.0025550202,-0.022373995,-0.0005853498,0.016437577,-0.001606374,0.012311318,0.0049498244,-0.015875416,-0.006127551,0.019135948,0.030896349,0.020383945,0.0077915466,-0.0014559961,-0.0038508005,0.010669809,0.03712509,0.008162573,0.02264383,-0.04744636,0.008033276,0.052708182,-0.003327991,-0.0012768074,-0.03971103,0.053067964,0.020698756,-0.016909793,0.020721242,0.0036680982,-0.005472634,-0.012491209,-0.0035106933,0.013626774,0.0028473437,0.05927422,0.04052054,0.013278235,-0.009922136,-0.0075104665,0.0035950174,-0.023678206,0.0015136176,-0.020012919,0.003173397,-0.010984619,-0.050369594,0.0036062605,-0.019394543,-0.047716197,-0.013233262,0.039148867,0.0021643185,-0.036607902,0.021215944,-0.015065906,-0.03622563,-0.040857837,-0.0118840765,-0.009315002,-0.00065421447,0.025117338,-0.029119922,0.0023104802,-0.016358875,-0.01239002,-0.004190908,-0.026713874,0.03233548,-0.018854868,-0.0037243143,0.019956702,0.015639309,-0.02299237,0.032043155,-0.038451787,0.01375045,-0.015302013,0.011625483,-0.014380069,0.022014212,-0.006082578,-0.026983712,-0.001143997,0.030716458,0.00071816024,0.017932925,-0.021058537,-0.010326891,0.0028951273,0.006830252,-0.009196948,0.011040835,0.015819201,-0.010697917,-0.003713071,0.021823077,-0.039688542,-0.008589814,0.0027419385,0.013278235,0.02088989,0.012592399,0.010962132,-0.0104168365,-0.006341172,0.01221013,-0.04391599,0.011007106,-0.003030046,0.014953474,0.01088343,-0.008848408,0.00046202578,-0.025432147,0.011895319,0.02264383,-0.013165803,0.018169032,0.012693588,-0.033954505,-0.008387437,-0.0021010754,0.019709352,0.027388467,0.01798914,0.0011194024,-0.006009497,0.008882138,0.0009142138,-0.0008882138,-0.03685525,0.006672847,-0.016898548,-0.009877163,0.011636726,0.043758586,0.012255102,0.02365572,-0.0261742,0.0052365265,0.009601704,-0.016493794,-0.0057902546,0.014514988,-0.013289478,0.043443777,-0.0108497,-0.047221493,-0.019394543,-0.0062793344,-0.02554458,0.03800206,-0.023925558,-0.0029991271,0.021654429,-0.0048120953,0.0046659335,0.0017876709,0.008533599,-0.046142146,0.054057367,0.024959933,-0.026983712,0.0038508005,-0.013458126,0.005489499,0.017966654,0.0076060337,-0.020114109,0.005762147,-0.038271897,0.0129521815,0.026061768,0.0147286095,-0.017820492,-0.04717652,-0.07775806,-0.034314286,0.0013555099,0.00272929,0.0057256063,0.011737915,-0.019248381,0.00045429607,0.008331221,0.025274742,0.010473053,-0.025409661,0.012345048,0.016370118,0.026264146,0.054372177,-0.01928211,-0.016089037,0.041397512,-0.009792838,0.004986365,-0.027253548,0.007330575,0.012075211,-0.023161018,-0.0022739398,-0.015358229,0.0030356676,-0.039800975,0.023700694,0.027860682,-0.010034568,0.039238814,0.008477382,-0.017708061,0.036428012,-0.0051915534,-0.029727055,0.001998481,0.0066784685,0.018911084,0.0065829013,0.006802144,-0.009596082,0.0460522,0.025319716,-0.0113612665,-0.007369926,-0.002372318,0.033887044,-0.008730355,0.00037770168,-0.024217881,-0.005483877,0.011782887,-0.060128704,0.03989092,-0.039036434,0.0023526424,0.022846209,0.00356972,0.011192619,-0.0012065372,-0.0041768537,-0.0048907977,-0.018854868,-0.009674785,-0.007797168,-0.022801235,-0.016426334,-0.023498315,0.005228094,-0.025836904,0.014807312,0.022137886,-0.03278521,-0.021856805,-0.046456955,0.01981054,0.0018804274,-0.039148867,-0.036652874,-0.030671485,-0.022610102,-0.0012936722,0.014975959,-0.018393897,0.0025212904,0.01886611,0.030311702,-0.0059476597,-0.006796522,0.0020771837,-0.059049353,0.006627874,0.014380069,0.018281464,0.0068808463,0.014076503,-0.009950244,-0.017539412,-0.021272158,0.029974407,0.010354999,-0.0035556662,-0.006515442,0.03177332,0.0031790184,-0.033437315,-0.009494893,0.013840395,-0.022070426,0.027096143,-0.022284048,-0.027703278,0.044500638,-0.0045225825,0.00023575612,-0.012288832,-0.015481904,0.021497022,-0.03503385,-0.007937708,-0.0048655006,-0.0329651,0.0075385743,0.014391312,0.03069397,-0.041060213,-0.012030238,0.020934863,0.003926692,0.012817263,0.018101573,0.018978544,0.016808603,-0.00065597123,0.01560558,0.014773582,0.024150422,-0.00559912,0.034808986,0.03498888,-0.015391959,0.013491856,0.0061669024,0.0012311318,0.0030525324,0.035326175,0.018742437,0.048390787,-0.034584124,0.04857068,0.03215559,-0.01522331,-0.023565775,0.024735069,0.0017946978,0.0023905882,-0.013064614,0.015144608,0.022610102,-0.0045478796,-0.0041796644,0.003645612,0.016111525,-0.03820444,0.016089037,-0.011428726,-0.0046996633,0.008955219,-0.0021713455,0.00878095,0.04238691,0.0037243143,-0.028985003,0.0054445257,0.017382007,0.016583739,-0.022025455,-0.012165156,0.04888549,0.0022837776,0.0042049615,0.014087746,0.019293353,0.014559961,-0.035416123,-0.009213813,0.0041206377,-0.01732579,0.018944815,0.011749158,-0.031593427,0.038181953,-0.005357391,0.03622563,-0.001392753,-0.00990527,-0.015987849,0.019878,-0.025274742,-0.0023006424,-0.020518864,0.035281204,-0.006268091,-0.0075498177,0.009084516,0.0062062535,0.003915449,-0.0059982543,0.01931584,0.005289932,-0.008764084,0.019192165,0.02340837,-0.026511496,-0.016066551,0.013705477,0.013480612,-0.008381816,0.008331221,-0.011760401,0.030131811,-0.035281204,0.024690095,-0.025746958,-0.030379161,0.0058352277,0.0004918906,0.0015585904,0.018483842,0.033324882,0.002183994,0.019900488,-0.03134608,0.005644093,-0.019057246,0.008584193,-0.024959933,0.032650292,-0.010905917,-0.01592039,-0.02274502,-0.046906684,0.017573142,0.00036575578,-0.029592136,0.011558023,-0.012097697,-0.02204794,-0.0042780424,0.016392605,0.048255872,0.004857068,0.009461164,0.03712509,-0.0019830216,0.0101694865,-0.0025381553,0.0051100403,0.02158697,0.015358229,0.014503744,0.011771644,0.010624836,0.014380069,-0.010799106,-0.00083761936,0.013862882,-0.0021671294,0.012693588,-0.008173816,0.0016696171,0.008617923,0.020080378,0.029659595,-0.026938738,-0.023228478,0.01827022,-0.03276272,-0.045085285,0.022149129,-0.0058352277,0.031368565,0.016707415,0.021373348,0.008426788,0.0155606065,-0.034696557,-0.02148578,-0.024240367,-0.0053911204,-0.034404233,0.010096406,0.041262593,0.011080187,-0.0030441,-0.023813125,0.005784633,0.012637371,0.01557185,0.039171353,0.0063355505,0.020001676,0.05720547,-0.008803436,0.060218647,0.022205345,-0.019765569,0.010827214,0.0009781595,-0.007825276,0.00934311,-0.005312418,-0.01088343,0.0060657132,0.002067346,-0.042049617,0.037394926,-0.009641055,0.020777458,0.024330312,-0.020496378,0.009275651,0.015718011,0.021036051,-0.015684282,0.027523385,0.0018438869,0.026219172,-0.007499223,-0.050729375,-0.008213167,0.03534866,0.013671747,0.020946106,0.0064648474,0.00082637614,0.022486426,-0.007819654,-0.0018916706,-0.027051171,0.05482191,-0.025409661,0.0057256063,0.028130518,0.018427625,0.017280819,0.018011628,0.027838195,0.03593331,0.016077794,0.02372318,0.005343337,0.008511112,0.021440808,-0.0010252405,-0.03152597,-0.013300721,0.03912638,-0.012862235,-0.008910246,0.016178984,-0.0047615007,0.010894673,0.032672778,0.025049878,0.00398853,0.0062961993,0.022565128,0.019327084,0.008893382,-0.006268091,-0.046187118,-0.011625483,0.041734807,0.02522977,0.002827668,0.013705477,-0.0073193316,-0.029614624,0.013615531,-0.015144608,-0.021744374,0.01798914,0.03157094,0.032695264,0.008809057,0.0016218334,0.002848749,-0.048165925,0.0064929556,-0.002095454,0.018899841,0.007988303,-0.004328637,-0.0018438869,-0.030176783,0.008685382,0.020979835,0.01732579,0.015155851,0.01809033]},{"id":"largest-rectangle-in-histogram","name":"Largest Rectangle In Histogram","description":"You are given an array of integers `heights` where `heights[i]` represents the height of a bar. The width of each bar is `1`.\n    \nReturn the area of the largest rectangle that can be formed among the bars.\n\nNote: This chart is known as a [histogram](https://en.wikipedia.org/wiki/Histogram).\n\n**Example 1:**\n\n```java\nInput: heights = [7,1,7,2,2,4]\n\nOutput: 8\n```\n\n**Example 2:**\n\n```java\nInput: heights = [1,3,7]\n\nOutput: 7\n```\n\n**Constraints:**\n* `1 <= heights.length <= 1000`.\n* `0 <= heights[i] <= 1000`\n","difficulty":"Hard","concepts":["Stacks"],"solutions":{"python":"class Solution:\n    def largestRectangleArea(self, heights: List[int]) -> int:\n        maxArea = 0\n        stack = []  # pair: (index, height)\n\n        for i, h in enumerate(heights):\n            start = i\n            while stack and stack[-1][1] > h:\n                index, height = stack.pop()\n                maxArea = max(maxArea, height * (i - index))\n                start = index\n            stack.append((start, h))\n\n        for i, h in stack:\n            maxArea = max(maxArea, h * (len(heights) - i))\n        return maxArea\n","javascript":"class Solution {\n    /**\n     * @param {number[]} heights\n     * @return {number}\n     */\n    largestRectangleArea(heights) {\n        let maxArea = 0;\n        const stack = []; // pair: (index, height)\n\n        for (let i = 0; i < heights.length; i++) {\n            let start = i;\n            while (\n                stack.length > 0 &&\n                stack[stack.length - 1][1] > heights[i]\n            ) {\n                const [index, height] = stack.pop();\n                maxArea = Math.max(maxArea, height * (i - index));\n                start = index;\n            }\n            stack.push([start, heights[i]]);\n        }\n\n        for (const [index, height] of stack) {\n            maxArea = Math.max(maxArea, height * (heights.length - index));\n        }\n        return maxArea;\n    }\n}\n","cpp":"class Solution {\npublic:\n    int largestRectangleArea(vector<int>& heights) {\n        int maxArea = 0;\n        stack<pair<int, int>> stack; // pair: (index, height)\n\n        for (int i = 0; i < heights.size(); i++) {\n            int start = i;\n            while (!stack.empty() && stack.top().second > heights[i]) {\n                pair<int, int> top = stack.top();\n                int index = top.first;\n                int height = top.second;\n                maxArea = max(maxArea, height * (i - index));\n                start = index;\n                stack.pop();\n            }\n            stack.push({ start, heights[i] });\n        }\n\n        while (!stack.empty()) {\n            int index = stack.top().first;\n            int height = stack.top().second;\n            maxArea = max(maxArea, height * (static_cast<int>(heights.size()) - index));\n            stack.pop();\n        }\n        return maxArea;\n    }\n};\n","java":"class Solution {\n    public int largestRectangleArea(int[] heights) {\n        int maxArea = 0;\n        Stack<int[]> stack = new Stack<>(); // pair: (index, height)\n\n        for (int i = 0; i < heights.length; i++) {\n            int start = i;\n            while (!stack.isEmpty() && stack.peek()[1] > heights[i]) {\n                int[] top = stack.pop();\n                int index = top[0];\n                int height = top[1];\n                maxArea = Math.max(maxArea, height * (i - index));\n                start = index;\n            }\n            stack.push(new int[]{start, heights[i]});\n        }\n\n        for (int[] pair : stack) {\n            int index = pair[0];\n            int height = pair[1];\n            maxArea = Math.max(maxArea, height * (heights.length - index));\n        }\n        return maxArea;\n    }\n}\n","csharp":"public class Solution {\n    public int LargestRectangleArea(int[] heights) {\n        int maxArea = 0;\n        Stack<int[]> stack = new Stack<int[]>(); // pair: (index, height)\n\n        for (int i = 0; i < heights.Length; i++) {\n            int start = i;\n            while (stack.Count > 0 && stack.Peek()[1] > heights[i]) {\n                int[] top = stack.Pop();\n                int index = top[0];\n                int height = top[1];\n                maxArea = Math.Max(maxArea, height * (i - index));\n                start = index;\n            }\n            stack.Push(new int[] { start, heights[i] });\n        }\n\n        foreach (int[] pair in stack) {\n            int index = pair[0];\n            int height = pair[1];\n            maxArea = Math.Max(maxArea, height * (heights.Length - index));\n        }\n        return maxArea;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def largestRectangleArea(self, heights: List[int]) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} heights\n     * @return {number}\n     */\n    largestRectangleArea(heights) {}\n}\n","cpp":"class Solution {\npublic:\n    int largestRectangleArea(vector<int>& heights) {\n        \n    }\n};\n","java":"class Solution {\n    public int largestRectangleArea(int[] heights) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int LargestRectangleArea(int[] heights) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/zx5Sw9130L0","embedding":[0.013246106,-0.019635532,0.10170923,0.0010621877,-0.0098720975,0.02488399,-0.03259911,-0.017570922,-0.020048454,0.03566343,0.015756238,-0.01407195,-0.043965336,-0.02964346,0.0016720628,0.044030532,0.024601463,-0.014756531,-0.037532445,0.011572685,-0.011148896,0.008041115,0.00084146456,0.022536853,0.022884576,-0.01176828,-0.023297498,0.02053744,0.032468714,0.033098966,0.027970038,-0.007242436,-0.022471655,0.025818497,-0.015256384,-0.036489274,-0.008693096,0.009855798,0.01335477,0.02894801,0.032316588,-0.026101023,-0.040335968,-0.034424663,0.009698235,0.0066665183,0.048898667,0.0018323418,-0.001343355,0.014539204,0.010382817,-0.016125694,-0.022047866,-0.0074325977,0.02057004,-0.021950068,-0.0033359758,0.036424074,0.041357405,0.053245217,0.040270768,-0.015365048,-0.008568133,0.0058135083,-0.0059656375,-0.0024924737,0.038075764,0.014267544,0.019244343,-0.07210924,-0.041922458,-0.00024839843,0.026905134,-0.021504547,-0.0011518353,-0.061155934,0.022384724,0.041835528,-0.0028252564,-0.03733685,-0.0031784135,-0.021808805,0.0021664826,0.029187072,-0.01514772,-0.02386255,0.0106544765,-0.027361521,-0.04494331,-0.06832774,-0.008975622,0.012854916,0.05785256,0.013289572,-0.010160057,0.0026636191,0.056331266,0.017886046,0.030469304,-0.010469748,0.026970332,-0.0040422897,0.008758294,0.020982962,-0.015310716,0.011561818,0.03083876,0.043465484,0.0053924364,-0.002727459,-0.025883695,0.003102349,0.014702199,-0.03201233,0.02314537,-0.019494269,-0.031816732,-0.0029393532,0.016006164,0.0030235676,0.032338317,0.00018235129,-0.0143979415,0.02584023,0.017092802,0.022047866,-0.02964346,-0.035250507,-0.037423782,0.019733328,0.016940672,0.02727459,0.05359294,-0.010409983,-0.031599406,-0.040270768,0.014278411,0.034381196,0.042444043,0.013007046,0.023666956,0.091625236,-0.04781203,-0.008291041,0.021743607,0.0020754768,0.01802731,0.04359588,-0.019711597,0.035185307,0.008318206,-0.03527224,0.017668718,0.02790484,-0.049637582,-0.057417903,0.055635817,0.013017912,0.041400872,-0.01541938,-0.009703669,-0.042835232,-0.037575908,0.021178557,0.027709246,0.030338908,-0.0033468422,-0.013213507,-0.04337855,-0.047290444,-0.017168866,-0.039966512,0.04846401,-0.012387662,0.021482814,0.0017386193,-0.005229441,-0.018690158,-0.0354461,-0.04185726,-0.00048423265,0.019450804,-0.034881048,-0.034120403,0.03155594,0.02862202,0.049985304,-0.034989715,-0.014604402,0.0208091,0.02560117,0.051723924,0.010230688,0.010687076,-0.02353656,-0.03879294,0.044769447,0.0021012845,-0.02266725,-0.0008951173,-0.009230982,-0.03259911,0.031664602,-0.0047187214,0.010165489,-0.0671107,-0.029404398,0.023340965,-0.0012686488,-0.06167752,0.00214475,-0.02592716,0.009513508,-0.023449628,0.0043655643,0.0045584426,0.01598443,0.0020714018,0.010083992,0.08201937,-0.0331207,0.036489274,-0.012985313,-0.029839054,-0.028708952,-0.00042378844,0.019841993,0.010594712,0.03709779,0.03853215,0.013550364,-0.021265488,-0.026774738,0.0036103516,-0.02227606,-0.028708952,0.010670776,-0.023340965,-0.018092507,-0.009323346,0.035011448,-0.013539498,0.007899852,-0.018679291,-0.0044606454,-0.013593829,-0.037575908,0.013322171,-0.006748016,0.014387075,0.018016443,-0.005240307,-0.028035237,-0.05485344,-0.024753593,0.03931453,-0.00673715,-0.03890161,0.02670954,0.027644048,-0.004148237,0.0056559457,-0.07432598,-0.06128633,0.012811451,-0.043704543,-0.0033631418,-0.0037054324,-0.011518353,0.051419664,-0.0021787074,0.033577085,0.003094199,-0.009882964,0.04568222,-0.005949338,0.05381027,-0.013311304,-0.018733623,-0.058330677,0.0046969885,0.059504244,0.010616444,-0.0010499631,0.037880167,-0.006188398,0.026905134,-0.009035387,-0.019613799,0.00032123708,-0.019624665,0.0006832231,0.016125694,0.00032293494,-0.002808957,-0.0032191623,-0.02266725,0.01676681,0.04009691,-0.035945956,-0.017201465,0.01562584,-0.00929618,-0.0015253668,-0.042313647,-0.018451096,0.03290337,0.021602346,-0.019744195,0.067371495,0.01514772,0.023167102,0.004327532,0.05341908,-0.062851086,-0.08149778,0.0075195283,-0.014278411,-0.004455212,-0.02029838,0.02355829,0.019733328,0.045160636,0.018038176,0.057765625,-0.012289865,-0.041922458,0.012496326,0.006313361,-0.08419264,-0.006204698,0.043574147,-0.035467833,-0.00056946574,-0.02353656,0.0043737143,0.028665485,-0.021678409,0.023645222,0.012431128,0.012572391,0.010812039,0.0054060193,0.015484578,0.0044497787,-0.0022303227,0.06919705,0.010953302,0.02838296,0.004422613,-0.015028191,0.035163574,0.03068663,-0.004436196,-0.032794707,0.007796621,-0.0067860484,-0.011279292,-0.053723335,-0.0024055429,-0.047290444,-0.0030697498,0.006422025,-0.033729214,0.015756238,0.03853215,-0.0050827446,0.008448604,0.044074,0.047942426,-0.00020374445,0.019418204,0.024058145,-0.016842874,-0.0044986773,-0.036293678,-0.009116885,0.029621726,-0.000563693,0.031925395,-0.032316588,0.031925395,0.017310128,-0.0046073413,0.016332155,0.007307634,-0.010415416,0.0002701312,-0.015951833,-0.073065475,0.01919001,0.020320114,0.075890735,0.022428188,0.0232323,-0.01742966,0.04437826,0.011246693,-0.011518353,0.059504244,-0.031838465,-0.021308953,0.027948305,0.042509243,0.017527455,-0.020244049,0.010556679,0.025970627,0.0005185296,-0.06502436,0.017853446,-0.00023804144,0.0041183545,-0.035554763,-0.027557116,0.03177327,-0.019602932,-0.0014751098,-0.066458724,-0.018548895,-0.053766802,-0.053462543,0.015223785,-0.036337145,-0.003561453,0.020363579,0.0586784,-0.036771797,-0.050289564,0.019592065,0.0137242265,0.0010689793,0.019276941,0.034837585,-0.061503656,0.06580674,-0.005617914,0.053375613,0.00054807257,-0.024275472,-0.007476063,-0.038923338,0.049115997,0.016951539,-0.02353656,-0.0269486,0.007448897,0.024666661,-0.0016258807,0.033664018,0.065850206,0.0075249616,0.03844522,0.024797058,-0.039227597,-0.0044932445,0.009861232,0.040118642,-0.009366811,0.024862256,0.014213213,0.030664898,-0.00015484578,-0.014474005,0.038423486,-0.03216446,0.03218619,0.0011790012,-0.023427894,-0.05072422,-0.007562994,-0.013278705,0.013626428,0.009817766,-0.018277235,-0.040335968,-0.008513802,0.008856092,-0.011224961,0.004167253,-0.00281439,-0.04937679,0.024688395,-0.00844317,0.028078701,-0.0041428036,-0.04170513,-0.017657852,-0.0011593059,-0.0072587356,-0.035880756,0.040705424,0.013908954,-0.008057414,0.021971801,0.036228478,-0.009692803,-0.018929217,0.024036411,-0.01013289,0.03655447,-0.03987958,-0.010947868,0.027665779,0.04242231,0.015495445,0.0119856065,-0.011572685,0.00929618,0.049898375,-0.06684991,0.00818781,0.0034201902,0.030882224,0.007736856,0.015973564,-0.0065415553,-0.013539498,0.013702493,-0.0053652707,-0.01598443,-0.004080322,-0.024079878,0.031881932,-0.019037882,0.021602346,-0.022928042,0.04329162,0.0043438314,0.015234652,-0.029426131,-0.022949776,0.0013854622,0.031360347,-0.016951539,0.061938312,-0.017440524,-0.021113358,0.009127751,0.01569104,-0.0031186484,0.04105315,-0.014604402,0.03924933,0.006367693,-0.026470479,0.039423194,0.014571803,0.0038222459,0.0038168128,0.0031430977,-0.027318057,-0.032490447,-0.0367066,-0.0137242265,0.0056668124,-0.007628192,0.038488686,0.016636413,0.024970919,-0.041161813,-0.0030616,0.03027371,-0.023254033,-0.034055207,0.025144782,0.015321583,0.021004694,0.04733391,0.01395242,0.006981643,-0.0018812404,0.03029544,-0.047290444,0.012876649,-0.033229362,0.030382372,0.003048017,0.02161321,0.028078701,-0.024471067,-0.024427602,0.008356239,0.020787368,-0.0050474294,-0.033012033,-0.016027898,0.023297498,0.0011063324,-0.023427894,-0.007910718,0.025427308,0.007878119,0.025796764,-0.03155594,-0.015799703,-0.016832009,-0.009345079,-0.012539792,0.004379147,0.03209926,0.007861819,0.036424074,-0.0038575616,-0.03581556,-0.009247282,0.010480614,0.032533914,-0.03209926,0.016984137,0.005737444,-0.0022995956,0.021624077,-0.04668193,-0.005780909,-0.022254327,0.0122464,0.013615563,0.040640227,-0.018146839,0.026753005,0.0047268714,0.0029665192,0.019678997,-0.014441406,-0.007916151,-0.02057004,0.0355113,-0.009426576,0.01335477,-0.029513063,0.0054685012,-0.002393318,0.026318349,-0.005639646,-0.011344491,-0.007649925,-0.0014941259,-0.008231276,-0.013930687,0.059982367,0.029121874,0.0006343244,-0.034576792,-0.014973858,0.048898667,-0.02120029,-0.012572391,-0.0016897207,-0.0032245954,0.011301026,0.008888691,0.0032707776,0.022047866,0.021732742,0.024123343,0.010833772,-0.039227597,-0.010627311,0.037771504,0.0048464015,0.0004876284,0.024210274,-0.025579436,0.009649337,-0.050637286,-0.005862407,-0.0016136561,0.04915946,-0.031208217,0.017951244,-0.011040232,0.047246978,-0.0101383235,0.004379147,0.019266075,0.0012095629,-0.006514389,-0.016473418,-0.02266725,0.027209392,0.017831715,-0.014148015,0.016842874,-0.009089719,0.007731423,0.006155799,0.016940672,-0.050767682,0.04272657,-0.03964052,-0.012420261,-0.042226717,-0.012941848,0.022775913,-0.0145066045,-0.015854035,0.016712477,0.023906015,-0.06289455,-0.001329772,-0.027252857,-0.012757119,0.008888691,-0.014321877,0.038336556,-0.013669894,0.028513357,0.026427014,0.0070522744,0.00029152434,0.0004947594,-0.023036705,0.0036320845,-0.013691627,0.0133004375,0.00820411,0.011648749,0.04503024,-0.03201233,0.007269602,-0.008035681,-0.023666956,0.011909543,-0.010518647,0.028035237,-0.01272452,-0.0006095355,0.048898667,-0.02505785,-0.008796327,0.015484578,0.020819966,0.04976798,-0.0060797343,-0.021254621,-0.021189423,0.012170335,-0.01137709,-0.015745372,0.0014180613,-0.016245224,0.014919527,-0.029665193,0.050159167,-0.0281439,-0.0008176944,0.010839204,-0.05246284,-0.0009446951,-0.0085409675,0.005041996,0.0015701905,-0.01939647,-0.0074271644,0.028317763,-0.005495667,0.023427894,0.007736856,0.011550952,0.017625254,0.0006353431,-0.007943317,-0.03805403,0.011170629,-0.016060496,-0.019755062,-0.00042480716,0.0034310566,0.0013576172,0.010790306,-0.030643165,0.03529397,0.013430834,-0.0062535964,-0.022015266,0.023601757,0.009035387,-0.017929511,-0.00805198,-0.013506899,0.040575027,-0.0022398306,0.0049985303,0.0152889835,0.030012915,0.009230982,0.014734799,0.08319294,-0.04937679,0.013104843,-0.046551533,-0.03566343,-0.00003427576,0.027252857,0.03605462,-0.0041047717,0.006889279,-0.03196886,0.003979808,-0.003213729,-0.010757707,0.03131688,-0.04044463,-0.015886635,0.053245217,0.0013087185,-0.0005361875,-0.04572569,0.0014778264,-0.032338317,0.010458882,-0.021189423,-0.0031838466,0.019494269,0.0028714384,-0.00759016,-0.031490743,0.010502347,0.046638463,0.0030887658,0.035924222,-0.024036411,0.00782922,0.008970189,0.034663722,0.026470479,-0.0028768717,0.039075468,0.027665779,-0.004224302,-0.01311571,-0.058417607,0.055766214,0.03290337,0.01862496,0.0064057256,-0.00031886005,0.012767985,0.046986185,-0.0021868572,0.034424663,0.0073456666,-0.01006226,-0.03972745,0.014615268,0.04985491,0.019016149,0.008502935,-0.008579,0.04344375,0.01088267,-0.0027437585,-0.0232323,0.0023702271,0.000696806,0.02607929,0.0046399403,-0.0195812,0.005840674,-0.007421731,0.014723932,0.0114531545,-0.038466953,-0.004642657,-0.012170335,0.0033088098,-0.0042324513,-0.005166959,-0.006503523,0.018038176,0.05041996,-0.036358874,0.032403518,0.03116475,0.027231125,0.022819377,0.010964168,0.009361378,0.017820848,0.029621726,0.0073945653,0.006014536,0.04707312,-0.0044307625,-0.031143019,0.015169454,-0.009078853,0.018657558,-0.014626135,0.032881636,-0.036532737,-0.016842874,0.0010207597,-0.028122168,0.026340082,-0.026992064,-0.022884576,0.022254327,0.02829603,0.0010418133,-0.03194713,0.01565844,0.019005282,-0.023254033,0.019559467,-0.016169159,0.039988242,-0.002300954,-0.001191905,0.0033468422,-0.024797058,-0.008904991,0.02790484,-0.036597937,0.02120029,0.005770043,0.021189423,0.02473186,0.0020727601,0.024275472,-0.0051995586,0.011996473,0.0007035975,0.02131982,-0.035489567,0.00622643,0.036271945,0.040075175,0.020993829,0.05050689,0.018070774,0.0047458876,0.0036266511,-0.0028442724,0.01919001,-0.021276353,-0.008535534,0.00079935737,0.03346842,-0.018016443,-0.032686044,-0.013398235,-0.023688689,0.007144639,-0.030903958,0.013506899,-0.038314823,-0.017646985,0.024710126,0.025470773,-0.033968274,0.038249623,0.0027179508,-0.0014031201,-0.027535383,-0.029795589,0.0010044602,0.023927748,-0.024710126,0.009834065,-0.01482173,0.019124812,0.006834947,0.001663913,-0.0045285597,0.02727459,0.01040455,0.008383405,-0.017407926,0.0054793674,-0.038575616,-0.021569746,0.012192068,-0.02505785,-0.010339351,0.030208511,-0.022558585,-0.005808075,0.0016910789,0.041987658,0.002846989,-0.016788542,0.018451096,0.008258441,0.022558585,-0.012854916,-0.03744551,-0.013267838,0.03616328,-0.024644928,-0.0065252557,0.03409867,0.0064980895,-0.012116003,-0.0033821578,-0.0021203007,0.053766802,0.029904252,0.0003969621,-0.01137709,-0.034424663,0.038662545,-0.0063839927,-0.005835241,-0.06571981,0.040575027,0.0006716775,-0.017407926,-0.025470773,-0.036358874,-0.003814096,0.01670161,-0.0002972971,-0.0025508804,0.017016737,0.010627311,0.007041408,-0.02072217,-0.048072822,0.011659616,0.0113118915,0.024123343,0.016473418,-0.01601703,0.012192068,0.017788248,0.017201465,0.003648384,0.038879875,0.0014696766,0.009660204,-0.011757413,0.010567546,-0.012854916,0.010534946,0.015071656,-0.012300732,-0.012572391,-0.0045584426,0.013235239,0.032686044,-0.006128633,-0.0021651243,-0.045247566,-0.012050805,-0.049115997,-0.010078559,0.0048980163,-0.0125180585,-0.003075183,0.0063839927,-0.035685163,0.015473712,-0.018711891,0.007144639,0.010888103,-0.025318643,0.006748016,0.03314243,0.009404844,0.006215564,0.0025997793,-0.0044633616,-0.01581057,0.0035451534,0.030404106,-0.004224302,-0.007486929,-0.039597053,-0.039444927,0.00673715,0.008736562,0.027883107,-0.000019695297,-0.022167396,-0.03355535,0.005873273,0.027078995,-0.021385018,0.023623489,0.015223785,-0.016299555,-0.024536265,0.009241848,0.0036701167,-0.006014536,0.0013121143,-0.022406457,0.008214977,0.04589955,0.03798883,-0.0072152703,-0.0036836998,-0.024275472,0.006193831,0.026666073,0.02805697,-0.021265488,-0.0033359758,0.013648162,0.022341259,0.0066393525,-0.043074295,-0.038075764,0.0039091767,0.019255208,0.006911012,-0.007921584,-0.009806899,0.001617731,-0.005275623,-0.02757885,0.0077803214,0.009758001,-0.03196886,-0.0023715855,-0.0072152703,0.03162114,-0.02973039,-0.023449628,-0.02179794,0.010355651,0.03107782,-0.014278411,0.03640234,-0.008410571,-0.0017861597,-0.00059731083,0.0024503665,-0.015875768,-0.04068369,-0.03890161,-0.062851086,-0.03933626,-0.0027464752,-0.000062608975,-0.027231125,-0.0027301756,0.0049713645,-0.045595292,-0.022710714,-0.007954183,-0.034316,-0.0097471345,-0.01625609,-0.004313949,0.05407106,0.022775913,-0.042444043,0.0015090673,0.046116877,0.04876827,-0.020233182,0.014387075,-0.008301907,-0.021993535,0.01760352,-0.043182958,-0.023297498,-0.005607047,0.004702422,-0.003841262,0.0024530832,-0.0037842137,0.023188835,-0.0016815709,-0.003947209,-0.027144194,0.011572685,-0.027404986,-0.026361816,0.007905285,-0.03216446,0.044182662,0.0018011009,0.0139741525,-0.039140668,0.011811744,0.0072804685,0.047203515,0.007041408,-0.011485754,-0.012420261,0.0075140954,-0.0050121136,0.005156093,-0.027296323,0.049246393,0.0016394637,0.018548895,0.0085246675,-0.0036674,-0.021776207,0.008437737,0.010812039,-0.007296768,-0.006009103,0.002223531,0.04361761,0.003615785,-0.032338317,-0.009437443,0.06198178,-0.014050217,-0.006101467,0.017299263,0.0015199336,-0.01296358,-0.03068663,0.022602051,-0.0044606454,0.011072831,-0.045551825,0.015745372,-0.038879875,0.002154258,0.020081053,-0.002515565,0.013148309,-0.004216152,-0.006628486,0.0026052124,-0.0010146473,0.039053734,-0.031838465,0.022797646,0.018516295,0.023797352,-0.0122464,-0.0029447863,-0.03529397,-0.011083698,0.019037882,0.0007144639,-0.041466072,-0.0046969885,0.023992946,0.034924515,0.011442288,-0.026687806,-0.007166371,0.012420261,-0.014702199,0.024753593,-0.023840817,0.0114531545,0.010295887,0.00992643,0.023645222,-0.014886928,-0.0019016148,0.027948305,0.046247274,0.009861232,-0.0003973017,-0.04098795,-0.017027603,0.0021610495,0.027861373,-0.010572978,0.007932451,0.027948305,-0.021504547,0.01518032,-0.043487214,-0.04448692,0.030491035,-0.004180836,-0.0057646097,0.012920115,0.012920115,0.025861962,0.0074597634,0.025796764,0.012061671,-0.009317913,0.0090571195,0.027448453,0.00021274317,-0.013343903,0.00061394996,0.031903666,-0.009383111,0.046421137,-0.0011579476,0.014202346,-0.035228774,0.009144051,-0.026035825,-0.021808805,-0.008193243,0.00016053364,-0.012539792,0.03044757,0.035793826,-0.0040395735,-0.031990595,-0.012865783,0.0007348383,-0.017027603,-0.008986489,-0.0012027714,-0.009834065,0.01685374,-0.0068077813,-0.045595292,0.023275767,0.01907048,0.02457973,0.024253739,0.012029072,-0.0027749995,0.020102786,0.0068621133,-0.018375034,-0.003194713,0.0045910417,-0.045464896,0.004710572,0.014234945,0.037923634,-0.017701318,-0.0056124805,-0.02655741,0.00053381047,0.06802348,-0.031360347,0.03116475,-0.034337733,0.008970189,0.001265253,-0.0075466945,0.00083806884,0.0021040011,0.011659616,0.008106313,0.0068621133,0.019005282,0.029056676,-0.03755418,-0.015039057,-0.0028334062,-0.0029556528,-0.016495151,-0.005688545,-0.016832009,0.031751536,-0.058417607,-0.035076644,0.023275767,-0.00820411,-0.008546401,0.020548306,0.0064002923,0.013409101,0.023319231,0.0390972,-0.041313943,-0.0034690888,0.028100435,0.0019654548,0.019722464,0.0007144639,0.0152889835,-0.00378693,0.031512477,-0.0028524222,0.018548895,0.02607929,0.014778264,-0.01919001,-0.022319525,-0.014104549,-0.024079878,-0.008530101,-0.03987958,-0.007508662,-0.057722162,-0.0052240076,0.019244343,-0.021656677,-0.027513651,-0.06302495,0.0071718046,0.016755944,0.030664898,0.026513943,0.056157403,-0.021569746,0.010252421,0.035880756,-0.042226717,-0.0023946764,0.0051588095,0.025253445,0.026035825,0.056070473,0.042204984,-0.004987664,-0.013963286,0.034294266,-0.00018642617,0.044465188,-0.008877825,0.006911012,0.0023186118,0.0024965487,0.028122168,-0.012137736,-0.0017657853,0.010317619,0.004300366,-0.012507193,-0.0146478675,0.02584023,0.020667836,0.0048110858,0.0013582964,0.006090601,-0.034837585,-0.045160636,-0.01272452,0.013811157,-0.0078835515,-0.017418792,-0.03138208,0.0041183545,-0.011866077,-0.0146696,-0.05002877,-0.035380904,0.00020340488,0.011398823,0.001177643,0.031925395,-0.011833478,0.03748898,0.010241554,0.02314537,-0.0027559833,0.0105295135,-0.027861373,0.041900724,-0.0049849474,0.005202275,0.014626135,-0.050159167,0.006677385,-0.00941571,-0.030730097,0.023167102,0.01700587,-0.000016586071,0.028904546,-0.0062101306,0.00902452,-0.014778264,0.017712183,-0.0040966216,0.029556528,0.0041726865,-0.03138208,0.011181495,-0.044095732,-0.013409101,0.0403577,0.02760058,-0.007562994,-0.017310128,0.008464903,-0.024862256,-0.029295735,-0.013811157,-0.017864313,-0.001962738,-0.03351189,0.015039057,-0.028535089,0.031360347,0.0036674,0.01727753,0.01581057,0.03566343,0.019874591,0.0025821214,-0.015212919,-0.0133004375,-0.005387003,0.009529807,-0.007155505,0.02625315,0.018190304,0.009643904,-0.04742084,0.020830832,-0.0007694749,0.02057004,0.023797352,-0.01455007,0.0097308345,0.02775271,0.00044857737,0.0115944175,-0.024318937,-0.01879882,-0.020646105,-0.031208217,-0.009975328,0.0183533,-0.014702199,-0.0024299922,-0.027665779,0.019494269,-0.012181202,0.012898382,0.0122681325,0.04059676,0.017223198,0.020254916,-0.011148896,-0.02964346,0.026970332,-0.016071362,0.014604402,-0.015223785,-0.00031003114,-0.0041835527,-0.006150366,0.03440293,-0.0024788908,-0.032533914,0.020102786,0.0030453005,0.035793826,0.0034229069]},{"id":"binary-search","name":"Binary Search","description":"You are given an array of **distinct** integers `nums`, sorted in ascending order, and an integer `target`.\n    \nImplement a function to search for `target` within `nums`. If it exists, then return its index, otherwise, return `-1`.\n\nYour solution must run in $O(log n)$ time.\n\n**Example 1:**\n\n```java\nInput: nums = [-1,0,2,4,6,8], target = 4\n\nOutput: 3\n```\n\n**Example 2:**\n\n```java\nInput: nums = [-1,0,2,4,6,8], target = 3\n\nOutput: -1\n```\n\n**Constraints:**\n* `1 <= nums.length <= 10000`.\n* `-10000 < nums[i], target < 10000`\n","difficulty":"Easy","concepts":["Search Array"],"solutions":{"python":"class Solution:\n    def search(self, nums: List[int], target: int) -> int:\n        l, r = 0, len(nums) - 1\n\n        while l <= r:\n            m = l + ((r - l) // 2)  # (l + r) // 2 can lead to overflow\n            if nums[m] > target:\n                r = m - 1\n            elif nums[m] < target:\n                l = m + 1\n            else:\n                return m\n        return -1\n","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @param {number} target\n     * @return {number}\n     */\n    search(nums, target) {\n        let l = 0;\n        let r = nums.length - 1;\n\n        while (l <= r) {\n            const m = l + Math.floor((r - l) / 2);\n            if (nums[m] > target) {\n                r = m - 1;\n            } else if (nums[m] < target) {\n                l = m + 1;\n            } else {\n                return m;\n            }\n        }\n        return -1;\n    }\n}\n","cpp":"class Solution {\npublic:\n    int search(vector<int>& nums, int target) {\n        int l = 0, r = nums.size() - 1;\n\n        while (l <= r) {\n            int m = l + ((r - l) / 2);\n            if (nums[m] > target) {\n                r = m - 1;\n            } else if (nums[m] < target) {\n                l = m + 1;\n            } else {\n                return m;\n            }\n        }\n        return -1;\n    }\n};\n","java":"class Solution {\n    public int search(int[] nums, int target) {\n        int l = 0, r = nums.length - 1;\n\n        while (l <= r) {\n            int m = l + ((r - l) / 2);\n            if (nums[m] > target) {\n                r = m - 1;\n            } else if (nums[m] < target) {\n                l = m + 1;\n            } else {\n                return m;\n            }\n        }\n        return -1;\n    }\n}\n","csharp":"public class Solution {\n    public int Search(int[] nums, int target) {\n        int l = 0, r = nums.Length - 1;\n\n        while (l <= r) {\n            int m = l + ((r - l) / 2);\n            if (nums[m] > target) {\n                r = m - 1;\n            } else if (nums[m] < target) {\n                l = m + 1;\n            } else {\n                return m;\n            }\n        }\n        return -1;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def search(self, nums: List[int], target: int) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @param {number} target\n     * @return {number}\n     */\n    search(nums, target) {}\n}\n","cpp":"class Solution {\npublic:\n    int search(vector<int>& nums, int target) {\n        \n    }\n};\n","java":"class Solution {\n    public int search(int[] nums, int target) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int Search(int[] nums, int target) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/s4DPM8ct1pI","embedding":[0.007909679,0.004981627,0.029327786,-0.053613547,0.001515234,0.0039916043,-0.06399172,0.040840413,-0.02125004,0.041134533,0.00406776,-0.026470639,-0.018350875,-0.0029254258,0.025546268,0.0069012735,-0.012825655,-0.0069958116,0.015756331,0.06407575,0.030210141,0.04575639,0.022416009,-0.02550425,0.08004217,-0.014569355,0.03747906,0.04764715,0.016712217,0.01206935,0.056470696,-0.0069432906,-0.028151313,0.019464323,0.008765773,-0.02739501,-0.004175428,-0.0031985354,-0.022899203,-0.032205943,-0.018119782,0.0017108751,-0.003839293,-0.032310985,-0.009065143,-0.022983236,0.017373983,-0.0072426605,0.026911816,-0.00068933953,0.01774163,0.025021056,-0.03626057,0.03626057,0.010388675,-0.036050487,-0.017993731,0.016355073,0.064832054,0.05319338,-0.012163889,0.011680694,-0.003647591,-0.005102426,0.004170176,0.020609282,0.008497915,0.0355883,-0.0056197583,-0.03941184,-0.04277319,0.0038419191,0.0024540487,-0.047857232,-0.00019711828,0.024222735,0.04508412,0.048613537,0.028550474,-0.0021021573,0.036806792,-0.029874006,0.0271219,-0.0030068334,-0.02186979,0.014852969,-0.042142935,-0.014191203,-0.02376055,-0.070882484,-0.047395047,-0.0046139793,0.029348794,0.042794198,0.02105046,0.00985296,0.017205914,0.024327777,0.030315183,0.042794198,-0.029243752,0.0073792157,0.04789925,-0.038172342,0.012594562,-0.015598769,0.024516853,0.008240562,-0.012941201,-0.0033377165,0.032836195,0.009448547,-0.010267876,0.0007215087,0.004971123,-0.011250021,-0.02565131,-0.02535719,0.024663912,0.022962227,-0.030273166,-0.02724795,-0.014495825,-0.019800458,-0.013518933,0.023424413,0.024453828,-0.050630346,0.021144997,0.007857158,0.026701732,-0.016691208,0.0007300434,0.028109297,-0.06084045,-0.0395589,0.009180689,0.026407612,0.010488465,0.0450421,0.031239554,-0.012268931,-0.025126098,0.0071376185,0.0013970615,-0.021932814,-0.017300453,0.021554662,-0.024495844,0.0033902375,0.05289926,-0.033781577,0.0044774245,0.025483241,-0.0073687113,-0.03428578,-0.0045351977,0.0016268413,-0.014222716,0.016691208,0.016806755,-0.008560941,0.029222744,0.0028125052,0.05479002,0.021638697,-0.0048135594,0.011313046,-0.0061974907,0.017615579,0.039075702,-0.025567275,-0.016187005,-0.017447513,0.062269025,-0.0074264845,-0.023991643,-0.054663967,-0.07373963,0.0041938103,-0.05991608,0.0004694074,0.009154429,-0.055504307,0.043277394,0.028970642,0.025252149,-0.039075702,-0.047268998,-0.007773124,0.043403443,0.016176501,0.06873962,-0.018382387,-0.018445414,0.005877112,0.019642895,0.037163936,-0.0010674915,-0.035021074,-0.014138682,0.00587186,0.01796222,0.017573563,-0.008371864,-0.032331992,-0.007636569,0.065924495,-0.00002113154,-0.0181618,0.034096703,0.010131322,0.03737402,-0.054327834,-0.026533663,0.02590341,0.0062395073,0.006360306,-0.000877759,0.03640763,0.013035739,0.025483241,-0.044159748,0.02254206,0.03161771,0.030588293,0.0116596855,-0.014558851,0.007436989,0.021806763,0.012016829,0.007205896,0.04250008,-0.02099794,0.028151313,-0.048319418,-0.00061318395,-0.0512606,-0.002275477,-0.008445394,0.0054884558,-0.022479033,0.017132385,-0.024243744,-0.020840375,0.0031407622,-0.024810972,0.056050524,-0.03277317,-0.010241616,0.020399198,0.017321462,0.0023831453,-0.044621933,0.009469556,0.05479002,0.002282042,-0.025735343,-0.008403378,0.013739522,-0.030525267,0.010567247,-0.013224815,-0.07008417,-0.027479043,-0.050840434,-0.045840424,0.013266832,0.02254206,0.010336154,-0.015283642,-0.027731145,0.040315203,-0.037437044,-0.031113504,-0.028382406,0.024243744,0.017373983,0.025462233,-0.085588396,-0.05004211,-0.0097531695,0.039537888,0.009732162,0.04266815,-0.0040598814,0.01861348,-0.008513671,0.008471655,-0.029201737,-0.044916052,-0.03304628,-0.03088241,0.00539917,-0.033865612,0.03264712,-0.0103309015,-0.037289985,-0.0046139793,-0.041764785,0.018403396,-0.003455889,0.013371874,-0.037058894,-0.04668076,-0.026239546,0.024201727,0.042289995,-0.030924428,0.0097059,-0.035546284,0.013571454,0.010204852,0.0046717525,0.012899184,-0.06340348,0.0032904474,-0.014369775,0.005892868,0.014590364,0.013539942,-0.002326685,0.041722767,0.067185,0.048067316,0.023844583,0.04195386,0.010336154,0.02873955,-0.00955359,-0.02941182,-0.041113522,-0.035231158,0.01788869,-0.08142872,0.05142867,0.028802576,0.0191597,0.020840375,0.028886609,0.031806782,-0.0020969051,0.04659673,-0.016733225,0.0028518962,-0.010903382,-0.021407604,-0.032752164,0.021953823,0.012468511,0.0028702784,-0.019474827,0.04386563,-0.005635515,-0.037163936,0.003090867,-0.04600849,0.015021036,-0.018781548,0.016302552,-0.03575637,-0.033550482,-0.010220608,-0.05302531,0.013403387,0.030609302,0.009065143,-0.05693288,0.011565148,0.04764715,0.017489528,0.012489519,0.0039075706,-0.034642924,-0.014831961,0.010136574,-0.013214311,-0.02294122,0.026050469,0.0012605066,-0.033865612,-0.019789953,-0.037983265,-0.03411771,0.006654424,0.031071488,-0.000367976,-0.03897066,-0.047689166,-0.03966394,-0.009569346,-0.009695397,0.04266815,-0.011691199,0.018266842,0.019937012,0.048067316,0.07004215,-0.014149186,-0.013098764,0.022184916,-0.022731135,0.009275228,0.020451719,-0.034853008,-0.020840375,0.017300453,0.04088243,0.029474845,-0.024117693,-0.015630282,0.005588246,0.02672274,0.016344568,0.04018915,0.008098755,-0.014884482,0.021974832,-0.014422297,-0.046722777,-0.024516853,-0.020871889,0.0067121973,-0.0054096743,0.007673334,-0.017426504,-0.0025538388,-0.023844583,0.035126116,-0.025336182,0.0032589347,-0.020042054,-0.043697562,0.027563076,-0.11277332,0.048991688,-0.016754234,0.07836149,-0.011764728,-0.048109334,-0.026659714,-0.06903374,0.027710136,-0.0017423878,0.025399208,-0.016565157,-0.0084926635,0.07903376,0.032268967,0.006801483,0.030861402,-0.01652314,0.019044153,0.009217454,-0.031197539,-0.0030435983,0.047479082,-0.02724795,-0.0045877188,0.00199055,-0.040252175,-0.0021940693,-0.0006181078,-0.0042437054,0.028718542,-0.022500042,-0.003227422,-0.0006762093,0.042542096,-0.00046120098,0.0077941325,0.018235328,0.015588265,0.017920202,-0.02334038,0.02085088,0.0090809,0.053487495,0.006360306,-0.0063392976,-0.010005271,-0.023949625,-0.0032458045,-0.016092468,-0.005170703,-0.019937012,0.007253165,0.00023109287,-0.0025932298,0.009658632,-0.037731163,-0.002657568,0.006680685,-0.006785727,0.00350841,-0.0072636693,0.0033823594,0.00920695,-0.033487458,-0.003891814,-0.010115566,-0.0726472,0.026050469,0.025336182,0.022857185,-0.0073266947,0.023571473,0.00066110946,-0.0016018938,0.070882484,-0.017951714,-0.0058561033,-0.0079516955,-0.004422277,0.024642903,0.034579895,-0.022058865,-0.009837204,-0.00089285884,-0.015966417,0.031092497,0.0059401374,0.008750017,-0.008308839,-0.013203806,-0.031869806,-0.03640763,-0.00049468316,-0.066974916,0.00081342063,0.009574598,0.01970592,0.00634455,0.023172313,-0.011071449,0.018897094,-0.00009232226,-0.0023621367,-0.037731163,-0.036470655,0.011460106,0.003928579,-0.018350875,0.010604012,-0.016407594,0.00039751912,0.016029442,0.022205925,0.0032930735,-0.014800448,-0.0017016839,-0.018781548,-0.0023844582,-0.0286135,0.0039627175,-0.032731153,-0.012006326,0.031260565,0.03455889,0.022584077,-0.026512654,-0.021134494,0.025399208,0.004456416,0.008245814,-0.02376055,-0.006769971,-0.01042544,0.0066701807,-0.021081973,0.04789925,0.0023411284,0.03655469,-0.043613527,0.053235393,-0.013665992,-0.04075638,-0.01754205,-0.034621913,0.0338446,-0.008886571,-0.013539942,-0.014474818,-0.030189132,0.016407594,-0.024033658,-0.052563123,0.036911834,0.021470629,-0.008707999,0.03640763,-0.010577751,0.03588242,0.001046483,-0.02752106,-0.033403423,-0.033655524,-0.00454045,0.042584114,-0.019947516,0.031344596,0.024264751,0.02097693,0.013277336,-0.010840356,0.0049737487,0.0066124075,0.00607144,0.021554662,0.006055684,-0.02565131,0.003511036,-0.026197528,-0.00418068,-0.016008433,-0.017289948,0.01072481,0.014747927,-0.010714306,0.017100872,0.018708019,-0.006675433,0.017762639,0.030420225,-0.0007405476,-0.012279435,-0.038277384,0.024516853,-0.0015664421,0.005504212,-0.03739503,-0.0095430855,0.019884491,0.0016622931,-0.019065162,0.011964308,0.0012920193,-0.03722696,-0.029075686,-0.022458026,0.036470655,0.028781567,0.009459051,-0.05420178,-0.010966407,0.0017922828,-0.012048342,0.014117674,0.013077755,-0.007972704,0.005819339,0.019138692,0.015094566,-0.022058865,0.017258435,0.0050840434,0.008109259,-0.014464313,0.0031433883,-0.006591399,0.007851905,0.0013366622,0.027226942,-0.0070850975,-0.00213367,-0.034979057,0.032689136,-0.007394972,0.041638736,-0.019516844,-0.013098764,0.030462243,0.018203815,-0.02319332,-0.0028177574,0.019884491,0.021428611,0.018518943,-0.027584085,-0.017184906,0.026764756,-0.036533684,-0.02092441,0.02224794,0.0092279585,0.026953833,-0.0062815244,0.0059979106,-0.02443282,0.022205925,0.013329857,-0.0194118,-0.029453836,-0.004821438,0.059453893,-0.043529496,0.0018605603,0.025756352,0.014170195,-0.038760576,0.0021034703,0.020147096,0.014201707,0.02848745,-0.045294203,-0.007111358,0.004514189,-0.0067384583,0.0028702784,0.026008453,0.014264733,0.003933831,0.0020522622,0.0033403425,-0.029075686,0.030840395,0.0066491724,-0.0010235051,-0.039075702,-0.03306729,-0.052100938,0.02157567,-0.016470619,-0.00728993,0.0018802556,-0.0066596763,-0.0052993796,-0.01079834,0.042037893,-0.0011718773,0.020661803,-0.017762639,-0.035714354,0.040168144,0.0026601942,-0.026932824,-0.008839303,0.033802584,-0.021827772,-0.023298364,-0.015966417,0.034012668,0.012436998,-0.02644963,-0.009128168,0.023403406,-0.030777369,0.015126079,-0.06243709,0.0074107284,-0.024075676,0.0036896078,0.03941184,-0.030966446,0.052563123,0.009611363,-0.005966398,0.01545171,-0.0032878213,0.016018938,0.007998965,0.022710128,-0.036890827,0.004971123,0.035315193,0.00040047345,-0.042016886,0.027037866,-0.0029779468,0.024264751,-0.00013179515,-0.019569365,0.018371884,-0.028907618,0.017331965,-0.027437026,-0.027205933,0.010808844,-0.005924381,0.010430692,-0.025798367,0.014065153,0.008713252,0.011102962,0.015903391,0.017857177,0.030273166,0.000711661,0.013855068,-0.027416019,-0.0030147117,0.0031617708,-0.029979048,-0.016775241,0.026743747,0.0072426605,-0.002657568,-0.022689119,0.0007838775,-0.032331992,0.03247905,0.022794161,0.013035739,-0.00013827824,0.004543076,0.007547283,0.0073161903,-0.007878166,0.003316708,0.016533645,-0.01774163,0.054621954,-0.006832996,-0.001020879,0.0049291058,0.0060504316,0.0149475075,0.0019747936,0.017804656,-0.0024829353,0.008918084,0.0018067261,-0.0028125052,0.00066275074,0.016218519,-0.011491618,0.021680713,0.019937012,0.01896012,0.035714354,0.02470593,0.008366613,-0.04911774,0.020346677,-0.023508448,0.029033668,0.03684881,0.00579833,-0.020798359,0.05319338,-0.013319353,0.033424433,-0.016260535,-0.041533694,0.006780475,0.018403396,-0.015955912,-0.043235376,0.025315173,-0.0388236,-0.022836177,0.0064285835,0.0055672373,0.0065546343,-0.0084926635,0.008277327,-0.0077941325,0.039600916,-0.02224794,-0.015157592,0.03117653,0.004356626,0.00057182356,-0.0475211,-0.041197557,0.03403368,-0.029348794,-0.027941229,-0.007578796,-0.06180684,0.049285807,0.02281517,-0.02428576,-0.044033695,0.01127103,0.013130276,-0.024579879,-0.0076103085,0.004637614,-0.027079884,0.040987473,0.008886571,-0.017783647,0.039495874,0.010551491,-0.038613517,-0.008167032,0.018235328,-0.02995804,-0.026239546,0.017500034,-0.045840424,0.000522585,-0.0014390784,-0.036344606,0.002237399,0.031365607,0.0066071553,0.036743768,-0.04436983,-0.025609292,-0.017489528,0.031008461,0.05411775,0.015283642,0.011460106,-0.014180699,0.035672337,0.0015493727,-0.016743729,-0.017731126,0.013981119,0.046218574,0.0076260646,0.027184926,0.01888659,0.0000040621794,-0.005493708,-0.0031381361,0.008602957,0.016880283,-0.01873953,-0.017657597,0.015336163,0.04411773,0.011701703,-0.013109269,0.0048135594,0.0047689164,0.017521042,0.0151786,0.017237427,-0.0004831942,-0.0034532628,-0.023046263,-0.032416027,-0.0039259526,0.013844564,0.03130258,-0.01241599,-0.02063029,-0.0024409185,0.007022072,-0.02334038,-0.0071008536,0.014537843,-0.0021428613,-0.014611372,-0.014590364,0.033676535,0.03789923,-0.021113485,-0.024768954,-0.020556761,-0.009264723,0.0028046272,0.0011528383,0.047184963,0.018876087,0.009159681,0.030966446,-0.016418098,-0.0037342508,-0.008539932,0.012783637,-0.04102949,0.035042085,0.019065162,0.015231121,-0.032437038,0.013550445,0.012048342,-0.014653389,0.02252105,-0.030735353,-0.0029096694,-0.0037132422,0.00014188906,-0.0080199735,-0.01490549,0.045378238,0.0061764824,-0.019464323,-0.01968491,-0.015955912,0.0072846776,-0.017678605,0.006024171,0.02346643,0.021460125,0.041470665,0.010572499,0.0191597,-0.02752106,-0.012594562,0.0074685016,-0.04857152,0.001208642,-0.0017975349,-0.0052862493,0.0028151313,-0.069832064,-0.013392882,0.0043802606,0.009873969,-0.05004211,0.064243816,-0.005656523,-0.00009396354,-0.013907589,-0.0117122065,-0.015556752,-0.010934895,0.006060936,0.015399189,-0.03626057,0.06739508,-0.00083902467,-0.013665992,-0.014821457,-0.019149195,0.010162834,-0.00047958337,0.05008413,-0.03346645,-0.023991643,-0.0039994824,0.03846646,-0.0025814124,0.019065162,-0.036890827,-0.02077735,0.0056827837,-0.012468511,-0.0126050655,0.04563034,0.0045273197,-0.0159244,0.008282579,0.018655498,-0.017510537,-0.003697486,-0.0062657683,0.008209049,-0.022689119,-0.018571464,-0.018792052,-0.010966407,-0.028508456,0.014096665,-0.008776277,0.021386595,-0.0032379262,-0.019170204,-0.010021027,0.029663922,0.020178609,0.038529485,0.01112397,0.012804646,0.017920202,-0.037962258,-0.027962238,0.019285752,-0.0026155512,0.013172294,-0.020336173,-0.023823574,-0.030063082,-0.042163946,0.011890778,0.00038898445,-0.04357151,0.02804627,-0.0053282664,-0.00075170834,-0.038550492,-0.020672308,0.014958011,0.029474845,0.008293083,-0.016208014,-0.027352992,-0.0087552685,0.017909698,0.025840385,-0.033256367,-0.0027258454,-0.024873996,-0.0023831453,0.015535744,0.054411866,0.0126891,0.02901266,0.014380279,-0.004776795,0.003272065,-0.008776277,-0.016544148,-0.0006437118,-0.008287831,-0.00597165,-0.009847708,-0.032353003,0.0006509335,-0.017636588,-0.010756323,0.033907626,-0.009212202,-0.030000057,0.015735324,-0.0013826182,-0.01005254,0.012195401,-0.024159709,-0.062269025,0.01356095,0.014369775,-0.013424395,-0.008266822,0.006601903,-0.0014955385,0.022037856,0.036365613,-0.047268998,-0.05949591,-0.008340352,0.019012641,-0.021407604,0.026932824,0.0026313076,-0.03655469,-0.06794131,0.004690135,-0.01699583,0.027899213,0.0062447595,-0.020010542,-0.01396011,0.015766837,0.034474853,-0.0019038902,0.010583003,0.0070273243,0.037163936,0.022352984,0.011439097,0.04815135,-0.011407585,0.016659696,0.03453788,-0.046848826,0.03277317,0.0024829353,-0.011323551,0.033256367,-0.018077765,0.008870815,-0.021271048,-0.02319332,-0.001993176,0.013497924,0.01167019,0.0032851952,0.023361389,-0.0011804119,-0.018182807,-0.008245814,0.04306731,0.009233211,-0.0094538,-0.002985825,0.021701721,-0.024054667,0.03506309,-0.025609292,0.017027343,-0.012972713,0.018245833,-0.0005849538,0.015357172,0.011701703,-0.01396011,0.013623975,0.019380288,0.00044708594,-0.0119433,-0.018434908,0.043907646,0.005635515,0.027184926,-0.028571483,0.0011108214,-0.0097006485,-0.013886581,-0.0034847755,0.01896012,-0.025315173,-0.005375535,0.017500034,-0.0060871965,-0.020115584,0.00701682,0.03361351,-0.029600896,0.023991643,-0.002838766,-0.000804886,-0.00061088614,-0.022920212,0.014915994,-0.0029227997,-0.033109307,-0.053655565,-0.0034427587,-0.030987453,-0.017678605,-0.02455887,-0.017331965,-0.010141826,0.003847171,0.06180684,0.018382387,-0.016733225,0.036806792,-0.021701721,0.03777318,0.054369852,0.05676481,0.0065231216,-0.00798846,-0.023361389,-0.03535721,0.0057563134,0.04063033,-0.021806763,-0.0012263679,-0.010031532,0.04357151,-0.0076575773,-0.0089653535,-0.033760566,0.0036370866,-0.010435944,0.028151313,0.009438043,-0.030924428,-0.017132385,0.02281517,-0.035903428,0.01234246,-0.005178581,0.017237427,-0.017006334,0.011113467,0.027563076,-0.014327758,0.002794123,0.026071478,-0.043613527,-0.01781516,-0.017247932,0.039453857,-0.0031880313,0.004658622,0.008550436,-0.017479025,0.00846115,0.002367389,-0.02455887,0.0036239563,-0.0199055,0.012205905,0.0035057839,0.040399235,-0.0056617754,0.005840347,0.046512693,-0.0014351392,-0.0022951723,0.00455358,0.05142867,0.029789973,-0.0010799653,0.020745838,0.031974852,0.005635515,-0.0121323755,0.01759457,-0.010861365,0.013340361,-0.023718532,0.028697534,0.03913873,0.020283652,0.025966436,0.0056250105,0.0056092544,0.003371855,-0.0058140866,-0.013340361,0.020157602,0.0031880313,-0.02821434,-0.003928579,0.024789963,0.025315173,-0.01896012,-0.0018290476,0.014170195,0.017773142,-0.01605045,-0.017321462,0.014569355,0.030945437,-0.021313066,0.0031565186,0.008240562,0.0044038948,-0.015294147,0.014548346,0.014023135,-0.03714293,-0.0050525307,-0.017752135,-0.00019104553,0.054832038,-0.021554662,-0.0069537945,-0.028382406,-0.017247932,0.011880275,0.027289968,-0.04886564,-0.017279444,0.022121891,0.02319332,0.019170204,-0.011617669,0.012363468,-0.02495803,0.0103991795,-0.015210113,-0.015745828,0.01254204,0.008403378,0.051092535,0.054411866,0.011901283,-0.020073567,0.010567247,0.0021218527,-0.015346668,0.0055147163,0.009674388,-0.01734247,-0.008387621,0.04289924,-0.017563058,-0.025714334,0.045252185,0.0057773218,0.009401279,0.020829871,0.00681724,-0.017163899,0.041491676,-0.017626084,-0.000068236404,-0.054748002,0.008881319,-0.024663912,-0.027647112,-0.012006326,-0.0189076,-0.018067261,-0.0103309015,0.029054677,-0.00890758,-0.017100872,0.0053939177,0.024642903,-0.024621895,0.023130296,0.020640796,0.03262611,0.03422275,0.003411246,0.016060954,0.0077153505,-0.0020023673,0.0016846146,-0.011376072,0.009532581,-0.0301051,0.0059558935,0.021533655,0.010462205,0.008413881,0.0051733293,-0.01706936,0.08189091,0.0027416018,0.009522077,-0.017090369,0.01042544,-0.0069590467,0.016470619,0.0395589,-0.009038882,0.014716415,0.011691199,-0.017415999,-0.018056756,0.011281534,0.007169131,0.010199599,0.02468492,-0.01505255,0.00081013807,-0.020157602,-0.010667037,-0.059748013,-0.018025244,0.020714324,-0.030819386,0.0016977448,0.032878213,-0.019726928,-0.050798416,-0.012237418,-0.026491646,0.016764738,-0.018781548,0.02346643,0.045924455,0.010126069,0.042983275,0.0013136842,0.034075696,-0.009143925,-0.0120798545,-0.05642868,0.0050472785,-0.032184936,-0.020787854,-0.0110819535,0.0059506414,0.013907589,0.04991606,-0.0238866,0.017058855,-0.00786241,0.013949607,0.025987444,0.015409693,0.009243715,-0.023025254,0.010273129,0.04764715,0.001042544,0.019443315,0.02441181,0.014096665,-0.021386595,-0.031911824,0.00009970804,0.006769971,0.007394972,-0.025336182,0.0038182845,-0.025336182,-0.0022610337,-0.020021046,-0.048697572,0.024495844,-0.02672274,0.025105089,0.006060936,-0.014464313,0.007221652,0.019621886,0.05886566,0.05264716,0.010955903,0.0288656,-0.015105071,-0.002271538,0.006985307,0.0071428707,-0.012458007,-0.01734247,0.040168144,-0.014495825,0.0029569385,-0.0054779514,0.01174372,0.03117653,0.02981098,0.030189132,0.005456943,-0.017605076,0.0059401374,0.028844593,-0.029852998,0.0026917069,-0.04936984,-0.013665992,0.027815178,0.020609282,0.019495836,0.03510511,-0.014768936,-0.028823584,0.008839303,-0.0016334065,-0.016817259,-0.0017962218,0.051764805,0.01348742,0.023151305,0.0066281636,0.041470665,-0.006696441,0.003230048,-0.00850842,-0.010147078,-0.0060084146,-0.0032169179,0.012300444,-0.031239554,0.0093855215,0.046218574,-0.0012808585,0.00037749545,-0.009690144]},{"id":"search-2d-matrix","name":"Search 2D Matrix","description":"You are given an `m x n` 2-D integer array `matrix` and an integer `target`.\n\n* Each row in `matrix` is sorted in *non-decreasing* order.\n* The first integer of every row is greater than the last integer of the previous row.\n\nReturn `true` if `target` exists within `matrix` or `false` otherwise.\n\nCan you write a solution that runs in `O(log(m * n))` time?\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/7ca61f56-00d4-4fa0-26cf-56809028ac00/public)\n\n```java\nInput: matrix = [[1,2,4,8],[10,11,12,13],[14,20,30,40]], target = 10\n\nOutput: true\n```\n\n**Example 2:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/f25f2085-ce04-4447-9cee-f0a66c32a300/public)\n\n```java\nInput: matrix = [[1,2,4,8],[10,11,12,13],[14,20,30,40]], target = 15\n\nOutput: false\n```\n\n**Constraints:**\n* `m == matrix.length`\n* `n == matrix[i].length`\n* `1 <= m, n <= 100`\n* `-10000 <= matrix[i][j], target <= 10000`\n","difficulty":"Medium","concepts":["Search Array"],"solutions":{"python":"class Solution:\n    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:\n        ROWS, COLS = len(matrix), len(matrix[0])\n\n        top, bot = 0, ROWS - 1\n        while top <= bot:\n            row = (top + bot) // 2\n            if target > matrix[row][-1]:\n                top = row + 1\n            elif target < matrix[row][0]:\n                bot = row - 1\n            else:\n                break\n\n        if not (top <= bot):\n            return False\n        row = (top + bot) // 2\n        l, r = 0, COLS - 1\n        while l <= r:\n            m = (l + r) // 2\n            if target > matrix[row][m]:\n                l = m + 1\n            elif target < matrix[row][m]:\n                r = m - 1\n            else:\n                return True\n        return False\n","javascript":"class Solution {\n    /**\n     * @param {number[][]} matrix\n     * @param {number} target\n     * @return {boolean}\n     */\n    searchMatrix(matrix, target) {\n        const ROWS = matrix.length;\n        const COLS = matrix[0].length;\n\n        let top = 0;\n        let bot = ROWS - 1;\n        while (top <= bot) {\n            const row = Math.floor((top + bot) / 2);\n            if (target > matrix[row][COLS - 1]) {\n                top = row + 1;\n            } else if (target < matrix[row][0]) {\n                bot = row - 1;\n            } else {\n                break;\n            }\n        }\n\n        if (!(top <= bot)) {\n            return false;\n        }\n        const row = Math.floor((top + bot) / 2);\n        let l = 0;\n        let r = COLS - 1;\n        while (l <= r) {\n            const m = Math.floor((l + r) / 2);\n            if (target > matrix[row][m]) {\n                l = m + 1;\n            } else if (target < matrix[row][m]) {\n                r = m - 1;\n            } else {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n","cpp":"class Solution {\npublic:\n    bool searchMatrix(vector<vector<int>>& matrix, int target) {\n        int ROWS = matrix.size();\n        int COLS = matrix[0].size();\n\n        int top = 0, bot = ROWS - 1;\n        while (top <= bot) {\n            int row = (top + bot) / 2;\n            if (target > matrix[row][COLS - 1]) {\n                top = row + 1;\n            } else if (target < matrix[row][0]) {\n                bot = row - 1;\n            } else {\n                break;\n            }\n        }\n\n        if (!(top <= bot)) {\n            return false;\n        }\n        int row = (top + bot) / 2;\n        int l = 0, r = COLS - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (target > matrix[row][m]) {\n                l = m + 1;\n            } else if (target < matrix[row][m]) {\n                r = m - 1;\n            } else {\n                return true;\n            }\n        }\n        return false;\n    }\n};\n","java":"class Solution {\n    public boolean searchMatrix(int[][] matrix, int target) {\n        int ROWS = matrix.length;\n        int COLS = matrix[0].length;\n\n        int top = 0, bot = ROWS - 1;\n        while (top <= bot) {\n            int row = (top + bot) / 2;\n            if (target > matrix[row][COLS - 1]) {\n                top = row + 1;\n            } else if (target < matrix[row][0]) {\n                bot = row - 1;\n            } else {\n                break;\n            }\n        }\n\n        if (!(top <= bot)) {\n            return false;\n        }\n        int row = (top + bot) / 2;\n        int l = 0, r = COLS - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (target > matrix[row][m]) {\n                l = m + 1;\n            } else if (target < matrix[row][m]) {\n                r = m - 1;\n            } else {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n","csharp":"public class Solution {\n    public bool SearchMatrix(int[][] matrix, int target) {\n        int ROWS = matrix.Length;\n        int COLS = matrix[0].Length;\n\n        int top = 0, bot = ROWS - 1;\n        int row = 0;\n        while (top <= bot) {\n            row = (top + bot) / 2;\n            if (target > matrix[row][COLS - 1]) {\n                top = row + 1;\n            }\n            else if (target < matrix[row][0]) {\n                bot = row - 1;\n            }\n            else {\n                break;\n            }\n        }\n\n        if (!(top <= bot)) {\n            return false;\n        }\n\n        int l = 0, r = COLS - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (target > matrix[row][m]) {\n                l = m + 1;\n            }\n            else if (target < matrix[row][m]) {\n                r = m - 1;\n            }\n            else {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[][]} matrix\n     * @param {number} target\n     * @return {boolean}\n     */\n    searchMatrix(matrix, target) {}\n}\n","cpp":"class Solution {\npublic:\n    bool searchMatrix(vector<vector<int>>& matrix, int target) {\n        \n    }\n};\n","java":"class Solution {\n    public boolean searchMatrix(int[][] matrix, int target) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public bool SearchMatrix(int[][] matrix, int target) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/Ber2pi2C0j0","embedding":[-0.0076790797,0.010845385,-0.021459345,-0.023878781,-0.02774988,0.03275706,-0.006774421,0.027202876,-0.024951749,0.050660886,-0.020417936,-0.036354657,0.028002342,0.040814836,-0.019218737,0.0005995994,0.025540829,-0.031031897,-0.008063033,0.00013272381,0.051754892,0.03500819,-0.0044181007,-0.0054174326,0.06513543,0.0025930044,0.048136257,0.0052438644,-0.0009684319,0.053017206,0.04001537,0.0055384045,-0.040457178,0.0020762442,-0.018819004,-0.033219907,-0.045232933,0.04060445,-0.0060117724,0.010677076,0.018335117,0.028423114,-0.0065850737,-0.055289373,-0.026487565,-0.051754892,-0.0008277364,-0.007952581,0.013748708,0.050955426,-0.024804479,0.017693441,-0.04569578,0.0039052854,-0.01696761,-0.024131244,-0.028843885,-0.009977544,0.048136257,0.0778848,-0.0032662386,0.025393559,0.025982639,-0.025099019,-0.015179331,-0.0026811033,-0.014569213,0.032672904,-0.004013108,-0.05221774,-0.04973519,-0.02478344,0.035365842,-0.022911007,-0.04148807,0.011318753,0.026866259,0.02566706,0.04422308,-0.014285192,0.040373024,-0.024615131,0.03347237,0.03183136,-0.0064693615,0.005633078,-0.025014864,-0.0044943653,-0.01845083,-0.061011866,-0.051586583,0.0011821049,0.027497416,0.042981807,0.029496081,-0.002495701,0.028591422,-0.0002501618,-0.011970948,0.028549345,-0.038290206,0.0036028558,0.04779964,0.014958426,0.004633746,-0.03660712,0.028254805,0.0020262776,0.04838872,-0.0020815039,-0.005385875,-0.0020144435,0.0117921205,0.016893975,0.030043084,-0.018724332,-0.0036370435,-0.034924034,-0.007721157,0.022300888,-0.004796795,-0.004778386,-0.0079631,0.018703293,0.003955252,0.027981304,0.031494744,-0.024909671,-0.012928204,0.031052936,-0.0010381221,0.018061616,0.018692773,0.019492239,-0.050366346,-0.009225415,0.03349341,0.046579402,-0.012791453,0.035197534,-0.026529642,-0.025183173,-0.0063694282,0.032504596,0.00021268683,-0.01577893,0.000030448406,0.008126149,0.008478546,-0.008715229,0.07422409,0.017304227,-0.008915096,0.02995893,-0.03896344,-0.038500592,-0.0021932714,0.0057593095,0.01858758,-0.014569213,0.015179331,-0.006243197,0.027223915,0.009646187,0.021049093,0.043297384,0.0022905748,-0.004525923,-0.04102522,-0.03317783,0.065303735,-0.0022182546,-0.023857743,-0.013853901,0.076622486,0.019313412,-0.01948172,-0.026487565,-0.059118394,-0.04527501,-0.06227418,-0.036691274,-0.0014937387,-0.009062366,0.009462099,0.010566624,0.02286893,-0.01977626,-0.038900323,-0.02819169,0.026866259,-0.01549491,0.01992353,-0.0091675585,0.02493071,-0.036838543,0.036354657,-0.011392388,-0.005527885,-0.0019500129,-0.01650476,-0.020228589,-0.0014043248,0.029685428,-0.0038763573,0.0056593763,-0.0445597,0.025267327,-0.022385042,0.00030012842,0.019734183,-0.019576393,-0.010251045,-0.064293884,0.02507798,-0.0050177,-0.030064123,-0.006253716,0.0054226923,0.041782606,-0.042729344,0.06728136,-0.0033872104,0.0006235965,-0.01635749,0.049019877,0.0004671221,-0.011960429,0.030674241,-0.0053490573,0.009846053,-0.026003677,0.041109376,-0.021448826,0.043423615,-0.08550076,-0.04176157,-0.073256314,0.01992353,0.004615337,0.022090502,-0.011781601,0.04944065,-0.042077146,-0.012496913,-0.002345801,-0.002905953,0.019702625,0.002038112,0.02831792,0.0051860088,0.028549345,-0.0017369973,-0.0626108,-0.011413426,0.04203507,-0.020586245,-0.04939857,-0.018755889,-0.008631075,-0.003142637,0.088277854,-0.05945501,-0.08133513,-0.036565043,-0.034587417,-0.024173321,0.02730807,-0.010582402,0.013917017,0.03511338,0.023037238,0.024888633,-0.039931215,-0.0064956597,-0.028801808,-0.004323427,0.017377863,0.010566624,-0.06286326,-0.05491068,0.041088335,0.05398498,0.0058645024,0.027665725,-0.0044049514,0.00032166007,-0.012949242,-0.02009184,-0.0057172324,-0.007889465,-0.01814577,0.00088624994,0.04218234,-0.028128574,0.010424614,-0.029643351,-0.04439139,-0.012023545,-0.002612728,0.02122792,0.014043248,-0.0041840463,-0.033977296,-0.028507268,0.019366007,0.008383872,0.009420021,-0.009114962,0.0145271355,-0.04481216,-0.0031242282,0.021943232,0.025688099,-0.019134583,-0.057140768,0.025393559,-0.028128574,-0.015705295,0.00023158868,-0.021459345,-0.019229257,0.018398233,0.059286702,0.017177995,0.0026876777,0.0018947866,0.024951749,0.03330406,-0.030232431,-0.0008172171,-0.020323263,-0.0013885458,-0.046663556,-0.06126433,0.011129405,0.00782635,0.042413764,-0.029432965,-0.023920858,-0.037616972,0.0059223585,0.01032994,-0.015694777,-0.017377863,-0.02507798,-0.024993826,-0.024867594,0.014727002,-0.03542896,0.0132122245,-0.0159262,0.006153783,0.009057106,-0.05575222,-0.010834865,-0.07355086,0.056467533,0.0055489237,0.003082151,-0.027960265,-0.039741866,0.00737928,-0.014148441,0.010792788,0.057182845,-0.0049361754,0.026613796,0.056172993,0.04409685,0.044433467,0.0071531152,-0.01003014,0.009030808,0.012486394,-0.045485396,0.007868427,0.012086661,-0.012633664,0.019124065,-0.03660712,0.006148523,-0.018492907,0.001276121,-0.017356824,0.013696112,-0.014411423,-0.03218902,-0.034503262,-0.0026521753,0.017830191,0.016862417,-0.00024292979,0.00045463044,0.060549017,0.021606615,0.037553854,0.06652397,0.025835369,-0.009851312,0.0067639016,-0.041214567,-0.007321424,-0.005559443,-0.027350146,-0.020175993,0.03778528,0.048262488,0.004941435,0.017588248,-0.027918188,-0.0075791464,0.012276008,0.05549976,0.021564538,0.038563706,-0.050240114,0.08449091,-0.009556772,-0.047967948,-0.0021446196,-0.01105577,0.003968401,0.0011761878,-0.035050265,0.020849228,0.027918188,-0.014348308,-0.010582402,-0.026382372,-0.0036633417,0.05415329,-0.0006166932,0.005080816,-0.048430797,0.037680086,0.0038290205,0.024972787,0.016630992,0.011339791,0.00048092866,-0.050997503,0.0112451175,0.0021222662,0.022385042,-0.0259616,0.012749376,0.064504266,0.0259616,0.02713976,-0.0049125073,-0.046116553,0.038437475,0.017041245,-0.014579732,-0.028381037,0.011003174,-0.01091902,0.0008895372,-0.0060959267,-0.043886464,-0.022174656,-0.013622477,0.008941394,0.023983974,0.01253899,0.002435215,-0.03513442,0.012212892,-0.022616467,-0.009141261,-0.012991319,0.028549345,-0.022174656,-0.0008901947,0.04222442,0.024446823,0.02009184,-0.014989984,-0.013327937,0.018924197,-0.020449495,-0.009935467,0.010897981,0.03972083,-0.021711808,-0.027118722,-0.0070005856,0.04485424,-0.017188516,0.019723663,0.020565206,0.0063694282,-0.0063483897,0.027265992,-0.024720324,-0.01697813,-0.030001007,0.0008586368,0.00057790335,-0.051965278,-0.014779598,-0.02819169,0.015116216,-0.0016002465,-0.0145271355,0.004368134,0.010003842,0.02108065,0.073677085,-0.03290433,0.020523129,0.0010545586,0.022805814,0.0058645024,0.032336287,0.011592254,0.028212728,-0.028759731,0.024678247,0.03896344,-0.03776424,-0.06252664,-0.03984706,0.0042287535,-0.053774595,-0.024867594,0.020470534,-0.057645693,0.020523129,-0.030968782,0.016147105,-0.016957091,0.03159994,-0.0102615645,0.029643351,-0.030758396,-0.0003415481,-0.033977296,0.007763234,0.0065272176,0.0033267245,-0.031915516,0.016851898,-0.0012767785,-0.017840711,0.00353974,0.011192521,0.0050387387,0.0042366427,0.01994457,-0.019071467,0.000018819663,-0.01077175,-0.007316164,-0.0022314037,-0.008699451,0.016304895,0.029454004,0.023436971,-0.033283025,0.0075633675,0.00019049771,-0.016052432,-0.018840043,0.021459345,-0.009409502,-0.02053365,0.02640341,0.004383913,0.045485396,-0.00870997,0.000020956391,-0.0330516,0.041403916,0.00707948,-0.008957173,-0.05949709,-0.037259314,0.010245786,-0.02286893,-0.016020874,-0.015358159,-0.016273336,0.010314161,-0.048136257,-0.05815062,0.03906863,0.014979465,-0.012602106,0.025183173,-0.012065622,0.025099019,-0.015295044,-0.02522525,-0.03641777,0.0056120395,0.020901823,0.0073845396,-0.011276675,0.045232933,0.019976126,0.028296882,-0.032651868,-0.038563706,0.0067165648,0.03376691,0.0156211415,0.04721056,-0.006553516,-0.04998765,0.010303642,-0.02225881,-0.0049677333,0.009945986,0.006074888,-0.03246252,0.021333113,0.023773588,-0.01814577,-0.00013642201,0.006848056,0.029138425,0.028275844,-0.018556023,-0.01121356,0.007095259,-0.020049762,-0.016736185,0.029580235,-0.025099019,-0.0065745544,0.02213258,0.0053911344,-0.043171152,-0.028738692,0.008031475,-0.0009769788,0.002034167,-0.0018053727,-0.0030768914,0.018177329,-0.015316082,-0.023037238,-0.028065458,0.008815163,0.0150531,0.022637505,-0.0064272843,-0.0017383122,0.00020118136,0.028738692,0.028507268,-0.00075738865,0.019018872,-0.02169077,-0.01180264,-0.02006028,0.038626824,-0.00531487,-0.004265571,0.031052936,-0.012496913,-0.018556023,-0.04544332,-0.0059381374,-0.029727506,0.009851312,0.014832195,0.0020420565,0.006385207,0.007952581,-0.014506097,-0.004589039,-0.0022918896,0.019060949,0.007947321,0.019986646,-0.01623126,0.0024838666,0.022490235,-0.01785123,-0.01106629,0.019250296,0.009046587,0.0064851404,-0.015694777,0.00055160513,-0.04293973,-0.014400904,0.011487061,0.018955756,-0.030316586,0.0046442654,0.028002342,-0.03364068,-0.011529138,0.012433797,0.016725667,-0.06631359,0.009577811,0.03643881,-0.0011558067,0.019408084,-0.00353974,-0.026466526,-0.009667225,-0.0020026092,0.030716319,0.012728337,-0.015484391,-0.01076649,-0.011560696,-0.011970948,-0.049777266,0.0050518876,0.008652113,-0.0017672402,-0.024131244,-0.0044233603,-0.025393559,0.0171254,-0.04028887,-0.015358159,-0.03187344,-0.04927234,-0.032820176,0.011024212,-0.008646854,-0.02123844,0.02802338,-0.01135031,0.009346386,0.027392223,0.053437978,-0.04540124,0.0137592275,0.015884124,0.0053359084,-0.014116883,-0.01844031,0.013107032,0.0017803893,-0.039194863,-0.009199116,0.029096348,-0.03953148,-0.014916349,-0.03199967,-0.0018132621,-0.018829525,0.0037290873,0.031810325,-0.040373024,-0.008215563,-0.010950577,-0.007978879,-0.022953084,-0.025898485,0.006001253,-0.03189448,0.044307236,-0.03852163,-0.04047822,0.028675577,0.0070321434,-0.041782606,0.008194525,0.009078145,-0.03526065,0.019408084,-0.002185382,0.030947743,-0.009803976,0.025014864,-0.0013675073,-0.0016068211,0.014684925,0.034019373,-0.022342965,-0.020891303,0.059076317,-0.008326015,0.04409685,0.009835534,0.021648692,0.00003279059,-0.0009210951,0.026193025,0.009830274,-0.014811156,0.011634331,-0.0051886383,0.0030058862,0.0030216652,0.0061906003,0.036838543,-0.013769747,-0.046200708,0.012076141,0.0062800143,-0.0014766449,0.00006722482,0.044349313,0.015231928,0.0040920028,-0.006090667,0.004515404,-0.038984478,0.029411927,0.004099892,0.06126433,-0.0056278184,-0.00033990445,0.028233767,0.015105696,0.029895814,-0.0156211415,0.03307264,0.0014464019,0.008136668,-0.033808988,-0.0076948586,0.023142431,0.0022445528,-0.0019697365,0.010403575,0.024699286,-0.003142637,0.04304492,0.034566376,-0.02537252,-0.037743203,0.014569213,0.04136184,0.01076649,0.04527501,-0.036375694,0.039594598,0.041046258,-0.0073687606,0.04338154,-0.042497918,-0.04192988,-0.020922862,0.02745534,-0.015463352,-0.04956688,0.037154123,-0.047000173,0.023836704,0.015242447,0.009178078,-0.026171986,-0.00041058092,-0.01727267,-0.0071215574,0.016788783,-0.016462684,0.010014362,0.013917017,0.010366757,0.0018724331,-0.06770213,0.014653367,0.0071794135,0.008515363,0.0011913093,-0.0033214649,-0.00084022805,0.023731511,-0.019145103,-0.024993826,-0.023689434,-0.014243115,0.0034398069,-0.014179999,-0.002848097,0.027518455,0.015852565,0.029264657,-0.0010874313,-0.0017540911,0.045906167,-0.0010341774,-0.027812995,-0.03054801,0.013254302,-0.00797362,-0.0047915354,0.027855072,-0.022490235,0.021585576,-0.014621809,0.006227418,0.019786779,0.019429123,-0.0020328523,0.04439139,0.029117387,-0.0032399404,-0.009256973,0.016851898,0.04245584,-0.03601804,0.011402907,0.002464143,0.04599032,-0.038206052,-0.002420751,-0.023773588,0.019218737,-0.015905162,-0.011287195,-0.008394391,0.026887298,0.0039263237,0.009562032,0.0060275514,0.0065114386,-0.022679582,-0.0102983825,0.019113544,-0.017767075,0.04485424,0.011003174,-0.0038395398,-0.007558108,0.027413262,0.00090400124,0.010135333,0.012349643,0.012633664,0.0389424,0.0016147105,-0.01682034,-0.011865756,0.032062788,0.024236437,-0.051292043,-0.005796127,-0.00027547384,-0.02345801,-0.014148441,-0.036270503,-0.041803647,0.015431794,0.0037948329,0.014295711,0.03307264,0.010456171,-0.0055647027,0.025120057,-0.041130412,0.0005742873,0.008320756,-0.0010440393,0.011876275,0.018829525,0.03704893,0.018924197,-0.0074476553,-0.01062974,-0.03645985,0.024573054,-0.015968278,0.023479048,-0.0051334123,0.018650696,-0.0074160974,-0.013822343,-0.00017093841,0.0042760903,0.019734183,-0.042792458,-0.019218737,-0.013096512,-0.018261483,0.022763737,-0.046369016,0.03336718,-0.02684522,-0.04028887,0.010314161,-0.015505429,-0.040793795,-0.02507798,0.02225881,0.013149109,0.03153682,0.053480055,0.02270062,0.026171986,0.00870997,-0.03717516,0.011444984,0.0031926036,-0.008199784,0.0010755971,0.007889465,-0.017956423,-0.053606287,-0.0067902,0.029033232,-0.021280518,-0.0313054,0.06972183,-0.025456674,-0.0032373106,-0.02745534,-0.0087310085,0.0021183214,-0.0012287842,-0.0020893933,-0.008783605,-0.03054801,0.049524803,-0.04146703,-0.007715897,-0.004249792,0.009683004,0.0037711645,0.038290206,0.03883721,-0.006180081,-0.022742698,-0.0034029894,0.019355489,0.029201541,0.018166808,-0.008778345,-0.016483722,0.019229257,-0.009230674,0.0050860755,0.030905666,0.03143163,-0.019786779,0.039005518,0.012402239,0.022490235,0.0027613128,-0.024089167,0.018429792,-0.008699451,-0.027834034,-0.00914652,-0.0070426627,-0.0028954337,-0.03483988,-0.0043470953,0.0020565207,-0.025204211,0.0057750884,-0.0033319842,0.008951914,0.03454534,0.036691274,0.025014864,0.004157748,0.018776927,-0.009577811,-0.015600103,0.004410211,-0.01948172,-0.011686928,0.018976795,-0.03187344,-0.023731511,-0.06888029,0.021175325,-0.012728337,-0.035050265,-0.01991301,-0.022763737,-0.005853983,-0.023142431,-0.021133248,-0.006863835,-0.003587077,0.033682756,-0.018419271,0.018945236,0.001371452,-0.014095845,0.0121918535,-0.011665889,0.005911839,-0.003305686,-0.0056435973,0.024657208,0.024678247,0.018208886,-0.003823761,0.011118886,0.00004474806,0.011108367,-0.024383707,0.0022498125,-0.0014490318,-0.0342508,-0.0072793467,-0.019155622,-0.052343972,-0.039741866,-0.0059802146,-0.051544506,0.008031475,-0.013801305,-0.006669228,-0.009472618,-0.012412759,-0.0030058862,0.007095259,0.006285274,-0.036207385,0.011413426,0.0063063125,-0.0014411423,-0.017104361,0.028296882,-0.02240608,0.05280682,0.033409256,-0.023521125,-0.03999433,-0.031452667,-0.025183173,0.010561364,0.03555519,0.013685592,-0.031789284,-0.021711808,0.007437136,-0.01830356,-0.008078813,-0.021143766,-0.033093676,-0.025582906,-0.0028717653,0.030484894,0.027791956,0.020565206,-0.016368011,0.03275706,0.01136083,0.002373414,0.061769255,0.011918352,0.012528471,-0.01224445,0.0041235606,0.014989984,-0.028528307,0.01608399,0.017735519,0.008815163,-0.0058645024,-0.05427952,-0.0074003185,-0.033114716,0.0097145615,0.014232595,-0.023857743,0.017156957,0.026361333,-0.010109035,-0.003968401,0.015821008,0.023815665,0.004983512,-0.0026350813,0.029033232,0.019071467,0.01106629,-0.022195695,0.0021025424,0.009767158,0.0051097437,0.0035055524,-0.0068059787,0.032252133,-0.022826852,-0.020985978,0.040941067,-0.0017895937,-0.008425949,0.001990775,0.036060117,-0.011297714,0.048346642,-0.01665203,0.036039077,-0.038269166,-0.014369346,-0.0048678,-0.015126735,-0.0019710513,0.003289907,0.010940058,-0.010556105,-0.03275706,0.01786175,0.014001171,-0.033430293,0.033261985,-0.01902939,0.00428135,-0.00077053776,-0.045906167,0.018061616,-0.001873748,-0.043549847,-0.016304895,-0.014989984,-0.036817506,0.016452165,-0.015295044,-0.027518455,0.031957593,-0.010251045,0.0024391597,0.005233345,0.015231928,0.02699249,-0.04148807,0.009193857,0.024404746,0.02760261,0.013085993,0.0022221995,-0.0003160717,-0.011991987,-0.021164805,-0.02255335,-0.021343634,-0.005869762,0.0034161385,0.061474714,-0.009341127,0.031452667,0.014400904,0.0068375366,-0.008220823,0.020607283,0.026571719,-0.036985815,0.035933886,0.011139925,-0.007836869,-0.0055226255,-0.01637853,0.059665397,-0.039321095,0.020565206,0.012475874,-0.048010025,0.008026216,0.017367342,-0.02270062,-0.015978796,-0.022826852,0.015337121,-0.033893142,0.021795962,0.012475874,-0.031494744,0.026592758,0.005356947,-0.024173321,-0.009078145,-0.004541702,0.0073109046,0.014548174,0.012865088,-0.014600771,0.013706631,0.0049072476,0.029790621,0.037616972,-0.006227418,0.025898485,0.024615131,-0.008352314,0.011129405,0.027770918,0.0018369305,-0.0025561869,0.022448158,-0.027223915,-0.012644183,-0.016473204,0.020523129,0.025835369,0.023184508,0.016199702,0.0053779855,0.000402034,-0.035471037,-0.033914182,0.004752088,-0.004704751,-0.0065903333,-0.022174656,0.013107032,-0.021196363,0.014800637,0.035281688,0.007289866,-0.024425784,-0.023331778,0.008783605,-0.026908336,-0.008326015,0.031957593,-0.042413764,-0.02227985,0.0025049052,0.0057856077,-0.011087328,0.0027060865,0.028907001,-0.011297714,0.012917684,-0.044138927,-0.016220741,0.04573786,-0.0063799475,-0.025246289,-0.021711808,-0.017651364,-0.00737928,0.025919523,-0.022784775,-0.01756721,-0.0215435,0.010393056,0.0040183677,0.021175325,0.012128738,-0.06004409,-0.005617299,0.0034161385,-0.017314747,0.0004930916,0.023542164,0.034776762,0.05857139,-0.0004861883,-0.0080735525,0.02240608,0.01593672,0.00944106,-0.014937388,0.038795132,0.019408084,0.025835369,0.07031091,-0.013338456,-0.0049966616,0.024657208,0.0133594945,0.016220741,0.026824182,0.0070742206,0.0069427295,0.036985815,-0.020596765,-0.016515281,-0.02892804,0.00752655,-0.040920027,0.004694232,-0.0008435153,-0.031789284,-0.031642016,-0.035807654,0.017651364,-0.01874537,0.009183338,-0.026298217,-0.00140038,-0.013107032,-0.0009072885,0.024236437,0.01917666,0.01637853,0.0017462017,0.017493574,0.005696194,-0.015484391,0.035618305,-0.026761066,0.025624983,-0.020523129,0.014937388,0.0031847141,0.019544836,0.018966274,-0.0049072476,-0.015873604,0.03483988,0.012528471,0.026003677,-0.000082798295,0.033893142,0.003616005,0.009535734,0.035155457,-0.0071215574,0.0030295546,0.04409685,-0.025940562,-0.008920356,-0.0032662386,0.020691438,-0.011402907,0.019208219,-0.03467157,0.003526591,-0.009861832,-0.00826816,-0.030632164,-0.02493071,-0.002390508,-0.026171986,-0.02166973,-0.0013780266,-0.013475207,-0.008373353,-0.008673152,-0.018808486,0.020891303,0.006222158,0.0020644101,-0.0010387796,-0.01623126,0.02581433,-0.0039421027,0.051418275,-0.02640341,-0.0010151112,-0.06934314,-0.023184508,-0.038121898,-0.0016883456,-0.0041393396,-0.030169316,-0.020838708,0.033893142,-0.0345243,0.013969613,-0.0014437721,0.016325934,0.031515785,-0.0025456676,0.013201705,-0.017525133,0.01697813,0.027855072,0.0005522626,0.013107032,0.022069464,-0.0044470285,-0.021417268,-0.04380231,-0.0065692947,-0.026319256,0.009246454,-0.025014864,0.00024851816,0.023037238,-0.025877446,0.0073529817,0.0014976835,0.035912845,-0.03641777,0.037154123,-0.029874776,-0.009462099,-0.008636335,-0.009114962,-0.013948575,0.0029743284,0.02122792,0.013138589,-0.0029585494,0.014179999,0.05280682,-0.01638905,-0.0005805332,-0.038753055,0.026150947,-0.014832195,-0.03437703,-0.0070321434,0.013780266,0.025646022,0.01534764,0.008157707,0.0067902,-0.018356156,-0.0016541579,0.00619586,-0.016273336,0.0033135754,-0.022826852,-0.009777677,0.022679582,0.011823678,-0.014716483,0.02272166,0.0041971956,-0.009251713,-0.027392223,-0.0022340335,-0.005370096,0.02051261,0.03913175,0.048767414,0.036522966,0.012202373,0.014295711,-0.029727506,0.046663556,0.00092766964,-0.014106364,-0.026445488,0.0018264112,-0.017598767,-0.013632996,-0.015757892,0.018871602,0.052596435,-0.021922193,-0.014800637]},{"id":"eating-bananas","name":"Eating Bananas","description":"You are given an integer array `piles` where `piles[i]` is the number of bananas in the `ith` pile. You are also given an integer `h`, which represents the number of hours you have to eat all the bananas.\n\nYou may decide your bananas-per-hour eating rate of `k`. Each hour, you may choose a pile of bananas and eats `k` bananas from that pile. If the pile has less than `k` bananas, you may finish eating the pile but you can not eat from another pile in the same hour.\n\nReturn the minimum integer `k` such that you can eat all the bananas within `h` hours.\n\n**Example 1:**\n\n```java\nInput: piles = [1,4,3,2], h = 9\n\nOutput: 2\n```\n\nExplanation: With an eating rate of 2, you can eat the bananas in 6 hours. With an eating rate of 1, you would need 10 hours to eat all the bananas (which exceeds h=9), thus the minimum eating rate is 2.\n\n**Example 2:**\n\n```java\nInput: piles = [25,10,23,4], h = 4\n\nOutput: 25\n```\n\n**Constraints:**\n* `1 <= piles.length <= 1,000`\n* `piles.length <= h <= 1,000,000`\n* `1 <= piles[i] <= 1,000,000,000`\n","difficulty":"Medium","concepts":["Search Array","Search Range"],"solutions":{"python":"class Solution:\n    def minEatingSpeed(self, piles: List[int], h: int) -> int:\n        l, r = 1, max(piles)\n        res = r\n\n        while l <= r:\n            k = (l + r) // 2\n\n            totalTime = 0\n            for p in piles:\n                totalTime += math.ceil(float(p) / k)\n            if totalTime <= h:\n                res = k\n                r = k - 1\n            else:\n                l = k + 1\n        return res\n","javascript":"class Solution {\n    /**\n     * @param {number[]} piles\n     * @param {number} h\n     * @return {number}\n     */\n    minEatingSpeed(piles, h) {\n        let l = 1;\n        let r = Math.max(...piles);\n        let res = r;\n\n        while (l <= r) {\n            const k = Math.floor((l + r) / 2);\n\n            let totalTime = 0;\n            for (const p of piles) {\n                totalTime += Math.ceil(p / k);\n            }\n            if (totalTime <= h) {\n                res = k;\n                r = k - 1;\n            } else {\n                l = k + 1;\n            }\n        }\n        return res;\n    }\n}\n","cpp":"class Solution {\npublic:\n    int minEatingSpeed(vector<int>& piles, int h) {\n        int l = 1;\n        int r = *max_element(piles.begin(), piles.end());\n        int res = r;\n\n        while (l <= r) {\n            int k = (l + r) / 2;\n\n            long long totalTime = 0;\n            for (int p : piles) {\n                totalTime += ceil(static_cast<double>(p) / k);\n            }\n            if (totalTime <= h) {\n                res = k;\n                r = k - 1;\n            } else {\n                l = k + 1;\n            }\n        }\n        return res;\n    }\n};\n","java":"class Solution {\n    public int minEatingSpeed(int[] piles, int h) {\n        int l = 1;\n        int r = Arrays.stream(piles).max().getAsInt();\n        int res = r;\n\n        while (l <= r) {\n            int k = (l + r) / 2;\n\n            int totalTime = 0;\n            for (int p : piles) {\n                totalTime += Math.ceil((double) p / k);\n            }\n            if (totalTime <= h) {\n                res = k;\n                r = k - 1;\n            } else {\n                l = k + 1;\n            }\n        }\n        return res;\n    }\n}\n","csharp":"public class Solution {\n    public int MinEatingSpeed(int[] piles, int h) {\n        int l = 1;\n        int r = piles.Max();\n        int res = r;\n\n        while (l <= r) {\n            int k = (l + r) / 2;\n\n            long totalTime = 0;\n            foreach (int p in piles) {\n                totalTime += (int)Math.Ceiling((double)p / k);\n            }\n            if (totalTime <= h) {\n                res = k;\n                r = k - 1;\n            } else {\n                l = k + 1;\n            }\n        }\n        return res;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def minEatingSpeed(self, piles: List[int], h: int) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} piles\n     * @param {number} h\n     * @return {number}\n     */\n    minEatingSpeed(piles, h) {}\n}\n","cpp":"class Solution {\npublic:\n    int minEatingSpeed(vector<int>& piles, int h) {\n        \n    }\n};\n","java":"class Solution {\n    public int minEatingSpeed(int[] piles, int h) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int MinEatingSpeed(int[] piles, int h) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/U2SozAs9RzA","embedding":[-0.0030737335,-0.030694937,0.02834497,-0.024323376,0.010750497,-0.0075041493,0.013627389,0.053443596,0.014669128,-0.0013566824,0.04309889,-0.03808401,-0.061196066,0.008975907,0.041887566,-0.0026497701,0.026576439,-0.032293886,-0.0108595155,0.056447677,-0.014838713,0.0016655698,-0.0024559584,0.0027421336,0.056447677,0.014124032,0.03905307,0.051844645,0.04469784,-0.04372878,0.0068076383,-0.016643586,-0.008321793,-0.0048876903,0.00010693716,-0.03205162,-0.020374462,0.034159325,-0.00093801867,0.027206326,-0.017128116,-0.053928122,-0.038156692,-0.034813438,0.038762353,0.000784332,0.012779463,0.015529168,0.053831216,0.031688225,-0.0130459545,0.008503491,-0.0123494435,0.00904253,0.012361556,-0.02209454,0.03440159,0.03975564,0.044794746,0.017103888,0.029871238,-0.0050481907,-0.014499542,-0.00034087402,0.021149708,0.018266758,0.015953131,0.0031948658,-0.029071765,-0.008588284,-0.066913515,-0.025995003,-0.014075579,-0.026309947,-0.013724295,-0.01703121,-0.019587101,0.03403819,-0.011870971,0.013566824,-0.024759453,-0.036703102,0.042372096,0.008570114,0.004294142,-0.031155242,-0.010720213,-0.005884004,-0.041015416,-0.06841555,-0.026721798,-0.00089183694,0.014717581,-0.027060967,0.05039106,-0.031131014,0.023354318,0.020507708,-0.0021682691,0.042178284,0.021610012,-0.0317609,0.032948,-0.025171302,0.014269391,0.005884004,-0.016425546,0.038738128,-0.033868607,-0.01396656,0.021513106,0.009690588,-0.012058726,-0.0078796595,0.015553394,0.015977357,-0.011368271,-0.01284003,0.012464519,-0.0064381845,-0.017624758,0.012052669,-0.020410802,-0.059064135,-0.03597631,0.021731144,0.023560243,-0.08304834,0.024904812,0.012143519,-0.028296517,0.010938251,0.06463622,-0.032996453,0.0117982915,-0.03556446,-0.006029363,0.012185914,0.027715083,0.028320745,-0.02395998,0.012228311,-0.031058336,0.04372878,0.020398688,0.02156156,-0.0005768928,0.052086912,-0.014220938,0.01699487,0.039149977,-0.0022803165,0.017467285,0.054315746,-0.015177884,-0.029435162,0.021694804,0.019344836,0.012428179,-0.000882752,0.010665704,-0.043389607,-0.009018304,-0.035297967,0.04564267,0.06439396,-0.013021728,0.001794273,-0.034377363,-0.010841345,0.00298137,-0.020338122,0.033965513,-0.020689406,0.0062807123,-0.009533117,-0.03471653,-0.05387967,-0.018896647,0.011471234,-0.019623442,0.00660777,-0.03335985,-0.030985655,0.051020946,0.02834497,-0.034353137,-0.013058067,-0.025825419,0.0040337075,0.015395922,0.028175386,-0.019635554,-0.030767618,0.003364451,0.016474,0.038059786,-0.008660963,0.03864122,0.012537198,-0.039513372,0.036267027,0.03801133,-0.020023178,0.027521271,-0.0461272,-0.020011066,0.049470454,0.0018381835,0.010901912,0.025074396,0.01359105,0.021440426,-0.027521271,0.009902569,0.01867861,0.016195396,0.009702701,-0.0032645168,0.048234902,-0.040046357,0.019066233,0.0004039007,0.0749567,-0.011350102,-0.00024926767,0.002531666,0.0051057287,0.014329958,0.0345954,0.04317157,-0.008570114,-0.06812484,0.026406853,0.0014058923,-0.00023753298,-0.052571442,-0.019853592,-0.012512972,-0.028030027,0.009212116,-0.010574854,-0.009636079,-0.007964452,-0.014838713,-0.016934304,-0.03638816,-0.00900619,-0.009175776,-0.027957346,0.042299416,-0.053152878,-0.020653065,-0.091769874,-0.058870323,0.041693754,0.01321554,0.0030661626,0.014281505,-0.0035522063,-0.01602581,0.057416737,-0.022445826,-0.030791843,0.009872287,-0.04234787,-0.015311129,-0.0067167887,-0.052813705,0.029750105,0.0020062546,0.0026104022,-0.0043880194,-0.0072316015,0.012403953,0.008763926,0.012549312,-0.0035340365,-0.020011066,-0.08619778,-0.049591586,0.02048348,0.018690722,-0.015819885,0.04833181,-0.0071831485,0.027569724,0.03561291,0.016716264,-0.03849586,-0.026915608,-0.014572222,0.031106789,-0.028054252,0.029628973,0.008140094,-0.0675434,-0.015395922,0.010072155,-0.06662279,0.039222658,-0.02302726,0.013009614,-0.007364847,-0.039513372,0.0146812415,0.010865572,-0.026746023,-0.025776966,0.024468735,-0.015335356,0.027060967,-0.010078211,0.008382359,-0.013978673,-0.021694804,0.021743257,-0.033747472,0.0020653065,-0.032463472,0.02999237,-0.002481699,0.07321239,0.01849691,0.025147077,-0.007098356,0.017019095,0.026164588,-0.013639503,-0.028950632,-0.025776966,0.005078474,-0.026067682,0.017188681,-0.017673211,-0.0012514486,0.037090726,0.025655832,-0.018920874,0.045545764,0.0040185656,-0.0061595803,-0.028950632,0.012070839,-0.023354318,0.008927454,0.05586624,0.018860307,0.0403613,0.04593339,-0.010150891,0.0070377896,-0.0019941414,0.028030027,-0.020980123,0.03163977,-0.030622259,0.022639636,-0.05339514,0.012034499,-0.022070315,-0.013893881,-0.018254645,-0.030186182,0.006383675,0.02395998,-0.010247797,-0.043486513,-0.045836482,0.014511656,-0.0012272222,0.049034376,0.0036400273,0.0058809756,-0.0046272557,-0.02924135,-0.004503095,0.05368586,-0.0060717594,-0.03096143,-0.0337717,0.05043951,-0.029386709,-0.046393692,0.054121934,0.019066233,0.0387139,0.006413958,-0.050778683,-0.06323109,0.062310483,-0.012179858,0.035734043,0.03617012,0.0428324,-0.009630022,0.027303232,0.014136146,-0.017854908,0.042178284,0.015892565,-0.014087693,-0.025631607,0.028296517,-0.03946492,-0.026406853,-0.059354853,0.049203962,0.03357789,-0.021173935,0.011307705,0.02568006,0.020580387,-0.007637395,0.005708362,-0.059354853,-0.02440817,0.017624758,-0.022373145,-0.03280264,-0.06608981,-0.04137881,0.0086246235,0.028248064,-0.0073224506,0.019381177,0.041185,-0.045812257,0.0013703097,0.046393692,0.0051329834,0.04159685,0.05862806,0.033262946,-0.020798424,0.037575256,0.03759948,0.042323645,0.005708362,-0.016607245,-0.003954971,-0.009617909,0.055284806,0.028514557,-0.03440159,-0.020992236,-0.023499677,0.030719165,0.011107837,0.017636871,0.048549846,-0.013348785,0.047411203,0.044794746,-0.031082561,-0.00096073095,0.033044904,0.021573672,-0.00045954587,-0.01072627,-0.00095770264,0.011646876,-0.038592767,-0.016522452,0.014499542,0.021246614,0.01609849,-0.010847402,0.0022833447,0.013167087,0.011434894,0.007873603,0.01932061,0.043753006,-0.032633055,-0.012985388,-0.027763534,0.0123978965,-0.045909163,0.00700145,0.0148750525,-0.09332036,-0.0134820305,0.004070047,0.017673211,-0.01111995,0.04840449,-0.052619893,-0.029120218,-0.029919691,-0.030573806,0.016704151,0.004824096,-0.011919424,-0.0065956567,0.024371829,-0.007697961,-0.02220356,0.04275972,0.0030797902,-0.00021179234,-0.04426176,0.029071765,0.005148125,-0.021464653,-0.024832133,-0.045812257,-0.024904812,-0.02999237,0.0148266,-0.006886374,0.010895855,-0.0042699156,0.021803824,-0.0016882821,0.020023178,0.011937593,-0.02018065,-0.034450043,0.0002187953,-0.023439111,-0.027060967,-0.022421598,-0.01632864,0.014075579,-0.018545363,-0.017927589,-0.008237,-0.036218572,-0.010272023,-0.033892833,-0.0040246225,-0.019490195,0.013336672,-0.02684293,0.034813438,-0.022252014,-0.012052669,-0.013954447,-0.031131014,0.015759319,0.0296532,-0.009944966,-0.00084944064,0.014063466,0.008600397,0.043631874,0.0362428,-0.0027421336,-0.043341156,-0.007031733,-0.012149575,0.025583154,-0.007576829,-0.0051360116,0.0023696516,0.00043986185,0.021755371,0.0042517455,0.029338256,0.0030585919,-0.024589868,0.027811987,-0.01688585,0.014935619,0.040676244,0.012646218,0.006317052,-0.004000396,0.0028996058,0.025631607,-0.021852277,-0.006077816,-0.038810804,0.022566957,-0.01602581,0.018060833,-0.0044485857,0.028102705,0.008782095,-0.029459389,-0.0010894341,-0.007588942,-0.019114686,-0.020435028,0.002374194,0.0025513503,0.03321449,-0.027884668,0.015323242,0.008134037,0.010623307,0.01819408,0.021888616,-0.023560243,-0.014160372,-0.03898039,0.012549312,-0.023572356,-0.034983024,0.00021292796,0.040337075,0.028126933,-0.0043456233,-0.03134905,0.014099806,0.00083581323,0.044649385,0.01310652,0.011616592,-0.030307315,0.004279,0.025074396,-0.047532335,-0.010714157,-0.06143833,0.002666426,0.0061080987,-0.010653591,0.0058809756,0.041112322,0.0032584602,0.03583095,0.010786836,-0.00827334,-0.025752738,-0.06647743,0.014741807,-0.0062140897,0.008848718,-0.0038944052,0.00028768933,-0.024359716,0.0027300203,-0.02512285,0.011144176,-0.01699487,-0.006686506,-0.03357789,-0.017612644,0.03844741,-0.0149719585,0.019744573,-0.04084583,-0.01310652,0.03975564,0.0115560265,-0.009296908,-0.006601713,-0.021391973,0.01677683,0.02261541,0.02254273,-0.038277823,-0.011180516,0.024141679,-0.017685324,-0.06555683,0.008697303,-0.029968144,0.0063776183,0.009527059,0.0023893358,0.019599214,0.0477746,-0.018545363,0.027497044,0.0016913104,0.056108505,-0.029822785,0.0038065843,0.005008823,0.034135096,-0.010471892,-0.011132063,0.024856359,0.015868338,-0.009290852,-0.025316661,0.017249247,0.0028768934,-0.026503759,-0.0031554978,0.035516005,-0.036218572,0.01226465,-0.003746018,0.020338122,-0.02336643,-0.018436344,0.039852545,0.001519454,-0.031058336,-0.027763534,0.022009749,0.012985388,0.0053722197,0.02440817,0.0031615545,-0.07025676,-0.027085194,0.0008766954,0.031397507,0.002795129,-0.04840449,0.0066743926,-0.0061595803,0.010029759,0.00784332,0.008939568,0.004236604,-0.015044638,-0.0062807123,0.03946492,-0.028805273,0.027133647,-0.0026331146,-0.010768666,-0.008455038,0.0036158008,0.006226203,0.006238316,0.0045242934,-0.018666495,-0.015311129,0.01879974,0.023572356,-0.0059869667,0.017685324,0.02062884,0.030452674,-0.0108110625,0.0058385795,0.027811987,-0.0041911793,-0.011471234,-0.01819408,0.024832133,-0.019562876,-0.0064079016,-0.034450043,0.025825419,0.022784995,-0.00008942975,0.018327326,-0.0010841346,-0.016595133,0.024541415,-0.037987106,-0.031518638,-0.033238716,0.008212773,0.011592366,0.02279711,0.043438062,0.031809356,0.019235818,0.03931956,-0.0043940763,-0.029943917,0.0041336417,0.030234635,-0.044722065,-0.02744859,0.028320745,0.023269525,-0.040530887,0.011913367,0.033650566,0.0015898622,0.008527718,-0.019684007,0.03844741,0.00825517,0.030428447,-0.024589868,-0.028054252,0.025655832,0.013809089,0.008333906,-0.018654382,-0.009066757,0.008969851,-0.03687269,-0.0110048745,0.0037611595,0.062988825,0.007522319,0.020749971,-0.04181489,-0.03447427,-0.026309947,-0.025801191,-0.02010797,0.025025943,-0.026237268,0.011132063,-0.026600664,0.003029823,-0.025825419,-0.011658989,0.01774589,0.014281505,-0.0067410152,0.003246347,0.017443059,-0.020398688,0.023572356,-0.0052420027,0.043995272,-0.009363531,0.05635077,-0.014741807,0.024456622,0.013506257,0.0008797237,-0.03403819,-0.0074678096,0.016377093,0.077379346,-0.019853592,0.022288352,0.0069166576,-0.007177092,0.0011242597,0.021973409,0.018702835,-0.023608696,0.0066138264,0.015953131,0.013445691,-0.02766663,0.0066319965,0.03178513,0.013639503,0.040264394,0.032487698,0.010586968,-0.00660777,0.020289669,0.03321449,0.018315211,-0.0296532,-0.05731983,-0.014329958,0.0018669524,0.034425814,-0.014172485,0.014196712,-0.016837398,0.0041820947,0.013942334,-0.007177092,-0.00900619,-0.007425413,0.016243849,-0.011519686,0.022433711,-0.009963136,-0.0057447017,0.025268208,0.023741942,0.007764584,-0.008097698,-0.007794867,-0.016704151,0.017225021,0.014257278,-0.00014942812,-0.008424755,0.044843197,0.031058336,0.00696511,-0.013276106,0.01879974,0.0037005935,-0.016389208,-0.011695329,-0.01924793,-0.0046605673,0.03447427,0.03556446,-0.03512838,0.04833181,0.020192763,-0.038180918,0.021961296,-0.0018805797,0.024117451,-0.02958052,0.041766435,-0.030186182,0.017116,0.03471653,0.014572222,0.020834764,0.010683874,-0.0086246235,0.038326275,0.051650837,0.010029759,-0.007631338,-0.02107703,0.0061989482,0.008115868,0.0109079685,0.013154973,0.030113503,0.03554023,-0.023342205,0.022155108,0.0006745558,-0.004618171,0.02560738,0.02766663,-0.0057023056,0.0054782107,-0.008188547,0.04089428,0.003961028,0.0077343006,-0.025970776,-0.01946597,-0.0101630045,0.039610278,-0.014669128,-0.004327453,0.031397507,0.057029113,-0.013227653,0.06042082,-0.0011250167,0.009987363,-0.016716264,-0.051650837,-0.009248455,-0.024323376,0.0120405555,-0.005959712,-0.027085194,-0.010017646,-0.03975564,-0.013397238,-0.014124032,-0.016110603,-0.0061262688,0.01984148,-0.07151654,-0.0019366035,0.021295067,0.021307182,-0.034280457,0.019066233,-0.007528376,-0.010895855,-0.005884004,0.0042608306,0.023632921,0.00555089,0.044794746,-0.0021213302,-0.004981568,-0.0006775841,-0.0029374596,0.017079663,0.02849033,0.028030027,0.0041548396,0.03515261,-0.017188681,0.009781438,0.04646637,0.008115868,0.03287532,0.0006336736,-0.057755906,0.03226966,0.013954447,0.015856225,0.00660777,-0.0065653734,-0.006952997,-0.03856854,0.024480848,0.0034795268,0.028466104,-0.023184732,0.015395922,0.009696645,0.019260043,0.03980409,0.03507993,-0.00031172653,-0.003185781,0.010695986,-0.004748388,-0.002557407,0.036485065,-0.00133397,0.0197688,-0.03597631,-0.04818645,0.002343911,0.0027133648,-0.018133514,-0.075392775,0.0135304835,-0.039852545,0.0017882164,-0.02497749,0.0046211993,-0.028441876,-0.008127981,-0.010005533,0.04377723,-0.00909704,-0.02190073,0.054315746,-0.01898144,-0.017515738,-0.00784332,0.0055266637,0.012597765,0.021537332,-0.024165904,-0.0023514817,0.031179467,0.025655832,0.020883217,0.012319161,-0.021149708,-0.0028390395,-0.010605138,0.011858857,0.0024650434,0.011325875,-0.012779463,-0.004603029,0.009442267,-0.019102572,-0.017515738,0.023075713,0.009702701,0.0015989471,-0.026988288,0.03784175,-0.050342605,-0.003137328,0.002039566,-0.015371695,-0.028223839,0.021137595,-0.008224887,0.007304281,-0.0028768934,0.009296908,-0.016837398,0.010938251,-0.033723246,-0.003864122,0.0050330493,-0.011695329,-0.016074263,-0.018363664,0.03343253,0.0026633977,0.009902569,-0.037163407,-0.012125349,-0.0016352867,0.0047181053,-0.007710074,0.012452406,0.043074664,-0.025510473,-0.019126799,-0.041548397,-0.0022803165,0.0048574074,-0.01579566,0.011198686,0.012924822,-0.030501127,-0.016352868,-0.010423439,0.03471653,0.0076010553,-0.021573672,-0.029168671,0.008224887,0.009357474,0.01108361,-0.015517054,0.0020819623,-0.023342205,0.0056023714,0.023039373,-0.0044455575,0.0000781209,0.020737858,-0.017079663,0.010653591,0.027012514,-0.051166307,0.007819094,-0.028805273,-0.019114686,0.030428447,-0.024214357,-0.0059566833,0.004275972,-0.018969327,-0.0035431213,0.01898144,-0.0021546418,-0.0313006,0.033529434,0.018375779,0.004921002,-0.039513372,0.014947732,-0.0063776183,0.008285453,0.034013964,-0.03205162,-0.016389208,0.00034257743,0.006541147,-0.0029192897,0.027085194,-0.0030267946,-0.04496433,-0.047823053,-0.0146327885,0.0030858468,0.01072627,0.017128116,0.0011999673,0.013263993,0.0052783424,0.016486114,-0.028320745,-0.0037974992,-0.028950632,0.008503491,-0.018278873,0.014342071,0.057416737,-0.01579566,-0.011368271,0.022954581,-0.006317052,0.039295334,0.0131792,-0.0055478616,0.009066757,-0.04714471,0.029532067,-0.02793312,-0.008782095,0.0019290327,-0.010659647,0.02104069,0.015868338,0.0012673473,-0.01770955,-0.014220938,-0.009605795,-0.0047211335,0.009690588,-0.009902569,-0.014463203,-0.0019260044,-0.0000018158023,0.033795927,-0.02231258,0.01760053,0.010817119,-0.0052208044,0.013324559,0.04474629,-0.02766663,-0.011755895,-0.015892565,-0.0109564215,-0.0035249514,0.012325217,-0.020386575,0.045545764,-0.057029113,0.029919691,0.02104069,0.010435552,-0.009890457,0.008127981,0.0022409486,0.016352868,-0.0006681206,0.02014431,0.014644901,0.0067228456,-0.02347545,0.0055024372,0.012949049,0.027424365,0.00829151,0.050536416,-0.023705602,-0.031542864,-0.027424365,0.016243849,0.023899414,-0.003715735,-0.037163407,-0.009587626,-0.041015416,-0.0060142213,-0.02512285,0.0055357483,0.0046121143,0.021440426,0.042783946,0.00743147,-0.0378902,0.008261226,-0.031906262,0.010381043,-0.00069083297,0.008800265,-0.049761172,-0.018412117,-0.04166953,-0.009636079,0.024311263,0.03711495,0.007128639,0.018557476,-0.01197999,0.032754187,-0.024856359,-0.048089545,-0.015541281,-0.018605929,-0.008715473,0.028272292,-0.010962478,0.008358132,0.031203695,0.004693879,0.028538782,-0.012046613,-0.037647936,0.019490195,-0.0009758725,-0.020858992,-0.013324559,-0.026334174,0.028999085,0.024480848,0.019441742,0.0040670186,0.008727586,0.011913367,0.012634104,0.033868607,-0.0019032921,-0.017285587,0.036751557,0.005626598,0.01804872,0.023003034,-0.017200794,0.032948,0.01613483,0.022215674,0.016219622,-0.011150233,-0.011616592,0.021476766,0.009163663,0.023402771,0.011870971,0.018654382,-0.024638321,0.031688225,0.011362215,-0.025365114,-0.022688089,-0.0041942075,-0.021064917,-0.015989471,-0.014463203,0.042250965,-0.0102114575,0.02841765,0.033117585,0.009169719,-0.0065653734,-0.0013203426,0.021173935,-0.0117013855,-0.0030358797,-0.015371695,-0.014935619,-0.0038853202,0.019126799,-0.0047726147,0.011665045,0.014208825,0.052813705,0.061729047,-0.0057113906,-0.012403953,0.00820066,0.0022424627,0.021258729,0.01932061,-0.008134037,0.002834497,0.0072921677,0.0072255447,0.008515605,-0.024832133,-0.009212116,-0.015299017,-0.03583095,0.05291061,-0.008751812,0.024190132,0.013942334,-0.006492694,0.0060202777,0.008194604,-0.034983024,0.0027073082,0.018860307,0.015347469,0.04186334,-0.016486114,0.04544886,0.00043380522,0.0013279134,-0.0051360116,0.011737725,-0.015577621,0.027884668,0.020301782,0.014124032,-0.050681777,-0.020120084,0.021282954,-0.018618044,0.020653065,0.00995708,-0.013712183,-0.015928904,-0.019974725,0.008582227,-0.025583154,-0.03919843,0.018242532,0.030016597,0.040385526,-0.014366297,0.0029465444,-0.003255432,0.0016368009,-0.032560375,-0.0006014978,-0.0071831485,0.008333906,0.0062988824,-0.029338256,0.008352076,-0.018714948,0.0030358797,-0.032899547,-0.01699487,-0.007540489,0.013203426,0.027618177,0.03006505,-0.02399632,-0.0019744574,0.0033371963,0.041693754,-0.018605929,0.015020411,0.034983024,0.0036400273,-0.005993023,-0.024456622,0.0006117184,0.008903228,0.041984472,0.0050360775,0.0025649776,0.004636341,0.014233052,0.021779597,-0.016970642,0.04556999,-0.006734959,0.007298224,0.005423701,0.008703359,0.019829366,0.02048348,0.013905994,-0.03554023,-0.0010235683,-0.012755237,-0.04043398,-0.02560738,0.030089276,0.018484797,0.0056053996,-0.015395922,0.013627389,0.02732746,-0.04508546,-0.06129297,0.0078796595,-0.021295067,-0.02440817,-0.013724295,-0.021319294,0.045133915,-0.03074339,-0.03694537,-0.0094180405,-0.0061050705,0.025752738,-0.0031494412,0.024081111,0.03556446,-0.007582885,0.04418908,0.020350235,0.022215674,-0.006650166,-0.021258729,-0.012210141,0.013021728,-0.0027815017,0.026988288,-0.0040276507,-0.029750105,-0.014208825,0.014669128,-0.04186334,0.023439111,-0.023269525,0.02164635,0.00074004295,-0.01853325,-0.004687822,-0.0130944075,-0.0066925627,0.016425546,0.029532067,-0.0072316015,0.0148750525,-0.031082561,-0.012258594,-0.037744842,0.056932207,0.052183818,-0.0014460174,0.0048574074,0.028320745,-0.06274656,-0.014051353,-0.013700069,-0.01703121,0.02684293,-0.010247797,0.01770955,-0.0049482565,0.03784175,0.0146327885,-0.0036460839,0.025268208,0.037454125,0.023935752,0.013312446,-0.010556685,0.015904678,-0.01823042,-0.010508232,-0.0021728117,-0.003815669,0.028199611,-0.0027799874,-0.0034492437,0.013506257,0.0255347,0.017903361,0.03403819,0.0255347,-0.012827916,0.0087215295,-0.015953131,0.026891382,-0.022046087,-0.020677293,-0.014572222,-0.041136548,0.027012514,0.0049845963,0.007540489,-0.0042608306,-0.029459389,-0.04721739,0.024068998,0.010441609,-0.0064563546,-0.007522319,0.076507196,0.012718897,0.013627389,0.0023393685,0.022361033,-0.009187889,0.039731413,0.01942963,0.015819885,-0.02710942,-0.02519553,-0.008927454,-0.008352076,0.045061234,0.026964061,0.000047340985,0.0029889408,-0.009169719]},{"id":"time-based-key-value-store","name":"Time Based Key-Value Store","description":"Implement a time-based key-value data structure that supports:\n \n* Storing multiple values for the same key at specified time stamps\n* Retrieving the key's value at a specified timestamp\n\nImplement the `TimeMap` class:\n* `TimeMap()` Initializes the object.\n* `void set(String key, String value, int timestamp)` Stores the key `key` with the value `value` at the given time `timestamp`.\n* `String get(String key, int timestamp)` Returns the most recent value of `key` if `set` was previously called on it *and* the most recent timestamp for that key `prev_timestamp` is less than or equal to the given timestamp (`prev_timestamp <= timestamp`). If there are no values, it returns `\"\"`.\n\nNote: For all calls to `set`, the timestamps are in strictly increasing order.\n\n**Example 1:**\n\n```java\nInput:\n[\"TimeMap\", \"set\", [\"alice\", \"happy\", 1], \"get\", [\"alice\", 1], \"get\", [\"alice\", 2], \"set\", [\"alice\", \"sad\", 3], \"get\", [\"alice\", 3]]\n\nOutput:\n[null, null, \"happy\", \"happy\", null, \"sad\"]\n\nExplanation:\nTimeMap timeMap = new TimeMap();\ntimeMap.set(\"alice\", \"happy\", 1);  // store the key \"alice\" and value \"happy\" along with timestamp = 1.\ntimeMap.get(\"alice\", 1);           // return \"happy\"\ntimeMap.get(\"alice\", 2);           // return \"happy\", there is no value stored for timestamp 2, thus we return the value at timestamp 1.\ntimeMap.set(\"alice\", \"sad\", 3);    // store the key \"alice\" and value \"sad\" along with timestamp = 3.\ntimeMap.get(\"alice\", 3);           // return \"sad\"\n```\n\n**Constraints:**\n* `1 <= key.length, value.length <= 100`\n* `key` and `value` only include lowercase English letters and digits.\n* `1 <= timestamp <= 1000`\n","difficulty":"Medium","concepts":["Hash Usage","Search Array"],"solutions":{"python":"class TimeMap:\n\n    def __init__(self):\n        self.keyStore = {}  # key : list of [val, timestamp]\n\n    def set(self, key: str, value: str, timestamp: int) -> None:\n        if key not in self.keyStore:\n            self.keyStore[key] = []\n        self.keyStore[key].append([value, timestamp])\n\n    def get(self, key: str, timestamp: int) -> str:\n        res, values = \"\", self.keyStore.get(key, [])\n        l, r = 0, len(values) - 1\n        while l <= r:\n            m = (l + r) // 2\n            if values[m][1] <= timestamp:\n                res = values[m][0]\n                l = m + 1\n            else:\n                r = m - 1\n        return res\n","javascript":"class TimeMap {\n    constructor() {\n        this.keyStore = new Map();\n    }\n\n    /**\n     * @param {string} key\n     * @param {string} value\n     * @param {number} timestamp\n     * @return {void}\n     */\n    set(key, value, timestamp) {\n        if (!this.keyStore.has(key)) {\n            this.keyStore.set(key, []);\n        }\n        this.keyStore.get(key).push([timestamp, value]);\n    }\n\n    /**\n     * @param {string} key\n     * @param {number} timestamp\n     * @return {string}\n     */\n    get(key, timestamp) {\n        const values = this.keyStore.get(key) || [];\n        let left = 0;\n        let right = values.length - 1;\n        let result = '';\n\n        while (left <= right) {\n            const mid = Math.floor((left + right) / 2);\n            if (values[mid][0] <= timestamp) {\n                result = values[mid][1];\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n\n        return result;\n    }\n}\n","cpp":"class TimeMap {\nprivate:\n    unordered_map<string, vector<pair<int, string>>> keyStore;\n\npublic:\n    TimeMap() {}\n\n    void set(string key, string value, int timestamp) {\n        keyStore[key].emplace_back(timestamp, value);\n    }\n\n    string get(string key, int timestamp) {\n        auto& values = keyStore[key];\n        int left = 0, right = values.size() - 1;\n        string result = \"\";\n\n        while (left <= right) {\n            int mid = left + (right - left) / 2;\n            if (values[mid].first <= timestamp) {\n                result = values[mid].second;\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n\n        return result;\n    }\n};\n","java":"class TimeMap {\n    \n    private Map<String, List<Pair<Integer, String>>> keyStore;\n\n    public TimeMap() {\n        keyStore = new HashMap<>();\n    }\n\n    public void set(String key, String value, int timestamp) {\n        keyStore.computeIfAbsent(key, k -> new ArrayList<>()).add(new Pair<>(timestamp, value));\n    }\n\n    public String get(String key, int timestamp) {\n        List<Pair<Integer, String>> values = keyStore.getOrDefault(key, new ArrayList<>());\n        int left = 0, right = values.size() - 1;\n        String result = \"\";\n\n        while (left <= right) {\n            int mid = left + (right - left) / 2;\n            if (values.get(mid).getKey() <= timestamp) {\n                result = values.get(mid).getValue();\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n\n        return result;\n    }\n\n    private static class Pair<K, V> {\n        private final K key;\n        private final V value;\n\n        public Pair(K key, V value) {\n            this.key = key;\n            this.value = value;\n        }\n\n        public K getKey() {\n            return key;\n        }\n\n        public V getValue() {\n            return value;\n        }\n    }\n}\n","csharp":"public class TimeMap {\n    \n    private Dictionary<string, List<Tuple<int, string>>> keyStore;\n\n    public TimeMap() {\n        keyStore = new Dictionary<string, List<Tuple<int, string>>>();\n    }\n\n    public void Set(string key, string value, int timestamp) {\n        if (!keyStore.ContainsKey(key)) {\n            keyStore[key] = new List<Tuple<int, string>>();\n        }\n        keyStore[key].Add(Tuple.Create(timestamp, value));\n    }\n\n    public string Get(string key, int timestamp) {\n        if (!keyStore.ContainsKey(key)) {\n            return \"\";\n        }\n\n        var values = keyStore[key];\n        int left = 0, right = values.Count - 1;\n        string result = \"\";\n\n        while (left <= right) {\n            int mid = left + (right - left) / 2;\n            if (values[mid].Item1 <= timestamp) {\n                result = values[mid].Item2;\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n\n        return result;\n    }\n}\n"},"starterCode":{"python":"class TimeMap:\n\n    def __init__(self):\n        \n\n    def set(self, key: str, value: str, timestamp: int) -> None:\n        \n\n    def get(self, key: str, timestamp: int) -> str:\n        \n","javascript":"class TimeMap {\n    constructor() {\n        this.keyStore = new Map();\n    }\n\n    /**\n     * @param {string} key\n     * @param {string} value\n     * @param {number} timestamp\n     * @return {void}\n     */\n    set(key, value, timestamp) {}\n\n    /**\n     * @param {string} key\n     * @param {number} timestamp\n     * @return {string}\n     */\n    get(key, timestamp) {}\n}\n","cpp":"class TimeMap {\npublic:\n    TimeMap() {\n        \n    }\n    \n    void set(string key, string value, int timestamp) {\n        \n    }\n    \n    string get(string key, int timestamp) {\n        \n    }\n};\n","java":"class TimeMap {\n\n    public TimeMap() {\n        \n    }\n    \n    public void set(String key, String value, int timestamp) {\n        \n    }\n    \n    public String get(String key, int timestamp) {\n        \n    }\n}\n","csharp":"public class TimeMap {\n\n    public TimeMap() {\n        \n    }\n    \n    public void Set(string key, string value, int timestamp) {\n        \n    }\n    \n    public string Get(string key, int timestamp) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/fu2cD_6E8Hw","embedding":[0.014642804,0.010578561,0.007874831,-0.03654936,0.02520407,0.0068429164,0.016914168,-0.025941975,-0.040423363,-0.0019989733,0.017813489,-0.0063125473,0.0010794745,-0.034450945,0.025849737,-0.00046155098,-0.06179955,0.042637076,0.00034787468,0.06359819,-0.056495856,-0.022886587,0.007361756,-0.0058744163,0.018920347,-0.01112046,-0.038301885,0.03159156,-0.003035211,0.0045398455,0.0021113886,-0.022921177,0.018332329,0.013270762,0.016464507,0.031384025,0.047272045,0.0107399775,-0.029977394,-0.015922608,-0.07254529,-0.026933536,0.026541524,0.012302261,-0.031499323,0.0009966042,-0.04750264,0.028501583,-0.053083047,0.065535195,0.003113037,-0.028317107,-0.027948154,-0.05631138,-0.01875893,-0.036180407,-0.041829992,-0.010440203,0.023001885,0.04994695,0.029908216,-0.0023837793,0.0040757726,0.04249872,0.010307612,0.000043304182,-0.018620573,-0.0029862097,-0.053175285,0.0010463264,-0.032306407,0.026956595,-0.0029472967,-0.055527356,0.018539865,0.000060216007,-0.06378267,0.03855554,0.023163302,-0.010353731,-0.0029660326,-0.0022353334,0.024581462,0.03546556,0.0075462325,-0.031822156,-0.054236025,-0.017502187,0.050592616,-0.04337498,0.027279427,0.016084025,0.048471138,0.06512012,0.057003167,-0.040700078,-0.017052526,-0.024373926,-0.03023105,-0.012129314,0.0075058783,-0.019911908,0.015219292,0.025826678,0.010376791,0.01829774,-0.027602261,0.007794122,-0.107734144,0.0009331905,0.0037702338,-0.034497064,-0.00044749907,-0.00005674807,0.051284403,-0.015472947,-0.037379503,-0.022875058,0.027832856,-0.054651093,-0.03221417,-0.027463904,-0.009425584,-0.021514544,0.015726602,-0.035673097,0.006070422,-0.053728715,-0.018597513,-0.035396382,-0.00053433265,-0.06664205,-0.0069755088,0.001174595,-0.012129314,0.0010304729,-0.0024832236,-0.011967898,-0.041668575,-0.0021776848,-0.005280633,0.006076187,0.0008661737,0.00911428,0.036895253,0.012648154,-0.045127507,0.0672416,-0.017571364,-0.014193143,0.052806333,-0.044343483,0.024881236,0.007275283,0.057464357,0.025457725,0.014158553,0.03159156,0.02278282,0.02762532,-0.029331727,0.0016804636,0.004940505,0.020073324,0.0049693296,0.016406858,0.0030035041,-0.024420045,-0.029862097,-0.040700078,0.04930128,-0.03862472,0.0047617937,0.034842957,0.006070422,-0.0003952548,-0.04884009,0.007229164,-0.06438222,-0.027855916,-0.021848908,-0.009713829,-0.054466616,0.00013322286,0.017871138,0.006520083,0.001126314,0.02279435,0.023128713,0.00011872056,-0.010878335,0.06364431,-0.0054218727,0.020811228,-0.001076592,-0.017894197,0.0120140165,-0.023105653,-0.010607385,0.024950415,-0.04828666,0.036341824,0.005269103,-0.015749661,0.00024356632,0.0005433403,-0.04111515,-0.015207762,-0.026887417,0.002741202,0.02375132,-0.031476263,0.012590505,-0.03901673,0.0049232105,0.0503159,-0.028985834,-0.043605577,-0.035650037,0.041414924,-0.018413037,0.0063586663,0.01825162,0.023912737,-0.008906744,-0.0017827902,0.0073041073,-0.04651108,-0.006583497,-0.0129825175,-0.027371665,0.0038855313,0.039823815,-0.049670234,0.00741364,-0.03698749,-0.021422306,-0.037702337,0.0074078753,0.020949585,-0.017271591,-0.0029890921,-0.030669179,0.009552412,-0.02863994,0.010745742,-0.025872797,0.0055977018,0.009050867,-0.008399435,0.060508218,-0.01189872,0.007159985,-0.0048828563,-0.031314846,0.082507014,0.0055227582,0.018493745,-0.004614789,-0.012210023,-0.0059147705,-0.0025307839,-0.035350263,-0.057003167,-0.016095554,-0.036134288,-0.038947552,-0.043790054,-0.002819028,-0.009783007,0.03950098,0.0059003583,-0.034796838,-0.047825474,0.011126225,-0.020880407,-0.0043668994,-0.014227732,0.036710776,-0.028547702,-0.010025132,0.017536776,0.04392841,-0.024281688,-0.012798041,0.016672043,0.04607295,0.023589903,0.0030986248,-0.037264206,0.018044084,0.035788395,0.011201168,-0.042198945,-0.0067506786,0.025549963,-0.020972645,0.014170083,-0.02624175,-0.02469676,0.010411379,-0.053682595,-0.060231503,0.023001885,-0.04939352,-0.0019499718,0.020061795,-0.076419294,-0.004182423,0.023843559,0.016153203,0.0076730596,-0.003133214,-0.022932706,-0.010238433,-0.00717728,0.036180407,0.015703542,0.006577732,-0.006923625,-0.037886813,-0.043236624,0.036641598,0.04939352,0.07060829,0.017248532,-0.020742051,-0.017409949,-0.0120140165,-0.005467992,-0.014769631,-0.043328863,0.046142127,0.0053757536,-0.02820181,-0.0005195601,0.07881749,0.013858779,-0.013605124,0.008197664,0.0047358517,-0.06936308,-0.04295991,0.03511967,-0.020246271,0.042291183,0.02330166,-0.019150943,-0.02469676,-0.012163904,-0.017179353,0.016141674,-0.026149511,-0.027071893,0.0058052377,-0.03309043,0.013120875,0.065535195,-0.022494575,0.0059781843,-0.022667522,0.004900151,-0.013639714,-0.04604989,-0.02617257,0.0107399775,0.0038105878,-0.021560663,-0.029815977,0.021468425,0.036387943,-0.034958255,-0.019692842,-0.012590505,-0.000090031266,-0.0071311607,0.019001056,0.050039187,0.040953733,0.030023513,-0.011345291,-0.0038538245,0.0336208,0.031222608,0.07904808,0.007863301,0.013570536,0.03650324,0.007482819,-0.014781161,-0.03272148,0.007511643,-0.01579578,0.02169902,0.011235758,0.0042890734,0.02421251,0.013524417,0.010832216,0.004542728,0.022944236,-0.012532856,-0.028663,-0.00297468,-0.030830596,0.0060934816,-0.007972834,0.022459986,0.013224643,0.019220121,0.024396986,0.011010927,0.014596685,-0.025434665,0.029031953,0.0134898275,-0.048148304,0.00407289,-0.0060473625,0.0009958836,0.006064657,0.012094725,-0.01930083,-0.0071542202,0.014492917,0.041230448,-0.013524417,-0.054651093,-0.03548862,0.011829541,0.035050493,0.005813885,0.007419405,0.038440242,0.03694137,-0.010284552,0.007846006,0.0035684628,-0.029562322,0.00888945,0.0026792295,-0.013201583,-0.01981967,0.05640362,-0.022402337,-0.0563575,0.0028680295,0.03357468,0.05737212,0.008860625,0.072268575,0.028570762,-0.0074424646,0.011990957,-0.016983347,-0.03698749,-0.02322095,-0.005456462,0.027579201,-0.050039187,-0.06816398,-0.011443294,-0.029331727,0.030553881,0.043790054,-0.026495405,0.020534515,-0.022137152,0.01737536,0.0056611155,0.043674756,0.036295705,-0.00079915696,-0.018516805,0.008301432,-0.009708064,0.011696949,0.018170912,0.031430144,0.017513717,-0.0068486813,-0.035603918,-0.013397589,0.021410776,-0.028570762,0.054189906,-0.018862698,0.025480784,0.015103995,-0.0075577623,-0.046257425,0.01628003,-0.021064883,-0.010180784,-0.038670838,-0.0061396006,0.01679887,-0.017594423,-0.011570121,-0.005643821,-0.012475207,-0.05727988,0.0145620955,0.020857347,-0.01881658,0.06894801,-0.048609495,-0.032006633,0.012636624,0.03468154,-0.034981314,-0.01924318,0.009909835,-0.022344688,0.013731952,-0.026472345,0.029031953,0.01629156,-0.018159382,-0.008503203,-0.022402337,-0.016222382,-0.008226489,-0.0006719692,0.0054074605,-0.020177092,-0.013904898,-0.053267524,-0.025757499,-0.004966447,0.019358478,-0.022321628,-0.036272645,0.023843559,-0.017087115,-0.010036662,0.012452148,0.004312133,0.01577272,-0.0054996987,-0.0066180862,0.03961628,0.014781161,0.013766541,-0.010953278,0.009465938,-0.03269842,0.017467597,0.017848078,-0.030945893,0.017548306,0.007990128,0.019381538,-0.014204673,0.023912737,-0.00028265943,-0.0011544179,0.035373323,0.013512887,-0.030461643,-0.018516805,-0.004358252,0.005208572,0.0022382159,-0.028824417,0.020407688,0.013086285,0.013247702,0.013074756,-0.02965456,0.044597138,-0.01232532,-0.0042458368,0.004626319,0.008013188,0.012890279,0.015138584,-0.01531153,0.04238342,0.027371665,0.0037615865,0.029562322,-0.018516805,-0.030807536,-0.0022771289,-0.00009295875,0.0040613604,0.007949774,-0.033505503,-0.014469857,0.044135947,0.01729465,0.009754183,0.015588244,-0.041530218,0.01881658,-0.03426647,-0.016049435,-0.01775584,0.017490657,-0.02031545,0.057602715,-0.012440618,0.017675132,-0.01162777,0.036226526,-0.01113199,0.0019874435,0.0011436087,0.023958854,0.037886813,-0.017225472,0.00045938915,-0.020995704,0.0007696119,0.0017121703,-0.014250792,0.00047091892,0.01482728,-0.018378448,0.0070908065,0.027994273,0.00455714,0.007794122,0.014435268,0.022575283,-0.024466164,0.012970988,-0.050223663,0.031453203,-0.023612963,0.00023960296,0.010244198,0.01578425,-0.0045859646,0.05197619,0.021307008,0.04879397,0.022563754,-0.0018044085,-0.020200152,0.0043755467,0.0027772326,0.021399247,0.03696443,0.008987453,0.010791861,0.0376101,0.03115343,-0.011039752,-0.011454823,-0.031038132,0.026380107,-0.004505256,0.008111191,0.0014469858,-0.019416127,-0.007869066,-0.008220724,-0.0143084405,0.016545216,0.002942973,-0.022102563,0.013778071,-0.0061511304,0.025965035,-0.003628994,0.00027004877,0.020753581,0.028801357,-0.020776639,-0.015138584,-0.039916053,-0.013455238,-0.023958854,-0.005070215,0.035811454,-0.012025546,-0.047156747,0.011028222,0.01926624,0.02764838,-0.028455464,0.012809571,0.01734077,0.019635193,0.0026014035,0.011085871,0.01824009,0.010284552,-0.014170083,-0.02030392,-0.035626978,0.026287869,0.031522382,-0.027417785,0.022644462,0.027371665,0.009414054,0.006963979,0.00185341,-0.0054449323,-0.028732179,0.02863994,-0.02972374,0.025988095,-0.0029545028,0.0060531273,0.03548862,-0.008958628,-0.0013821308,-0.017813489,0.00034985636,0.014596685,-0.034427885,-0.0005296487,-0.019231651,0.013155464,-0.014711983,0.033851396,-0.029447025,0.0445049,-0.012244612,-0.021422306,-0.039708517,-0.03159156,0.02863994,0.0077710627,0.016579805,-0.025088772,-0.0085435575,0.006525848,0.036341824,0.0012963782,-0.0057389415,-0.019727431,-0.045219745,-0.0076384703,0.02325554,-0.0040873024,-0.023174832,0.039708517,-0.0034041635,-0.00047992653,0.007056217,0.0120140165,-0.02326707,-0.030115752,-0.08338327,0.017409949,-0.0057965904,0.006416315,-0.013559006,-0.021641372,0.04000829,-0.005880181,0.02817875,-0.0034560475,-0.06668817,0.0005037067,-0.021537604,0.04395147,-0.05525064,-0.008774153,0.013282292,0.00568994,-0.026541524,0.039362624,0.0013511445,-0.014204673,-0.0016905521,-0.011598946,0.0098175965,0.030092692,0.014089375,-0.0032802187,0.0031995103,-0.0044418424,-0.0123714395,0.0047531463,0.015680483,-0.011691184,-0.0025235778,-0.016245442,0.00867615,0.016176263,-0.05432826,-0.028893596,0.012717333,-0.03016187,-0.000049587004,-0.053221405,-0.016210852,0.013316881,0.018493745,-0.033989754,0.026979655,-0.025111832,-0.014931048,-0.008624266,-0.00009665187,0.06576579,-0.027809797,-0.028778298,-0.007805652,0.01633768,-0.046695556,0.020903466,0.025642201,-0.011408704,0.0041334215,0.024973474,-0.01829774,-0.01683346,0.06922472,-0.021549134,0.029885156,0.007056217,0.015692012,-0.010428674,0.02967762,0.010728448,-0.013363,0.015242351,0.017559836,-0.0122676715,0.036849134,0.004104597,0.024927355,0.03756398,-0.0077883573,-0.021353127,0.013743482,0.019554485,0.03648018,0.0153807085,-0.020649813,-0.017525246,-0.03751786,0.033551622,0.00096489734,0.086703844,0.032905955,-0.04704145,-0.016406858,-0.0031620385,-0.015092465,-0.034866016,0.024281688,0.015703542,0.032998193,0.029885156,0.077387795,-0.013559006,-0.016971817,0.007275283,0.017997965,-0.028985834,0.010411379,0.048609495,0.0044821966,-0.056449737,-0.016706632,0.014469857,-0.00911428,0.028755238,0.013916428,0.0063529015,-0.034058932,0.006070422,0.0035713452,0.005081745,0.03661854,0.0016429918,0.018585984,-0.02274823,0.02372826,0.0043092505,-0.046695556,-0.0044821966,-0.0050269784,0.0047214394,-0.027256368,0.031222608,0.011074341,0.033367146,-0.018701281,0.02762532,-0.0059724194,-0.016441448,-0.020972645,0.018712811,0.012394499,0.004196835,-0.009759948,0.028317107,0.014931048,-0.0443896,-0.0077364733,0.015046346,0.0018245856,-0.02762532,0.027325546,0.031868275,0.0336208,0.036180407,0.031360965,0.022044914,-0.00047524256,-0.012671214,-0.005462227,-0.017190883,-0.035188846,0.055573475,0.02030392,-0.0090047475,-0.024051093,-0.0016991993,0.055573475,0.02275976,-0.039454862,-0.012671214,0.0015377826,0.030461643,0.03163768,-0.0025336663,-0.016533686,-0.007056217,0.0008726592,-0.026587643,0.040446423,-0.00581965,0.016718162,-0.027302487,-0.015922608,-0.033551622,-0.0006406227,0.0018418803,-0.0064451396,0.0082899025,0.0006298135,-0.029769858,-0.0024716938,0.0046954975,-0.0017727016,-0.04388229,0.0031360965,-0.025757499,-0.014884929,0.024904296,0.02515795,-0.036318764,0.021629842,-0.032260288,-0.009863716,-0.010013603,0.017871138,0.030830596,-0.0012567446,-0.017075585,-0.010567031,0.009944424,-0.024489224,0.007563527,0.025642201,0.0010362378,0.0076327054,0.017502187,-0.009264167,-0.023151772,0.020730522,0.020534515,-0.0016559628,-0.005710117,-0.052714095,-0.03601899,0.0031966278,-0.026426226,0.028109571,-0.0017323474,0.001990326,0.00004186296,-0.016637454,-0.001814497,-0.0028737944,-0.05243738,0.012636624,0.030415524,0.0031101545,0.03064612,0.0684407,0.012555916,0.006012773,0.023912737,-0.020880407,-0.000763847,-0.022171741,-0.0106880935,0.035281084,0.00123945,-0.02970068,-0.0055169933,0.053636476,-0.022356218,0.00964465,-0.024466164,0.013282292,0.012463678,-0.028893596,0.0033321027,-0.0071369256,-0.024028033,0.006623851,-0.020672873,-0.022471515,-0.0037154674,0.0067045595,-0.044850793,-0.017652072,-0.011062811,0.028801357,-0.0069351546,-0.00032067165,0.0003729159,0.022413867,0.017617483,-0.0030063866,0.023843559,-0.015461417,0.025549963,-0.0063010175,0.03260618,0.026449285,0.02764838,-0.04833278,0.026310928,0.005107687,-0.022506105,-0.017663602,-0.010071252,0.011731538,-0.039293446,0.014550566,0.04653414,0.031360965,0.024420045,0.039477922,0.010953278,0.028778298,-0.0078287115,-0.017640542,0.0029804448,-0.005617879,-0.03477378,-0.0006867417,-0.031960513,0.026057273,0.001281966,0.029124191,0.015530596,0.023001885,-0.019081764,-0.020569105,-0.00814578,0.010203844,0.0040613604,0.032813717,-0.019923437,0.006030068,-0.008958628,-0.01338606,0.032352526,-0.014273851,-0.035396382,-0.0134898275,-0.005372871,-0.01161624,0.012705803,-0.0095639415,-0.015484476,-0.022114092,0.022171741,0.018597513,0.04893233,-0.013651243,0.013017107,-0.0008099661,-0.0020739168,-0.011229993,0.02118018,0.005208572,-0.015080935,0.0048655616,0.0052201017,-0.020799698,-0.030553881,0.024396986,-0.03159156,-0.041507162,0.010774567,0.0027772326,0.022298569,0.0033983986,-0.047272045,0.0055977018,0.015542125,0.007257988,-0.0025668144,-0.005730294,0.011339526,0.014170083,-0.022655992,-0.0010571355,0.031314846,-0.007713414,0.0072522233,0.017686661,-0.023197891,0.026656821,0.0052316315,0.06816398,0.016522156,0.013639714,0.028778298,-0.025965035,-0.0059147705,-0.010359496,-0.021595253,0.014977167,0.02414333,0.016441448,-0.04457408,-0.004672438,-0.0022872174,-0.023174832,0.023843559,0.018609043,0.006785268,-0.03694137,-0.035304144,0.023036474,-0.017629012,0.011852601,-0.023509195,0.029101131,0.001781349,0.024489224,0.05091545,0.019911908,-0.005295045,-0.006739149,-0.027925095,0.008912509,-0.027902035,0.00031562737,-0.013570536,-0.02175667,0.02031545,-0.017871138,0.0027368783,-0.014296911,-0.011921779,0.01828621,0.0021748024,0.017283121,0.0120140165,-0.01188719,0.04104597,0.00962159,0.0082899025,-0.019081764,-0.016118614,-0.003582875,-0.04491997,-0.03267536,-0.0017381123,-0.054512735,-0.028616881,0.00097354467,0.014481387,-0.045680936,-0.0052373963,-0.029308667,0.0006571967,-0.0018289093,-0.0022295685,0.0058110026,-0.012302261,-0.0035338735,-0.0060070083,0.025988095,0.012048606,0.00434384,-0.004634966,-0.035742275,0.00063810055,-0.006814092,0.021111002,-0.009419819,0.0049116807,-0.0022367747,0.008076602,-0.014585155,0.023048004,0.03422035,0.021987265,0.0143084405,0.0028233516,-0.023440016,-0.008070837,0.0008005982,-0.008831801,-0.031983573,-0.035211906,-0.0122676715,-0.0051624533,0.00027635408,-0.014112434,0.030945893,-0.031868275,-0.027925095,0.047963828,-0.015265411,-0.026495405,0.0037702338,-0.057648834,0.022955766,0.004389959,0.01285569,-0.047733236,0.0021748024,-0.0119102495,0.00005120838,-0.016948758,-0.017398419,0.04609601,0.033459384,0.020488396,0.009575471,-0.008266843,-0.01235991,0.018931877,-0.013501357,0.01232532,-0.002669141,0.014181613,0.00056459825,0.024535343,0.062491335,0.015968727,0.061107762,-0.02222939,-0.00297468,0.0049606822,0.027786737,0.011080106,-0.013535947,0.01235991,0.03115343,0.007978599,-0.011852601,-0.006525848,0.0014037491,0.009102751,0.0032513943,0.00839367,-0.05575795,0.040285006,-0.005280633,0.010296082,-0.00008985111,-0.0012711568,0.007655765,0.008111191,-0.0011464912,-0.011967898,0.010751507,-0.0016934345,0.011276112,-0.0019932084,0.0106880935,0.038878374,0.027325546,0.013063226,0.007805652,-0.008203429,0.050131425,-0.0035021666,0.019658253,-0.013893369,-0.00072205166,0.03848636,0.020995704,0.0043092505,-0.0246737,0.0015003108,-0.00018213429,0.013097815,-0.014539036,0.004208365,-0.0050990395,-0.009696534,0.0015478712,0.009437114,-0.016902639,0.04549646,0.020580634,0.019427657,0.024097212,-0.016476037,-0.0012207141,-0.031314846,0.00082654017,0.04404371,-0.0070273927,0.031291787,-0.022921177,0.039247327,-0.018943407,0.01879352,-0.005897476,0.031314846,-0.009062396,0.020695932,0.020926526,-0.0072983424,-0.02322095,0.001977355,-0.0027945272,0.006733384,-0.009292992,0.018378448,0.0015233704,-0.061845668,-0.016695103,0.03541944,-0.0016516391,-0.0045081386,0.016418388,-0.012083195,0.025365487,-0.034543183,0.001866381,0.015703542,0.03110731,-0.012959458,0.036918312,0.03368998,-0.03306737,-0.02377438,0.012970988,0.039685458,0.0041334215,0.0014073522,-0.012763452,-0.010999397,-0.011189639,0.021399247,-0.0009627355,-0.040884554,-0.027994273,0.008307197,0.023612963,0.040953733,-0.005044273,0.03654936,0.0065489076,0.0024587228,-0.04399759,0.04106903,-0.03814047,0.012417559,-0.012221552,-0.011743068,-0.05681869,0.016879579,-0.03018493,0.015357649,-0.009085456,0.051284403,0.016775811,0.002166155,0.009955954,-0.0031418614,0.010803391,0.0246737,0.026656821,-0.00865309,0.02965456,0.011454823,-0.00008651829,-0.02030392,-0.013397589,-0.018666692,0.0483789,0.0068775057,0.01434303,0.008347551,-0.017513717,0.0027253486,-0.023612963,0.026587643,0.018862698,0.022448456,0.048517257,-0.0028507349,0.0019096176,0.022356218,-0.022840468,0.009829126,-0.0010787538,-0.006318312,-0.03214499,0.0076384703,0.0032744538,-0.06770279,0.012763452,0.00044605785,0.0066065565,0.0022410983,0.030945893,-0.006381726,-0.009558177,-0.009339111,-0.035788395,0.00032103196,-0.023105653,0.0030323286,-0.04980859,-0.028939715,-0.04286767,0.010803391,0.0013893369,0.03601899,0.027786737,-0.025895856,0.011454823,0.03219111,-0.016625924,0.028847476,-0.011518237,0.021422306,-0.017617483,0.020707462,-0.0023607197,-0.065996386,-0.0006860211,-0.0031216843,0.014965638,-0.0069293897,-0.031453203,0.0053353994,0.03020799,-0.027233308,0.009494763,-0.028893596,0.029746799,-0.00015177857,0.017882667,-0.017698191,-0.014539036,-0.014735042,-0.029746799,-0.031430144,0.00031995104,0.017617483,0.012210023,0.03611123,0.009010512,0.023440016,-0.007603881,-0.007580822,-0.025480784,-0.004358252,-0.0058686514,0.027855916,0.00097282405,0.028386286,0.039777696,-0.023024945,0.020695932,0.005050038,-0.017905727,-0.016741222,-0.011374115,0.01978508,-0.0011450499,0.0023996327,-0.006819857,0.0006579173,0.048194423,-0.0006802562,0.04828666,-0.02324401,-0.007863301,0.0040440657,0.016153203,0.014435268,0.025895856,-0.053636476,0.0078287115,0.028847476,0.0005364945,-0.0073559913,0.011593181,0.0017121703,-0.01738689,0.016060965,0.016164733,0.01137988,0.0014232056,-0.02277129,-0.011743068,-0.034958255,-0.011679654,-0.027094953,0.004248719,0.00887792,0.0048079127,0.019612134,-0.019496836,0.039846875,0.020084854,-0.0007321402,0.002852176,-0.04600377,0.059770312,0.010705388,-0.011281877,-0.00064926996,0.0048655616,-0.007361756,-0.018032555,0.026726,0.023416957,-0.04697227]},{"id":"median-of-two-sorted-arrays","name":"Median of Two Sorted Arrays","description":"You are given two integer arrays `nums1` and `nums2` of size `m` and `n` respectively, where each is sorted in ascending order. Return the [median](https://en.wikipedia.org/wiki/Median) value among all elements of the two arrays.\n\nYour solution must run in $O(log (m+n))$ time.\n\n**Example 1:**\n\n```java\nInput: nums1 = [1,2], nums2 = [3]\n\nOutput: 2.0\n```\n\nExplanation: Among `[1, 2, 3]` the median is 2.\n\n**Example 2:**\n\n```java\nInput: nums1 = [1,3], nums2 = [2,4]\n\nOutput: 2.5\n```\n\nExplanation: Among `[1, 2, 3, 4]` the median is (2 + 3) / 2 = 2.5.\n\n**Constraints:**\n* `nums1.length == m`\n* `nums2.length == n`\n* `0 <= m <= 1000`\n* `0 <= n <= 1000`\n* `-10^6 <= nums1[i], nums2[i] <= 10^6`\n","difficulty":"Hard","concepts":["Search Array"],"solutions":{"python":"class Solution:\n    def findMedianSortedArrays(self, nums1: List[int], nums2: List[int]) -> float:\n        A, B = nums1, nums2\n        total = len(nums1) + len(nums2)\n        half = total // 2\n\n        if len(B) < len(A):\n            A, B = B, A\n\n        l, r = 0, len(A) - 1\n        while True:\n            i = (l + r) // 2\n            j = half - i - 2\n\n            Aleft = A[i] if i >= 0 else float(\"-infinity\")\n            Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")\n            Bleft = B[j] if j >= 0 else float(\"-infinity\")\n            Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")\n\n            if Aleft <= Bright and Bleft <= Aright:\n                if total % 2:\n                    return min(Aright, Bright)\n                return (max(Aleft, Bleft) + min(Aright, Bright)) / 2\n            elif Aleft > Bright:\n                r = i - 1\n            else:\n                l = i + 1\n","javascript":"class Solution {\n    /**\n     * @param {number[]} nums1\n     * @param {number[]} nums2\n     * @return {number}\n     */\n    findMedianSortedArrays(nums1, nums2) {\n        let A = nums1;\n        let B = nums2;\n        const total = A.length + B.length;\n        const half = Math.floor((total + 1) / 2);\n\n        if (B.length < A.length) {\n            [A, B] = [B, A];\n        }\n\n        let l = 0;\n        let r = A.length;\n        while (l <= r) {\n            const i = Math.floor((l + r) / 2);\n            const j = half - i;\n\n            const Aleft = i > 0 ? A[i - 1] : Number.MIN_SAFE_INTEGER;\n            const Aright = i < A.length ? A[i] : Number.MAX_SAFE_INTEGER;\n            const Bleft = j > 0 ? B[j - 1] : Number.MIN_SAFE_INTEGER;\n            const Bright = j < B.length ? B[j] : Number.MAX_SAFE_INTEGER;\n\n            if (Aleft <= Bright && Bleft <= Aright) {\n                if (total % 2 !== 0) {\n                    return Math.max(Aleft, Bleft);\n                }\n                return (Math.max(Aleft, Bleft) + Math.min(Aright, Bright)) / 2;\n            } else if (Aleft > Bright) {\n                r = i - 1;\n            } else {\n                l = i + 1;\n            }\n        }\n        return -1;\n    }\n}\n","cpp":"class Solution {\npublic:\n    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {\n        vector<int>& A = nums1;\n        vector<int>& B = nums2;\n        int total = A.size() + B.size();\n        int half = (total + 1) / 2;\n\n        if (B.size() < A.size()) {\n            swap(A, B);\n        }\n\n        int l = 0;\n        int r = A.size();\n        while (l <= r) {\n            int i = (l + r) / 2;\n            int j = half - i;\n\n            int Aleft = i > 0 ? A[i - 1] : INT_MIN;\n            int Aright = i < A.size() ? A[i] : INT_MAX;\n            int Bleft = j > 0 ? B[j - 1] : INT_MIN;\n            int Bright = j < B.size() ? B[j] : INT_MAX;\n\n            if (Aleft <= Bright && Bleft <= Aright) {\n                if (total % 2 != 0) {\n                    return max(Aleft, Bleft);\n                }\n                return (max(Aleft, Bleft) + min(Aright, Bright)) / 2.0;\n            } else if (Aleft > Bright) {\n                r = i - 1;\n            } else {\n                l = i + 1;\n            }\n        }\n        return -1;\n    }\n};\n","java":"public class Solution {\n    public double findMedianSortedArrays(int[] nums1, int[] nums2) {\n        int[] A = nums1;\n        int[] B = nums2;\n        int total = A.length + B.length;\n        int half = (total + 1) / 2;\n\n        if (B.length < A.length) {\n            int[] temp = A;\n            A = B;\n            B = temp;\n        }\n\n        int l = 0;\n        int r = A.length;\n        while (l <= r) {\n            int i = (l + r) / 2;\n            int j = half - i;\n\n            int Aleft = i > 0 ? A[i - 1] : Integer.MIN_VALUE;\n            int Aright = i < A.length ? A[i] : Integer.MAX_VALUE;\n            int Bleft = j > 0 ? B[j - 1] : Integer.MIN_VALUE;\n            int Bright = j < B.length ? B[j] : Integer.MAX_VALUE;\n\n            if (Aleft <= Bright && Bleft <= Aright) {\n                if (total % 2 != 0) {\n                    return Math.max(Aleft, Bleft);\n                }\n                return (Math.max(Aleft, Bleft) + Math.min(Aright, Bright)) / 2.0;\n            } else if (Aleft > Bright) {\n                r = i - 1;\n            } else {\n                l = i + 1;\n            }\n        }\n        return -1;\n    }\n}\n","csharp":"public class Solution {\n    public double FindMedianSortedArrays(int[] nums1, int[] nums2) {\n        int[] A = nums1;\n        int[] B = nums2;\n        int total = A.Length + B.Length;\n        int half = (total + 1) / 2;\n\n        if (B.Length < A.Length) {\n            int[] temp = A;\n            A = B;\n            B = temp;\n        }\n\n        int l = 0;\n        int r = A.Length;\n        while (l <= r) {\n            int i = (l + r) / 2;\n            int j = half - i;\n\n            int Aleft = i > 0 ? A[i - 1] : int.MinValue;\n            int Aright = i < A.Length ? A[i] : int.MaxValue;\n            int Bleft = j > 0 ? B[j - 1] : int.MinValue;\n            int Bright = j < B.Length ? B[j] : int.MaxValue;\n\n            if (Aleft <= Bright && Bleft <= Aright) {\n                if (total % 2 != 0) {\n                    return Math.Max(Aleft, Bleft);\n                }\n                return (Math.Max(Aleft, Bleft) + Math.Min(Aright, Bright)) / 2.0;\n            }\n            else if (Aleft > Bright) {\n                r = i - 1;\n            }\n            else {\n                l = i + 1;\n            }\n        }\n        return -1;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def findMedianSortedArrays(self, nums1: List[int], nums2: List[int]) -> float:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} nums1\n     * @param {number[]} nums2\n     * @return {number}\n     */\n    findMedianSortedArrays(nums1, nums2) {}\n}\n","cpp":"class Solution {\npublic:\n    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {\n        \n    }\n};\n","java":"class Solution {\n    public double findMedianSortedArrays(int[] nums1, int[] nums2) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public double FindMedianSortedArrays(int[] nums1, int[] nums2) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/q6IEA26hvXc","embedding":[-0.015066093,-0.040223915,0.006945724,-0.02627118,0.013115161,-0.0052603646,-0.035525337,-0.029846184,0.01211416,0.029968755,-0.028681755,-0.05924294,-0.017629882,0.015045664,0.053931504,0.02130703,-0.0010756935,-0.014820949,-0.009867013,0.037077907,0.011828159,0.030316042,0.022389745,-0.011531944,0.03489205,-0.012298017,0.03570919,0.021061886,0.033441618,-0.0037997195,0.015270378,0.0041010412,-0.009203085,0.025801321,-0.024126176,0.038875625,-0.010479872,-0.0098159425,0.009075406,-0.02712918,-0.047802925,0.010612657,-0.028804326,-0.035075907,0.02627118,-0.014095734,0.055565793,-0.0060877227,0.047680352,-0.0042312737,0.012103946,0.05924294,-0.019887242,0.015147807,-0.0038303626,0.048129782,-0.024882035,0.03881434,0.025494892,-0.009218406,0.018610455,-0.0006881885,0.010551372,0.0053318646,-0.014616664,0.008932405,0.017680954,-0.020602243,0.050090928,-0.04449349,-0.069947526,-0.0074666534,0.026455037,-0.03940677,-0.0031996295,0.037609052,0.030295614,0.0064911875,0.014167234,0.002722111,-0.004351292,-0.014473663,0.038936913,0.032604046,-0.020530744,-0.0063839373,-0.022839176,-0.00009990862,-0.038732626,-0.037915483,-0.018508311,-0.03242019,-0.024596034,0.054626077,0.047108352,-0.003539255,0.030111756,-0.014381735,0.031439614,0.042042058,0.0077015823,0.061653513,0.031480473,0.01560745,0.07170439,-0.023697175,0.04379892,0.029519327,-0.014310234,-0.02451432,0.014330663,0.031480473,-0.028211897,-0.021204887,-0.005089275,-0.007553475,0.0010871845,0.032971762,0.059651513,0.0106024435,-0.00054838025,-0.029355898,0.014963949,-0.008033547,-0.016904667,-0.014677949,-0.013472661,-0.076198675,0.041388344,0.012532946,-0.0041189166,-0.007323653,-0.007584118,0.019499099,-0.037425194,-0.016291808,0.026312036,-0.00038686662,0.01306409,0.054952934,0.04947807,0.027313039,0.0018819848,0.03080633,-0.015566593,0.019243741,-0.016026236,0.044697776,-0.019887242,0.019958742,0.008692369,-0.0304999,0.03472862,0.027905468,0.022696175,-0.002084994,0.0082940115,-0.023411175,0.011746445,-0.010296014,-0.017190667,-0.030826757,-0.048415784,0.012226517,0.02843661,0.0064145806,-0.030704185,0.016955739,-0.056995794,-0.009984478,-0.0016393951,0.0037103444,0.021245744,-0.021082316,0.048579212,-0.038712196,-0.054503504,-0.11211216,-0.049559783,0.02318646,-0.030030042,0.021123173,-0.005094382,-0.043880634,-0.011256158,0.064023234,0.0037537552,-0.015096735,-0.0096065495,-0.009836371,0.05732265,0.05736351,-0.008651512,0.025780894,0.0064094733,-0.010868015,-0.020847386,0.043676347,-0.0010341979,0.01786481,-0.0054646507,-0.017466454,0.036465053,0.0021730922,-0.016822953,-0.08146926,-0.007594332,-0.0008720459,0.022859603,-0.00852894,0.018876027,0.029580614,0.024739034,-0.018845383,0.019345883,-0.00064892723,-0.030908471,0.057281796,-0.046086922,0.032154616,0.0012812562,0.006138794,-0.018661527,0.07105067,-0.005960044,0.007762868,0.004290006,0.018743241,0.050826356,0.00856469,0.0499275,0.025433607,0.006302223,0.020203885,-0.021327458,0.001892199,-0.0052067395,-0.04682235,-0.0023020478,0.020203885,0.013728019,-0.027885038,0.018538954,-0.020060886,-0.024739034,-0.024207892,-0.033993192,0.006067294,-0.0019062437,-0.012144803,-0.024044462,0.00919287,-0.00003690714,-0.053073503,-0.007083617,0.031500902,-0.024085319,0.017783096,-0.0096065495,0.011286802,-0.057159223,0.036873624,-0.024310034,-0.04175606,0.040080912,0.0021424494,-0.025862608,0.040612057,-0.026863609,0.017108953,0.025270179,-0.007987583,0.030969758,0.00028169123,-0.008339976,-0.0038610054,-0.01686381,0.0061439015,-0.0032098438,-0.06933467,-0.030173043,-0.01197116,0.038426198,-0.008988584,0.0077271177,-0.0011752829,0.0078088325,-0.0020990386,0.0018960295,-0.04330863,-0.015096735,-0.048579212,-0.009269477,0.027844181,0.0077730822,-0.010857801,-0.018773884,-0.05340036,-0.021123173,-0.06320609,0.013809734,-0.019049669,-0.022532746,0.033952333,-0.037915483,-0.032910474,-0.034401763,0.05940637,-0.038344484,0.038936913,-0.024922892,0.03182776,0.014320449,-0.034381334,-0.0033477368,-0.059733227,-0.03634248,-0.05094893,-0.0070019024,-0.0056229723,0.026291609,-0.015811736,0.027517324,0.026577609,0.015311236,0.013145804,0.028783897,-0.0010648408,0.015362307,-0.033216905,-0.02216503,-0.012573803,0.019917885,0.043226916,0.0030132185,0.017282596,0.0049769175,-0.009284799,-0.006373723,0.036076907,0.047802925,-0.020060886,-0.0062511517,0.036873624,0.018181454,-0.03139876,0.027660325,0.0016687613,-0.012216303,0.010919087,-0.017711597,0.0013240286,-0.006869117,0.008237833,-0.05854837,-0.009504406,0.0051939716,0.01857981,-0.036546767,0.030602043,-0.019570598,-0.01349309,0.00010501577,-0.012349089,0.054748647,0.0053267577,0.010449229,0.0059651514,-0.034667335,0.053155217,0.015260165,0.01472902,0.0011663454,-0.026230322,0.025494892,-0.017160024,-0.027619468,-0.01546445,-0.006838474,-0.005919187,-0.029989185,-0.012737232,0.0047547566,-0.024984177,0.047557782,0.055810936,0.0035545763,-0.042818345,-0.014769878,-0.020377528,-0.014534949,-0.0036669336,0.043145202,0.013411376,-0.009907871,-0.030908471,0.0726441,-0.0060366513,-0.028232325,0.023656318,0.04044863,-0.009478871,0.018651312,-0.01743581,-0.005643401,-0.0010629256,0.016026236,0.037139196,0.058139797,-0.03613819,-0.0080846185,-0.0320729,0.015730022,0.0003179201,0.0060213297,0.035239335,0.011828159,0.07468696,-0.029560184,-0.027313039,-0.0080846185,0.022022031,0.024187462,0.020632885,0.0076096533,0.0021296816,-0.018702384,-0.03615862,0.0018679401,-0.0207146,-0.01779331,-0.0003495206,0.0017134488,0.022124173,-0.05425836,0.030908471,-0.021000601,0.061490085,-0.0206431,-0.02159303,-0.018477669,-0.045514923,-0.0030796113,-0.011317444,0.01073523,-0.024412178,-0.0046653817,0.076035246,0.051561788,0.0028038253,0.04902864,-0.039733626,0.023758462,0.05527979,-0.011000801,0.05029521,0.066025235,0.00041304075,-0.03162347,0.007870118,-0.030377328,0.043104347,-0.04083677,-0.015158021,0.02218546,-0.018487884,-0.004006559,-0.008631083,0.015198878,0.040550772,0.02173603,-0.015045664,0.017394952,0.0015627879,-0.06814981,-0.013462448,0.045514923,0.034013618,0.057118367,0.013993591,0.024187462,-0.019049669,-0.03530062,0.019223312,-0.0050969357,-0.027660325,0.037895054,0.014534949,0.011828159,-0.009581014,-0.05356379,-0.015791308,-0.018161025,-0.005725115,-0.012226517,-0.019560384,-0.029376326,0.003077058,-0.008666834,0.003539255,0.016250951,-0.08183697,0.028395753,-0.0398562,0.059896655,0.01757881,-0.038569197,-0.016475666,-0.033625476,0.045065492,-0.0011120819,0.011123372,0.009218406,0.009295013,-0.0067925095,0.04396235,0.008554476,-0.043226916,0.0059498297,-0.0035596834,0.000111399706,0.003082165,-0.008860906,-0.0008880057,0.03368676,-0.0047930605,-0.03470819,-0.032154616,-0.062143803,-0.024861606,-0.020939315,0.019948527,-0.02627118,0.05282836,0.013503305,0.010908873,0.04902864,-0.0053880434,-0.07529982,-0.053768076,0.03487162,-0.015433807,-0.04396235,0.016690167,0.0041853096,-0.017936312,0.0211436,0.041224916,-0.006133687,0.014565592,0.01370759,-0.037486482,0.00795694,0.024207892,0.020520529,-0.032747045,-0.0031945223,-0.0053012217,0.007829261,0.0027987182,-0.036710195,-0.004844132,0.04112277,-0.013738234,0.027946325,-0.005132686,-0.009769978,0.010081514,0.018845383,-0.008048869,-0.006368616,0.008355297,0.018048668,-0.045637492,-0.014943521,0.0042848988,-0.013227519,-0.045188062,-0.037874624,0.017446024,-0.0063532945,-0.0038865411,-0.015178449,-0.02774204,-0.016945524,-0.004759864,-0.03019347,0.0077424394,-0.026169037,-0.025413178,0.028375326,0.003148558,0.018058883,0.02919247,0.014831164,-0.023778891,0.021368315,0.008549369,0.027701182,0.011256158,0.026475465,0.021715602,-0.0023288603,-0.030908471,0.0006537152,-0.00093780045,0.03413619,0.034544762,0.004006559,0.03370719,-0.03209333,-0.0055412576,0.017139595,0.011388944,0.016496094,0.001387868,-0.0042568096,0.016904667,-0.014708592,-0.03515762,-0.013084519,-0.038017623,0.0009601442,-0.0027067894,-0.014524735,-0.005423793,-0.012757661,0.018273383,0.0106024435,-0.004254256,-0.03660805,-0.019059883,0.02612818,-0.006358402,-0.01634288,0.008462547,-0.046046063,0.016782096,0.0050177746,-0.0015270378,0.04294092,0.013227519,-0.015903665,-0.06876267,-0.03152133,-0.0306429,0.017068096,-0.00024849476,-0.014034448,-0.020418385,-0.020009814,-0.014677949,0.032481473,-0.0042465953,0.017558381,-0.011348087,0.008426798,-0.056546364,-0.025862608,-0.023554176,0.037098337,0.019652313,0.0065473663,0.015587022,0.04277749,-0.04012177,0.022594031,0.0202141,0.054380935,0.03427919,0.027701182,-0.015873022,0.0017313239,-0.018467454,-0.0057761865,-0.009744442,-0.013728019,0.05090807,-0.03415662,-0.017589025,0.021102743,0.018876027,-0.018845383,0.03311476,-0.010331765,-0.0059498297,-0.005720008,0.017466454,-0.024105748,-0.013156018,0.0037716303,0.0101427995,0.024432605,-0.029601041,0.025862608,-0.0034881835,0.009621871,0.0042338273,-0.010755658,-0.07489125,0.022573603,0.028477468,0.052869216,0.017619668,-0.021245744,-0.041184057,-0.0150354495,-0.016874023,0.03432005,-0.005791508,0.044902064,0.006082616,0.030009614,-0.02318646,-0.029887041,-0.006644402,0.01197116,-0.014708592,-0.031480473,-0.0306429,-0.0004893288,0.040979773,-0.02290046,0.0117566595,-0.02218546,0.02876347,0.0027655216,-0.0049232924,-0.003495844,-0.017548168,0.02290046,-0.014412377,-0.0067516523,0.024105748,0.016761666,-0.031317044,0.008431905,0.0053012217,-0.045188062,0.0013585018,-0.02261446,0.023145603,0.027067894,-0.00032222926,-0.0047419886,0.033196475,-0.044738635,-0.0022279941,-0.06463609,0.026332466,-0.038038053,0.0027629682,-0.00011028252,0.03570919,0.0018500651,-0.0062409374,0.0040806127,0.032522332,0.027762467,0.010653515,0.026536752,0.07194953,-0.031174043,-0.013615662,0.023043461,0.007226617,-0.0070376527,0.004662828,-0.0048798816,-0.0017032345,-0.026598036,0.0016138594,-0.01335009,-0.03840577,0.03311476,0.00722151,-0.045637492,-0.0069406168,-0.008161225,0.015689164,-0.050417785,0.004992239,-0.002854897,0.00043666133,0.027047466,-0.0038661126,0.025454035,-0.038446624,0.010311336,-0.023799319,-0.002572727,-0.003370719,-0.01123573,-0.000937162,-0.007384939,-0.0014517074,-0.006440116,-0.004004006,-0.008820048,-0.02467775,-0.016833166,0.020306028,0.02553575,-0.013360305,0.0038584517,-0.00018912416,0.008079511,-0.01562788,-0.021061886,-0.024861606,0.033523332,0.02817104,0.02537232,0.0023990837,0.02684318,0.013043661,-0.0037588624,-0.012563589,0.03356419,0.019080313,-0.0049284,0.0015219307,-0.007456439,-0.0009856799,-0.016822953,-0.028845184,-0.0102858,0.02904947,0.031051472,0.035566192,0.028804326,-0.012502303,-0.033911478,0.0002762649,0.028375326,0.04637292,0.01807931,-0.017854596,-0.017139595,-0.012287803,-0.0049054176,0.045637492,-0.0105105145,-0.018069096,-0.025311036,0.008263369,-0.012308232,-0.014269377,-0.017742239,-0.03532105,-0.042654917,0.0029417183,-0.024432605,-0.007951832,0.0031536652,0.040387344,0.00040154968,-0.012655518,0.0065422594,-0.0024973964,0.011440016,-0.013023232,0.009361406,-0.046005208,-0.035239335,0.008447226,0.0070223315,-0.0198566,0.00031009977,0.0070223315,0.016884238,0.04363549,-0.028702183,0.0074513317,0.014963949,0.016383737,-0.00856469,-0.018212097,-0.014330663,-0.015280593,0.02437132,0.008620869,-0.042042058,0.0140650915,-0.0016432256,-0.027374323,0.042859204,0.021490887,0.0029289506,0.031133186,0.052705787,0.004859453,0.005919187,0.034197476,0.01422852,-0.02232846,0.025760464,0.0075739035,0.03227719,0.00517865,-0.009386942,0.0024973964,-0.0074513317,0.023309033,-0.012165232,0.007487082,-0.022655318,0.0071244743,0.02394232,-0.01779331,-0.0103930505,0.036853194,0.017977169,0.021776889,-0.030254757,0.015811736,0.023778891,-0.020203885,0.006705688,-0.0053318646,0.001156131,-0.011399159,-0.030847186,-0.01795674,0.041960344,-0.008605548,-0.010188764,-0.0035367014,0.03536191,-0.009861907,0.020244742,0.008968156,0.037731625,-0.026026037,-0.02087803,0.011286802,0.012389946,-0.02947847,0.033768475,0.0064145806,-0.0055974363,-0.0019968958,-0.015597236,-0.051153213,0.015015021,-0.021531744,0.022308031,-0.067005806,-0.018477669,0.026026037,0.017017024,-0.044411775,0.016016023,-0.04825235,-0.009637192,-0.003232826,-0.015188664,0.02232846,0.020775886,0.03223633,0.045760065,-0.014872021,0.017507311,-0.004445774,-0.017599238,-0.004969257,0.024391748,0.018824955,-0.014351091,-0.044861205,0.032052472,-0.027537752,-0.039631482,0.021838173,-0.029601041,-0.008186761,-0.016485881,0.008431905,0.014912878,-0.023819748,0.035933908,-0.037752055,-0.026598036,0.0054033645,0.0043053273,0.020081313,-0.027844181,-0.013768876,0.033993192,0.0074411174,0.056587223,0.045024633,-0.011705588,-0.011225516,-0.009836371,-0.013452233,-0.026598036,0.023697175,-0.019539956,0.012216303,-0.003281344,-0.033073902,-0.026598036,0.017466454,-0.00715001,-0.031725615,0.0035903265,0.012052874,0.0025203784,-0.017721811,-0.030316042,0.01714981,-0.03342119,0.002475691,0.037976768,0.010055979,0.024473462,0.008830262,0.007119367,-0.0060724015,-0.0023888694,0.013819948,0.010244943,0.0062102946,-0.044697776,-0.02874304,0.007900761,0.015525736,0.0510715,0.049232926,-0.018355098,-0.009351192,-0.0007558582,0.0021564942,-0.002882986,0.03458562,-0.040060483,-0.0008069297,0.018937312,0.0036209694,-0.020775886,-0.025188465,-0.01955017,0.008237833,-0.029008612,-0.012573803,-0.0002764245,-0.016424594,-0.016261166,-0.0027272182,0.008963048,0.01313559,0.016904667,-0.021858603,0.0020275386,0.025208892,0.043145202,0.030581614,-0.0072725816,0.014453234,0.00090205035,-0.012492089,-0.009943621,0.014432806,0.017752454,-0.029989185,-0.019305026,-0.041960344,-0.047516923,-0.01712938,-0.005684258,0.014688163,-0.04620949,0.03425876,0.026822751,-0.007619868,-0.045065492,0.00842169,0.00032047366,0.02033667,0.027925896,0.0025088873,0.00070606347,0.005694472,0.028579611,0.027558181,0.018201882,-0.016404165,0.003334969,0.018896455,-0.001995619,0.016393952,0.013952734,-0.0129108755,0.008426798,-0.000094482275,0.01860024,0.00426447,0.004708792,0.000091290305,0.020438815,-0.006879331,-0.005791508,-0.013176447,-0.009729121,-0.025617464,0.013299018,0.04330863,0.002402914,-0.0045274883,0.026209895,-0.008952834,-0.018161025,-0.010612657,-0.036710195,-0.02539275,0.0038558983,0.029580614,0.007819046,0.016016023,-0.0066852593,-0.032583617,0.008222511,0.006532045,-0.031071901,-0.035995193,-0.026291609,0.024167033,0.028988183,0.005515722,-0.01686381,-0.030581614,-0.03997877,0.013125376,-0.016874023,0.0053063286,0.036526337,0.004706239,0.01860024,0.010255157,0.010147907,-0.0127270175,-0.007967154,0.018344883,0.040469058,-0.0036873622,0.008585119,0.05425836,-0.013023232,0.010847586,0.027537752,0.032767475,0.0499275,-0.016485881,-0.033462048,0.03691448,-0.043512918,0.024820749,0.000019381236,-0.008288904,-0.024003604,0.010418586,0.008932405,0.018028239,0.010959944,0.014963949,-0.029376326,-0.026148608,0.015648307,-0.010959944,0.012063088,-0.009412478,0.013002804,-0.008191869,0.009667835,-0.017803526,-0.0025280393,0.005709794,0.045596637,0.0075790104,0.004126577,-0.0043947026,0.00302854,-0.006373723,-0.00086693873,0.0071346886,0.00003267778,-0.0027553074,0.025556179,-0.008140797,0.017108953,0.0063481876,0.011266373,-0.019866813,0.0004803913,-0.0047981674,-0.0115728015,-0.009284799,0.0012391222,-0.00092694775,-0.0205716,-0.0012569973,-0.010520729,0.057567794,-0.0107863005,-0.001898583,0.020908672,0.0008126752,-0.016179452,-0.01664931,0.002049244,-0.021940317,-0.007910975,-0.04130663,-0.02772161,0.0018858152,-0.028191468,-0.0031357901,-0.003220058,-0.0020505206,-0.016965952,0.03722091,0.020980172,-0.0048211496,0.0031613258,-0.0011669837,-0.021266172,0.021184457,0.01560745,0.007323653,-0.020101743,-0.06925295,-0.04825235,-0.0009065191,0.004992239,-0.02700661,-0.015178449,-0.023411175,0.038875625,-0.012716804,-0.017599238,-0.0140650915,0.006991688,-0.03474905,0.054666933,0.031153616,-0.0034983978,-0.001102506,0.044248346,-0.042654917,-0.030111756,-0.0057455436,-0.008411476,-0.023268176,0.017190667,0.002908522,-0.0037384338,0.024024034,-0.002854897,0.02216503,-0.026638895,-0.031071901,0.04845664,-0.0060213297,-0.012767875,-0.011858802,0.015638093,-0.009489085,0.0032226117,0.0105718,-0.0047853994,-0.009974264,-0.01025005,-0.03836491,0.03472862,-0.0312149,0.017037453,0.005209293,0.023309033,-0.0019841278,0.012216303,0.020459242,0.019488884,-0.011215301,0.017629882,0.01890667,-0.004037202,-0.024167033,0.022532746,0.009810835,-0.005684258,-0.020060886,-0.012175445,-0.00013142932,0.02639375,0.014116162,0.0052348287,0.011348087,0.019734027,0.009621871,-0.014984378,-0.013962948,-0.0004369805,-0.007384939,-0.0074053677,-0.016782096,0.0016381184,0.00053880434,0.021123173,0.020724814,0.0056893653,-0.020694172,-0.049845785,0.0080846185,-0.01356459,-0.025556179,0.013084519,-0.006567795,-0.007430903,-0.011644302,0.022348888,0.022430602,-0.02698618,0.0052859,-0.034483477,0.0044253455,0.04669978,-0.025454035,-0.0020083867,-0.03762948,0.0017696274,0.022103745,-0.007890547,-0.01745624,0.0024233428,0.032604046,-0.003641398,0.03268576,0.024126176,0.020683957,-0.007211296,0.0007207465,-0.0033860405,-0.031725615,-0.002882986,0.007047867,0.0055004004,0.047639497,-0.0205716,-0.04682235,0.020694172,0.0074411174,-0.010403264,0.030173043,0.007058081,0.019243741,0.007737332,0.036403764,-0.01860024,0.00007708604,0.03740477,-0.022022031,0.001676422,-0.013748447,0.0422872,0.003965702,0.04870178,-0.0008490637,0.004499399,-0.031603046,0.012655518,-0.04580092,-0.017813738,-0.04144963,-0.011388944,-0.026250752,-0.00817144,0.006230723,-0.029805327,-0.020275386,0.033972763,0.031010615,-0.034994192,-0.007967154,0.010449229,0.038569197,0.030009614,0.040489484,0.030254757,0.002704236,0.016250951,0.004627078,0.00039261216,0.008993691,0.0015104396,-0.020479672,-0.022982175,0.006715902,-0.0019202884,-0.014361306,0.008324655,0.049845785,0.023983177,0.021286601,-0.017160024,0.02145003,0.007722011,0.008447226,0.039897054,-0.0010380283,0.01705788,0.008763869,-0.003220058,-0.03356419,0.017180452,0.017006809,-0.033502903,-0.004325756,0.00058796065,-0.013585019,-0.019253956,-0.007584118,-0.0641458,-0.023799319,0.018743241,-0.03926377,-0.017977169,0.03783377,-0.01247166,-0.062266372,-0.017854596,-0.008288904,0.027803324,-0.021511316,0.027619468,0.044248346,0.000512311,0.036219906,0.0060213297,0.023063889,-0.008120368,0.02145003,-0.022348888,-0.049110353,-0.01933567,-0.017262166,0.033911478,-0.024269177,0.01712938,0.044125777,-0.028130183,0.034074906,-0.045106348,-0.021102743,0.04040777,-0.015638093,0.03895734,-0.024841178,-0.019631885,0.013145804,0.035096336,0.01591388,0.00908562,0.0041597737,-0.014912878,-0.01705788,0.015852593,0.00302854,0.0042925593,-0.0035775586,-0.022001602,-0.013533947,0.014841378,-0.021838173,-0.05487122,0.018559383,-0.020377528,0.034953333,-0.005336972,0.008809834,0.015964951,0.0005831727,0.0493555,0.016302023,0.04669978,0.010745443,-0.03225676,0.016588023,-0.015413378,0.006404366,-0.016189665,-0.016955739,0.033176046,0.025127178,-0.0063941516,-0.02639375,-0.010055979,-0.00053529313,0.001123573,0.013687162,-0.0106024435,-0.013166233,0.019968957,0.0015870469,-0.0120324455,0.010055979,-0.012012017,-0.034013618,0.04596435,0.027496895,0.0066903667,-0.0076709394,-0.018916884,-0.009693371,0.035096336,-0.016465452,-0.021797316,0.0017262168,-0.0018181454,0.010219407,0.026230322,0.00306429,0.030356899,0.006669938,0.02919247,-0.015178449,0.004473863,0.020959744,0.004867114,0.001784949,-0.014453234,0.015515522,0.06369638,-0.031296615,0.007982476,0.007910975]},{"id":"copy-linked-list-with-random-pointer","name":"Copy Linked List with Random Pointer","description":"You are given the head of a linked list of length `n`. Unlike a singly linked list, each node contains an additional pointer `random`, which may point to any node in the list, or `null`.\n\nCreate a **deep copy** of the list. \n\nThe deep copy should consist of exactly `n` **new** nodes, each including:\n* The original value `val` of the copied node\n* A `next` pointer to the new node corresponding to the `next` pointer of the original node\n* A `random` pointer to the new node corresponding to the `random` pointer of the original node\n\nNote: None of the pointers in the new list should point to nodes in the original list.\n\n*Return the head of the copied linked list.*\n\nIn the examples, the linked list is represented as a list of `n` nodes. Each node is represented as a pair of `[val, random_index]` where `random_index` is the index of the node (0-indexed) that the `random` pointer points to, or `null` if it does not point to any node.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/5a5c2bdd-51e2-4795-4544-096af4b6cc00/public)\n\n```java\nInput: head = [[3,null],[7,3],[4,0],[5,1]]\n\nOutput: [[3,null],[7,3],[4,0],[5,1]]\n```\n\n**Example 2:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/6e56fa98-cf1e-4ca6-18d4-716dac4ba900/public)\n\n```java\nInput: head = [[1,null],[2,2],[3,2]]\n\nOutput: [[1,null],[2,2],[3,2]]\n```\n\n**Constraints:**\n* `0 <= n <= 100`\n* `-100 <= Node.val <= 100`\n* `random` is `null` or is pointing to some node in the linked list.\n","difficulty":"Medium","concepts":["Singly Linked Lists","Doubly Linked Lists","Hash Usage"],"solutions":{"python":"\"\"\"\n# Definition for a Node.\nclass Node:\n    def __init__(self, x: int, next: 'Node' = None, random: 'Node' = None):\n        self.val = int(x)\n        self.next = next\n        self.random = random\n\"\"\"\n\nclass Solution:\n    def copyRandomList(self, head: 'Optional[Node]') -> 'Optional[Node]':\n        oldToCopy = {None: None}\n\n        cur = head\n        while cur:\n            copy = Node(cur.val)\n            oldToCopy[cur] = copy\n            cur = cur.next\n        cur = head\n        while cur:\n            copy = oldToCopy[cur]\n            copy.next = oldToCopy[cur.next]\n            copy.random = oldToCopy[cur.random]\n            cur = cur.next\n        return oldToCopy[head]\n","javascript":"// class Node {\n//   constructor(val, next = null, random = null) {\n//       this.val = val;\n//       this.next = next;\n//       this.random = random;\n//   }\n// }\n\nclass Solution {\n    /**\n     * @param {Node} head\n     * @return {Node}\n     */\n    copyRandomList(head) {\n        const oldToCopy = new Map();\n        oldToCopy.set(null, null);\n\n        let cur = head;\n        while (cur) {\n            const copy = new Node(cur.val);\n            oldToCopy.set(cur, copy);\n            cur = cur.next;\n        }\n\n        cur = head;\n        while (cur) {\n            const copy = oldToCopy.get(cur);\n            copy.next = oldToCopy.get(cur.next);\n            copy.random = oldToCopy.get(cur.random);\n            cur = cur.next;\n        }\n\n        return oldToCopy.get(head);\n    }\n}\n","cpp":"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    Node* next;\n    Node* random;\n    \n    Node(int _val) {\n        val = _val;\n        next = NULL;\n        random = NULL;\n    }\n};\n*/\n\nclass Solution {\npublic:\n    Node* copyRandomList(Node* head) {\n        map<Node*, Node*> oldToCopy;\n        oldToCopy[NULL] = NULL;\n\n        Node* cur = head;\n        while (cur != NULL) {\n            Node* copy = new Node(cur->val);\n            oldToCopy[cur] = copy;\n            cur = cur->next;\n        }\n\n        cur = head;\n        while (cur != NULL) {\n            Node* copy = oldToCopy[cur];\n            copy->next = oldToCopy[cur->next];\n            copy->random = oldToCopy[cur->random];\n            cur = cur->next;\n        }\n\n        return oldToCopy[head];\n    }\n};\n","java":"/*\n// Definition for a Node.\nclass Node {\n    int val;\n    Node next;\n    Node random;\n\n    public Node(int val) {\n        this.val = val;\n        this.next = null;\n        this.random = null;\n    }\n}\n*/\n\nclass Solution {\n    public Node copyRandomList(Node head) {\n        Map<Node, Node> oldToCopy = new HashMap<>();\n        oldToCopy.put(null, null);\n\n        Node cur = head;\n        while (cur != null) {\n            Node copy = new Node(cur.val);\n            oldToCopy.put(cur, copy);\n            cur = cur.next;\n        }\n\n        cur = head;\n        while (cur != null) {\n            Node copy = oldToCopy.get(cur);\n            copy.next = oldToCopy.get(cur.next);\n            copy.random = oldToCopy.get(cur.random);\n            cur = cur.next;\n        }\n\n        return oldToCopy.get(head);\n    }\n}\n","csharp":"/*\n// Definition for a Node.\npublic class Node {\n    public int val;\n    public Node next;\n    public Node random;\n    \n    public Node(int _val) {\n        val = _val;\n        next = null;\n        random = null;\n    }\n}\n*/\n\npublic class Solution {\n    public Node copyRandomList(Node head) {\n        Dictionary<Node, Node> oldToCopy = new Dictionary<Node, Node>();\n\n        Node cur = head;\n        while (cur != null) {\n            Node copy = new Node(cur.val);\n            oldToCopy[cur] = copy;\n            cur = cur.next;\n        }\n\n        cur = head;\n        while (cur != null) {\n            Node copy = oldToCopy[cur];\n            copy.next = cur.next != null ? oldToCopy[cur.next] : null;\n            copy.random = cur.random != null ? oldToCopy[cur.random] : null;\n            cur = cur.next;\n        }\n\n        return head != null ? oldToCopy[head] : null;\n    }\n}\n"},"starterCode":{"python":"\"\"\"\n# Definition for a Node.\nclass Node:\n    def __init__(self, x: int, next: 'Node' = None, random: 'Node' = None):\n        self.val = int(x)\n        self.next = next\n        self.random = random\n\"\"\"\n\nclass Solution:\n    def copyRandomList(self, head: 'Optional[Node]') -> 'Optional[Node]':\n        ","javascript":"// class Node {\n//   constructor(val, next = null, random = null) {\n//       this.val = val;\n//       this.next = next;\n//       this.random = random;\n//   }\n// }\n\nclass Solution {\n    /**\n     * @param {Node} head\n     * @return {Node}\n     */\n    copyRandomList(head) {}\n}\n","cpp":"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    Node* next;\n    Node* random;\n    \n    Node(int _val) {\n        val = _val;\n        next = NULL;\n        random = NULL;\n    }\n};\n*/\n\nclass Solution {\npublic:\n    Node* copyRandomList(Node* head) {\n        \n    }\n};\n","java":"/*\n// Definition for a Node.\nclass Node {\n    int val;\n    Node next;\n    Node random;\n\n    public Node(int val) {\n        this.val = val;\n        this.next = null;\n        this.random = null;\n    }\n}\n*/\n\nclass Solution {\n    public Node copyRandomList(Node head) {\n        \n    }\n}\n","csharp":"/*\n// Definition for a Node.\npublic class Node {\n    public int val;\n    public Node next;\n    public Node random;\n    \n    public Node(int _val) {\n        val = _val;\n        next = null;\n        random = null;\n    }\n}\n*/\n\npublic class Solution {\n    public Node copyRandomList(Node head) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/5Y2EiZST97Y","embedding":[0.037600406,-0.01671597,-0.023073932,-0.024610791,0.025473958,-0.028273989,0.027431874,-0.032674037,0.021084437,0.009805369,0.037200402,0.003865831,-0.05684272,-0.028737152,-0.060421705,-0.028589781,-0.0037816197,-0.022926563,0.034274053,0.055369016,0.009436944,0.012821191,0.064800695,-0.008015876,0.038105674,-0.027452927,0.04888474,0.015526483,-0.0058526946,-0.018505463,0.02997927,-0.009431681,0.034442477,0.069979705,-0.028589781,0.03970569,0.05979012,-0.023094986,0.004857947,0.029474001,-0.0048211045,-0.037200402,-0.013231722,-0.000857904,0.011389596,-0.02614765,-0.011421176,-0.03749514,-0.006747441,0.081432454,-0.012747506,0.012621189,-0.018158091,-0.019010732,-0.054990064,0.0017039657,-0.013189616,0.020621276,-0.006836916,0.005307952,0.0067842836,-0.03606355,-0.003886884,0.047832094,0.026547654,0.021937078,0.03743198,-0.030231904,0.0019408104,-0.008789568,-0.024863426,0.04362152,-0.021979185,-0.0117369685,-0.00871062,-0.014221205,0.0033684573,0.0026895027,-0.015315955,-0.00083882484,0.008294826,0.039074104,0.062190145,0.0007204025,-0.044379424,-0.053726893,-0.022273924,-0.08193772,-0.00062895415,-0.03776883,-0.036568817,-0.032021396,0.04035833,0.027410822,-0.0117896,0.01609491,0.028779257,0.026779236,-0.011810654,-0.027516086,-0.017547557,-0.06273752,-0.018084405,-0.010321164,0.017547557,-0.0035816175,-0.026168702,-0.018800203,-0.05494796,0.03042138,-0.03823199,-0.07229552,0.016231753,0.001313172,-0.016021226,-0.06635861,-0.023031827,0.028884523,0.01963179,0.004152676,0.00052632147,-0.06530596,-0.004805315,-0.008900096,-0.02311604,-0.009131677,0.036926713,-0.035242487,0.010458007,0.0010473797,0.071032345,-0.021421283,-0.046821557,-0.00014037981,-0.004239519,-0.018326513,-0.02850557,-0.019831793,-0.0056474293,0.041516237,0.007821137,-0.03696882,-0.03136876,-0.021158123,0.046863664,0.06450596,-0.025873963,0.014600158,-0.03600039,0.04964264,0.039958324,0.023726571,0.0041500446,0.05141108,-0.018442305,-0.037747774,0.0005743483,0.04008464,0.003457932,-0.05368479,0.0029658214,-0.009547471,-0.0115159135,-0.030021377,-0.03101086,-0.021337071,-0.005815852,-0.030147694,0.0018552832,-0.03778988,0.0427373,-0.04183203,0.0053105834,0.06425332,0.010894855,0.0029974007,-0.035831966,-0.01632649,0.03132665,0.027284505,-0.011652757,0.017800191,-0.029389791,-0.0083843,-0.030674014,-0.033705626,-0.0075632394,-0.045179434,-0.045179434,-0.010321164,0.014968582,0.06821126,-0.0125790825,0.009657999,-0.024063418,0.01241066,0.034947746,-0.027937142,0.026084492,-0.0072948155,-0.02747398,0.05692693,-0.01907389,0.028631888,0.017400188,-0.0059263795,-0.014547525,0.023663413,-0.0053842687,-0.039389897,0.050274227,-0.03174771,-0.01851599,0.0042263614,-0.0026171335,-0.020063374,0.0022737088,0.02703187,0.00813693,0.045600493,0.0002894768,0.03511617,0.029116103,0.044800483,-0.020010741,0.02311604,0.0115159135,-0.01223171,0.0024631845,0.019358104,0.024947638,0.016958077,0.006136908,-0.029284526,-0.028231883,-0.060042754,-0.028695047,-0.020737065,-0.03216877,0.0003477011,0.0027000292,0.009758,-0.019421263,0.042947832,0.030737173,-0.026252914,-0.00016891629,0.032737195,-0.008010613,0.044589955,0.048589997,0.0069000744,-0.013631726,-0.034358267,-0.010405376,0.011547493,0.022042343,-0.023221303,-0.0055369018,-0.01226329,-0.058274314,0.0058526946,-0.0360846,-0.023284461,0.0017223869,-0.042905726,0.017979141,-0.0026789762,-0.02402131,0.012694874,-0.008215878,-0.04661103,-0.020305483,-0.047916304,-0.016652811,0.005489533,-0.0043000462,-0.006357963,-0.028484518,-0.045853127,-0.01450542,0.012589609,0.030295063,0.0141791,-0.007600082,-0.0010743537,0.000744087,-0.0016131753,-0.014852792,-0.05368479,-0.0125790825,-0.00080527185,-0.007673767,-0.014715948,-0.016579125,-0.017947562,0.011715916,0.027705561,0.045179434,-0.05326373,0.018494936,-0.033410884,0.04307415,0.023410778,-0.014400155,-0.041200444,-0.016789654,-0.03225298,0.010958013,0.07608503,-0.0112527525,0.01963179,0.0034526687,0.008021139,-0.02261077,0.02187392,0.004147413,-0.07023234,0.002855294,-0.030316116,-0.02901084,-0.019652843,0.039810956,0.044758376,0.008942202,0.023389725,-0.00048355784,0.030295063,0.030674014,-0.016200174,-0.01244224,-0.044211004,0.057979573,0.0141791,-0.010684325,-0.07494818,0.008994834,0.0010658009,0.018442305,-0.0039579375,0.017652823,0.042042557,0.018642306,-0.022210766,-0.045937337,0.009815895,0.021831814,0.042947832,-0.03269509,0.0025368694,0.0033816153,0.00074474484,0.005884274,-0.018126512,-0.025600275,0.020579169,0.006789547,0.048505787,-0.002259235,0.0018447568,-0.03056875,0.016221227,-0.0046526818,-0.028484518,0.030484539,0.016484387,0.013389618,-0.02128444,-0.015179111,0.033474043,0.027684508,0.05103213,-0.049011055,0.0064842803,-0.017326502,-0.011358017,-0.033642467,0.027810825,-0.037158296,0.04242151,-0.039305687,0.0074579753,0.008036928,-0.000824351,0.044800483,0.03823199,0.051284764,-0.023537096,-0.026463443,-0.021705497,0.013579094,-0.055495333,0.002123707,0.007021128,0.022800246,0.044716273,0.025747646,0.033031933,0.01638965,0.01376857,0.022042343,0.043284677,-0.027431874,0.01591596,-0.031347707,-0.03564249,0.008142193,0.013084351,0.015337007,-0.035453014,-0.012610662,0.04543207,-0.017610716,0.009626419,0.020642327,0.027347663,0.018231776,-0.029516108,-0.033389833,0.0021316018,0.02490553,-0.042105716,-0.0027237136,0.03522143,0.016168594,0.019463368,0.012768558,0.0011197489,-0.0062421723,-0.0056211133,-0.0012493556,0.019516,-0.012779085,-0.007084287,0.07928506,0.009689578,0.0077948207,0.019589685,0.0039974116,-0.043284677,0.0054105846,-0.006594808,-0.0018197565,0.04042149,0.004705314,-0.03785304,-0.00419215,0.013084351,-0.000214476,-0.02717924,-0.02482132,0.024695003,0.010779063,0.0072737625,0.045263644,-0.0075369235,0.011063277,0.0028316095,-0.011989603,-0.0386741,-0.005381637,0.043410994,0.013221195,0.03690566,0.021179175,-0.04000043,0.009636946,-0.030252958,0.05237951,-0.00978958,0.062274355,0.017200185,-0.02069496,-0.0017210712,0.007426396,0.027895037,-0.008447459,0.038968842,-0.009873791,0.023663413,-0.01683176,-0.0053158468,0.023073932,0.0036131968,-0.0042237295,-0.010426428,0.04581102,0.0426952,0.0067263884,0.014821213,-0.025495011,0.012273816,0.006615861,-0.0060684863,0.081811406,0.020716013,0.0087316735,-0.019526526,-0.026042385,0.010373796,0.007731662,-0.06299015,-0.059916437,0.035810914,-0.01300014,-0.051074233,-0.0022894985,0.03858989,-0.010594851,0.050274227,-0.046358395,0.0061948034,-0.0036184601,-0.019284418,-0.018084405,-0.017073868,0.003752672,-0.007579029,0.0020802855,-0.011568545,0.015810696,0.0121369725,-0.022484453,-0.025473958,-0.0010934329,-0.0051421607,0.012273816,-0.00073816587,0.016694916,-0.014568578,0.01848441,0.009079046,0.0004917816,0.009157994,0.017073868,-0.0095264185,0.020147586,-0.020505484,-0.008736936,-0.0066842823,0.010979066,0.05259004,-0.016221227,-0.017358081,0.0008289563,-0.006600071,0.04454785,0.004368468,-0.0112948585,0.008547461,-0.027284505,-0.015221217,-0.032400347,-0.035684597,-0.0254108,0.00754745,-0.0060053277,0.01494753,0.039810956,0.03738988,-0.0043395204,-0.00902115,-0.0014329102,0.02924242,-0.011052751,0.0056684823,-0.016200174,0.02467395,0.038126726,-0.024273945,0.02717924,-0.01594754,0.04720051,-0.0022408136,0.01630544,-0.02665292,0.035242487,-0.058232207,-0.02753714,0.017379135,0.00012179407,-0.039368846,-0.016284386,0.009426418,-0.01376857,-0.0035895123,-0.005060581,0.026273968,0.023473937,-0.01783177,0.02225287,0.028400306,0.0019158102,0.033200357,0.01288435,-0.01588438,0.0073685003,-0.00062961207,0.0010815907,-0.004021096,-0.01783177,0.073474474,0.017231764,0.022000236,-0.01936863,-0.026105544,-0.024252893,0.008910622,0.00032582588,0.026463443,-0.008073771,0.014831739,-0.032842457,-0.029368738,0.01871599,0.042674143,0.0009993529,0.04450574,0.037010927,-0.021747602,0.0029395053,-0.0052237404,0.0093053635,0.015010688,-0.02231603,0.020316008,-0.029831901,0.05073739,0.015410692,-0.011168541,-0.00094408914,0.006252699,-0.008226404,0.016137015,-0.027600298,-0.0035263537,0.00028980576,-0.018789677,-0.0088632535,0.01034748,0.009163257,-0.0019776528,-0.04058991,-0.0071684984,0.001534227,0.001300672,0.02924242,-0.012147499,-0.006557965,-0.00012483686,0.007731662,-0.01674755,0.034547742,0.011979076,0.0039132,-0.016705442,-0.025305536,-0.01550543,0.0017947562,0.036800396,-0.0401478,-0.04191624,-0.012821191,0.022189712,-0.0083843,-0.032947723,-0.009915897,-0.014852792,-0.0077842944,-0.00545269,-0.06416911,0.0058000623,-0.004778999,0.005115845,-0.03473722,-0.012715926,-0.0043921527,0.00042401772,-0.0047737355,-0.015547536,0.0049974225,0.030947702,-0.037200402,0.025179219,0.03570565,0.0031342444,-0.0064579644,0.012063288,-0.035431962,0.012210658,-0.008210614,-0.0130211925,-0.000095313524,0.0040237275,0.0334951,0.01553701,0.009900107,0.05949538,-0.004021096,-0.07040076,0.01314751,-0.004173729,0.013926466,0.0405057,-0.02269498,-0.03145297,-0.012547503,0.019252839,-0.009052729,-0.035431962,-0.0036026705,-0.0013171195,0.008026402,0.039010946,-0.05141108,-0.0015289638,0.01632649,-0.021937078,0.0037816197,0.0067263884,-0.005489533,0.03690566,-0.0065316493,0.024505528,-0.041074127,-1.0279716e-7,-0.013315933,-0.014737001,-0.042063612,-0.032589823,-0.021558126,0.019484421,-0.00073685,-0.0012006708,-0.011505387,-0.00694218,-0.069263905,0.011410649,-0.003289509,-0.013715937,-0.02231603,-0.00546848,0.017768612,0.029874006,0.01777914,0.011431702,0.010405376,0.017021235,-0.045768913,0.0033158252,-0.058316417,0.003673724,-0.03734777,-0.03256877,0.013136984,0.014968582,-0.013136984,-0.013642252,-0.0067105987,0.01152644,-0.04698998,-0.020810751,-0.00450268,-0.010547482,0.03042138,-0.034653004,0.010873801,-0.0001654623,-0.002553975,0.002500027,0.030463487,-0.011431702,0.027305556,-0.0011605389,0.016484387,0.00900536,0.017315976,-0.00020970621,-0.00957905,-0.038547784,0.037726723,0.007094813,-0.0057369038,0.0235792,0.012694874,0.020358114,-0.0029868742,0.011315911,0.0062684887,-0.04976896,-0.013347512,-0.03970569,0.0003927674,-0.017537031,0.021663392,-0.00045132067,-0.013610673,-0.03225298,0.013063299,-0.01889494,-0.030000323,0.008405354,0.030316116,0.011221173,-0.010505376,0.047621567,-0.015610695,-0.014168574,0.015189637,0.016073857,-0.04766367,0.06859021,-0.05722167,0.0025381853,0.0020987068,-0.011894865,-0.03960043,-0.009342206,0.02364236,-0.021600233,-0.00622112,0.028021354,0.007479028,0.022926563,-0.016989656,-0.00014465617,0.025473958,0.0014184363,-0.0037474087,-0.026758183,0.008326406,0.025137113,-0.0023605519,0.04271625,-0.024989743,0.01329488,-0.0010230374,0.016642284,-0.019347576,0.007779031,-0.0011684337,-0.032379296,-0.013263301,-0.08749568,-0.008521144,0.03351615,0.021021279,0.032674037,-0.026400285,0.004705314,-0.0040579382,0.039663587,0.0051290025,-0.029347684,-0.010326427,0.035874072,0.03482143,0.012779085,0.049390007,0.011210647,0.0128001375,-0.019252839,-0.0068790214,0.0068053366,-0.015568589,-0.016663337,-0.00916852,0.017179133,0.02600028,0.001065143,0.030231904,-0.0034526687,-0.044168897,0.05023212,-0.00081645616,-0.0005884932,-0.06673756,0.035747755,-0.034884587,-0.008510618,0.023621308,0.014284364,0.015231743,0.01211592,-0.011842233,-0.064800695,0.057769045,-0.021642338,0.00021167992,-0.005021107,0.012168552,-0.030716121,-0.0007315868,-0.003942148,0.00815272,-0.003197403,-0.006115855,-0.01255803,0.029705584,0.017252818,-0.020600222,-0.023073932,0.04221098,-0.021484442,0.046653133,-0.02762135,0.0032552981,0.02136865,-0.00561585,-0.047747884,0.016158069,-0.017726507,-0.04627418,0.07094813,0.00347109,0.029495055,0.007894821,0.0059211166,0.009831685,0.02178971,0.019463368,-0.027263451,-0.026800288,-0.0156528,-0.02157918,-0.036737237,-0.019273892,0.024589738,-0.0034474055,-0.0018526516,0.015284375,0.023284461,-0.011315911,0.0011250122,-0.050779495,0.00024046312,-0.013231722,-0.0011480387,-0.036253024,0.01760019,-0.019421263,-0.007242183,0.004310573,0.044968907,-0.00856325,-0.032063503,0.03440037,-0.018621253,0.030442433,0.019442314,0.020410746,-0.009768526,0.01023169,0.008131666,0.0034947745,-0.028884523,-0.02202129,0.01450542,0.0073737637,0.021263387,-0.022442346,-0.038779367,0.00977379,-0.0029316104,0.009468523,-0.00815272,0.0136843575,-0.02806346,0.0034868796,-0.013547515,0.011126435,-0.0072211307,0.0009704052,0.05642166,-0.008547461,-0.017663348,-0.02614765,0.012810664,-0.0053579523,-0.020758118,0.02665292,0.004926369,0.0056684823,-0.001694755,0.016463336,0.021379178,-0.017326502,-0.046147864,-0.01182118,-0.00074737647,0.04277941,0.027600298,-0.010305374,-0.02732661,-0.011326438,0.0063527,-0.024042364,-0.019979162,0.033179305,-0.018800203,-0.02711608,-0.0025605538,0.05545323,-0.027221346,0.014800159,-0.026989764,0.03726356,-0.017926509,-0.0044947853,0.031874027,-0.046147864,-0.017200185,0.018463356,0.015631747,0.03682145,-0.008010613,0.03301088,-0.019684423,-0.0000017475518,-0.033831943,0.014663316,-0.02402131,0.017821245,0.014147521,0.015600168,-0.01624228,-0.022126554,-0.003931621,0.006868495,0.034568794,0.01594754,-0.014105415,-0.0029342421,-0.021768656,-0.026800288,-0.00043717577,0.020126533,-0.032063503,-0.003042138,0.0038842524,-0.022105502,0.017115973,-0.026716078,0.02364236,-0.015810696,-0.03077928,-0.025010796,-0.022042343,-0.019926531,0.029810848,-0.029116103,0.013052772,0.0043526785,0.0042053084,0.032421403,0.005942169,0.02178971,-0.0039632004,0.008126403,0.009068519,-0.016663337,0.0024934479,0.007815873,-0.01977916,0.028231883,-0.013347512,0.025389748,-0.03732672,0.0040816227,-0.033684574,0.060126964,0.04362152,-0.031095073,-0.0019552843,0.016968604,-0.038484626,-0.0048132096,0.013052772,-0.005510586,-0.008531671,0.0073948167,-0.0338951,-0.025242377,0.009252732,-0.009563261,-0.0058421683,0.038779367,-0.010610641,-0.025979226,-0.007326395,0.053769,0.013642252,0.027052922,0.017768612,-0.005510586,-0.015747538,-0.014747527,-0.009057992,-0.018505463,0.009547471,0.027305556,0.0037553036,0.023010774,-0.044084687,-0.05023212,0.012726453,0.0083843,0.037537247,0.011400123,-0.030295063,-0.0052632145,0.014737001,0.0014802791,-0.0023171303,0.0054316376,-0.010294848,0.012715926,-0.014421208,-0.0141791,-0.04854789,0.029347684,-0.0022105502,0.007931665,-0.022105502,-0.035305645,-0.0034131946,0.016084384,-0.034084577,0.044674166,0.006379016,0.031537183,-0.025368694,-0.029263474,0.00090987823,0.020894961,0.0104106385,0.022000236,0.018021246,-0.007800084,-0.0015644905,0.057179563,0.014379103,0.015000162,-0.0069790226,0.029958218,0.006421122,-0.000080592974,0.027137134,0.011852759,-0.05435848,0.0020144954,0.045137327,0.029600319,-0.042400457,0.0047342614,-0.009457997,-0.047242615,-0.0093053635,-0.015073847,0.01742124,-0.02216866,0.030400328,-0.0360846,-0.014779107,-0.052632146,0.009989581,0.0032052977,0.025137113,0.027937142,-0.015979119,-0.008584303,0.020242324,-0.0057842727,-0.015979119,0.001796072,0.0017000183,0.0038079359,0.00047270246,0.0189581,0.0025158166,-0.003652671,-0.016905446,-0.040989917,0.0064948066,-0.0077948207,0.00030872042,-0.011842233,-0.023368673,0.02865294,-0.03741093,-0.004484259,-0.026842395,0.0011618546,-0.018537043,-0.0034052997,0.010026424,0.0018315987,-0.0059474325,0.018021246,0.014368576,0.019042311,0.0077106096,-0.032589823,0.0112527525,0.018884415,0.023305515,0.0050895284,-0.03920042,0.0067632305,-0.0063158576,-0.008657988,0.0030658224,-0.0013947518,0.008979044,-0.038400415,0.0026750288,-0.00035855648,0.011021172,-0.011894865,-0.008231668,-0.021831814,-0.004771104,0.0061000655,-0.024337104,-0.036337234,0.0069790226,0.032021396,0.01786335,-0.0016368597,-0.03473722,-0.009568525,0.0101474775,-0.018821256,0.019421263,0.030589804,-0.025095006,0.0030131903,0.03698987,0.05768483,0.008984308,-0.00035263537,0.0019947584,0.012936981,-0.0058948,0.020789698,-0.006526386,0.0075158705,0.04404258,-0.0073211314,0.004655313,0.003639513,-0.005557955,0.034653004,-0.0040053064,0.0032184557,-0.005989538,-0.0010565904,-0.0008605356,-0.01344225,-0.012147499,-0.021252861,-0.02010548,-0.012421186,-0.02231603,0.027852932,-0.06273752,0.0032052977,0.021294966,-0.022000236,-0.030000323,0.006626387,0.017284397,0.011105383,0.037158296,0.020421272,0.024358157,-0.019726528,-0.01403173,0.022947615,0.019884424,0.004952685,0.021600233,0.03557933,-0.018126512,0.0009875107,-0.027663456,-0.024189735,0.0006447438,0.032463506,0.021337071,0.042926777,-0.00523953,0.0040921494,0.011494861,0.0031474023,0.056169026,-0.0006246778,-0.007889559,-0.01736861,0.0016921235,0.0013947518,0.008605356,-0.029326633,0.0008526408,-0.06619018,-0.0068105995,-0.02945295,0.017494926,0.00871062,0.045137327,-0.012979087,0.043284677,0.006405332,0.0034553003,0.018789677,0.013315933,0.009242205,-0.0072211307,0.007721136,0.0021855498,-0.016147543,-0.00008486934,-0.048505787,-0.010400112,-0.04096886,-0.02113707,0.03263193,-0.007579029,0.021916026,-0.006557965,-0.033916153,-0.04766367,-0.0059474325,-0.019021258,-0.013947519,-0.0007289552,0.011273806,0.0023776572,0.007084287,0.018558094,0.004276362,0.0025118692,-0.009342206,0.03875831,-0.02585291,-0.023516042,0.04538996,0.021147596,-0.010358007,-0.0063684895,-0.001963179,0.006279015,-0.026084492,-0.010768537,-0.02467395,0.026126597,-0.01715808,0.04926369,-0.027747666,-0.014631737,-0.009515892,0.008500092,-0.008689567,0.02172655,0.00006143158,-0.012126447,0.0254108,0.006742178,0.02223182,-0.0045211012,0.009210626,-0.025031848,0.013105405,-0.019652843,-0.0009802737,-0.0379162,-0.0035947757,0.033116147,0.0079369275,0.0041500446,-0.0064105955,0.023537096,-0.00384741,0.010400112,-0.020863382,0.020821277,-0.031410865,0.020642327,0.014547525,-0.013694884,0.047326826,-0.0132422475,0.027831879,0.023979206,0.026926605,-0.030274011,0.04677945,0.0051421607,-0.009689578,-0.012389607,0.015610695,0.02046338,-0.032231927,-0.023621308,-0.021221282,-0.0044579427,0.025600275,0.06736915,0.0050737388,-0.00650007,0.012684347,0.008894833,-0.028295042,-0.025600275,-0.024042364,-0.012926455,-0.0016026489,-0.03637934,0.007721136,0.019926531,-0.026421336,0.027010817,0.013968571,-0.03705303,-0.00008363577,-0.033179305,-0.011663283,0.0030368748,-0.022337083,-0.017400188,-0.013947519,-0.014147521,0.026042385,-0.015642274,0.01653702,0.0125790825,0.0060526966,0.022105502,0.008126403,0.060632233,0.013568567,-0.0075158705,-0.023431832,0.02054759,-0.003578986,-0.0268845,0.011105383,-0.055790074,-0.028252935,0.010063266,-0.029831901,0.03844252,0.017115973,0.0013776465,0.039347794,0.00825272,-0.015705433,0.008310616,0.028147671,0.03688461,0.018537043,0.0076106084,0.033410884,0.0026566077,0.008621146,-0.044379424,-0.012379081,0.032463506,-0.00561585,0.024147628,0.025010796,-0.040821493,-0.0020513379,0.003331615,0.0028842415,0.009831685,0.014021204,-0.0016763338,0.007505344,0.05751641,0.011000118,0.015126479,0.010431691,-0.008942202,0.0028131881,0.045768913,0.013105405,0.03513722,-0.006868495,0.0011763285,0.007968507,-0.004752683,0.006652703,0.026189756,-0.06046381,0.01241066,0.010105372,-0.018979153,0.009768526,-0.03924253,-0.025747646,0.06985339,-0.038695153,0.022547612,-0.028821364,-0.026084492,-0.011758021,-0.009205363,0.017463347,0.015979119,-0.019358104,0.0037868829,-0.03652671,-0.010310638,-0.002198708,0.015473851,-0.015758064,0.028905574,0.022779193,0.012905402,-0.003894779,-0.00043125465,-0.041663606,-0.019558106,-0.009368522,0.007115866,0.0069790226,0.0029368738,-0.008705357,-0.03823199,0.00026825946,-0.009436944,0.019115996,0.0060211173,-0.014831739,-0.03210561]},{"id":"add-two-numbers","name":"Add Two Numbers","description":"You are given two **non-empty** linked lists, `l1` and `l2`, where each represents a non-negative integer.\n    \nThe digits are stored in **reverse order**, e.g. the number 123 is represented as `3 -> 2 -> 1 ->` in the linked list.\n\nEach of the nodes contains a single digit. You may assume the two numbers do not contain any leading zero, except the number 0 itself.\n\nReturn the sum of the two numbers as a linked list.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/fee72e19-6a21-45a5-365e-3cb45aba9700/public)\n\n```java\nInput: l1 = [1,2,3], l2 = [4,5,6]\n\nOutput: [5,7,9]\n\nExplanation: 321 + 654 = 975.\n```\n\n**Example 2:**\n\n```java\nInput: l1 = [9], l2 = [9]\n\nOutput: [8,1]\n```\n\n**Constraints:**\n* `1 <= l1.length, l2.length <= 100`.\n* `0 <= Node.val <= 9`\n","difficulty":"Medium","concepts":["Singly Linked Lists"],"solutions":{"python":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\n\nclass Solution:\n    def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:\n        dummy = ListNode()\n        cur = dummy\n\n        carry = 0\n        while l1 or l2 or carry:\n            v1 = l1.val if l1 else 0\n            v2 = l2.val if l2 else 0\n\n            # new digit\n            val = v1 + v2 + carry\n            carry = val // 10\n            val = val % 10\n            cur.next = ListNode(val)\n\n            # update ptrs\n            cur = cur.next\n            l1 = l1.next if l1 else None\n            l2 = l2.next if l2 else None\n\n        return dummy.next\n ","javascript":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     constructor(val = 0, next = null) {\n *         this.val = val;\n *         this.next = next;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {ListNode} l1\n     * @param {ListNode} l2\n     * @return {ListNode}\n     */\n    addTwoNumbers(l1, l2) {\n        const dummy = new ListNode();\n        let cur = dummy;\n\n        let carry = 0;\n        while (l1 || l2 || carry) {\n            const v1 = l1 ? l1.val : 0;\n            const v2 = l2 ? l2.val : 0;\n\n            let val = v1 + v2 + carry;\n            carry = Math.floor(val / 10);\n            val = val % 10;\n            cur.next = new ListNode(val);\n\n            cur = cur.next;\n            l1 = l1 ? l1.next : null;\n            l2 = l2 ? l2.next : null;\n        }\n\n        return dummy.next;\n    }\n}\n","cpp":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n\nclass Solution {\npublic:\n    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\n        ListNode* dummy = new ListNode();\n        ListNode* cur = dummy;\n\n        int carry = 0;\n        while (l1 != nullptr || l2 != nullptr || carry != 0) {\n            int v1 = (l1 != nullptr) ? l1->val : 0;\n            int v2 = (l2 != nullptr) ? l2->val : 0;\n\n            int val = v1 + v2 + carry;\n            carry = val / 10;\n            val = val % 10;\n            cur->next = new ListNode(val);\n\n            cur = cur->next;\n            l1 = (l1 != nullptr) ? l1->next : nullptr;\n            l2 = (l2 != nullptr) ? l2->next : nullptr;\n        }\n\n        return dummy->next;\n    }\n};\n","java":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\n\n class Solution {\n    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {\n        ListNode dummy = new ListNode();\n        ListNode cur = dummy;\n\n        int carry = 0;\n        while (l1 != null || l2 != null || carry != 0) {\n            int v1 = (l1 != null) ? l1.val : 0;\n            int v2 = (l2 != null) ? l2.val : 0;\n\n            int val = v1 + v2 + carry;\n            carry = val / 10;\n            val = val % 10;\n            cur.next = new ListNode(val);\n\n            cur = cur.next;\n            l1 = (l1 != null) ? l1.next : null;\n            l2 = (l2 != null) ? l2.next : null;\n        }\n\n        return dummy.next;\n    }\n}\n","csharp":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     public int val;\n *     public ListNode next;\n *     public ListNode(int val=0, ListNode next=null) {\n *         this.val = val;\n *         this.next = next;\n *     }\n * }\n */\n\npublic class Solution {\n    public ListNode AddTwoNumbers(ListNode l1, ListNode l2) {\n        ListNode dummy = new ListNode();\n        ListNode cur = dummy;\n\n        int carry = 0;\n        while (l1 != null || l2 != null || carry != 0) {\n            int v1 = (l1 != null) ? l1.val : 0;\n            int v2 = (l2 != null) ? l2.val : 0;\n\n            int val = v1 + v2 + carry;\n            carry = val / 10;\n            val = val % 10;\n            cur.next = new ListNode(val);\n\n            cur = cur.next;\n            l1 = (l1 != null) ? l1.next : null;\n            l2 = (l2 != null) ? l2.next : null;\n        }\n\n        return dummy.next;\n    }\n}\n"},"starterCode":{"python":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\n\nclass Solution:\n    def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:\n        ","javascript":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     constructor(val = 0, next = null) {\n *         this.val = val;\n *         this.next = next;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {ListNode} l1\n     * @param {ListNode} l2\n     * @return {ListNode}\n     */\n    addTwoNumbers(l1, l2) {}\n}\n","cpp":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n\nclass Solution {\npublic:\n    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\n        \n    }\n};\n","java":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\n\nclass Solution {\n    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {\n        \n    }\n}\n","csharp":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     public int val;\n *     public ListNode next;\n *     public ListNode(int val=0, ListNode next=null) {\n *         this.val = val;\n *         this.next = next;\n *     }\n * }\n */\n\npublic class Solution {\n    public ListNode AddTwoNumbers(ListNode l1, ListNode l2) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/wgFPrzTjm7s","embedding":[-0.016803438,-0.061950278,-0.010208428,-0.03070361,0.029116213,0.030285874,-0.020751046,0.029053552,0.034337915,0.05192461,0.006605454,-0.014276135,-0.054431025,-0.04762193,-0.025105946,-0.026004078,0.020228876,-0.01165484,0.03477654,0.03233278,-0.0071850624,0.018599704,0.09273744,-0.03870326,0.072310135,-0.037220296,0.020845037,-0.010041334,-0.03613418,-0.05530827,0.035570238,-0.017816449,-0.04125145,0.059402086,-0.028385175,0.048206758,0.026547136,0.041752733,0.010678382,0.018860789,0.01650058,-0.02999346,0.024855305,0.023205245,-0.0070231897,0.02140898,-0.026693342,-0.045658566,-0.030828932,0.05965273,0.011519075,-0.012385879,0.016792996,0.01505939,-0.052551214,-0.025168605,-0.016176835,0.006511463,0.023497662,0.009957787,0.035925314,-0.025001511,0.0015717325,-0.0146625405,0.025753437,0.008396498,-0.0106940465,0.02180583,-0.018881677,-0.01610373,-0.047956116,0.026150286,0.02763325,0.03233278,-0.010469513,0.036489256,-0.01643792,0.04499019,0.0058900802,-0.030014345,0.0068769823,-0.003908444,0.020448187,0.030056119,-0.014035936,-0.00081393286,-0.044071168,-0.039246317,-0.038598824,-0.0665036,0.008067531,-0.030870706,0.029492175,0.051506873,0.04361166,0.029575722,0.010432961,0.0029554835,-0.02874025,-0.006093727,0.0034071608,-0.01683477,0.021220999,-0.022286227,0.008793347,0.02631738,0.06420606,0.01545624,-0.042128697,0.006266043,-0.038306408,0.017764231,-0.0026278219,-0.0066576707,0.047162417,-0.01269918,0.0006354159,-0.008542705,-0.03811843,-0.04079194,0.018255072,-0.056812122,0.025293928,-0.036384825,-0.04112613,0.01453722,-0.017524034,-0.04799789,0.02947129,-0.0035873095,0.043486338,-0.018390836,-0.03300116,0.076821685,-0.0359462,-0.017868666,-0.02539836,0.018578818,-0.011372868,-0.0045350487,0.052217025,-0.020281093,-0.021200111,0.021680508,0.012354548,0.0042374115,0.00677777,0.002368042,-0.035194274,-0.019393403,-0.0049031787,0.01509072,0.0136704175,0.011759274,0.008934333,-0.026797777,-0.015821759,0.036301274,0.012271001,0.009143201,-0.018975668,-0.02015577,0.029826365,-0.0073103835,0.013064699,0.025607228,-0.013378002,-0.03920454,-0.009367734,-0.049543515,0.0083442805,-0.044280037,0.0124067655,0.0022074748,-0.00923197,-0.04929287,-0.009075318,-0.063913636,-0.009900348,0.0027178961,-0.028113646,0.045157284,-0.042859733,-0.025983192,-0.018328175,0.002600408,0.015048946,-0.043653432,0.006036288,0.012281444,0.026630683,0.020583952,0.06520862,0.0544728,-0.03928809,0.019330742,-0.0163126,0.00075192517,0.02015577,-0.02671423,0.030557403,0.007670681,0.014787861,-0.0034463236,0.04290151,-0.03398284,-0.035653785,0.0022231399,0.021210555,-0.0405413,0.02514772,-0.01748226,0.008067531,0.016354373,-0.040165335,0.0121352365,-0.0049788933,-0.057396952,-0.009649706,0.009075318,0.021638734,0.03628039,0.01803576,0.0310378,0.026797777,0.033606876,-0.019215865,-0.028134532,-0.0043548997,0.043235697,0.011466859,-0.023894511,-0.0077124545,-0.018171525,0.015508456,-0.016803438,-0.0029006556,-0.017722458,-0.019027883,0.01159218,0.05956918,-0.02894912,-0.018808572,0.042504657,0.004548103,0.005879637,-0.013419775,0.015873976,0.0064279158,0.027570589,0.014672984,-0.03548669,0.013597313,-0.028071873,-0.03655192,-0.0018289012,0.04419649,-0.0019711927,-0.025293928,-0.018338619,0.036259502,-0.0082555115,-0.04503196,-0.06754794,-0.0023784854,-0.07176708,0.009853353,0.05342846,-0.011247547,0.006062397,0.023163471,-0.05075495,-0.00052445475,-0.022432433,-0.028761137,-0.018672807,0.0017845168,0.0009144506,0.01800443,-0.017565807,0.011226661,0.01882946,0.025690775,-0.0014960178,0.021784943,0.0033836633,-0.015654664,0.005691656,-0.002039075,-0.032123912,-0.01659457,0.006407029,0.009049211,0.014276135,-0.04582566,0.020040894,0.0006432485,-0.023852738,0.0078012235,-0.005430571,-0.015560674,-0.0061877174,-0.01971715,-0.00053424545,-0.02088681,-0.03978937,-0.044280037,-0.016114173,-0.03287584,0.013607756,-0.049877703,0.02907444,0.024145152,0.01996779,0.009869018,0.00254558,-0.044029396,-0.025586342,-0.0150280595,-0.025690775,0.029951686,0.0055611134,0.027319947,0.010777594,0.030160554,0.029178873,-0.01858926,-0.015685994,0.028197194,-0.0389539,-0.0042426335,-0.031518195,-0.0004755013,0.011038679,-0.053344913,-0.018704139,0.0033758306,-0.00066282984,-0.011936812,0.036572803,0.028050985,-0.0055611134,0.056812122,-0.02619206,-0.019153204,-0.020145329,0.056812122,0.033335347,0.008297285,0.0012714845,-0.027194627,-0.011989029,0.028531382,0.03201948,-0.038264636,0.049877703,-0.03521516,0.0063600335,0.01312736,0.020897252,-0.04791434,0.009451281,-0.05342846,0.00018977626,-0.003386274,0.022014698,0.027403494,0.006004958,-0.012793171,0.029889025,0.015508456,0.07201772,-0.004305294,0.049334645,-0.018223742,-0.008072752,0.020228876,0.025774324,-0.00036551917,-0.02147164,0.00085897004,0.0011618288,0.035779104,-0.006892647,-0.0016866099,0.018599704,0.030849818,-0.0136182,-0.011299764,-0.021252329,0.0077698934,-0.018150637,0.00040174474,0.007874328,0.030933365,0.0108715845,0.03824375,0.050003022,0.018349063,-0.004023322,0.016281268,-0.02303815,0.023664756,-0.02107479,0.013284011,-0.035695557,0.024583776,0.03233278,0.05242589,0.0023628203,-0.005250422,0.027466156,-0.004965839,0.022474207,-0.008814233,-0.005811755,0.011184887,0.03254165,0.025461022,-0.017325608,0.011759274,-0.0052686976,0.03437969,0.001858926,0.050462533,-0.009096206,-0.028823799,0.027278174,0.047705475,-0.009613154,-0.05363733,0.03692788,0.012782727,-0.019121874,0.02193115,0.033815745,-0.008944776,0.041606527,0.005286974,-0.037011426,-0.05789824,-0.005863972,0.03377397,-0.0018119308,-0.0064279158,-0.015257815,-0.026672456,0.04682823,0.04162741,0.011278877,-0.036635466,0.04361166,0.00797354,0.027863005,0.0075923554,-0.004950174,0.029909912,-0.028176306,0.009023102,-0.024082491,-0.03529871,0.009905569,-0.025607228,-0.048206758,-0.018787686,-0.008224182,-0.0014738255,0.0073678223,-0.009409508,-0.02619206,0.057647597,-0.033418898,-0.020103555,0.03392018,-0.038139313,0.019550053,0.061992053,0.03692788,-0.017430043,-0.0061929394,-0.012354548,-0.016291711,0.01816108,-0.014453673,-0.0378469,-0.055934876,0.041982487,0.011633953,-0.009989117,-0.06299462,0.013075143,-0.009827244,0.056519706,-0.0060101794,0.027048418,0.040562186,-0.013649531,0.0035324816,0.004302683,-0.028364288,0.00091836695,-0.08521818,-0.043528114,-0.022181792,0.0397476,-0.047120642,0.030264987,-0.012197897,-0.021220999,0.048373852,-0.036823444,-0.035194274,0.024061605,0.0034358802,-0.016030626,-0.0001571406,-0.0074200393,0.010015225,-0.0056446604,-0.022098245,-0.0038013994,-0.006234713,0.0080362,0.0056603253,0.015132493,0.0015025449,-0.010725377,-0.0389539,-0.0092633,-0.017868666,0.0084382715,-0.010177098,-0.011769718,0.029325081,-0.010965575,0.005999736,0.036259502,0.013461549,-0.04217047,-0.03498541,0.024980625,0.006741218,0.015957523,-0.025377475,-0.016239494,-0.024834417,0.033815745,-0.0068822037,-0.011028236,0.012271001,0.025168605,-0.0045533245,-0.021158338,-0.019529168,-0.027215512,-0.01745093,0.02036464,0.0065375715,0.008203294,-0.015717324,-0.012646964,-0.030348536,0.025753437,0.0015482348,-0.009869018,0.010610499,0.0023797909,-0.0005149904,0.022077357,0.052801855,0.039768487,-0.026108513,0.03429614,0.007926544,-0.006756883,-0.024959737,-0.019518724,-0.04444713,-0.009947343,-0.022286227,-0.034630332,-0.028259853,-0.024959737,-0.03981026,-0.012908049,0.029638384,-0.02874025,0.025983192,0.016792996,-0.028844684,0.016385702,0.04106347,0.0476637,0.0058900802,0.0023132141,-0.024709096,-0.00031885022,-0.029533949,-0.0037413498,0.007383487,-0.012594746,0.0280301,-0.0025899645,0.030327648,-0.02579521,0.009440838,0.040708393,0.015821759,-0.0047465274,0.021085234,0.007848219,-0.002827552,0.03949696,-0.04135588,-0.028468722,0.014432786,0.028406061,0.05631084,0.034003727,-0.012511199,-0.0049057896,0.0198738,-0.0064488025,0.01711674,0.029325081,0.004020711,-0.04045775,-0.00048757647,0.023915397,0.010020447,-0.034609444,-0.004790912,0.03116312,0.008516597,-0.020093111,0.005540226,0.001868064,-0.0016330874,-0.04058307,0.0030625286,0.010955132,-0.0010032196,0.00954005,-0.031580858,-0.010161433,0.021513414,-0.0033418895,0.048499174,-0.005806533,-0.030473856,-0.03300116,0.0073051616,0.043528114,0.008814233,0.024667323,0.011759274,-0.019926017,-0.049418192,-0.013785294,0.013795738,-0.053929742,-0.030954253,0.00855837,0.024834417,0.023539435,-0.010495622,0.007216393,0.001422914,0.006407029,-0.009096206,-0.04158564,0.01754492,-0.0006716415,-0.018547487,-0.042588204,0.008083195,-0.025085058,0.022432433,0.002509028,-0.014464116,-0.002398067,0.006313038,-0.021241887,0.018296845,0.03239544,0.0075088083,-0.022202678,-0.011007349,0.014453673,-0.0022871057,-0.008359945,-0.030097893,0.02193115,-0.02199381,0.007848219,-0.010840254,0.021210555,0.028113646,-0.004247855,-0.07477478,0.013419775,-0.04319392,0.029805478,0.0142134745,-0.028531382,0.009780249,-0.02475087,0.0067829913,0.030996026,0.014641654,0.030996026,-0.00821896,0.029116213,0.021722283,-0.02180583,-0.0013654752,0.031915046,-0.00013494838,-0.012041246,-0.018192412,-0.03291761,0.0037779016,-0.00008550538,0.019779809,-0.0007532306,0.03665635,0.00352726,0.023727415,0.00018732858,-0.015477126,-0.025565455,0.027842117,-0.02527304,0.016657231,-0.021168781,-0.0058535286,-0.07076451,0.031121347,-0.014035936,-0.015048946,-0.011707057,-0.012740954,0.01211435,0.03738739,0.040875487,0.051673967,-0.018568374,0.023059038,-0.05075495,0.034421463,-0.04281796,0.00386406,-0.022495095,-0.051047362,-0.019215865,0.018129751,0.008819455,-0.0033079486,0.010485179,0.003174795,-0.05259299,-0.0055297827,-0.011644397,0.007842997,0.047371283,-0.013085586,-0.0015495402,0.009122314,0.01659457,0.0381602,-0.02429136,-0.02023932,0.018265516,-0.021826716,-0.0061877174,0.0023053817,-0.042274904,-0.0149340695,0.0021487307,-0.0392672,0.015717324,0.03582088,0.023998944,0.0049762824,0.0011389839,0.009696702,0.021450754,0.02186849,0.00582742,-0.04741306,-0.007033633,-0.041669186,-0.021701396,0.01447456,0.026818665,0.016605014,-0.031935934,-0.019978235,0.003422826,-0.016448364,-0.010584391,0.008286842,0.013451106,-0.017795563,-0.0017571029,-0.010036112,-0.05572601,0.0009627514,-0.017419599,-0.006401807,-0.04824853,0.008083195,-0.026484475,-0.019226309,0.006438359,0.015195155,-0.03548669,-0.007143289,0.031643517,0.006913534,-0.004138199,0.009613154,0.0001624439,0.034003727,-0.0046368716,-0.0038196754,-0.0054827877,0.009613154,-0.008067531,0.027737683,-0.0052739196,-0.024938852,-0.02395717,0.024270473,0.0039528287,-0.0063025947,0.016605014,0.026024966,0.007874328,0.015320475,0.015372692,-0.011644397,0.00634959,-0.027319947,0.009049211,0.024416681,0.013847955,0.01892345,0.009393843,-0.016803438,-0.012312775,-0.021659622,-0.0048326855,0.019403847,-0.044823095,0.067798585,0.032980274,-0.008182407,-0.022996377,-0.032374557,-0.002931986,0.019341186,-0.00843305,-0.016699005,-0.011769718,-0.0041486425,-0.016302155,-0.018119307,0.008981328,0.0058221985,0.015466683,0.04294328,0.0003361471,0.01211435,0.009769806,0.026024966,-0.009811579,0.03318914,0.014380569,-0.035048068,0.04394585,0.0073678223,-0.011560849,0.026024966,0.0067151096,-0.041084357,0.03692788,0.005425349,0.004428004,-0.029701043,0.021680508,-0.012072576,0.0017035804,-0.01217701,-0.021147896,-0.041878052,0.023518547,0.030599177,0.04499019,-0.0080779735,0.004548103,0.0018289012,0.0037596258,0.021241887,0.0111431135,-0.03634305,-0.0121352365,-0.002929375,-0.018380392,-0.022453321,0.031330217,-0.008088417,-0.024729982,0.0060258447,0.026275607,0.033210028,-0.005138155,0.019696262,0.008292063,0.016615458,0.010281532,-0.018338619,-0.020166215,-0.0092476355,-0.030035233,-0.0016135061,-0.023288794,0.05138155,0.009963009,0.013430219,0.0055193393,0.014923626,0.014787861,-0.042546432,-0.03534048,0.016302155,0.012281444,0.00061485544,-0.007639351,0.016417032,-0.083923206,-0.00058776786,-0.0073103835,0.0011553017,-0.010767151,-0.015289145,-0.0077960016,-0.03444235,0.06487443,0.026568022,0.020354196,0.008307729,-0.011759274,-0.012605189,-0.0155711165,-0.014443229,-0.037408277,-0.050003022,0.013346671,0.042859733,0.0050389427,-0.05422216,0.0035768661,0.015508456,-0.014150814,0.017336052,-0.009665371,-0.00628693,0.021273216,-0.04072928,0.0075975773,-0.008145856,-0.033356234,0.037888672,0.0012956349,0.0002754448,-0.031580858,-0.0019790253,0.01070449,-0.0040285434,0.04319392,0.017795563,-0.022432433,0.019550053,-0.03057829,0.04229579,-0.0065741236,-0.036196843,-0.008626252,0.005879637,0.03763803,0.023873623,0.015748655,-0.04262998,0.007905657,-0.00040239745,-0.0013047729,0.02318436,-0.07627863,0.01214568,-0.0042400225,-0.017054081,0.06700489,-0.006370477,-0.0030599176,-0.008929111,0.008683691,0.0011833683,-0.003775291,-0.038055766,-0.0069709728,-0.03876592,-0.0026891767,0.03210303,0.015978409,-0.006375699,0.025189493,-0.008652361,-0.008067531,-0.041710958,-0.015821759,-0.011748831,-0.0020038283,0.02736172,-0.015330918,-0.007853441,0.02023932,0.0028902122,-0.012866274,0.0036395267,0.026735116,-0.007524473,0.00831295,-0.009832466,-0.03318914,-0.010286754,0.020719716,-0.05033721,0.0027361722,-0.008657583,-0.015988853,-0.024186926,-0.0060154013,0.0070127463,-0.040227994,0.01011966,-0.002183977,-0.0058221985,-0.009148423,-0.0012754009,-0.0574805,0.023915397,0.001004525,-0.012740954,0.00040207108,0.024897078,0.011090896,0.040687505,0.024729982,0.033022046,0.01751359,-0.04628517,-0.029533949,-0.0092476355,0.018892119,0.009493055,-0.007440926,-0.05898435,-0.024061605,-0.04340279,0.0011761885,-0.0030442525,-0.035048068,0.030160554,-0.007738563,-0.03011878,-0.036384825,-0.012740954,-0.0033418895,-0.0069709728,0.005174707,-0.026463589,-0.016030626,0.028823799,0.02251598,-0.044363584,0.05493231,-0.018662365,-0.013210908,0.0149340695,0.03168529,0.013931503,-0.0018719804,0.017127184,0.0027257288,-0.00036454012,-0.009352069,0.060321108,0.012542529,0.0133988885,0.018150637,-0.0076759025,0.038786806,-0.008547927,-0.019268082,0.004566379,-0.016667673,0.010370301,0.011560849,-0.0092528565,-0.0057647596,0.012615633,-0.025356587,-0.00026973357,-0.017962657,-0.006725553,-0.0059579625,0.013722634,-0.022453321,0.006323482,0.029951686,0.013419775,0.012782727,0.0070440765,-0.0302441,-0.02330968,0.004490664,0.028531382,0.0021826716,0.007091072,-0.029889025,-0.07782426,-0.029053552,-0.018578818,0.0062451563,-0.017565807,-0.0072007277,-0.008788126,0.012928936,0.0036891329,0.018192412,0.0102397585,-0.0035559793,-0.015811315,0.025252152,0.005461901,0.022160904,0.056269065,0.024521114,0.019006997,0.008903002,0.03809754,0.0329385,-0.028176306,-0.01711674,-0.012991596,-0.03149731,-0.0070858505,0.016354373,0.03339801,-0.0017244673,0.0038980008,-0.038389955,0.01303337,0.0025312202,0.012260557,-0.014704314,-0.014610323,0.00797354,-0.053846195,0.00456899,0.014182144,0.013200464,0.0012447233,0.029345969,0.0069970815,-0.020134885,0.034275256,0.019884244,0.0427553,-0.0032244013,-0.026463589,-0.012417208,-0.03247899,-0.023560321,-0.013357115,-0.005025889,-0.02815542,0.042859733,-0.013983719,-0.009362512,0.008328616,-0.0031147455,-0.0039763264,0.018369948,-0.006375699,-0.006407029,-0.011790604,-0.030223213,0.018025316,-0.010631386,-0.0025769102,-0.01355554,0.017419599,-0.028301628,0.014286578,0.019069657,-0.058107104,0.009534828,-0.036698125,0.03554935,0.0019633602,-0.020448187,-0.015341362,-0.011216217,-0.033690423,-0.028301628,0.0074461475,0.0022962436,-0.005722986,0.015404022,0.016093288,0.005665547,-0.023059038,-0.018516157,-0.014317908,0.0030677503,0.024040718,0.017691128,0.030014345,-0.022557754,-0.0405413,-0.07799135,0.003054696,0.0067673265,-0.04290151,-0.018683251,-0.0014216085,0.044112943,0.028197194,-0.016396146,0.008563592,0.0023719585,0.032687858,0.0039397744,-0.044029396,-0.008286842,0.03738739,-0.016813882,0.002757059,0.027215512,0.029554836,0.0124067655,-0.0056968774,-0.0083442805,0.010647051,-0.014056823,0.039308976,-0.015257815,0.020897252,-0.022474207,-0.022975491,0.032708745,0.002788389,0.035444915,-0.020928584,0.007618464,0.009352069,-0.003388885,-0.01312736,0.026421815,0.008015313,0.0069970815,-0.008903002,0.045867436,0.014766974,-0.0035168165,0.020510847,-0.01018232,0.0006233407,0.005388797,0.012720067,0.046702906,0.017649354,0.0019124486,0.023936285,0.010683604,-0.016772108,0.011821934,0.010297197,0.06140722,-0.057020992,0.03707409,0.015685994,0.0050676623,0.029909912,0.014276135,0.023017265,-0.013419775,-0.03306382,-0.014881852,-0.016479693,-0.012563416,0.01748226,-0.006145944,-0.010850698,-0.023727415,0.026651569,0.0136704175,0.027299061,0.0013680861,0.024312247,0.014944512,-0.0044462797,-0.015665108,-0.020709272,0.02324702,-0.016249938,0.00036029748,0.0105112875,-0.007926544,0.04208692,-0.021555187,0.0011148335,0.007493143,-0.0092633,0.008871673,-0.019268082,0.011727944,-0.035256933,-0.015967967,-0.028489608,-0.022954604,-0.03018144,-0.001236238,-0.009028324,0.010506066,0.04950174,0.017095855,0.013263124,0.028176306,0.010255423,0.0021082624,0.0041721403,-0.0053783534,-0.023393227,0.048039664,0.019926017,-0.06763149,-0.03870326,0.03235367,0.011905482,0.025502795,0.02527304,-0.014370125,0.020124441,0.00021457934,0.00045526717,-0.0055297827,-0.01594708,0.01211435,-0.0133988885,0.008135413,0.010615721,0.029116213,0.030682724,0.018725025,0.00038346878,-0.020291535,0.021106122,0.010615721,-0.0070231897,-0.04235845,-0.025774324,0.01882946,-0.029951686,-0.0010319389,0.026045851,-0.018714583,-0.00035018043,0.04294328,0.023414114,-0.02999346,0.019790253,0.0020194934,0.018505713,0.037366502,0.034317028,0.015038503,-0.0052974173,0.045742113,0.0053574666,0.017795563,0.028844684,0.013983719,-0.04499019,0.035925314,-0.009634041,0.0028693255,0.014693871,-0.008171964,0.021429867,0.009869018,0.0006132237,0.0043105152,-0.016552797,0.02435402,0.016051514,0.01459988,-0.014766974,0.0072059496,0.013179577,-0.005247811,-0.022620415,-0.031601742,0.0046916995,0.002281884,-0.009764584,-0.009947343,-0.007618464,-0.022202678,-0.020928584,-0.024729982,-0.024562888,0.0021435088,-0.02036464,-0.009560937,0.020719716,-0.0044332254,-0.06487443,-0.0017571029,-0.024583776,0.010354636,-0.050170116,0.026651569,0.04131411,-0.008636696,0.01800443,0.000886384,0.04582566,-0.012939379,0.014035936,-0.025168605,-0.020876367,0.0302441,0.007007525,0.03187327,-0.036447484,0.012615633,0.008302507,0.01735694,0.02619206,0.011466859,0.004125145,0.050128344,-0.020980801,-0.00582742,-0.044864867,-0.0318315,-0.023288794,0.035737332,0.017074967,0.026171172,0.025878757,-0.017189845,-0.009367734,0.02775857,0.029157987,-0.0045872657,0.007357379,0.017367382,-0.022411548,-0.0117175,-0.00016823673,-0.03655192,0.008694135,0.02027065,0.011164,-0.015424909,0.012344104,-0.013712191,0.0028797688,0.06462379,0.013586869,-0.011613066,0.06917711,-0.011090896,-0.0019529167,0.0012767062,0.0039763264,0.002683955,-0.006198161,0.0022166127,0.014411899,-0.00060441205,0.03149731,0.057522275,0.018547487,0.0272364,-0.013994163,0.001438579,-0.0041173124,0.0042713527,-0.0016670285,-0.02395717,0.044405356,0.0012806226,-0.06754794,0.009963009,0.040666617,0.0058378633,0.019591827,-0.0032870618,-0.0036238616,-0.030849818,0.006631562,-0.035674673,0.0405413,0.012928936,0.025502795,0.026526248,0.017701572,0.011926369,-0.005286974,-0.0051538204,0.0073417136,0.011299764,0.004391452,-0.020009564,0.02539836,-0.023267906,-0.0004647315,0.04419649,-0.0044697775,-0.0076289074,0.009597489]},{"id":"find-duplicate-integer","name":"Find Duplicate Integer","description":"You are given an array of integers `nums` containing `n + 1` integers. Each integer in `nums` is in the range `[1, n]` inclusive.\n\nEvery integer appears **exactly once**, except for one integer which appears **two or more times**. Return the integer that appears more than once.\n\n**Example 1:**\n\n```java\nInput: nums = [1,2,3,2,2]\n\nOutput: 2\n```\n\n**Example 2:**\n\n```java\nInput: nums = [1,2,3,4,4]\n\nOutput: 4\n```\n\nFollow-up: Can you solve the problem **without** modifying the array `nums` and using $O(1)$ extra space?\n\n**Constraints:**\n* `1 <= n <= 10000`\n* `nums.length == n + 1`\n* `1 <= nums[i] <= n`\n","difficulty":"Medium","concepts":["Singly Linked Lists","Fast and Slow Pointers"],"solutions":{"python":"class Solution:\n    def findDuplicate(self, nums: List[int]) -> int:\n        slow, fast = 0, 0\n        while True:\n            slow = nums[slow]\n            fast = nums[nums[fast]]\n            if slow == fast:\n                break\n\n        slow2 = 0\n        while True:\n            slow = nums[slow]\n            slow2 = nums[slow2]\n            if slow == slow2:\n                return slow\n","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {number}\n     */\n    findDuplicate(nums) {\n        let slow = 0;\n        let fast = 0;\n        while (true) {\n            slow = nums[slow];\n            fast = nums[nums[fast]];\n            if (slow === fast) {\n                break;\n            }\n        }\n\n        let slow2 = 0;\n        while (true) {\n            slow = nums[slow];\n            slow2 = nums[slow2];\n            if (slow === slow2) {\n                return slow;\n            }\n        }\n    }\n}\n","cpp":"class Solution {\npublic:\n    int findDuplicate(vector<int>& nums) {\n        int slow = 0, fast = 0;\n        while (true) {\n            slow = nums[slow];\n            fast = nums[nums[fast]];\n            if (slow == fast) {\n                break;\n            }\n        }\n\n        int slow2 = 0;\n        while (true) {\n            slow = nums[slow];\n            slow2 = nums[slow2];\n            if (slow == slow2) {\n                return slow;\n            }\n        }\n    }\n};\n","java":"class Solution {\n    public int findDuplicate(int[] nums) {\n        int slow = 0, fast = 0;\n        while (true) {\n            slow = nums[slow];\n            fast = nums[nums[fast]];\n            if (slow == fast) {\n                break;\n            }\n        }\n\n        int slow2 = 0;\n        while (true) {\n            slow = nums[slow];\n            slow2 = nums[slow2];\n            if (slow == slow2) {\n                return slow;\n            }\n        }\n    }\n}\n","csharp":"public class Solution {\n    public int FindDuplicate(int[] nums) {\n        int slow = 0, fast = 0;\n        while (true) {\n            slow = nums[slow];\n            fast = nums[nums[fast]];\n            if (slow == fast) {\n                break;\n            }\n        }\n\n        int slow2 = 0;\n        while (true) {\n            slow = nums[slow];\n            slow2 = nums[slow2];\n            if (slow == slow2) {\n                return slow;\n            }\n        }\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def findDuplicate(self, nums: List[int]) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {number}\n     */\n    findDuplicate(nums) {}\n}\n","cpp":"class Solution {\npublic:\n    int findDuplicate(vector<int>& nums) {\n        \n    }\n};\n","java":"class Solution {\n    public int findDuplicate(int[] nums) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int FindDuplicate(int[] nums) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/wjYnzkAhcNk","embedding":[-0.009799131,-0.017070128,-0.009428268,-0.045798924,0.0074851573,0.018793855,-0.04822259,-0.011836264,-0.006670304,0.04145304,0.005252146,-0.040784445,-0.030212246,-0.0059494725,0.042832024,0.0046410062,-0.020653393,-0.029898841,0.012703351,0.015189698,0.009313353,0.026723003,0.05749938,0.0024249714,0.0696177,-0.0058032167,0.03639677,0.006294218,-0.00003680877,-0.014239036,0.026555855,-0.014176355,0.010264015,0.03639677,-0.010629655,0.015388188,0.04299917,0.005207747,-0.0146360155,-0.013998759,-0.034850642,-0.039948694,-0.0021285426,-0.016453765,0.01967139,0.016746277,0.0686566,-0.00937081,0.027997518,0.031382293,0.0031314387,0.00872833,-0.036354985,0.014541994,-0.012076541,-0.040345676,-0.0149494205,0.041870914,0.010420717,0.014667356,0.029418286,-0.028290028,0.008754447,0.039823335,0.0021128724,0.02340091,0.03650124,0.00869699,-0.017070128,-0.020893669,-0.050061233,0.018574473,0.0415784,-0.05294456,0.030776376,0.033868637,0.05010302,0.0376295,0.018198386,-0.004735028,0.020966798,0.016014997,0.05670542,0.0153464,-0.012818267,-0.015137464,-0.01201386,-0.016077679,0.004194404,-0.056203973,-0.0024732882,0.019149048,0.033994,0.039196525,0.05043732,0.009637205,0.07329499,0.006294218,0.024236657,0.07734837,-0.0005657614,0.042288788,0.008279117,0.037253413,0.03462081,-0.0038261532,0.017383533,0.00018184022,-0.01983854,-0.022230864,0.012954075,-0.0040298663,-0.010728899,-0.020977244,-0.0018451721,-0.005343556,-0.05449069,0.0073597953,0.04316632,0.0007378077,0.0068008895,-0.018543132,0.006367346,-0.028540753,-0.023923252,-0.0075164977,0.0260753,-0.041202318,0.058753,-0.0124839675,0.015649358,-0.035372984,0.0036015464,0.03712805,0.0016035892,-0.04099338,-0.015764274,0.0077306577,0.012797372,0.057624742,0.0029016084,-0.02716177,-0.018887877,0.02340091,0.07964667,0.019911667,-0.044085644,-0.006147962,-0.033095572,0.004008973,0.050980553,-0.037504137,0.04742863,0.033617914,-0.0012118329,0.009219332,0.008649979,-0.02812288,0.017602917,0.01366446,0.0003747802,-0.022168184,-0.018929664,0.0076052956,0.030818162,0.020037029,-0.011930285,-0.04316632,-0.021499585,-0.00011262994,0.038298097,0.0044085644,0.016453765,-0.011522858,0.03063012,-0.010718453,-0.045506414,-0.0904278,-0.044085644,-0.01895056,-0.0034265618,-0.0103005795,0.013528651,-0.054239966,0.022314439,-0.013351055,0.023651633,-0.056496482,-0.027851261,-0.025782788,0.053362433,0.032259826,0.034767065,0.021196628,-0.033555232,-0.0060173767,0.026117086,0.038590606,-0.03852793,-0.017435767,-0.041975383,0.0046775704,0.036981795,0.0040821005,0.04441994,-0.03587443,0.019640049,-0.002528134,-0.01867894,-0.01620304,0.035143152,0.0009800437,0.01244218,-0.048640464,-0.0110109635,-0.01676717,0.00027243386,0.017634258,0.005766653,0.04838974,0.022168184,-0.0017067516,-0.013371948,0.044211004,0.04128589,-0.016359743,-0.013570438,0.017007448,-0.008932044,0.01878341,0.0104416115,-0.008796235,0.004868225,-0.009329024,-0.018041683,-0.0069158045,-0.005354003,-0.01855358,-0.029251138,0.005542046,-0.012745138,-0.0065867295,-0.014406186,0.0011138938,-0.015168804,-0.005173795,-0.06919983,0.05733223,-0.032447867,-0.026764791,-0.0012980192,0.014677803,-0.00072409626,-0.07505006,-0.008890256,0.03915474,-0.013455523,0.0019143824,0.014980761,0.0244247,-0.082697146,0.0138420565,-0.032949317,-0.061719898,0.005325274,-0.014427079,0.017644703,0.027809475,0.038590606,0.015189698,-0.02914667,-0.032949317,0.018961005,-0.009726003,-0.03171659,-0.019817645,0.013204799,-0.012724245,0.03012867,-0.105805546,-0.03593711,-0.013800269,0.011648221,0.0124526275,0.01445842,-0.035958007,0.0013463359,0.024988828,-0.014500206,-0.018104365,-0.05261026,-0.043542407,-0.015294166,0.032531444,-0.024863467,-0.013298821,-0.03108978,0.009872259,0.005542046,-0.06614936,0.041244105,-0.044378154,0.009156651,0.016714936,-0.061302025,-0.03620873,-0.022586057,0.012860053,-0.027308026,0.028457178,-0.0124839675,0.03558192,-0.007840349,-0.023421803,0.036877327,-0.061719898,-0.026764791,-0.019953454,0.043082748,-0.023756102,0.024591848,-0.0022016705,0.03455813,0.08031527,0.02254427,0.032468762,0.019462453,-0.0133615015,0.010650548,-0.026367811,0.0024001603,0.010201334,-0.019525135,0.046551097,-0.048765823,0.024466487,0.008764895,-0.033680595,0.0021389895,0.019117707,0.0090783,0.003611993,0.017613364,0.016098572,0.004421623,-0.002124625,0.016077679,0.028875051,-0.014447972,-0.0038130947,0.028290028,-0.021854779,0.046676457,-0.00057163776,-0.010472951,0.0051137256,-0.038653288,0.026743896,-0.024153082,0.018313302,0.0057770996,0.021217521,0.054908562,-0.02544849,0.034223832,0.005954696,-0.008634309,-0.028039305,-0.015889635,0.08825486,-0.0017054458,0.023505379,-0.014239036,0.012880947,-0.03844435,0.03752503,-0.043834917,0.013695801,-0.014907633,-0.0040664305,-0.028039305,-0.013424182,0.015335954,-0.044211004,0.048598677,0.087753415,-0.007934371,-0.045130327,-0.056203973,-0.04742863,-0.027370708,-0.026284236,0.06924162,0.008806682,0.01343463,0.003128827,0.05118949,0.034077574,-0.030358503,0.02317108,0.034976,0.0046775704,-0.014907633,0.05795904,-0.0010949589,0.00020420298,-0.0011928979,0.035205834,0.05261026,-0.013371948,-0.005834557,0.032949317,0.0024824291,-0.020987691,0.06234671,0.036083367,-0.009391705,0.01722683,-0.012295924,-0.02897952,-0.0031262154,-0.03677286,0.018731175,-0.00057588174,0.020392222,-0.011251241,-0.0053853435,-0.042602193,-0.00021742475,-0.039760653,-0.031904634,-0.024988828,-0.017728278,0.023484485,-0.07304427,0.042288788,-0.022815887,0.051440213,-0.02095635,-0.06573149,-0.03063012,-0.03495511,0.011992967,0.021008585,-0.010509516,-0.012473521,-0.00446341,0.049100123,0.04696897,0.009417822,0.03142408,-0.024215763,0.024591848,0.04788829,-0.0057875463,-0.011648221,-0.000021934273,-0.007767222,-0.012797372,-0.02920935,-0.032886636,0.0053853435,-0.009219332,-0.02346359,0.04475424,-0.0009362976,0.019650497,0.01346597,0.064268924,0.007281444,0.0244247,-0.0147509305,0.0038078714,0.026848365,-0.04366777,-0.001855619,0.034140255,0.096863054,0.020716073,0.024048613,-0.0073284544,-0.03844435,-0.01551355,0.014771825,-0.010060302,-0.007145635,0.04571535,0.01079158,-0.013528651,-0.007866466,-0.038674183,-0.010028961,-0.00018967534,-0.006795666,-0.009052183,-0.0041839574,0.030880844,-0.017373087,0.016579127,-0.004789874,-0.00744337,-0.085162595,0.021687629,0.008900703,0.010232675,-0.00996628,-0.00021530273,-0.017749172,0.0019169942,0.088672735,-0.014991208,0.026681216,0.036793754,0.01874162,-0.0028206455,0.03380596,0.020548925,-0.02755875,-0.00475331,-0.022001034,0.010196111,0.005782323,0.014343504,0.009302907,0.019556474,-0.013800269,-0.032071784,-0.040512826,-0.04571535,0.0006663122,0.009647652,0.035456557,0.008900703,0.011909392,-0.011501965,0.002186,0.030776376,-0.033283617,-0.038507033,-0.05231775,-0.0011589457,0.023296442,-0.002500711,-0.024320232,0.011554199,-0.016317956,0.022920355,-0.0008142002,-0.023547165,-0.014312164,-0.0007939594,-0.017770067,0.020757861,-0.017488,-0.002080226,-0.050771616,-0.02386057,0.028812371,0.0075373915,0.015555337,-0.03439098,-0.017916322,0.014907633,-0.008122414,0.006294218,0.0010355425,-0.0061166217,-0.0077985623,0.016495552,-0.01531506,-0.0048473314,0.009783461,0.00826867,-0.033889532,0.016892532,-0.010133429,-0.006033047,-0.0104416115,-0.038736865,0.03251055,-0.026911046,-0.030943524,0.0060121533,-0.0067016445,-0.041327678,0.0042440267,-0.029083988,-0.004134335,0.018658048,-0.0041291113,0.010378931,0.0004903483,0.04742863,-0.0033011998,0.003585876,-0.037713073,-0.022669632,0.018971452,0.029042201,-0.031277824,-0.008838022,0.052652046,-0.0052155824,-0.022502482,-0.015816508,-0.010462505,0.009120087,0.046509307,0.023254653,0.011481072,-0.008388808,-0.0065397187,-0.004510421,-0.0039175632,0.01682985,-0.012901841,0.0023910194,0.044837814,-0.016683595,-0.0099035995,0.03491332,-0.019389326,0.015179251,-0.019848986,0.01785364,-0.013246587,-0.031528547,0.034662597,-0.021102605,0.002196447,-0.036877327,0.00027847345,0.015638912,-0.020413116,-0.0066128466,0.063683905,-0.03251055,-0.0034892429,-0.0034840193,-0.0019052415,0.022481589,-0.0006346452,-0.0024458652,-0.036459453,-0.011857158,-0.0011622104,0.004003749,-0.040972486,-0.011428838,-0.026451387,0.012316818,-0.0059912596,0.017811853,0.00937081,0.015127017,0.018010342,0.005173795,-0.032949317,-0.048306163,-0.0020240743,0.0017002224,0.0019404995,0.019284857,-0.005495035,0.026973728,-0.034662597,0.04976872,0.022105502,0.028248241,0.0049465764,0.0034317852,0.021959247,0.0042988723,-0.009443939,-0.021666735,0.024132188,0.02914667,0.011533306,-0.03643856,-0.012703351,-0.009120087,0.010885602,-0.020893669,0.026367811,0.0027866932,-0.0020097098,0.0045522084,0.027621431,-0.028854158,-0.008608192,0.0008311763,-0.01508523,-0.0026247671,0.009851365,0.009187991,-0.023651633,0.026660323,0.01676717,0.008435819,-0.016485106,0.025803681,-0.0105565265,0.011115432,0.03819363,-0.05056268,-0.00475331,0.01775962,-0.02505151,-0.0047193575,0.007344125,0.04128589,0.015826955,0.0037948128,0.0013084661,-0.036584817,0.006304665,-0.026451387,-0.0066389637,0.012692904,-0.041035168,0.021917459,0.034056682,-0.026890153,0.0027919165,0.012024307,0.0056778546,0.022732312,0.009689439,0.014646462,0.015722487,-0.0023348676,-0.011784029,-0.020945903,0.022753207,0.023588954,-0.024090402,-0.0065292716,0.036543027,-0.05386388,-0.017947663,-0.036751963,0.06447786,0.011501965,-0.014270376,0.008341798,0.005959919,-0.008200766,0.001988816,-0.045339264,0.014040546,-0.044628877,0.0034605141,0.032092676,0.019514687,0.031528547,0.012797372,0.0073650186,0.01867894,0.013654013,0.012055648,-0.0064613675,0.05043732,-0.038110055,-0.01690298,0.058167975,0.0109796235,-0.028415391,0.026012618,-0.023191974,0.013225693,-0.021833885,-0.017582024,0.0003142212,-0.039133843,0.031068888,-0.03660571,-0.015262825,-0.0066755274,0.0011282582,0.015409081,-0.057917252,0.0039959145,-0.003309035,0.003891446,0.020151945,-0.017571576,0.031403184,0.0002685163,0.010969177,-0.0031862846,0.01574338,0.003567594,-0.015826955,-0.010008068,0.011251241,-0.008707437,-0.025741002,-0.025887256,0.0021115665,-0.0363132,0.008796235,0.021395117,0.04772114,0.003029582,-0.01656868,0.0067277616,0.013967418,-0.007950041,0.011167666,-0.002257822,-0.018083472,0.044211004,0.003972409,0.002760576,0.015868742,0.0076314127,-0.032155357,0.004364165,0.010681889,-0.0099035995,-0.026096193,0.015398635,0.014280823,0.0027109536,0.0293765,-0.034077574,-0.020151945,-0.0010910413,0.015137464,0.0099035995,0.015586678,0.002492876,-0.03223893,0.02032954,-0.008205988,0.048724037,0.034202937,-0.0010864708,0.0037713074,0.009637205,-0.008660426,0.03017046,-0.02115484,-0.049977656,-0.024362018,0.04145304,0.010342366,-0.042664874,0.015325506,-0.021081712,-0.0070777307,0.010958729,0.037044477,-0.012651117,-0.006294218,-0.0045078094,0.014406186,0.025176872,-0.0059233555,-0.013486864,0.016307509,-0.0027527409,0.01343463,-0.012160116,-0.028457178,0.023108399,-0.025239553,0.0023531495,0.012682457,-0.031967316,0.034850642,0.0277259,-0.019587815,-0.014416632,-0.0111781135,0.012797372,0.014447972,-0.015252379,-0.0025176872,-0.022711419,0.03633409,0.011303475,-0.03756682,0.045798924,-0.012181009,-0.0452139,0.040220313,0.008315681,-0.034119364,-0.0027736346,0.036020685,-0.041160528,0.00072279037,-0.032009102,-0.0061009517,0.0061113983,0.0363132,-0.03257323,0.06957592,0.008900703,-0.013695801,-0.021917459,0.011460178,0.027308026,0.0070777307,0.031967316,-0.0018530074,0.046133224,0.015388188,-0.009187991,0.037713073,-0.0027997517,0.0037817543,0.024341125,-0.004100383,0.003640722,0.013831609,-0.022230864,0.00559428,0.022815887,0.019389326,-0.033429872,-0.015774721,-0.012588436,0.043834917,0.017279064,0.00094282685,-0.014176355,0.03551924,0.025991725,0.037671287,0.012337712,0.0049361293,-0.02653496,-0.041139636,-0.015816508,0.004194404,0.0022656573,0.026806578,-0.0022721866,-0.017122362,0.007939595,0.011804923,-0.0039201747,0.0034631258,-0.023902358,-0.00059644895,-0.038068265,-0.03819363,0.009031288,0.035790857,-0.047386844,0.014103227,-0.025532065,0.0043876707,-0.0057457592,0.014040546,0.027370708,0.018470004,0.009872259,0.011000517,0.0017263395,0.025176872,-0.02317108,0.00527304,-0.034411874,-0.01099007,0.03710716,0.0104416115,-0.055242863,0.03844435,0.014009206,-0.004492139,-0.0036929562,-0.012066094,-0.025782788,0.0040141963,-0.0045600436,-0.0031523325,0.000735196,0.009344693,0.0027893048,0.00580844,-0.012421287,0.010843814,0.034516342,0.020287754,0.011752689,0.019598262,0.011345263,0.01970273,0.013121225,-0.009433492,-0.025093297,0.0037060147,0.004345883,-0.031528547,0.0020475797,-0.02630513,-0.0034814076,0.0051946887,-0.028206455,0.001676717,0.024967935,0.006492708,-0.035728175,0.044712454,-0.021499585,-0.022230864,-0.011595987,-0.032029994,-0.026326023,0.0056360676,-0.01118856,0.033722382,-0.029752586,0.04508854,0.017937215,0.010613984,-0.014103227,-0.0033952212,-0.010243122,-0.014865846,-0.0019940396,-0.012525755,-0.017613364,-0.006346452,0.034182042,0.004150005,0.05653827,-0.011543753,-0.018198386,-0.015868742,0.002546416,0.0039750207,0.022439802,-0.010854261,-0.033847746,0.007934371,0.0059390254,0.0039175632,0.021217521,0.012619777,0.0051137256,-0.019598262,-0.005244311,-0.012849607,0.00765753,-0.041264996,-0.003961962,-0.022794994,0.01557623,0.0114915185,-0.016798511,0.0030583108,0.018689387,0.032447867,0.012954075,0.018292408,-0.0042649205,0.011334816,-0.007370242,-0.02630513,0.0015004267,0.013518204,-0.024926148,-0.027119983,-0.033220936,-0.021687629,-0.01927441,0.003930622,-0.0113766035,-0.031110674,0.020590711,-0.013852503,-0.008446266,-0.020663839,0.006174079,0.025615638,-0.004789874,0.003468349,-0.030734587,-0.03685643,0.010958729,0.023714315,0.03706537,0.0028545975,-0.011836264,-0.021248862,0.0010368484,0.029167563,0.029480968,0.009015619,0.013831609,0.008984278,-0.007636636,-0.0064561437,-0.0194729,0.019337092,0.0024994053,0.007955264,0.009041736,-0.013894291,-0.037942905,-0.008200766,-0.0058136634,-0.003073981,0.0485151,-0.040888913,-0.0029251138,0.0144375255,-0.00091213925,0.0068635703,-0.008649979,-0.041494828,-0.047846504,0.020016136,0.0031575558,-0.021729417,0.0075060506,-0.0035179716,-0.014270376,0.013277927,0.020183286,-0.05072983,-0.03313736,0.0024863468,0.04742863,-0.0033586575,0.034474555,-0.00016290533,-0.047136117,-0.010770687,0.0059024617,0.016234381,0.024842573,0.0051685716,-0.004518256,0.012348158,0.015534444,0.012473521,-0.04475424,-0.01054608,-0.014165908,0.03165391,0.008832799,0.01181537,0.04805544,-0.011658668,0.013288374,0.0059860363,-0.016610468,0.025636533,-0.0005416031,0.0024758999,0.02647228,-0.013100331,0.011230348,-0.013580885,-0.0073754652,0.008352244,0.010425941,0.024341125,0.0070672836,-0.009830471,0.0022408462,0.0007822068,-0.004027255,0.02789305,0.001335889,-0.0069419215,0.0086290855,-0.0135599915,0.00041983218,0.03175838,-0.012724245,-0.0017824912,-0.00930813,0.023421803,-0.0019496406,0.00023309501,-0.0018634541,-0.023756102,0.022815887,-0.014771825,-0.013591332,-0.01283916,-0.0376295,0.008064956,0.013486864,0.008488053,0.001380288,0.0027579644,0.0067799957,0.0031497206,-0.0045835488,-0.00006578241,-0.0039123395,0.0049178475,-0.004275367,0.013016756,-0.021875672,-0.01445842,0.029669011,-0.021301096,-0.0137584815,0.0076052956,-0.006983709,-0.01059309,-0.021436905,-0.004270144,0.00872833,-0.026409598,-0.08624907,-0.028436285,-0.0376295,-0.04316632,0.023045717,0.0065344954,-0.012734692,0.0003587835,0.054699626,0.0055107055,-0.010462505,-0.0037948128,-0.012797372,0.01802079,0.03574907,0.017017893,-0.0113766035,-0.008205988,-0.03648035,-0.028143773,-0.009104417,0.03317915,-0.027934836,0.003003465,-0.034537237,0.040575508,-0.02009971,0.004223133,-0.008963385,-0.02419487,-0.020360881,0.03758771,-0.0114915185,-0.012630223,0.01838643,0.043291684,-0.025385808,-0.0016519057,-0.010284909,0.01867894,0.015241932,-0.004445128,-0.0022539047,-0.013706247,0.023317335,0.02686926,-0.025197765,-0.030191353,-0.011240794,0.016077679,0.0014494983,0.030671908,-0.018428216,-0.00077894214,-0.013152565,-0.02175031,0.002940784,0.020820541,0.0035023014,0.021050371,-0.0055786096,0.021541374,-0.001991428,-0.0050693266,0.041202318,0.0026561078,-0.0059024617,-0.012985416,0.024842573,0.040888913,-0.012682457,0.014897186,0.037838437,-0.017467108,-0.017258171,-0.0055107055,-0.0059703663,0.025260447,-0.00049459236,-0.012149669,0.020475795,-0.0045600436,0.02584547,0.0000020403975,0.032447867,0.011742243,0.04049193,-0.033847746,0.011742243,-0.019817645,-0.0049100122,0.0136435665,0.03825631,0.0028258688,-0.015785167,0.010718453,0.059505172,0.024382912,-0.005959919,-0.033012,-0.00011262994,0.01953558,-0.002500711,0.012034753,0.021133946,0.0026952834,0.0041160528,-0.009062629,0.010055078,-0.029564543,0.0032907529,-0.029460074,0.0035101364,0.04634216,-0.018208833,0.01224369,-0.041641083,0.0068165595,0.0055263755,-0.01851179,-0.06577327,-0.0045600436,-0.0032332954,0.00005966122,0.031800166,0.023985934,0.043082748,0.007568732,-0.006278548,-0.024090402,-0.025552958,0.023045717,-0.024466487,0.051105917,0.013006309,-0.033743277,-0.039280098,0.025406701,-0.019744517,-0.002778858,0.022962144,0.01993256,-0.000717567,-0.026994621,0.03934278,-0.013967418,-0.034182042,0.005954696,0.01425993,0.0041212765,0.018365536,0.02419487,-0.034182042,0.044712454,-0.005176407,-0.0012914899,-0.011909392,0.01224369,-0.021562267,-0.04600786,-0.010634878,0.0067382082,-0.017320853,-0.01633885,0.02109216,0.015012101,-0.007767222,0.014991208,0.023651633,-0.0087126605,-0.008263446,0.011794477,0.034077574,0.018407322,0.020047477,-0.0017629034,0.012525755,0.026033511,-0.03336719,-0.009605865,0.0021664123,-0.002635214,-0.041014273,0.0041813455,-0.0015435198,0.008529841,-0.004993587,0.031006206,0.05106413,-0.017770067,0.011721348,-0.013622672,-0.034579024,-0.009443939,0.011157219,0.017425321,-0.029460074,-0.024215763,0.016129913,-0.021896565,-0.043375257,0.011481072,-0.02386057,-0.035310302,-0.011104985,-0.0006127721,0.015732933,-0.033889532,-0.016892532,-0.06126024,-0.017237278,0.03963529,-0.036584817,0.01221235,0.04109785,-0.035728175,-0.08039884,-0.018720727,-0.014876293,0.015638912,-0.010143877,0.020611605,0.045924287,0.0055890568,0.03773397,0.0046410062,0.00950662,0.01637019,-0.020569818,-0.018292408,0.012264584,-0.005641291,-0.03409847,0.021301096,-0.00041395583,0.013768928,0.035916217,-0.021363778,0.02260695,-0.017874535,-0.010248345,0.06167811,0.005583833,0.03161212,-0.02181299,-0.00089451025,0.0202982,0.014186801,0.02630513,0.006053941,0.004954411,-0.0074851573,-0.026096193,0.023923252,0.004251862,0.0030426406,-0.004688017,0.005959919,-0.052860983,0.016391084,0.0024341126,-0.038339883,0.022565164,-0.0415784,0.023588954,-0.00074368407,0.011992967,-0.016464211,0.026326023,0.03620873,0.028101986,0.02086233,0.03666839,-0.03643856,0.0049622464,-0.019681837,0.017373087,-0.022189077,-0.03934278,0.027182665,0.047804717,-0.035143152,0.0034082797,0.005714419,-0.005907685,0.0090835225,0.003773919,0.044461727,0.005202524,0.02874969,0.033952214,-0.022857675,-0.0074120294,-0.01676717,-0.028770583,0.01881475,0.04396028,0.03478796,0.008404478,-0.005176407,-0.0111781135,-0.013215246,-0.011627327,-0.034829747,0.01571204,0.011930285,0.0049961987,0.016004551,-0.0040638186,0.02670211,0.0073650186,0.0032594125,0.019995242,0.011199007,-0.015095676,-0.017143255,0.0025947327,-0.014374845,0.016506,0.054407116,-0.024842573,0.008320904,0.016788064]},{"id":"lru-cache","name":"LRU Cache","description":"Implement the [Least Recently Used (LRU)](https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU) cache class `LRUCache`. The class should support the following operations\n\n* `LRUCache(int capacity)` Initialize the LRU cache of size `capacity`.\n* `int get(int key)` Return the value cooresponding to the `key` if the `key` exists, otherwise return `-1`.\n* `void put(int key, int value)` Update the `value` of the `key` if the `key` exists. Otherwise, add the `key`-`value` pair to the cache. If the introduction of the new pair causes the cache to exceed its capacity, remove the least recently used key.\n\nA key is considered used if a `get` or a `put` operation is called on it.\n\nEnsure that `get` and `put` each run in $O(1)$ average time complexity.\n\n**Example 1:**\n\n```java\nInput:\n[\"LRUCache\", [2], \"put\", [1, 10],  \"get\", [1], \"put\", [2, 20], \"put\", [3, 30], \"get\", [2], \"get\", [1]]\n\nOutput:\n[null, null, 10, null, null, 20, -1]\n\nExplanation:\nLRUCache lRUCache = new LRUCache(2);\nlRUCache.put(1, 10);  // cache: {1=10}\nlRUCache.get(1);      // return 10\nlRUCache.put(2, 20);  // cache: {1=10, 2=20}\nlRUCache.put(3, 30);  // cache: {2=20, 3=30}, key=1 was evicted\nlRUCache.get(2);      // returns 20 \nlRUCache.get(1);      // return -1 (not found)\n```\n\n**Constraints:**\n* `1 <= capacity <= 100`\n* `0 <= key <= 1000`\n* `0 <= value <= 1000`\n","difficulty":"Medium","concepts":["Singly Linked Lists","Doubly Linked Lists","Hash Usage"],"solutions":{"python":"class Node:\n    def __init__(self, key, val):\n        self.key, self.val = key, val\n        self.prev = self.next = None\n\n\nclass LRUCache:\n    def __init__(self, capacity: int):\n        self.cap = capacity\n        self.cache = {}  # map key to node\n\n        self.left, self.right = Node(0, 0), Node(0, 0)\n        self.left.next, self.right.prev = self.right, self.left\n\n    def remove(self, node):\n        prev, nxt = node.prev, node.next\n        prev.next, nxt.prev = nxt, prev\n\n    def insert(self, node):\n        prev, nxt = self.right.prev, self.right\n        prev.next = nxt.prev = node\n        node.next, node.prev = nxt, prev\n\n    def get(self, key: int) -> int:\n        if key in self.cache:\n            self.remove(self.cache[key])\n            self.insert(self.cache[key])\n            return self.cache[key].val\n        return -1\n\n    def put(self, key: int, value: int) -> None:\n        if key in self.cache:\n            self.remove(self.cache[key])\n        self.cache[key] = Node(key, value)\n        self.insert(self.cache[key])\n\n        if len(self.cache) > self.cap:\n            lru = self.left.next\n            self.remove(lru)\n            del self.cache[lru.key]\n","javascript":"class Node {\n    constructor(key, val) {\n        this.key = key;\n        this.val = val;\n        this.prev = null;\n        this.next = null;\n    }\n}\n\nclass LRUCache {\n    /**\n     * @param {number} capacity\n     */\n    constructor(capacity) {\n        this.cap = capacity;\n        this.cache = new Map();\n        this.left = new Node(0, 0);\n        this.right = new Node(0, 0);\n        this.left.next = this.right;\n        this.right.prev = this.left;\n    }\n\n    /**\n     * @param {Node} node\n     */\n    remove(node) {\n        const prev = node.prev;\n        const nxt = node.next;\n        prev.next = nxt;\n        nxt.prev = prev;\n    }\n\n    /**\n     * @param {Node} node\n     */\n    insert(node) {\n        const prev = this.right.prev;\n        prev.next = node;\n        node.prev = prev;\n        node.next = this.right;\n        this.right.prev = node;\n    }\n\n    /**\n     * @param {number} key\n     * @return {number}\n     */\n    get(key) {\n        if (this.cache.has(key)) {\n            const node = this.cache.get(key);\n            this.remove(node);\n            this.insert(node);\n            return node.val;\n        }\n        return -1;\n    }\n\n    /**\n     * @param {number} key\n     * @param {number} value\n     * @return {void}\n     */\n    put(key, value) {\n        if (this.cache.has(key)) {\n            this.remove(this.cache.get(key));\n        }\n        const newNode = new Node(key, value);\n        this.cache.set(key, newNode);\n        this.insert(newNode);\n\n        if (this.cache.size > this.cap) {\n            const lru = this.left.next;\n            this.remove(lru);\n            this.cache.delete(lru.key);\n        }\n    }\n}\n","cpp":"class Node {\npublic:\n    int key;\n    int val;\n    Node* prev;\n    Node* next;\n\n    Node(int k, int v) : key(k), val(v), prev(nullptr), next(nullptr) {}\n};\n\nclass LRUCache {\nprivate:\n    int cap;\n    unordered_map<int, Node*> cache;\n    Node* left;\n    Node* right;\n\n    void remove(Node* node) {\n        Node* prev = node->prev;\n        Node* nxt = node->next;\n        prev->next = nxt;\n        nxt->prev = prev;\n    }\n\n    void insert(Node* node) {\n        Node* prev = right->prev;\n        prev->next = node;\n        node->prev = prev;\n        node->next = right;\n        right->prev = node;\n    }\n\npublic:\n    LRUCache(int capacity) {\n        cap = capacity;\n        cache.clear();\n        left = new Node(0, 0);\n        right = new Node(0, 0);\n        left->next = right;\n        right->prev = left;\n    }\n\n    int get(int key) {\n        if (cache.find(key) != cache.end()) {\n            Node* node = cache[key];\n            remove(node);\n            insert(node);\n            return node->val;\n        }\n        return -1;\n    }\n\n    void put(int key, int value) {\n        if (cache.find(key) != cache.end()) {\n            remove(cache[key]);\n        }\n        Node* newNode = new Node(key, value);\n        cache[key] = newNode;\n        insert(newNode);\n\n        if (cache.size() > cap) {\n            Node* lru = left->next;\n            remove(lru);\n            cache.erase(lru->key);\n            delete lru;\n        }\n    }\n};\n","java":"class Node {\n    int key;\n    int val;\n    Node prev;\n    Node next;\n\n    public Node(int key, int val) {\n        this.key = key;\n        this.val = val;\n        this.prev = null;\n        this.next = null;\n    }\n}\n\nclass LRUCache {\n    \n    private int cap;\n    private HashMap<Integer, Node> cache;\n    private Node left;\n    private Node right;\n\n    public LRUCache(int capacity) {\n        this.cap = capacity;\n        this.cache = new HashMap<>();\n        this.left = new Node(0, 0);\n        this.right = new Node(0, 0);\n        this.left.next = this.right;\n        this.right.prev = this.left;\n    }\n\n    private void remove(Node node) {\n        Node prev = node.prev;\n        Node nxt = node.next;\n        prev.next = nxt;\n        nxt.prev = prev;\n    }\n\n    private void insert(Node node) {\n        Node prev = this.right.prev;\n        prev.next = node;\n        node.prev = prev;\n        node.next = this.right;\n        this.right.prev = node;\n    }\n\n    public int get(int key) {\n        if (cache.containsKey(key)) {\n            Node node = cache.get(key);\n            remove(node);\n            insert(node);\n            return node.val;\n        }\n        return -1;\n    }\n\n    public void put(int key, int value) {\n        if (cache.containsKey(key)) {\n            remove(cache.get(key));\n        }\n        Node newNode = new Node(key, value);\n        cache.put(key, newNode);\n        insert(newNode);\n\n        if (cache.size() > cap) {\n            Node lru = this.left.next;\n            remove(lru);\n            cache.remove(lru.key);\n        }\n    }\n}\n","csharp":"public class Node {\n    public int Key { get; set; }\n    public int Val { get; set; }\n    public Node Prev { get; set; }\n    public Node Next { get; set; }\n\n    public Node(int key, int val) {\n        Key = key;\n        Val = val;\n        Prev = null;\n        Next = null;\n    }\n}\n\npublic class LRUCache {\n    \n    private int cap;\n    private Dictionary<int, Node> cache;\n    private Node left;\n    private Node right;\n\n    public LRUCache(int capacity) {\n        cap = capacity;\n        cache = new Dictionary<int, Node>();\n        left = new Node(0, 0);\n        right = new Node(0, 0);\n        left.Next = right;\n        right.Prev = left;\n    }\n\n    private void Remove(Node node) {\n        Node prev = node.Prev;\n        Node nxt = node.Next;\n        prev.Next = nxt;\n        nxt.Prev = prev;\n    }\n\n    private void Insert(Node node) {\n        Node prev = right.Prev;\n        prev.Next = node;\n        node.Prev = prev;\n        node.Next = right;\n        right.Prev = node;\n    }\n\n    public int Get(int key) {\n        if (cache.ContainsKey(key)) {\n            Node node = cache[key];\n            Remove(node);\n            Insert(node);\n            return node.Val;\n        }\n        return -1;\n    }\n\n    public void Put(int key, int value) {\n        if (cache.ContainsKey(key)) {\n            Remove(cache[key]);\n        }\n        Node newNode = new Node(key, value);\n        cache[key] = newNode;\n        Insert(newNode);\n\n        if (cache.Count > cap) {\n            Node lru = left.Next;\n            Remove(lru);\n            cache.Remove(lru.Key);\n        }\n    }\n}\n"},"starterCode":{"python":"class LRUCache:\n\n    def __init__(self, capacity: int):\n        \n\n    def get(self, key: int) -> int:\n        \n\n    def put(self, key: int, value: int) -> None:\n        \n","javascript":"class LRUCache {\n    /**\n     * @param {number} capacity\n     */\n    constructor(capacity) {}\n\n    /**\n     * @param {number} key\n     * @return {number}\n     */\n    get(key) {}\n\n    /**\n     * @param {number} key\n     * @param {number} value\n     * @return {void}\n     */\n    put(key, value) {}\n}\n","cpp":"class LRUCache {\npublic:\n    LRUCache(int capacity) {\n        \n    }\n    \n    int get(int key) {\n        \n    }\n    \n    void put(int key, int value) {\n        \n    }\n};\n","java":"class LRUCache {\n\n    public LRUCache(int capacity) {\n        \n    }\n    \n    public int get(int key) {\n        \n    }\n    \n    public void put(int key, int value) {\n        \n    }\n}\n","csharp":"public class LRUCache {\n\n    public LRUCache(int capacity) {\n        \n    }\n    \n    public int Get(int key) {\n        \n    }\n    \n    public void Put(int key, int value) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/7ABFKPK2hD4","embedding":[0.028077874,0.004243796,-0.021953044,-0.04427312,0.046567064,0.009525603,0.009915573,0.0149106365,-0.008080418,-0.014841817,0.037620682,-0.008504798,-0.03071591,-0.03475325,0.004768536,-0.07120402,0.010259665,-0.025692172,-0.018110689,0.042736176,0.04386021,-0.01642464,0.07533312,0.02461402,0.044479575,0.0009828117,0.060973033,0.026128022,-0.00046201466,-0.060468365,0.040373415,-0.004347024,-0.001760602,0.069965295,-0.033537462,0.05202665,0.055100534,0.01512856,-0.012456116,0.032642823,-0.01436009,-0.05404532,-0.0038624282,-0.026288599,-0.006073217,0.03860708,-0.030234182,0.0209093,-0.08070095,0.01594291,0.014291272,0.0015727853,-0.0270456,-0.028490786,-0.0558346,0.014188044,-0.04291969,-0.012891965,0.023409698,0.024912233,0.054871142,0.0034953973,-0.016688442,0.018351553,0.000028091854,-0.05372417,0.013752194,-0.0033004119,-0.022549469,0.008975056,-0.0261739,-0.013545739,0.010552143,-0.035326738,0.01926913,0.012364359,0.012203782,0.022801803,0.02168924,0.05491702,0.019532934,-0.0052072527,0.033858612,-0.03275752,0.013396633,-0.050650284,-0.04835634,0.009525603,-0.004969256,-0.023042668,-0.014405969,-0.025026929,0.01559882,0.04413548,0.028376088,0.038744714,0.019051205,-0.0030996918,0.0037018522,0.0026251322,0.011848221,-0.054137077,0.04041929,-0.014096286,-0.0012093387,0.0037993449,-0.022629758,0.017479854,-0.079186946,-0.0100818835,-0.054412354,-0.01312136,0.0041434364,-0.019005327,0.016906368,-0.029844211,-0.030601213,-0.014383029,0.006222323,-0.033009853,0.00635996,-0.034248583,0.0064459825,-0.053999443,0.00096560706,-0.018168036,0.03718483,-0.03161055,0.024338746,-0.017365156,0.043584935,-0.018970918,0.014073347,-0.004269603,-0.04422724,0.009187246,-0.016298473,-0.039891686,-0.021895695,-0.024751656,0.0082639335,-0.052990105,0.0053018783,0.022985319,-0.006927711,0.041199233,-0.032459307,0.050145615,0.021735119,0.007696182,0.06615735,-0.007329151,0.0015785202,-0.008218055,-0.035533193,-0.026999721,0.033331007,0.020806072,0.0051298323,-0.048585735,-0.0068531577,-0.019578813,0.0270456,-0.04305733,0.025026929,0.013442512,-0.05854145,0.026334478,-0.00032581174,-0.01044318,0.016183775,-0.046016518,0.010517733,0.023031197,0.0017347952,-0.026724448,-0.030509455,0.007088287,0.017823946,0.03126646,-0.037850074,0.026747387,-0.023203244,0.027389692,0.022377424,0.009129897,0.00087599986,-0.032436367,-0.08744515,-0.0071169613,0.006423043,0.059137877,0.04353906,0.0360608,0.040717505,-0.0025061339,0.015369425,-0.026311537,0.032941036,-0.028330209,-0.05120083,0.03271164,0.00656068,-0.031839944,0.04785167,-0.05372417,-0.037093073,0.047759913,0.011521334,-0.050696164,-0.0054595866,0.036634285,0.0021692107,-0.00440724,-0.015667638,0.021001058,0.0033778325,0.00861376,0.0063198158,0.023604684,0.008040274,-0.004266736,0.050099738,0.016688442,-0.047759913,0.030830607,-0.048081066,-0.047759913,-0.0052244575,-0.0049577863,0.014772999,0.018317143,-0.007891167,-0.02952306,-0.03842356,-0.00862523,-0.021758059,-0.019911435,0.02330647,-0.0021147297,-0.014658302,-0.020209646,-0.07927871,-0.02872018,0.015702046,0.009336352,-0.04512188,0.027825542,0.033331007,0.0134883905,0.015919972,-0.0410616,-0.0055714166,-0.011423841,-0.036152557,0.026953842,0.036152557,0.013385164,0.013442512,-0.0047570663,-0.0027986118,-0.016619625,0.006222323,-0.0279173,-0.0033979046,-0.064964496,-0.007971455,-0.009261799,-0.036634285,-0.027986117,0.011584417,-0.0517055,-0.004286808,-0.059229635,-0.0019326478,0.008246729,0.02331794,-0.008327017,0.03278046,0.0044588535,-0.048906885,0.018775932,0.03112882,-0.029041331,-0.012547874,0.019842615,0.018661235,-0.00046703266,0.008418774,-0.027940238,0.0006509066,-0.036611345,-0.013167239,0.020943709,-0.030830607,0.048448097,-0.062165882,0.0037649355,0.03647371,-0.011211651,0.028628422,0.009588686,-0.011463985,-0.0007706218,-0.027802601,0.000618648,0.0351891,-0.03805653,0.020266995,0.05707333,-0.0027154563,0.062028248,0.012203782,0.013339285,-0.05955079,0.024659898,0.016975185,-0.04376845,0.03190876,0.019636162,0.034959707,-0.02789436,0.061569456,-0.0100245355,0.010689779,-0.01680314,-0.027986117,-0.015082682,-0.019601751,-0.015231788,-0.0064861267,-0.042002115,0.04640649,0.030670032,-0.026128022,-0.047714036,0.015323546,0.0006957102,-0.020381693,-0.04252972,0.024797535,0.027389692,0.007581485,0.018821811,-0.028444907,0.042759117,0.02461402,-0.02381114,0.0017993123,0.014142165,0.008739927,0.027733782,0.0005480376,-0.003948451,-0.007833819,-0.0032000518,0.008780071,-0.011917039,-0.0065033315,0.04213975,-0.027160296,-0.0011469721,-0.051889013,-0.02172365,-0.006027338,0.0012738558,0.025118686,-0.015346485,0.020679906,0.03273458,0.021608952,-0.032184035,-0.027733782,-0.0050094,-0.014451847,0.0359461,0.0034036394,0.04014402,0.04429606,0.026403295,0.0073578255,-0.008705517,0.011205916,0.017135762,0.05831206,-0.04266736,0.033858612,0.00047025853,-0.034569737,-0.006457452,-0.021207513,-0.03112882,0.0013799507,0.006646703,0.0221595,0.035808466,0.049365677,0.05156786,0.02009495,0.033698037,0.023879956,-0.008934912,-0.0009813779,0.015300606,-0.000005474439,-0.026724448,0.014933576,0.033422764,0.04213975,-0.04748464,0.013798073,-0.009548542,-0.026380356,-0.049686827,0.022744454,-0.018661235,-0.014176574,-0.049457435,-0.007959986,-0.0001833363,0.020140829,-0.029316604,-0.009990126,-0.024958111,0.044594273,0.04964095,0.006979325,0.015048273,-0.023283532,-0.04021284,0.012089085,0.044410758,-0.015185909,0.032115217,0.013362224,0.036267255,-0.012410237,0.042460904,-0.037528925,-0.033675097,0.02821551,-0.053907685,-0.0009992993,0.026357416,-0.025623355,-0.018202446,0.008023069,-0.013339285,-0.018225385,0.0074209087,0.03271164,0.052898347,-0.003673178,0.00021201061,-0.012398767,-0.036404893,0.028995452,0.006474657,0.000910409,-0.0018537935,-0.041956235,0.057623874,-0.018179506,0.0021950176,0.038675897,-0.0031627754,0.0286743,0.05331126,0.043997847,-0.024728717,0.04308027,-0.019395297,-0.006061747,-0.009990126,-0.020932239,0.0017276265,-0.013304875,-0.011108424,-0.0015254727,0.0024717248,0.009066814,-0.016849019,0.026426235,-0.038744714,-0.016149366,0.02127633,0.046544123,0.0122726,-0.031082941,0.005462454,-0.025738051,0.03771244,0.042254448,-0.009915573,-0.0016000259,-0.0007892601,0.03979993,0.00818938,0.012914904,-0.029362483,0.042047992,-0.03936408,-0.000980661,0.027550267,-0.06693728,-0.015254728,0.0056574396,0.0013978721,0.026403295,-0.0001819026,0.016137896,-0.01228407,-0.01312136,0.02338676,0.0005397937,-0.013132829,-0.035120282,0.017801005,-0.038675897,0.00840157,0.019693509,0.0039312467,-0.0011240325,-0.06294582,0.0047111874,-0.008596555,-0.007822349,-0.054687627,0.0069563854,-0.019085614,0.016596684,-0.011028136,-0.018603886,0.05978018,-0.002510435,0.019750858,0.009892633,-0.030555334,-0.007409439,0.0021720782,-0.0037448637,0.03284928,0.0022107884,0.025738051,-0.055054657,0.020863421,0.029844211,-0.031725246,0.0036100943,0.010339953,0.027756723,-0.0187874,-0.03608374,-0.05698157,0.020163767,-0.0011469721,-0.0047886083,0.010787272,-0.017502792,0.0048918356,0.0026122287,0.012410237,0.028444907,0.015805274,-0.023719382,-0.023971714,0.00593558,-0.001333355,0.010999462,-0.024315806,0.027986117,-0.03929526,-0.008476123,-0.02741263,-0.0013462584,0.01556441,-0.017686307,-0.013981589,0.04342436,0.020060541,0.010076149,-0.027320873,-0.0024430503,0.014990924,-0.06106479,-0.0032057867,-0.016275533,0.01230701,-0.013431042,0.015552941,-0.015897032,0.022813274,0.013901301,-0.009256064,-0.043561995,-0.01722752,-0.014222453,0.0064001037,-0.02741263,0.022629758,-0.038698837,0.06331286,-0.011544273,0.030876486,0.00378214,0.00023441241,-0.0026724448,0.011974388,-0.020381693,-0.020863421,0.008854624,0.009422375,-0.00037204905,-0.03310161,-0.018340083,-0.002374232,0.019188842,0.019108554,0.012949314,-0.03188582,0.015908502,0.017938642,0.010901969,0.027642025,-0.009697649,-0.026380356,-0.05248544,0.009915573,0.0028903694,-0.0065836194,-0.0015326414,-0.011813812,0.013591618,0.01721605,-0.0018882026,0.0025176036,0.0187874,-0.03984581,-0.022354484,0.008005865,0.020198178,0.037597742,-0.019487055,-0.013281936,0.0028387557,-0.013603088,0.007713387,0.046085335,0.020117888,-0.02293944,-0.025393961,0.012582283,0.039042927,0.003587155,-0.01635582,-0.017021064,0.01230701,0.0043986375,0.02580687,0.037758317,-0.026334478,-0.00840157,-0.003033741,0.0184089,-0.011572948,-0.0079829255,-0.008441714,0.00756428,0.032436367,0.024315806,-0.027664965,0.015094152,0.004034474,-0.019028265,-0.06537741,0.018190976,0.015851153,0.033789795,-0.07478257,0.001957021,-0.0024244122,0.014268332,-0.027137358,0.0012824581,0.01436009,0.027779661,0.001630134,0.002239463,-0.0099671865,0.057027448,-0.036748983,-0.003667443,0.004332687,-0.029821273,0.021631893,0.030601213,-0.014578015,0.015013863,0.012375828,-0.055054657,0.004266736,0.023489987,-0.0425756,0.039616413,-0.045580667,-0.016206715,-0.021574544,-0.015071212,-0.008694048,0.00068352366,0.0059183757,0.0011584418,-0.0022208246,0.029362483,-0.06881832,-0.0010896234,0.019395297,-0.007833819,-0.005981459,0.006841688,-0.032665763,0.06629498,0.008097623,-0.027687903,-0.017514262,0.004149171,0.0015398099,0.021758059,-0.004748464,0.02828433,-0.020943709,-0.001977093,0.031748187,0.03271164,-0.014600954,-0.00758722,-0.06895596,0.018500658,-0.03234461,-0.013855422,-0.041612145,-0.01843184,-0.020714315,0.037895955,-0.023627624,-0.004281073,-0.011951448,0.04803519,-0.02171218,0.024086412,-0.042965572,0.0065664146,0.016596684,-0.044479575,0.035670828,-0.03165643,0.027252056,-0.0038652956,-0.030050667,0.008390101,-0.04886101,-0.021803938,-0.018821811,-0.015403834,0.04638355,0.0016874826,-0.029798333,-0.050099738,-0.014520666,0.020324344,-0.004521937,-0.017835414,-0.0005881816,0.02789436,-0.026288599,-0.028399026,0.016768731,-0.02911015,-0.010466119,0.015839683,0.042231508,-0.018190976,-0.0016444711,-0.02660975,0.017342217,0.0007294025,0.017823946,0.015747925,-0.013385164,-0.04142863,-0.02498105,-0.041726843,0.04388315,-0.017720718,0.025623355,-0.009043874,-0.021012528,-0.050145615,-0.0046653086,-0.026334478,-0.015036803,0.022239788,0.004888968,-0.016722852,-0.056706294,0.054320592,-0.044364877,-0.03610668,0.0006767135,-0.036657225,-0.03970817,0.03929526,-0.041130416,-0.023604684,0.016229654,0.017468384,-0.0016674106,-0.011320613,0.042070933,0.012203782,-0.005255999,0.013408103,0.003194317,0.0051183626,-0.014165104,-0.0027441306,0.04303439,0.008889033,0.011572948,-0.02821551,0.008854624,-0.021551603,0.00015493082,0.031082941,0.0035584806,-0.007942781,0.014704181,-0.021253392,-0.021402497,0.028421966,-0.008957852,0.04165802,0.015415303,-0.040350474,-0.0017821077,-0.0055456096,-0.039593473,0.012777268,-0.010993727,0.012501995,0.011383697,0.016183775,0.048218705,-0.009525603,-0.00962883,-0.00593558,0.012020267,0.028903695,0.032574005,-0.008315547,0.020266995,0.01351133,-0.007007999,0.04133687,0.034294464,0.012834617,-0.023512926,0.018236855,-0.0016071945,-0.012869026,0.015679108,0.040855143,-0.016034668,-0.004802945,0.014440377,-0.021012528,-0.018110689,0.027183237,-0.03684074,0.0059470497,0.013018132,0.016264062,-0.017376626,0.013843952,0.012203782,-0.03897411,0.0052158553,0.021815408,-0.00085162674,0.0011010931,0.01762896,0.007283272,0.014394498,0.0004946317,-0.041864477,-0.01720458,0.017548671,-0.0062509975,0.05331126,0.010093354,-0.019704979,-0.023111487,0.02132221,0.013889831,0.024315806,-0.01268551,-0.0010243894,0.012547874,0.018947978,0.00027222664,0.021953044,-0.008493328,-0.009233125,0.022423303,0.03647371,-0.0019713582,-0.023994654,0.018374491,0.026999721,0.019980252,-0.043309662,-0.024453443,-0.018718584,0.027596146,-0.037597742,-0.0022021863,-0.041726843,0.016516397,0.018558007,-0.00796572,0.05124671,-0.015495592,-0.012031737,-0.007547076,-0.002133368,-0.0019957314,0.0057893414,0.0014208115,0.042483844,0.005287541,-0.037804198,-0.053035986,0.035762586,-0.0063656946,0.014451847,-0.0017821077,-0.011813812,-0.028169632,0.015897032,0.00016541487,0.042483844,-0.01228407,0.045787122,0.022664167,-0.018156568,0.0065721497,-0.012570813,0.012651102,0.030394759,0.013671907,-0.0017290603,-0.0050065327,-0.027733782,0.04264442,-0.009944247,-0.01065537,-0.026265658,0.025485719,-0.020221116,-0.008768601,0.022698576,0.009135632,0.011412372,0.028766058,-0.0061592394,-0.03321631,0.020335814,-0.0073922346,0.0019039735,0.018248325,0.00532195,0.045833003,0.011767933,0.021356618,-0.031289395,0.03562495,-0.0010595154,0.024958111,-0.0035183367,-0.009823815,0.024407564,0.04592476,-0.02129927,-0.022193909,-0.009990126,0.0042036525,-0.005700451,-0.017307807,0.027320873,-0.011928509,-0.032092277,-0.00368178,0.03314749,-0.0018896364,-0.0048316196,-0.0028659962,0.005829485,0.03271164,-0.015552941,0.015254728,-0.012375828,-0.011951448,0.0019641896,-0.020117888,-0.011320613,0.02092077,0.0088316845,-0.0068646274,-0.014038937,-0.023558805,0.02789436,-0.053815927,-0.014945045,0.022698576,0.0221595,0.006692582,0.021987453,-0.010827416,0.018363021,0.0540912,-0.02002613,0.0042036525,-0.022021862,-0.004266736,-0.03438622,0.019693509,0.0068187485,-0.0067671346,-0.041612145,0.012008797,0.0029032729,-0.0205308,0.012433177,-0.0031082942,0.0038108146,-0.021895695,0.000011156095,0.010718454,-0.004906173,0.04016696,-0.021953044,0.0029849946,-0.010684044,-0.01312136,0.022170968,0.025485719,0.0097435275,-0.022744454,-0.0029505854,0.01395865,-0.00034355395,-0.01084462,-0.022847682,-0.031839944,0.035028525,0.021505725,0.015610289,-0.037437167,0.022767395,-0.0017620358,0.017709248,-0.0055025984,-0.002073152,-0.020152299,-0.021115754,-0.026563872,-0.011790873,-0.0140045285,-0.00032814153,-0.026816206,0.00023100733,-0.01148119,-0.022102151,0.030578274,0.011555743,0.03475325,0.037781257,-0.0060330727,0.007535606,0.025967447,0.045672424,0.019750858,0.0013527101,0.019567342,-0.038377684,0.01922325,-0.0017333614,0.02258388,-0.0040230043,0.00024624055,0.024246989,0.004347024,-0.01563323,-0.026517993,-0.033353947,0.0029090077,-0.018145097,0.029935969,-0.0140045285,0.0019713582,0.0034380485,-0.009594421,-0.019808207,0.0025849883,-0.00064122904,-0.020599617,-0.04379139,0.004467456,0.017663369,-0.03489089,0.034523856,0.02748145,0.027297935,0.018294204,-0.05248544,-0.010965052,-0.015770866,0.01165897,0.0050524115,0.015885562,0.026380356,-0.021597482,-0.0057979436,-0.009198716,0.0011355022,0.005700451,0.028353147,0.0085506765,-0.035510253,0.044502515,0.012949314,0.0028143825,-0.000591049,-0.011142833,0.053815927,0.027137358,0.024269927,0.047071733,0.017548671,-0.023168834,0.0014057576,0.011383697,0.01725046,0.0049291123,0.006468922,-0.021494256,-0.048310462,-0.028834876,0.007248863,0.024728717,-0.0039599207,0.011091219,-0.020198178,-0.02010642,0.009519868,-0.027642025,-0.016241124,0.04803519,-0.0029219112,-0.034546796,-0.036381952,-0.017135762,0.00798866,-0.018500658,0.018500658,-0.015897032,-0.02748145,0.02745851,-0.026426235,-0.001091774,0.020565208,-0.012857556,-0.006996529,0.03851532,-0.012857556,0.0020301405,0.012433177,0.00553414,0.0072259237,-0.022721516,0.02172365,-0.0004888968,-0.002127633,-0.017858354,0.001509702,0.006101891,0.031358216,0.012777268,-0.004421577,0.016459048,0.010271135,-0.027297935,-0.027091479,0.024889292,0.024843413,0.034065068,0.0015240391,-0.0279173,-0.017433975,0.0070252037,-0.008630964,-0.027297935,-0.028467845,-0.028811937,0.017365156,-0.04668176,-0.031174699,-0.012582283,-0.011985857,0.00036326755,0.004025872,0.014188044,0.052301925,-0.022320075,0.025049869,-0.01593144,0.022251258,0.027963178,0.01725046,-0.0384465,0.01593144,-0.009405171,-0.0508338,0.033032794,-0.014807409,0.001157008,0.013970119,-0.016046138,0.04922804,0.027527329,-0.01148119,-0.002083188,-0.00016344352,-0.001453787,0.015335016,-0.023673503,0.0107643325,-0.00984102,0.0022509326,-0.011859691,-0.012020267,0.01644758,0.0011763632,0.00079714553,0.013304875,0.0018423238,0.017697778,-0.006646703,-0.010724188,0.026770327,-0.0068990365,-0.00522159,0.0007713387,-0.02082901,-0.014899166,-0.009106957,-0.0034380485,0.0146812415,-0.008785806,-0.0018279867,0.016470518,-0.015552941,-0.020989588,0.0040631485,0.017296338,-0.01044318,-0.019544402,-0.020266995,-0.046222974,0.033399824,0.023168834,0.023065608,0.009726322,0.005462454,0.007816615,-0.0057291253,-0.020794602,-0.0126396315,0.005290408,0.031105882,0.02789436,0.020783132,0.04133687,0.043607876,-0.00018028966,0.05335714,0.0079829255,-0.01559882,0.0021247657,-0.017812476,0.046544123,-0.014119226,-0.007547076,-0.0360608,-0.027710844,0.019590283,-0.011395167,0.001977093,-0.00512123,0.04379139,-0.008527737,0.03413389,0.027343813,0.000031183303,-0.019429706,0.012100555,-0.0029792597,0.019406766,-0.0010114859,0.017158702,-0.03349158,0.017823946,-0.04177272,-0.019372357,-0.016998125,-0.007879698,0.00024516525,-0.036244314,0.023902897,-0.015059742,0.00055986573,-0.006709786,-0.004714055,0.005402238,-0.0151973795,0.025508657,0.006193649,0.016676974,0.016137896,0.03688662,0.022033332,-0.009760732,0.0123528885,0.0022365954,0.01721605,0.008952117,0.025738051,0.016092017,-0.021953044,-0.021918636,0.0027211912,0.061661214,0.0025649162,0.03034888,0.019005327,0.03165643,-0.0014795939,0.015690576,-0.0138324825,0.0013476921,0.00085234357,-0.0046222974,0.039134685,0.009462519,-0.027527329,-0.017456913,0.008906238,0.017284868,-0.0005121947,0.00942811,0.020599617,-0.0040832204,-0.008539206,-0.0035957573,-0.0279173,-0.026105084,0.009594421,0.014589484,0.001313283,-0.008040274,0.0041778455,0.014704181,0.011756463,0.008820214,0.00266671,0.014279801,0.021517195,0.06409279,0.01270845,0.0012602354,0.010179376,0.0030050667,-0.013981589,0.022732984,-0.006273937,-0.024935171,0.011624562,-0.014142165,-0.015874093,0.02296238,-0.012100555,0.048126947,-0.026265658,-0.0020387426,-0.009370761,0.0061592394,-0.006709786,0.03860708,0.0059986636,-0.030096546,0.0002828003,-0.0020631158,-0.01230701,-0.02826139,0.033308066,-0.018546537,0.007845288,-0.009038139,0.032918096,-0.008780071,0.009709118,-0.034523856,-0.026495053,-0.035854343,-0.036611345,-0.0060789515,-0.032941036,-0.014371559,-0.005866762,-0.039593473,0.01045465,-0.019899964,0.064551584,-0.015702046,0.0279173,-0.015690576,0.011653235,0.03936408,-0.0036760452,0.01964763,0.024224048,0.005941315,-0.014279801,-0.031427033,-0.021413967,-0.030991184,0.032138154,-0.013729255,0.010953583,0.016631095,0.028513724,0.017021064,0.00296779,0.015346485,0.027343813,-0.06023897,0.01797305,-0.01846625,0.013190178,0.02213656,-0.010580816,0.0072718025,0.011171508,0.006434513,0.038148288,-0.037597742,0.035808466,0.06666201,-0.013901301,-0.015105621,0.024591079,-0.017273398,-0.02176953,0.009462519,0.02002613,0.022652697,0.026036264,0.036290195,0.023088546,0.007914107,-0.008739927,0.0048774984,0.007650303,0.027297935,-0.021677772,0.04794343,0.01598879,-0.039088804,0.0047800057,0.008544941,0.025348082,0.014119226,0.04537421,0.011005197,-0.0021763793,0.008493328,0.03610668,0.034569737,0.042093873,-0.047805794,-0.013580148,0.02374232,0.006354225,0.011544273,-0.023558805,-0.04415842,-0.015495592,-0.032986917,0.028192572,0.015231788,-0.033399824,-0.008527737,-0.022446243,-0.015300606,-0.019406766,-0.020301405,-0.0052502644,0.020702844,0.025049869,0.021001058,0.025325142,0.014956515,0.0053248177,-0.023100017,-0.030807668,-0.030784728,-0.0031713776,0.035143223,-0.00053549255,0.01806481,-0.026793266,-0.012421707,0.027183237,0.001610062,0.0026796134,-0.022549469]},{"id":"reverse-nodes-in-k-group","name":"Reverse Nodes in K-Group","description":"You are given the head of a singly linked list `head` and a positive integer `k`.\n\nYou must reverse the first `k` nodes in the linked list, and then reverse the next `k` nodes, and so on. If there are fewer than `k` nodes left, leave the nodes as they are.\n\nReturn the modified list after reversing the nodes in each group of `k`.\n\nYou are only allowed to modify the nodes' `next` pointers, not the values of the nodes.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/67cf2fff-f20a-4558-6091-c3e857f56e00/public)\n\n```java\nInput: head = [1,2,3,4,5,6], k = 3\n\nOutput: [3,2,1,6,5,4]\n```\n\n**Example 2:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/af843e59-df12-4c55-652b-6ddab0a92900/public)\n\n```java\nInput: head = [1,2,3,4,5], k = 3\n\nOutput: [3,2,1,4,5]\n```\n\n**Constraints:**\n* The length of the linked list is `n`.\n* `1 <= k <= n <= 100`\n* `0 <= Node.val <= 100`\n","difficulty":"Hard","concepts":["Singly Linked Lists"],"solutions":{"python":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\n\nclass Solution:\n    def reverseKGroup(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:\n        dummy = ListNode(0, head)\n        groupPrev = dummy\n\n        while True:\n            kth = self.getKth(groupPrev, k)\n            if not kth:\n                break\n            groupNext = kth.next\n\n            prev, curr = kth.next, groupPrev.next\n            while curr != groupNext:\n                tmp = curr.next\n                curr.next = prev\n                prev = curr\n                curr = tmp\n\n            tmp = groupPrev.next\n            groupPrev.next = kth\n            groupPrev = tmp\n        return dummy.next\n\n    def getKth(self, curr, k):\n        while curr and k > 0:\n            curr = curr.next\n            k -= 1\n        return curr\n","javascript":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     constructor(val = 0, next = null) {\n *         this.val = val;\n *         this.next = next;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {ListNode} head\n     * @param {number} k\n     * @return {ListNode}\n     */\n    reverseKGroup(head, k) {\n        const dummy = new ListNode(0, head);\n        let groupPrev = dummy;\n\n        while (true) {\n            const kth = this.getKth(groupPrev, k);\n            if (!kth) {\n                break;\n            }\n            const groupNext = kth.next;\n\n            let prev = kth.next;\n            let curr = groupPrev.next;\n            while (curr != groupNext) {\n                const tmp = curr.next;\n                curr.next = prev;\n                prev = curr;\n                curr = tmp;\n            }\n\n            const tmp = groupPrev.next;\n            groupPrev.next = kth;\n            groupPrev = tmp;\n        }\n        return dummy.next;\n    }\n\n    getKth(curr, k) {\n        while (curr && k > 0) {\n            curr = curr.next;\n            k--;\n        }\n        return curr;\n    }\n}\n","cpp":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n\nclass Solution {\npublic:\n    ListNode* reverseKGroup(ListNode* head, int k) {\n        ListNode* dummy = new ListNode(0, head);\n        ListNode* groupPrev = dummy;\n\n        while (true) {\n            ListNode* kth = getKth(groupPrev, k);\n            if (!kth) {\n                break;\n            }\n            ListNode* groupNext = kth->next;\n\n            ListNode* prev = kth->next;\n            ListNode* curr = groupPrev->next;\n            while (curr != groupNext) {\n                ListNode* tmp = curr->next;\n                curr->next = prev;\n                prev = curr;\n                curr = tmp;\n            }\n\n            ListNode* tmp = groupPrev->next;\n            groupPrev->next = kth;\n            groupPrev = tmp;\n        }\n        return dummy->next;\n    }\n\nprivate:\n    ListNode* getKth(ListNode* curr, int k) {\n        while (curr && k > 0) {\n            curr = curr->next;\n            k--;\n        }\n        return curr;\n    }\n};\n","java":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\n\nclass Solution {\n    \n    public ListNode reverseKGroup(ListNode head, int k) {\n        ListNode dummy = new ListNode(0, head);\n        ListNode groupPrev = dummy;\n\n        while (true) {\n            ListNode kth = getKth(groupPrev, k);\n            if (kth == null) {\n                break;\n            }\n            ListNode groupNext = kth.next;\n\n            ListNode prev = kth.next;\n            ListNode curr = groupPrev.next;\n            while (curr != groupNext) {\n                ListNode tmp = curr.next;\n                curr.next = prev;\n                prev = curr;\n                curr = tmp;\n            }\n\n            ListNode tmp = groupPrev.next;\n            groupPrev.next = kth;\n            groupPrev = tmp;\n        }\n        return dummy.next;\n    }\n\n    private ListNode getKth(ListNode curr, int k) {\n        while (curr != null && k > 0) {\n            curr = curr.next;\n            k--;\n        }\n        return curr;\n    }\n}\n","csharp":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     public int val;\n *     public ListNode next;\n *     public ListNode(int val=0, ListNode next=null) {\n *         this.val = val;\n *         this.next = next;\n *     }\n * }\n */\n\npublic class Solution {\n    public ListNode ReverseKGroup(ListNode head, int k) {\n        ListNode dummy = new ListNode(0, head);\n        ListNode groupPrev = dummy;\n\n        while (true) {\n            ListNode kth = GetKth(groupPrev, k);\n            if (kth == null) {\n                break;\n            }\n            ListNode groupNext = kth.next;\n\n            ListNode prev = kth.next;\n            ListNode curr = groupPrev.next;\n            while (curr != groupNext) {\n                ListNode tmp = curr.next;\n                curr.next = prev;\n                prev = curr;\n                curr = tmp;\n            }\n\n            ListNode tmpNode = groupPrev.next;\n            groupPrev.next = kth;\n            groupPrev = tmpNode;\n        }\n        return dummy.next;\n    }\n\n    private ListNode GetKth(ListNode curr, int k) {\n        while (curr != null && k > 0) {\n            curr = curr.next;\n            k--;\n        }\n        return curr;\n    }\n}\n"},"starterCode":{"python":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\n\nclass Solution:\n    def reverseKGroup(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:\n        ","javascript":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     constructor(val = 0, next = null) {\n *         this.val = val;\n *         this.next = next;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {ListNode} head\n     * @param {number} k\n     * @return {ListNode}\n     */\n    reverseKGroup(head, k) {}\n}\n","cpp":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n\nclass Solution {\npublic:\n    ListNode* reverseKGroup(ListNode* head, int k) {\n        \n    }\n};\n","java":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\n\nclass Solution {\n    public ListNode reverseKGroup(ListNode head, int k) {\n        \n    }\n}\n","csharp":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     public int val;\n *     public ListNode next;\n *     public ListNode(int val=0, ListNode next=null) {\n *         this.val = val;\n *         this.next = next;\n *     }\n * }\n */\n\npublic class Solution {\n    public ListNode ReverseKGroup(ListNode head, int k) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/1UOPsfP85V4","embedding":[0.008220422,-0.012881832,-0.0039311415,-0.033441283,0.016228199,0.04275291,-0.05886919,-0.000074758136,-0.00019078626,0.00050957943,0.023032852,-0.025965119,-0.028718317,-0.026860468,0.0004256405,-0.010525946,0.012669187,0.0043060686,0.015288083,0.064106986,-0.01054833,-0.011219841,0.07422443,0.008052545,0.03265785,0.009043024,0.014929944,0.004465553,0.010805742,-0.014762065,0.012299856,-0.008102908,0.0109456405,0.03420233,-0.061018027,0.03744797,0.0070340848,0.045416575,0.006222675,0.012478925,0.0016270169,-0.029568898,-0.037492737,-0.017985322,0.00018011902,0.025181688,0.010497966,0.00676548,0.0031924786,0.0066871373,0.013396658,0.016127473,-0.005103489,0.039283436,-0.070508726,0.002749001,-0.0018690409,0.021376455,0.02374913,0.049378492,0.031740118,-0.023838665,0.032792155,0.014661338,-0.004135393,-0.026345642,-0.009792879,0.031538665,-0.023346223,0.0072411345,-0.05994361,0.017806252,-0.05085582,-0.019731252,-0.051437795,0.031762503,0.051795937,-0.003545022,0.028651165,-0.011538809,-0.012467734,-0.002576926,0.06048082,-0.0021278528,-0.03312791,-0.056675587,-0.008561774,-0.028897386,-0.035500586,-0.036709305,-0.025741281,-0.018903054,-0.015847676,0.03283692,0.019518606,0.02706192,0.034000874,0.030016573,0.012602036,0.034851458,-0.00889753,-0.032389246,0.021868898,-0.00060471025,0.020917589,0.0206266,0.013967443,0.024756398,-0.06509186,0.006317806,-0.037627038,-0.028561631,0.008511411,-0.001261183,0.019675292,0.0031672968,-0.048169773,-0.023793899,-0.003545022,-0.002344695,0.0074593755,-0.042820062,-0.036933143,-0.031404365,-0.077805825,0.04611047,0.042842448,-0.023525294,0.030218026,-0.014773257,0.061018027,-0.005190226,-0.026726166,0.015769333,-0.0012150165,-0.00070019084,-0.02446541,0.0025433504,0.020044625,-0.0040710396,-0.014269624,-0.051930238,-0.06509186,-0.036037795,0.0268157,0.033396516,0.009087792,0.014717298,-0.018332269,0.023793899,0.020648984,0.006205887,0.031046225,0.08067094,-0.035813957,0.0011632541,-0.017213084,-0.0028735104,0.009938373,0.010307704,0.025830816,-0.016698258,0.04020117,0.007772748,-0.04696105,-0.003228852,-0.014638955,0.0023754726,-0.020290844,-0.053004656,0.020122968,-0.06706163,-0.004292079,0.012657995,0.025226455,0.052915122,-0.017112356,-0.010626673,-0.012904217,-0.014112937,-0.0073978207,0.045640413,-0.024398258,-0.036104944,-0.039104365,-0.004219332,-0.010173402,-0.06558431,-0.059361633,0.023189537,-0.0090038525,0.071045935,-0.0088751465,0.020279653,-0.0071012364,0.03265785,0.011191862,-0.029680816,0.009988736,-0.026435178,0.0044599567,0.007185175,-0.0025461486,-0.051124424,0.03675407,-0.009725728,-0.0145046525,0.030934306,0.018567298,-0.055108726,0.03565727,-0.010665844,0.026770933,0.025987502,0.028606398,-0.039417736,-0.009899202,-0.034045644,-0.009535466,0.059854075,-0.00058547425,0.035120063,-0.017168315,0.05206454,0.025584595,0.030262794,-0.007957414,-0.043872096,0.007940626,0.008852762,-0.016373694,-0.0035058507,0.013821949,-0.040917445,0.009250074,-0.0915942,-0.033530816,-0.02867355,-0.024845934,0.010481179,0.01184099,0.027442444,-0.013038519,0.067419775,0.003220458,-0.03576919,-0.037828494,0.010279725,-0.038925294,0.027017154,0.017347386,-0.010374855,-0.01118067,-0.006200291,-0.016978053,0.054481983,0.033687502,-0.0008890535,-0.0055343756,-0.024129653,-0.0206266,-0.014381542,0.033620354,-0.049199425,-0.006530451,-0.01250131,0.048169773,0.03847762,-0.0028091574,0.0021264537,-0.040447388,-0.03955204,0.041879945,-0.029658433,0.0024720025,0.010509158,0.03516483,-0.017022822,-0.03854477,-0.11012792,0.014985902,0.033530816,0.02621134,-0.046916284,0.019910323,0.02109666,0.009854434,0.005965262,-0.029345062,-0.04136512,-0.017962938,-0.010934449,0.00054980017,0.031068608,-0.01738096,0.022741864,-0.022607561,0.0043508364,0.034426168,-0.017571222,-0.027084306,-0.049512796,-0.022204652,0.041275587,-0.0065416433,-0.074403495,0.024801165,0.0043872097,-0.037649423,0.029949421,-0.049647097,0.043737795,0.030576166,0.038634308,-0.022171078,-0.022741864,0.008628925,-0.015679797,0.0011800419,-0.028069189,-0.017560031,-0.045058433,0.059316866,0.06303257,0.01695567,0.016877327,-0.04105175,0.016720641,0.029389828,-0.029009305,-0.0014675328,-0.03637355,-0.012109594,0.009820859,-0.038164247,-0.006905379,0.03673169,0.04382733,-0.023995351,-0.020089392,0.030509014,0.054437216,0.027621515,0.01328474,-0.038567156,0.03156105,0.0062898262,0.0079853935,-0.022741864,0.021275729,-0.0239282,-0.0119641,0.008729652,0.031314828,0.00036758272,0.0140681695,-0.04219332,0.04389448,-0.015120205,0.046334308,-0.04611047,0.010089464,-0.048617445,-0.0067486926,0.004773329,0.02717384,-0.039596807,-0.02506977,-0.019865554,0.025942735,0.04803547,0.0040570498,0.007929434,0.000059981383,-0.014034594,-0.04053692,0.040469773,0.0075712944,-0.0030581763,0.02831541,-0.0478564,-0.04371541,-0.038141865,-0.03529913,0.027487213,0.0058869193,0.0044179875,-0.008360321,-0.060033146,0.0056127184,-0.00033435685,-0.02153314,0.055869773,0.0013947857,0.03601541,-0.026054654,0.002095676,0.034291863,0.011471658,0.03686599,0.020089392,-0.0024552147,-0.03473954,0.009921585,-0.02284259,-0.04682675,-0.02639041,0.043939248,0.008203634,-0.029367445,0.0345157,0.013060902,-0.0027196223,-0.029591283,-0.012456542,0.033329364,0.0016787793,0.008919913,0.0077167884,0.026457561,0.0075768903,-0.025338374,-0.0054532345,0.026659014,0.034112792,0.055825006,0.030755235,0.019384304,0.03252355,-0.009837646,-0.036239248,0.015433577,-0.001450745,0.019440264,0.01875756,0.013049711,0.02567413,0.03744797,-0.028942155,-0.025136922,-0.010139827,-0.029815119,0.016798984,-0.0015136993,0.022473259,0.0023586848,-0.044521224,0.0145046525,-0.016631106,-0.037537504,0.0036485468,0.045841865,0.058063377,0.017694334,0.015791716,-0.022495642,0.016071513,0.027666282,0.028002037,-0.010906469,-0.021242153,0.055287797,-0.003973111,-0.00892551,0.0073922244,0.009054216,0.021756979,0.016552763,0.00041444862,0.0025755272,0.045058433,0.026144188,-0.009546658,0.008936701,-0.027308142,0.06777792,0.035366282,0.029792735,-0.038768608,-0.0018760358,-0.023525294,-0.019496223,0.014929944,0.0038192228,0.034000874,-0.0072691143,0.030262794,0.014997095,0.003475073,-0.015187356,0.04058169,0.03619448,0.025562212,-0.0082763815,0.0297032,0.04329012,-0.016910903,-0.04004448,0.012534885,-0.041387506,-0.007582486,-0.032187793,-0.0012625819,-0.006317806,-0.007369841,-0.049557563,-0.007509739,-0.025808433,0.0013318316,0.03686599,-0.036888376,-0.017414536,0.021992007,-0.018321078,0.008757631,-0.020917589,-0.02273067,-0.038701456,-0.00922769,0.00874644,-0.028248258,0.0028819044,-0.03798518,-0.010951237,0.0077783437,0.009641789,0.016922094,-0.0044935322,-0.036597386,-0.006810248,0.0039759087,0.015981978,0.0004763536,0.041432273,0.023055235,-0.02753198,0.031225294,-0.032434016,-0.0047929147,-0.025136922,0.040984597,0.012971368,0.008908722,-0.005970858,0.0052098115,-0.03612733,0.016328925,-0.016452037,0.0003032295,0.021633869,-0.0009604016,0.015422385,-0.021812938,-0.039820645,-0.0499157,-0.033866573,-0.01942907,0.017190699,0.026054654,0.039037213,0.00730269,-0.022753054,0.02146599,0.0070117014,-0.0148292165,-0.01145487,0.00986003,0.010151018,0.021958433,-0.0054616285,0.06647966,-0.0042529074,0.02578605,-0.014873984,0.017358577,-0.0145382285,-0.024666863,-0.0029266719,0.017000437,0.016194623,-0.028584015,-0.026703782,-0.03288169,-0.018041281,-0.017828636,-0.024622096,-0.029121224,-0.0043872097,-0.02164506,-0.022685904,0.012602036,0.00033960305,0.027151456,0.02254041,0.006250655,-0.01208721,-0.015467153,-0.039350584,0.006233867,-0.028091572,-0.03559012,0.06925524,0.0013731015,0.020223694,-0.017593605,0.004040262,0.007862283,-0.01085051,0.017145932,0.008528198,0.03576919,0.017201891,-0.010374855,-0.00519862,0.001248592,-0.0016270169,0.01900378,0.042887215,0.026233723,-0.032971226,0.03212064,-0.015422385,0.008606542,0.028449712,0.011074347,0.0058701313,-0.029568898,0.020413956,-0.016093897,0.017962938,-0.011270205,-0.039216284,-0.02038038,-0.011594769,-0.021868898,-0.006474492,0.00076454406,-0.012534885,-0.018947821,-0.00026248413,0.045215122,-0.018835902,0.0039227474,-0.00950189,0.01569099,-0.0059484746,-0.009037429,0.015422385,-0.01120865,0.0009359194,0.043222968,0.0013996821,0.03167297,-0.00937878,0.036686923,0.031605817,-0.013732414,-0.03444855,-0.0074537797,0.014034594,0.0030246007,-0.008175655,0.02025727,0.024823548,-0.010996004,-0.041320354,-0.009563446,0.009837646,0.018354652,-0.028875003,-0.024017734,0.019876746,0.041745644,-0.012378199,-0.05819768,-0.02086163,-0.0022845387,0.0077951318,-0.013575728,-0.025025003,-0.020850439,0.0009778889,-0.041812796,0.044901747,0.032031108,-0.010660248,-0.0145382285,-0.0056518903,-0.011874565,-0.02710669,0.020190118,-0.04190233,-0.015377617,-0.018735176,0.0063513815,0.013933867,0.00973692,0.04664768,-0.0033715484,-0.040895063,0.028986922,-0.012053635,0.0060044336,0.022350147,-0.026547095,0.005173438,0.002739208,0.047990702,0.012736338,-0.045976166,0.0007694405,0.0044375733,-0.010436411,0.042484306,-0.021085467,0.017235467,0.017291427,0.0007211756,0.023972968,-0.032993607,-0.04821454,0.027017154,-0.021454798,-0.002816152,-0.025562212,0.026703782,-0.032456398,0.034470934,-0.0071460037,-0.0420814,-0.003640153,0.0071012364,0.0020383177,-0.01743692,-0.042394772,0.040559307,-0.06204768,0.012490118,-0.044275004,-0.014236048,-0.030822387,-0.0073922244,0.015567879,0.047587797,0.007761556,0.010861701,0.006457704,0.019585758,-0.05694419,-0.0074090124,-0.040738378,0.0062618465,-0.019820787,-0.012814681,0.041991863,-0.005274165,0.013172821,-0.01701163,-0.012053635,0.024375875,-0.028158724,-0.00177391,-0.028449712,-0.028091572,0.04443169,0.001009366,-0.013340699,0.030173259,0.031292446,0.027621515,0.046602912,0.010721804,0.05085582,0.034068026,0.009429144,-0.021398839,-0.029747969,0.023167154,-0.010111847,0.011370932,0.01989913,-0.006860611,0.025651747,-0.0077055967,0.0069613378,0.002092878,0.011169478,0.017470496,-0.054929655,-0.021768171,-0.014885176,-0.029076457,0.0118186055,-0.005660284,-0.003007813,-0.015545496,-0.029613666,-0.028248258,-0.0187016,-0.049333725,-0.024801165,0.039932564,0.026502328,-0.030374711,-0.004669804,0.02603227,-0.039059598,-0.016306542,-0.015724566,0.028516863,-0.028404946,0.0536314,-0.024443025,-0.00020425147,0.01688852,0.016239392,-0.048125006,-0.014717298,0.020134158,0.0045662797,0.011494041,-0.007179579,-0.016440844,0.0155566875,-0.003072166,0.019552182,0.04454361,0.014795641,-0.012769914,0.005565153,-0.002991025,-0.0118186055,0.0043200585,0.037000295,0.017604798,0.0062170792,0.012657995,-0.013542153,0.006860611,0.0034275076,0.015321659,-0.0058869193,0.0026496733,-0.05488489,0.008041353,0.01599317,0.03583634,0.010061484,0.036575004,-0.010632268,-0.0074146083,0.016328925,-0.00018169287,0.020727327,-0.02699477,0.022115119,0.040693607,0.040357854,0.030665701,-0.012255088,0.02759913,-0.015422385,-0.005422457,-0.019261194,-0.0013248366,-0.0108169345,-0.01689971,0.022685904,-0.020973548,-0.04053692,0.019294769,0.019026164,-0.024375875,0.0064185327,0.013239972,0.0111079225,0.008186847,0.031896807,-0.009401164,-0.03738082,0.03317268,-0.0022495643,-0.0029378636,0.023659596,-0.003642951,-0.05327326,0.042059015,0.011421295,-0.036149714,-0.015657414,0.0014010812,0.007442588,0.045976166,0.004913227,-0.0010674238,-0.0007190771,-0.0083883,-0.026681397,0.037918027,-0.0012779707,-0.029971804,-0.012769914,0.004924419,0.020995932,0.019440264,-0.028539248,-0.01394506,-0.0067990557,0.009815263,-0.009641789,0.002264953,0.0014339573,0.00029570996,0.028584015,0.020895205,-0.012131978,-0.01611628,0.015791716,-0.0075656986,0.038902912,0.002842733,-0.0009778889,0.0005351109,0.0064353202,0.00968096,-0.015579071,0.0074593755,0.026009886,0.010688228,0.009541062,0.012881832,0.0047369553,-0.0036933143,-0.024487793,-0.037895642,0.037783723,0.021175003,0.018723985,-0.0044375733,0.017291427,-0.014392734,-0.0063625732,-0.037962794,0.018656833,-0.011079943,-0.025383143,0.013228781,-0.010760975,0.029076457,-0.0006938954,0.03335175,0.010458794,0.007464972,-0.026614247,-0.020760903,-0.014527036,-0.0018886266,-0.004465553,-0.0052265995,0.020839246,-0.016922094,-0.01610509,0.008729652,0.008091716,0.027845351,0.03885814,0.03102384,-0.029389828,0.040850293,-0.008052545,0.00034152664,-0.012355816,-0.011796222,0.024062503,-0.011438083,-0.010604288,0.021510758,-0.009278053,0.017817443,0.012613228,0.018970205,0.013799565,-0.026950002,-0.016821368,-0.03169535,0.023547677,-0.0014941135,-0.0071292156,0.015523112,-0.0018634449,0.009792879,-0.01743692,0.02988227,-0.008281978,-0.022697095,0.014157705,-0.006871803,0.039126746,0.021242153,0.0014157705,-0.0148516,-0.031717736,0.057526167,-0.021868898,0.014415118,-0.04219332,0.032187793,-0.015791716,-0.018130817,-0.015836485,-0.019563373,-0.00088485656,0.00548681,0.028158724,-0.0009352199,-0.0118521815,-0.012657995,-0.020011049,-0.021600293,-0.045595642,0.040313084,-0.012210321,0.00077014,0.0210407,-0.03641832,-0.004927217,0.014896368,0.01694448,0.021835322,-0.005117479,-0.009255669,0.0011471658,-0.030195642,-0.0012583849,-0.018500147,-0.033463664,0.005898111,-0.019787211,0.007862283,0.023816282,0.0047761267,-0.017123548,0.014213664,0.012814681,0.005419659,-0.012859449,-0.027621515,-0.026524711,0.0007498547,0.006200291,-0.00068585126,-0.0127251465,-0.025987502,-0.0009638991,0.034000874,0.023480525,0.0076160617,0.02032442,0.019451456,-0.012646804,-0.01899259,-0.030643318,0.023458142,0.030038957,0.023816282,-0.00020372686,0.01250131,-0.026591863,0.00631221,-0.029613666,0.0411189,-0.013430234,-0.033441283,-0.007895858,0.0015766534,-0.0067990557,-0.03326221,0.031852037,0.004767733,-0.05049768,0.032613084,0.014448693,-0.02146599,0.0052993465,0.05210931,-0.0052965484,-0.013833141,-0.0078231115,-0.016541572,-0.021432415,0.043939248,0.027934887,0.0063625732,0.04340204,-0.0043872097,-0.04803547,-0.035254363,-0.0019613737,-0.012769914,0.002165625,0.0047201677,0.011527617,0.018791135,-0.030128492,-0.049557563,0.0014605379,0.007375437,0.0314939,0.0037744553,-0.024196805,0.042059015,-0.008528198,-0.019608142,0.010570713,0.010414028,-0.03167297,-0.013642879,-0.046692446,-0.026099421,-0.008192442,0.024353491,0.035321515,-0.01923881,-0.0025139719,-0.02242849,-0.01647442,-0.040715992,-0.0023684776,0.047319192,0.018959014,0.0018298693,-0.025875583,-0.051616866,-0.021555526,-0.013553345,0.026614247,-0.021365264,0.0019865555,0.008679288,0.014471077,0.025293607,-0.015243315,0.00026877955,-0.004376018,0.028293027,0.048572678,-0.0031253274,0.047050588,0.011807414,-0.013844333,0.008964681,-0.025338374,0.0018046877,-0.012165554,0.0070061055,0.0061890995,-0.031762503,-0.02194724,-0.017873403,0.031180527,-0.0054756184,-0.016507996,0.0034834668,0.014023403,0.0075433147,0.001859248,-0.029412212,0.027240992,0.032926455,-0.03979826,0.0022481652,-0.0063345935,-0.012825874,0.0036149712,0.026614247,0.024040118,-0.009792879,0.02115262,-0.0034191138,0.017750293,-0.0145046525,-0.002680451,-0.00829317,-0.013228781,-0.0158141,0.004619441,0.0083883,-0.008433067,0.037224133,-0.010861701,0.0009275255,-0.0029462576,-0.010660248,0.0081308875,0.0011632541,-0.0248907,-0.011930524,-0.011275801,-0.009513082,0.009412356,0.007067661,0.014795641,-0.03661977,0.010615481,-0.030800004,0.033329364,-0.004619441,-0.05466105,-0.016217008,-0.03265785,0.024622096,0.02742006,-0.013788373,-0.038611922,-0.0030525802,-0.01995509,-0.02578605,0.017392153,-0.00077363744,0.0043788156,0.0026160977,0.029188374,-0.0014451491,-0.017537648,-0.008640117,-0.031158142,0.034851458,0.00048894447,0.010542734,0.0026077037,-0.028404946,-0.017962938,-0.018869478,0.017929362,0.007207559,-0.003234448,-0.008975873,0.022260612,0.07964129,-0.008981469,-0.03462762,0.032747388,-0.00616112,0.013452617,0.00005539097,-0.051079657,0.015086629,0.028584015,-0.02524884,0.00712362,0.011275801,0.02043634,0.019328345,-0.03686599,0.0023908615,-0.005279761,-0.024935467,0.036239248,-0.0062394626,-0.04051454,-0.019406687,-0.014415118,0.009815263,-0.006138736,0.039238665,0.005097893,0.020067008,0.026435178,0.0007771349,-0.03138198,0.023771513,0.015433577,0.016675875,0.02710669,0.037671804,0.01310567,-0.00011226836,0.00904862,0.012646804,-0.004317261,0.019384304,0.026905235,0.05049768,-0.05770524,0.009804071,-0.024040118,-0.009093387,-0.027711049,0.012814681,0.009071004,0.010335684,-0.013340699,0.011874565,0.018656833,0.016507996,0.03462762,0.019194042,0.009093387,-0.013217589,-0.0038472025,-0.012769914,-0.0019795606,0.0026874458,-0.003301599,-0.020111775,-0.00050887995,-0.024398258,0.015086629,0.019305961,0.03409041,-0.003321185,0.010934449,-0.012344623,-0.0054756184,0.006603198,0.017056396,0.017515263,-0.003312791,0.049423262,0.00005574072,-0.02988227,-0.0065248553,-0.031516284,0.01079455,-0.0096026175,-0.001369604,0.030665701,0.016787792,0.021790555,0.015769333,-0.04528227,-0.05680989,-0.004935611,-0.04011163,0.005604325,0.007940626,0.030553782,0.0108169345,0.017302617,0.032187793,0.0035813956,-0.017213084,0.015713373,0.008595349,-0.010067079,-0.035433434,0.050273843,0.043200586,-0.035634886,-0.02321192,0.0039059597,0.02055945,-0.03632878,0.020178927,-0.028606398,0.009608213,0.021454798,0.008349129,-0.024980236,-0.05904826,0.007364245,-0.014840408,0.022988083,0.0019893534,0.03335175,-0.022518026,0.012255088,-0.021656252,-0.011516426,-0.008847167,0.008931106,-0.0076384456,-0.008780016,-0.03950727,0.0045494917,-0.05945117,-0.012154361,0.038925294,-0.007330669,0.0036681327,0.0054672244,0.015981978,-0.016854944,-0.028024422,0.0136316875,0.0039143534,0.0007127817,0.048259307,0.02464448,-0.019227618,0.004023474,0.015870059,0.017269043,0.024913084,0.017862212,-0.046692446,0.05031861,-0.0042613014,0.00973692,0.03619448,0.004031868,0.03939535,0.00037947405,-0.0248907,0.003628961,0.011874565,0.04749826,-0.0011947312,0.009518678,0.0010058685,0.010374855,0.0064912797,-0.043200586,-0.035008144,0.0047985106,-0.036821224,0.016149856,-0.0030469843,-0.012187937,0.0015990372,0.0036737286,-0.006373765,0.007834303,0.00056868646,0.013038519,0.0038500004,-0.023346223,0.03811948,-0.032814536,-0.027039537,0.017839827,-0.012311048,0.0078007276,-0.044991285,0.024666863,0.02524884,0.016821368,0.057794772,0.00829317,0.043872096,-0.0025503454,-0.008936701,-0.027397677,0.025047386,-0.0047285617,0.018030088,0.003161701,-0.024845934,0.0062562507,0.0031393173,-0.03926105,0.024711631,0.030128492,-0.002576926,0.011751454,0.008561774,-0.000026733685,-0.017515263,-0.013754798,0.009283649,0.03254593,0.020156542,0.01816439,0.0073138815,0.0070061055,-0.03024041,0.030150875,0.03529913,0.009300437,-0.0008862555,0.008427472,-0.025181688,0.0068214396,-0.0040850295,0.01893663,0.026882851,0.016015554,0.015321659,-0.011309376,0.038746223,-0.0024594115,0.021018315,0.02236134,0.049154654,-0.008701673,0.038388085,0.012031252,0.026793316,0.0028567226,0.008489027,-0.0277782,-0.029434595,0.03276977,0.0093508,-0.023726746,0.021051891,0.02753198,0.008063736,0.020548258,-0.04051454,0.0021432415,0.038141865,0.02285378,0.006144332,-0.033463664,-0.011359739,-0.0063793613,-0.024510177,0.04642384,0.005081105,-0.025741281,-0.022215845,-0.025338374,-0.033284597,-0.016798984,-0.0055707493,-0.01244535,0.03084477,0.01184099,0.010951237,0.021734595,-0.018914247,0.019876746,0.020615408,0.01653038,0.031225294,0.008724056,-0.0061723115,-0.02273067,0.008349129,-0.025763664,0.009714535,0.045483727,0.048841283,-0.0076160617,-0.0229657]},{"id":"binary-tree-diameter","name":"Binary Tree Diameter","description":"The **diameter** of a binary tree is defined as the **length** of the longest path between *any two nodes within the tree*. The path does not necessarily have to pass through the root.\n    \nThe **length** of a path between two nodes in a binary tree is the number of edges between the nodes.\n\nGiven the root of a binary tree `root`, return the **diameter** of the tree.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/90e1d7a0-4322-4c5d-c59b-dde2bf92bb00/public)\n\n```java\nInput: root = [1,null,2,3,4,5]\n\nOutput: 3\n```\n\nExplanation: 3 is the length of the path `[1,2,3,5]` or `[5,3,2,4]`.\n\n**Example 2:**\n\n```java\nInput: root = [1,2,3]\n\nOutput: 2\n```\n\n**Constraints:**\n* `1 <= number of nodes in the tree <= 100`\n* `-100 <= Node.val <= 100`\n","difficulty":"Easy","concepts":["Binary Tree","Depth-First Search"],"solutions":{"python":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nclass Solution:\n    def diameterOfBinaryTree(self, root: Optional[TreeNode]) -> int:\n        res = 0\n\n        def dfs(root):\n            nonlocal res\n\n            if not root:\n                return 0\n            left = dfs(root.left)\n            right = dfs(root.right)\n            res = max(res, left + right)\n\n            return 1 + max(left, right)\n\n        dfs(root)\n        return res\n","javascript":"/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     constructor(val = 0, left = null, right = null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {TreeNode} root\n     * @return {number}\n     */\n    diameterOfBinaryTree(root) {\n        const res = [0];\n        this.dfs(root, res);\n        return res[0];\n    }\n\n    /**\n     * @param {TreeNode} root\n     * @param {number[]} res\n     * @return {number}\n     */\n    dfs(root, res) {\n        if (root === null) {\n            return 0;\n        }\n        const left = this.dfs(root.left, res);\n        const right = this.dfs(root.right, res);\n        res[0] = Math.max(res[0], left + right);\n        return 1 + Math.max(left, right);\n    }\n}\n","cpp":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n\nclass Solution {\npublic:\n    int diameterOfBinaryTree(TreeNode* root) {\n        int res = 0;\n        dfs(root, res);\n        return res;\n    }\n\nprivate:\n    int dfs(TreeNode* root, int& res) {\n        if (!root) {\n            return 0;\n        }\n        int left = dfs(root->left, res);\n        int right = dfs(root->right, res);\n        res = max(res, left + right);\n        return 1 + max(left, right);\n    }\n};\n","java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    \n    public int diameterOfBinaryTree(TreeNode root) {\n        int[] res = new int[1];\n        dfs(root, res);\n        return res[0];\n    }\n\n    private int dfs(TreeNode root, int[] res) {\n        if (root == null) {\n            return 0;\n        }\n        int left = dfs(root.left, res);\n        int right = dfs(root.right, res);\n        res[0] = Math.max(res[0], left + right);\n        return 1 + Math.max(left, right);\n    }\n}\n","csharp":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\npublic class Solution {\n    \n    public int DiameterOfBinaryTree(TreeNode root) {\n        int res = 0;\n        DFS(root, ref res);\n        return res;\n    }\n\n    private int DFS(TreeNode root, ref int res) {\n        if (root == null) {\n            return 0;\n        }\n        int left = DFS(root.left, ref res);\n        int right = DFS(root.right, ref res);\n        res = Math.Max(res, left + right);\n        return 1 + Math.Max(left, right);\n    }\n}\n"},"starterCode":{"python":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nclass Solution:\n    def diameterOfBinaryTree(self, root: Optional[TreeNode]) -> int:\n        ","javascript":"/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     constructor(val = 0, left = null, right = null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {TreeNode} root\n     * @return {number}\n     */\n    diameterOfBinaryTree(root) {}\n}\n","cpp":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n\nclass Solution {\npublic:\n    int diameterOfBinaryTree(TreeNode* root) {\n        \n    }\n};\n","java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    public int diameterOfBinaryTree(TreeNode root) {\n        \n    }\n}\n","csharp":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\npublic class Solution {\n    public int DiameterOfBinaryTree(TreeNode root) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/K81C31ytOZE","embedding":[0.0461013,-0.021460254,0.05061077,0.0040338635,0.004199949,0.041591827,-0.0022799005,0.006386741,-0.032653406,0.08439154,0.017444005,-0.007936872,-0.07484918,-0.07086313,0.017514467,0.0003246216,-0.0106697325,-0.0012129272,0.025909333,0.023815649,0.027117226,0.018299598,0.07303734,-0.03448538,0.07114497,-0.0137699945,-0.012904337,0.028606962,0.048114453,-0.0502484,0.011022035,0.0010782973,-0.039357223,0.0007524175,-0.011776969,0.019920189,0.06087787,0.04485314,0.042719193,0.04114893,-0.06361576,-0.0062508527,-0.008430095,-0.003135492,-0.019004203,-0.024943016,-0.043081563,-0.0036840774,0.014373941,-0.010649601,-0.018470716,0.030539593,0.030157093,0.02383578,-0.058864713,-0.043846563,-0.035189986,0.019618215,-0.0008316855,0.039800115,0.029150514,-0.014575257,0.02268828,0.002999604,0.02460078,0.015179205,0.032190382,-0.018339861,0.017413808,-0.06808497,-0.0039382386,0.0047611166,-0.03599525,-0.036458276,0.06011287,0.028627094,0.029190777,0.0403638,0.0021226224,-0.020916702,0.0027781567,0.009728582,0.06272998,0.0026020056,-0.006467267,-0.013347232,-0.015259731,-0.033659987,-0.032391697,-0.06164287,-0.006794405,-0.04098788,0.058421817,0.019577952,-0.0023163888,-0.018289533,0.041108668,0.0266542,-0.014524928,-0.008223747,-0.028405646,-0.044651825,0.026090516,0.011817232,0.007886543,-0.020000715,0.034706827,-0.0036916267,-0.03088183,0.011112627,0.015289928,-0.047993664,0.023272095,0.0018445551,0.011746772,-0.041511297,-0.032250777,-0.03333788,0.007639931,-0.01814861,0.03496854,-0.05322787,-0.03706222,-0.027117226,-0.011052232,0.0034651465,-0.015088612,-0.015501309,0.044531036,0.026311964,0.016809862,0.0033946862,-0.026976304,0.0048139617,-0.03637775,-0.017152099,-0.014867165,0.025546964,0.0004730919,0.004041413,-0.018621704,0.0008688031,-0.0015790701,-0.023231832,0.007076247,-0.0056116753,-0.029754462,0.05322787,-0.035149723,-0.005244274,0.028606962,-0.016115323,0.012401047,-0.018833084,-0.0077556875,-0.022507096,-0.002750476,0.05089261,0.012602364,-0.040142354,-0.023231832,-0.02870762,-0.020212097,0.020373149,-0.012129271,0.042517878,-0.024943016,-0.0039256564,0.0030700646,-0.024298806,0.027761437,-0.020544268,0.07569471,-0.023513675,0.01222993,0.0005146133,-0.020715386,0.012773482,0.038411036,0.003940755,-0.031344857,0.016044863,-0.0059438464,-0.032854725,0.0025994892,-0.00042968322,0.01198835,-0.025567096,0.015752954,-0.0073731877,0.015531507,0.03343854,0.040444326,0.0145551255,-0.045738928,0.0062609185,0.0039659194,-0.016940717,-0.01203868,0.036216695,0.028606962,0.0062156226,-0.0012877914,-0.028103672,0.027258147,-0.031163672,-0.016487757,0.00045453312,-0.041209325,-0.034284066,0.01769565,-0.0053751296,0.008510621,0.0012827585,0.024097491,0.020332886,0.040424194,-0.024701437,-0.0036161335,0.05165761,0.0102570355,0.0076701283,0.010116114,0.054556556,0.041954193,0.008510621,-0.009758779,0.00711651,0.02756012,0.022708412,0.011354206,0.008777365,-0.018823018,-0.0016608546,-0.019577952,-0.023231832,-0.030982487,-0.0027731238,-0.047429983,-0.03881367,-0.004577416,0.023654595,-0.011072364,-0.008354601,-0.044772614,-0.0069051287,0.008535786,0.026936041,-0.07090339,0.035189986,-0.013981376,-0.04598051,-0.028143937,-0.029170645,-0.020232229,-0.027721172,-0.017927164,0.0062256884,0.0727555,-0.03820972,-0.014202823,-0.040464457,-0.031707224,-0.066474445,-0.024037095,-0.04767156,0.047429983,0.010478483,0.0013538481,0.008727036,0.040424194,-0.06115971,0.0144746,-0.027982883,-0.008606247,-0.012934534,-0.0038778437,0.014867165,0.008284141,-0.08318365,0.015964335,0.089786805,0.039558537,0.008898154,-0.010740193,-0.001967861,-0.013055324,-0.011213285,0.00035041515,-0.0028536501,-0.026191173,0.0021641438,-0.032854725,-0.020161768,-0.038511693,-0.03486788,0.0067742737,0.007207102,0.013508284,-0.07267497,-0.055442344,0.014273284,-0.00068573165,0.022466833,-0.022728544,-0.06164287,0.03255275,0.060757082,-0.002722795,-0.002288708,-0.006477333,0.01781644,0.006391774,0.043645244,-0.04751051,-0.021923281,0.018229138,-0.07947944,-0.022486964,-0.0052845376,0.015400652,-0.019588018,-0.014434337,0.02808354,0.024439728,0.006552826,-0.06699787,0.03923643,0.013548547,-0.028365383,0.0055512805,-0.0015727789,0.044893403,0.0061048986,-0.031868275,0.019477295,0.048476823,-0.0026699496,-0.034163274,0.061361026,0.025909333,0.021480385,0.015541573,-0.048798926,-0.015420783,-0.028647225,0.027217884,0.030459067,0.017524533,0.023312358,-0.05290577,-0.021218676,0.05000682,-0.008274076,-0.04255814,0.049886033,-0.019618215,0.0005674586,-0.009975193,-0.0064421026,-0.07348023,-0.035814065,-0.0065326947,-0.029774593,-0.0031531074,0.019577952,-0.0013676886,-0.006804471,0.0035028933,0.016829994,-0.016165651,0.048396297,-0.021359596,0.0061250306,-0.009663154,0.01824927,-0.0034399822,0.009431641,-0.00586332,0.004509472,0.0030021204,0.046866298,-0.036337484,0.0239767,-0.026754858,-0.006708846,0.048275508,0.00810799,0.0205644,-0.03802854,0.022527227,0.006326346,0.064501554,-0.018782755,-0.0074939774,-0.011716574,-0.0013437824,0.04920156,0.050369192,0.042880245,-0.0013123268,0.03704209,-0.017735913,0.012390981,0.0029694068,-0.022245387,0.056690503,0.011736706,-0.004053995,-0.01891361,0.0052694385,0.030660382,-0.02677499,-0.031304594,0.011907824,0.015612033,-0.006769241,-0.019135058,-0.037001826,-0.006150195,-0.026412621,0.020332886,0.00029300872,0.0039004919,0.018309664,0.04521551,0.02268828,0.046987087,0.04203472,0.0014180175,0.045094717,0.034082748,-0.0053700963,0.037001826,0.000113318725,0.0003658284,0.03074091,0.015752954,-0.037968144,0.015320125,-0.025607359,-0.022929858,0.046181824,-0.0232117,0.008591148,0.06651471,0.039840378,0.04678577,0.044289455,-0.037585642,0.025063805,0.021762228,-0.015330191,-0.013629073,-0.023292227,-0.01203868,0.03589459,0.036337484,-0.016779665,-0.025063805,-0.025969727,0.036840774,-0.010559008,-0.0060797343,-0.016326703,-0.016618611,-0.0006064636,0.023674726,-0.006658517,-0.07259444,0.037223276,-0.015471112,-0.0022975155,-0.014847034,-0.0050983205,-0.0022710927,0.011303877,0.014756441,-0.022325912,-0.014373941,-0.0029115283,-0.02113815,0.018601572,0.010397957,0.015128875,-0.04283998,0.05153682,0.034062617,-0.0153402565,-0.017846638,-0.01031743,-0.017091705,0.031707224,-0.0049800472,0.026291832,0.047711823,-0.039659195,-0.00040388963,0.012934534,-0.019386703,0.003281446,-0.03820972,0.0251242,-0.012330587,-0.012018547,-0.074889444,-0.035189986,0.017927164,-0.03881367,0.033800907,-0.0533084,-0.019004203,0.032673538,0.040585246,0.023292227,-0.029130382,-0.022366175,-0.02280907,0.0016256244,-0.009104503,-0.0055714124,-0.013840455,0.033478804,0.019900057,-0.016095191,-0.018762624,-0.02486249,-0.018410321,-0.01717223,0.00521911,-0.00016891646,0.015299994,0.02139986,0.05113419,0.012511771,0.025325516,0.0046881395,0.033418406,-0.0062005236,0.0013576228,0.0064421026,0.002531545,-0.008359635,-0.039800115,-0.020916702,0.01339756,0.0057374975,-0.021500519,0.017786242,0.010548943,0.001178326,-0.023010386,-0.020262426,-0.0320092,-0.011474995,-0.019749071,-0.02141999,-0.015702626,0.011696443,0.030298013,-0.021339465,0.0037193077,0.029794725,0.02180249,0.019114926,-0.010569075,-0.0051989784,0.0073077604,0.01807815,0.0062609185,0.044490773,0.004786281,-0.00621059,-0.031626698,0.0438063,-0.022225253,0.009049141,-0.050328925,-0.001645756,-0.029392093,-0.012672824,-0.022023939,-0.03488801,0.003523025,-0.01069993,0.02127907,0.01153539,0.030680513,0.033881433,-0.017091705,0.010337561,0.038109064,0.04767156,0.031828012,-0.037364196,-0.01390085,-0.0029165614,0.01134414,0.008626378,0.017675519,0.0011191895,0.0010021748,0.030056436,0.0285667,0.033901565,-0.006109932,0.02011144,0.020504005,-0.0040791593,0.03178775,-0.012994929,-0.04831577,-0.0015123843,0.00014029189,0.0067893723,0.009627923,0.015068481,0.0070611485,0.025426174,0.018722361,0.00795197,-0.024278674,0.006658517,0.010015457,-0.012139337,0.013759929,-0.014907428,0.02538591,0.013045258,0.011817232,-0.049523663,0.028647225,0.020775782,-0.0059388136,0.01009095,-0.0076751616,-0.036176432,-0.008737102,-0.007876477,-0.003072581,0.022648018,0.025587227,-0.016920585,-0.021560913,-0.042477615,0.020282557,-0.009119602,0.027640646,-0.019960452,-0.013991442,-0.0068447343,0.051496558,-0.0131358495,0.035954986,-0.009119602,0.019648412,-0.02357407,-0.064662606,-0.039961167,0.0071618063,0.00009884916,-0.034304198,0.010408022,0.008309306,-0.011746772,-0.009391378,0.0115655875,0.0118272975,0.022084333,-0.019859795,-0.000862512,0.028244594,0.006341445,-0.013619008,-0.05322787,-0.009416542,-0.009557463,-0.011474995,-0.05000682,-0.019124992,-0.009859437,0.0037394392,-0.044812877,0.047470246,0.019497426,0.003291512,-0.0016218497,0.0028662323,-0.024278674,-0.03227091,-0.0055059846,-0.014947691,-0.017574862,0.0063162805,-0.012068877,0.004295574,0.02204407,0.041028142,0.019396769,-0.0784326,-0.01473631,-0.0074889446,-0.026754858,-0.0053147348,-0.0053298334,0.042356826,-0.012008482,0.0071970364,0.03651867,-0.015652297,0.014766507,-0.007856346,-0.0028511337,0.025023542,-0.017846638,-0.005304669,0.03074091,0.042356826,-0.0019137574,-0.03229104,-0.020473808,-0.0258892,-0.006527662,0.030277882,0.014947691,0.021963544,0.0011173022,0.004846676,0.0005278246,0.011394469,-0.057697084,0.0029744396,0.011877627,0.004091742,-0.01153539,-0.016739402,-0.01953769,0.037464853,-0.0076751616,0.02242657,0.0063112476,0.027117226,0.009003845,-0.05048998,-0.018812953,0.011263614,-0.022527227,0.018601572,-0.060596026,0.06727971,0.017967427,0.002763058,-0.0285667,-0.056448925,0.014806771,-0.008304273,-0.0140921,0.003590969,0.012239995,0.005188912,-0.033015776,-0.013176113,-0.012743284,0.009788976,0.0072423327,-0.019708809,-0.037223276,-0.014444402,-0.007353056,0.05648919,0.01972894,-0.012803679,0.0274192,-0.01640723,0.02141999,-0.02063486,-0.024016963,-0.045738928,0.012793614,-0.030559724,-0.00708128,0.008409964,0.02357407,0.004006183,0.012813745,-0.0019829597,0.00974368,0.017121902,0.003372038,-0.027479595,-0.020735517,-0.017444005,-0.037666168,-0.0020018332,0.020775782,-0.008661608,-0.021319333,-0.0033418408,-0.03178775,-0.03508933,-0.0278017,0.015601967,0.0036664624,-0.013367363,-0.015350323,0.03563288,0.0034802454,-0.048758663,-0.031083146,0.0137096,-0.029331699,0.0319488,-0.013639139,0.011414601,-0.008153286,0.0047107874,-0.0017325733,-0.01698098,0.03563288,0.013468021,0.015893875,0.027902357,0.009879569,0.023714991,-0.022849333,0.036458276,-0.0028435844,-0.002790739,0.020312754,0.013820323,0.06482366,-0.007413451,-0.040424194,0.03355933,0.012360784,0.01275335,0.04392709,0.016034797,-0.025647622,0.029311568,-0.008792464,-0.023231832,-0.0033670051,-0.05000682,-0.014132363,0.022305781,0.024419595,-0.018863281,-0.0024258543,-0.061441556,-0.028486174,0.007141675,0.0045874817,0.017464139,-0.046826035,0.06099866,-0.001567746,0.0053751296,-0.016970914,-0.0075795366,0.024822228,-0.043685507,0.0007429808,-0.011495127,-0.0132465735,-0.005802925,-0.03448538,-0.0039734687,0.010850917,0.01884315,0.03231117,0.0058935173,0.00054827076,0.004720853,-0.018440519,-0.00068447343,-0.048033927,0.0063515105,-0.012652692,0.011173022,0.028425777,0.0066333525,0.025446305,0.0033921697,0.034163274,-0.026332095,0.0150785465,0.013004995,0.011253548,-0.009094438,0.015058415,-0.009411509,0.009094438,-0.019145124,-0.01793723,0.0065075303,-0.024540385,-0.0055210833,-0.003636265,-0.03444512,0.0151892705,-0.0077808523,0.022245387,-0.015893875,0.008807562,-0.012501705,-0.010770391,-0.023030518,-0.010075851,0.0021918248,-0.006094833,-0.017947296,0.011555522,0.052744716,-0.0035280578,-0.021721965,-0.016618611,0.03627709,-0.03384117,-0.017907033,0.00079834263,-0.01416256,-0.011203219,-0.000620304,-0.039014984,-0.02063486,-0.038149327,0.02025236,0.0255067,-0.01853111,0.011716574,0.003963403,0.018984072,0.0056670373,0.0025554514,0.030841567,-0.02947262,-0.03138512,0.028123805,0.013991442,-0.028989462,-0.008354601,-0.022064202,-0.057858136,-0.025265122,0.024520254,-0.024580648,-0.035411432,0.010478483,-0.002042096,0.051617347,0.0016155585,-0.018349927,0.00047718114,0.0058230567,-0.050047085,0.0036111006,0.004600064,0.033458672,0.0063162805,0.018893478,-0.019336374,0.005080705,0.013125784,0.02307078,0.011011969,0.014082034,0.03678038,0.02770104,-0.06264945,-0.009834273,0.020675123,-0.019980583,-0.019205518,0.01731315,-0.02768091,-0.006391774,0.026593804,0.013810257,0.03269367,-0.00034601137,0.035210118,-0.038894195,-0.009512167,-0.0022283134,0.0068548,-0.015249665,-0.0047158203,-0.00974368,0.043685507,-0.0061703264,0.0643405,0.031626698,-0.02127907,0.022486964,0.036679722,-0.01397131,0.082619965,-0.025446305,-0.006084767,-0.01738361,0.00027067526,-0.010377824,0.016850125,0.036981694,-0.016507888,0.02562749,0.030922092,0.033136565,0.005772728,-0.029573277,-0.011877627,0.00929072,0.060434975,0.0142934155,-0.005058057,0.028687488,0.0067239446,-0.026130779,-0.0040288307,0.0464234,-0.012672824,0.047107875,0.03639788,0.019296112,-0.014424271,0.020483874,-0.020342952,-0.005908616,-0.002999604,-0.005032893,-0.0018634285,0.029895382,-0.010221805,-0.005631807,0.006427004,-0.0017627707,-0.0095172,-0.03269367,-0.0067239446,0.004972498,-0.03909551,-0.0034223672,0.009029009,-0.052986294,-0.015310059,-0.040464457,-0.019527623,-0.00071592897,0.029009594,-0.002165402,0.01351835,-0.008465325,-0.0021616274,0.0026624002,0.004685623,0.0053197676,0.011394469,0.020856308,-0.011887693,-0.052100506,-0.0118272975,-0.024721568,0.021822622,0.008923319,0.013981376,0.013407626,-0.014504797,0.011424666,-0.062971555,0.01743394,0.022406438,-0.03382104,-0.012552034,-0.022970123,-0.023513675,-0.016064994,-0.026855515,-0.02615091,0.010015457,0.041873667,-0.023896175,-0.010428154,0.04883919,-0.018229138,-0.017846638,0.016548151,-0.019044466,0.0056519387,-0.011122693,0.032331303,0.032995645,0.0028511337,0.0010336303,-0.02101736,0.008319371,-0.029512882,0.042477615,-0.006744076,-0.0035809032,-0.016960848,0.014716178,-0.006391774,-0.028627094,-0.019245781,-0.036438145,0.0017237657,0.032854725,-0.014504797,-0.0027353773,0.015048349,-0.017947296,-0.030237619,0.010609338,-0.026956173,-0.013105652,0.017756045,-0.0023616848,-0.026372358,-0.012904337,0.028244594,0.01972894,0.012642627,0.017373545,-0.037243407,-0.02042348,0.013407626,-0.016749468,0.020594597,0.008379767,-0.010991838,-0.033921696,-0.0030876796,0.0021062656,-0.0024321454,0.019789334,-0.014222954,0.0027303442,-0.0028762983,0.015984468,0.006764208,-0.015541573,0.0023918822,0.014404139,0.0285667,0.0034148176,0.016226046,0.037585642,0.025486568,-0.0055110175,0.040565114,0.025808673,0.0018785272,-0.021480385,-0.006427004,0.014534994,-0.004751051,-0.026613936,-0.0052895704,-0.013639139,0.0047107874,-0.0072775627,-0.005858287,0.018510979,-0.006049537,-0.02345328,0.017131967,0.008732069,-0.006049537,0.004096775,0.007851313,-0.026493147,-0.016064994,-0.002594456,0.024178017,0.0035834196,0.0006319426,0.0005963978,-0.021258939,0.04008196,0.027882226,0.012904337,-0.02486249,0.0019867343,-0.0026699496,0.015219468,0.014897362,-0.020081243,0.0022421537,-0.0054204254,0.029774593,0.008596181,-0.029855119,-0.013166048,0.010151344,-0.010730127,0.016648808,-0.009044108,-0.009376279,-0.009819173,-0.008852858,0.000028113423,-0.018349927,0.029432356,-0.016689071,0.022124596,-0.004695689,-0.019336374,0.01198835,-0.022748675,0.044168666,0.017474204,-0.064501554,-0.0009543623,-0.0012720636,-0.020030914,0.0065930896,-0.0073983525,0.00065490516,0.022325912,-0.026271699,-0.011857496,-0.0004951108,0.0020886504,-0.006517596,-0.010367759,-0.0010191607,-0.00006924159,0.011132759,0.0053248005,-0.020413414,-0.03321709,-0.03114354,0.012280258,0.011636048,-0.01819894,-0.004889455,-0.006190458,0.08237839,0.028848542,0.0042704092,-0.019457163,-0.0077456217,0.027841963,-0.007514109,-0.024822228,-0.012159469,0.0124614425,-0.023251964,-0.010740193,0.016296506,0.018420387,-0.018762624,0.009592693,0.0028310022,0.0022094399,-0.010760325,-0.0003806125,0.0044188797,0.0022232803,0.0015350323,0.012783548,0.035330907,0.0076751616,0.036820643,-0.008722003,0.04577919,0.021983676,-0.014313547,-0.02266815,0.017806374,-0.009225292,0.01800769,0.0018558792,0.06305208,0.028063409,0.0060898,0.03988064,-0.013538482,0.00029410966,0.008661608,0.021560913,0.039840378,-0.0041169063,-0.0030247685,-0.03678038,0.03293525,-0.028929068,0.012572166,-0.010659667,-0.019749071,0.008465325,-0.011525325,0.020775782,0.039176036,0.046181824,0.032854725,-0.00014037052,-0.022366175,-0.022225253,-0.029009594,0.00842003,-0.04920156,-0.008862924,0.0015073514,-0.024379332,-0.03164683,0.02524499,0.031203935,0.07802997,-0.018953875,0.029210908,0.00047372104,0.026251568,-0.0051209684,-0.008077793,-0.00567207,-0.01473631,-0.025808673,0.016759533,-0.005163748,-0.03319696,-0.027882226,0.017856704,-0.053268135,-0.0037218241,-0.0010386632,0.00982924,0.034223672,-0.010131213,-0.020977097,-0.044692088,0.010911311,-0.009013911,-0.003804867,0.012833877,-0.0013337166,0.019889992,0.026251568,0.037646037,-0.005214077,-0.027278278,0.021460254,0.004995146,-0.0070712143,-0.018470716,0.025788542,0.040786564,-0.0251242,-0.032995645,-0.006517596,0.0026573674,0.0115655875,0.018370058,0.008258977,0.03305604,0.002552935,-0.002006866,-0.02447999,-0.035290644,-0.01698098,0.007816083,0.013035192,-0.015873743,-0.02032282,0.0023012902,-0.0054204254,0.026714595,0.0046428437,-0.030801304,0.017373545,-0.030459067,-0.028486174,-0.01814861,-0.028506305,-0.018168742,-0.033800907,-0.0072171683,-0.033096302,0.0073127933,0.032713804,0.016165651,-0.0016155585,0.003372038,0.008571017,0.0069151944,0.021097885,0.01693065,0.02307078,-0.030720778,0.012250061,-0.00068510254,-0.01858144,-0.002294999,0.009260522,-0.0132465735,0.011505193,-0.021118017,-0.01722256,-0.016165651,-0.0097336145,0.0025894232,0.010850917,0.0059237145,-0.01012618,0.01031743,0.0149275595,0.020514071,0.05757629,-0.02307078,-0.00958766,0.03816946,-0.011867561,0.006990688,-0.027580252,-0.035793934,0.044611562,0.010151344,-0.024520254,-0.0072523984,0.004076643,-0.038008407,0.0062005236,-0.0038199655,0.0054757874,-0.025929464,-0.020836176,0.03372038,-0.014998021,-0.030298013,-0.044007614,-0.015390586,0.0075694704,-0.016729336,0.006270984,0.00023513046,0.024520254,0.043403666,0.014696047,0.022607755,-0.013186179,-0.0033242255,-0.016950782,-0.018259335,0.024339069,-0.018591506,0.0019489877,-0.030841567,0.030177224,0.0047359522,-0.010881114,0.0022257967,0.00018841893,0.002604522,0.013256639,0.0007700326,0.01230039,-0.037867486,-0.0016080092,0.011897759,0.041309983,0.0040338635,0.01819894,0.0009499585,-0.015098678,-0.0074939774,0.0014419238,0.021158282,-0.02407736,0.020514071,0.0285667,-0.008243878,-0.005085738,-0.026090516,0.030982487,-0.0060797343,-0.0015752955,0.020956965,-0.019195452,0.038934458,-0.028164068,0.049121033,0.01435381,0.031063015,-0.008097924,0.03293525,0.00059073576,0.017373545,0.0074033854,-0.0033393244,-0.004139554,0.0024057226,-0.010810654,0.010871048,-0.005953912,0.009939963,0.031284463,0.0075745033,0.05431498,-0.00788151,-0.039055247,0.02576841,-0.018168742,-0.001212298,0.0028989462,-0.039558537,-0.029311568,-0.019839663,0.0069604907,0.0022635434,-0.011011969,-0.0065075303,0.015299994,-0.0027202785,0.018470716,0.0009788977,-0.015108744,0.021077754,0.020604663,0.023292227,0.009446739,-0.01031743,-0.0048517087,-0.015662363,0.02600999,0.037646037,0.048678137,0.0085005555,0.001088363,0.022829201,-0.026674332,0.001686019,0.043001037,0.04485314,0.032854725,0.006864866]},{"id":"balanced-binary-tree","name":"Balanced Binary Tree","description":"Given a binary tree, return `true` if it is **height-balanced** and `false` otherwise.\n\nA **height-balanced** binary tree is defined as a binary tree in which the left and right subtrees of every node differ in height by no more than 1.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/c19c3727-ea28-416c-3873-79ee75f2b400/public)\n\n```java\nInput: root = [1,2,3,null,null,4]\n\nOutput: true\n```\n\n**Example 2:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/24fcc2da-e012-4f9e-856e-040f200f3c00/public)\n\n```java\nInput: root = [1,2,3,null,null,4,null,5]\n\nOutput: false\n```\n\n**Example 3:**\n\n```java\nInput: root = []\n\nOutput: true\n```\n\n**Constraints:**\n* The number of nodes in the tree is in the range `[0, 1000]`.\n* `-1000 <= Node.val <= 1000`\n","difficulty":"Easy","concepts":["Binary Tree","Depth-First Search"],"solutions":{"python":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nclass Solution:\n    def isBalanced(self, root: Optional[TreeNode]) -> bool:\n        def dfs(root):\n            if not root:\n                return [True, 0]\n\n            left, right = dfs(root.left), dfs(root.right)\n            balanced = left[0] and right[0] and abs(left[1] - right[1]) <= 1\n            return [balanced, 1 + max(left[1], right[1])]\n\n        return dfs(root)[0]\n","javascript":"/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     constructor(val = 0, left = null, right = null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {TreeNode} root\n     * @return {boolean}\n     */\n    isBalanced(root) {\n        return this.dfs(root)[0] === 1;\n    }\n\n    /**\n     * @param {TreeNode} root\n     * @return {number[]}\n     */\n    dfs(root) {\n        if (!root) {\n            return [1, 0];\n        }\n\n        const left = this.dfs(root.left);\n        const right = this.dfs(root.right);\n\n        const balanced =\n            left[0] === 1 &&\n            right[0] === 1 &&\n            Math.abs(left[1] - right[1]) <= 1;\n        const height = 1 + Math.max(left[1], right[1]);\n\n        return [balanced ? 1 : 0, height];\n    }\n}\n","cpp":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n\nclass Solution {\npublic:\n    bool isBalanced(TreeNode* root) {\n        return dfs(root)[0] == 1;\n    }\n\nprivate:\n    vector<int> dfs(TreeNode* root) {\n        if (!root) {\n            return {1, 0};\n        }\n\n        vector<int> left = dfs(root->left);\n        vector<int> right = dfs(root->right);\n\n        bool balanced = left[0] == 1 && right[0] == 1 && abs(left[1] - right[1]) <= 1;\n        int height = 1 + max(left[1], right[1]);\n\n        return {balanced ? 1 : 0, height};\n    }\n};\n","java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    \n    public boolean isBalanced(TreeNode root) {\n        return dfs(root)[0] == 1;\n    }\n\n    private int[] dfs(TreeNode root) {\n        if (root == null) {\n            return new int[]{1, 0};\n        }\n\n        int[] left = dfs(root.left);\n        int[] right = dfs(root.right);\n\n        boolean balanced = left[0] == 1 && right[0] == 1 && Math.abs(left[1] - right[1]) <= 1;\n        int height = 1 + Math.max(left[1], right[1]);\n\n        return new int[]{balanced ? 1 : 0, height};\n    }\n}\n","csharp":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\npublic class Solution {\n    \n    public bool IsBalanced(TreeNode root) {\n        return Dfs(root)[0] == 1;\n    }\n\n    private int[] Dfs(TreeNode root) {\n        if (root == null) {\n            return new int[]{1, 0};\n        }\n\n        int[] left = Dfs(root.left);\n        int[] right = Dfs(root.right);\n\n        bool balanced = left[0] == 1 && right[0] == 1 && Math.Abs(left[1] - right[1]) <= 1;\n        int height = 1 + Math.Max(left[1], right[1]);\n\n        return new int[]{balanced ? 1 : 0, height};\n    }\n}\n"},"starterCode":{"python":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nclass Solution:\n    def isBalanced(self, root: Optional[TreeNode]) -> bool:\n        ","javascript":"/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     constructor(val = 0, left = null, right = null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {TreeNode} root\n     * @return {boolean}\n     */\n    isBalanced(root) {}\n}\n","cpp":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n\nclass Solution {\npublic:\n    bool isBalanced(TreeNode* root) {\n        \n    }\n};\n","java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    public boolean isBalanced(TreeNode root) {\n        \n    }\n}\n","csharp":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\npublic class Solution {\n    public bool IsBalanced(TreeNode root) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/QfJsau0ItOY","embedding":[0.023501467,0.025001105,0.011943544,-0.00015933652,0.023672855,-0.0046676225,-0.019848777,-0.009897609,-0.020159418,0.07815255,0.010224316,0.0011428044,-0.040190294,-0.038562115,0.019998742,-0.033441924,-0.017128006,0.005944993,-0.034555938,0.037405252,0.038455,0.016603133,0.0761816,-0.03611985,0.070911445,-0.0005868002,0.03815507,0.0038776349,-0.012200625,-0.02225891,0.05158754,-0.01009042,0.018649068,0.05707193,-0.0039044141,0.022644531,0.04918812,0.014139442,0.05103053,0.005645065,-0.04503198,0.0043248483,-0.0032108317,0.015049936,-0.03783372,-0.033249114,-0.030399801,0.011482941,-0.005580795,-0.0035803854,-0.03335623,0.024122745,0.039183393,-0.010395704,-0.048159797,0.00062964705,-0.034898713,0.0151891885,-0.0012800479,0.074810505,0.03701963,-0.026307931,0.013111119,0.019323904,0.0035857412,-0.008949624,0.003941905,-0.023565738,0.014085883,-0.08595067,-0.03183517,0.01810277,-0.003952617,-0.02288019,0.04162566,0.012586246,0.058614414,0.0267364,-0.0155105395,-0.06872626,-0.014525063,0.005752182,0.04640308,0.0074874773,0.009228128,-0.022301756,-0.06067106,-0.039890368,-0.041197192,-0.069069035,-0.018809743,-0.05454397,0.05360134,0.023865664,0.041689932,-0.07652438,0.027271984,0.030678306,0.008226585,-0.016678115,-0.026693553,-0.05891434,-0.0020164773,-0.0025400117,0.023929935,0.006609118,0.05959989,0.0001983338,-0.041839894,0.031063925,-0.0067269467,-0.06726947,0.015392711,0.004828298,0.013518164,-0.05372988,-0.054886743,-0.032649256,-0.01487855,-0.023608584,0.039997485,-0.024272708,-0.04136858,-0.034791596,-0.031321008,-0.0036205542,-0.004624776,0.010186826,0.033956084,0.030978233,0.042653985,0.036355507,-0.010288587,0.021680478,-0.065469906,0.0031465616,-0.0120720845,0.010454617,-0.019591697,0.008933556,-0.0033179487,-0.004766706,-0.005053244,-0.03474875,-0.019420309,-0.013914497,-0.015435558,0.062085006,-0.063327566,0.018691914,0.03952617,-0.0001543991,0.00079132675,0.01659242,0.007219685,-0.03519864,0.01210422,0.022473143,0.049787976,-0.024829717,0.0093888035,-0.03027126,0.022708802,-0.010808104,0.026950633,0.015831891,-0.012350588,0.002024511,0.011472229,-0.035798497,0.03766233,-0.029114397,0.036162693,0.013314641,-0.0039258376,-0.00690369,-0.025365302,-0.025750924,0.0019307837,0.01948458,-0.021391261,0.01507136,-0.004263256,-0.013443182,-0.014835702,0.0040945467,0.020427208,-0.028214615,-0.017256547,0.012479129,-0.0015947041,0.020534325,0.009035318,0.028728776,0.022687377,0.002028528,0.016656691,0.015831891,-0.027314832,0.03569138,0.004185596,0.012596957,0.014460793,0.012575534,0.0066305413,-0.0015331119,-0.039590437,0.015542675,-0.000012354019,-0.043168146,0.029242937,-0.0028144987,0.0041347155,0.0019348005,0.027593335,0.030721152,0.03789799,-0.010990202,0.012950444,0.07292525,0.0017272615,0.026008004,0.03247787,0.041518543,0.025558112,0.018509815,0.023437196,-0.005280867,0.040340256,-0.014985667,0.021391261,-0.027271984,-0.0031438835,0.027443372,-0.025450995,-0.020470057,-0.020866388,-0.04237548,-0.0045230146,-0.030356955,0.016699538,0.046531618,0.03551999,-0.017042313,-0.017460069,-0.0039633284,0.010829527,0.036419775,-0.01961312,0.053687032,-0.0013483351,-0.04584607,-0.034148894,-0.027464796,-0.053944115,-0.017759996,-0.013625281,-0.023415774,0.029028703,-0.049916517,-0.029328631,-0.01487855,-0.03922624,-0.08505089,-0.022001829,-0.06465581,0.03322769,-0.017749285,-0.008612205,0.031299584,0.055786528,-0.018359851,0.025172492,-0.04610315,-0.02793611,-0.030913962,0.021980405,0.00083015667,-0.012018526,-0.07292525,-0.040147446,0.048973884,0.037983682,0.032692105,-0.009142435,-0.007294667,-0.027164867,-0.022665955,0.013925208,0.03020699,-0.035220064,-0.0058432315,0.008751458,0.009672664,-0.017995654,-0.021016352,-0.0073053786,0.0009774425,0.05000221,-0.07485335,-0.017813554,-0.012682651,-0.0012659889,0.025558112,0.042289786,-0.098719016,0.0024328947,0.048202645,-0.029992756,0.019655967,-0.021648344,0.050816298,0.013228948,0.019131094,-0.022366026,-0.021134181,0.027143445,-0.056643464,0.006250276,0.019752372,-0.012618381,0.005859299,0.026950633,0.078752406,0.008489021,0.026243662,-0.03354904,0.04269683,0.026372202,-0.021241298,-0.008815728,-0.019784508,0.06457012,0.011097319,-0.024144169,-0.010968779,0.0364412,-0.0118578505,-0.038519267,0.018199176,0.020909235,-0.041154347,0.041347157,-0.019773796,-0.026243662,-0.036933936,0.03052834,0.04213982,0.00540673,0.01513563,-0.01456791,-0.040018905,0.016753096,-0.017834978,-0.023437196,0.024058476,-0.0016763809,0.045631837,-0.030228414,0.013496741,-0.05587222,-0.011761446,-0.025065375,-0.025001105,0.013721686,0.006759082,-0.016978042,0.005112158,-0.005114836,0.030099872,0.0071286354,0.039012007,-0.0023230996,0.011697175,-0.015467693,0.017374376,0.017277969,-0.0041400716,-0.03806938,0.03267068,-0.009228128,0.043360956,-0.040747304,0.0073696487,0.004935415,0.002134306,0.03965471,0.013400335,-0.0028519898,-0.021584073,0.035220064,-0.011375824,0.027529066,0.0036473335,0.016378187,0.0053986963,0.019698814,0.027250562,0.05668631,0.015221324,0.014546487,0.054072656,-0.028664505,0.00889071,-0.018574085,-0.03164236,0.033013456,0.017834978,0.0111080315,-0.0635418,-0.010342145,0.017535051,-0.006817996,-0.0053103245,0.032734953,0.0066680326,-0.0069411807,-0.004378407,-0.027314832,0.00021490346,0.0031492393,0.010931289,-0.03260641,0.0052701556,0.03202798,-0.006994739,-0.007117924,0.016656691,0.016421035,-0.008810372,0.056043606,0.038604964,-0.026179392,-0.01601399,0.02900728,0.04106865,0.021551937,0.03592704,-0.016474593,0.011686463,-0.025172492,-0.028236037,0.0054147635,-0.017674303,-0.00064705353,0.025065375,0.0022601683,0.04451782,0.017299393,-0.021594785,0.0075945943,-0.014514351,0.008976404,-0.024272708,-0.018616932,-0.0018959707,0.06576983,0.06606976,0.0110009145,-0.0060896007,-0.01734224,0.018563373,0.006030686,-0.007932013,0.026436472,-0.014899973,0.011365112,0.018531239,0.003695536,-0.030164143,0.059000038,-0.031749476,0.021091335,-0.024958258,-0.029928487,0.02043792,0.03183517,0.025086798,-0.0010390348,-0.04149712,-0.033998933,-0.049273815,0.020448633,-0.01129013,0.033527616,-0.019580984,0.059728432,0.015489116,-0.0067376583,-0.0077713374,0.009345957,0.00019214109,0.014267983,-0.00731609,0.023244387,-0.012918308,-0.012554111,0.004445355,0.021541227,-0.026393626,0.044817746,-0.011397247,-0.044732053,0.026008004,0.015917584,-0.0595142,-0.0267364,0.028857317,-0.014653604,0.047688484,-0.0112151485,-0.017610032,0.010561734,0.014342965,-0.0036071646,-0.007358937,-0.00618065,-0.026008004,-0.01065814,-0.01129013,-0.0024061154,0.011922121,0.01280048,-0.0020097825,-0.009474497,-0.01103305,-0.001992376,0.014696451,-0.045803223,0.0014393845,0.00832299,0.00005657116,0.004900602,0.06028544,-0.005687912,0.022987306,0.014589334,0.021294856,0.0026859585,-0.0078034727,0.015242747,0.00038796433,0.006496645,-0.018927572,0.0052058855,0.0017232446,0.028343154,-0.010717055,-0.0013095052,0.005452255,0.0033956084,-0.026157968,-0.03984752,-0.030057026,-0.0143751,-0.0013583773,0.005864655,-0.041411426,0.012854039,0.030592611,-0.012843327,-0.020330803,0.023480043,0.018563373,-0.01059387,0.019827355,-0.038133647,0.0077927606,0.026157968,0.0155105395,0.041518543,0.0024007594,0.00095735805,0.003127816,0.012350588,-0.013957343,0.0053772726,-0.055915065,-0.0044292873,-0.017631456,-0.02181973,-0.035284337,-0.05090199,0.008724678,-0.046617314,0.024572637,0.012532688,0.029564288,0.01935604,-0.016474593,0.024744025,0.033141997,0.0548439,0.032627836,-0.034277435,-0.04408935,-0.03387039,-0.030099872,0.008708611,-0.010872374,0.0030421223,0.0052112415,0.032499295,0.013036137,-0.015317729,-0.0030662238,0.008494377,0.0401046,-0.006153871,0.020962793,-0.006614474,-0.021027064,0.020277245,0.0074553424,0.026436472,0.014396523,0.022558838,0.046360232,0.025815194,-0.03588419,0.012018526,0.029842792,-0.00889071,-0.011397247,-0.045374755,-0.005112158,-0.0051255478,0.042354055,0.008199805,0.005645065,-0.02761476,0.014760721,0.038005106,-0.0002533986,-0.010561734,-0.034405977,0.009967236,0.00043415854,-0.00534246,-0.0013630637,0.0025413504,-0.010224316,-0.0314067,-0.04408935,-0.033891816,0.009270975,-0.009640529,0.03318484,0.023244387,-0.003941905,-0.008724678,0.033399075,0.034277435,0.02945717,-0.016367476,0.021873288,-0.026436472,-0.04231121,-0.02478687,0.017395798,-0.012479129,-0.008339058,-0.014364388,0.029435748,-0.046531618,-0.0013751143,0.00056705053,0.023715701,0.007867742,-0.009345957,-0.0035991308,0.032199368,-0.0030099873,-0.04824549,-0.03429886,-0.013914497,0.007417851,-0.010427838,-0.011247284,0.021776883,0.021401973,0.02106991,-0.030999657,0.03770518,-0.0019053434,0.027978957,-0.010004726,-0.01689235,-0.0062342086,-0.017192276,-0.0003785916,0.006218141,-0.044903442,-0.015499828,-0.016217511,0.01671025,-0.010647428,0.038690656,0.034577362,-0.082651466,-0.01936675,0.0033929306,-0.0038187206,0.00070630264,-0.02585804,-0.0018075991,0.018370563,0.058700107,0.016131818,0.002063341,0.0047533163,-0.0027877195,0.040618762,0.01992376,-0.005238021,-0.010958068,0.03299203,0.03532718,0.014642892,-0.032777797,-0.0534728,0.013689551,0.015842602,0.035991307,0.03549857,0.017331528,-0.016174665,-0.012114931,-0.02926436,0.012586246,-0.03436313,-0.00490328,-0.013057561,0.016635269,-0.009501277,0.026629282,-0.02283734,0.046445925,0.00012218031,-0.011782869,0.00085091055,0.015542675,0.014792856,-0.024229862,-0.0074124956,0.0087461015,-0.028021803,0.038883466,-0.043832272,0.08997827,-0.00068822666,0.004442677,-0.0037169594,-0.0447749,0.018274158,0.0051228697,-0.014385811,0.00039298544,0.0038535336,-0.009940457,-0.03984752,-0.0014889261,-0.027529066,-0.016431745,0.01645317,-0.0012264895,-0.030164143,-0.021027064,0.009994015,0.013378912,-0.00362591,-0.023244387,0.056729157,-0.011140167,0.031899437,0.028364578,0.0031760186,-0.02913582,-0.0017312783,-0.04773133,-0.0023230996,0.012061372,0.024144169,0.0023271164,0.017202988,0.01393592,0.023030153,0.027893264,-0.022280334,-0.021659054,-0.04130431,-0.0344274,-0.021177027,-0.0065180687,0.006014619,0.023972781,-0.022173217,0.0005017761,-0.008885354,-0.039676134,-0.024015628,0.008140891,0.02390851,0.012971867,-0.020855676,0.043746576,-0.018756185,-0.06465581,0.004488202,-0.0057146912,-0.017417222,0.03682682,-0.0102510955,0.022451721,-0.015489116,-0.009142435,-0.040126022,-0.030057026,0.015596233,0.020673579,0.020330803,0.0046381657,0.016978042,0.018188464,-0.038283613,0.011354401,0.009704799,0.0011434738,0.0028332444,0.015606945,0.038369305,0.0053558494,0.00079132675,0.040940113,-0.015906872,0.008414039,0.04558899,-0.022194639,0.012468417,0.01935604,-0.015317729,0.012029238,-0.012629093,-0.048116952,0.01160077,0.006587695,0.04875965,0.00093325676,-0.026136545,-0.052830096,-0.017427934,-0.0028814469,0.0046087084,-0.014728585,-0.040790148,0.032435022,0.010154691,0.007974859,-0.013710975,-0.018006366,0.046531618,-0.0069197575,0.0030421223,-0.0030287327,0.0054843896,-0.020159418,-0.01790996,-0.013314641,0.0022722192,0.022108946,0.013143254,-0.01607826,0.0028921587,-0.01059387,-0.0062127854,-0.0061270916,-0.020844966,0.004592641,-0.0023726413,0.0022842698,0.034277435,0.005157683,0.038562115,0.00002910151,-0.0027770079,-0.042075552,0.007744558,0.009276331,0.035455722,-0.0015679249,0.015232036,0.028643083,0.016346052,-0.0038562114,-0.012264895,0.0069518923,0.009287043,-0.014010902,0.01103305,-0.014235848,-0.016003277,-0.001634873,0.02598658,-0.021926846,0.017053025,-0.03611985,-0.001707177,0.019698814,-0.022451721,-0.01087773,-0.013818092,-0.014342965,-0.03449167,0.040618762,0.016099684,-0.0021624241,-0.0034223876,0.020630732,-0.0118578505,0.017438645,-0.0018250056,-0.011332978,-0.02162692,-0.001668347,-0.040447373,-0.030228414,-0.034705903,0.04824549,0.00008498227,-0.012811191,0.006962604,-0.010968779,0.00021557293,0.00029942545,-0.0056986236,0.02900728,-0.011043761,-0.04104723,0.0041373936,-0.0370839,-0.014707162,-0.04381085,-0.021744749,-0.033013456,-0.015317729,-0.0061431592,-0.0020137993,-0.049745128,0.03714817,0.010379636,0.060885295,-0.009453074,0.025065375,-0.0037169594,0.008601494,-0.028771622,0.006014619,-0.023030153,0.033484768,0.033891816,-0.0023659465,-0.035862766,0.006887622,0.032970607,0.037790872,0.037490945,0.021230586,-0.016603133,-0.025558112,-0.011525787,-0.004300747,0.00053993653,-0.0115364995,-0.0091103,0.022301756,-0.027036328,-0.00605211,0.0057468265,-0.004089191,0.018627644,0.0031706628,0.029114397,-0.047131475,-0.006866199,0.031106774,0.01273621,-0.021219876,-0.02452979,-0.014417946,0.03335623,-0.0027609402,0.045289062,0.06328472,-0.011868563,0.0257295,0.043275263,-0.015521252,0.022794494,-0.017277969,-0.018274158,-0.020030877,-0.018724049,0.013507452,0.028236037,0.0010905848,-0.024444096,0.024422674,0.0029885639,0.014107307,-0.020480767,-0.029585712,-0.023994206,0.018606221,0.04640308,-0.030485494,0.0022119659,0.028578812,-0.011611481,-0.0063199024,-0.0055540157,-0.002734161,0.013153966,0.040018905,0.053429954,0.02011657,0.017128006,0.020266535,-0.011900697,-0.005189818,0.013550299,0.02339435,-0.012329165,0.016881637,-0.0035268269,0.006866199,0.009672664,0.011022338,-0.017685015,-0.016699538,0.009228128,-0.018948995,-0.026757823,-0.04143285,0.016228223,-0.036162693,-0.0037812297,-0.0053076465,-0.026329355,0.012907597,0.038819198,-0.0027903975,0.019998742,-0.015414135,-0.028707352,0.001634873,0.0015143664,0.028921586,0.019431021,0.015381999,0.009565547,-0.029799946,-0.04288964,0.006994739,0.013153966,0.01292902,0.0029671406,0.010524244,-0.020030877,-0.007830252,-0.08427964,0.021048488,-0.006544848,-0.02390851,0.0010048912,-0.018381275,-0.05694339,-0.040982958,-0.023265809,-0.03532718,0.023758547,0.046874393,-0.011397247,-0.009699443,0.015778333,-0.016313918,-0.00074513257,0.038305033,-0.0049568387,0.0068715545,-0.0011361096,0.03228506,0.038562115,-0.007605306,0.008719322,0.01865978,-0.0013751143,-0.01696733,0.0055700834,0.009544124,0.0026765857,-0.000532907,0.0071661263,-0.012243471,-0.041325733,-0.04106865,-0.046874393,-0.007010807,0.036419775,0.013700263,-0.02440125,0.032499295,0.01160077,-0.014021614,0.015628368,-0.018349139,-0.00075919164,0.008124824,0.014300117,-0.0073696487,-0.022430297,0.03412747,-0.0006728286,0.03575565,0.044046506,-0.052830096,-0.0018410732,0.03695536,-0.03164236,0.007417851,0.040468797,-0.010824172,-0.016292494,-0.027721876,0.017770708,-0.022794494,-0.011889986,0.0089603355,-0.021380551,0.005449577,-0.0009727561,0.032584988,-0.017320817,-0.004616742,0.015756909,0.028107498,0.0073375134,0.008162314,0.05133046,0.001954885,-0.028107498,0.022044675,0.028086074,-0.010486753,-0.014010902,-0.02333008,0.03082827,-0.0035964528,-0.043146722,-0.01829558,0.0042846794,-0.02635078,-0.005516525,-0.009624462,0.0009473158,0.012639805,-0.041539967,0.002131628,0.021958983,0.022751648,-0.004405186,-0.0028894807,-0.026222238,-0.006796573,-0.016088972,0.008456886,0.015949719,0.0074874773,0.02062002,0.0015746197,0.026307931,0.009554835,0.011504364,-0.01639961,-0.053130027,-0.007144703,0.008371192,0.008156959,-0.01005293,0.03896916,-0.030485494,0.0154034225,0.008922845,-0.012511264,-0.017385086,-0.0020807474,0.000978112,0.002598926,0.014214424,0.011054473,-0.0031706628,-0.012725498,0.0019468513,-0.015724774,0.047774177,-0.0172137,0.019066824,0.0077713374,-0.0024007594,-0.010936644,-0.01992376,0.013785956,0.025815194,-0.009860119,-0.008478309,-0.00895498,-0.018488392,0.028535966,-0.00936738,-0.019441733,0.013925208,-0.029178668,-0.005800385,0.015660504,0.018402698,-0.0017125328,0.016324628,0.022794494,-0.0029564288,0.017995654,-0.008558647,0.0044132196,-0.04408935,-0.0067697936,-0.009324534,-0.0017580575,-0.027764723,-0.013078984,0.003272424,0.07163984,0.0067430143,0.007717779,-0.009062097,-0.011472229,-0.01179358,0.0121792015,-0.0074874773,0.012639805,0.017749285,-0.010524244,-0.045803223,0.013453893,-0.012896885,0.0069840276,0.007401784,-0.0049247034,-0.02283734,-0.011193725,-0.007840963,0.013336065,-0.006389528,0.0054227975,0.005401374,0.037126746,0.00021088657,0.037555214,-0.006710879,0.021080622,0.01343247,-0.014428658,-0.012532688,-0.015157053,-0.014985667,0.022644531,0.005259444,0.055058133,0.02358716,-0.028407425,0.032949187,-0.01330393,0.0072303964,0.00082881766,0.0014179611,0.027978957,0.008360481,0.012007814,-0.03196371,0.036869667,-0.01406446,0.0054415427,0.014203712,-0.00014100947,-0.0027355,0.016817367,0.02819319,0.04040453,0.029928487,0.031578086,0.022023253,-0.010588514,-0.01867049,-0.016163953,0.015992567,-0.07545321,0.024829717,-0.0085318675,-0.014696451,-0.039183393,0.004156139,0.031985134,0.039633285,-0.016806655,0.021958983,-0.00037424,0.02452979,0.021958983,-0.0007364293,0.003808009,-0.0015357898,-0.008987115,0.014118019,-0.005366561,-0.0016174664,-0.016720962,0.017481493,-0.049916517,0.011268707,0.008435463,0.012618381,0.018306293,-0.008360481,-0.031749476,-0.025879463,-0.008949624,0.018766897,-0.0025159102,-0.012018526,0.019602409,0.04381085,-0.007466054,0.03444882,-0.01500709,-0.04136858,0.026779247,-0.012479129,0.011011627,-0.023094423,0.02213037,0.07001166,-0.029735675,-0.015799755,0.016185377,-0.0035080812,0.002629722,0.016110394,0.012200625,0.028021803,-0.005436187,0.007899878,-0.010824172,-0.011118744,-0.012961156,0.013207524,0.016678115,-0.0056129303,-0.007990927,-0.010267163,0.0014072494,0.028321732,-0.012168489,-0.00010653119,-0.011311553,-0.030228414,-0.029242937,-0.011697175,-0.03556284,-0.021669766,-0.020287957,0.03429886,-0.007294667,0.010963423,0.014867838,0.018756185,-0.017610032,0.007840963,0.013946632,0.02547242,-0.0046408433,0.013828803,0.011129455,-0.019152516,0.01797423,-0.0040383106,-0.016849501,0.00015465014,0.002918938,-0.03309915,0.020266535,0.021551937,-0.020909235,-0.008071265,-0.014278694,0.048288338,-0.009560191,0.0020030877,-0.0052433764,0.009908321,0.015810467,0.025900887,0.033056304,-0.00087233394,0.028364578,0.015028513,-0.013678839,0.008414039,0.0016027379,0.000019645087,-0.0052112415,-0.0052085635,-0.006507357,0.00021640978,-0.00794808,-0.0010035522,0.020352228,-0.029435748,0.02390851,-0.037405252,-0.03164236,0.026993481,-0.0121792015,-0.06405596,-0.004766706,-0.008622917,0.017106583,-0.011354401,0.01463218,0.028086074,-0.010293942,0.022237487,0.0056718444,0.046188846,0.011557923,-0.007107212,-0.039119124,-0.006689456,0.02288019,-0.016474593,0.012307742,-0.046960086,0.016431745,0.026907787,-0.014096595,0.0101439785,-0.028707352,0.012018526,0.046960086,0.023072999,-0.014021614,-0.021005642,-0.0039874297,0.0009841373,-0.0016670082,0.005050566,0.049916517,-0.006823352,0.009683375,-0.02131628,-0.005216597,0.020266535,0.0030608678,0.0084247505,0.008349769,0.004153461,0.010583159,-0.0050987685,0.020470057,-0.016131818,0.008767526,-0.007964148,-0.014289406,0.042718254,0.01917394,0.013100407,0.015167765,0.028728776,0.004482846,0.03309915,0.0055058133,-0.008446175,-0.0063466816,-0.0030474782,-0.018574085,0.015157053,-0.0013476656,0.0027743299,-0.011440095,0.007680288,0.06328472,0.00987083,0.051373307,-0.009270975,-0.035284337,0.01841341,-0.021284144,0.017267259,-0.003307237,-0.031942286,0.0065341364,-0.008906777,0.020502191,0.02339435,-0.011086608,-0.019163229,0.0070482977,-0.005682556,0.014535775,0.0021182385,-0.029585712,0.0370839,0.023115845,0.044046506,-0.012350588,-0.0005262122,0.011718598,-0.00087635085,0.041604236,0.037448097,0.037212443,0.0053826286,0.012629093,0.025943734,-0.039440475,-0.025686653,0.045460448,0.026950633,0.022601685,-0.01273621]},{"id":"binary-tree-right-side-view","name":"Binary Tree Right Side View","description":"You are given the `root` of a binary tree. Return only the values of the nodes that are visible from the right side of the tree, ordered from top to bottom.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/d348893a-8917-456c-9599-c405cfc4e000/public)\n\n```java\nInput: root = [1,2,3]\n\nOutput: [1,3]\n```\n\n**Example 2:**\n\n```java\nInput: root = [1,2,3,4,5,6,7]\n\nOutput: [1,3,7]\n```\n\n**Constraints:**\n* `1 <= number of nodes in the tree <= 100`\n* `-100 <= Node.val <= 100`\n","difficulty":"Medium","concepts":["Breadth-First Search"],"solutions":{"python":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nclass Solution:\n    def rightSideView(self, root: Optional[TreeNode]) -> List[int]:\n        res = []\n        q = deque([root])\n\n        while q:\n            rightSide = None\n            qLen = len(q)\n\n            for i in range(qLen):\n                node = q.popleft()\n                if node:\n                    rightSide = node\n                    q.append(node.left)\n                    q.append(node.right)\n            if rightSide:\n                res.append(rightSide.val)\n        return res\n","javascript":"/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     constructor(val = 0, left = null, right = null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {TreeNode} root\n     * @return {number[]}\n     */\n    rightSideView(root) {\n        const res = [];\n        const q = [];\n\n        q.push(root);\n\n        while (q.length > 0) {\n            let rightSide = null;\n            const qLen = q.length;\n\n            for (let i = 0; i < qLen; i++) {\n                const node = q.shift();\n                if (node) {\n                    rightSide = node;\n                    q.push(node.left);\n                    q.push(node.right);\n                }\n            }\n            if (rightSide) {\n                res.push(rightSide.val);\n            }\n        }\n        return res;\n    }\n}\n","cpp":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n\nclass Solution {\npublic:\n    vector<int> rightSideView(TreeNode* root) {\n        vector<int> res;\n        queue<TreeNode*> q;\n        q.push(root);\n\n        while (!q.empty()) {\n            TreeNode* rightSide = nullptr;\n            int qLen = q.size();\n\n            for (int i = 0; i < qLen; i++) {\n                TreeNode* node = q.front();\n                q.pop();\n                if (node) {\n                    rightSide = node;\n                    q.push(node->left);\n                    q.push(node->right);\n                }\n            }\n            if (rightSide) {\n                res.push_back(rightSide->val);\n            }\n        }\n        return res;\n    }\n};\n","java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    public List<Integer> rightSideView(TreeNode root) {\n        List<Integer> res = new ArrayList<>();\n        Queue<TreeNode> q = new LinkedList<>();\n        q.offer(root);\n\n        while (!q.isEmpty()) {\n            TreeNode rightSide = null;\n            int qLen = q.size();\n\n            for (int i = 0; i < qLen; i++) {\n                TreeNode node = q.poll();\n                if (node != null) {\n                    rightSide = node;\n                    q.offer(node.left);\n                    q.offer(node.right);\n                }\n            }\n            if (rightSide != null) {\n                res.add(rightSide.val);\n            }\n        }\n        return res;\n    }\n}\n","csharp":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\npublic class Solution {\n    public List<int> RightSideView(TreeNode root) {\n        List<int> res = new List<int>();\n        Queue<TreeNode> q = new Queue<TreeNode>();\n        q.Enqueue(root);\n\n        while (q.Count > 0) {\n            TreeNode rightSide = null;\n            int qLen = q.Count;\n\n            for (int i = 0; i < qLen; i++) {\n                TreeNode node = q.Dequeue();\n                if (node != null) {\n                    rightSide = node;\n                    q.Enqueue(node.left);\n                    q.Enqueue(node.right);\n                }\n            }\n            if (rightSide != null) {\n                res.Add(rightSide.val);\n            }\n        }\n        return res;\n    }\n}\n"},"starterCode":{"python":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nclass Solution:\n    def rightSideView(self, root: Optional[TreeNode]) -> List[int]:\n        ","javascript":"/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     constructor(val = 0, left = null, right = null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {TreeNode} root\n     * @return {number[]}\n     */\n    rightSideView(root) {}\n}\n","cpp":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n\nclass Solution {\npublic:\n    vector<int> rightSideView(TreeNode* root) {\n        \n    }\n};\n","java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    public List<Integer> rightSideView(TreeNode root) {\n        \n    }\n}\n","csharp":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\npublic class Solution {\n    public List<int> RightSideView(TreeNode root) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/d4zLyf32e3I","embedding":[0.021942372,0.010472495,0.022065759,-0.0051719835,-0.006704042,0.017119985,-0.029551253,-0.010888928,-0.042486355,0.0766235,0.021880677,0.003909834,-0.021777855,-0.060542025,-0.0061076703,0.0021592774,0.03284158,-0.0010674285,0.0028224841,0.07251059,0.047545232,-0.0109403385,0.087687224,-0.047915395,0.049642816,0.024389552,0.01099175,0.019608295,0.0014523711,-0.030764561,0.031360935,-0.0048275273,-0.024862537,0.06810978,-0.0084109,0.010215439,0.051164594,0.0061950698,0.014333489,0.04631136,-0.025664555,0.035473842,-0.00030107782,0.019865353,0.005341641,-0.030558916,-0.0540025,0.016811516,-0.01569075,-0.0021901242,-0.021387128,0.016718976,0.024081085,0.0050485963,-0.061076704,-0.048367813,-0.048203297,-0.0002123932,-0.0024086225,0.04775088,0.04618797,-0.022559308,0.027330283,0.04581781,0.038825866,0.010909492,0.022579873,-0.00280449,-0.000034803084,-0.07744608,-0.037735943,0.0011439029,-0.001212023,-0.013922198,0.058115408,0.0151972,0.04219845,0.04807991,-0.001954917,-0.06379122,0.002614268,-0.0019317821,0.045529906,0.0043468312,-0.010107474,0.003943252,-0.043967,-0.041848853,-0.023628663,-0.06243396,-0.015320587,-0.03894925,0.03477465,-0.0131818745,0.004668152,-0.0058403313,0.0037144711,0.018662326,0.005876319,0.0043725367,-0.03405489,-0.07353882,0.014950425,-0.0022672412,0.027145201,0.023176244,0.047833137,0.015546797,-0.06625897,0.009696184,0.012153647,-0.06671139,0.019659707,0.0053930525,0.03876417,-0.052892014,-0.052892014,-0.022127451,0.035494406,0.012678043,0.02994198,-0.037036747,-0.028687542,-0.024307294,-0.04110853,-0.007835092,-0.0031463755,-0.02387544,0.03446618,0.01859035,0.04758636,0.009721889,-0.025397215,0.016503049,-0.041458126,0.000110695095,-0.001768551,0.022086322,0.0026631088,0.01904277,-0.029818593,-0.007979044,-0.015577644,-0.0160095,0.008179548,0.015063531,-0.040018607,0.045529906,-0.037756506,0.021921806,0.053714596,-0.0077836807,-0.0008739932,-0.000009905725,-0.009007271,-0.014827038,0.017191961,0.012770584,0.032718193,-0.021325435,-0.012863124,-0.055112984,0.027803266,0.017839745,-0.00904326,0.020924427,-0.012564938,0.023135114,-0.0010770682,-0.047051683,0.034856908,-0.023998827,0.04709281,0.004138615,0.018477244,-0.0064109974,-0.0094853975,0.0036990477,-0.0069353934,0.0062978924,-0.049683943,0.02157221,-0.020029869,-0.018754866,0.019515755,0.007639729,0.009444268,-0.040100865,-0.027309718,-0.003269763,-0.0006979093,0.051123463,0.024985924,0.038250055,-0.014302642,0.0090895295,-0.005087155,-0.003388009,0.007984186,0.030312141,0.026651653,0.041355304,-0.010899209,0.0026065563,0.0073261196,-0.009953241,-0.0371807,0.015947806,0.0063493038,-0.0575396,0.037962154,0.004573041,0.005902025,-0.011742356,0.008431464,0.036604892,0.034157712,-0.006637207,-0.005215683,0.049272653,0.0013084193,0.028461333,0.055442017,0.031628273,0.04487184,0.04139643,-0.009326022,-0.00899699,0.02375205,-0.021860113,0.012678043,-0.011505864,0.0031180994,0.007526624,-0.01004064,-0.029427866,-0.02270326,-0.043967,-0.051041204,-0.018117366,0.021510515,0.01270889,0.0024626045,-0.009423704,0.0055781333,-0.03785933,-0.0038481408,0.018302446,-0.029016575,0.027350847,0.025726248,-0.022045193,-0.024841972,-0.02794722,-0.017191961,-0.015896395,0.006318457,0.009850418,0.02700125,-0.04355571,-0.012009695,-0.029386736,-0.04585894,-0.07251059,-0.011433888,-0.055236373,0.058650088,0.010847799,-0.018672608,-0.014261513,0.045941196,-0.048902493,0.026528265,-0.02375205,-0.018652044,-0.013130463,0.02953069,-0.008009891,-0.005002326,-0.046846036,-0.009840135,0.06597107,0.030024238,0.03532989,-0.015978653,0.021078661,-0.026034717,-0.020543981,0.011567557,0.023525842,-0.020965556,0.004130903,-0.013572601,-0.045529906,-0.033191178,-0.014045585,0.036892798,0.0158347,0.025664555,-0.08032512,-0.039010946,-0.041046835,-0.01808652,-0.008559993,0.0017389895,-0.0899082,0.009027836,0.033684727,-0.016790953,0.020369183,-0.0316694,0.022764953,0.012832277,0.017829461,-0.004364825,-0.055195242,0.01781918,-0.06041864,0.018065954,0.015022402,0.026240362,0.01678067,0.004539624,0.07061865,0.042445224,0.017798616,-0.05856783,0.058279924,0.05408476,-0.027330283,0.005056308,-0.026713345,0.009079248,0.02646657,-0.013953045,-0.016533896,0.011516146,0.006292751,-0.038291186,0.043967,0.017222809,-0.02858472,0.047997653,-0.042054497,-0.03288271,-0.045529906,0.0048737978,0.053385563,0.0072387205,0.009490538,-0.026219796,-0.036255296,0.028461333,-0.018209906,-0.010009793,0.048326686,-0.03257424,0.026795603,0.008894166,0.033972632,-0.06255735,-0.04211619,-0.025705684,-0.009968664,0.029366173,0.011588122,-0.015361716,0.0070227925,0.007927633,0.023690358,0.023896003,0.02926335,-0.020256078,-0.0014138126,-0.0051488485,-0.0085188635,-0.0063493038,0.019484907,-0.016749823,0.010066345,-0.064613804,0.005241389,-0.018580068,0.03121698,0.000949825,-0.013336108,0.019690553,0.007927633,-0.015156071,0.0042260145,0.010570177,-0.022538744,0.042280708,0.00646755,0.019114746,0.0011573983,0.023484712,0.016893774,0.037036747,0.03352021,0.013264133,0.021366565,-0.0125238085,-0.006318457,-0.017048009,-0.01885769,0.039607316,0.032368597,0.019340957,-0.07312753,-0.0072849905,-0.008981566,-0.0017801186,-0.020543981,-0.028728671,-0.0032029282,-0.0069919457,-0.016976032,-0.0018392416,0.023834309,0.00854971,0.006128235,-0.016585307,0.009865841,0.028996011,0.023649229,0.013634294,0.034342792,0.054537177,-0.0045190593,0.035124246,0.044625066,-0.016215146,-0.015084095,0.023052856,0.019484907,0.02763875,0.050629914,-0.006359586,-0.012359292,-0.040594414,0.0015603349,0.024944795,-0.010390237,0.028379075,-0.00158347,0.036419813,0.039237157,0.01787059,-0.02564399,0.01655446,0.04098514,-0.013778246,-0.021448823,-0.0071975915,-0.0053981934,0.024533505,0.037324652,-0.0013354103,0.008246384,-0.04314442,0.024841972,-0.0013148458,0.026158104,0.0035396726,-0.022394791,0.00940828,-0.0068274294,0.0064109974,-0.069508165,0.028235123,-0.0065600905,0.00814356,0.007470072,-0.026960121,0.024348423,0.010683282,0.010302838,-0.0265077,-0.02673391,-0.019412933,-0.020698216,0.002379061,0.00026075201,0.02171616,-0.03251255,0.035227068,-0.011762921,-0.011433888,0.0017479864,-0.023402454,0.008981566,0.012914536,-0.0057837786,0.0575396,0.00800475,-0.005871178,-0.02564399,-0.009480256,-0.018682892,0.0017017162,0.02175729,-0.0077271285,0.005747791,-0.0054496047,-0.085384,-0.036131907,0.045694422,0.014631675,0.06350332,-0.011022597,-0.023423018,0.019875634,0.012626631,-0.011197396,0.007043357,-0.03695449,-0.049601685,0.00087013736,-0.0031515167,0.0039046933,-0.014354054,0.057087183,0.012451833,-0.0015282029,-0.02609641,0.0071153333,0.0031232405,-0.03609078,-0.017757487,0.013408084,-0.013726835,0.0032543396,0.057087183,-0.008770779,0.0080767255,0.0053930525,0.022826647,0.031237546,-0.01623571,0.018323012,0.0055781333,-0.00015302915,-0.02700125,-0.024183907,0.016431073,0.008482875,-0.025109312,-0.0047786864,0.0067863003,-0.012420986,-0.05079443,-0.014991554,-0.038928688,-0.025047617,-0.00890959,0.0034060031,-0.004948344,0.020235514,0.007290132,0.005061449,-0.008045879,-0.0016747252,-0.0041051977,0.0023726346,0.0005192548,-0.0044676475,-0.006961099,0.03596739,0.0180968,0.064983964,-0.02805004,0.005845472,-0.011978849,0.03872304,-0.0050280318,0.00854971,-0.048737977,-0.021489952,0.0019459202,-0.012636914,-0.005526722,-0.055030726,0.027864961,0.02034862,0.01564962,0.028193993,0.027309718,0.051575884,-0.027577057,0.020883298,0.021243177,0.028605284,0.03537102,-0.04047103,-0.01781918,-0.013192156,-0.015639337,-0.011022597,-0.013881069,-0.00886332,0.0139324805,0.014929861,0.04193111,-0.0027068085,-0.0051488485,0.025273828,0.015916958,-0.020379465,0.015474821,0.0038738465,-0.028111735,0.01085808,0.025623426,0.01574216,0.025088746,-0.004686146,0.03156658,0.056264598,0.0019459202,0.028996011,0.004040933,0.032348033,0.025109312,0.013716552,0.013901633,-0.010328543,0.02541778,-0.0017749774,-0.012050824,-0.042362966,0.047915395,0.009428845,0.021695597,-0.01352119,-0.034754083,-0.0076705758,-0.0248831,0.002709379,0.0030743997,0.019258698,0.0052696653,-0.035658922,-0.033170614,-0.03804441,0.0021811272,0.019320391,0.042897645,-0.0027839255,-0.02004015,-0.00515656,0.02130487,0.043350063,0.018107083,-0.011104855,0.023813745,-0.024985924,-0.045077488,0.007999608,0.015659902,-0.01451857,-0.024039956,0.006066541,0.019022206,-0.025685119,0.002551289,0.016575025,0.02628149,0.0031746519,-0.05437266,-0.0050948663,0.014004456,0.030929077,-0.04306216,-0.016071193,0.007290132,0.013284697,-0.008775921,-0.016297404,-0.010107474,0.009212917,0.016626436,-0.029921416,0.043308936,0.011588122,0.014282078,-0.01655446,-0.013716552,-0.030044803,-0.020389749,0.00015254716,-0.0070073693,-0.017767768,-0.020934708,-0.031093594,0.0065292437,0.0030769703,0.038270622,0.033849243,-0.052974273,-0.0126986075,-0.001030798,-0.002971577,-0.01823047,-0.014312925,0.0017582687,-0.011372195,0.05252185,0.03125811,-0.028420204,0.010601024,0.0068685585,0.0052311067,0.01135163,-0.02700125,-0.000024058912,0.0086936625,0.027371412,0.025561731,-0.018508092,-0.061940413,0.008961001,0.01623571,0.025664555,0.014755062,0.0072284383,0.0003508826,0.009978946,-0.009649914,-0.018713737,-0.026404878,0.006770877,0.020862732,0.014076432,-0.034589566,0.025705684,-0.06893236,0.05445492,0.0019639141,-0.0034934024,0.0030769703,-0.006482973,0.008837614,-0.010189733,-0.011834896,0.018415552,-0.02515044,0.0010076627,-0.03997748,0.050054107,0.013223004,0.0031078171,-0.01216393,-0.040244818,0.019104464,0.015474821,-0.012965946,-0.020112127,0.007295273,-0.011793767,-0.039052073,-0.0073672486,0.011002032,-0.020317772,0.004645017,0.012564938,-0.001420239,-0.0082515245,0.030127062,0.041643206,-0.007855657,-0.015063531,0.04935491,-0.02329963,-0.00026685713,-0.013109898,-0.006817147,-0.0073672486,-0.028666979,-0.022271404,-0.0038224352,0.021366565,0.040512156,-0.0109403385,0.03261537,-0.0051796953,0.01727422,0.020873014,-0.008020173,-0.031833917,-0.011372195,-0.049642816,-0.031463757,0.004740128,0.03292384,-0.021777855,-0.015680468,-0.016832082,-0.0030435529,-0.04400813,-0.037982717,0.026980685,-0.0026656794,-0.010009793,-0.032039564,0.041273046,0.00054014067,-0.03121698,-0.022045193,0.006056259,-0.035350457,0.042280708,-0.020605676,0.0144157475,0.015042966,0.032450855,-0.045324262,-0.027433105,0.009490538,0.03913433,0.02519157,0.010508483,0.0051180017,-0.0014150979,-0.026918992,0.006385292,0.007937915,-0.032553677,0.0029278772,-0.01026685,0.05350895,-0.0042645726,-0.03220408,0.025993587,-0.007963621,0.0070999097,0.042527482,-0.0029921415,-0.032964967,0.021325435,-0.022970598,-0.018847408,0.0029433006,-0.06975494,-0.03378755,0.03282102,0.029181091,0.0011985275,-0.011135702,-0.07115333,-0.016297404,0.0013405514,-0.004711852,0.026589958,-0.032862145,0.03884643,0.010518766,0.011012315,-0.0021271452,-0.016718976,0.026857298,-0.017109703,0.0075060595,0.0037067595,-0.008837614,-0.020862732,0.005174554,0.0009729601,0.0073261196,0.009536808,0.019443778,0.00094404124,-0.010621589,0.05346782,-0.00041482545,-0.015618773,-0.051781528,-0.007886504,0.0027710726,-0.0011503294,0.014467158,0.0011933864,0.013459496,0.008133278,0.025973022,-0.03160771,0.035844006,0.017623816,0.01216393,-0.010673,0.012791148,-0.0043442603,-0.0026206945,-0.013305262,-0.03243029,0.007793963,0.0030795408,0.00529023,0.025171004,-0.0038635642,-0.024759714,-0.026425442,0.04121135,0.008642251,0.011917154,-0.027659316,0.00069855194,-0.024595197,-0.006621784,-0.016132887,-0.017428454,-0.024039956,-0.018055672,0.06362671,0.03016819,0.020142974,0.0031412344,0.023916569,-0.025397215,0.030538352,-0.000011627805,-0.024389552,-0.029181091,0.0009575367,-0.033952065,-0.0066063604,-0.04302103,0.0078145275,0.018333293,-0.011413324,0.016091758,0.009315739,0.019999022,-0.013438932,-0.005025461,0.023896003,-0.016667565,-0.03454844,0.019227851,-0.016163733,-0.012379857,-0.022867776,-0.027659316,-0.03374642,-0.0017968273,0.017438736,-0.001926641,-0.021654468,0.02432786,0.011618969,0.013572601,0.010714129,0.031936742,-0.003388009,-0.022764953,-0.037324652,-0.010601024,-0.033170614,0.04894362,0.016317967,-0.0073826723,-0.0042183027,0.010744976,0.017346196,0.025027053,0.0017826891,0.006400715,0.0032671923,0.038064975,-0.027782703,-0.0020834457,-0.0020371755,0.0072798496,0.011629251,0.035103682,0.008853037,-0.024985924,-0.029098833,0.008796485,0.017788332,0.010744976,0.04314442,-0.05256298,-0.033972632,0.007675717,0.007984186,-0.010755258,-0.024636326,-0.024533505,0.005418758,-0.0075060595,0.06922027,0.06605332,-0.008858179,-0.003776165,0.031340368,-0.02963351,0.053262174,-0.014199819,-0.016060911,-0.02270326,-0.036152475,-0.01560849,0.013068769,0.0011085576,-0.0059637185,0.018867971,0.028255686,0.007793963,-0.009464833,-0.025171004,-0.029304478,0.018631479,0.039710138,-0.005819767,-0.00080137467,0.033088356,-0.012688326,-0.014580264,-0.043761354,0.034712955,-0.0048789387,0.014199819,0.07090656,-0.00932088,-0.023505276,0.011762921,0.00782481,-0.012040542,0.0036630598,-0.018024825,-0.023957698,0.032368597,-0.02469802,-0.01189659,-0.006431562,0.014364336,-0.026795603,-0.014888732,0.0030281295,-0.030702868,-0.019289544,-0.02375205,0.04404926,-0.049725074,-0.018939948,0.013562319,-0.024656892,-0.0058814604,0.041334737,0.009716748,-0.0052362476,-0.025787942,-0.019423215,0.0030589763,0.00089198723,0.0352682,-0.010816951,0.009372292,0.02387544,-0.044666193,-0.016348815,-0.005331359,0.026219796,0.011999413,0.038208928,0.023649229,-0.029181091,-0.00094468385,-0.05815654,0.024430681,0.010194874,-0.033479083,-0.000031127976,-0.022621002,-0.017305067,-0.036707714,-0.019094182,-0.042054497,0.0056449682,0.03483634,-0.03175166,-0.017469583,0.018209906,-0.018754866,-0.007680858,0.033684727,0.0061025294,-0.008061302,-0.01008691,0.030990772,0.026075846,-0.017500428,0.0036630598,-0.0045344825,0.006277328,-0.02809117,0.014004456,0.004889221,-0.0066731954,-0.012780866,0.017808897,-0.005053737,-0.04943717,-0.017171396,-0.018610915,-0.009721889,0.017407889,0.026589958,-0.016667565,0.028214557,0.0017274219,-0.033129483,0.009444268,-0.027864961,-0.010827234,0.001994761,-0.030044803,-0.020112127,-0.015114942,0.023093985,0.010652435,0.017253654,0.016451638,-0.023484712,-0.01244155,0.014096997,-0.008462311,0.0144157475,0.025129875,-0.01859035,0.0027607903,-0.05161701,0.015084095,-0.029839158,0.0028918893,-0.023957698,-0.0010841372,0.00651382,0.020873014,0.007495777,0.018837124,0.009331163,-0.005372488,0.044213776,0.00782481,0.01605063,0.03989522,-0.0011978848,-0.02990085,-0.003953534,0.02990085,0.0010725696,0.006930252,-0.0046347347,0.008904449,-0.017130267,-0.03315005,-0.02492423,0.008847896,-0.01397361,0.017243372,-0.022106888,0.0047658337,0.0006500325,-0.014929861,-0.0041925968,0.012359292,0.028687542,-0.002989571,-0.0049046446,-0.019700836,0.011176831,-0.018107083,0.023032293,0.037653685,0.013983891,0.01823047,-0.011341347,0.027268589,0.0080767255,0.00024484663,-0.016533896,0.007881363,0.00334688,0.0048275273,0.00063846493,-0.019495191,0.023690358,-0.0026027004,0.03722183,0.026816169,-0.01723309,-0.038908124,0.0066166427,-0.017263938,0.0013077767,-0.027844395,0.022662131,-0.0038070118,-0.010549612,-0.018981077,-0.046023455,0.041231915,-0.023073422,0.020214949,0.0042003086,-0.04117022,-0.011618969,-0.029859722,0.04182829,0.04577668,-0.051946044,-0.023258502,-0.0030332706,-0.009038119,-0.028029477,0.011701227,-0.021325435,0.0054496047,-0.014076432,-0.02805004,0.0040640687,-0.027268589,-0.0074597895,0.0024960218,0.03596739,0.0015577644,0.0032851864,0.011495582,-0.0095727965,-0.032491982,-0.016945187,0.0022196858,-0.0044342303,-0.018158495,-0.0014999267,-0.0013791099,0.070001714,0.020677652,0.008179548,-0.019330673,-0.004246579,-0.0026939556,-0.00034542012,-0.006883982,0.014477441,0.011495582,-0.03111416,-0.0050743017,0.014621393,0.011752638,0.002260815,-0.001867518,0.010487919,0.009187211,-0.012009695,0.00060793944,0.009629349,-0.008056161,0.0055164397,-0.021006685,0.043720227,-0.0014600828,0.008529145,0.0032543396,0.036337554,0.025993587,-0.02387544,-0.010009793,0.00013688277,-0.023854874,0.008755356,-0.003274904,0.056881536,0.023443583,-0.0148578845,0.0041257623,0.022579873,-0.002745367,0.022662131,0.031402063,0.042692,-0.04265087,0.01872402,-0.037160136,0.033910938,-0.02157221,-0.00010860651,-0.0047478396,0.0011342632,-0.0026939556,-0.007860798,0.009022695,0.04491297,0.048244428,0.009346587,0.0033443093,-0.032738756,-0.00059958507,-0.03800328,0.0061128116,-0.032718193,0.01736676,-0.026199233,-0.016626436,-0.020410312,0.008791343,0.010169168,0.044666193,-0.045242004,0.017438736,-0.0013148458,0.022538744,0.024985924,0.0022955176,-0.0011406897,-0.015536515,-0.00043281945,0.012688326,0.016369378,-0.00461417,-0.011793767,0.012914536,-0.071646884,-0.0076448703,-0.021387128,-0.0007910924,0.039196026,-0.022312533,-0.032265775,-0.05161701,0.0026785322,-0.015855266,-0.008688521,0.007079345,0.009721889,0.025664555,0.038928688,0.02130487,-0.0041540386,-0.015947806,0.03894925,0.0011593263,-0.016338533,-0.04121135,0.0656009,0.029057704,-0.028132299,-0.035617795,0.011516146,-0.0044110953,-0.0038198645,0.008328642,0.0033777268,0.0037556004,0.025829071,0.0052619535,-0.031175852,-0.029160528,-0.012184494,0.0075163417,0.028152864,-0.0058506136,-0.009701325,-0.012832277,0.03790046,0.034815777,-0.008961001,-0.022189146,0.013089334,-0.023628663,0.009788725,0.0014703651,-0.011032879,-0.039792396,-0.03261537,0.015238329,-0.03849683,0.008158984,0.044131517,0.010050922,0.0008225819,0.012318163,0.008025315,-0.0005086512,0.013079052,0.039915785,0.020975837,-0.018436115,0.04125248,-0.020667369,-0.01216393,0.0008675668,0.01280143,-0.03687223,0.037345216,0.00461417,0.002587277,0.020975837,-0.02492423,0.040738367,0.006883982,-0.018682892,0.012503244,-0.0019292115,0.00095239555,0.028749237,0.034404486,-0.0068942644,0.0025667124,0.018199624,-0.044131517,-0.022065759,-0.0016233139,-0.03282102,0.028399639,-0.017942566,-0.033808116,-0.017119985,-0.029715769,-0.023423018,0.019906482,-0.024245601,0.007593459,-0.037509732,-0.026363749,0.017603252,0.0014253801,-0.026343184,-0.030579481,-0.0012814283,0.024718584,-0.040327076,0.009197493,0.02062624,0.015248612,0.043761354,0.02379318,0.029098833,0.00067541684,-0.022559308,-0.031011336,-0.011721792,-0.000366306,0.00053532084,0.015988935,-0.042033933,0.012955665,0.008734792,-0.013490343,0.01931011,-0.0140661495,0.015413128,0.0033314566,0.0153411515,0.0036476364,-0.027967783,-0.0062413397,0.015176635,0.019412933,0.0070587806,0.013305262,-0.00479411,0.001714569,-0.020338336,0.007819668,0.032594807,-0.002343073,0.0039818105,0.012277034,-0.012338728,-0.011793767,-0.01569075,0.018076237,0.012482679,0.012071389,0.0030461235,-0.007881363,0.01397361,-0.013356673,0.019968174,-0.0067863003,0.016667565,-0.021860113,0.04223958,0.012050824,0.026651653,0.010364532,0.0017158544,-0.0131818745,0.022106888,0.025767377,0.0046578697,-0.016770387,0.010215439,0.042157322,0.015084095,0.04232184,-0.02515044,-0.021839548,0.02922222,-0.0059380126,0.042527482,-0.0093979975,-0.017284501,0.003542243,-0.037057314,0.012976229,0.012976229,-0.022518178,-0.0076191644,0.0101023335,-0.02862585,-0.0076551526,-0.008966142,-0.019752247,0.008986707,0.017664945,0.027021814,-0.008287513,-0.011567557,-0.009660196,-0.033869807,0.013767964,0.02432786,0.033047225,0.015886113,0.0081229955,0.0176341,-0.024368988,-0.0075009186,0.016225427,0.04232184,0.027145201,0.00059187337]},{"id":"count-good-nodes-in-binary-tree","name":"Count Good Nodes in Binary Tree","description":"Within a binary tree, a node `x` is considered **good** if the path from the root of the tree to the node `x` contains no nodes with a value greater than the value of node `x`\n\nGiven the root of a binary tree `root`, return the number of **good** nodes within the tree.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/9bf374f1-71fe-469e-2840-5d223d9d1b00/public)\n\n```java\nInput: root = [2,1,1,3,null,1,5]\n\nOutput: 3\n```\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/8df65da7-abac-4948-9a92-0bc7a8dda100/public)\n\n**Example 2:**\n\n```java\nInput: root = [1,2,-1,3,4]\n\nOutput: 4\n```\n\n\n**Constraints:**\n* `1 <= number of nodes in the tree <= 100`\n* `-100 <= Node.val <= 100`\n","difficulty":"Medium","concepts":["Binary Tree","Depth-First Search"],"solutions":{"python":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nclass Solution:\n    def goodNodes(self, root: TreeNode) -> int:\n        def dfs(node, maxVal):\n            if not node:\n                return 0\n\n            res = 1 if node.val >= maxVal else 0\n            maxVal = max(maxVal, node.val)\n            res += dfs(node.left, maxVal)\n            res += dfs(node.right, maxVal)\n            return res\n\n        return dfs(root, root.val)\n","javascript":"/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     constructor(val = 0, left = null, right = null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {TreeNode} root\n     * @return {number}\n     */\n    goodNodes(root) {\n        return this.dfs(root, root.val);\n    }\n\n    /**\n     * @param {TreeNode} node\n     * @param {number} maxVal\n     * @return {number}\n     */\n    dfs(node, maxVal) {\n        if (!node) {\n            return 0;\n        }\n\n        const res = node.val >= maxVal ? 1 : 0;\n        maxVal = Math.max(maxVal, node.val);\n        return res + this.dfs(node.left, maxVal) + this.dfs(node.right, maxVal);\n    }\n}\n","cpp":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n\nclass Solution {\npublic:\n    int goodNodes(TreeNode* root) {\n        return dfs(root, root->val);\n    }\n\nprivate:\n    int dfs(TreeNode* node, int maxVal) {\n        if (!node) {\n            return 0;\n        }\n\n        int res = (node->val >= maxVal) ? 1 : 0;\n        maxVal = max(maxVal, node->val);\n        res += dfs(node->left, maxVal);\n        res += dfs(node->right, maxVal);\n        return res;\n    }\n};\n","java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    \n    public int goodNodes(TreeNode root) {\n        return dfs(root, root.val);\n    }\n\n    private int dfs(TreeNode node, int maxVal) {\n        if (node == null) {\n            return 0;\n        }\n\n        int res = (node.val >= maxVal) ? 1 : 0;\n        maxVal = Math.max(maxVal, node.val);\n        res += dfs(node.left, maxVal);\n        res += dfs(node.right, maxVal);\n        return res;\n    }\n}\n","csharp":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\npublic class Solution {\n    \n    public int GoodNodes(TreeNode root) {\n        return Dfs(root, root.val);\n    }\n\n    private int Dfs(TreeNode node, int maxVal) {\n        if (node == null) {\n            return 0;\n        }\n\n        int res = (node.val >= maxVal) ? 1 : 0;\n        maxVal = Math.Max(maxVal, node.val);\n        res += Dfs(node.left, maxVal);\n        res += Dfs(node.right, maxVal);\n        return res;\n    }\n}\n"},"starterCode":{"python":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nclass Solution:\n    def goodNodes(self, root: TreeNode) -> int:\n        ","javascript":"/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     constructor(val = 0, left = null, right = null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    /**\n     * @param {TreeNode} root\n     * @return {number}\n     */\n    goodNodes(root) {}\n}\n","cpp":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n\nclass Solution {\npublic:\n    int goodNodes(TreeNode* root) {\n        \n    }\n};\n","java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    public int goodNodes(TreeNode root) {\n        \n    }\n}\n","csharp":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\npublic class Solution {\n    public int GoodNodes(TreeNode root) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/7cp5imvDzl4","embedding":[0.0281114,0.01160997,0.030470127,-0.019217834,0.019304836,-0.0013630355,-0.03607694,0.006094992,-0.011010621,0.051505342,0.027454048,-0.020126525,-0.04721323,-0.057962846,0.012247986,-0.025481997,-0.016772104,-0.017216783,0.020087857,0.041993096,0.04292112,-0.00007861924,0.07342991,-0.029851446,0.07648466,0.0024239798,0.01731345,0.031224148,0.026506692,-0.0043259463,0.0320555,0.004011771,0.0034486733,0.06368566,-0.009908591,-0.0021786818,0.044119816,0.017845131,0.026642028,0.005408641,-0.031958833,0.024263967,-0.025153322,-0.006839345,0.012122316,-0.060089566,-0.008004209,0.0039755204,-0.0035743432,0.00919324,-0.018115805,0.010169598,0.030450795,0.021595897,-0.029213428,-0.007520863,-0.0031804163,0.009531582,-0.00781087,0.042186435,0.027299378,-0.012634663,0.008685727,0.0107206125,0.036637623,-0.0059354883,0.00086760597,-0.05749883,0.030760136,-0.07149653,-0.03447223,0.0015285815,-0.0038256831,-0.02020386,0.010488607,0.03425956,0.04686522,0.02030053,-0.0043428633,-0.020087857,-0.02246592,0.01932417,0.07095519,-0.009594417,-0.004461283,-0.030160787,-0.032944858,-0.058156185,-0.07342991,-0.10525341,-0.0058001513,-0.024437971,0.05718949,0.029716108,0.001474205,-0.009729754,0.014974057,0.022987932,-0.005500477,0.017613126,-0.00004474726,-0.059393547,-0.0039900206,-0.02760872,0.014519712,0.013553021,0.019372506,0.013775359,-0.04025305,0.02403196,-0.0074193603,-0.067513764,0.026274685,-0.012634663,0.013736691,-0.07354592,-0.076794006,-0.023741953,0.02584934,-0.016685102,0.05123467,-0.03743031,-0.032809522,-0.012499326,-0.038126327,0.017265117,0.028536744,0.021847237,0.044699833,0.0027913228,0.0059934896,0.0099182585,-0.018753823,-0.0140267,-0.053941406,-0.0073710256,-0.021170553,-0.014664716,-0.005669648,0.02387729,-0.0013171177,-0.02503732,-0.001301409,0.009425246,0.012470325,-0.027454048,-0.044506494,0.074937955,-0.05073199,0.04187709,0.026990037,0.013968698,0.0015660408,0.015041726,0.016395094,-0.035825603,-0.012209319,0.027028704,0.012325321,-0.044815835,-0.008125045,-0.0130116725,0.031359486,0.00092983677,0.016114753,0.05456009,-0.030644132,0.009956926,0.034530234,-0.030566797,0.060282905,-0.03727564,0.031668827,0.0077480352,0.003932019,-0.024109295,-0.050345313,0.015940748,-0.031224148,0.029039424,-0.026777364,0.008144379,-0.037797652,-0.008801729,-0.029600106,0.008492388,0.01772913,-0.027550718,-0.012711998,0.03209417,0.018502483,0.006220662,0.048837274,0.015892414,0.0012264904,0.0070761847,0.024341302,-0.0016832523,-0.03087614,-0.0010313394,0.0017980469,-0.008497221,0.010865617,0.01715878,0.03139815,-0.03238418,-0.031958833,0.026526025,0.0045917863,-0.06105626,0.035361588,-0.006858679,-0.014925723,-0.0058001513,-0.0056454805,0.020745208,0.06523237,0.014113701,0.0035791767,0.040523723,0.0091739055,0.02055187,0.018502483,0.024882648,0.033292867,0.03369888,-0.033988886,-0.01393003,0.06704975,-0.015486404,0.020822544,-0.034530234,0.004835876,-0.044970505,-0.043307796,-0.024805313,-0.01690744,-0.011986979,-0.020474534,-0.012992339,-0.011774307,0.029155428,0.0011340504,-0.028072732,0.0032650018,-0.028788084,-0.026951369,0.046130538,-0.03043146,0.030218787,0.0033326703,-0.029329432,-0.0060998257,-0.0306248,-0.01778713,-0.0204552,-0.0058243186,0.0036685956,-0.0034921744,-0.015747411,-0.036250945,0.010623944,-0.043501135,-0.07466728,-0.006230329,-0.07520863,0.027106041,0.0059789894,0.004364614,0.014819386,0.025172656,-0.041838426,0.04806392,-0.05200802,-0.0005395349,-0.025017986,0.018492816,0.017429454,-0.016279092,-0.06670174,-0.015824746,0.048605267,0.051312003,0.029677441,-0.007549864,0.0029701607,-0.0060901586,-0.008347385,0.002245142,0.034588236,-0.05722816,-0.0022644757,-0.032674186,-0.03143682,-0.0031707494,0.010314602,-0.022891264,0.030412126,0.059470885,-0.09659185,-0.015244731,-0.011223293,-0.016172756,0.025056653,-0.015196396,-0.065580375,0.019614179,0.035554927,0.012934337,0.017545458,-0.0191115,0.04655588,0.009280242,0.004069773,-0.00003638311,-0.026738698,0.017468123,-0.058426857,0.013311347,0.0063898335,-0.012973005,0.02076454,0.027724722,0.04539585,0.037410975,0.02287193,-0.034394898,0.048953276,0.030508796,-0.038319666,-0.00019847392,-0.007216355,0.012035314,0.023490613,-0.025095321,-0.023799954,0.006617006,-0.0009546082,-0.056145463,0.03814566,0.05718949,-0.030644132,0.040214382,0.011909644,-0.014374708,-0.0023575197,0.03425956,0.037062965,0.0013557854,0.009434912,-0.04558919,-0.029426102,0.036289614,-0.016878441,-0.033776212,0.018019136,-0.034240227,0.03203617,-0.03228751,0.016772104,-0.07478328,-0.01778713,-0.030392792,-0.051002663,-0.0059838225,0.015505738,-0.02362595,0.018715154,-0.00831355,0.03219084,-0.014403709,0.022659257,-0.005500477,0.018724822,-0.011861309,0.019623846,0.005176635,-0.006418834,-0.0077915364,0.044815835,-0.032268174,0.0525107,-0.012102982,0.02080321,0.004473367,-0.006998849,0.04640121,-0.015631407,0.011406964,-0.03103081,0.03209417,0.0011515717,0.026622694,0.011619637,0.01596975,0.0066701737,0.014916056,0.04152908,0.029406767,0.020687206,0.020126525,0.04972663,-0.019691514,0.010681945,-0.016772104,-0.029000755,0.012963338,0.04121974,0.015119061,-0.059432216,-0.023045935,0.030470127,-0.008221715,-0.04609187,0.016395094,-0.0017315869,-0.0009171489,-0.023993293,-0.07018183,-0.015283398,0.0025254826,0.012760333,-0.0062013282,0.024341302,0.043926477,0.029310098,0.031920165,-0.0040625227,0.030064117,0.019092165,0.0067716767,0.040369052,-0.0060853255,-0.016888106,0.0018113389,0.045821194,0.01954651,0.03864834,-0.020841876,-0.019817183,-0.039711703,-0.029348765,0.032790188,-0.027744057,0.010043928,0.02347128,0.024631308,0.039209023,0.021035215,-0.02352928,0.0048866277,0.014200703,-0.00845372,-0.0166271,-0.020242527,0.011812975,0.05521744,0.04110374,-0.0032819188,0.0028831586,-0.063337654,0.029793443,0.0025230658,-0.01876349,0.027396047,-0.013263012,0.0032529181,0.0203972,0.031224148,-0.06801644,0.06469102,-0.0023865206,-0.018608818,-0.011754973,-0.0046546212,0.014017032,0.010140598,0.0015539572,0.011155624,-0.027028704,-0.034027554,-0.03315753,0.0048237923,0.023413278,0.040485054,-0.0027550717,0.063066974,0.010701279,-0.018589485,-0.02246592,-0.0013461184,0.0049687964,0.0045724525,-0.0034728406,0.050615985,-0.0074821953,0.0017219199,-0.0024251882,-0.0050461316,-0.018463815,-0.0061046593,-0.030818136,-0.029503437,0.021441225,0.00089841924,-0.044197153,-0.0022934764,0.022755926,-0.0021122217,0.051776018,-0.0072115213,-0.024244633,-0.012692665,0.0089128995,-0.00024454284,-0.008332884,-0.013098675,-0.049842633,0.015447736,0.01562174,-0.012528326,-0.02494065,0.030122118,0.03864834,-0.008946734,-0.02055187,-0.03087614,0.0070761847,-0.055604115,0.0045893695,0.00018276519,0.0076803667,0.022929931,0.02826607,-0.005819485,0.012073982,0.014684049,0.026970703,0.016018085,0.00396827,0.0043138624,-0.0018826324,-0.027434716,-0.015728077,-0.029986782,-0.013214678,0.01675277,-0.006617006,0.0027429883,-0.013485352,-0.01302134,-0.043771807,-0.043849144,-0.057924177,-0.02670003,-0.020919213,0.0014802469,0.004997797,0.0230266,0.015853746,-0.03338954,0.006737842,0.014751718,0.020281196,0.0021436391,0.0095460825,0.0011135082,0.027492717,0.00523947,0.015786078,0.021286555,-0.0146260485,-0.0012355531,-0.032925524,0.03572893,-0.04060106,-0.00007348369,-0.044545162,-0.00070749765,-0.018860158,-0.014171703,-0.024379969,-0.06384033,0.009101404,-0.025462665,-0.0051379674,-0.0017714628,0.014616381,0.037062965,-0.027280046,-0.016636766,0.036811627,0.052472036,0.023838622,-0.04489317,-0.022272581,-0.053245388,-0.004028688,0.0025714005,-0.00781087,-0.005292638,0.010082596,0.036289614,0.010594943,0.004934962,0.00007159562,0.0029846611,0.047445238,0.022813927,0.023799954,-0.0010277143,-0.038416333,-0.007839872,-0.0042655277,0.016762437,0.00345109,0.023993293,0.048837274,0.032519516,-0.014191037,0.0033109197,-0.0022971015,0.02337461,0.024437971,-0.010488607,0.024611976,-0.038435668,0.030006116,0.010459607,0.026390688,-0.05088666,0.04752257,0.000490294,0.0027309046,0.004309029,-0.038609672,-0.010266268,-0.025307992,0.0059789894,0.0058243186,0.03470424,0.0074531944,-0.027492717,-0.035709597,-0.018086804,0.033872884,-0.0055198106,0.035284255,-0.016675435,-0.0108559495,-0.0086083915,0.014568047,-0.005838819,0.021905238,-0.0063463324,0.027744057,-0.012566994,-0.054366753,-0.030702135,0.0038401834,-0.0026777366,0.0017231283,0.024186632,0.02161523,0.000022203703,-0.0020687205,0.016105087,0.04806392,0.0025810674,-0.037101634,-0.022562588,0.020165192,-0.01823181,-0.041838426,-0.019005163,-0.026835367,0.022311248,-0.0075256964,-0.030102786,-0.011416631,-0.0062544965,0.016646434,-0.028788084,0.03830033,-0.026274685,0.009618584,0.0018741739,-0.007723868,-0.025327327,-0.028498076,0.019372506,-0.021421893,-0.03284819,-0.00009296857,-0.029329432,-0.0024590224,-0.0038329333,0.034994245,0.021479893,-0.076561995,-0.020029856,-0.014655049,-0.02801473,0.009966593,-0.044854503,0.039518364,-0.01706211,0.020107191,0.02070654,-0.042495776,0.026584027,0.008961233,0.0059209876,0.006157827,-0.022485252,0.022755926,0.025114655,0.037604313,0.012963338,-0.017419787,-0.020474534,0.02563667,0.0065058363,0.030199455,-0.00076610333,0.012508993,-0.010459607,-0.0016059169,-0.008545556,-0.0044830334,-0.024650643,-0.0007250189,-0.008758228,-0.02262059,-0.008294216,0.0010385896,-0.030972809,0.018086804,0.00015248054,0.0008138337,-0.0010289226,0.0061336597,-0.00043380298,-0.037352975,-0.014674382,-0.003907852,-0.029406767,0.01543807,-0.07505396,0.04241844,0.010942952,0.0011896351,0.009642752,-0.06677908,0.029310098,0.0018838408,-0.00057216076,-0.023838622,0.016868774,-0.0069891824,-0.02861408,0.025752671,-0.017052446,-0.016578766,0.018966494,0.0009286284,-0.050306644,0.014867721,-0.014858054,0.044854503,-0.022562588,-0.026390688,0.03764298,-0.018734489,-0.0025569,0.0034196726,-0.0076368656,-0.040330384,-0.018251143,-0.013185677,-0.013785026,0.030798804,0.0022958932,-0.0018657154,0.014693717,0.0078978725,0.014036366,0.025327327,0.00045223054,-0.030953474,-0.02086121,-0.045318514,-0.040485054,0.008685727,0.0073178574,-0.014365042,-0.002275351,0.0060901586,0.0031949168,-0.06182961,-0.036212277,-0.002100138,0.024921317,-0.008647059,-0.033582877,0.028478744,-0.0015624157,-0.030702135,-0.0078978725,0.0021158468,-0.01715878,0.026313353,-0.01433604,0.0103242695,0.002573817,0.0012542827,-0.0460532,-0.041181073,0.008250715,0.008318383,0.0108559495,0.010082596,-0.0063173315,0.018396147,-0.039170355,0.029677441,0.003057163,0.025714004,-0.0040214383,-0.0002755072,0.048875943,-0.005543978,-0.023161937,0.034878243,-0.013843028,0.043346465,0.053477395,-0.020783875,-0.026758032,0.022427252,-0.0064575016,-0.020261861,-0.00059693225,-0.047986586,-0.027840726,0.023142604,0.012963338,0.012605662,-0.016888106,-0.078108706,0.0023309358,-0.01763246,0.020281196,0.008951567,-0.022987932,0.021247888,-0.012992339,0.031823497,0.015563739,-0.009676586,-0.0070665176,0.0006223079,-0.015747411,-0.012866669,-0.03541959,-0.016211422,-0.03830033,-0.022929931,-0.0065638376,0.009135238,0.028246736,-0.011822642,0.007690034,0.004316279,0.0013835777,-0.0017146698,-0.034336895,0.014722717,-0.0062351627,0.01634676,0.020339197,0.0075740307,-0.014597047,-0.00588232,0.017168447,-0.0016409594,0.022543255,0.022330582,-0.00561648,-0.0015007892,0.029426102,-0.0058339853,0.010759281,0.0019104248,-0.016047085,-0.0017013777,0.0024203549,-0.0055053104,0.026429355,-0.028169401,0.0056116465,-0.02277526,0.0025278993,-0.018144807,0.024882648,-0.048179924,-0.0034003386,-0.00053379516,0.017738797,-0.017603459,-0.024418637,-0.026062014,-0.021905238,0.032152172,0.009111071,0.0138140265,-0.008347385,0.033563543,-0.007187354,0.015660409,-0.025075987,-0.018338146,-0.026062014,0.016868774,-0.026158683,-0.029967448,-0.020667871,0.008057376,0.017361786,-0.011503633,0.018647486,-0.03903502,0.005147634,0.0122673195,-0.012276987,0.030992141,-0.023761285,-0.025617335,0.009125572,-0.019855851,-0.023915958,-0.016762437,-0.012634663,-0.04187709,-0.0048020417,0.010556275,0.00066943414,-0.029329432,0.03623161,0.013321014,0.042147767,-0.0051524676,0.006196495,-0.010594943,-0.01421037,-0.031069476,-0.010092263,-0.0063946666,0.017110446,0.012131983,0.014258705,-0.011841975,-0.014123368,0.044351824,0.010159932,-0.0000808094,0.007762536,0.009091737,0.006646007,-0.017825799,0.01675277,0.016414428,-0.0024384803,-0.01609542,0.006573505,-0.023896623,-0.01289567,0.015737744,0.007554697,0.033447538,-0.0077287015,-0.0025133989,-0.048334595,-0.036985632,0.03309953,0.033563543,-0.034336895,0.00006283497,0.009797422,0.039073687,0.013485352,0.074241936,0.03501358,-0.018686155,0.024573307,0.016414428,-0.0146260485,0.067127086,-0.016791439,-0.0046087033,-0.0395957,-0.018347811,-0.0028734915,0.027666721,-0.02554,-0.028691415,0.0319975,0.026178015,-0.0031127478,0.0027429883,-0.02378062,-0.0019080081,0.009531582,0.061597608,-0.0033592542,-0.002851741,0.029948113,-0.008801729,-0.023973959,-0.0124026565,0.0056019793,-0.004040772,0.011078289,0.05285871,0.007414527,0.004659455,0.015022391,-0.0042969454,-0.013369349,-0.0018850492,-0.004011771,-0.0070955185,0.026680695,-0.035477594,0.014809719,0.012209319,0.01979785,0.0018536317,-0.030644132,0.0009860257,-0.04655588,-0.023103936,-0.014780719,0.022175912,-0.038590338,0.018811824,-0.018173806,-0.0346269,0.0087775625,0.05270404,-0.0016409594,-0.007719035,-0.008753395,-0.018164141,-0.005640647,-0.018463815,0.024998652,0.008241048,-0.0018427564,0.007767369,-0.054096077,0.00040147922,-0.007598198,0.013707691,0.006878013,-0.0030015784,0.03723697,-0.03108881,0.020629205,-0.03853234,0.0099182585,-0.0111266235,-0.034684904,-0.012257653,-0.026332688,-0.02503732,-0.021035215,-0.026622694,0.0015914165,0.013794693,0.044119816,-0.03752698,-0.0102276,0.02318127,-0.025249992,0.005514977,0.02086121,-0.01393003,0.0039924374,0.0014717884,0.06480702,0.029232763,-0.0032746687,0.0052298033,-0.016926775,-0.004164025,-0.012383323,0.0042075263,0.0029919113,0.002185932,0.0076368656,0.014345707,-0.0061336597,-0.039827704,-0.02146056,-0.04172242,-0.0018065055,0.054946765,-0.005249137,-0.013388682,0.007429027,-0.012499326,-0.013533686,0.013553021,-0.025501331,-0.03814566,-0.019227501,0.0041688588,-0.013031007,-0.029832112,0.02826607,-0.008023542,0.019391838,0.0083038835,-0.027086707,-0.005974156,0.0007624782,-0.009077237,0.008796896,0.019227501,-0.010614277,-0.00804771,-0.012837668,-0.0055294777,-0.003040246,-0.007912373,-0.021769902,-0.025559334,0.0044032815,0.027744057,0.009038569,-0.027106041,0.010459607,-0.0075401966,0.05718949,-0.020029856,0.017071778,0.033621542,0.0028759083,-0.03323487,0.011648637,0.039518364,0.0143553745,-0.035825603,-0.017874133,0.020725874,-0.030508796,-0.053864073,-0.029986782,-0.005945155,-0.023819288,0.002825157,-0.013765693,0.009468747,0.005007464,-0.015515405,-0.013862361,0.01715878,0.011426298,-0.0109912865,-0.020725874,0.0051621348,-0.0015346233,-0.017207116,0.004043189,0.009251242,-0.011754973,0.018338146,-0.020493867,0.015979417,0.014838721,-0.0015974584,-0.031572156,-0.020087857,0.009720087,0.012160984,-0.0009860257,-0.03412422,0.002037303,0.000030643376,0.031726826,-0.0102276,-0.01753579,-0.021789234,0.018318811,-0.0036275112,-0.0020928879,-0.015012725,-0.009289909,-0.017671127,-0.0031852496,-0.008144379,-0.02563667,0.02892342,-0.027164042,0.0099182585,0.009570249,-0.026719363,-0.015457403,-0.024747312,0.031514157,0.017545458,-0.037062965,-0.023741953,0.016327426,-0.013475684,-0.013127675,-0.0044757836,-0.028478744,0.024824647,-0.016076086,-0.014684049,-0.0024964819,-0.007206688,-0.021170553,-0.00779637,0.026371354,0.00015353785,0.0007987292,-0.018686155,-0.004927712,-0.0054859766,-0.01509006,0.019991187,0.009285076,-0.027589386,0.0179418,-0.012828001,0.0498813,0.027570052,-0.015486404,-0.027415382,0.0021581396,0.011774307,0.0072453558,-0.037314307,0.0066218395,0.030006116,-0.019411173,-0.015563739,-0.0069263475,-0.0018814241,0.0054908097,0.00625933,0.009125572,0.0046159537,0.0024553973,0.0023828954,0.0045362017,0.02055187,-0.008241048,-0.029348765,0.04674922,-0.007946207,0.004531368,0.0062738303,0.027125373,0.004997797,0.013388682,0.0000060748653,-0.01967218,-0.022175912,0.032964192,0.012818335,0.027744057,0.01828981,-0.008497221,0.016153421,0.0065638376,0.002205266,0.00779637,0.017487455,0.031108145,-0.017294118,0.029368099,-0.030199455,0.030296123,-0.025714004,0.010865617,-0.03002545,-0.05784684,0.010343603,-0.02120922,0.015747411,0.03410489,0.026062014,0.03052813,-0.0012367615,-0.031108145,0.013330681,-0.015012725,0.016172756,-0.0498813,0.012915003,-0.019913852,0.002771989,-0.021866571,0.0130793415,0.008158879,0.05676415,-0.003675846,0.008956401,0.009449413,0.012653996,0.031011475,0.0016373344,-0.005746983,0.019710848,-0.0035332588,0.018956827,-0.006873179,-0.032616183,-0.037352975,0.015950415,-0.04292112,-0.004719873,-0.00020919816,0.01700411,0.03250018,-0.013321014,-0.04005971,-0.028807418,0.017487455,-0.011097623,-0.015534738,0.0015563739,0.0036734291,0.004309029,0.018531483,0.033602208,-0.01571841,-0.029058758,0.018483149,0.0013763276,-0.012460658,-0.030489461,0.06523237,0.018889159,-0.040214382,-0.03849367,-0.0028589913,0.007868872,-0.010440272,0.0070036827,0.021537894,0.023548614,0.010846283,-0.0015781245,-0.018154474,-0.024070628,-0.029136093,-0.009275408,0.0069408477,-0.019353172,-0.01700411,-0.007999375,0.01907283,0.03466557,-0.0115133,-0.010420938,0.012934337,-0.03723697,-0.008854898,0.024553973,-0.008637392,-0.030412126,-0.018715154,0.034066223,-0.017835464,0.0054134745,0.032616183,0.025926676,-0.004642538,-0.012247986,0.005355473,0.024167297,-0.003620261,-0.009599251,0.00055886875,-0.029735442,0.030450795,0.017719463,-0.006936014,0.0034027554,-0.0050461316,-0.05355473,0.020745208,0.00857939,-0.013205011,-0.0005745775,-0.03739164,0.051002663,-0.019817183,0.021731233,0.005316805,-0.002444522,-0.0063463324,0.04292112,0.026236018,-0.034182224,0.011426298,0.004932545,-0.033292867,0.011242626,-0.002195599,-0.03350554,0.006568671,-0.0011539884,0.013978365,-0.016917108,-0.019227501,-0.041142408,0.0026294019,-0.008526223,0.001725545,-0.032326177,-0.0146260485,0.02619735,0.0011485508,-0.029097425,-0.007375859,-0.012373656,0.021305889,-0.01967218,0.0015648325,0.0023091852,0.01521573,0.022001907,0.014974057,0.03250018,0.01521573,0.0017025861,-0.031823497,0.019227501,-0.0001533868,-0.012209319,0.013456351,-0.0370823,0.02211791,0.02845941,-0.028710749,0.026313353,-0.026622694,0.0165981,0.011986979,0.01160997,-0.006278664,-0.045163844,0.00015482174,0.04071706,0.029329432,0.004531368,0.044351824,0.0006277455,0.019933186,-0.03930569,-0.009898925,0.01669477,-0.0007993333,0.015244731,0.012528326,0.015602407,0.0058146515,-0.015331733,0.009401078,0.0018475899,-0.003361671,0.02111255,0.0026849867,0.011957979,-0.025926676,0.04187709,0.029039424,0.01731345,-0.0017376286,0.019991187,-0.0053409724,0.04508651,0.01766146,0.008632558,-0.011725972,-0.009111071,0.028401406,0.024476638,-0.016317759,-0.001251866,0.051660012,0.014316707,0.04543452,0.00008292404,-0.032577515,0.02246592,-0.010362937,0.029194094,0.0036589287,-0.02503732,-0.009773255,-0.050809324,0.0019297587,0.022156578,-0.01644343,-0.013456351,0.0048793773,-0.012450991,-0.014007365,0.0065396708,-0.016356427,0.027338047,0.02820807,0.024302633,0.009541249,-0.005186302,0.026178015,-0.021982573,0.033080194,0.01722645,0.053438727,0.019034162,0.0052249697,0.041490417,-0.03052813,-0.011696972,0.047290567,0.02625535,0.03567093,-0.02343261]},{"id":"kth-largest-integer-in-a-stream","name":"Kth Largest Integer in a Stream","description":"Design a class to find the `kth` largest integer in a stream of values, including duplicates. E.g. the `2nd` largest from [1, 2, 3, 3] is `3`. The stream is not necessarily sorted.\n\nImplement the following methods:\n* `constructor(int k, int[] nums)` Initializes the object given an integer `k` and the stream of integers `nums`.\n* `int add(int val)` Adds the integer `val` to the stream and returns the `kth` largest integer in the stream.\n\n**Example 1:**\n\n```java\nInput:\n[\"KthLargest\", [3, [1, 2, 3, 3]], \"add\", [3], \"add\", [5], \"add\", [6], \"add\", [7], \"add\", [8]]\n\nOutput:\n[null, 3, 3, 3, 5, 6]\n\nExplanation:\nKthLargest kthLargest = new KthLargest(3, [1, 2, 3, 3]);\nkthLargest.add(3);   // return 3\nkthLargest.add(5);   // return 3\nkthLargest.add(6);   // return 3\nkthLargest.add(7);   // return 5\nkthLargest.add(8);   // return 6\n```\n\n**Constraints:**\n* `1 <= k <= 1000`\n* `0 <= nums.length <= 1000`\n* `-1000 <= nums[i] <= 1000`\n* `-1000 <= val <= 1000`\n* There will always be at least `k` integers in the stream when you search for the `kth` integer.\n","difficulty":"Easy","concepts":["Heap Properties","Push and Pop","Heapify"],"solutions":{"python":"class KthLargest:\n    \n    def __init__(self, k: int, nums: List[int]):\n        self.minHeap, self.k = nums, k\n        heapq.heapify(self.minHeap)\n        while len(self.minHeap) > k:\n            heapq.heappop(self.minHeap)\n\n    def add(self, val: int) -> int:\n        heapq.heappush(self.minHeap, val)\n        if len(self.minHeap) > self.k:\n            heapq.heappop(self.minHeap)\n        return self.minHeap[0]\n","javascript":"/**\n * const { MinPriorityQueue } = require('@datastructures-js/priority-queue');\n */\n\nclass KthLargest {\n    /**\n     * @param {number} k\n     * @param {number[]} nums\n     */\n    constructor(k, nums) {\n        this.minHeap = new MinPriorityQueue();\n        this.k = k;\n\n        for (const num of nums) {\n            this.minHeap.enqueue(num);\n        }\n\n        while (this.minHeap.size() > k) {\n            this.minHeap.dequeue();\n        }\n    }\n\n    /**\n     * @param {number} val\n     * @return {number}\n     */\n    add(val) {\n        this.minHeap.enqueue(val);\n        if (this.minHeap.size() > this.k) {\n            this.minHeap.dequeue();\n        }\n        return this.minHeap.front();\n    }\n}\n","cpp":"class KthLargest {\nprivate:\n    priority_queue<int, vector<int>, greater<int>> minHeap;\n    int k;\n\npublic:\n    KthLargest(int k, vector<int>& nums) {\n        this->k = k;\n        for (int num : nums) {\n            minHeap.push(num);\n            if (minHeap.size() > k) {\n                minHeap.pop();\n            }\n        }\n    }\n\n    int add(int val) {\n        minHeap.push(val);\n        if (minHeap.size() > k) {\n            minHeap.pop();\n        }\n        return minHeap.top();\n    }\n};\n","java":"class KthLargest {\n    \n    private PriorityQueue<Integer> minHeap;\n    private int k;\n\n    public KthLargest(int k, int[] nums) {\n        this.k = k;\n        this.minHeap = new PriorityQueue<>();\n        for (int num : nums) {\n            minHeap.offer(num);\n            if (minHeap.size() > k) {\n                minHeap.poll();\n            }\n        }\n    }\n\n    public int add(int val) {\n        minHeap.offer(val);\n        if (minHeap.size() > k) {\n            minHeap.poll();\n        }\n        return minHeap.peek();\n    }\n}\n","csharp":"public class KthLargest {\n    \n    private PriorityQueue<int, int> minHeap;\n    private int k;\n\n    public KthLargest(int k, int[] nums) {\n        this.k = k;\n        this.minHeap = new PriorityQueue<int, int>();\n        foreach (int num in nums) {\n            minHeap.Enqueue(num, num);\n            if (minHeap.Count > k) {\n                minHeap.Dequeue();\n            }\n        }\n    }\n\n    public int Add(int val) {\n        minHeap.Enqueue(val, val);\n        if (minHeap.Count > k) {\n            minHeap.Dequeue();\n        }\n        return minHeap.Peek();\n    }\n}\n"},"starterCode":{"python":"class KthLargest:\n\n    def __init__(self, k: int, nums: List[int]):\n        \n\n    def add(self, val: int) -> int:\n        \n","javascript":"class KthLargest {\n    /**\n     * @param {number} k\n     * @param {number[]} nums\n     */\n    constructor(k, nums) {}\n\n    /**\n     * @param {number} val\n     * @return {number}\n     */\n    add(val) {}\n}\n","cpp":"class KthLargest {\npublic:\n    KthLargest(int k, vector<int>& nums) {\n        \n    }\n    \n    int add(int val) {\n        \n    }\n};\n","java":"class KthLargest {\n\n    public KthLargest(int k, int[] nums) {\n        \n    }\n    \n    public int add(int val) {\n        \n    }\n}\n","csharp":"public class KthLargest {\n\n    public KthLargest(int k, int[] nums) {\n        \n    }\n    \n    public int Add(int val) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/hOjcdrqMoQ8","embedding":[0.008189395,-0.0075714327,0.018984254,-0.016479,0.030397074,-0.0021642605,-0.08101433,0.008217231,-0.033113882,0.042689517,0.022001693,-0.006274268,-0.019351691,-0.043223973,0.045562208,-0.016211772,-0.001192779,0.012114292,0.012548536,0.02988489,-0.0047460636,0.0031900227,0.051263053,-0.01895085,0.0761597,-0.024228584,0.014352319,0.045384057,0.017692657,0.0002559186,0.025698332,-0.022981524,0.0051135006,0.04164288,-0.040729854,0.02309287,-0.0075769997,0.033247497,0.003418279,0.035006743,-0.030731108,-0.07281937,-0.019429632,-0.0053000026,-0.0036019976,0.04369162,0.01895085,-0.014586142,-0.016935512,0.0043897606,0.051842045,-0.005052261,0.002754387,-0.004871326,0.0197748,-0.011479628,-0.011501897,0.042310946,0.042578172,0.017436564,0.03293573,0.006830991,-0.016946647,0.03436094,-0.020186774,-0.014374588,-0.004136452,0.028370604,0.004161504,0.037344977,-0.07388827,-0.03146598,-0.04600759,-0.040529434,-0.01895085,0.002644434,-0.047299184,0.049347926,0.010015447,0.0048796767,0.02069896,-0.010405152,0.048234478,0.002414786,-0.0091580935,-0.021868078,0.023783205,0.015521437,-0.02049854,-0.053935323,-0.014296646,-0.03257943,-0.006736348,0.05549415,0.0044621346,0.022202112,0.057943728,-0.05478154,-0.024072701,0.015788663,0.039839096,-0.003448899,0.0036882898,-0.029951697,0.0016743444,0.019930683,-0.033670604,0.03135464,-0.052643724,-0.015499168,-0.07041432,-0.008467756,-0.0024314877,-0.004359141,0.003073111,-0.0033375542,-0.04366935,0.03153279,-0.0013528368,-0.025987828,-0.014652949,-0.024050433,-0.006613869,-0.018483203,-0.036142457,0.032690775,0.048234478,-0.012648746,0.02739077,0.03253489,0.0068922304,-0.036120187,-0.012671015,0.003977786,-0.041976914,-0.02431766,-0.060526922,0.051975656,0.027902955,-0.034294136,0.0093028415,-0.0060905493,-0.03627607,0.01852774,0.009497694,0.02329329,-0.021801272,0.05723112,-0.016868707,-0.0010445515,0.037634473,0.051619355,0.042155065,0.035719346,-0.037612204,0.023115138,0.037233632,-0.009007778,0.042979013,0.0031148652,0.038569767,-0.020353792,0.00270289,-0.014753159,0.0003823991,0.040707584,-0.025609257,-0.0096758455,0.0098205935,-0.00088310183,0.0573202,-0.009269438,0.0438475,0.018538876,0.034516826,-0.006881096,-0.030374806,-0.021834675,-0.038926072,-0.03110968,-0.023360096,0.0070314114,-0.02454035,-0.03008531,0.006836558,0.02534203,0.043357585,-0.030775646,-0.0036270502,-0.002601288,0.03384876,0.03509582,0.023137407,0.04246683,0.017380891,0.014062823,0.034761783,0.041108426,-0.022914719,-0.009102421,-0.009313975,0.017358623,-0.0012373169,-0.045005485,0.05478154,-0.1109883,-0.037857164,0.028303796,0.016334252,-0.061952133,0.0075491634,-0.024451273,0.016089294,0.053400867,0.008957673,0.03828027,-0.00912469,-0.021756735,-0.022202112,0.063778184,-0.0009464291,0.03917103,-0.015276479,0.0204206,-0.032490354,0.016813034,0.029216822,-0.027969763,0.022936987,0.028882788,-0.011735721,-0.0438475,-0.0047293617,-0.030976066,-0.023783205,-0.03070884,-0.050550446,-0.023738667,-0.020108834,-0.010382883,0.013005049,0.014853369,-0.008746118,0.017069127,-0.023137407,-0.0036715881,-0.04142019,0.020554213,-0.017147068,0.011802527,-0.014586142,-0.042377755,-0.01255967,-0.02578741,-0.048279017,0.041999184,0.017392026,-0.020531943,-0.0029088776,-0.0379017,-0.004233878,-0.016879842,-0.0059903394,-0.044226073,-0.020988457,-0.05830003,-0.012136561,-0.0113738505,-0.019162405,0.024740769,-0.033247497,-0.051975656,0.0028893922,-0.012281309,0.0062464317,-0.012615343,0.019318288,-0.007404416,0.031243294,-0.085735336,-0.03852523,0.02923909,0.03318069,-0.0073042056,0.016813034,-0.0015602162,0.033915564,0.007220697,0.0069590374,-0.059146248,-0.005107933,-0.009731518,-0.032646235,-0.0024495812,-0.025408836,0.009781623,-0.035006743,-0.013372486,0.01195841,-0.0097482195,-0.01782627,-0.009403051,-0.012871435,-0.01922921,-0.030463882,-0.029350435,0.05277734,0.015866606,-0.049793303,0.029016402,0.01463068,0.021422701,0.00046660344,0.025208417,0.010689082,-0.030597495,0.014318915,0.02943951,0.036788255,-0.012726688,0.031577326,-0.035162624,0.054068938,-0.026433207,0.016623748,0.022847911,0.0031510522,0.018048959,0.033915564,-0.030575227,-0.021088667,-0.019707993,0.0020918867,0.018305052,-0.049526077,0.01320547,0.040217668,0.010705783,0.021188878,0.032490354,0.052510113,0.03520716,0.026455477,0.0015490816,-0.028481947,0.05620675,0.024028163,-0.0062297303,0.025252955,0.034316406,-0.024384467,-0.0075268946,0.012092023,0.015955681,-0.00523598,-0.028392872,-0.02741304,-0.03110968,-0.0068198564,0.023360096,-0.032111783,-0.0006259654,-0.021556314,-0.039282374,0.013405889,0.0037467456,-0.04939246,-0.05086221,-0.012915974,0.06573785,0.0019123434,0.060081545,0.029216822,-0.04636389,-0.010661245,-0.060259696,0.013238872,0.0072318316,0.0033264197,-0.022892449,-0.010544334,-0.026277324,-0.009692547,0.007337609,0.05175297,0.026188249,0.005840024,0.014129629,-0.031844556,0.0071260543,-0.0051302025,-0.014096226,0.05063952,-0.0006851172,0.034093715,-0.028860519,0.020910515,0.04057397,-0.012515132,0.06653953,0.009469858,-0.0237164,-0.005183091,0.005313921,0.01338362,-0.04496095,0.005341757,0.058210954,0.077139534,-0.099586606,0.028281527,0.05010507,0.01627858,-0.052643724,0.0129271075,-0.00026792294,-0.0014641815,0.020309255,-0.030775646,-0.017748328,-0.018605683,-0.03647649,-0.0065971673,-0.023783205,0.0066973777,0.010371749,0.01885064,-0.032200858,-0.017135933,-0.02574287,-0.011117758,-0.004590181,0.018494338,0.0527328,0.009247169,0.008662609,-0.0009464291,0.085735336,0.00016240653,-0.061150454,-0.015076058,-0.013684251,0.04326851,0.02578741,0.029996235,-0.021990558,-0.03629834,0.0063188057,0.03812439,0.019062195,0.064446256,-0.00090397894,0.031243294,0.036587834,-0.0072095627,-0.025831947,0.05006053,0.018895177,-0.0038441722,-0.009141391,0.026054636,0.039660946,-0.025186148,-0.009102421,-0.012748957,0.010755888,0.0006245736,0.011579838,0.030998336,0.0038608739,0.02923909,-0.044782795,-0.01493131,0.03382649,0.00069833937,-0.032022707,0.0017383675,0.012370384,0.020042028,0.007237399,0.0060237427,-0.038057584,-0.016623748,0.009057883,-0.03438321,0.01657921,0.023627324,0.016311983,0.029573124,-0.013138662,-0.06275381,0.026633628,0.006368911,-0.009308408,0.007805256,0.06863281,0.0043118196,-0.013951478,-0.024050433,-0.031421445,0.016790764,-0.0708597,0.02883825,0.0073598777,-0.0060682804,0.019930683,-0.0015490816,-0.013550637,0.02112207,0.029595394,-0.0018163087,-0.015398958,0.025297493,-0.01453047,0.021311356,0.013528368,0.025297493,-0.018382993,-0.025007997,0.005840024,-0.009631308,0.018215977,-0.037634473,-0.008890866,0.0061350875,-0.014029419,-0.038213465,-0.06636138,-0.022179844,-0.022703163,-0.031198757,0.0110008465,-0.02309287,0.014597276,-0.022402532,0.02254728,0.041999184,-0.04044036,0.01400715,-0.035518926,0.005979205,0.020810304,0.0010285457,-0.01834959,-0.0032234262,0.012459461,0.051040363,0.00224081,-0.013728789,0.0135061,0.019418499,-0.018861774,-0.0027349016,-0.015488033,0.019184673,-0.006830991,-0.037411783,0.050550446,-0.0021920968,0.017514504,0.004654204,0.0018177006,0.020042028,-0.0075992686,-0.023181945,-0.04186557,-0.012715553,0.035875227,0.010154627,0.0042255274,0.007165025,-0.024651693,0.0027488198,-0.026255056,0.025497913,-0.016055891,-0.040262207,0.0041837734,0.021378163,0.016968917,-0.025876485,-0.02783615,-0.013417024,-0.0391933,-0.018739296,0.013784461,-0.015398958,0.012570805,-0.0058956966,-0.007020277,0.0016103212,-0.0060126083,0.03848069,0.013494965,-0.021534044,-0.021990558,-0.03090926,-0.048279017,-0.0013632755,-0.0013423983,-0.022803374,0.02986262,0.012470595,-0.00932511,0.0016033622,0.020721229,0.010093387,-0.01235925,-0.019719128,0.022747701,-0.00840095,-0.0138178645,-0.005419698,-0.041776493,-0.010405152,-0.03402691,0.040685315,-0.010705783,0.00023034413,-0.018939717,0.006903365,-0.02244707,-0.0058734273,0.030107578,-0.0076326723,-0.010126791,-0.022781104,0.016089294,-0.008517861,-0.0006238777,-0.0061183856,-0.019930683,0.002118331,-0.005255465,-0.037634473,0.002154518,0.009347379,-0.03872565,-0.012014082,-0.00530557,0.059190787,0.032468084,0.00810032,-0.007888765,0.043157164,0.0035797288,-0.033202957,0.020175641,0.04059624,-0.012893705,0.018694758,0.011017548,0.001806566,-0.018895177,-0.011835931,0.010271539,0.0029005266,-0.064000875,0.01865022,0.01782627,-0.017124798,-0.011212401,0.033715144,0.02102186,0.034628168,-0.030152116,0.012348115,0.007404416,0.10386224,0.009453156,0.010561035,0.009035614,0.014786562,-0.056741208,-0.02494119,-0.0047293617,-0.012192233,0.0237164,-0.050594985,-0.01195841,0.003730044,-0.02082144,-0.02578741,0.023315558,0.008512295,0.0020306471,0.027368503,-0.006079415,-0.0039137625,0.021378163,0.008300739,-0.03776809,-0.024072701,-0.013695385,0.009776056,-0.018093497,0.0047516306,0.0061740577,-0.02923909,-0.02990716,0.020186774,0.0065025245,-0.010416287,0.044582378,-0.033113882,0.02843741,-0.025720602,0.019017657,0.017770598,0.015721858,0.051218513,0.022914719,0.0037690145,0.025297493,-0.02843741,0.0003991008,0.0017481102,-0.019941818,0.013350217,0.0010174112,-0.031243294,0.035162624,-0.012125427,-0.021678792,-0.028259259,0.052198347,0.032646235,-0.014686353,0.015387823,0.0054113474,-0.00365767,0.000066023866,0.026277324,0.0038163362,-0.033447918,-0.031042874,-0.038213465,0.021211145,-0.043624815,0.0022324591,-0.02638867,-0.00032202946,0.016479,0.038881533,0.022792239,-0.03133237,-0.024206316,0.023760937,-0.02783615,0.015198537,-0.02596556,0.005433616,0.02511934,0.048546243,0.039683215,0.004907513,0.019451901,-0.00087057555,-0.019329421,0.030285731,-0.011902737,0.02641094,-0.037567668,-0.025431106,0.049169775,-0.030998336,-0.025586989,0.006368911,-0.0046208007,0.023449171,0.03273531,-0.026032366,0.013261141,0.015120597,-0.0006687635,-0.025586989,-0.028058838,-0.010716917,-0.053267255,-0.00860137,0.013940344,0.01328341,0.050773136,-0.031443715,0.02596556,0.0031065142,-0.0046375026,0.00540578,0.016389925,-0.034806322,-0.029706739,0.01430778,-0.006714079,0.004757198,0.004178206,0.0026708785,0.006547062,-0.024473542,-0.047299184,-0.00942532,0.046230275,0.044983216,0.022458205,-0.034650438,0.024562618,-0.0049771033,-0.0035324073,-0.024985727,0.0035379746,0.013439293,0.04507229,-0.008940971,-0.024050433,-0.01328341,0.006547062,0.0115353,0.0044621346,-0.019140135,-0.008000109,-0.0058734273,0.02574287,0.025074802,-0.0154434955,0.003576945,0.021489507,-0.027346233,0.017492237,0.004926998,0.009865131,0.019763665,0.027457578,-0.020242447,-0.03522943,0.041910104,-0.0064635538,0.028147914,-0.03398237,-0.021890348,-0.027858417,-0.001235925,-0.011724586,0.026099173,0.019373959,-0.015064924,0.038747918,0.0036242667,0.030463882,0.01947417,0.015944546,-0.0055393935,0.014742024,0.020264717,0.01814917,-0.008189395,0.0004822613,0.021344759,0.014998117,0.04600759,-0.013238872,0.00041475863,0.010260405,-0.026433207,-0.025074802,0.0035184892,-0.016111564,0.030397074,-0.020765767,-0.010867232,0.029973965,-0.028214721,0.027591191,0.040930275,-0.0053222715,-0.040106323,0.027568921,-0.0015407308,0.0039165462,-0.020899381,-0.00020929305,0.0019540978,0.009920804,0.026678165,-0.024584888,0.04783364,-0.0059569357,-0.02120001,0.036765985,-0.008311874,-0.014207571,-0.026611358,0.00854013,-0.0021948803,0.0070815166,-0.019117868,-0.010254838,0.0138178645,0.022168709,-0.0210998,0.054113474,0.02329329,0.000585603,-0.04081893,0.015321016,0.034962203,-0.015009251,0.025252955,-0.029038671,0.015187403,0.03807985,-0.005884562,0.014040554,0.02182354,0.018382993,-0.0010174112,0.03215632,0.011362716,-0.02329329,-0.011524166,0.027457578,0.019997489,-0.003273531,-0.03148825,0.006736348,0.0060126083,0.061684906,0.013227738,-0.019707993,0.029595394,0.010215866,-0.008612504,0.05892356,0.008985509,-0.029729007,-0.01772606,-0.026121443,0.020053161,0.0018037824,0.012604209,0.013027318,0.025431106,-0.021567449,0.0010362007,-0.00053097453,-0.0047182273,0.0038831427,-0.0075992686,-0.00045616488,-0.03685506,-0.00083090906,0.02204623,0.028927326,-0.042689517,-0.025475644,-0.041464727,-0.007821958,0.018705891,0.03438321,0.010566602,0.024495812,0.00896324,-0.0138178645,-0.033937834,-0.0011545043,0.008952105,0.012771226,0.0067920205,0.0036688044,0.009686979,-0.023026062,-0.024139509,0.019830473,0.000020159461,-0.0027154163,0.0075491634,-0.023137407,-0.019986356,0.0029339301,-0.011384985,0.0059179654,0.040306743,0.0097482195,0.03233447,-0.03629834,-0.01730295,-0.019830473,0.022803374,-0.004871326,-0.019017657,-0.0043869773,-0.0030703272,0.001336831,-0.0006374478,-0.038569767,-0.018839506,0.020810304,0.019296018,-0.005962503,0.01702459,0.006903365,-0.020665556,-0.0009728734,-0.017269546,-0.006998008,-0.010627842,0.008395382,-0.059012637,0.0145527385,-0.027969763,-0.024852114,-0.013361352,-0.04881347,-0.010956308,-0.00068998855,0.004487187,0.013116393,0.0019193025,-0.008261769,0.0003549109,-0.016423328,-0.048056327,-0.0013396146,0.008773955,-0.008083617,-0.02641094,-0.038258005,-0.01255967,0.007888765,0.04182103,0.023003794,0.008473324,-0.020108834,-0.024139509,-0.048501708,-0.029973965,-0.019808203,0.0045873974,-0.012871435,-0.01463068,-0.0004439866,0.020832574,0.008389816,-0.02676724,0.033069346,-0.011490762,0.008612504,-0.008968807,-0.041665148,-0.01640106,-0.0072819367,0.036142457,-0.031198757,0.028103376,0.0041698553,0.012147696,0.015153999,0.027657997,-0.03273531,0.023827743,0.02112207,0.01887291,-0.008690446,-0.02988489,-0.0018260514,0.01195841,-0.008467756,0.0009046749,-0.025609257,-0.035518926,-0.0010055809,-0.015053789,0.014296646,-0.017670387,-0.011401687,0.012871435,-0.0028003165,-0.02781388,-0.02166766,0.0027808312,-0.001944355,0.0006698073,0.0072763693,-0.004267282,-0.02389455,-0.014497067,0.0115353,0.02721262,-0.006803155,-0.023827743,-0.008746118,0.0035518927,0.028994134,0.041999184,0.024273122,0.0008037688,-0.015176268,-0.014318915,0.0040223235,0.0032930165,-0.018394127,0.0035351908,0.00007046025,-0.012114292,0.0048100865,-0.02329329,-0.026633628,0.0056201187,0.043134898,0.031042874,0.012403788,-0.012715553,0.0003375133,-0.0019944601,0.004740496,0.0008051606,-0.03173321,-0.030374806,-0.02166766,-0.010421854,-0.0034711678,-0.008991077,-0.0045122397,-0.018906312,0.006474688,0.0247185,-0.033915564,0.0017968235,-0.00458183,0.009642442,0.011513031,0.030196654,0.02451808,-0.050015993,-0.051663894,-0.040128592,-0.01922921,0.032312203,0.014018285,0.012281309,-0.009909669,0.0017341921,-0.0411975,-0.0543807,-0.026900854,-0.0033932265,-0.010421854,0.005107933,-0.0033125018,0.054514315,-0.011902737,-0.04516137,0.005711978,0.005906831,0.034138255,0.036365144,-0.0053946455,0.010700216,-0.053089105,-0.013483831,-0.013027318,0.023560517,0.02433993,0.012938242,0.004779467,-0.0038859264,-0.0014586142,-0.03006304,-0.018772699,0.018037824,-0.033737414,-0.014352319,-0.010382883,-0.022257784,0.011329313,-0.01545463,0.015231941,-0.010254838,0.016746227,0.025252955,0.010594439,0.020788036,0.024250854,-0.013049587,0.013483831,0.0025205633,0.015788663,0.0015128948,0.011702317,-0.021144338,0.016412193,0.007972273,-0.013305679,0.0076382393,-0.02721262,0.0063911797,-0.007371012,-0.004267282,0.022781104,0.01041072,-0.00854013,0.008334143,-0.011657779,-0.011802527,-0.025520181,0.020131104,0.01607816,0.013494965,0.023627324,-0.03850296,-0.03796851,0.006903365,0.0009791366,0.008673744,0.0053751604,-0.02534203,0.03692187,0.008952105,0.0017467183,-0.014686353,0.025030265,-0.010961875,0.013261141,0.07010256,0.016044756,-0.0022881315,-0.016868707,-0.033893295,0.03050842,0.01288257,0.03710002,-0.025653794,0.0014474797,-0.03237901,-0.03542985,0.019095598,0.016556941,0.01495358,-0.007771853,-0.01967459,0.028236989,-0.02641094,-0.008957673,0.00024617594,0.0037467456,-0.006613869,0.016746227,-0.022224382,-0.0041809897,-0.0072039953,0.035541195,0.009959774,-0.014831101,-0.021767868,-0.0030953798,0.025653794,0.014073957,-0.014129629,-0.008105886,-0.004648637,-0.00034656006,-0.00711492,-0.020153372,0.0090857195,0.04139792,0.0044844034,0.00952553,-0.0013758016,-0.015922278,0.025074802,0.020231314,-0.0068699615,0.044359688,0.00958677,0.004888028,0.00926387,0.019307153,0.013038452,-0.0037495294,0.0065080915,-0.010577736,0.005979205,0.009397484,0.026010098,0.039660946,-0.023961358,0.014619545,0.010199165,-0.009408618,-0.008323008,0.017258413,-0.029550856,0.0014725323,0.004128101,0.03442775,0.010427422,0.0017759464,0.0038580904,0.00896324,-0.020019758,0.013160931,-0.0016256311,0.021801272,0.009475425,0.023382366,-0.00411975,-0.017057993,0.03770128,-0.02578741,-0.01113446,0.009954207,-0.0035324073,0.0053556752,0.015009251,0.003922113,0.003838605,-0.0071260543,0.013762192,0.009380782,0.017414294,-0.0072875037,-0.0050800974,-0.015076058,0.024896652,-0.039260104,0.007170592,-0.015398958,0.0074489536,0.013439293,-0.034962203,-0.006441285,-0.038035315,-0.03629834,-0.0115353,0.008066916,-0.036008842,-0.019129002,0.020019758,0.020431733,0.014040554,0.020119969,0.026655896,-0.02574287,-0.036587834,-0.039081953,-0.01041072,0.0064468523,0.019707993,0.037389517,0.022257784,-0.035563465,-0.035964306,-0.006151789,0.029996235,0.0003427326,0.033692874,-0.0008002893,-0.019863876,0.0018761564,0.033091616,-0.03068657,-0.03384876,0.05749835,0.011925006,0.0039638677,0.006830991,0.015955681,-0.018717026,0.0058455914,-0.005762083,-0.009636875,0.033893295,0.019028792,-0.01320547,-0.028192451,0.02783615,0.0038163362,0.0151428655,-0.029016402,-0.0029311464,-0.028125646,-0.006513659,0.01792648,0.007604836,-0.040084057,0.013884671,0.018438665,0.00747679,0.01320547,0.009931938,0.02845968,-0.0052610324,-0.022179844,0.007465655,-0.012949376,0.011724586,0.01328341,0.011646645,-0.0067252135,0.0135061,0.017959883,0.0057342467,0.011724586,0.07371012,-0.02022018,-0.0036159158,0.022825642,-0.011368283,-0.024117239,-0.009185929,0.022847911,-0.012459461,-0.003440548,0.026744973,-0.01028824,-0.030953798,0.04264498,-0.04738826,-0.011050951,-0.018683624,0.02576514,-0.0106389765,-0.001358404,-0.029127747,-0.010755888,-0.011735721,-0.012281309,0.015922278,0.0044760527,0.010321644,-0.028303796,-0.0477891,-0.004027891,-0.002775264,0.024250854,0.0015504735,0.002551183,0.0247185,-0.007805256,0.053757172,-0.020454003,0.012136561,-0.0057231123,0.034316406,-0.027145812,0.0154323615,-0.0029534155,-0.018616816,0.013528368,-0.044827335,0.0042477963,0.033759683,-0.0142632425,0.026633628,-0.012593074,0.028905056,0.014374588,-0.01692438,0.028749175,-0.057587426,-0.0070648147,0.030307999,0.02741304,-0.006396747,-0.031376906,0.02616598,-0.009631308,-0.027257157,0.06653953,0.038681112,0.012403788,-0.0011252763,-0.01422984,-0.043402124,-0.03629834,-0.023248753,-0.018895177,-0.0113738505,-0.0060293097,0.009737085,0.02052081,0.044025652,-0.010059984,0.011396119,0.041375652,0.040128592,0.006998008,-0.0029478483,-0.008595803,0.02092165,0.0012561062,-0.012348115,0.0050856643,-0.0025678847,0.056652132,0.032623965,0.012860301,0.00497432,0.027925225,0.02102186,0.0339601,-0.023538249,0.009581203,0.03872565,0.034650438,0.01627858,0.014296646,-0.01627858,-0.023137407,-0.050550446,0.044827335,0.003702208,0.012014082,0.012860301,-0.009770488,-0.011735721,0.018160304,-0.0067474823,-0.018438665,-0.0020751848,0.007482357,-0.002045957,0.013138662,-0.009764921,0.043379854,-0.0025971127,-0.025252955,0.006541495,0.008306307,0.03939372,-0.01772606,0.027502116,-0.006803155,0.0065359278,0.06698491,-0.011735721,0.019808203,-0.029216822]},{"id":"last-stone-weight","name":"Last Stone Weight","description":"You are given an array of integers `stones` where `stones[i]` represents the weight of the `ith` stone.\n\nWe want to run a simulation on the stones as follows:\n\n* At each step we choose the **two heaviest stones**, with weight `x` and `y` and smash them togethers\n* If `x == y`, both stones are destroyed\n* If `x < y`, the stone of weight `x` is destroyed, and the stone of weight `y` has new weight `y - x`.\n\nContinue the simulation until there is no more than one stone remaining.\n\nReturn the weight of the last remaining stone or return `0` if none remain.\n\n**Example 1:**\n\n```java\nInput: stones = [2,3,6,2,4]\n\nOutput: 1\n```\nExplanation: \nWe smash 6 and 4 and are left with a 2, so the array becomes [2,3,2,2].\nWe smash 3 and 2 and are left with a 1, so the array becomes [1,2,2].\nWe smash 2 and 2, so the array becomes [1].\n\n**Example 2:**\n\n```java\nInput: stones = [1,2]\n\nOutput: 1\n```\n\n**Constraints:**\n* `1 <= stones.length <= 20`\n* `1 <= stones[i] <= 100`\n","difficulty":"Easy","concepts":["Heap Properties","Push and Pop","Heapify"],"solutions":{"python":"class Solution:\n    def lastStoneWeight(self, stones: List[int]) -> int:\n        stones = [-s for s in stones]\n        heapq.heapify(stones)\n\n        while len(stones) > 1:\n            first = heapq.heappop(stones)\n            second = heapq.heappop(stones)\n            if second > first:\n                heapq.heappush(stones, first - second)\n\n        stones.append(0)\n        return abs(stones[0])\n","javascript":"/**\n * const { MaxPriorityQueue } = require('@datastructures-js/priority-queue');\n */\n\nclass Solution {\n    /**\n     * @param {number[]} stones\n     * @return {number}\n     */\n    lastStoneWeight(stones) {\n        // Create a MaxPriorityQueue\n        const maxPQ = new MaxPriorityQueue();\n\n        // Add all stones to the priority queue\n        for (const stone of stones) {\n            maxPQ.enqueue(stone);\n        }\n\n        // Continue until there is one or no stones left in the queue\n        while (maxPQ.size() > 1) {\n            // Extract the two heaviest stones\n            const stone1 = maxPQ.dequeue();\n            const stone2 = maxPQ.dequeue();\n\n            // If they are not the same weight, push the difference back into the queue\n            if (stone1 !== stone2) {\n                maxPQ.enqueue(stone1 - stone2);\n            }\n        }\n\n        // If there is one stone left, return its weight; otherwise, return 0\n        return maxPQ.size() === 1 ? maxPQ.dequeue() : 0;\n    }\n}\n","cpp":"class Solution {\npublic:\n    int lastStoneWeight(vector<int>& stones) {\n        priority_queue<int> maxHeap;\n        for (int s : stones) {\n            maxHeap.push(s);\n        }\n\n        while (maxHeap.size() > 1) {\n            int first = maxHeap.top();\n            maxHeap.pop();\n            int second = maxHeap.top();\n            maxHeap.pop();\n            if (second < first) {\n                maxHeap.push(first - second);\n            }\n        }\n\n        maxHeap.push(0);\n        return maxHeap.top();\n    }\n};\n","java":"class Solution {\n    public int lastStoneWeight(int[] stones) {\n        PriorityQueue<Integer> minHeap = new PriorityQueue<>();\n        for (int s : stones) {\n            minHeap.offer(-s);\n        }\n\n        while (minHeap.size() > 1) {\n            int first = minHeap.poll();\n            int second = minHeap.poll();\n            if (second > first) {\n                minHeap.offer(first - second);\n            }\n        }\n\n        minHeap.offer(0);\n        return Math.abs(minHeap.peek());\n    }\n}\n","csharp":"public class Solution {\n    public int LastStoneWeight(int[] stones) {\n        PriorityQueue<int, int> minHeap = new PriorityQueue<int, int>();\n        foreach (int s in stones) {\n            minHeap.Enqueue(-s, -s);\n        }\n\n        while (minHeap.Count > 1) {\n            int first = minHeap.Dequeue();\n            int second = minHeap.Dequeue();\n            if (second > first) {\n                minHeap.Enqueue(first - second, first - second);\n            }\n        }\n\n        minHeap.Enqueue(0, 0);\n        return Math.Abs(minHeap.Peek());\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def lastStoneWeight(self, stones: List[int]) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} stones\n     * @return {number}\n     */\n    lastStoneWeight(stones) {}\n}\n","cpp":"class Solution {\npublic:\n    int lastStoneWeight(vector<int>& stones) {\n        \n    }\n};\n","java":"class Solution {\n    public int lastStoneWeight(int[] stones) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int LastStoneWeight(int[] stones) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/B-QCq79-Vfw","embedding":[0.03852728,-0.0032407816,0.04895572,-0.031019771,-0.012625168,0.0087265745,-0.02681943,0.00277458,-0.010428437,0.037223727,0.040386055,-0.02930584,-0.09081431,-0.035364956,0.020627545,0.083910294,0.01438738,-0.006855732,-0.05822544,0.037803084,-0.0051629213,0.032178488,0.055280373,-0.025540015,0.05349402,-0.0007396616,0.041786168,-0.0070790257,0.03191295,0.025515875,0.034182098,-0.012890707,-0.0057332264,0.016499622,0.013892513,0.04359666,-0.018587723,0.022015588,0.00843086,-0.003856349,-0.0129389865,-0.03338548,-0.028219543,-0.013289015,-0.023427773,0.023620892,0.015799565,0.0040886956,0.025443455,0.001872351,0.0143511705,0.005503897,0.0032468166,0.002567882,0.0060772197,-0.056487367,0.02410369,0.023186374,0.027543627,-0.0107422555,0.0051086065,0.0059142755,0.027109109,-0.002107715,-0.020180957,-0.025177917,0.039927397,0.040192936,-0.01231135,-0.030705953,-0.049341958,0.04299316,-0.007954097,-0.01676516,-0.06068771,-0.01447187,0.010374122,0.056439087,0.014785689,0.0033614812,-0.048641898,-0.008117042,0.020603405,0.00870847,0.00425164,-0.02698841,-0.020084398,-0.027253948,-0.040579174,-0.017597988,-0.015968544,-0.02178626,0.0294024,0.03620985,0.005582352,-0.052093904,0.07705456,0.040772293,0.006300514,-0.028557502,0.02182247,-0.035461515,0.023886431,-0.005706069,0.021882819,0.040289495,0.025467595,0.013132106,-0.030802513,-0.002202766,-0.017477289,-0.013385575,-0.034302797,0.021122413,-0.027374648,-0.035727054,-0.04103783,-0.018346325,0.050114434,-0.017634198,0.03676507,0.02158107,-0.032975104,-0.02636077,-0.029861057,0.042800043,0.055280373,-0.04895572,0.008829169,-0.015280557,0.037006468,-0.032806125,0.05388026,-0.016185803,-0.002079049,-0.010090479,-0.030971492,0.035099417,0.03879282,0.035461515,0.027688466,0.02884718,-0.058128882,-0.019082591,0.028002284,0.016439272,0.015775425,0.04649345,-0.009179197,0.05112831,0.05846684,0.011146599,0.042462084,0.045696832,0.0013050634,-0.021363812,0.04444156,0.022775996,0.013651114,-0.0444657,0.000295148,-0.014230471,0.0137476735,0.0008018973,0.04330698,0.032854404,0.0005880329,-0.023850221,-0.025129637,-0.059335876,0.042365525,-0.030826652,0.02422439,-0.006553983,0.0027730712,-0.019505039,-0.028581642,-0.025250336,-0.05542521,-0.0033675162,-0.033192363,-0.0083282655,0.006849697,-0.003780912,0.032806125,-0.008593804,0.020217167,-0.012830357,-0.0007162761,0.027785026,0.005588387,0.031116331,0.00066686474,0.009185232,0.0035455478,-0.015328837,0.028147124,0.027109109,-0.007978237,0.0039559263,-0.021243112,0.019565389,0.0060742022,0.010108584,0.046927966,-0.06083255,-0.013095896,0.03640297,0.002249537,-0.01086899,0.0013933249,0.005899188,0.0633431,-0.0074049146,0.009348176,0.046783127,0.020591335,-0.022510458,-0.0033343239,0.07884092,0.00016237855,0.04330698,-0.011629397,0.035775334,-0.016113384,-0.033071663,0.04132751,0.0041188705,0.068412475,-0.00419129,-0.017513499,0.013156245,0.0032075893,0.00302654,0.014532221,-0.0061918846,-0.002943559,-0.010199108,0.016584111,-0.05600457,-0.0052262885,-0.035461515,0.0292817,-0.0061526573,-0.011707852,0.0047947876,-0.034689035,0.035220116,-0.027881585,0.040941272,0.04608307,-0.03353032,0.040675733,-0.053349182,-0.04330698,0.02224492,-0.017622128,-0.015497816,0.03169569,-0.032709565,-0.033192363,0.0021212937,-0.035727054,-0.042655203,0.00045337752,-0.017211748,0.02424853,0.032637145,-0.023403633,0.040192936,-0.0038050518,0.039975677,-0.010150828,-0.012136335,0.008050657,-0.042944882,0.006300514,-0.044586398,-0.0032950963,-0.04639689,-0.032395747,-0.007893748,0.009088673,0.0032166417,0.022510458,-0.0017380728,-0.04881088,0.024719259,0.032950964,0.0004937364,-0.007042816,-0.0025663732,0.03162327,0.025467595,-0.027833305,0.0050844667,-0.02920928,0.0037537545,0.039299756,-0.037658244,0.03628227,-0.0241399,0.015039158,0.03159913,-0.019999908,-0.047193505,0.023669172,-0.02393471,-0.03676507,0.026674591,0.0041490453,0.059480716,-0.016209943,0.030030036,-0.02660217,-0.05392854,0.02202766,-0.015377116,-0.022389758,0.00047412273,0.032444026,-0.022413898,0.06773656,0.028171264,0.06532257,-0.0048249625,0.008986078,0.0048068576,0.010036164,-0.044731237,-0.026119372,-0.0062220595,0.0013797462,-0.009293862,-0.032661285,0.03874454,0.022425968,0.0031894844,0.00839465,0.043789778,-0.005730209,-0.010639661,0.045648552,-0.0017184592,0.015847845,-0.009849079,0.056294248,-0.009366281,-0.025008937,-0.014158051,0.010470682,0.023101885,0.022872556,0.0060742022,0.011044005,-0.008497245,-0.04637275,0.017766967,-0.02640905,-0.018020436,-0.007996342,-0.00960768,-0.025298616,-0.02415197,-0.009975814,0.017561778,-0.0013706937,-0.02657803,0.014013212,0.01978265,-0.028654061,0.042124126,-0.008642084,-0.009384386,0.0030657675,0.012878637,-0.009173162,0.035437375,0.039179057,0.010561206,-0.026215931,0.042679343,0.0038593665,-0.0062160245,0.040579174,0.052238744,0.026191792,0.046855547,-0.035533935,-0.05407338,0.0535423,-0.03340962,0.01468913,0.017175538,0.05610113,-0.019541249,0.05262498,0.020881014,-0.020506846,-0.0019538233,-0.017260028,-0.003874454,0.005736244,-0.005736244,0.0019477882,-0.07459229,-0.03958944,0.030319715,0.010247388,-0.035920173,-0.004879277,0.045624413,0.010247388,-0.01919122,-0.006300514,-0.0585634,0.015582305,0.0027594925,-0.011556977,-0.03838244,-0.04340354,-0.020820664,0.076330364,-0.012305315,0.02211215,0.017622128,-0.021919029,-0.030778373,0.051417988,-0.017127259,0.034592476,0.023295004,0.029740358,-0.017827317,-0.0487626,0.060011793,-0.028316103,0.0492454,0.018696353,-0.049631637,-0.036909908,-0.05581145,-0.017127259,0.02404334,-0.026071092,-0.035002857,0.005223271,0.018768772,0.037127167,-0.0018059663,0.068219356,-0.026215931,0.054363057,0.029885197,-0.025443455,-0.0063910387,-0.0019870156,0.033023383,0.02170177,0.029716218,0.02399506,-0.008104972,-0.00010382043,-0.004010241,0.023053605,-0.023427773,0.034664895,0.0057694362,-0.02185868,-0.011182809,0.040313635,-0.0144598,-0.032178488,0.014073562,-0.029957617,-0.03181639,-0.006282409,0.027326368,-0.008817099,-0.014339101,-0.017718688,-0.049969595,-0.005274568,-0.0027066863,-0.010875025,0.023898501,0.027157389,0.000048751284,-0.00849121,-0.003162327,0.004547354,-0.025612434,0.021424161,-0.011955285,0.040192936,-0.0035395129,0.010301703,-0.01085692,0.010162898,-0.0430173,0.013699394,-0.04596237,-0.06059115,0.03954116,0.017163469,0.00074381067,-0.01942055,0.0387204,0.037561685,0.022631157,0.01919122,-0.007718733,0.020820664,0.020555126,0.020844804,0.02395885,0.0073988796,0.0062522343,0.01979472,-0.005817716,-0.00008161361,0.01437531,0.00551295,-0.006566053,-0.023765732,-0.005642702,-0.035992593,0.035026997,-0.016499622,0.013168315,-0.055038974,-0.011786306,-0.0052896556,0.025491735,-0.008111007,0.011641467,0.029716218,-0.037634104,-0.005322848,0.0036179675,0.009830974,0.039034218,0.0018421762,0.01943262,0.004809875,-0.01913087,0.03480974,0.032709565,-0.011345753,-0.052287024,-0.015099508,-0.037827224,-0.02409162,-0.047555603,0.009999954,-0.022607017,-0.021194832,0.025008937,0.027591906,0.06479149,-0.021315532,-0.023210514,0.023162235,0.01680137,-0.023162235,0.008967973,0.012395839,0.05754952,0.028485082,0.013264875,0.017948017,0.021279322,-0.0012763973,-0.031068051,0.039130777,-0.013651114,-0.018539444,-0.005042222,0.032419886,-0.024658909,-0.006837627,-0.027084969,-0.040048096,0.0027821236,-0.011810446,0.011991495,0.010259458,0.013675254,0.0076463134,0.010983654,-0.0066988226,-0.019686088,0.037537545,0.015678866,0.008044622,-0.01466499,0.000042433418,0.016366852,0.020205097,0.010488787,0.01922743,-0.002961664,0.028388523,0.022715647,-0.011387998,-0.00059972564,0.03946874,0.029812777,-0.0073868097,0.030440414,0.020313727,-0.023295004,-0.01981886,-0.0051659388,0.022981185,-0.027302228,0.0028409646,0.039203197,0.025419315,-0.028074704,0.009806834,0.01932399,0.04632447,-0.016065104,0.019601598,0.020144748,-0.05320434,0.016161663,-0.013192455,0.04844878,-0.00839465,0.008575699,-0.037440985,-0.008865379,-0.0033463938,0.018249765,-0.021339672,-0.01917915,-0.0010485769,-0.040434334,0.0638259,-0.014278751,0.019010171,-0.04152063,0.017803177,0.025008937,-0.01740487,-0.0049003996,-0.015449536,-0.020096468,-0.010090479,0.018672213,0.011550942,-0.032637145,-0.0029133842,0.023053605,-0.017742828,-0.037754804,0.0076764883,-0.040144656,-0.009203337,0.0029933476,0.010410332,0.047000386,0.006553983,-0.027278088,0.01683758,0.013216595,0.058080602,0.032757845,0.009167127,-0.0010463138,0.030102456,0.0010033146,-0.02947482,0.01442359,0.0066927876,-0.040458474,-0.05117659,-0.0015871985,0.012637238,0.011044005,-0.030995632,-0.0016068121,-0.0055793347,-0.020374076,0.0385997,-0.0042999196,-0.0147012,0.01443566,0.0070910957,-0.008967973,-0.049535077,-0.001468762,0.03174397,-0.0017456166,0.002026243,0.04917298,-0.00015634358,-0.056777045,0.0107422555,-0.02638491,-0.019698158,-0.0005510687,-0.06961948,0.0139528625,-0.008237741,0.015799565,0.01107418,0.014761549,-0.010217213,0.0061979196,0.00062160246,0.0011986969,-0.06034975,0.026167652,0.021460371,0.015389186,0.021387951,-0.04808668,0.010174968,0.032950964,0.0046197735,0.019492969,0.021931099,-0.006837627,-0.030826652,0.03198537,0.054314777,-0.009004183,-0.012721728,-0.017139329,-0.015570235,-0.01455636,-0.023898501,-0.021086203,-0.04354838,0.007489404,-0.013759743,-0.023113955,-0.022860486,0.008660189,0.01198546,-0.02458649,0.025974533,-0.025805553,-0.018008366,0.008237741,-0.04130337,-0.028243683,0.017585918,0.007760978,0.0009829466,0.01922743,0.032661285,0.038044482,0.006348794,0.0086964,-0.022522528,0.004834015,-0.027760886,-0.011424208,0.0066927876,-0.018394604,0.030826652,0.048569478,-0.018865332,0.014278751,0.0026478453,0.0031864669,0.0109414095,-0.002850017,0.008195496,0.0037718595,-0.005117659,-0.039758418,-0.018901542,-0.04929368,-0.014870179,-0.026071092,0.00841879,0.008201531,-0.011689747,-0.01974644,0.021170693,0.02706083,0.050500672,0.021074133,0.041882727,0.002468305,-0.0533009,0.01447187,-0.029667938,-0.017151399,0.0036481426,0.0048249625,-0.009348176,0.0010259458,0.035171837,-0.005012047,-0.0013729568,0.008998148,0.03485802,-0.01691,-0.03188881,-0.0047314204,-0.015582305,-0.017851457,-0.009674065,0.0144598,0.00072117953,0.028050564,-0.032733705,0.0032407816,0.027157389,-0.0011051549,-0.032468166,-0.006366899,-0.003844279,0.05779092,-0.037127167,-0.010657766,-0.0048068576,0.008310161,0.022546668,-0.005374145,0.007483369,-0.0049516973,0.03118875,0.03949288,0.01676516,-0.0057090865,-0.045020916,0.026674591,0.037658244,0.015437466,0.024743399,0.016209943,-0.0012296261,0.0023189392,0.017791107,-0.0019945593,0.0015630586,-0.006547948,-0.018720493,0.015015018,0.02178626,0.02677115,0.02945068,-0.05547349,-0.016415132,0.004574511,0.019046381,-0.0029948563,-0.00017265687,-0.022607017,0.03408554,-0.017791107,0.012757937,-0.03635469,0.02875062,0.020736175,0.0042124125,-0.010983654,0.00015125156,0.0023989026,0.009981849,0.015606445,-0.03403726,0.0012552749,0.012407909,0.021062063,-0.010343947,-0.014797759,0.012649308,-0.004921522,-0.021400021,0.030440414,-0.011581117,-0.0020760314,0.045455433,-0.0147494795,-0.005292673,0.03850314,0.011653537,-0.026215931,0.0011504171,0.032588866,0.009324037,0.009348176,0.02150865,-0.013578694,-0.032419886,0.028243683,-0.01675309,0.015171927,0.040748153,-0.01462878,0.032999244,0.0024637787,0.03396484,-0.028485082,0.011810446,0.0061466224,0.02152072,-0.0037929818,0.0034670932,0.02930584,-0.0053711277,-0.011701817,0.052142184,-0.02681943,-0.009830974,0.008907624,0.040917132,-0.0007860555,0.0031140472,-0.005446565,0.051514547,-0.0016234083,0.0028485083,0.00029345066,0.028147124,0.007881678,0.020108538,-0.018732563,0.026167652,0.048569478,0.079371996,0.01704277,0.02706083,-0.0013495713,0.027278088,-0.00960768,-0.037658244,-0.005111624,-0.0034369184,0.0018979997,0.010633626,-0.029040301,-0.028533362,-0.041810308,-0.029643798,-0.033264782,-0.02452614,-0.018080786,0.03881696,-0.01674102,-0.002567882,0.02411576,0.039299756,-0.04164133,0.027471207,0.020241307,-0.021255182,-0.0070850607,-0.025805553,-0.01697035,-0.007911853,-0.00050090294,0.014978808,-0.032419886,0.027929865,0.02689185,0.0010538575,0.047700442,0.023270864,-0.040627453,0.022848416,-0.030923212,0.01922743,0.023572613,-0.015582305,-0.013820093,-0.034761455,-0.027350508,0.018515304,-0.012721728,0.009770624,-0.010199108,0.013759743,0.03169569,0.011683712,0.035630494,0.01691,0.0048189275,0.028219543,0.018479094,-0.0016777231,0.020168887,-0.0053017256,0.045286454,0.0044900216,0.020543056,0.030512834,0.01942055,0.007742873,0.0035727052,0.004197325,0.025515875,-0.00016869641,-0.0216897,0.034399357,-0.0045564063,0.0049788547,-0.061556745,0.0011270316,-0.02393471,-0.06595021,0.0046137385,-0.0026357754,-0.036089152,-0.013795953,-0.006541913,-0.00841879,-0.020084398,-0.02640905,-0.012371699,-0.015425396,-0.04579339,-0.0005420162,0.0015660761,-0.03114047,0.002803246,-0.015449536,0.0023868326,0.02923342,-0.0069100466,-0.012027705,0.0289196,0.00247434,0.009408526,0.004604686,0.008907624,-0.0095352605,0.023307074,0.04634861,-0.0143511705,-0.005754349,-0.00079284486,-0.021424161,-0.014218401,0.028050564,0.011303509,-0.0014189736,0.007869608,0.000011333259,0.0011760658,0.003780912,-0.000730232,-0.024767539,0.039734278,-0.04342768,-0.015896125,0.008497245,0.015485746,0.026215931,0.009613715,0.001407658,0.01938434,0.014930529,-0.02887132,-0.010241353,-0.027350508,0.011496628,0.009879255,0.0069402214,0.00054050743,-0.030826652,-0.0017652302,-0.011249194,-0.019613668,0.010313773,0.04168961,-0.018515304,-0.013651114,-0.049969595,0.001961367,0.0013344839,0.013675254,0.0129510565,-0.010265493,-0.010669836,0.0073868097,-0.009396456,-0.0028168247,0.0083343005,-0.03169569,-0.022908766,0.012576888,0.018732563,0.033337202,-0.004480969,-0.03203365,0.004640896,-0.009468876,-0.009722345,-0.0131441755,-0.022329409,0.005298708,-0.008014447,-0.00031815635,-0.01698242,-0.02404334,-0.011822516,-0.016378922,-0.025902113,0.034447636,-0.012468259,-0.02218457,0.018479094,-0.0049124695,-0.01974644,0.01926364,-0.01437531,-0.034254517,-0.021206902,-0.0056577893,-0.020193027,-0.030826652,-0.0029812776,0.004028346,-0.022510458,0.03857556,-0.035220116,0.0016943193,0.000009977747,-0.022522528,-0.021894889,0.006360864,0.017260028,-0.066191606,-0.030705953,-0.06039803,-0.07227486,-0.02698841,-0.020989643,-0.02170177,-0.032830264,0.0069402214,-0.022920836,-0.034616616,-0.0024713224,-0.014037352,0.006360864,0.014085632,0.015051228,0.072130024,0.018479094,-0.0036481426,-0.02400713,-0.0015615498,-0.013457995,0.00988529,-0.025733134,0.0071212705,-0.016113384,-0.011309544,-0.004722368,-0.004710298,-0.023077745,-0.012444119,0.02405541,-0.01473741,0.029643798,-0.01939641,0.01698242,-0.039082497,-0.004785735,-0.007760978,-0.016330643,-0.016222013,-0.012293245,-0.016487552,0.0771994,-0.018491164,0.016222013,0.0030929248,0.013047616,-0.008147216,0.0066746827,-0.036065012,0.0043421644,0.010277563,0.016053034,-0.018817052,-0.00006624328,-0.01202167,0.05875652,-0.0015615498,0.037585825,0.046662427,0.0013525888,-0.02441751,-0.021255182,-0.0018180363,-0.0096801,0.0054133725,-0.0047495253,0.040386055,-0.004942645,-0.008014447,-0.0002496971,0.016632391,-0.0055280374,-0.0001397474,0.0045775287,0.008557594,-0.03350618,-0.047483183,0.043982897,-0.00089996564,0.006777277,-0.011756131,-0.011116425,-0.05547349,-0.007368705,-0.014278751,-0.001180592,0.020108538,0.032516446,0.025998672,-0.016366852,-0.05112831,0.017851457,-0.023029465,-0.02455028,0.0013556062,0.030343855,-0.0062039546,-0.0014680077,-0.030754233,-0.014882249,0.035340816,0.03637883,-0.0012552749,-0.02421232,-0.027760886,0.03398898,-0.017561778,-0.013892513,0.017610058,-0.028219543,-0.016390992,0.025371036,-0.018829122,0.0025361984,0.032081928,0.01439945,0.009239547,-0.009149022,-0.012088055,0.020168887,0.02162935,-0.019022241,-0.005799611,-0.025612434,0.0057724537,0.03686163,0.059915233,0.019975768,0.0032588865,0.007048851,0.0066445074,0.027519487,-0.02638491,-0.020108538,0.02913686,0.00013474967,-0.008310161,-0.012419979,0.023705382,0.020168887,-0.0037778944,0.042510364,0.030561114,-0.015666796,0.012697588,0.009179197,0.022739787,0.00007406989,-0.017332448,0.02207594,-0.024864098,-0.004903417,-0.010555171,0.016668601,-0.02643319,-0.020687895,-0.011804411,-0.008014447,-0.01942055,0.034520056,0.0073928447,-0.0055672647,-0.003681335,0.018370464,0.0013797462,-0.018877402,0.0383583,-0.0095412955,0.001578146,-0.021074133,0.008098937,-0.017115189,-0.010790535,-0.0016068121,0.0031864669,-0.008889519,0.0052081835,0.0336993,0.0340614,0.008889519,-0.020856874,0.011430243,0.009167127,-0.0123294545,-0.02947482,-0.003856349,0.02415197,-0.010271528,0.0029133842,0.0041430104,0.0131441755,-0.036982328,-0.022872556,0.045479573,-0.004296902,0.0031412046,-0.015135718,0.00064574234,0.018913612,-0.011671642,-0.00616171,-0.019480899,-0.010633626,0.0064332834,-0.0033614812,-0.013023476,0.024767539,-0.050307553,-0.02207594,0.004897382,-0.028533362,-0.011418173,-0.034230378,0.030416274,0.045431294,0.0057030516,-0.041979287,0.015871985,0.0037386671,-0.010693976,0.01688586,-0.035799474,-0.010518962,0.0014717795,0.052528422,-0.010174968,-0.00028590695,0.02223285,0.023645032,0.014133912,-0.013421785,-0.017260028,0.014761549,0.015908195,-0.020929294,-0.00088110636,-0.010862955,0.01437531,-0.0076342435,-0.025129637,0.0017471253,-0.017320378,0.0009784204,-0.02444165,0.010591381,-0.009022288,-0.008835204,-0.0031170647,0.003986101,-0.009493016,-0.01447187,-0.009505086,0.01448394,0.015401256,0.002202766,0.02175005,-0.01472534,0.00071061833,-0.00012946907,-0.023596752,-0.012697588,0.012088055,-0.0016279345,0.02170177,0.004197325,0.011237124,0.0055672647,0.010277563,0.041737888,0.021303462,0.021460371,-0.0014989369,-0.020072328,0.013421785,0.011581117,0.0050392044,-0.0013563606,-0.0153529765,0.02645733,-0.0049516973,-0.0019885243,0.022281129,-0.006022905,-0.02686771,-0.045189895,0.002066979,-0.012770007,-0.016294433,-0.019855069,0.012782077,0.008756749,-0.025612434,-0.004028346,-0.032757845,0.069764316,-0.035413235,-0.06377762,-0.008913659,-0.012371699,0.017187608,0.008889519,0.026288351,0.06720548,-0.004152063,0.057163283,0.0056909816,0.03855142,0.016282363,-0.013289015,-0.030561114,0.00960768,-0.012576888,-0.009360246,0.004930575,-0.020217167,0.0060048,0.014194261,-0.030730093,0.017380727,-0.005998765,0.015509886,0.027084969,-0.013808023,0.02218457,-0.035364956,-0.0066927876,0.00058048917,0.0243813,-0.00095428043,0.016246153,-0.004821945,-0.017211748,-0.027181529,0.006553983,0.010651731,-0.0139407925,0.00958354,0.02220871,-0.0631017,0.0061526573,-0.011731992,-0.020193027,0.004417602,-0.0060772197,-0.02405541,-0.00042320264,-0.015389186,0.011176774,-0.0031019773,0.018225625,0.027833305,0.018322185,0.03123703,-0.00988529,0.011659572,-0.023403633,-0.012806217,0.0046077035,-0.0035817577,0.009589575,-0.0053379354,-0.0040494683,-0.0044628642,0.03686163,0.0005816207,0.04849706,-0.016258223,-0.023584682,-0.0040645557,0.017561778,0.009106778,-0.01689793,-0.01209409,-0.044755377,-0.03954116,0.020772384,0.028412662,0.03350618,-0.01438738,-0.049486797,0.020289587,0.0036421076,0.02691599,-0.0147494795,0.017960086,0.02872648,0.00052994624,0.013602834,0.025564155,0.0023943763,-0.008762784,0.0044900216,0.03121289,0.025660714,0.013844233,-0.011919076,0.0028711394,-0.03401312,0.005847891,0.0033403588,-0.01689793,0.018430814,0.027157389]},{"id":"k-closest-points-to-origin","name":"K Closest Points to Origin","description":"You are given an 2-D array `points` where `points[i] = [xi, yi]` represents the coordinates of a point on an X-Y axis plane. You are also given an integer `k`.\n    \nReturn the `k` closest points to the origin `(0, 0)`. \n\nThe distance between two points is defined as the Euclidean distance (`sqrt((x1 - x2)^2 + (y1 - y2)^2))`.\n\nYou may return the answer in **any order**.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/ffe90895-5c8e-47f1-6719-d5c0f656d700/public)\n\n```java\nInput: points = [[0,2],[2,2]], k = 1\n\nOutput: [[0,2]]\n```\n\nExplanation : The distance between `(0, 2)` and the origin `(0, 0)` is `2`. The distance between `(2, 2)` and the origin is `sqrt(2^2 + 2^2) = 2.82842`. So the closest point to the origin is `(0, 2)`.\n\n**Example 2:**\n\n```java\nInput: points = [[0,2],[2,0],[2,2]], k = 2\n\nOutput: [[0,2],[2,0]]\n```\n\nExplanation: The output `[2,0],[0,2]` would also be accepted.\n\n**Constraints:**\n* `1 <= k <= points.length <= 1000`\n* `-100 <= points[i][0], points[i][1] <= 100`\n","difficulty":"Medium","concepts":["Heap Properties","Push and Pop","Heapify"],"solutions":{"python":"class Solution:\n    def kClosest(self, points: List[List[int]], k: int) -> List[List[int]]:\n        minHeap = []\n        for x, y in points:\n            dist = (x ** 2) + (y ** 2)\n            minHeap.append((dist, x, y))\n        \n        heapq.heapify(minHeap)\n        res = []\n        for _ in range(k):\n            _, x, y = heapq.heappop(minHeap)\n            res.append((x, y))\n        return res\n","javascript":"/**\n * const { MinPriorityQueue } = require('@datastructures-js/priority-queue');\n */\n\nclass Solution {\n    /**\n     * @param {number[][]} points\n     * @param {number} k\n     * @return {number[][]}\n     */\n    kClosest(points, k) {\n        const minHeap = new MinPriorityQueue(point => point[0]);\n\n        for (const [x, y] of points) {\n            const dist = x ** 2 + y ** 2;\n            minHeap.enqueue([dist, x, y]);\n        }\n\n        const res = [];\n        for (let i = 0; i < k; i++) {\n            const [_, x, y] = minHeap.dequeue();\n            res.push([x, y]);\n        }\n\n        return res;\n    }\n}\n","cpp":"class Solution {\npublic:\n    vector<vector<int>> kClosest(vector<vector<int>>& points, int K) {\n        auto comp = [](const vector<int>& a, const vector<int>& b) {\n            return a[0]*a[0] + a[1]*a[1] > b[0]*b[0] + b[1]*b[1];\n        };\n        \n        priority_queue<vector<int>, vector<vector<int>>, decltype(comp)> minHeap(comp);\n\n        for (const auto& point : points) {\n            minHeap.push({point[0], point[1]});\n        }\n\n        vector<vector<int>> result;\n        for (int i = 0; i < K; ++i) {\n            result.push_back(minHeap.top());\n            minHeap.pop();\n        }\n        return result;\n    }\n};\n","java":"class Solution {\n    public int[][] kClosest(int[][] points, int K) {\n        PriorityQueue<int[]> minHeap = new PriorityQueue<>(Comparator.comparing(a -> a[0]));\n        for (int[] point : points) {\n            int dist = point[0] * point[0] + point[1] * point[1];\n            minHeap.offer(new int[]{dist, point[0], point[1]});\n        }\n\n        int[][] result = new int[K][2];\n        for (int i = 0; i < K; ++i) {\n            int[] point = minHeap.poll();\n            result[i] = new int[]{point[1], point[2]};\n        }\n        return result;\n    }\n}\n","csharp":"public class Solution {\n    public int[][] KClosest(int[][] points, int K) {\n        PriorityQueue<int[], int> minHeap = new PriorityQueue<int[], int>();\n        foreach (int[] point in points) {\n            int dist = point[0] * point[0] + point[1] * point[1];\n            minHeap.Enqueue(new int[] { dist, point[0], point[1] }, dist);\n        }\n\n        int[][] result = new int[K][];\n        for (int i = 0; i < K; ++i) {\n            int[] point = minHeap.Dequeue();\n            result[i] = new int[] { point[1], point[2] };\n        }\n        return result;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def kClosest(self, points: List[List[int]], k: int) -> List[List[int]]:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[][]} points\n     * @param {number} k\n     * @return {number[][]}\n     */\n    kClosest(points, k) {}\n}\n","cpp":"class Solution {\npublic:\n    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {\n        \n    }\n};\n","java":"class Solution {\n    public int[][] kClosest(int[][] points, int k) {\n        \n\n    }\n}\n","csharp":"public class Solution {\n    public int[][] KClosest(int[][] points, int k) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/rI2EBUEMfTk","embedding":[-0.016897714,0.006092448,0.043662544,-0.02344268,-0.013343785,-0.04639973,-0.024943717,0.030992018,-0.03761424,0.033839576,0.011279858,-0.037901208,-0.051256027,-0.017151564,0.041190244,-0.014359193,0.013520378,0.015683638,0.0025950847,0.055052772,-0.02030816,0.028939128,0.05527351,-0.010159599,0.050505508,0.016069936,0.0049335584,0.0054633366,0.021080753,-0.0018211121,0.04573751,-0.019005788,-0.023111569,-0.012604304,0.0075824484,0.031830832,-0.042271875,0.052315585,0.0045031137,0.032713797,-0.010755599,-0.03213987,-0.07328597,-0.05893781,0.0058772257,-0.019038899,-0.0016321028,0.0022405197,0.0022267234,0.030528462,-0.018222159,0.035141945,0.0116661545,-0.01045208,0.0053888364,0.0019052696,-0.0012637414,0.028674237,0.07191737,0.0019273437,0.05483203,-0.0013534174,0.0021729178,0.035097796,0.0069478187,-0.025230682,0.012405637,0.018851269,-0.020186752,-0.023420606,-0.06728181,0.025318976,-0.019679047,-0.02355305,-0.02355305,-0.030396016,-0.003829854,0.044479284,0.0149331195,0.008117746,0.01437023,-0.050196473,0.04684121,0.0074113747,-0.03057261,-0.029866239,0.0042520207,0.008117746,-0.049181063,-0.04317691,-0.034479722,-0.0091165975,0.036665056,0.021378752,0.014171563,0.018155936,0.067590855,-0.022802532,-0.029159868,0.007731449,0.0019852882,-0.01534149,-0.004340317,-0.0033607797,0.029689645,0.021643642,-0.016522454,0.04542847,-0.016047861,0.026113644,-0.043839134,0.0013720425,-0.005882744,0.040594246,-0.016710084,-0.022151345,-0.031146536,-0.00069671334,0.025848756,0.02814446,0.02079379,0.009144191,-0.028541794,-0.008708227,-0.041146096,0.016776305,0.047944915,-0.026753793,0.008007375,-0.00586067,-0.00086571806,-0.01045208,0.026665496,0.011026006,-0.012516007,-0.021831272,-0.021566382,0.008470931,0.049843285,-0.033972017,0.014955194,0.0021108345,-0.043353505,0.014127416,0.016390009,0.04542847,-0.02863009,0.044832468,0.021378752,0.04017484,0.037194837,0.049843285,0.063926555,0.05898196,-0.051829956,-0.031830832,0.014999341,0.0046493546,0.026003273,0.03068298,-0.0077811154,-0.035561353,0.035936613,0.012184896,0.00017848969,-0.009011745,-0.019800456,-0.00014598214,-0.039689206,-0.07469871,0.003965058,-0.06935678,0.015705712,0.06701693,0.002236381,0.017383343,-0.04266921,-0.02571631,-0.030307721,0.019226529,-0.046046544,0.0076873004,-0.0029689646,-0.03191913,0.028056163,0.060218107,0.008134301,-0.03785706,0.008956561,0.026422681,-0.01799038,0.012847118,-0.016588677,0.046267286,-0.0023495106,-0.012703637,0.0070747444,-0.030638833,-0.05703944,0.0031621128,-0.047503434,0.012957489,-0.010363784,-0.03463424,0.022824606,-0.032757945,-0.008371597,0.017946232,-0.010827339,-0.008283301,-0.008239153,-0.006898152,0.043419726,0.03127898,0.017968306,0.024855422,-0.037834983,0.014679267,-0.026665496,0.090415455,-0.06043885,0.040307283,0.011897933,0.0639707,0.0386738,0.0116661545,0.036444318,-0.008366079,0.062646255,0.035826243,-0.037503872,-0.030020757,0.0137080075,0.00048459516,0.028078238,-0.032206092,-0.016036823,-0.03979958,-0.057304326,-0.034722537,0.030241499,-0.034545947,-0.017537862,0.010810784,0.0067105223,-0.03187498,-0.028431423,0.0060979663,-0.03721691,-0.0014237786,0.031676315,-0.057392623,0.016290676,-0.053949066,-0.006583596,0.006539448,0.014756527,-0.006125559,0.0055378363,-0.055229366,-0.029380608,0.021213196,-0.015628453,-0.072358854,-0.013365859,-0.019491417,-0.009375968,0.031146536,-0.035495132,0.0029882793,-0.03785706,-0.011401266,0.020197788,-0.010733524,0.0012285608,-0.02079379,-0.0036311871,-0.019656973,-0.014204674,-0.12697014,-0.024943717,0.007174078,0.052845363,-0.014094304,0.06255796,-0.019049937,0.0036422242,0.018785048,0.0037581131,-0.019612826,-0.024480162,-0.0039705765,-0.035031576,0.047194395,-0.004751447,-0.02236105,-0.036620907,-0.01855327,0.035362687,-0.032824166,-0.0012499451,-0.033839576,0.002142566,0.027857497,-0.047150247,-0.041035727,0.06551589,0.0006177295,-0.037724614,0.016787343,-0.0202309,0.026599275,0.013674896,0.029049497,-0.04326521,-0.032559276,0.033839576,0.010667303,0.011136376,-0.042978246,0.018520158,-0.043706693,0.049445953,-0.008912412,0.0017010843,0.004696262,-0.0150324525,0.028872905,0.015374601,-0.0459141,-0.015363564,-0.0121738585,-0.01747164,0.0034877057,-0.061012775,0.0495784,0.019579714,0.005893781,0.0005639239,0.0023950383,-0.019458307,0.0229129,0.023023272,0.005982077,0.016478306,0.031742536,0.036753353,0.0020804827,0.01134608,-0.010159599,-0.043618396,-0.013012674,-0.017228825,0.035031576,0.010678339,-0.03642224,-0.05439055,-0.0018693992,-0.027702978,0.020352308,-0.022780458,-0.012295266,-0.027901646,-0.06918018,-0.01631275,0.031345204,-0.042183578,-0.07416893,-0.005904818,0.040263135,0.012703637,0.0518741,-0.010661784,-0.0058441143,-0.020252975,-0.0065118554,0.022383124,0.027460163,-0.009298709,-0.003333187,-0.044766247,-0.009353894,-0.024480162,0.014326082,0.031698387,0.042382244,0.029071571,0.025826681,-0.070725374,0.01896164,0.017118454,-0.022162383,0.035141945,-0.008653042,0.05778996,-0.01877401,0.05628892,0.02798994,-0.053595882,0.044148173,-0.030109053,-0.035561353,-0.040064465,0.011942081,-0.015981639,-0.044501357,-0.010512783,0.033022832,0.017195713,-0.058098994,0.011379192,0.011544747,0.009878154,-0.06357337,-0.0057061515,0.02176505,0.015308379,0.0059765587,-0.056862846,-0.019645937,-0.0036146317,0.005143262,0.03452387,0.018840233,-0.028453497,0.037724614,0.039402243,0.007979782,0.012118673,-0.0057502994,-0.008724783,0.016798379,0.02927024,0.01847601,0.0058882623,-0.00047735212,0.012681562,0.03311113,-0.023486828,-0.030881647,-0.04882788,-0.068694554,0.0007298245,0.01190897,-0.028188609,-0.032161944,0.053507585,0.020275049,0.037680466,0.038982835,0.022537641,-0.007858375,0.07434552,0.04586995,-0.025628014,-0.023376457,0.028056163,0.028872905,0.015694676,0.022438308,0.02247142,0.04662047,-0.021930605,0.007554856,0.0024046958,0.012284229,0.034921203,0.018851269,-0.015286305,0.011081192,0.041499283,-0.02684209,-0.032338537,0.023310235,0.018619493,-0.006103485,0.025517644,0.029181942,0.00002237588,0.017924158,-0.021566382,-0.03127898,-0.052006546,-0.009166264,0.018674677,0.0040781875,0.05597988,0.019105121,-0.02250453,-0.009602227,-0.061233517,0.0071906336,-0.012825044,-0.008906893,0.015507045,0.034545947,0.008150856,0.0105458945,-0.0059875958,-0.018155936,0.000645667,-0.015705712,-0.010032672,0.02889498,-0.036576763,0.03869587,-0.013343785,-0.024016606,0.01836564,0.013089933,-0.025296902,0.016974973,-0.010060265,-0.012626377,0.027945794,0.036753353,0.009491857,-0.012825044,-0.021599494,0.05293366,-0.02004327,-0.0026778625,-0.039534688,-0.0027385664,-0.017383343,-0.006489781,-0.016246527,0.0109542655,-0.038519282,-0.019038899,-0.019436233,-0.0059379293,-0.026775867,0.047459286,-0.019480381,0.0045555397,0.028078238,-0.04326521,0.044832468,-0.016445193,0.008393671,0.025142385,-0.0064566704,-0.012571192,0.002083242,-0.010816302,0.044655878,0.03333187,-0.015529119,-0.023530977,-0.017118454,-0.012229044,-0.027040755,0.004919762,0.0011361256,-0.03456802,-0.06229307,0.030594684,0.0008270884,0.019237567,-0.0075107077,0.00966845,0.013619712,0.0005083938,-0.0062469663,0.0136086745,0.035627574,0.0052205212,0.006528411,-0.0081067085,0.010407932,-0.037503872,-0.01914927,-0.052050695,0.031411424,-0.0074996706,0.0020294364,0.01142334,0.028254831,0.0062690405,-0.014502674,0.055361807,-0.020782752,0.003840891,-0.023972457,-0.03553928,-0.011489562,0.026665496,0.003090372,-0.011478525,0.0028999832,-0.0059875958,0.023840014,-0.0036256686,0.008310894,-0.006506337,-0.04882788,-0.022416234,0.010181672,-0.011026006,0.0018638807,0.042647135,-0.020032233,-0.03761424,-0.004566577,0.01731712,0.0062690405,0.04207321,-0.008415746,0.01601475,0.0007670745,0.0030103535,-0.000070921626,0.008090152,0.017405417,-0.030506387,-0.008603375,-0.016632823,0.04052802,-0.041101947,0.025407273,0.019877715,-0.007979782,0.04013069,0.019844603,0.019469345,-0.04909277,-0.0047459286,-0.03869587,0.020617196,-0.036488466,0.018575344,-0.020815864,0.018431863,-0.014160526,-0.006075892,0.02306742,-0.0098340055,-0.026510978,-0.018001417,0.020462679,0.0022474178,0.02295705,-0.0062414478,0.02792372,0.02063927,-0.0150324525,0.015816083,-0.019623863,0.0014141211,0.016654897,-0.0042547802,-0.01918238,-0.026179867,0.014480601,0.031080313,0.007118893,-0.06185159,0.016401047,-0.017449565,-0.0033469833,-0.00712993,-0.00006479952,-0.006136596,0.028674237,-0.03721691,0.008321931,0.028431423,0.09226968,-0.010849413,-0.0023950383,0.0031234832,0.028166534,-0.017405417,0.031058239,-0.01041345,0.008134301,-0.02982209,-0.05147677,-0.004848021,-0.010959784,0.010424487,-0.035936613,0.04423647,0.0031786684,-0.023862088,-0.0019935658,0.012913341,-0.018354602,-0.006423559,0.022217568,0.000507704,-0.029049497,0.0066387816,0.021720901,-0.011853784,0.012118673,0.018895417,-0.00421891,-0.049004473,0.025186533,-0.014822749,0.0048618177,0.00081122265,-0.015451861,-0.01172134,0.01590438,0.015109712,0.027084904,0.0077645597,0.036819577,-0.022129271,-0.013454156,-0.0059765587,-0.06648715,0.017604085,-0.0070030037,0.021820234,0.027857497,-0.023641346,-0.0032090202,0.029159868,-0.01582712,0.0073672263,-0.011136376,0.03057261,0.021489123,0.00062842167,0.033640906,-0.026820015,0.0078031896,-0.007450004,0.025561793,0.014480601,-0.0055930214,-0.02922609,-0.03218402,-0.008493004,-0.0379895,-0.004803873,-0.03710654,-0.0036449835,0.043706693,0.01855327,0.062867,-0.009762265,-0.0069643743,-0.0028503165,-0.011152932,0.016820453,-0.015496009,0.0053915954,0.002635094,0.035450984,0.021367716,0.03456802,-0.009944376,0.00884619,0.007543819,-0.0027827146,-0.008029449,0.024215274,-0.0134983035,-0.009977487,0.10118761,-0.000582204,-0.0056675216,0.012262155,0.019778382,-0.018575344,0.03635602,-0.033309795,0.019623863,0.026731718,0.029446831,-0.05213899,-0.03377335,0.004952873,-0.03180876,0.017935196,0.0075493376,-0.018509122,0.007930116,-0.006920226,0.0033083537,-0.016401047,0.013277563,-0.016147194,-0.0059213736,-0.035583425,-0.0043320395,0.0071906336,-0.019656973,0.0054660956,0.015882306,0.016224453,-0.004461725,-0.036267724,-0.02138979,0.0011726859,0.019601788,0.017791713,0.043684617,-0.049136914,-0.009673968,0.006909189,0.0027799553,0.00017547174,-0.009883672,0.024678828,0.024656754,0.03180876,-0.0017838621,-0.010159599,0.059290998,0.009066931,-0.06012981,0.02366342,0.015153861,0.07390404,-0.013873563,-0.024126977,-0.00020884155,-0.01899475,-0.017261935,-0.02269216,-0.0021963716,-0.017758602,0.025694236,0.030484313,0.010678339,-0.012052451,-0.0072016707,0.020926233,0.04847469,0.04688536,0.008824116,-0.013641785,0.010352747,-0.009839524,-0.011290895,0.01466823,-0.01653349,0.0002567837,-0.008321931,0.012902304,-0.0076762633,-0.011335043,0.002952409,0.013509341,-0.016599713,0.024281494,0.015385638,-0.020683419,0.00051494705,-0.0006708453,-0.018917492,-0.013719045,0.014579934,-0.017570972,-0.011097747,-0.040660467,-0.011368155,-0.001396186,-0.014844823,0.004412058,-0.0036863724,-0.004525188,0.008261227,-0.033596758,-0.00024505684,0.016665936,0.011864821,-0.010805265,0.019248603,0.0023260568,0.013432082,-0.009861598,0.0016238249,0.004072669,0.046046544,0.027327718,-0.031212758,0.042382244,0.0027813348,-0.023751717,0.039181504,0.007731449,-0.019480381,-0.025517644,0.038430985,0.0015479453,0.0043541137,0.02684209,-0.012118673,0.018707788,0.040748764,-0.012262155,0.03101409,0.041521356,0.04456758,-0.036157355,0.036223575,0.0146240825,-0.02269216,0.0065891147,0.0013968758,0.00571167,-0.0049335584,-0.0018914733,-0.00020073622,-0.02254868,-0.0037112057,0.018122826,0.018796084,0.016323786,-0.005565429,0.015794009,0.034479722,0.035804167,-0.00057909987,0.013432082,0.032647572,-0.02593705,0.07032804,-0.009894709,-0.00530054,0.042912025,0.018531196,-0.006539448,0.029181942,0.0030489832,-0.019679047,-0.011097747,-0.0052150027,0.018696751,-0.0021991308,0.0078970045,0.008266745,0.015065564,-0.007714893,-0.006600152,-0.038519282,0.015407712,-0.013310674,-0.03306698,0.0059875958,-0.020915197,-0.033353943,0.024678828,0.02706283,-0.04013069,-0.0059324107,-0.002074964,-0.013972897,-0.00062255823,0.045605063,0.019226529,0.011599933,-0.026488904,-0.00054598873,-0.008829635,0.013321711,-0.016246527,0.010816302,0.024590531,0.026709644,-0.0021039364,0.04207321,-0.044964913,0.016367935,0.021489123,0.0038077799,0.042912025,-0.033221498,-0.039600912,0.03004283,-0.0010402413,0.005728225,-0.01758201,-0.004116817,0.019833567,-0.049136914,-0.0019866677,-0.0070857815,0.044876616,-0.0021370475,0.01690875,-0.010418969,0.0092214495,0.017559936,-0.0044589653,0.0018197325,-0.0009657413,0.0055074845,-0.010579006,0.03785706,0.024767125,0.011997266,0.00001591964,0.0037112057,-0.00862545,0.011213636,-0.014248823,-0.026886238,-0.04434684,-0.008603375,-0.021124901,-0.0069147074,-0.0033276684,-0.054920327,-0.016412083,0.0040699095,-0.021511197,0.022868754,-0.007543819,-0.027791275,0.006771226,-0.014767564,-0.016401047,-0.0019949456,0.0011471626,-0.012571192,0.00955808,-0.03304491,-0.011699266,0.012549118,0.019237567,0.019469345,-0.0012154544,0.0041112984,-0.022670086,-0.029005349,0.0040781875,-0.016279638,-0.0051239473,0.009524968,0.009673968,0.0049170027,0.015893342,0.011743414,-0.025274828,0.003258687,0.0058165216,0.010606598,-0.0011602691,-0.040064465,-0.035737947,0.0026061218,-0.0011519914,0.0071133743,0.0099388575,-0.012659488,-0.014877934,0.018321492,0.0061917813,-0.031080313,-0.0027109736,-0.035031576,0.00992782,-0.013145118,-0.019105121,-0.0017010843,-0.002269492,0.00038422705,-0.02101453,0.00052494934,-0.025274828,-0.0032117795,-0.023597198,0.012637414,-0.005471614,0.013244452,0.021069715,0.004768003,-0.018056603,-0.05655381,0.029446831,0.03684165,-0.0025592144,0.012041414,-0.0037829466,-0.018829195,-0.01164408,0.011152932,0.025892904,-0.007196152,-0.008686153,-0.04317691,0.009431154,0.021522233,0.041940764,-0.003976095,0.0017852418,0.005099114,-0.019668011,-0.021058679,0.017019121,-0.023795865,0.01817801,0.008454375,0.020241937,0.015021415,-0.04953425,-0.022625938,-0.01839875,-0.004654873,0.017140528,-0.009524968,-0.01377423,0.005700633,-0.004550021,0.0027758162,-0.0025950847,-0.009673968,-0.025650088,0.01280297,-0.023376457,0.027901646,0.023244012,-0.027151126,-0.004685225,-0.008244671,0.017217787,-0.0028020293,-0.013244452,-0.0034683908,-0.023751717,0.021831272,0.012979562,-0.00511291,-0.039932024,-0.048651285,-0.046443876,-0.025561793,-0.016676972,0.005965522,0.004061632,0.0047238544,0.0031069277,-0.052050695,-0.0639707,-0.009635339,-0.013089933,0.0025330014,0.021257345,-0.015805045,0.047503434,0.029623425,-0.03392787,-0.00038836597,-0.008973116,0.038475133,0.012659488,-0.025296902,0.0012161442,-0.029888313,-0.01022582,-0.010689376,0.023111569,0.007543819,-0.02500994,-0.0029855203,-0.0034435575,-0.0066498187,-0.017416455,-0.011787562,-0.0031786684,-0.06586907,0.010330672,0.0128912665,0.012836081,0.018818159,-0.022537641,0.00507704,-0.0064842626,0.01892853,0.021290457,-0.022934975,-0.012151784,0.009188338,-0.0011878618,0.015319416,-0.003142798,-0.0076652267,-0.009602227,-0.024436014,-0.010617635,0.024877496,-0.0014403341,0.012052451,0.014822749,0.000038349415,0.0043044467,-0.01022582,-0.009111079,0.02922609,-0.0016031305,0.03269172,0.0045858915,0.004009206,-0.021698827,-0.01780275,-0.008139819,0.0055461144,0.02239416,0.02798994,-0.032382686,-0.05456714,0.0059379293,0.036554687,0.016390009,-0.025296902,-0.064677075,-0.0007046462,-0.022383124,-0.010496228,-0.015120749,0.013862526,-0.003352502,0.009243524,0.030506387,-0.019579714,-0.020275049,0.0046493546,-0.034877058,-0.005088077,0.023420606,0.012836081,-0.01504349,-0.009072449,-0.022217568,-0.02041853,0.005554392,-0.005110151,0.01134608,-0.009453228,-0.008835153,0.03412654,-0.05103529,-0.032382686,-0.016147194,-0.015683638,-0.0032945573,0.009955413,-0.0059875958,-0.0076652267,0.008564745,0.0043734284,0.018917492,-0.0057613365,-0.01574986,0.007869412,0.007207189,0.019977048,0.010645228,-0.014866897,0.02049579,-0.014778601,0.008222597,-0.02366342,-0.0055350773,0.028232757,-0.013056822,0.01858638,-0.028254831,0.009022783,0.04125647,0.002097038,-0.0135866,0.009094523,0.0543464,0.010479673,0.0053336513,0.015275268,0.002068066,0.014679267,-0.000120545206,0.022294827,0.01825527,0.0060151885,0.0392698,0.054699585,-0.0392698,0.02593705,0.018707788,-0.004285132,0.0018666399,0.0064952997,-0.046708766,-0.0020459918,-0.0023384735,0.0073120412,0.00100782,-0.0012154544,0.026908312,-0.0038602059,-0.019358974,-0.015242157,-0.017361268,0.007289967,-0.021246308,0.010049228,0.0028310015,-0.032382686,-0.019381048,-0.0034076872,-0.0001836633,0.00040181735,0.027040755,-0.02631231,0.0008795144,-0.034700464,-0.024104903,-0.01075008,0.0008774449,0.01280297,-0.010805265,0.033972017,-0.01817801,-0.03635602,0.006020707,0.013939786,0.006600152,-0.01758201,-0.012858155,0.046223138,-0.030881647,-0.0053198547,0.026775867,0.0039319466,0.02474505,-0.016080972,-0.024502236,-0.01650038,-0.0032035017,0.022074087,-0.00030627794,0.044876616,0.0435301,-0.0056012995,-0.011301932,-0.015496009,-0.006462189,0.0070857815,0.018332528,0.044523433,0.02754846,-0.038806245,-0.026665496,0.000080837715,0.009872635,-0.011633043,-0.006092448,-0.026643422,-0.025076162,0.008653042,0.056597956,-0.03483291,0.006771226,0.02026401,-0.0058330772,0.0032614463,0.0035925575,0.0031290017,0.005021855,0.035428908,-0.019016825,0.013862526,0.016434157,-0.0025661124,0.007014041,-0.039534688,0.020385418,0.015021415,-0.052271437,-0.048165657,0.011103265,-0.025451422,-0.0019480381,-0.0098340055,-0.0027813348,-0.02560594,0.00029351638,-0.013906674,0.017758602,0.04434684,-0.0031069277,0.004594169,0.0034270019,-0.046090692,0.004770762,-0.0043099653,0.014039119,0.014292971,0.01172134,0.0038132984,0.030903721,0.022592828,-0.0070416336,0.009552561,0.043044467,0.017173639,-0.023950383,0.0019949456,0.005427466,-0.0129905995,0.009011745,-0.0014279175,-0.0078031896,0.01825527,0.018685713,-0.036532614,-0.038166095,0.020959346,-0.053110253,-0.0057723736,-0.011224673,0.030528462,0.0031262424,-0.011743414,-0.039026983,-0.015131786,0.015672602,-0.0013347924,-0.016577639,-0.0039705765,0.023972457,-0.010402413,-0.046311434,-0.010910117,-0.011776525,0.017306084,0.007438967,0.046488024,0.036179427,0.027592609,0.05174166,-0.0067988187,0.02512031,0.018707788,-0.016522454,-0.04202906,-0.02269216,-0.026665496,-0.002355029,0.004919762,-0.016047861,-0.016941862,-0.0053722807,-0.02728357,0.026444755,-0.009271116,0.023619272,0.01220697,-0.014568897,0.030992018,-0.035561353,-0.014679267,0.019778382,0.02922609,-0.024325643,-0.010512783,0.018166972,-0.010882525,-0.005032892,0.043022394,0.026488904,-0.007637634,-0.00008126885,-0.009204894,-0.028806683,-0.014778601,-0.004045076,0.008090152,0.014579934,-0.0058772257,0.024325643,-0.013741119,-0.0042244284,-0.008675116,0.010772154,-0.017074306,0.06348507,0.006103485,-0.012736748,-0.009839524,0.016599713,0.0086144125,-0.008426783,-0.009138672,-0.03534061,0.02295705,0.0055212807,-0.011412303,0.014778601,0.0079853,0.015507045,0.013542452,-0.0030738164,0.004823188,0.020506825,0.040660467,-0.006705004,-0.000094504685,-0.01534149,-0.0006053128,-0.034766685,0.020142604,0.01030308,0.021224234,-0.0120745255,-0.03231646,-0.021290457,-0.0010492089,-0.008570264,-0.012295266,0.023751717,0.0084047085,0.0076321154,0.020882085,-0.0008215699,-0.008228116,-0.019237567,0.021003494,-0.018707788,0.0038574466,-0.000518741,-0.010297561,-0.029468905,-0.011108784,0.009094523,0.020440605,0.014944157,-0.0016928065,0.0059324107]},{"id":"kth-largest-element-in-an-array","name":"Kth Largest Element in an Array","description":"Given an unsorted array of integers `nums` and an integer `k`, return the `kth` largest element in the array.\n\nBy `kth` largest element, we mean the `kth` largest element in the sorted order, not the `kth` distinct element.\n\nFollow-up: Can you solve it without sorting?\n\n**Example 1:**\n\n```java\nInput: nums = [2,3,1,5,4], k = 2\n\nOutput: 4\n```\n\n**Example 2:**\n\n```java\nInput: nums = [2,3,1,1,5,5,4], k = 3\n\nOutput: 4\n```\n\n**Constraints:**\n* `1 <= k <= nums.length <= 10000`\n* `-1000 <= nums[i] <= 1000`\n","difficulty":"Medium","concepts":[],"solutions":{"python":"# Quick Select\n# Time complexity: O(n) in average, O(n^2) in worst case\nclass Solution:\n\n    def findKthLargest(self, nums: List[int], k: int) -> int:\n        k = len(nums) - k\n        left, right = 0, len(nums) - 1\n\n        while left < right:\n            pivot = self.partition(nums, left, right)\n\n            if pivot < k:\n                left = pivot + 1\n            elif pivot > k:\n                right = pivot - 1\n            else:\n                break\n\n        return nums[k]\n\n    def partition(self, nums: List[int], left: int, right: int) -> int:\n        pivot, fill = nums[right], left\n\n        for i in range(left, right):\n            if nums[i] <= pivot:\n                nums[fill], nums[i] = nums[i], nums[fill]\n                fill += 1\n\n        nums[fill], nums[right] = nums[right], nums[fill]\n\n        return fill\n","javascript":"// Quick Select\n// Time complexity: O(n) in average, O(n^2) in worst case\nclass Solution {\n    /**\n     * @param {number[]} nums\n     * @param {number} k\n     * @return {number}\n     */\n    findKthLargest(nums, k) {\n        k = nums.length - k;\n        let left = 0;\n        let right = nums.length - 1;\n        while (left < right) {\n            const pivot = this.partition(nums, left, right);\n            if (pivot < k) left = pivot + 1;\n            else if (pivot > k) right = pivot - 1;\n            else break;\n        }\n        return nums[k];\n    }\n\n    /**\n     * @param {number[]} nums\n     * @param {number} left\n     * @param {number} right\n     * @return {number}\n     */\n    partition(nums, left, right) {\n        const pivot = nums[right];\n        let fill = left;\n        for (let i = left; i < right; i++) {\n            if (nums[i] <= pivot) {\n                [nums[fill], nums[i]] = [nums[i], nums[fill]];\n                fill++;\n            }\n        }\n        [nums[right], nums[fill]] = [nums[fill], nums[right]];\n        return fill;\n    }\n}\n","cpp":"// Quick Select\n// Time complexity: O(n) in average, O(n^2) in worst case\nclass Solution {\npublic:\n    int findKthLargest(vector<int>& nums, int k) {\n        k = nums.size() - k;\n        int left = 0, right = nums.size() - 1;\n        while (left < right) {\n            int pivot = partition(nums, left, right);\n            if (pivot < k)\n                left = pivot + 1;\n            else if (pivot > k)\n                right = pivot - 1;\n            else\n                break;\n        }\n        return nums[k];\n    }\n\nprivate:\n    int partition(vector<int>& nums, int left, int right) {\n        int pivot = nums[right], fill = left;\n        for (int i = left; i < right; i++) {\n            if (nums[i] <= pivot) {\n                swap(nums[fill++], nums[i]);\n            }\n        }\n        swap(nums[right], nums[fill]);\n        return fill;\n    }\n};\n","java":"// Quick Select\n// Time complexity: O(n) in average, O(n^2) in worst case\nclass Solution {  \n    public int findKthLargest(int[] nums, int k) {\n        k = nums.length - k;\n        int left = 0, right = nums.length - 1;\n        while (left < right) {\n            int pivot = partition(nums, left, right);\n            if (pivot < k)\n                left = pivot + 1;\n            else if (pivot > k)\n                right = pivot - 1;\n            else\n                break;\n        }\n        return nums[k];\n    }\n\n    private int partition(int[] nums, int left, int right) {\n        int pivot = nums[right], fill = left;\n        for (int i = left; i < right; i++) {\n            if (nums[i] <= pivot) {\n                int temp = nums[fill];\n                nums[fill++] = nums[i];\n                nums[i] = temp;\n            }\n        }\n        nums[right] = nums[fill];\n        nums[fill] = pivot;\n        return fill;\n    }\n}\n","csharp":"// Quick Select\n// Time complexity: O(n) in average, O(n^2) in worst case\npublic class Solution {\n    \n    public int FindKthLargest(int[] nums, int k) {\n        k = nums.Length - k;\n        int left = 0, right = nums.Length - 1;\n        while (left < right) {\n            int pivot = Partition(nums, left, right);\n            if (pivot < k)\n                left = pivot + 1;\n            else if (pivot > k)\n                right = pivot - 1;\n            else\n                break;\n        }\n        return nums[k];\n    }\n\n    private int Partition(int[] nums, int left, int right) {\n        int pivot = nums[right], fill = left;\n        for (int i = left; i < right; i++) {\n            if (nums[i] <= pivot) {\n                int temp = nums[fill];\n                nums[fill++] = nums[i];\n                nums[i] = temp;\n            }\n        }\n        nums[right] = nums[fill];\n        nums[fill] = pivot;\n        return fill;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def findKthLargest(self, nums: List[int], k: int) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @param {number} k\n     * @return {number}\n     */\n    findKthLargest(nums, k) {}\n}\n","cpp":"class Solution {\npublic:\n    int findKthLargest(vector<int>& nums, int k) {\n        \n    }\n};\n","java":"class Solution {\n    public int findKthLargest(int[] nums, int k) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int FindKthLargest(int[] nums, int k) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/XEmy13g1Qxc","embedding":[0.012748642,-0.0036498543,0.0042443774,-0.01874557,0.033830944,0.0011302399,-0.08685206,0.011342465,-0.052152593,0.033872303,0.011363144,-0.020234462,-0.035567988,-0.04557665,0.043922327,-0.00041131946,-0.006922316,-0.031825077,-0.015995255,0.03306582,-0.02289172,0.0027218815,0.027441114,-0.003944531,0.053724203,-0.029901924,-0.00005561537,0.04032417,-0.01079447,-0.0146407755,0.028061487,-0.0008627046,-0.0066431486,0.038028795,-0.039951947,0.017235998,-0.0076771015,0.020182764,-0.04512171,-0.043343313,0.009646783,-0.040489603,-0.0414822,-0.030005319,0.017070565,0.03744978,0.028930007,-0.057777297,0.03658126,-0.017122263,0.025890185,0.025104381,-0.042640224,0.0022217068,0.00080195983,-0.03021211,-0.0023173473,0.01897304,0.050167404,0.007754648,0.016140008,-0.010598019,0.0036240055,0.03676737,-0.018373346,-0.02421518,0.005883193,0.015044018,0.0068395995,-0.015922878,-0.06493226,0.014516701,-0.033086497,-0.021082303,0.011756047,0.0050792946,0.023450056,0.02713093,0.015219789,0.0033241592,0.0014824303,-0.007832195,0.030563653,0.048595794,0.010753112,-0.02975717,-0.0009215107,-0.0024272047,-0.039972626,-0.04429455,-0.016905133,-0.005330028,-0.0008129456,0.039042067,-0.020761779,0.04673468,0.06650386,-0.010086212,0.017959764,0.03724299,0.020255141,0.005867684,-0.010856507,-0.025704073,-0.00085236505,-0.00031374014,0.012686605,0.036705334,-0.01671902,-0.01588152,-0.026572594,-0.012727963,-0.027896054,-0.011880121,0.021320112,0.00352578,-0.04627974,0.00616753,0.008188908,-0.023863638,-0.008028646,-0.03459607,-0.010711754,-0.027255002,-0.03788404,0.014806208,0.02423586,-0.03962108,0.04292973,0.0043943007,0.034782182,-0.04123405,0.0133483345,0.0038954183,-0.024649441,-0.023181228,-0.045948874,0.05178037,0.012614228,0.04847172,0.015705748,-0.0027684094,-0.041978493,0.0048182216,0.029033402,0.0042650565,-0.02204388,0.026551915,-0.029157476,0.0077443086,0.031411495,-0.01168367,0.0392075,0.04363282,-0.010091382,0.011859442,0.02489759,-0.01828029,0.02973649,0.0051490865,-0.010055194,-0.021444187,0.004580412,0.034678787,0.0016905133,0.028992044,-0.017049886,0.0050146724,-0.0238016,0.020947888,0.03277631,-0.03769793,0.015085376,0.011766386,0.034285884,0.011962838,-0.010050024,-0.03414113,-0.043550104,0.0062657557,-0.044170476,0.015736766,-0.014061762,-0.04474949,-0.0031199534,0.04479085,0.034658108,-0.038835276,-0.028888648,0.010660056,0.04100658,0.026510557,0.014589078,0.0039341915,-0.030150073,0.038090833,0.020420574,0.049298882,0.014371947,-0.014041083,-0.022188634,0.02620037,0.008509434,-0.05264889,0.051366787,-0.07320388,0.0036240055,0.03370687,-0.009688141,-0.055461243,-0.0056247045,-0.013979046,0.038669847,0.012707284,0.009186673,0.025290493,-0.005552328,0.0029131628,-0.01079447,0.09057429,0.020027671,0.016781058,-0.0061158324,0.021692336,0.038731884,0.0012698236,0.0048182216,0.0018779173,0.023967033,0.044377267,-0.0100138355,-0.0005722284,0.034968294,-0.02667599,-0.010184438,-0.033169214,-0.026076296,-0.024752837,-0.034699466,-0.02336734,0.048513077,-0.007801176,0.0010210286,0.015054357,-0.029240193,-0.015323184,-0.045742083,0.029488342,-0.024049748,-0.012231665,0.0014126383,-0.015302505,-0.0070670694,-0.038897313,-0.02204388,0.039124783,-0.008736904,-0.0027141268,-0.0016052121,0.003063086,-0.03153557,-0.024380613,-0.021795731,-0.06149953,0.008018306,-0.023243265,-0.0076150643,0.007858044,0.015230129,0.006353642,-0.05533717,-0.053848278,-0.013255279,0.005138747,-0.020193104,0.017587543,0.024794195,-0.022705609,0.0014423645,-0.082798965,-0.0128727155,0.0073255575,0.011208052,-0.02357413,0.03368619,-0.015157752,0.029364267,0.0009072938,0.00027448224,-0.057281002,-0.026738027,-0.041792385,-0.017360073,0.037098236,-0.030170752,0.0140514225,-0.06145817,-0.019272886,0.012128269,-0.03463743,0.013089846,-0.025435247,-0.009176333,-0.014444324,-0.027958091,-0.035609346,0.049422957,0.027192965,-0.038897313,0.044997636,0.0061365115,0.035237122,0.024525367,0.040448245,0.025104381,-0.037863363,0.005224048,-0.021216717,0.027420435,-0.041585594,0.0025719584,-0.00024152498,0.046900112,0.04204053,0.027792659,-0.00053022406,-0.0047303354,0.017877048,0.015560994,-0.03811151,-0.0028898988,-0.0034895916,-0.004937126,0.04342603,-0.094461955,0.037842683,0.04206121,-0.012283362,0.03217662,0.012810678,0.018363006,0.05620569,0.045204427,-0.04954703,0.014909604,0.03531984,0.015933217,0.008524943,0.0034999312,0.032259338,0.0008633508,0.005001748,0.01518877,0.024070427,-0.02514574,-0.02227135,-0.044418626,-0.012955432,-0.02229203,0.029426305,-0.032052547,0.0011153768,0.01563337,-0.036850087,0.016253743,0.0054592723,-0.029509021,-0.06584213,-0.021102982,0.08358477,0.0061571905,0.015819483,0.034285884,-0.052318025,-0.053889636,-0.017029207,-0.025311172,-0.016791398,0.011135675,0.03105995,-0.050539628,-0.03256952,0.0038721543,-0.02866118,0.041792385,0.060920514,-0.043301955,-0.0086076595,-0.014826887,-0.003768759,-0.018911002,-0.0019347847,0.07977982,-0.05153222,0.021196038,-0.032983102,0.03838034,0.035733417,-0.0040815296,0.035588667,0.02512506,-0.023532772,0.009207352,0.005001748,0.0010694952,-0.020451592,-0.0051051434,0.0370362,0.077339694,-0.053517412,0.03242477,0.024318576,0.0029803698,-0.054344572,0.02886797,0.0458248,0.007739139,0.03699484,-0.0595557,-0.021113321,0.0007715875,-0.018786928,-0.004115133,-0.0070670694,0.007423783,0.0025254304,0.004412395,-0.016005594,0.0066172997,-0.023181228,-0.014216855,-0.03085316,0.011931819,0.025662715,-0.07080511,0.047727276,0.01719464,0.052276667,-0.025290493,-0.080110684,-0.019241868,-0.047106903,0.059183475,0.0229124,0.02423586,-0.015602352,-0.026365804,0.007248011,0.008090683,0.01279,0.06944029,0.00065106736,0.041854423,0.028599143,-0.0106497165,-0.018032141,0.036064282,-0.03440996,0.0010501086,0.00948652,-0.010458436,0.02558,-0.0048363158,-0.038008116,0.022002522,-0.020834155,-0.011931819,0.025807468,0.032321375,0.006374321,0.027399756,-0.02731704,0.011993856,0.039248858,-0.013989385,-0.021092642,0.011590614,0.01013791,0.002802013,0.03174236,-0.00093895866,-0.022871042,-0.02797877,-0.009455501,0.01144586,-0.017060226,0.03531984,0.04669332,0.009879421,-0.024587404,-0.072542146,0.016377816,0.023305302,-0.006353642,0.005043106,0.03221798,0.035816133,-0.02072042,-0.030542973,-0.02665531,0.008075174,-0.06894399,0.044211835,0.03794608,0.014361608,-0.0021015096,0.017380752,-0.006219228,0.0101275705,0.083750196,-0.018331988,0.0012168335,0.022809004,-0.0027192966,0.018755909,0.011197712,0.018032141,-0.04321924,-0.009512369,-0.0030656708,-0.019086774,0.00528867,-0.0069274856,0.0116009535,-0.0060951533,-0.0056712325,-0.064270526,-0.05661927,-0.02421518,0.0005851528,0.0034327242,0.011394163,-0.010282664,0.012066232,0.016046952,0.012707284,0.039331574,-0.04623838,-0.02289172,-0.018476741,0.009238371,0.006405339,-0.00006442012,0.0076512527,0.0034249695,-0.0020226708,0.029178156,0.007852874,-0.0012148948,0.0032543673,-0.007010202,-0.022974437,0.0043503577,-0.0036214206,0.024504688,-0.03244545,-0.011321786,0.05976249,0.016264083,0.030170752,-0.0060693044,-0.0120558925,0.012138609,0.009786366,-0.0027606548,-0.030687727,-0.007842534,0.02820624,0.039993305,0.0007806346,-0.0005667355,-0.0046191853,0.0643946,-0.04934024,0.019159151,-0.014030743,-0.02073076,0.010494623,0.005350707,0.036229715,-0.029612416,-0.034761503,-0.0017357487,-0.0053196885,-0.009925949,-0.017463468,-0.01563337,-0.0027658246,0.0031561418,0.001367403,0.00969331,-0.0067930715,0.027358398,0.016026273,-0.011187373,-0.009150485,-0.035609346,-0.010215457,0.038297623,-0.00037351556,-0.012624567,0.03343804,0.009160824,-0.018848965,-0.023057153,-0.003613666,0.020916872,0.007335897,0.001221357,0.020213783,0.0037299858,-0.0054799514,-0.008923015,-0.030150073,0.01036021,-0.034658108,0.007992458,0.015509296,0.009279729,-0.021506224,0.025807468,-0.02028616,0.009321087,0.009171164,-0.00043813762,-0.028702537,-0.021857768,0.044625416,-0.0259729,-0.012045553,0.0004843424,0.010753112,-0.007966609,0.00010242598,-0.03325193,0.02229203,-0.0153438635,-0.007387595,-0.015281826,0.010990921,0.05310383,0.033313967,0.010887526,-0.015902199,0.022188634,0.0026908629,-0.017546184,0.0018766249,0.02799945,0.008488755,0.014237534,-0.015106055,0.0147545105,-0.025497284,0.016067632,0.012438456,0.034492675,-0.03223866,-0.0053248582,-0.010515302,-0.0180735,-0.02289172,0.026262408,-0.0095588965,0.030977234,-0.02537321,0.030129394,0.0025073362,0.070226096,0.0029493512,-0.0032879708,0.011869782,0.0062243976,-0.04764456,-0.0277513,0.004888013,-0.011735368,0.0048001274,-0.019252207,-0.00749099,0.015312845,-0.011466539,-0.023036474,0.03509237,0.015498957,-0.0041461517,0.021506224,-0.0006901637,-0.01696717,0.016677663,-0.0077908365,-0.038090833,-0.013813613,-0.015757445,0.02334666,-0.036167677,-0.013772255,0.017752975,-0.009419313,-0.048554435,0.010825489,0.029364267,-0.01388599,0.045742083,-0.025807468,0.021113321,-0.0064466973,-0.012727963,0.020461932,-0.024980307,0.05529581,0.019696806,0.020451592,-0.0011379946,-0.049257524,-0.00017528736,0.002954521,-0.0033810267,-0.0047691087,-0.031390816,-0.011311446,0.02160962,-0.03350008,0.0033577627,0.016077971,0.034740824,0.034430638,-0.0070670694,0.043550104,0.0033836116,0.005883193,-0.021040944,0.0016245987,-0.0047742785,-0.008421548,-0.047975425,-0.021754373,0.02048261,-0.030480936,0.0017124848,-0.008990222,-0.003306065,0.010691075,0.011001261,0.033810265,-0.009646783,-0.032507487,0.005185275,-0.046817396,0.014175497,-0.026924139,0.0033189894,0.032093905,0.02558,0.05769458,0.012852036,0.019324584,-0.0054489328,-0.011342465,0.008323322,0.001631061,0.029612416,-0.0047535994,-0.03900071,0.040220775,-0.015498957,-0.016688002,0.030522294,-0.026407162,-0.006632809,0.0108978655,-0.015540315,0.043715537,0.0042624716,0.010825489,-0.009755347,-0.03656058,0.011549256,-0.026986176,0.0072531807,-0.033169214,0.018911002,0.0162951,-0.013203581,0.029198835,-0.005159426,0.013131204,-0.010293003,0.012676265,-0.016563928,0.0020343028,0.025600677,-0.0072118226,-0.0024866571,-0.0075116693,0.019676127,-0.022105917,-0.0002983924,-0.027441114,-0.037367065,0.056701988,0.02204388,0.04843036,-0.01589186,0.013389693,-0.005702251,0.024339255,-0.018890323,-0.024070427,-0.009233201,0.026386483,0.0048440704,-0.0058573443,-0.013410372,0.011187373,0.013327655,-0.006922316,-0.017742636,0.011818084,0.0010992214,0.031411495,0.018435383,0.0008135918,0.0005521956,-0.0229124,-0.018590476,0.021733694,0.018197574,0.02713093,0.022519497,0.019552052,0.0077856667,-0.032135263,0.028516427,0.0037920228,0.03531984,-0.0295297,-0.018331988,-0.019562392,0.0049939933,-0.02402907,0.021278754,-0.027172286,-0.027234323,-0.00008804756,0.02005869,0.028288957,0.00837502,0.014185837,-0.030501615,-0.02382228,0.006146851,0.0077494783,-0.002887314,-0.0108978655,0.0005137454,0.0445427,0.029922603,-0.016801737,0.016171027,0.007992458,-0.008685206,-0.0028950686,-0.0111253355,-0.025207777,0.040013984,-0.056536555,0.0037946077,-0.019469336,-0.034492675,0.041916456,0.009465841,-0.026241729,-0.013524107,0.04032417,-0.004464092,0.007170465,-0.036188357,0.0021971504,-0.020534309,0.006188209,0.026324445,-0.047355052,0.050994568,-0.022953758,-0.05405507,0.05128407,0.017504826,-0.01586084,-0.001519911,0.008612829,-0.01608831,0.011259749,-0.010711754,-0.002931257,-0.015106055,0.035630025,-0.03279699,0.047768634,-0.013699878,-0.019562392,-0.045287143,-0.0058263256,0.031225383,-0.019314244,0.04627974,-0.021940485,0.0146407755,0.011642312,0.01958307,0.009512369,0.03151489,0.02977785,0.0039600404,0.04166831,0.020586006,-0.02052397,-0.009589915,0.012893395,0.021692336,0.051242713,-0.01168367,-0.00009459055,-0.025745431,0.059679773,0.033376005,0.006374321,0.0074392925,-0.009708819,0.0004930664,0.039807193,-0.003701552,-0.027068892,-0.023615489,-0.03769793,0.026241729,0.00661213,0.002281159,0.03610564,0.025228456,0.015488617,0.0021881033,0.008969543,-0.04958839,-0.0023677526,-0.0032750464,0.00815272,-0.038814597,-0.024421971,0.03856645,0.057818655,-0.05029148,-0.023284623,-0.046403814,-0.030336183,0.008333662,0.032962423,0.042433433,-0.0026042694,0.017049886,-0.0089488635,-0.026365804,0.019882917,-0.009931119,0.023884317,0.008524943,0.027399756,0.020865174,-0.0020252557,-0.050374195,0.022643572,-0.0012808094,-0.024649441,0.0047277506,-0.03416181,-0.02514574,0.011156354,-0.006121002,0.010815149,0.006219228,0.045742083,-0.015995255,-0.032631557,-0.0125315115,0.00012787091,0.012510832,-0.00129438,0.010866847,0.045742083,-0.00705673,0.022705609,0.0018843795,-0.031866435,-0.022746967,0.0008342709,0.0084939245,-0.005753949,0.031680323,-0.0068344297,-0.010282664,0.00067917793,-0.054964945,0.0105359815,-0.0000012924413,-0.014682134,-0.060961872,0.016574267,-0.031452853,0.00052408496,0.004676053,-0.049298882,0.01477519,-0.02138215,-0.0024181579,0.03633311,-0.016708681,0.015405901,-0.008912676,-0.0127796605,-0.024339255,-0.0030113882,0.005025012,-0.024070427,0.023967033,-0.057281002,-0.015840162,0.009165994,0.060093354,0.029943282,0.008612829,-0.005027597,-0.020410234,-0.031845756,-0.016708681,-0.013410372,0.00330348,0.0032336882,-0.0006245723,-0.0067362045,0.044377267,0.014878585,-0.01477519,0.022167955,0.006281265,-0.0189627,-0.012324721,-0.060093354,-0.00024604853,-0.04338467,0.0012568992,-0.012800339,0.028950686,0.005557498,-0.005655723,-0.007976948,0.004210774,-0.019531373,0.008995391,0.011642312,0.014940622,-0.026696669,-0.006214058,-0.006219228,-0.009626104,-0.011466539,-0.0015160337,-0.02930223,-0.0343686,-0.008235436,-0.022581534,0.012821018,-0.009217692,-0.032259338,-0.0005728746,-0.023987712,-0.028185561,-0.03660194,0.0063174535,0.011880121,0.0074341227,0.008261285,0.00077934214,-0.04495628,-0.0053455373,0.03631243,0.04297109,-0.02667599,-0.0052524814,-0.010184438,0.0042883204,0.042557508,0.056329764,0.031370137,0.00083620957,0.014030743,-0.014971641,-0.022746967,-0.0020226708,-0.0105359815,-0.003833381,0.0045287143,0.00660696,-0.012386758,-0.032280017,0.00948135,-0.021464866,0.012748642,0.04495628,-0.009641613,0.00474326,0.021878447,0.005790137,-0.02051363,0.004699317,-0.015726427,-0.031225383,0.00039871817,-0.009869082,-0.015540315,0.0011457492,-0.018911002,-0.025414567,0.015447259,0.030646369,-0.040158737,-0.027441114,-0.005552328,0.011280428,-0.009595085,0.0055213096,0.0015276656,-0.06828226,-0.035960887,-0.005583347,-0.0145270405,0.023263944,-0.0010552783,0.0031638965,-0.006214058,-0.0027477304,-0.01784603,-0.016264083,-0.036663976,0.0025900526,0.0048363158,-0.009052259,0.001388082,0.05666063,0.0032672917,-0.020006992,-0.004539054,0.001086297,0.026489878,0.014589078,-0.009786366,0.011301107,-0.037325706,-0.0072635203,-0.012024874,0.009796705,0.035795454,-0.0065759416,0.013751576,-0.0017098999,0.01651223,0.0042909053,0.0024013561,0.005836665,0.004536469,-0.006503565,-0.0067413743,-0.00040227236,-0.008028646,-0.025662715,0.015984915,-0.014123799,0.0058004768,0.0051309923,0.009972477,0.025435247,0.023305302,-0.0067310347,0.011135675,0.012727963,0.01610899,0.001168367,-0.0070670694,-0.008561132,0.03550595,-0.006126172,0.028785253,-0.020772118,-0.0074599716,0.008711055,-0.016822416,-0.014661455,0.011311446,-0.015674729,-0.01344139,0.024318576,0.006426018,-0.026779385,-0.020100048,0.03416181,-0.018176895,0.017267017,0.018693872,-0.02866118,-0.002278574,-0.020255141,0.004161661,0.006472546,-0.023263944,-0.053434696,0.026241729,-0.010215457,-0.0086076595,-0.006234737,0.016708681,-0.017928746,0.012510832,0.07787734,0.032755632,0.003587817,0.008773092,-0.035361197,0.01256253,-0.0099466285,0.016346797,-0.0053248582,0.0015405901,-0.03726367,-0.03722231,-0.010639377,0.025414567,-0.003019143,0.005335198,-0.011590614,0.060879156,-0.016470872,-0.010980582,-0.022229992,-0.0019800202,-0.032383412,0.025869505,-0.03223866,0.0029493512,-0.00793042,0.0427643,0.0044485833,-0.013761915,-0.003213009,0.024008391,0.008783432,0.030460257,-0.002840786,-0.008385359,0.007599555,-0.00084202556,-0.020079369,-0.022374745,-0.018352667,0.05690878,-0.0028382011,0.013193241,0.009574406,-0.003967795,0.0087886015,-0.007144616,-0.026138334,0.04292973,0.004249547,0.0139376875,-0.030418899,0.018373346,-0.0015832407,-0.00009588299,0.03656058,-0.008731734,-0.008178568,0.0019477091,0.040448245,0.04458406,-0.03482354,0.012490153,0.03329329,-0.004412395,-0.034968294,0.009238371,-0.0072790296,-0.014185837,0.016026273,0.0061571905,0.006038286,-0.016625965,0.01123907,0.0000785562,0.00397038,0.017597882,0.01743245,-0.011104656,-0.0086748665,0.012386758,-0.013296637,-0.019035077,0.01806316,0.0028718046,0.0003967795,0.00024314053,0.015716087,-0.002334149,-0.0031794058,0.0008536575,-0.011114996,-0.0079045715,-0.010318852,0.018001122,0.0029803698,-0.0038643996,0.00071213517,0.0077856667,-0.008002797,-0.027958091,-0.00030970125,-0.0071911435,0.017608222,0.034699466,-0.016419174,-0.0012917952,-0.043053806,-0.027813338,-0.007036051,0.024339255,-0.040448245,-0.009005731,-0.011559595,0.018569797,0.027337719,0.021299433,0.027606547,-0.029343588,0.007594385,-0.016181367,-0.008126872,0.014589078,-0.0089488635,0.0400967,0.016615625,-0.032073226,-0.06464275,0.0057436093,0.009398634,-0.0037196463,0.030274145,-0.0002436252,0.0049035223,0.014702813,0.019903596,-0.022643572,-0.021423507,0.0590594,-0.017101584,-0.009284899,0.016005594,0.023677526,-0.046403814,0.021733694,0.014589078,-0.012655586,-0.0060227765,0.0076098945,-0.023470735,-0.041730348,-0.0075892154,-0.010887526,-0.024711479,-0.039827872,0.025166418,-0.031659644,-0.019531373,0.035630025,0.037739288,-0.026324445,0.00076447905,0.025311172,0.008907506,0.018363006,0.0072583505,0.02266425,-0.014609757,-0.0027296362,0.024008391,-0.016894793,-0.008943694,-0.0057642884,-0.0059400606,0.00903158,0.020751439,0.004981069,0.008219927,0.009222861,0.048140854,-0.011383823,0.0041461517,0.016646644,-0.0343686,0.00025719582,0.008979882,0.026345124,0.0074651414,-0.0005819217,0.020823816,-0.020027671,-0.035443913,0.021278754,-0.019086774,0.022147276,-0.0014682134,-0.002884729,0.0086076595,0.007982118,-0.030046677,-0.04168899,-0.01587118,-0.0077494783,-0.04166831,-0.0027244664,0.030542973,-0.03550595,-0.04251615,-0.0031225383,-0.018631835,0.017515166,-0.017267017,0.0409859,0.017267017,-0.014278892,0.065263115,0.015747106,0.019035077,-0.009962138,-0.014082441,-0.010236136,0.025724752,-0.0057125906,-0.014237534,-0.0011379946,-0.024856232,0.026324445,0.03633311,-0.009171164,0.025890185,-0.005304179,0.0034042904,0.024938948,-0.01322426,0.04673468,-0.029157476,-0.02050329,0.024504688,0.009326257,0.012541851,-0.022622893,0.021020265,-0.015250808,-0.041585594,0.040489603,-0.004722581,0.0047742785,-0.0016129668,-0.026138334,-0.039993305,-0.019066095,-0.011818084,-0.036891446,0.008281964,-0.044997636,0.018342327,0.0009932412,0.017535845,-0.005309349,0.00308635,0.031101309,0.042226642,0.021650977,-0.0053403676,-0.016894793,0.000031765787,-0.011776726,0.022540176,-0.023739563,-0.030025998,0.04673468,0.017918406,-0.014744171,-0.0019916522,-0.007387595,0.015075036,0.030791122,-0.027606547,0.037801325,0.025393888,0.0016478627,0.008261285,-0.01630544,-0.045287143,-0.011073638,-0.047065545,0.04826493,0.031473532,0.03153557,0.007966609,-0.038545772,-0.015995255,0.013420711,-0.015023339,-0.015333524,0.005552328,0.0013635256,0.0092435405,0.030294824,0.005004333,0.03788404,0.017577203,-0.0028924837,0.012738302,0.002322517,0.0014152232,-0.00063232693,-0.0025021664,-0.01850776,0.012210986,0.05488223,-0.0020136237,0.023098512,-0.00794076]},{"id":"task-scheduling","name":"Task Scheduling","description":"You are given an array of CPU  tasks `tasks`, where `tasks[i]` is an uppercase english character from `A` to `Z`. You are also given an integer `n`. \n    \nEach CPU cycle allows the completion of a single task, and tasks may be completed in any order.\n\nThe only constraint is that **identical** tasks must be separated by at least `n` CPU cycles, to cooldown the CPU.\n\nReturn the *minimum number* of CPU cycles required to complete all tasks.\n\n**Example 1:**\n\n```java\nInput: tasks = [\"X\",\"X\",\"Y\",\"Y\"], n = 2\n\nOutput: 5\n```\n\nExplanation: A possible sequence is: X -> Y -> idle -> X -> Y.\n\n**Example 2:**\n\n```java\nInput: tasks = [\"A\",\"A\",\"A\",\"B\",\"C\"], n = 3\n\nOutput: 9\n```\n\nExplanation: A possible sequence is: A -> B -> C -> Idle -> A -> Idle -> Idle -> Idle -> A.\n\n**Constraints:**\n* `1 <= tasks.length <= 1000`\n* `0 <= n <= 100`\n","difficulty":"Medium","concepts":["Heap Properties","Push and Pop","Heapify"],"solutions":{"python":"class Solution:\n    def leastInterval(self, tasks: List[str], n: int) -> int:\n        count = Counter(tasks)\n        maxHeap = [-cnt for cnt in count.values()]\n        heapq.heapify(maxHeap)\n\n        time = 0\n        q = deque()  # pairs of [-cnt, idleTime]\n        while maxHeap or q:\n            time += 1\n\n            if not maxHeap:\n                time = q[0][1]\n            else:\n                cnt = 1 + heapq.heappop(maxHeap)\n                if cnt:\n                    q.append([cnt, time + n])\n            if q and q[0][1] == time:\n                heapq.heappush(maxHeap, q.popleft()[0])\n        return time\n","javascript":"/**\n * const { MaxPriorityQueue } = require('@datastructures-js/priority-queue');\n */\n\nclass Solution {\n    /**\n     * @param {character[]} tasks\n     * @param {number} n\n     * @return {number}\n     */\n    leastInterval(tasks, n) {\n        const count = {};\n        for (const task of tasks) {\n            count[task] = (count[task] || 0) + 1;\n        }\n\n        const maxHeap = new MaxPriorityQueue(entry => entry[0]);\n        for (const cnt of Object.values(count)) {\n            maxHeap.enqueue([cnt]);\n        }\n\n        let time = 0;\n        const queue = []; // pairs of [cnt, idleTime]\n\n        while (!maxHeap.isEmpty() || queue.length > 0) {\n            time += 1;\n\n            if (!maxHeap.isEmpty()) {\n                const cnt = maxHeap.dequeue()[0] - 1;\n                if (cnt > 0) {\n                    queue.push([cnt, time + n]);\n                }\n            }\n\n            if (queue.length > 0 && queue[0][1] === time) {\n                maxHeap.enqueue([queue.shift()[0]]);\n            }\n        }\n\n        return time;\n    }\n}\n","cpp":"class Solution {\npublic:\n    int leastInterval(vector<char>& tasks, int n) {\n        unordered_map<char, int> counts;\n        for (char task : tasks) {\n            counts[task]++;\n        }\n\n        priority_queue<int> maxHeap;\n        for (auto& entry : counts) {\n            maxHeap.push(entry.second);\n        }\n\n        int time = 0;\n        queue<pair<int, int>> queue;  // pairs of {cnt, idleTime}\n        while (!maxHeap.empty() || !queue.empty()) {\n            if (!queue.empty() && time >= queue.front().second) {\n                maxHeap.push(queue.front().first);\n                queue.pop();\n            }\n            if (!maxHeap.empty()) {\n                int cnt = maxHeap.top() - 1;\n                maxHeap.pop();\n                if (cnt > 0) {\n                    queue.push({cnt, time + n + 1});\n                }\n            }\n            time++;\n        }\n        return time;\n    }\n};\n","java":"class Solution {\n    public int leastInterval(char[] tasks, int n) {\n        Map<Character, Integer> counts = new HashMap<>();\n        for (char task : tasks) {\n            counts.put(task, counts.getOrDefault(task, 0) + 1);\n        }\n\n        PriorityQueue<Integer> maxHeap = new PriorityQueue<>(Collections.reverseOrder());\n        maxHeap.addAll(counts.values());\n\n        int time = 0;\n        Deque<int[]> queue = new ArrayDeque<>();  // pairs of [cnt, idleTime]\n        while (!maxHeap.isEmpty() || !queue.isEmpty()) {\n            if (!queue.isEmpty() && time >= queue.peek()[1]) {\n                maxHeap.offer(queue.poll()[0]);\n            }\n            if (!maxHeap.isEmpty()) {\n                int cnt = maxHeap.poll() - 1;\n                if (cnt > 0) {\n                    queue.offer(new int[]{cnt, time + n + 1});\n                }\n            }\n            time++;\n        }\n        return time;\n    }\n}\n","csharp":"public class Solution {\n    public int LeastInterval(char[] tasks, int n) {\n        var counts = new Dictionary<char, int>();\n        foreach (char task in tasks) {\n            if (!counts.ContainsKey(task))\n                counts[task] = 0;\n            counts[task]++;\n        }\n\n        // Priority queue in descending order\n        var maxHeap = new PriorityQueue<int, int>();\n        foreach (var count in counts.Values) {\n            maxHeap.Enqueue(count, -count);  // Using negative for max-heap behavior\n        }\n\n        int time = 0;\n        Queue<int[]> queue = new Queue<int[]>();  // pairs of [cnt, idleTime]\n        while (maxHeap.Count > 0 || queue.Count > 0) {\n            if (queue.Count > 0 && time >= queue.Peek()[1]) {\n                int[] temp = queue.Dequeue();\n                maxHeap.Enqueue(temp[0], -temp[0]);\n            }\n            if (maxHeap.Count > 0) {\n                int cnt = maxHeap.Dequeue() - 1;\n                if (cnt > 0) {\n                    queue.Enqueue(new int[] { cnt, time + n + 1 });\n                }\n            }\n            time++;\n        }\n        return time;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def leastInterval(self, tasks: List[str], n: int) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {character[]} tasks\n     * @param {number} n\n     * @return {number}\n     */\n    leastInterval(tasks, n) {}\n}\n","cpp":"class Solution {\npublic:\n    int leastInterval(vector<char>& tasks, int n) {\n        \n    }\n};\n","java":"class Solution {\n    public int leastInterval(char[] tasks, int n) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int LeastInterval(char[] tasks, int n) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/s8p8ukTyA2I","embedding":[-0.043735094,-0.030199083,0.06254119,-0.061972626,0.022348633,-0.0155259585,0.0289745,0.036037717,-0.011360191,0.029258776,0.027596844,0.02059923,-0.048589688,-0.03326054,0.01764711,-0.013601614,-0.02610985,-0.022917189,-0.027771784,0.048458483,0.024907136,0.020992845,-0.008856356,-0.023092128,0.05488754,-0.012562905,0.016149184,0.043254007,-0.022042487,-0.019527718,0.030505227,-0.015471289,-0.005630893,0.03253891,0.038727425,0.005734764,-0.003938892,0.014673124,-0.0012546505,0.0097529255,-0.03752471,-0.053794164,-0.051213793,-0.041067254,0.00096353877,-0.007008549,0.0022373234,0.018270334,0.023616951,0.063328415,-0.004089231,-0.006401724,-0.01683801,-0.031248724,-0.00047220234,-0.016881745,0.0016701339,0.047540046,0.070544705,0.01947305,0.028427811,-0.03057083,0.035053678,0.009331975,-0.023398275,-0.029040102,0.034463253,-0.016411593,-0.0045293155,-0.037743386,-0.06599625,0.033741623,-0.017002018,-0.027290698,-0.029040102,-0.0076536415,-0.016214786,0.020074409,0.024469785,0.0111743165,-0.03772152,-0.06079178,0.015843038,0.02014001,-0.015187011,-0.049989212,-0.013798422,-0.015471289,-0.05090765,-0.078591965,-0.032035954,0.029258776,0.033566684,0.015383819,0.014312309,-0.015121409,0.02263291,0.013043991,-0.019462116,0.03804953,0.050207887,0.004441845,0.012628508,-0.023835625,-0.040039476,0.039798934,-0.016914546,0.021659805,-0.06052937,0.022523573,-0.025738101,-0.007074151,-0.04509088,-0.029368116,0.022195559,0.0005852986,-0.04421618,-0.042904127,0.026328526,-0.016903613,0.0045347824,-0.044959676,-0.0078504495,-0.018150063,-0.020271216,0.03083324,0.012541038,-0.05908611,0.003840488,0.02129899,0.012278628,-0.013951494,0.04102352,0.01590864,-0.0144981835,-0.06271613,-0.022589175,0.025060209,0.03341361,0.032429572,-0.015974242,0.021539534,-0.011546064,0.017592441,0.0148152625,0.018204732,0.0036464133,0.0075388364,0.013809356,0.038005795,-0.0076317736,-0.035862777,0.02468846,0.03433205,0.009763859,-0.048720893,-0.013361071,0.025978645,0.008260466,-0.029105704,0.016061712,-0.06678349,-0.020325884,-0.010064539,0.010944707,0.022873454,-0.0029603192,0.027815519,-0.04697149,-0.021473931,0.03057083,-0.047714986,0.02663467,0.0273563,0.0563308,-0.019145036,-0.040170684,0.010042671,-0.028865162,0.043188404,-0.018117262,0.010490956,-0.039558392,-0.04688402,-0.0035562098,-0.0068828105,0.005778499,-0.028602751,-0.029980406,-0.02202062,0.0066750688,0.05151994,-0.03431018,0.079116784,-0.024885269,-0.0256725,0.021856613,-0.022764117,0.017548706,-0.0018546412,-0.045921847,-0.023223335,-0.0019011098,-0.018117262,0.06805181,-0.03448512,-0.023288937,-0.0010885939,0.01929811,0.0024040635,0.02370442,-0.009167969,0.013787488,-0.04955186,0.01448725,0.005499688,0.007276426,0.015012071,0.018346872,0.040936045,-0.028318472,0.026503466,-0.010452687,0.028034195,0.02274225,0.026809612,-0.002587204,-0.026262924,0.035775308,0.01634599,-0.04911451,-0.037349768,-0.009064098,0.01866395,-0.002077417,0.009720124,-0.023748156,-0.05375043,-0.029914804,-0.01086817,0.00075306365,-0.032429572,0.028646486,-0.019232508,-0.013372005,-0.016520932,-0.05738044,-0.019243442,-0.02179101,-0.0256725,0.015580627,-0.007172555,-0.025235148,-0.034266446,-0.013874958,0.022381434,0.008030856,-0.012847183,0.027771784,0.04450046,0.021867547,0.02665654,-0.009217171,-0.01747217,-0.014312309,-0.054231517,-0.0056691617,-0.005513355,-0.011655402,0.016870812,0.009096899,-0.022261163,0.036387596,-0.028274737,-0.010042671,-0.038246337,0.026306659,-0.028493414,-0.020150945,-0.097441785,-0.035359822,0.021627003,0.007074151,-0.028187267,0.034988075,-0.010321482,0.03129246,0.009993468,0.06490288,0.014159236,-0.034900606,0.045353293,-0.012070886,-0.021998752,-0.0010318748,-0.0009840396,0.009512383,-0.0060846447,0.063853234,-0.040411226,0.0028072463,-0.024732195,-0.021277122,0.013109595,-0.010676829,-0.027028287,0.01044722,-0.007577105,-0.017450303,-0.004551183,-0.0099497335,0.051476203,-0.00020979177,0.04170141,-0.046184257,-0.04126406,-0.0035562098,-0.008309668,0.027902989,-0.019735461,0.0413734,-0.051126324,0.017898588,0.043669492,0.0060190423,0.0076263067,-0.009228105,0.035797175,0.0068172077,-0.014826196,-0.045440763,-0.020566428,-0.002799046,0.00059520727,-0.027574977,-0.0060573104,0.05340055,-0.03835568,0.006893744,0.078591965,-0.0054532196,-0.04428178,-0.0063415887,0.003878756,0.017373765,0.044631664,0.033369876,-0.005942506,0.030876976,0.05252585,-0.027662447,0.012387965,0.034113374,0.00037448172,-0.0041657677,-0.012409832,-0.012377031,0.02932438,-0.036321994,0.0040536965,-0.045528233,-0.026000513,0.011141515,-0.005010402,0.041876353,-0.0014104567,0.038268205,-0.037918326,-0.025453825,0.016083581,0.013864025,0.023944963,0.042925995,-0.049420655,-0.024994606,0.0039689597,-0.030855108,0.042816658,0.017002018,-0.0068281414,-0.06516529,-0.013798422,0.039952006,0.0060463767,0.042029426,0.05375043,-0.0042614383,-0.024426049,-0.07986028,-0.012781581,0.050951384,-0.0057839663,0.057424176,0.010529224,0.014541918,-0.043647625,0.014126435,0.07111326,-0.009960667,0.024644725,0.032035954,0.0011603467,-0.04614052,0.006899211,-0.05453766,-0.020216547,-0.04419431,0.052788258,-0.00006743917,-0.049989212,0.0020159145,0.0061830487,-0.0038951568,-0.007090552,-0.0064837276,-0.04119846,-0.063415885,0.043122802,-0.014552852,-0.031576738,-0.0101465415,-0.006981214,0.06665228,0.0042887726,-0.00604091,-0.01474966,0.039689597,-0.035250485,0.00036047283,-0.03181728,0.0028154466,0.030330287,0.009146102,0.026262924,-0.0032965327,0.034506988,0.016269455,0.038967967,0.01863115,0.023616951,0.0065383962,-0.05204476,0.00039874105,0.028012328,-0.022293964,-0.00018040725,-0.014410713,0.022851586,0.09026923,0.05064524,0.054056574,-0.01706762,0.081653416,0.008943827,-0.01417017,-0.038574353,0.024972739,0.056636944,-0.0066750688,-0.008823555,-0.005931572,0.0040591634,-0.02877769,-0.019527718,0.018653017,0.039142907,0.0006321088,-0.000013784669,0.008971161,0.032823186,0.013262667,0.03487874,-0.028996367,-0.02051176,-0.010791634,0.027159493,0.02744377,0.022567308,-0.047233902,-0.0034004035,0.0023111263,-0.06481541,0.021725407,0.033916567,0.062453713,-0.0055215554,0.027487505,0.016269455,0.013393872,-0.016105449,0.03083324,0.03665001,0.02254544,-0.008725151,-0.02170354,0.017570574,0.02387936,-0.0028099797,-0.05926105,-0.00025062257,-0.061229132,-0.032823186,0.02619732,-0.01956052,0.012705045,0.014880866,0.00030324137,-0.027531242,0.031795412,0.019232508,0.00029247845,-0.016892679,0.0015307283,-0.011218051,-0.011059511,0.01631319,-0.0074951015,0.02344201,-0.001232783,0.0036054119,0.011146982,-0.0048108604,-0.06052937,0.0073584295,0.0012150155,-0.02663467,-0.015165144,-0.005543423,-0.005174408,-0.0017439368,-0.0049611996,0.026328526,-0.015985176,0.01854368,-0.025169546,0.040695503,0.014060833,-0.03297626,-0.019713594,-0.021506732,0.013284534,0.059960812,-0.014356044,-0.025606897,0.0042423042,-0.026284792,-0.01703482,0.05064524,-0.0115898,-0.024382314,0.012617574,-0.04445672,0.013240799,0.005931572,0.016247587,-0.015832104,-0.015055805,-0.02335454,0.019724527,0.028034195,0.002990387,-0.0119287465,-0.0054477523,-0.021178719,-0.026372261,-0.011480462,0.018292204,0.0010332416,0.00621585,-0.015099541,0.018598348,-0.017953256,0.0027266098,-0.023048393,0.009386645,-0.015679032,-0.0042040357,-0.0024518988,0.020555494,0.020457089,-0.011885012,-0.01996507,-0.010173876,0.0029821866,-0.028274737,-0.00066696014,0.009599853,0.001556696,-0.010928307,-0.015263547,-0.02764058,0.02744377,0.060573105,-0.01956052,-0.045790642,-0.013382939,-0.017002018,0.0035589433,0.0101082735,0.0024382314,-0.0049666665,0.025803706,-0.011250853,-0.0041521005,0.010130141,0.0389461,0.009725591,0.019757329,0.012541038,0.04288226,0.010430819,-0.012901853,0.027749917,-0.040979784,0.012234893,-0.060398165,0.016892679,-0.0050978716,-0.014279508,-0.009638121,-0.00084463396,-0.017942322,-0.0034086038,0.017002018,0.010102807,-0.0005097872,-0.03092071,0.008315135,-0.022785984,0.01283625,-0.053531755,0.014990203,-0.03199222,0.0019557788,-0.055324893,-0.0119287465,0.008654081,0.038661823,-0.016017977,-0.016083581,0.034966208,-0.031051917,-0.053050667,-0.01675054,0.014858997,0.04482847,-0.02274225,-0.03280132,0.0030997247,-0.003550743,-0.00078449823,-0.026241057,0.028755823,-0.048502218,0.017187892,0.033872828,-0.009457714,-0.063066006,-0.009988002,0.0027949458,0.034113374,-0.010512823,0.022829719,0.04911451,0.008583012,-0.040258154,0.01898103,0.0146949915,0.05803647,-0.023245202,0.007921519,0.00960532,0.0027361768,-0.0069156117,-0.020249348,-0.0017548706,0.015263547,0.0063197208,-0.011633535,-0.021889415,-0.013218932,0.0051443405,-0.019658925,0.038727425,0.020522693,-0.02541009,0.03120499,-0.0007031783,-0.032757584,-0.014760594,-0.00035671436,0.0025721702,-0.03494434,0.0011043111,0.02460099,-0.018565547,0.015252613,0.035184883,-0.043997504,-0.07391231,-0.028624618,0.0112945875,0.0053411485,0.011360191,-0.026700275,-0.013809356,-0.005335681,0.026394129,0.020872572,0.01982293,0.020085342,0.01399523,-0.034769397,-0.007566171,-0.031620473,0.01663027,-0.01854368,0.04419431,-0.003772152,-0.025103943,0.011360191,0.031926617,0.011841277,0.0076919096,-0.042204365,-0.0038432213,0.0006143414,-0.021714473,0.012409832,-0.007910585,0.0059097046,0.022501705,0.0077356445,-0.016520932,-0.017789248,0.0060627772,-0.030199083,-0.00096900563,0.011994349,-0.0047452576,-0.028034195,0.011578866,0.0099552,-0.024885269,0.020763235,-0.0048928633,-0.020249348,-0.008293267,-0.047889926,-0.009610787,-0.07225037,0.0048245275,0.0026938084,0.0256725,-0.010387084,-0.016017977,0.014738726,-0.030636434,-0.023551347,-0.018740488,-0.011731938,-0.016848944,-0.021189652,0.0027635111,0.022436103,0.022031553,-0.027837386,0.0034578058,-0.017975124,0.011305521,-0.0056199594,-0.033369876,-0.0065875985,0.014235773,0.017679911,-0.019101301,-0.026000513,0.011141515,-0.014181104,0.016827077,-0.01599611,-0.0008254999,0.008544744,0.009413979,-0.0024997338,-0.019582387,-0.014159236,0.005630893,0.0004206086,-0.025781838,-0.029477453,0.011731938,-0.00096558884,0.0076317736,0.025103943,-0.039558392,0.021134984,-0.051301263,-0.015635297,-0.035862777,0.022720382,-0.0075552375,0.042532377,-0.047146432,-0.004340708,0.023682553,0.037983928,-0.0025667034,-0.022611042,0.026940817,-0.006237718,0.032254633,0.003107925,0.016936414,0.040192552,0.002916584,-0.0223377,-0.013131462,-0.0059917076,0.020205613,0.003824087,-0.02532262,0.010808035,0.0012040818,-0.019986937,-0.006265052,0.02807793,-0.026044248,-0.0056527606,0.028471546,0.018182864,-0.0059589064,0.0157337,0.022851586,0.03415711,0.040061343,-0.0026869748,0.0012744679,0.008030856,0.036475066,-0.012650375,-0.0007059117,0.010387084,-0.003914291,-0.015766501,-0.015799303,0.004225903,-0.010370684,0.017275361,-0.026044248,-0.011218051,0.019505851,-0.016247587,0.010753366,-0.026394129,0.0027061088,0.006106512,0.042313702,0.031795412,-0.015613428,-0.005029536,-0.014520051,0.00026138552,0.009736525,0.0035261419,-0.0063251876,-0.0016920014,-0.012464502,-0.03769965,-0.027203228,0.0045293155,0.03485687,-0.022611042,-0.013437607,0.010469088,-0.013437607,-0.018970096,-0.034463253,-0.014246707,0.02888703,0.016772408,0.005253678,-0.035687838,0.035884645,0.000047621706,0.028034195,0.008353403,0.033041865,0.02225023,-0.01051829,0.029105704,-0.008954761,0.02610985,-0.004340708,-0.0028291137,0.019746395,0.037109226,-0.033829093,0.042466775,0.021069381,-0.0036983488,0.0049420656,0.030876976,0.0014295909,0.005931572,-0.008233131,-0.06595252,0.022982791,0.03741537,0.011218051,0.01817193,-0.006603999,0.018653017,0.0064946613,0.0153291505,0.014093634,0.0053466153,0.0028127132,0.026044248,-0.014738726,0.021200586,-0.01457472,0.016914546,-0.028405944,0.039274115,-0.01234423,-0.008905558,0.032035954,0.06529649,-0.001959879,0.05917358,0.004884663,-0.015952375,0.0070194826,-0.054668866,-0.04119846,-0.0075989724,0.0077301776,0.031664208,0.0106221605,-0.007844983,-0.007948853,-0.014596587,-0.0030313886,-0.009009429,0.0023917628,0.031751677,-0.05366296,-0.014323243,0.036475066,0.0030040543,-0.0671771,-0.012409832,-0.019932268,-0.008610346,-0.020588296,-0.010578426,0.014858997,-0.0024901668,-0.008353403,0.04920198,0.008982095,0.013765621,-0.016367858,0.0190685,0.026000513,-0.019833865,0.020380553,0.005876903,-0.023376407,0.008265933,0.012617574,-0.034025904,-0.007145221,0.0015471289,-0.041067254,0.031051917,0.010283214,0.013579747,-0.043363344,0.00031793362,0.021069381,-0.02755311,-0.02407617,0.024185507,0.0140827,-0.0148152625,0.0021334526,0.016914546,0.045222085,0.037765253,0.01034335,0.02335454,0.012978389,-0.0075279027,0.0108189685,-0.012912787,-0.010326949,0.00588237,0.00023815125,-0.0012560172,-0.03566597,0.00067447714,-0.020992845,-0.0133501375,-0.042860392,0.007079618,-0.017023886,0.012420766,-0.030505227,-0.02532262,-0.009567051,0.013634415,-0.019976003,0.003589011,0.011841277,-0.012814382,0.0079707205,-0.006172115,0.0047753253,-0.01116885,0.0013680884,-0.008030856,-0.003589011,-0.022206493,-0.005494221,0.01634599,0.062278774,-0.018390607,0.02352948,0.013798422,-0.016192919,-0.0010305081,0.007566171,0.04012695,-0.016870812,0.006997615,-0.014399779,0.014716859,0.013426674,-0.0025790038,-0.012967455,0.01917784,-0.0064891945,0.020577362,0.027159493,-0.004592185,0.012289561,0.03538169,0.026940817,0.011425793,0.016444394,-0.025388222,0.014793395,0.015799303,0.0008706017,0.009031297,-0.02205342,-0.015143276,0.0049803336,-0.0032910658,-0.021222454,-0.010059072,0.007183489,-0.030155346,-0.009495982,-0.016761474,-0.04430365,-0.005352082,0.009714657,-0.0040591634,-0.00044760134,-0.0047589247,0.029696127,0.00904223,0.011699137,-0.037896458,-0.00040933312,0.0010967941,-0.011032177,0.016017977,0.022829719,-0.024294844,-0.010266813,0.0104636215,0.023660686,-0.011228985,0.02187848,-0.00438991,0.0102285445,-0.0012027151,-0.021080315,-0.022173692,0.015197945,0.008965694,-0.0256725,0.012049018,-0.0050514033,-0.026853347,-0.008036324,-0.009506916,0.02103658,0.03350108,-0.04517835,-0.01367815,-0.02477593,-0.014640323,-0.0065821316,0.016236654,-0.017078554,0.0045429827,-0.029477453,0.004329774,0.025803706,-0.048808362,-0.042291835,0.021200586,-0.02451352,0.0091297,0.0006826775,-0.006139314,-0.031773545,0.026875215,0.010775234,-0.025628764,0.0008480508,-0.016291322,0.020325884,-0.012803448,-0.02674401,0.019986937,-0.024404181,-0.028384075,-0.017100422,-0.009178903,0.017111355,0.018674884,-0.0154494215,-0.008353403,0.009146102,-0.0066586677,-0.03575344,0.0031762612,-0.0144981835,-0.00935931,-0.013393872,0.031248724,0.053706694,0.010261347,-0.038793027,0.017986057,0.0339603,0.06914518,0.017504971,-0.00015179152,0.013951494,-0.029215042,-0.01599611,-0.025694367,-0.0024819665,-0.0091570355,0.0406299,0.014192037,-0.0148918,0.019166905,-0.009375711,0.01898103,0.019396514,0.018707685,0.0053384146,-0.010004402,-0.0036983488,0.0013496376,-0.02619732,0.0048163272,0.029980406,-0.020435221,-0.007336562,-0.0030177215,-0.025891175,-0.008107393,0.0023876627,-0.007910585,-0.009282773,0.02532262,-0.005368483,-0.011644469,0.0071998895,0.051651146,-0.008965694,-0.023660686,0.001969446,0.0034769399,-0.011218051,0.01622572,0.02744377,0.016291322,-0.033894695,0.02477593,0.019309044,-0.009818529,-0.031270593,-0.006275986,0.037371635,-0.0028619152,0.020413354,0.032648247,-0.016947348,-0.02558503,0.013229866,-0.0044063106,0.039383452,-0.0014350577,-0.0068281414,0.029083837,-0.031226857,0.0065329294,0.013218932,-0.0045484495,0.018029792,0.02379189,0.059873343,0.0066586677,-0.021145917,-0.00009848938,0.026000513,-0.010512823,0.019013831,-0.020380553,-0.00978026,-0.010611227,-0.04653414,-0.04375696,0.034025904,0.025563162,-0.009687323,0.0053056134,-0.024907136,0.015755568,-0.01555876,-0.042838525,0.0007059117,-0.021014713,-0.0075880387,0.008342469,-0.018412475,-0.014913667,0.06595252,0.015635297,-0.0067680054,0.013197064,-0.028362207,0.016378792,-0.005598092,0.022086222,-0.0011316455,-0.010381618,0.029958539,0.005876903,0.002209989,-0.017887654,-0.027793651,0.030636434,-0.014017098,0.006806274,-0.028799558,-0.01782205,0.023813758,-0.025869308,-0.023223335,0.02161607,-0.02764058,0.004149367,-0.02460099,0.011360191,-0.014771528,0.009364777,0.013765621,0.023551347,0.009167969,0.014465382,0.011841277,0.026241057,0.0061939824,0.022960924,0.009014896,-0.009856797,-0.021200586,0.026372261,-0.04447859,0.0061885156,-0.0016099982,0.03665001,0.0016824343,-0.019943202,0.05213223,-0.019330911,0.010130141,-0.026437864,0.024382314,0.007145221,-0.0018491744,-0.004173968,-0.009654522,-0.032014087,0.019341845,0.028296605,-0.02225023,-0.0035726104,0.020424288,0.02772805,-0.001389956,0.025344487,0.008183929,0.018915428,-0.005335681,-0.009468648,-0.011070445,0.018128196,0.023595084,0.0027512107,0.016772408,-0.002327527,0.009085965,-0.039011702,-0.012715979,0.035906512,-0.02825287,0.019811997,0.016466262,-0.01999787,-0.0289745,0.014334177,-0.034550723,-0.0073037604,0.01817193,0.011458594,0.016444394,-0.035425425,0.023748156,-0.018467143,-0.019516785,-0.029477453,0.0042040357,-0.0028892495,-0.021780076,0.01483713,0.026569068,-0.033894695,-0.041745145,0.010917373,-0.030067876,0.011666336,0.021594202,-0.013896826,-0.008397138,-0.012584773,0.025825573,-0.033282407,-0.013393872,0.008550211,0.031576738,0.011600734,0.025147678,0.019243442,-0.01474966,-0.00960532,-0.01643346,-0.03654067,-0.0070632175,-0.0063798567,-0.011382058,-0.031423666,0.018007925,-0.026853347,-0.037480976,-0.038814895,-0.0094358465,-0.0067188037,0.0021484864,-0.00777938,0.028580884,-0.043100934,-0.01011374,0.017887654,0.011556998,0.00032476723,-0.005171675,0.015963309,-0.02129899,-0.023573216,-0.023682553,-0.026350394,0.011699137,0.038137,0.00835887,-0.011841277,0.016324123,0.011403926,0.014421647,-0.0009614887,0.034353916,0.025060209,0.0014418913,0.0037885525,0.013864025,-0.011863144,0.010829902,-0.00092185376,-0.0035370756,0.030439625,-0.01555876,-0.0373279,-0.010911906,0.013251733,-0.002460099,-0.0050978716,-0.027093891,0.035272352,-0.020533627,-0.00479446,-0.037677784,-0.008927426,-0.0052017425,0.0036054119,-0.0066203997,-0.037677784,0.0004288089,-0.018849825,-0.023376407,-0.028799558,-0.063328415,0.0314674,-0.019319978,0.015351018,0.038290072,-0.021244321,0.020675765,0.0040290956,0.033894695,-0.016269455,0.0018642084,-0.042488642,-0.010917373,0.0033129333,0.023726288,-0.026000513,-0.008681416,-0.012847183,-0.0020992844,-0.039470922,0.03326054,-0.003687415,-0.0009614887,0.027706182,0.0101465415,0.0190685,-0.04001761,0.025694367,0.019855732,0.022698514,0.037677784,0.027684314,-0.0013482709,-0.017603375,-0.030855108,0.019429315,0.011239919,-0.0011213952,0.0154494215,0.010824435,-0.02869022,0.0074951015,0.023376407,0.004772592,0.024994606,-0.018325005,0.022873454,0.014596587,-0.027225096,0.0011671802,-0.017668977,0.014924601,0.10094059,0.0014746927,0.008643148,-0.025563162,0.011841277,-0.009567051,0.026328526,0.017592441,0.023551347,0.04928945,-0.033304274,-0.0067625386,-0.015657164,0.011190717,0.0155259585,0.044697266,0.0024218308,-0.0072108237,0.012311429,0.039536525,0.024404181,-0.000022935297,-0.04815234,0.008008989,-0.020960044,0.013393872,0.024294844,0.027137626,-0.025541294,-0.04111099,-0.028296605,0.03039589,-0.0037967528,-0.018642083,0.02530075,0.013142396,0.012366097,0.0023466612,0.0006146831,0.041154724,-0.008889157,0.018095395,0.02352948,0.005975307,0.005559824,-0.05252585,-0.004797193,0.0042559714,0.033479214,0.023376407,-0.016389726,0.022982791,-0.008145661]},{"id":"design-twitter-feed","name":"Design Twitter Feed","description":"Implement a simplified version of Twitter which allows users to post tweets, follow/unfollow each other, and view the `10` most recent tweets within their own news feed.\n\nUsers and tweets are uniquely identified by their IDs (integers).\n\nImplement the following methods:\n\n* `Twitter()` Initializes the twitter object.\n* `void postTweet(int userId, int tweetId)` Publish a new tweet with ID `tweetId` by the user `userId`. You may assume that each `tweetId` is unique.\n* `List<Integer> getNewsFeed(int userId)` Fetches at most the `10` most recent tweet IDs in the user's news feed. Each item must be posted by users who the user is following or by the user themself. Tweets IDs should be **ordered from most recent to least recent**.\n* `void follow(int followerId, int followeeId)` The user with ID `followerId` follows the user with ID `followeeId`.\n* `void unfollow(int followerId, int followeeId)` The user with ID `followerId` unfollows the user with ID `followeeId`.\n\n**Example 1:**\n\n```java\nInput:\n[\"Twitter\", \"postTweet\", [1, 10], \"postTweet\", [2, 20], \"getNewsFeed\", [1], \"getNewsFeed\", [2], \"follow\", [1, 2], \"getNewsFeed\", [1], \"getNewsFeed\", [2], \"unfollow\", [1, 2], \"getNewsFeed\", [1]]\n\nOutput:\n[null, null, null, [10], [20], null, [20, 10], [20], null, [10]]\n\nExplanation:\nTwitter twitter = new Twitter();\ntwitter.postTweet(1, 10); // User 1 posts a new tweet with id = 10.\ntwitter.postTweet(2, 20); // User 2 posts a new tweet with id = 20.\ntwitter.getNewsFeed(1);   // User 1's news feed should only contain their own tweets -> [10].\ntwitter.getNewsFeed(2);   // User 2's news feed should only contain their own tweets -> [20].\ntwitter.follow(1, 2);     // User 1 follows user 2.\ntwitter.getNewsFeed(1);   // User 1's news feed should contain both tweets from user 1 and user 2 -> [20, 10].\ntwitter.getNewsFeed(2);   // User 2's news feed should still only contain their own tweets -> [20].\ntwitter.unfollow(1, 2);   // User 1 follows user 2.\ntwitter.getNewsFeed(1);   // User 1's news feed should only contain their own tweets -> [10].\n```\n\n**Constraints:**\n* `1 <= userId, followerId, followeeId <= 100`\n* `0 <= tweetId <= 1000`\n","difficulty":"Medium","concepts":["Heap Properties","Push and Pop","Hash Usage"],"solutions":{"python":"class Twitter:\n    def __init__(self):\n        self.count = 0\n        self.tweetMap = defaultdict(list)  # userId -> list of [count, tweetIds]\n        self.followMap = defaultdict(set)  # userId -> set of followeeId\n\n    def postTweet(self, userId: int, tweetId: int) -> None:\n        self.tweetMap[userId].append([self.count, tweetId])\n        self.count -= 1\n\n    def getNewsFeed(self, userId: int) -> List[int]:\n        res = []\n        minHeap = []\n\n        self.followMap[userId].add(userId)\n        for followeeId in self.followMap[userId]:\n            if followeeId in self.tweetMap:\n                index = len(self.tweetMap[followeeId]) - 1\n                count, tweetId = self.tweetMap[followeeId][index]\n                heapq.heappush(minHeap, [count, tweetId, followeeId, index - 1])\n\n        while minHeap and len(res) < 10:\n            count, tweetId, followeeId, index = heapq.heappop(minHeap)\n            res.append(tweetId)\n            if index >= 0:\n                count, tweetId = self.tweetMap[followeeId][index]\n                heapq.heappush(minHeap, [count, tweetId, followeeId, index - 1])\n        return res\n\n    def follow(self, followerId: int, followeeId: int) -> None:\n        self.followMap[followerId].add(followeeId)\n\n    def unfollow(self, followerId: int, followeeId: int) -> None:\n        if followeeId in self.followMap[followerId]:\n            self.followMap[followerId].remove(followeeId)\n","javascript":"/**\n * const { MaxPriorityQueue } = require('@datastructures-js/priority-queue');\n */\n\nclass Twitter {\n    constructor() {\n        this.users = new Map();\n        this.timestamp = 0;\n    }\n\n    /**\n     * @param {number} userId\n     * @param {number} tweetId\n     * @return {void}\n     */\n    postTweet(userId, tweetId) {\n        if (!this.users.has(userId)) {\n            this.users.set(userId, { tweets: [], following: new Set() });\n        }\n        this.users\n            .get(userId)\n            .tweets.push({ timestamp: this.timestamp, tweetId });\n        this.timestamp += 1;\n    }\n\n    /**\n     * @param {number} userId\n     * @return {number[]}\n     */\n    getNewsFeed(userId) {\n        if (!this.users.has(userId)) {\n            return [];\n        }\n\n        const maxPQ = new MaxPriorityQueue(tweet => tweet.timestamp);\n        const seenTweets = new Set();\n\n        const user = this.users.get(userId);\n        user.tweets.forEach(tweet => {\n            if (!seenTweets.has(tweet.tweetId)) {\n                maxPQ.enqueue(tweet);\n                seenTweets.add(tweet.tweetId);\n            }\n        });\n\n        user.following.forEach(followeeId => {\n            if (this.users.has(followeeId)) {\n                this.users.get(followeeId).tweets.forEach(tweet => {\n                    if (!seenTweets.has(tweet.tweetId)) {\n                        maxPQ.enqueue(tweet);\n                        seenTweets.add(tweet.tweetId);\n                    }\n                });\n            }\n        });\n\n        const newsFeed = [];\n        for (let i = 0; i < 10 && !maxPQ.isEmpty(); i++) {\n            newsFeed.push(maxPQ.dequeue().tweetId);\n        }\n\n        return newsFeed;\n    }\n\n    /**\n     * @param {number} followerId\n     * @param {number} followeeId\n     * @return {void}\n     */\n    follow(followerId, followeeId) {\n        if (!this.users.has(followerId)) {\n            this.users.set(followerId, { tweets: [], following: new Set() });\n        }\n        this.users.get(followerId).following.add(followeeId);\n    }\n\n    /**\n     * @param {number} followerId\n     * @param {number} followeeId\n     * @return {void}\n     */\n    unfollow(followerId, followeeId) {\n        if (this.users.has(followerId)) {\n            this.users.get(followerId).following.delete(followeeId);\n        }\n    }\n}\n","cpp":"class Twitter {\nprivate:\n    int count;\n    map<int, vector<vector<int>>> tweetMap;\n    map<int, set<int>> followMap;\n\npublic:\n    Twitter() {\n        count = 0;\n    }\n\n    void postTweet(int userId, int tweetId) {\n        tweetMap[userId].push_back({count++, tweetId});\n    }\n\n    vector<int> getNewsFeed(int userId) {\n        vector<int> res;\n        auto compare = [](const vector<int>& a, const vector<int>& b) {\n            return a[0] < b[0];\n        };\n        priority_queue<vector<int>, vector<vector<int>>, decltype(compare)> minHeap(compare);\n\n        followMap[userId].insert(userId);\n        for (int followeeId : followMap[userId]) {\n            if (tweetMap.count(followeeId)) {\n                const vector<vector<int>>& tweets = tweetMap[followeeId];\n                int index = tweets.size() - 1;\n                minHeap.push({tweets[index][0], tweets[index][1], followeeId, index});\n            }\n        }\n\n        while (!minHeap.empty() && res.size() < 10) {\n            vector<int> curr = minHeap.top();\n            minHeap.pop();\n            res.push_back(curr[1]);\n            int index = curr[3];\n            if (index > 0) {\n                const vector<int>& tweet = tweetMap[curr[2]][index - 1];\n                minHeap.push({tweet[0], tweet[1], curr[2], index - 1});\n            }\n        }\n        return res;\n    }\n\n    void follow(int followerId, int followeeId) {\n        followMap[followerId].insert(followeeId);\n    }\n\n    void unfollow(int followerId, int followeeId) {\n        followMap[followerId].erase(followeeId);\n    }\n};\n","java":"class Twitter {\n    \n    private int count;\n    private Map<Integer, List<int[]>> tweetMap;\n    private Map<Integer, Set<Integer>> followMap;\n\n    public Twitter() {\n        count = 0;\n        tweetMap = new HashMap<>();\n        followMap = new HashMap<>();\n    }\n\n    public void postTweet(int userId, int tweetId) {\n        tweetMap.computeIfAbsent(userId, k -> new ArrayList<>()).add(new int[]{count--, tweetId});\n    }\n\n    public List<Integer> getNewsFeed(int userId) {\n        List<Integer> res = new ArrayList<>();\n        PriorityQueue<int[]> minHeap = new PriorityQueue<>(Comparator.comparingInt(a -> a[0]));\n\n        followMap.computeIfAbsent(userId, k -> new HashSet<>()).add(userId);\n        for (int followeeId : followMap.get(userId)) {\n            if (tweetMap.containsKey(followeeId)) {\n                List<int[]> tweets = tweetMap.get(followeeId);\n                int index = tweets.size() - 1;\n                int[] tweet = tweets.get(index);\n                minHeap.offer(new int[]{tweet[0], tweet[1], followeeId, index});\n            }\n        }\n\n        while (!minHeap.isEmpty() && res.size() < 10) {\n            int[] curr = minHeap.poll();\n            res.add(curr[1]);\n            int index = curr[3];\n            if (index > 0) {\n                int[] tweet = tweetMap.get(curr[2]).get(index - 1);\n                minHeap.offer(new int[]{tweet[0], tweet[1], curr[2], index - 1});\n            }\n        }\n        return res;\n    }\n\n    public void follow(int followerId, int followeeId) {\n        followMap.computeIfAbsent(followerId, k -> new HashSet<>()).add(followeeId);\n    }\n\n    public void unfollow(int followerId, int followeeId) {\n        followMap.computeIfPresent(followerId, (k, v) -> {\n            v.remove(followeeId);\n            return v;\n        });\n    }\n}\n","csharp":"public class Twitter {\n\n    private int count;\n    private Dictionary<int, List<int[]>> tweetMap;\n    private Dictionary<int, HashSet<int>> followMap;\n\n    public Twitter() {\n        count = 0;\n        tweetMap = new Dictionary<int, List<int[]>>();\n        followMap = new Dictionary<int, HashSet<int>>();\n    }\n\n    public void PostTweet(int userId, int tweetId) {\n        if (!tweetMap.ContainsKey(userId)) {\n            tweetMap[userId] = new List<int[]>();\n        }\n        tweetMap[userId].Add(new int[] { count--, tweetId });\n    }\n\n    public List<int> GetNewsFeed(int userId) {\n        List<int> res = new List<int>();\n        SortedSet<int[]> minHeap = new SortedSet<int[]>(Comparer<int[]>.Create((a, b) => a[0].CompareTo(b[0])));\n        \n        if (!followMap.ContainsKey(userId)) {\n            followMap[userId] = new HashSet<int>();\n        }\n        followMap[userId].Add(userId);\n        \n        foreach (int followeeId in followMap[userId]) {\n            if (tweetMap.ContainsKey(followeeId)) {\n                List<int[]> tweets = tweetMap[followeeId];\n                if (tweets.Count > 0) {\n                    int index = tweets.Count - 1;\n                    int[] tweet = tweets[index];\n                    minHeap.Add(new int[] { tweet[0], tweet[1], followeeId, index });\n                }\n            }\n        }\n\n        while (minHeap.Count > 0 && res.Count < 10) {\n            int[] curr = minHeap.Min;\n            minHeap.Remove(minHeap.Min);\n            res.Add(curr[1]);\n            int index = curr[3];\n            if (index > 0) {\n                int[] tweet = tweetMap[curr[2]][index - 1];\n                minHeap.Add(new int[] { tweet[0], tweet[1], curr[2], index - 1 });\n            }\n        }\n\n        return res;\n    }\n\n    public void Follow(int followerId, int followeeId) {\n        if (!followMap.ContainsKey(followerId)) {\n            followMap[followerId] = new HashSet<int>();\n        }\n        followMap[followerId].Add(followeeId);\n    }\n\n    public void Unfollow(int followerId, int followeeId) {\n        if (followMap.ContainsKey(followerId)) {\n            followMap[followerId].Remove(followeeId);\n        }\n    }\n}\n"},"starterCode":{"python":"class Twitter:\n\n    def __init__(self):\n        \n\n    def postTweet(self, userId: int, tweetId: int) -> None:\n        \n\n    def getNewsFeed(self, userId: int) -> List[int]:\n        \n\n    def follow(self, followerId: int, followeeId: int) -> None:\n        \n\n    def unfollow(self, followerId: int, followeeId: int) -> None:\n        \n","javascript":"class Twitter {\n    constructor() {}\n\n    /**\n     * @param {number} userId\n     * @param {number} tweetId\n     * @return {void}\n     */\n    postTweet(userId, tweetId) {}\n\n    /**\n     * @param {number} userId\n     * @return {number[]}\n     */\n    getNewsFeed(userId) {}\n\n    /**\n     * @param {number} followerId\n     * @param {number} followeeId\n     * @return {void}\n     */\n    follow(followerId, followeeId) {}\n\n    /**\n     * @param {number} followerId\n     * @param {number} followeeId\n     * @return {void}\n     */\n    unfollow(followerId, followeeId) {}\n}\n","cpp":"class Twitter {\npublic:\n    Twitter() {\n        \n    }\n    \n    void postTweet(int userId, int tweetId) {\n        \n    }\n    \n    vector<int> getNewsFeed(int userId) {\n        \n    }\n    \n    void follow(int followerId, int followeeId) {\n        \n    }\n    \n    void unfollow(int followerId, int followeeId) {\n        \n    }\n};\n","java":"class Twitter {\n\n    public Twitter() {\n        \n    }\n    \n    public void postTweet(int userId, int tweetId) {\n        \n    }\n    \n    public List<Integer> getNewsFeed(int userId) {\n        \n    }\n    \n    public void follow(int followerId, int followeeId) {\n        \n    }\n    \n    public void unfollow(int followerId, int followeeId) {\n        \n    }\n}\n","csharp":"public class Twitter {\n\n    public Twitter() {\n        \n    }\n    \n    public void PostTweet(int userId, int tweetId) {\n        \n    }\n    \n    public List<int> GetNewsFeed(int userId) {\n        \n    }\n    \n    public void Follow(int followerId, int followeeId) {\n        \n    }\n    \n    public void Unfollow(int followerId, int followeeId) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/pNichitDD2E","embedding":[-0.009098147,-0.07104456,-0.0062810993,-0.011062064,0.014978447,0.0062238425,0.002608059,0.013088964,-0.02505569,0.07196067,0.007254469,-0.048783015,-0.0012460568,0.02636115,0.0011036298,-0.04333214,-0.016593095,0.028010154,0.013741694,0.06637238,0.006481499,0.02358991,0.035705503,0.016879382,0.021070598,0.04273667,-0.03737741,0.04736304,-0.045301784,-0.040927347,0.020658348,-0.001859423,-0.012218656,0.014474585,0.0069395555,-0.06362405,0.028491113,0.01987965,0.034262624,0.06861686,0.019455949,-0.023910549,0.034079403,0.016615998,-0.038797382,-0.021585912,-0.03462907,0.051943604,0.022891372,0.0689375,-0.022490572,-0.0021686112,-0.02173478,-0.03469778,-0.043606978,-0.0042541996,-0.025261814,-0.00762664,-0.001075717,0.014451682,-0.0061894883,-0.023979256,0.00196678,0.007317452,-0.00766672,-0.049195267,0.03430843,-0.034926806,0.0057486086,0.013237832,-0.03618646,0.00038899016,-0.046836276,-0.06760914,-0.022021065,-0.024528924,-0.009464592,0.02904078,0.017417597,-0.020097228,0.006578836,0.0017978717,-0.03341522,0.024689244,-0.02441441,-0.0445918,-0.048141737,-0.05322616,0.013501215,-0.025422134,-0.008388159,0.004314319,-0.028445307,0.036209363,0.058127366,-0.020005617,0.061608598,0.010810133,-0.03153719,0.023292173,0.029246906,-0.008296547,-0.04177475,-0.00030686206,0.017245825,-0.02530762,-0.021585912,-0.0034812293,0.0011916625,0.019742234,-0.010105871,-0.029590448,0.054600332,-0.07713671,-0.0027640846,-0.017784042,-0.012035434,-0.0126652615,-0.037858367,-0.014749419,-0.0584022,0.0015301949,0.031056229,0.043606978,-0.013157672,-0.02872014,0.004617782,-0.06852525,-0.043446656,-0.011565926,0.035064224,-0.030277533,-0.0047065304,0.018310808,0.019593365,-0.017944362,-0.023475394,0.0010449414,0.021402689,-0.065639496,0.017726786,-0.008348079,-0.037858367,-0.019444497,0.017451951,-0.021906551,-0.052447468,-0.0012131339,-0.008937827,-0.024070868,0.040858638,-0.0019324258,-0.025719872,0.025857288,0.03417101,0.009934099,-0.01427991,0.028262084,0.011978176,-0.054875165,0.030758493,-0.03114784,-0.00028556958,0.014176848,-0.008216388,0.029796574,-0.005021444,-0.034606166,-0.02855982,-0.04184346,0.05102749,-0.010060065,0.0049613244,-0.0015645492,0.016398422,-0.0206927,-0.064769186,-0.002540782,-0.06508982,-0.07754896,-0.025696969,-0.0037818288,-0.054554526,-0.026223734,-0.0013849051,0.010249014,0.025742775,0.024483118,-0.002605196,-0.0102890935,0.01913531,0.047134012,0.02546794,0.011462864,-0.020635445,-0.0031319612,0.044316962,-0.014554745,0.0010113028,0.04873721,-0.0429886,0.04502695,-0.040858638,0.0016490034,0.02003997,-0.062066652,-0.009006536,0.061929237,0.006756333,-0.008485496,0.03139977,-0.041087665,0.012058336,-0.011039161,-0.053821635,0.01050667,-0.08854232,-0.0027626532,-0.05744028,0.031491384,-0.061746012,0.05061524,0.00484681,0.020452222,-0.0020798626,0.0043773022,0.006115054,-0.043171823,-0.014257008,0.030964619,-0.005994814,-0.026452761,-0.0063383565,-0.053638414,0.00798736,-0.059318315,-0.016661804,-0.0030088585,0.010678441,-0.025605356,-0.0037102574,0.004342948,-0.029132392,0.05776092,0.008582833,-0.0032951438,-0.041362498,-0.016089235,-0.00063412194,0.02993399,0.08849651,0.008502673,-0.006063523,0.014703613,-0.021757683,-0.0025078591,0.013902014,0.02952174,0.01249349,-0.018952087,-0.008204937,0.008296547,-0.057806727,-0.04250764,-0.007924377,-0.047271427,-0.03417101,0.013214929,-0.014875384,0.032155566,-0.0045118565,-0.011606006,0.030323338,-0.006424242,0.0251473,0.012962998,0.022502024,0.011817857,0.010317722,-0.048966236,0.028972073,0.020681249,0.03318619,0.008834764,0.011193755,0.012253011,0.01436007,0.05904348,0.02344104,0.028010154,-0.023704423,0.022467671,0.0026152162,0.0039192457,0.017887106,0.05849381,0.06985361,-0.0018751686,0.03996543,-0.047821097,-0.00042763868,-0.013157672,-0.04614919,-0.014268459,-0.05061524,-0.009871117,0.03385037,-0.011474315,0.00068923185,0.0023246366,-0.014119591,0.026567275,-0.046767566,-0.017383244,0.011165126,0.01922692,0.0011802111,-0.02150575,0.014039431,-0.021563008,-0.007225841,-0.011525846,0.006578836,0.044981144,0.0026853562,-0.035087127,0.012642358,-0.018952087,-0.012928644,-0.017577916,0.016295359,-0.017692432,0.017795494,0.060555067,-0.039369956,-0.008771782,-0.016661804,0.018219197,-0.024116673,0.031903632,0.016341165,-0.03156009,-0.009968454,0.00017141333,-0.061608598,0.0016661804,-0.021769134,0.012230108,-0.06664722,0.00839961,0.010712796,0.008319451,0.017417597,-0.014749419,-0.043904714,-0.024070868,0.0074147894,0.03050656,-0.0054508722,-0.018196294,0.014474585,-0.0014121023,0.05102749,-0.04250764,0.0036759032,-0.00007246597,-0.04372149,0.0005181764,-0.0527223,0.033438124,-0.0070941495,0.0027254361,0.021711877,-0.01172052,0.026887916,-0.013375249,0.005937557,0.04640112,0.0062238425,0.028491113,-0.021299627,-0.020967536,0.0104665905,0.02052093,0.020452222,0.054142274,0.036621615,0.005874574,-0.028811753,0.02116221,0.041568626,-0.036759034,0.01086739,0.056890614,0.027116943,-0.050523628,-0.0050901524,0.028674336,0.018528385,0.031903632,-0.013295089,-0.012676713,-0.04346956,0.017509209,-0.018230647,0.02320056,0.015047155,0.039805107,0.029315615,0.028078862,-0.005468049,-0.021585912,-0.016123587,-0.0005697077,0.011434235,-0.025994705,0.014692161,-0.01962772,0.03275104,0.01800162,-0.034766488,-0.043858908,0.019352887,0.0027225732,0.0038018688,-0.027620805,0.04452309,-0.046836276,0.00798736,-0.0013863365,-0.053959053,-0.026269538,-0.014909739,0.008571382,-0.0095218485,-0.042874087,0.024322798,0.03359844,0.026132122,0.04193507,-0.015092961,0.020978987,0.03229298,-0.00053857424,-0.014646356,-0.026086316,-0.036026143,0.017074056,-0.014841029,0.009745152,0.02814757,-0.0016031977,0.05913509,0.0030804297,-0.034262624,-0.060005397,0.0032751039,0.031193646,0.009710797,-0.030689783,-0.026796304,0.03316329,-0.032590717,0.048645597,0.03194944,-0.025078593,0.009224112,0.006584562,0.015024252,0.0031634525,0.042187,0.029017877,-0.0381332,0.0030718413,-0.0008109031,-0.0012811268,0.023979256,0.026750498,-0.028857557,0.011405606,-0.02198671,-0.027735319,0.0292011,0.013810403,-0.024093771,0.024528924,0.03391908,-0.026796304,0.023154754,0.023727326,-0.05043202,0.044500187,0.015539566,-0.0098539395,-0.034651972,0.012917193,0.024139576,-0.012127046,0.021998161,-0.048691403,-0.002161454,0.011193755,-0.04777529,0.046561442,-0.013272187,-0.026017608,-0.0059490083,-0.010689893,-0.0136615345,0.017692432,-0.02846821,-0.035339057,0.012482039,-0.0024477392,0.009647815,0.03261362,-0.014554745,-0.004440285,-0.008645816,-0.022834115,-0.0037045318,-0.008204937,-0.017337438,-0.01816194,0.0019524657,0.008748879,0.027460486,-0.01265381,-0.031743314,-0.013695888,-0.00486685,-0.0012066925,-0.030163018,-0.023406686,-0.04266796,0.011342623,-0.033644248,-0.05011138,-0.022982983,-0.0039536,0.03423972,0.026338248,0.0073918863,-0.0194674,-0.020956084,0.015115864,-0.017829848,0.025238913,-0.008634364,-0.04509566,0.045210175,0.019639172,0.0059318314,-0.052355856,-0.0015802948,-0.007557932,-0.021024792,-0.024620535,-0.0006648976,-0.006034894,0.0062009394,-0.005493815,0.031674605,0.026475664,-0.070907146,0.00677351,-0.015745692,-0.0064528706,-0.051073298,-0.0074205147,0.013776048,-0.042232808,-0.031674605,-0.033964887,-0.028811753,0.010661265,0.014909739,0.0032092582,0.01978804,0.030392047,-0.017898556,0.037537728,0.021459946,-0.023567006,-0.034835193,-0.023395235,-0.0037990059,0.037858367,0.0030747042,-0.012321719,0.037125476,0.02693372,0.015161669,-0.0033724408,-0.0028514015,-0.0032407495,-0.0077239773,-0.02287992,-0.018242098,0.039163828,0.0062753735,0.035339057,-0.04069832,0.009115323,0.016524388,0.014497488,0.024254091,0.017532112,-0.045462105,-0.00486685,-0.017165666,-0.04353827,-0.021219466,-0.023349429,-0.004282828,0.029178197,-0.0064585963,0.0064127906,0.03861416,-0.02092173,0.016615998,0.0032579268,0.008273645,0.006441419,0.0011773483,-0.016157942,-0.014291362,-0.0073518064,-0.0017849888,0.0037990059,0.010833035,0.0058201803,0.008582833,0.0035499376,-0.016615998,-0.0003521309,0.020933181,-0.009298546,-0.0061952136,-0.023704423,0.012871387,-0.0031090584,-0.028284987,0.03197234,0.006097877,0.018173391,-0.03801869,-0.019616269,0.0031520012,-0.0072659208,0.02101334,-0.028284987,0.0009139658,-0.030529464,0.0110048065,-0.03252201,-0.025536649,0.009327175,0.010374979,0.023349429,-0.017577916,0.031766217,0.016421326,0.01718857,-0.009098147,-0.011182304,-0.0070769726,-0.02700243,0.028491113,0.034537457,-0.031834926,-0.01265381,-0.0052676494,-0.023475394,0.00056040345,0.0074147894,0.03756063,-0.03098752,0.0106211845,0.023246367,0.005236158,-0.0021643168,-0.026338248,0.01841387,0.012802678,-0.005625506,-0.029727865,0.020578187,-0.011634635,-0.014394425,-0.00669335,0.0039278343,0.019112406,-0.017371792,0.013157672,-0.01736034,-0.019639172,0.01954756,-0.0032493381,-0.020543832,0.006252471,0.007139955,-0.008977907,0.030689783,-0.012424782,0.015699886,-0.006361259,-0.012218656,-0.016180845,0.01058683,-0.008817587,0.005098741,0.007890022,0.019433046,-0.04120218,0.013718791,-0.0016289634,-0.0016103548,0.0316288,0.006401339,0.006447145,0.0316288,0.017543564,-0.02076141,0.0043773022,-0.029292712,0.0023418136,-0.008182034,0.0365071,-0.01662745,-0.010890293,-0.02725436,0.069762,-0.004308594,0.0074090636,-0.020738507,-0.05368422,0.00478669,-0.059226703,0.0046263705,-0.004242748,-0.004397342,-0.0035585263,0.0155281145,0.007941554,0.0190666,-0.015024252,0.038545452,-0.039278343,-0.002178631,-0.040675417,0.006029168,0.008737427,-0.014989899,-0.022834115,0.005356398,0.01090747,0.020887375,-0.03852255,0.019742234,-0.0073918863,-0.0031520012,-0.059684757,-0.04795851,-0.010896019,-0.041477013,0.006807864,-0.028376598,0.008033166,0.00015557816,-0.007861394,-0.060371842,0.023910549,0.0007021147,0.014657808,-0.02936142,-0.001188084,0.01476087,0.018952087,-0.07278518,0.019730782,0.022330252,0.009550477,-0.03511003,-0.005625506,-0.015047155,-0.0058115916,-0.0035699776,0.009184033,-0.014062334,-0.025811482,-0.007535029,0.022536378,-0.019043697,-0.0038448116,-0.00677351,-0.012619456,-0.05368422,-0.012871387,0.005004267,-0.0058545345,0.04905785,0.0023045966,0.0060864254,-0.022353156,-0.02294863,-0.040744122,-0.02910949,-0.02092173,-0.050386213,-0.019055149,0.03334651,-0.01265381,0.030048504,-0.012127046,0.017039701,-0.020956084,-0.046607245,0.010884567,-0.014921189,0.018265001,0.014543293,-0.01752066,0.0031720411,0.019169664,0.022238642,-0.008909198,0.009430238,-0.052997135,0.00007684971,0.019192567,0.012962998,0.0445918,0.024345702,0.04745465,0.008977907,-0.029292712,0.0027311617,-0.012298817,-0.004763787,-0.01978804,0.026865013,0.02342959,-0.047271427,-0.040927347,-0.02034916,0.046698857,-0.01005434,0.03254491,-0.0109532755,0.04200378,0.01734889,0.013581375,-0.03998833,-0.02262799,0.038637064,-0.012023983,0.010019985,0.014577648,0.056340948,0.00041046154,-0.008101874,0.009916923,0.030941715,0.0018007345,-0.043606978,0.045714036,0.040125746,-0.014394425,0.008725976,0.00028861137,0.0689833,-0.016077783,-0.021540105,0.00075221463,0.0028556958,-0.063395016,0.005611192,-0.02368152,-0.012218656,0.019272726,-0.034881,0.0009898314,0.022009613,0.017967265,0.04170604,0.00092541723,0.019765137,0.020051422,-0.015711337,0.0020426456,-0.016879382,0.012585102,-0.03552228,0.007821314,0.034674875,-0.015997622,-0.0096249115,0.035568085,0.0162152,-0.014073785,-0.040354777,-0.003346675,0.028834656,0.004308594,-0.022158481,-0.025513746,-0.0048954785,-0.030804299,-0.016364068,0.03373586,-0.028743044,-0.028124668,-0.0111594,0.015516663,-0.013226381,-0.009103873,0.038751576,0.06431113,0.015791496,0.008393885,-0.018551288,-0.018482579,0.026452761,-0.00017874938,0.0073060007,-0.018608544,0.00880041,0.015081509,-0.024047965,0.042805377,0.0024634849,0.007615189,0.038339328,-0.02157446,0.0013634338,0.040446386,-0.0030947442,-0.013913466,-0.010197482,0.019421594,-0.03210976,0.0041425484,-0.01962772,0.01524183,0.027208555,-0.0038075945,-0.0087546045,0.0044288337,0.025353426,0.018597092,-0.0112853665,0.00880041,-0.015722789,-0.0070197154,0.008388159,0.011863663,-0.03197234,0.059959594,0.028033055,0.008903473,0.00476665,-0.0117606,0.0131004155,0.014371522,0.0035270348,-0.016341165,0.028284987,0.03178912,-0.024712147,0.037927076,0.0037159831,-0.009687894,-0.0058173174,0.004205531,-0.029246906,0.017944362,-0.006069248,-0.0071628583,-0.012207205,0.0070483442,0.051164906,-0.01833371,-0.01654729,0.014176848,-0.04250764,-0.037446115,0.021208014,-0.032384593,-0.010140225,0.069762,-0.026475664,-0.009544752,0.016295359,-0.01654729,-0.028536918,0.0075407545,0.01670761,0.0032092582,-0.013489763,-0.020990439,0.0072773723,0.038156103,-0.045462105,0.01573424,-0.016238103,0.05043202,-0.03178912,-0.016970992,-0.0005328485,0.01070707,-0.044981144,0.0027626532,-0.016936637,-0.009670718,0.025674066,-0.021597363,-0.03130816,-0.01257365,-0.016249554,0.005239021,-0.041247986,-0.0015015664,-0.029888185,0.029224003,0.0018207745,-0.01711986,0.017108409,0.054279692,0.01172052,0.042919893,0.03511003,0.013443958,0.021620266,-0.015390698,0.003641549,-0.014211202,-0.01598617,0.019158212,-0.003369578,-0.016192297,-0.0081076,0.036278073,0.013020256,-0.022284448,0.048508182,-0.00057686487,0.018448224,0.021299627,0.030163018,0.021139307,0.03639259,-0.0067677842,-0.011943823,-0.00020022078,-0.012859936,-0.00047738073,0.026819207,0.0214943,0.033438124,0.009493221,-0.025399232,-0.020017069,-0.048508182,0.019959811,-0.036713228,0.00681359,-0.01460055,0.019375788,-0.015150218,-0.026475664,-0.02238751,-0.013455409,-0.059409924,-0.02562826,-0.0075006746,0.04340085,-0.024849564,-0.020715604,-0.0053993408,0.011331172,0.014302813,0.013123318,0.008611462,-0.020417867,0.016283907,0.027643709,-0.0003900637,-0.0031233726,0.005390752,0.01452039,-0.02578858,0.010678441,0.011388429,-0.005823043,0.012436233,0.0074090636,-0.03034624,-0.03130816,0.0077411546,0.008960729,0.014039431,0.017268728,-0.017910007,-0.029178197,0.008056068,-0.0032063953,0.0065731104,-0.010752875,-0.0075407545,-0.019662075,0.013169124,-0.00014072712,0.05927251,-0.043103114,-0.00085670874,0.011829308,-0.0076838974,-0.021631718,0.02910949,0.025903095,0.0055024032,-0.009195483,0.03859126,-0.008977907,-0.029453032,-0.020223193,0.018711608,-0.004171177,0.020475125,0.018986441,-0.066784635,-0.015379246,-0.03909512,0.0074949493,0.022101225,0.005508129,-0.01929563,-0.005989088,-0.013753146,-0.016764866,-0.013798951,-0.008411062,-0.027208555,-0.0015115864,0.01800162,-0.026406955,0.044316962,0.00282993,0.000062714375,0.06751753,0.003403932,0.0002553307,0.0063956133,0.02693372,-0.024528924,-0.010071517,0.008731701,-0.016100684,-0.008451142,-0.012367525,0.012951547,0.023452492,-0.012470587,-0.012596553,0.007855669,-0.018047426,0.051943604,0.014726516,0.004007994,0.007065521,-0.038064495,0.0071170526,-0.024254091,-0.016100684,-0.008245016,0.0033151838,0.02661308,-0.011188029,-0.0066131903,-0.008651542,-0.03593453,0.013169124,0.005977637,-0.017383244,-0.01833371,0.021196563,0.023818936,-0.015436503,0.011142224,-0.021872196,-0.024368605,0.0069968128,-0.026177928,-0.020543832,-0.0045061307,-0.015757143,0.0633034,0.008405336,-0.008204937,-0.021517202,-0.021127855,-0.03318619,-0.00596046,0.030804299,0.00782704,-0.020555284,0.013478312,-0.0063784365,0.00094402576,-0.0009025144,0.015012801,-0.054142274,0.017131312,-0.019318532,0.0068307673,-0.020246096,-0.025238913,-0.00399368,-0.027666612,0.014692161,-0.0035241721,0.03391908,-0.010403608,0.027872736,0.0041139196,0.032980066,-0.008210663,0.0075693834,-0.017509209,0.040331874,0.006429968,-0.032957163,0.014966995,0.003232161,0.008319451,-0.0056369575,-0.010157403,0.043744393,0.014085237,0.0011794955,0.0076380917,-0.0017191432,-0.01054675,-0.00596046,0.012207205,-0.015780045,0.026292441,0.0015931777,0.05863123,0.032453302,-0.03497261,0.0061551337,0.008307999,-0.0027426132,0.004843947,-0.008548479,0.023005886,-0.026315344,0.033690054,-0.023750229,0.021185111,0.006115054,-0.035568085,0.006876573,0.003214984,-0.05895187,0.058539618,0.014268459,-0.009172581,-0.008342354,-0.00059583125,0.018997893,0.047546264,-0.0069052014,0.0063727107,-0.007088424,-0.024139576,0.037423216,0.03332361,-0.016272455,0.016833575,0.005121644,-0.028193377,0.016822124,-0.028010154,0.008319451,0.014234105,0.025559552,-0.014932641,0.00094832,-0.005685626,0.00036572947,-0.004125371,0.011050613,0.02245622,0.001879463,0.046744663,-0.029338518,-0.023979256,0.019868199,0.0018336574,0.002208691,-0.004657862,0.0023518337,0.036438394,-0.01017458,-0.036026143,-0.005954734,0.03229298,-0.011697617,-0.0056312317,-0.0024849563,0.017051153,-0.016329713,-0.013615728,0.025857288,0.038659967,-0.0007643817,-0.026017608,0.027575,0.017875655,-0.013031707,-0.014039431,-0.015619726,-0.011348349,0.060600873,-0.0004240601,0.014886836,-0.01734889,-0.024483118,-0.014875384,-0.017566467,-0.023349429,0.010815859,0.0052991407,-0.0051559983,0.00049849425,0.008365257,0.03130816,-0.03788127,-0.015711337,0.012275914,0.05492097,-0.0028743043,-0.013730243,0.04333214,-0.014394425,0.024299895,-0.03178912,0.016043428,-0.0040767025,-0.0024863877,0.0022430453,0.003192081,-0.016123587,-0.008565656,0.008502673,-0.011342623,-0.027964348,0.032270078,0.02101334,0.01532199,-0.012447685,0.013856208,-0.0006287541,-0.03989672,0.009544752,-0.01825355,0.020463673,-0.024780855,-0.004437422,-0.014371522,0.0023618536,-0.0032407495,0.028674336,0.0018780315,0.034010693,-0.024689244,-0.025651162,-0.024872467,-0.02904078,-0.023612812,-0.006429968,-0.00008807746,0.050477825,0.0053392206,0.02457473,-0.031056229,-0.006928104,-0.0009690757,-0.02197526,0.0064872247,0.060600873,0.054966778,-0.007821314,0.016913736,0.026498567,-0.022398962,0.027666612,-0.035842918,-0.012779776,0.018986441,-0.004245611,0.03714838,0.01777259,0.0036730403,-0.0015187435,0.0011215226,0.006206665,0.0026667474,-0.00096478144,-0.009584832,0.02855982,-0.0045118565,-0.017978717,0.026887916,0.0031147841,0.013237832,-0.005702803,0.019776588,-0.037675146,-0.033231996,-0.005728569,0.022147032,-0.0021356882,-0.02132253,-0.010924647,0.0090866955,-0.034995515,-0.007993085,-0.008823313,-0.019570462,0.013066061,-0.0080388915,-0.007180035,0.0061551337,0.0535468,-0.012081239,0.028834656,0.0022816937,0.002513585,-0.03543067,0.014222654,0.006985361,0.018551288,0.00069925183,0.0094187865,0.015539566,0.03494971,-0.034422945,0.026796304,0.0039020686,-0.005725706,0.0038820286,0.00032260775,0.0038992057,-0.018390967,-0.035178736,-0.011170852,-0.02562826,0.02441441,0.013684438,-0.0063956133,0.0028199102,-0.0015573921,0.016730513,0.029246906,0.020177389,0.0190666,0.029796574,-0.007821314,-0.02546794,-0.013672986,0.009836763,0.012241559,-0.0062009394,0.009647815,0.035636794,0.038797382,-0.009098147,0.04436277,-0.010523847,0.00884049,-0.013879111,-0.0015287634,-0.015425052,-0.044614702,-0.001654729,-0.010489494,-0.029750768,0.010311997,0.04225571,-0.0040366226,0.0057944143,0.019238371,-0.022169933,0.011697617,-0.017062604,-0.013615728,-0.031033326,0.012264462,0.021929454,0.006424242,0.0015588234,-0.021276724,-0.021288175,0.005551072,-0.020257547,0.028857557,-0.005198941,-0.024025062,0.011852211,-0.005576838,-0.0077068,0.009539026,-0.010094419,0.034514554,0.014715064,0.035224542,0.02894917,0.02505569,0.025605356,-0.026979527,0.0096249115,-0.015940364,0.0029100901,0.047729485,0.04365278,0.006441419,-0.010369253,-0.018585641,-0.008514125,0.006561659,0.0033638522,-0.017154215]},{"id":"subsets","name":"Subsets","description":"Given an array `nums` of **unique** integers, return all possible subsets of `nums`.\n\nThe solution set must **not** contain duplicate subsets. You may return the solution in **any order**.\n\n**Example 1:**\n\n```java\nInput: nums = [1,2,3]\n\nOutput: [[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]\n```\n\n**Example 2:**\n\n```java\nInput: nums = [7]\n\nOutput: [[],[7]]\n```\n\n**Constraints:**\n* `1 <= nums.length <= 10`\n* `-10 <= nums[i] <= 10`\n","difficulty":"Medium","concepts":["Tree Maze","Subsets"],"solutions":{"python":"class Solution:\n    def subsets(self, nums: List[int]) -> List[List[int]]:\n        res = []\n\n        subset = []\n\n        def dfs(i):\n            if i >= len(nums):\n                res.append(subset.copy())\n                return\n            subset.append(nums[i])\n            dfs(i + 1)\n            subset.pop()\n            dfs(i + 1)\n\n        dfs(0)\n        return res\n","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {number[][]}\n     */\n    subsets(nums) {\n        const res = [];\n        const subset = [];\n        this.dfs(nums, 0, subset, res);\n        return res;\n    }\n\n    /**\n     * @param {number[]} nums\n     * @param {number} i\n     * @param {number[]} subset\n     * @param {number[][]} res\n     * @return {void}\n     */\n    dfs(nums, i, subset, res) {\n        if (i >= nums.length) {\n            res.push([...subset]);\n            return;\n        }\n        subset.push(nums[i]);\n        this.dfs(nums, i + 1, subset, res);\n        subset.pop();\n        this.dfs(nums, i + 1, subset, res);\n    }\n}\n","cpp":"class Solution {\npublic:\n    vector<vector<int>> subsets(vector<int>& nums) {\n        vector<vector<int>> res;\n        vector<int> subset;\n        dfs(nums, 0, subset, res);\n        return res;\n    }\n\nprivate:\n    void dfs(const vector<int>& nums, int i, vector<int>& subset, vector<vector<int>>& res) {\n        if (i >= nums.size()) {\n            res.push_back(subset);\n            return;\n        }\n        subset.push_back(nums[i]);\n        dfs(nums, i + 1, subset, res);\n        subset.pop_back();\n        dfs(nums, i + 1, subset, res);\n    }\n};\n","java":"class Solution {\n    \n    public List<List<Integer>> subsets(int[] nums) {\n        List<List<Integer>> res = new ArrayList<>();\n        List<Integer> subset = new ArrayList<>();\n        dfs(nums, 0, subset, res);\n        return res;\n    }\n\n    private void dfs(int[] nums, int i, List<Integer> subset, List<List<Integer>> res) {\n        if (i >= nums.length) {\n            res.add(new ArrayList<>(subset));\n            return;\n        }\n        subset.add(nums[i]);\n        dfs(nums, i + 1, subset, res);\n        subset.remove(subset.size() - 1);\n        dfs(nums, i + 1, subset, res);\n    }\n}\n","csharp":"public class Solution {\n    \n    public List<List<int>> Subsets(int[] nums) {\n        var res = new List<List<int>>();\n        var subset = new List<int>();\n        Dfs(nums, 0, subset, res);\n        return res;\n    }\n\n    private void Dfs(int[] nums, int i, List<int> subset, List<List<int>> res) {\n        if (i >= nums.Length) {\n            res.Add(new List<int>(subset));\n            return;\n        }\n        subset.Add(nums[i]);\n        Dfs(nums, i + 1, subset, res);\n        subset.RemoveAt(subset.Count - 1);\n        Dfs(nums, i + 1, subset, res);\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def subsets(self, nums: List[int]) -> List[List[int]]:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {number[][]}\n     */\n    subsets(nums) {}\n}\n","cpp":"class Solution {\npublic:\n    vector<vector<int>> subsets(vector<int>& nums) {\n        \n    }\n};\n","java":"class Solution {\n    public List<List<Integer>> subsets(int[] nums) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public List<List<int>> Subsets(int[] nums) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/REOH22Xwdkk","embedding":[-0.03519423,-0.026822975,0.012401498,-0.04797447,0.0019956992,0.002118306,-0.018014705,0.011284684,0.0017650527,0.07038846,-0.0055209487,-0.049139842,-0.013858213,0.00010963296,0.04828524,0.019830743,-0.003090663,0.021073807,0.0191995,0.06308546,0.04762486,0.034397893,0.020102663,-0.032203108,0.04490566,-0.0058851275,0.020238623,0.03540788,-0.0046250694,-0.012731687,0.033387903,-0.0087208655,-0.008065344,0.038923416,-0.003908851,0.023754163,0.03484462,-0.0016120976,-0.012149001,0.009400666,-0.0027313402,-0.010206714,-0.008871392,-0.043429524,-0.015052719,0.031503886,0.027230855,-0.023482243,0.022977248,-0.008254717,0.00474889,0.020141508,0.0111681465,-0.012527747,-0.0034645533,-0.005472392,-0.044284128,0.040554937,-0.002002983,0.016334629,0.020879578,-0.002546823,0.011595449,0.040049944,-0.0061084903,0.028998334,0.016392896,-0.017762208,-0.02781354,-0.015188679,-0.043235295,0.003437847,0.005161626,-0.026609322,0.05562708,0.040166482,0.034980576,0.029114872,0.014761376,-0.0141786905,0.059239734,0.013489178,0.06417314,-0.0075603495,-0.012877358,0.0045595174,-0.016771642,0.0089296615,-0.028629301,-0.04645949,0.011197281,-0.0046590595,-0.05481132,0.021501109,0.020471698,0.008876248,0.04599334,0.009832825,0.013275527,0.033465594,0.019850167,-0.002838166,-0.005205327,-0.006598918,0.01254717,0.007827414,0.011041897,-0.019170366,0.008414956,0.015246947,0.022103218,0.00058511377,0.03595172,-0.035971142,0.019782186,0.0025322558,-0.023326859,-0.016120976,0.024064928,-0.013246393,0.019704495,-0.0370394,0.00457894,-0.011410932,-0.015169256,0.024395116,-0.01254717,-0.054927856,0.026298556,-0.007740011,0.033387903,-0.01743202,0.009590039,0.008968507,-0.032319646,-0.03804939,-0.004039956,-0.01261515,0.0020551817,0.02313263,0.059123196,-0.033038292,0.0058559934,0.0012673418,0.04855716,-0.033582132,-0.027522197,0.027250277,-0.00834212,0.011362375,0.03290233,-0.030260822,0.015043007,0.0481687,0.0058657047,-0.0028333103,-0.014586571,0.00468091,0.0130618755,-0.00028178326,-0.018218646,-0.0106825745,-0.026473362,-0.022472253,0.02340455,0.0075943395,-0.0002816315,-0.024667036,0.0124986125,-0.036184795,0.01621809,-0.026551055,0.018733352,-0.020782463,0.03418424,-0.018704217,-0.05174251,-0.060482796,-0.054694783,-0.03465039,-0.009983351,0.0055889287,-0.051237512,-0.06335738,0.014508879,0.0074195336,0.03352386,-0.05380133,-0.018869312,0.00064034754,0.0504606,0.023288013,0.02468646,0.024589345,-0.013926193,-0.01906354,0.0078759715,0.068251945,-0.016936736,0.020277468,-0.0041200747,0.021462264,-0.013032741,0.041914538,0.016072419,-0.022763595,-0.017062986,0.029289678,0.0007720588,-0.027483352,0.026143175,0.01227525,-0.0027896087,-0.026803551,-0.008633463,0.008677164,0.010158158,-0.018830465,-0.00003158112,0.058307435,0.033504438,-0.0069291065,-0.008376109,0.028862374,0.05718091,0.011022475,-0.014984739,0.002288256,-0.009915371,0.042613763,-0.011488624,-0.019714206,0.010488346,0.009517203,-0.043390676,-0.019451998,-0.029231409,-0.019180078,-0.019422863,0.006642619,0.0150915645,0.011469201,-0.008026498,0.0049916757,0.018442009,-0.011595449,-0.028842952,0.048207548,-0.051781353,-0.016732797,0.022957824,0.017645672,-0.009337542,-0.029891787,-0.0073272754,0.036456715,-0.019519977,-0.0071524694,-0.018335182,0.028726416,-0.073768035,0.022647059,-0.026220866,-0.06304661,-0.0037704634,-0.026395671,-0.00078480504,0.034495004,0.053762484,0.024453385,-0.0006445963,0.007608907,0.023657048,-0.05201443,-0.002719201,-0.013790233,-0.009886238,0.014635127,0.014761376,-0.088024415,-0.0016545851,-0.038923416,0.026298556,0.0026342259,0.040321864,-0.022258602,-0.022297448,-0.0009547551,-0.022006104,-0.016927026,-0.012323807,-0.015004162,-0.017742785,-0.0067543006,-0.0072010267,0.0019022267,0.01281909,0.010653441,0.039311875,-0.013314373,0.009740566,-0.040749166,-0.03484462,0.004668771,-0.03608768,-0.041875694,0.01261515,0.013304661,-0.011770255,0.0065503605,0.020122087,0.0027556187,-0.0023890121,-0.030008323,0.030882353,-0.043235295,-0.03282464,-0.0089976415,0.041720312,0.028124306,-0.016198669,0.02441454,0.0272697,0.05527747,0.040710323,0.018820755,0.0013401776,0.018432297,0.0055500832,-0.034902886,-0.029425638,-0.024725305,-0.020918423,0.07143729,-0.053762484,-0.023831854,0.020568812,-0.047119867,0.0030542451,0.01567425,0.040749166,0.023831854,0.0011083172,-0.016509434,-0.03243618,0.017247502,-0.03818535,0.030785238,0.0053898445,-0.003605369,0.009060766,-0.01824778,0.03777747,-0.009094756,-0.016839622,0.018412875,-0.0108185345,-0.032669257,-0.0064289677,0.014761376,-0.01363485,0.019112097,0.057724748,-0.020180356,0.013722253,0.031872917,-0.0038797169,-0.028532187,-0.031193119,0.050149832,0.059744727,0.010517481,0.022608213,0.008482936,-0.029386792,-0.012838513,-0.025405105,-0.015713096,-0.03247503,-0.030357935,-0.058423974,0.0071670366,0.013139567,-0.035971142,0.021384573,0.0377192,-0.020355161,-0.026822975,-0.038360156,-0.030804662,-0.031581577,-0.011469201,0.061492786,0.0012023966,0.033465594,-0.022685904,0.020529967,0.038243618,-0.034281354,-0.025249721,0.0048241536,-0.006885405,0.029542174,0.011605161,-0.040788013,-0.022142064,0.028862374,0.032455605,0.023909545,-0.06685349,-0.03379578,-0.009177303,0.013236681,0.00018163412,0.015907325,0.040554937,-0.04987791,-0.0036150804,-0.009381243,0.026784128,-0.011546892,-0.012857935,0.015110987,0.0017650527,0.037000556,0.0018864456,-0.011362375,-0.038399,-0.04362375,-0.034630965,-0.034048278,-0.016451165,-0.04599334,0.019306326,-0.061609324,0.027425082,0.021287458,0.05154828,-0.033426747,-0.071398444,0.0025274002,-0.06922308,-0.0198793,-0.026706437,0.00464692,-0.033659823,0.014839067,0.051392898,0.03173696,-0.02596837,0.015013874,-0.040749166,0.050577138,0.027172586,-0.004236612,-0.01573252,0.019646225,-0.0144603215,-0.01309101,-0.017655382,-0.04983907,0.019248057,-0.028104883,-0.0041904827,0.050305218,0.0016351623,-0.012731687,-0.014052441,0.04634295,0.01654828,0.036670364,0.031989455,0.0058365706,0.06899001,-0.026628746,-0.04599334,0.025016649,0.07240844,0.015004162,-0.0037340454,-0.006220172,-0.08771365,-0.024647614,0.018811043,0.015072142,0.0026366536,-0.010672864,0.0135474475,0.024123196,-0.0028988624,-0.07706992,0.012352941,-0.025346836,-0.0042997366,0.047119867,-0.0071184793,-0.006841704,-0.008837403,-0.019850167,0.015052719,0.019578246,-0.06234739,0.0100513315,0.013236681,0.034125973,-0.0014494312,-0.032727525,-0.06619312,0.017461155,0.05391787,-0.016849333,0.038903996,0.018296337,-0.004401706,0.0101193115,0.038981687,-0.018849889,-0.066814646,0.008730577,-0.026939511,-0.0056277746,0.029328523,0.02326859,0.012197558,0.023249168,-0.032533295,-0.031523306,-0.03886515,-0.06495006,0.027017202,-0.003418424,0.04618757,0.006050222,0.038923416,-0.016985293,0.021889567,0.017130965,0.0015004162,0.004098224,-0.04471143,-0.000095217554,0.039156493,-0.028337957,-0.007832269,0.0021595797,-0.0155091565,0.0040569506,0.012702553,-0.030008323,0.010012486,-0.016723085,-0.017062986,0.013644561,-0.024259156,0.004474542,-0.0238707,0.012789955,0.044866815,-0.0027653303,-0.007021365,-0.04607103,-0.009915371,0.015926749,0.030086014,0.0006512729,-0.0015732519,0.010381521,-0.009046199,0.00069800916,-0.021423418,-0.020801887,0.012809378,0.029678134,-0.029522752,0.016946448,-0.017325195,-0.026570477,-0.00461293,-0.054850165,0.05073252,-0.0017213513,-0.011838235,0.00045856167,-0.01838374,-0.029833518,0.0074632354,-0.0077351555,0.034009434,0.046847947,-0.044322975,0.054966703,0.016052997,0.009604606,0.025929522,-0.022841288,-0.038573805,-0.020316316,0.010255272,0.025210876,-0.012450055,0.0017031423,0.033407323,0.015043007,-0.0026220866,-0.011022475,-0.024569921,0.0046396363,0.03453385,-0.0024302858,0.028765261,-0.009274418,0.0073612654,0.02713374,-0.0013013318,-0.034397893,-0.024103774,0.008390677,0.010391232,0.002614803,-0.016159823,0.03290233,-0.028201997,0.0017359185,0.026512207,0.011964484,0.007103912,-0.00912389,0.017801054,0.0072204494,0.0012576304,-0.028143728,0.0050499444,0.027463928,-0.018004995,-0.017801054,0.03731132,-0.013528024,-0.018675083,-0.0075117922,0.008628607,0.046925638,0.009240427,0.014508879,-0.051392898,0.0018973709,0.013256104,0.008147891,-0.0073029967,-0.005331576,-0.014334073,0.013508601,-0.008754856,-0.004909129,-0.019286903,0.0029692703,-0.0056957547,0.021384573,-0.035990566,-0.0015841773,0.008458657,-0.0359323,-0.007400111,0.05100444,0.015849056,0.027599888,-0.024317425,0.022530522,0.01796615,0.047857936,-0.0065843505,-0.0076574637,0.004676054,0.03847669,-0.054966703,0.019102385,0.023326859,0.02272475,-0.00065005897,-0.02381243,0.0024060071,0.003522822,0.015965594,-0.01872364,0.060055494,-0.0032460461,0.00014445755,0.014285516,0.009895949,-0.029114872,0.0000042416386,-0.005127636,-0.02414262,-0.0100513315,-0.0073903995,0.019481132,0.006356132,0.011032186,0.03859323,-0.011401221,-0.020199778,-0.0046274974,0.0104689235,0.037602663,0.013081298,-0.044750277,-0.014256381,0.007472947,0.02272475,-0.0054092673,-0.019374305,0.020063818,0.023171475,0.006977664,0.013285238,-0.028435072,0.0073175635,0.014508879,-0.034164816,0.012663707,-0.03181465,-0.027463928,-0.003195061,-0.015499445,0.012304384,0.005011099,0.011032186,0.016208379,-0.032805216,0.020024972,-0.005506382,0.016528856,-0.0031707825,-0.004098224,0.025793562,0.008201304,-0.05908435,-0.031503886,0.031018313,-0.049295228,-0.030610433,-0.025948945,-0.000018085644,0.04754717,0.00086917315,0.009298696,0.029231409,-0.024375694,0.029503329,-0.09105438,0.03812708,-0.039739177,0.0005244173,0.038903996,0.015363485,0.015431465,0.011809101,-0.03818535,0.008346976,0.012518035,-0.011478912,0.018947003,0.020529967,-0.016829912,-0.0020770323,0.013994173,0.029852942,-0.022433408,0.032261375,0.0041783433,0.030377358,0.013615428,-0.016791066,0.006064789,-0.031115428,0.015897613,-0.018568257,-0.040205326,-0.013149278,-0.03527192,0.010731132,-0.019762764,0.01966565,0.030066593,0.03461154,0.00970172,0.030843507,0.026512207,-0.007069922,0.023288013,-0.042846836,0.012187847,0.0155091565,-0.014673973,-0.008045921,0.014207824,-0.006477525,-0.003935558,0.0011508047,0.041836847,-0.03723363,-0.016227802,0.019034406,0.0031076581,-0.020529967,0.019306326,0.037000556,-0.002770186,-0.0181798,-0.016528856,-0.0017686945,-0.007502081,0.07326304,0.010993341,-0.021015538,0.017101832,0.006390122,0.0009929939,0.018490566,0.0012036106,-0.009745422,-0.015606271,0.028046615,-0.019811321,0.004506104,0.021034962,-0.028337957,0.018704217,0.021870144,0.033426747,-0.023559934,0.017937014,0.009789123,-0.035524417,0.034203663,-0.0032314789,0.052402884,0.019044118,0.010148446,0.012168424,0.014256381,-0.044051055,0.03573807,0.018898446,-0.041914538,-0.0045328108,0.036048833,-0.007516648,-0.026084905,-0.0042269006,-0.031212542,0.009332686,0.010245561,0.026958935,0.005448113,-0.0064872364,0.02509434,0.028842952,0.011741121,-0.0070844893,-0.0038724334,0.025871255,-0.03954495,0.012945338,-0.04778024,-0.029814094,-0.002770186,-0.041875694,-0.019092675,0.008992786,-0.054966703,0.012857935,0.044206437,-0.018004995,-0.030571587,0.02713374,-0.014100999,-0.006885405,-0.006710599,0.028435072,-0.010313541,0.045954496,0.018199222,-0.036884017,0.051043283,-0.01343091,-0.05216981,0.04972253,-0.006715455,0.020122087,-0.03410655,0.0019738486,-0.054655936,-0.0023101068,-0.04781909,-0.033679243,0.018704217,0.03379578,-0.015703386,0.058695894,0.0050596558,-0.0238707,-0.046148725,0.0046202135,0.025346836,0.010517481,0.012527747,0.0097697005,0.019782186,-0.042302996,-0.024997225,0.007181604,-0.0021098086,0.01370283,0.028007768,-0.0067397337,0.008191593,0.016062709,-0.001143521,0.02672586,0.0028575887,0.016383186,-0.031057158,-0.02435627,-0.014236959,0.026570477,0.010478634,-0.017383462,0.005113069,0.030513318,0.019218924,0.07819645,0.024162041,0.023074362,-0.02517203,-0.022083795,-0.013013318,-0.0033868619,0.0011556604,-0.0040351,-0.004241468,-0.020976692,0.020355161,-0.0007914817,-0.012323807,0.002137729,-0.040710323,0.032727525,-0.042186458,-0.00065673556,0.021870144,0.0508879,-0.035971142,-0.015314927,-0.032397337,-0.015790788,-0.0049868203,0.004683338,0.033465594,0.014625416,-0.025269145,0.015897613,-0.039933406,0.037155937,-0.004977109,0.0035762347,-0.023754163,0.02468646,0.0046032188,-0.04498335,-0.049761377,0.04564373,-0.037738625,0.009119035,-0.0010233421,-0.022957824,0.010478634,-0.037796892,0.008609184,0.0032897475,0.010944784,0.019762764,-0.013654273,-0.02286071,-0.011605161,-0.010789401,0.0045546615,-0.012032464,0.012896781,0.030901775,-0.0009948148,0.015140122,0.03255272,-0.00089405867,-0.016014151,-0.007210738,-0.027463928,-0.052402884,0.037078246,0.007919673,-0.0037486127,-0.010352386,-0.047197558,-0.0056520533,0.021054383,0.0074923695,-0.04498335,0.05197558,0.0006257804,-0.016985293,0.01288707,-0.03880688,-0.017529134,0.020122087,0.034320198,0.042691454,0.009813402,0.055899,0.014013596,0.01343091,-0.034320198,0.015965594,0.020685349,-0.030338513,0.031581577,-0.043468367,-0.014363208,0.0076963096,0.035835184,0.021326303,0.02713374,-0.017179523,-0.031659268,-0.040477246,-0.0071864594,-0.015625693,0.0032266232,-0.020296892,0.0020054106,0.012236404,0.021054383,-0.041215315,0.026492786,-0.010954495,0.015606271,-0.035233073,0.0017856895,-0.018082686,0.011022475,-0.042419534,0.019947281,0.003996254,0.0020600373,0.0022506244,-0.017917592,-0.005161626,0.037466705,0.059123196,0.025152609,0.018432297,0.0055937846,-0.018004995,-0.019393729,-0.0023513804,0.015800498,-0.00464692,-0.018335182,-0.03575749,-0.044594895,-0.015897613,-0.022083795,0.013285238,-0.012925915,-0.040826857,0.013275527,-0.0056860433,-0.009842536,-0.022783019,-0.011313817,-0.0004883029,0.019490844,-0.0023283157,-0.011391509,-0.0059336848,-0.0092112925,0.014858491,0.043235295,0.00071196933,0.0009468646,-0.021054383,-0.0063269977,0.020743618,0.028357381,0.020063818,0.016150111,-0.014625416,-0.0036320754,-0.006802858,-0.032766372,-0.014761376,-0.0026415095,0.016150111,0.00039270602,0.0046906215,-0.036417868,0.0012831229,-0.0052878745,0.0069242506,0.04945061,-0.033931743,-0.011391509,-0.03399001,-0.0048460043,-0.012605438,0.020063818,-0.05026637,-0.043701444,0.018092398,-0.017121254,0.010090178,0.0018682367,0.00059087994,-0.020860156,0.0039865426,0.016645394,-0.05935627,-0.019082963,-0.00929384,0.035155382,-0.03777747,0.028046615,-0.011206992,-0.028163152,-0.042963374,-0.029289678,-0.0007089345,0.036145948,-0.007074778,-0.028881798,0.012149001,0.009546338,0.01390677,-0.017461155,-0.003403857,-0.00009142402,0.012391787,0.013333796,0.010799112,0.049101,0.010449501,-0.0082984185,-0.005006243,0.014421476,0.041681465,0.020685349,-0.010245561,0.019374305,-0.030280244,0.005001387,-0.009886238,0.0014615705,-0.00043185524,0.008424667,0.00929384,0.0041443533,0.0031513595,-0.001828177,-0.014295228,-0.021209767,0.037894007,-0.011119589,-0.017723363,0.01790788,-0.0019374306,0.014052441,0.026376247,0.006778579,0.000888596,0.021132076,0.014120421,0.0021996393,0.021034962,0.009308407,-0.002988693,-0.014139844,-0.01831576,-0.0155091565,-0.0074875136,-0.043973364,0.032572143,0.013100721,0.011508047,-0.0016982866,-0.001692217,-0.033931743,0.020704772,-0.01594617,0.0035980854,-0.013149278,0.0020078386,0.0036490704,0.004304592,-0.022977248,-0.030124862,0.032649834,-0.012314095,0.012556881,0.01858768,-0.0025176886,-0.0106825745,0.013916481,0.028706992,0.013625138,-0.034592118,-0.04937292,-0.026201442,0.0046906215,-0.019238345,0.012294672,-0.0075457823,-0.028648723,-0.00065855647,0.056598224,0.008414956,0.0076331855,0.0076283296,0.02740566,0.034281354,0.063862376,0.030280244,0.008390677,-0.022200333,-0.015742231,-0.027599888,-0.014722531,0.038088236,-0.011537181,-0.00094261585,0.010420366,0.04572142,0.0019592813,-0.0007435315,-0.015936458,-0.019646225,-0.013518313,0.017713651,-0.014994451,-0.042691454,0.0071961707,0.030746393,-0.0033383046,-0.0131298555,-0.027522197,0.027230855,-0.015606271,0.025269145,0.0021098086,0.0078808265,0.00051865116,-0.0085751945,-0.033485018,-0.020510543,-0.01213929,0.01695616,-0.015499445,0.030396782,-0.019947281,-0.0015113415,0.018082686,-0.014936182,0.0054869587,0.010420366,-0.0055258046,0.018286625,-0.0025322558,0.028881798,-0.0005453576,-0.00025917383,0.020063818,0.018704217,-0.007273862,0.0068222806,0.03723363,0.016703662,-0.017470866,0.010905937,0.024608769,0.014907047,-0.03818535,0.025269145,0.0012382076,0.0026439372,-0.0063269977,0.0072301608,0.0018184655,0.004901845,0.01728635,-0.011401221,-0.006152192,0.015324639,0.037835736,-0.005365566,0.014819644,-0.0036320754,-0.0026220866,0.0036782047,0.025812985,-0.00063245697,-0.0065018036,0.02258879,0.028260266,0.013188124,-0.00963374,-0.0013474611,0.013790233,0.027774695,-0.027017202,0.016324917,-0.0007192529,0.0040083933,-0.0051664817,-0.021617647,0.013819368,-0.039098226,0.010391232,-0.010857381,0.031367924,0.034941733,-0.02245283,0.00966773,-0.013071587,0.0067251665,-0.011080744,-0.00067919324,-0.046925638,-0.006696032,0.01390677,0.013819368,0.001555043,0.0035932297,0.034300778,-0.015829634,0.006030799,-0.037952274,0.01980161,0.025890676,0.015256659,0.048751388,0.0016837195,-0.018306049,-0.027968923,0.029775249,-0.011071032,-0.015373196,0.029833518,-0.011517758,-0.01892758,-0.0096968645,0.046847947,-0.01974334,-0.024511654,0.016188957,0.03799112,0.02422031,-0.00012928343,0.030338513,-0.0048557157,0.059278578,-0.0011465559,0.009973641,-0.027327968,0.006268729,-0.02258879,-0.042341843,0.010216426,-0.015460599,-0.017791342,-0.00067433756,0.028299112,0.0056326305,-0.009235571,0.022336293,0.01608213,-0.00092501385,0.031600997,0.019889012,0.039719757,0.0053412872,0.00089405867,-0.013178413,0.02596837,-0.006375555,-0.015936458,-0.0136931185,0.007137902,-0.008895671,-0.034941733,-0.0009772128,0.011342952,0.005035377,0.01906354,-0.0054966705,0.063318536,0.017276637,0.017373752,0.01586848,-0.018772198,-0.009356964,-0.00905591,0.025016649,0.013382353,-0.013460044,0.010148446,-0.026648168,-0.046925638,-0.0073903995,-0.012372364,0.00239144,-0.01363485,0.0051179244,-0.01845172,-0.034125973,-0.021792453,-0.031562153,-0.012100444,0.040788013,-0.008371254,0.03940899,0.02713374,-0.006642619,-0.05690899,-0.021617647,0.002923141,0.025521642,-0.028221421,0.023326859,0.023928968,0.015217814,0.026395671,0.0025589622,0.03301887,0.008638319,0.006545505,-0.03902053,0.017801054,-0.00061394455,-0.018752774,-0.009954218,0.0002556838,0.031756382,0.048207548,-0.038088236,0.017859323,-0.005278163,-0.0011969339,0.030804662,-0.0024885545,0.01315899,-0.01940344,0.028201997,0.03255272,0.0076331855,0.022530522,-0.019578246,0.035602108,-0.022491675,-0.03492231,0.020879578,0.014440899,0.038709767,-0.014625416,-0.012022752,-0.025210876,0.009672586,-0.03758324,-0.05337403,-0.013120145,-0.011789678,0.012372364,0.014071864,0.0060599335,0.0036636377,0.03711709,0.053024415,0.014819644,0.031193119,0.004629925,-0.02476415,0.0041273586,0.020782463,0.02245283,-0.00847808,-0.008259573,0.034359045,0.023288013,-0.005093646,0.005147059,0.014858491,-0.014188401,0.014800222,0.051392898,0.018412875,0.005894839,0.00012124115,0.041836847,-0.010546614,-0.02427858,-0.024162041,-0.024705881,0.006715455,0.0044648307,0.026337402,0.013110433,-0.03630133,0.0012236404,-0.0035835183,-0.03162042,-0.01810211,0.014159268,-0.01728635,0.010808824,0.017587403,-0.012595727,0.016975582,-0.01906354,0.025133185,0.021870144,0.009963929,-0.0045935074,-0.0014809933,0.009099611,-0.0064241122,0.009449223,0.054694783,-0.031795226,0.02245283,0.009915371]},{"id":"permutations","name":"Permutations","description":"Given an array `nums` of **unique** integers, return all the possible permutations. You may return the answer in **any order**.\n\n**Example 1:**\n\n```java\nInput: nums = [1,2,3]\n\nOutput: [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]\n```\n\n**Example 2:**\n\n```java\nInput: nums = [7]\n\nOutput: [[7]]\n```\n\n**Constraints:**\n* `1 <= nums.length <= 6`\n* `-10 <= nums[i] <= 10`\n","difficulty":"Medium","concepts":["Tree Maze","Permutations"],"solutions":{"python":"class Solution:\n    def permute(self, nums: List[int]) -> List[List[int]]:\n        res = []\n\n        if len(nums) == 1:\n            return [nums[:]]\n\n        for i in range(len(nums)):\n            n = nums.pop(0)\n            perms = self.permute(nums)\n\n            for perm in perms:\n                perm.append(n)\n            res.extend(perms)\n            nums.append(n)\n        return res\n","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {number[][]}\n     */\n    permute(nums) {\n        const res = [];\n\n        if (nums.length === 1) {\n            res.push([nums[0]]);\n            return res;\n        }\n\n        for (let i = 0; i < nums.length; i++) {\n            const n = nums[i];\n            const remainingNums = nums.filter((_, j) => j !== i);\n            const perms = this.permute(remainingNums);\n\n            for (const perm of perms) {\n                perm.push(n);\n                res.push([...perm]);\n            }\n        }\n        return res;\n    }\n}\n","cpp":"class Solution {\npublic:\n    vector<vector<int>> permute(vector<int>& nums) {\n        vector<vector<int>> res;\n\n        if (nums.size() == 1) {\n            vector<int> singleNum;\n            singleNum.push_back(nums[0]);\n            res.push_back(singleNum);\n            return res;\n        }\n\n        for (size_t i = 0; i < nums.size(); i++) {\n            int n = nums[i];\n            vector<int> remainingNums(nums.size() - 1);\n            size_t idx = 0;\n            for (size_t j = 0; j < nums.size(); j++) {\n                if (j != i) {\n                    remainingNums[idx++] = nums[j];\n                }\n            }\n            vector<vector<int>> perms = permute(remainingNums);\n\n            for (const auto& perm : perms) {\n                vector<int> newPerm = perm;\n                newPerm.push_back(n);\n                res.push_back(newPerm);\n            }\n        }\n        return res;\n    }\n};\n","java":"class Solution {\n    public List<List<Integer>> permute(int[] nums) {\n        List<List<Integer>> res = new ArrayList<>();\n\n        if (nums.length == 1) {\n            List<Integer> singleNum = new ArrayList<>();\n            singleNum.add(nums[0]);\n            res.add(singleNum);\n            return res;\n        }\n\n        for (int i = 0; i < nums.length; i++) {\n            int n = nums[i];\n            int[] remainingNums = new int[nums.length - 1];\n            int idx = 0;\n            for (int j = 0; j < nums.length; j++) {\n                if (j != i) {\n                    remainingNums[idx++] = nums[j];\n                }\n            }\n            List<List<Integer>> perms = permute(remainingNums);\n\n            for (List<Integer> perm : perms) {\n                perm.add(n);\n                res.add(new ArrayList<>(perm));\n            }\n        }\n        return res;\n    }\n}\n","csharp":"public class Solution {\n    public List<List<int>> Permute(int[] nums) {\n        List<List<int>> res = new List<List<int>>();\n\n        if (nums.Length == 1) {\n            List<int> singleNum = new List<int>();\n            singleNum.Add(nums[0]);\n            res.Add(singleNum);\n            return res;\n        }\n\n        for (int i = 0; i < nums.Length; i++) {\n            int n = nums[i];\n            int[] remainingNums = new int[nums.Length - 1];\n            int idx = 0;\n            for (int j = 0; j < nums.Length; j++) {\n                if (j != i) {\n                    remainingNums[idx++] = nums[j];\n                }\n            }\n            List<List<int>> perms = Permute(remainingNums);\n\n            foreach (List<int> perm in perms) {\n                perm.Add(n);\n                res.Add(new List<int>(perm));\n            }\n        }\n        return res;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def permute(self, nums: List[int]) -> List[List[int]]:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {number[][]}\n     */\n    permute(nums) {}\n}\n","cpp":"class Solution {\npublic:\n    vector<vector<int>> permute(vector<int>& nums) {\n        \n    }\n};\n","java":"class Solution {\n    public List<List<Integer>> permute(int[] nums) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public List<List<int>> Permute(int[] nums) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/FZe0UqISmUw","embedding":[-0.03265775,-0.02716986,-0.0023961372,-0.025148008,0.013960418,-0.030308548,-0.07070711,-0.005223122,-0.0071631386,0.045328032,0.0028618856,-0.035931226,0.008775808,-0.0054060514,0.039820887,0.010561778,0.023569036,0.013767861,0.018110031,0.06104072,0.012824329,0.018966913,0.020776954,-0.030693663,0.029596087,-0.004440857,-0.0026597003,0.029249482,0.0069368836,-0.018148543,0.030327804,-0.011871169,-0.0068598604,0.043826085,-0.0046454496,0.0015970237,0.012400703,-0.026784746,0.0027391303,-0.020853976,-0.01874547,-0.030038968,-0.019352028,-0.056727435,0.008097042,0.07020646,0.007403835,-0.0076156487,0.064198665,0.014566974,0.019226866,0.030231526,-0.0034973253,-0.004881332,0.0009970868,-0.014894322,-0.045674637,0.016598456,-0.010022617,0.0033601283,0.011736379,-0.002529724,0.04170795,0.050758153,0.00013877678,0.025513867,0.012063727,-0.017647894,-0.0074760444,-0.0023768814,-0.0465604,0.005386796,-0.0059307707,-0.020873232,0.018004125,0.038665544,0.02418522,0.03194529,0.02147016,-0.022702528,0.04625231,0.014374416,0.042670738,-0.0023179108,0.0010211564,0.033042867,-0.0027174675,-0.029865667,-0.009064644,-0.063158855,0.0070427903,-0.022875829,-0.04501994,0.018601052,-0.002226446,0.0021710857,0.0452125,0.021797508,0.033678304,0.0653155,0.046021238,0.019120958,0.010504011,0.0090165045,0.015597156,0.011813402,0.0032710703,-0.0027728279,-0.01562604,-0.006282188,0.026380375,-0.00390651,0.04733063,-0.056457855,0.012237028,0.020584395,0.011591961,-0.014875066,0.019987468,-0.008462901,-0.014615113,-0.051181782,-0.00019992884,-0.009632688,-0.054532282,-0.0144514395,-0.007509742,-0.059692822,0.049487274,-0.013276839,0.04113028,-0.012853213,-0.009141667,-0.010571406,-0.05168243,-0.033774585,0.029673109,-0.004746542,0.015770458,0.045636125,0.052606706,-0.02767051,-0.018591426,-0.022856575,0.056727435,-0.0009712118,-0.031675708,0.004036486,-0.029326506,0.037895314,0.0062388624,-0.020680673,-0.0073075565,0.045366544,-0.0023660501,-0.0023600326,-0.0008340146,0.016377015,0.011389775,0.000823785,-0.005950026,-0.0024214105,-0.027882325,-0.016405897,0.042824786,-0.020045234,0.02857553,-0.019400166,0.010176663,-0.019140214,0.000014375996,-0.048755556,0.013941162,0.0057670968,-0.0021361846,0.0068117213,-0.05534102,-0.060540073,-0.038569264,-0.0040701837,-0.024974706,0.018235194,-0.041207302,-0.05665041,-0.00079851184,0.007890043,-0.00736051,-0.03922396,-0.04806235,0.015009856,0.037799034,0.041053258,0.01770566,0.037356153,-0.04729212,-0.026149306,0.027073583,0.018427752,-0.019486818,-0.007904485,-0.0018942843,0.03808787,-0.024358522,0.043325435,0.02626484,-0.03677848,-0.03460258,-0.008077786,0.006623978,-0.033890117,0.02857553,0.014788415,0.031502403,-0.009935967,-0.016559944,-0.017907847,-0.016040038,0.0036441504,-0.043286923,0.042555206,0.026033772,-0.028479252,0.014624741,0.04706105,0.046406355,-0.0041905325,-0.020449605,0.026399631,0.0038583707,0.028479252,-0.04702254,-0.01485581,0.016636968,-0.027593488,0.002835409,-0.01979491,0.0057670968,-0.02948055,0.000080106925,0.022105599,0.024262244,0.020642163,-0.019063191,0.00520868,0.025398333,-0.0098300595,-0.05268373,0.025841216,-0.015828226,-0.00871804,-0.004440857,0.0058778175,-0.0089924345,-0.028614042,-0.008337739,0.07286375,-0.004433636,-0.027612744,-0.019149842,0.019814165,-0.051066246,0.019419422,-0.029403528,-0.037394665,0.0041014743,-0.042247113,-0.0027920837,0.0059403987,0.038010847,0.0038752195,-0.015394971,-0.0077119274,0.008390692,-0.008251089,0.0050835176,0.0070331623,0.013247956,-0.014066325,0.01200596,-0.08125926,-0.01214075,-0.04598273,0.018504774,-0.0034852906,0.010542522,-0.025167264,-0.017782684,0.038376708,-0.011765262,-0.05884557,-0.014287765,-0.026476655,-0.0064217923,0.03387086,-0.011149079,0.0019051157,-0.014547718,0.008087414,0.021855274,-0.04012898,0.007134255,-0.026515165,-0.006123328,0.009435317,-0.03704806,-0.049987923,0.00321571,-0.009093528,-0.0011944582,0.017108733,0.009295713,0.042670738,-0.019332772,-0.024801405,0.016819896,-0.044095665,-0.032080077,-0.046637423,0.019833421,-0.022490714,-0.016733246,0.019053563,0.049371738,0.07559807,0.015664551,0.03225338,0.009579735,0.017050965,0.027227629,-0.005728585,-0.019968212,-0.059307706,-0.015057996,0.042054556,-0.058036827,0.024339266,0.015327576,-0.0052327495,0.013103537,-0.025032474,0.035988994,0.0244548,0.030693663,-0.029287994,-0.020025978,-0.0043951245,-0.01304577,0.022837318,0.008973179,0.0070283483,0.0131901875,-0.008212577,0.035700157,-0.004773019,-0.007119813,0.014576602,-0.008915411,-0.0027656069,-0.05322289,0.015876364,0.024762893,0.03048185,0.02401192,-0.016271107,0.0465604,0.009618247,0.00034991305,-0.03134836,-0.040591117,0.060039423,0.04062963,0.0074808584,0.013835255,0.0027246885,-0.016280735,-0.039551307,-0.02147016,-0.01168824,-0.0123525625,-0.016377015,-0.060886677,-0.018004125,-0.0045106593,-0.009974478,0.01748422,0.071592875,-0.013286467,-0.030308548,-0.03252296,-0.04709956,-0.020218536,-0.03858852,0.069012605,0.029095436,0.036662947,-0.03179124,0.027343163,0.039281726,-0.04297883,-0.015346832,0.017224267,0.0031627568,0.005516772,0.0027872697,-0.035623137,-0.05715106,0.0153083205,0.044095665,0.031906776,-0.027535722,-0.021643462,-0.0038198591,0.0106676845,0.02803637,0.026977304,0.025764192,-0.0013286467,-0.0062533044,-0.0183411,0.02455108,-0.008660273,-0.016742874,0.03600825,-0.00736051,0.01291098,0.011842285,-0.021123556,-0.066778935,-0.021585694,-0.034448534,-0.027997859,-0.008116298,-0.03306212,0.0070187203,-0.06146435,0.026053028,-0.023992663,0.073479936,-0.026110794,-0.08749812,-0.013700466,-0.035854205,-0.006229235,0.017744172,0.018013753,-0.0532614,0.006209979,0.03600825,0.03171422,-0.01649255,0.064391226,0.034121186,0.053839073,0.028190415,0.019852677,-0.012034843,0.023203177,0.020719185,-0.044711847,0.0016957094,-0.038838845,-0.0019749177,-0.017243523,-0.010975777,0.041091766,-0.020411093,-0.011668984,-0.017609382,0.044711847,0.01368121,0.020257048,0.056919992,0.027092839,0.063505456,-0.04552059,-0.007846718,0.021277603,0.10105417,0.002532131,0.03700955,0.024069685,-0.05249117,-0.046907004,0.008332925,0.007461603,0.02096951,0.00781302,0.007273859,0.00014456855,0.006912814,-0.032003056,0.0071053714,-0.03745243,-0.0040316726,0.042901807,-0.020738441,-0.004753763,-0.016646596,-0.027882325,-0.0029485365,0.017320545,-0.08403209,0.023877129,-0.009074272,0.0509122,0.004320509,0.006128142,-0.029923433,0.0017980055,0.08410911,-0.00085447385,0.021046534,0.0069416976,-0.0123429345,0.00627256,0.023126155,-0.018061893,-0.045636125,-0.0046189725,-0.0106773125,-0.0023792884,0.033543516,0.017638266,0.02867181,0.030501107,-0.032580726,-0.03687476,-0.02046886,-0.038530752,0.0038511497,0.0063736527,0.043941617,-0.015086879,0.03835745,0.0026211888,0.00051719736,0.0489096,-0.029133948,-0.021836018,-0.05372354,0.0071005574,0.03704806,0.00015434687,0.0040244516,0.0038270801,-0.019660119,0.02944204,0.027073583,-0.019814165,0.0074712303,-0.0035045464,-0.027073583,-0.00016186864,0.013247956,0.015240925,-0.053877585,-0.002296248,0.035430577,0.028344462,0.014961717,-0.02046886,-0.0024442766,0.034852907,0.00459731,0.022625504,-0.001071101,-0.015972644,0.000036725076,0.010022617,-0.018812867,-0.0288066,0.012737677,0.033177655,-0.036470387,0.0033505003,0.00040527334,-0.04682998,-0.01190968,-0.027458698,0.046521887,-0.026476655,-0.031309847,0.00459731,-0.04093772,-0.025706425,0.020276304,-0.009584549,0.00751937,0.033139143,-0.04528952,0.027266141,0.011707495,0.0023540154,0.028074881,-0.008342553,-0.03989791,-0.0033456862,0.012237028,0.043363947,-0.012631771,-0.0076493463,0.04494292,-0.007586765,0.0050353785,-0.029268738,-0.026938792,-0.0007726369,0.02147016,-0.02056514,0.009237945,-0.0072112777,0.0013033735,0.0043493924,-0.012583632,0.0018485519,-0.023126155,0.020025978,0.041207302,-0.031406127,-0.0051894244,0.013527163,-0.015876364,0.010195919,0.013825628,-0.014605486,-0.026842514,-0.019573469,0.03171422,-0.021181324,0.01259326,-0.028479252,-0.018504774,0.01730129,-0.012574004,-0.015346832,0.052298613,-0.0081740655,-0.02971162,0.0039642774,-0.007466417,0.022182623,-0.009521968,-0.013459768,-0.03660518,0.006445862,-0.013748605,0.00919462,-0.02699656,0.0193424,-0.013093909,0.020045234,-0.021508671,0.018581798,-0.0076349042,0.015096507,0.0012113069,-0.0028642926,-0.052029032,-0.013527163,-0.017541988,0.015972644,-0.03206082,0.031926032,0.010388477,0.032908075,-0.057459153,0.035180252,-0.0025562006,0.044365246,0.015876364,-0.0065276986,0.01200596,0.024031175,-0.042824786,0.009493084,0.011486054,0.026110794,0.009300526,-0.0058633755,-0.01331535,0.013652326,0.006580652,-0.016174829,0.05499442,0.018225566,0.001684878,0.0059403987,0.02599526,-0.036739968,-0.0041111023,-0.002382899,-0.00919462,-0.00292206,-0.011755635,0.04829342,-0.015057996,0.03211859,0.031309847,-0.0048548556,-0.0038535567,0.018071521,-0.00006438641,0.029210972,0.04116879,-0.02532131,-0.016117062,0.03727913,0.013700466,-0.026572933,-0.0056323064,0.009945594,0.0067732097,0.0081499955,0.009237945,-0.020873232,0.024397034,0.010109268,-0.024204476,-0.004977611,-0.0085880635,-0.007346068,0.02233667,-0.0075578815,0.0136138145,-0.00078587525,0.017041337,0.03034706,-0.038550008,-0.0013948383,0.00566119,0.027381675,-0.022760294,0.011601589,0.02659219,-0.00008875697,-0.03664369,-0.011062427,0.01947719,-0.04752319,-0.02260625,-0.048986625,0.012314051,0.042747762,0.017359057,-0.01033071,0.05499442,-0.019506073,0.020295558,-0.080180936,0.04941025,-0.04548208,0.0003784958,0.036470387,0.020006724,0.017282035,0.016916174,-0.007991136,-0.0051942384,0.033620536,0.019092076,0.018264078,0.034718115,-0.010850615,-0.039743867,0.03379384,0.0031194312,-0.0008328111,0.04294032,0.0115149375,0.023126155,-0.0053434703,0.0017402383,0.009555666,-0.032368913,0.0074904864,-0.009430503,-0.02458959,0.020603651,-0.034217466,-0.010176663,-0.039108425,0.017445708,-0.00030026934,-0.003148315,0.011726751,0.01526018,0.00422423,-0.0119481925,0.020180024,-0.030019712,-0.0060992585,-0.0034997324,0.0106773125,-0.011717123,0.011842285,0.023164665,-0.0081885075,0.027728278,0.0005779733,-0.044095665,-0.0254561,0.031194312,0.010465499,-0.025976006,0.012901352,0.026881026,-0.008862458,0.0005722568,-0.0072642313,0.014152976,-0.015462366,0.06319737,-0.012525865,-0.011293497,0.012814701,-0.0045780544,0.008843203,-0.007572323,0.0001596121,-0.02736242,-0.015789714,0.0014032627,-0.014778787,0.031964544,0.03148315,-0.04236265,-0.016993199,0.0098396875,0.0395128,0.0027656069,0.001920761,-0.0005123834,-0.044211198,0.031906776,-0.0054590045,0.042632226,0.0001778148,0.020160768,0.013652326,0.0031049894,-0.0021758997,0.032580726,0.00783709,-0.038781077,0.011871169,0.032677006,0.00393058,-0.02794009,0.017282035,-0.0062003513,-0.0144706955,0.016319247,0.014624741,-0.0075434395,-0.008279972,0.02582196,0.0329851,0.006060747,-0.01884175,-0.0152794365,0.03337021,-0.007740811,0.0073893936,-0.054185677,-0.036393367,-0.0007052418,-0.016232597,-0.019178726,0.01689692,-0.03452556,0.019506073,0.034217466,-0.057382133,-0.0072401618,0.03288882,0.004306067,-0.0066913725,-0.0063929087,0.02274104,-0.021913042,0.029961945,0.02703507,-0.033235423,0.023299456,-0.006123328,-0.06808833,0.04702254,-0.0064169783,0.003311989,-0.00799595,0.00021662717,-0.008660273,0.0017558836,-0.041630927,0.010561778,0.012496981,0.023126155,-0.007875601,0.06616275,-0.0090165045,-0.038222663,-0.03442928,0.019053563,0.040321536,0.041284326,0.009497898,-0.0007949014,0.02391564,-0.01938091,-0.019197982,0.0018690111,0.0012335714,-0.0073845796,0.05045006,0.036220063,0.04910216,0.004813937,-0.01009964,-0.0031049894,0.0131901875,0.022972109,-0.02659219,-0.023742339,-0.019640863,0.04829342,0.023857873,-0.023434246,-0.015683807,0.009117597,0.012285167,0.053415447,0.013565675,0.0051701684,-0.040321536,-0.030886222,-0.012708794,0.008227019,-0.00329514,-0.009112783,-0.01078322,-0.033639792,0.0090068765,-0.010725452,-0.001376786,0.053762052,-0.01684878,0.02414671,-0.024474056,0.0042507066,0.020237792,0.03637411,-0.042516693,-0.016945058,-0.0034419652,-0.0019965805,-0.016280735,-0.013690838,0.032311145,0.011226102,-0.0010951707,-0.0069272555,-0.024127454,0.008828761,-0.026495911,-0.001572954,-0.032195613,0.019650491,0.011197218,-0.023357224,-0.0499109,0.030019712,-0.035719413,-0.009974478,0.021046534,-0.0111009395,0.018273706,-0.03777978,-0.012602887,-0.00092006376,-0.008212577,0.024743637,-0.02233667,-0.033042867,-0.0019267784,0.002378085,0.013893023,-0.017243523,-0.018081147,0.032542214,-0.0030785128,0.04505845,0.036258575,-0.022124855,-0.012208145,-0.028286695,-0.026881026,-0.07925666,0.0066336053,-0.001572954,-0.011486054,-0.0032999539,-0.031733476,-0.005723771,0.009473829,0.002919653,-0.013276839,0.028614042,0.011880797,-0.030963244,0.013998929,-0.035122484,0.0010747114,-0.014643997,0.0009934762,0.02794009,0.0033841978,0.0356809,-0.011168335,0.013122792,-0.04960281,0.001456216,-0.0019773247,-0.00090201147,0.008222205,-0.029904177,-0.0522601,0.002606747,0.036971036,0.03138687,0.02264476,-0.02582196,-0.01979491,-0.028825857,0.002373271,-0.045251008,-0.0072497893,-0.0131998155,-0.033986397,0.028652554,0.023703827,-0.02672698,0.016271107,-0.015394971,0.004751356,-0.016502177,-0.0043373574,-0.037567966,0.0077167414,-0.035700157,0.0057959803,-0.026919536,0.006046305,0.010378849,-0.0045756474,0.005381982,0.016925802,0.06962879,0.018629937,0.023434246,0.019226866,-0.014595858,-0.01209261,-0.020988766,0.0064795595,0.0010061129,-0.0047417283,-0.031155802,-0.036085274,-0.027208373,0.01245847,0.008486971,-0.0054012374,-0.02247146,0.014095208,0.003899289,-0.009907083,-0.009887827,0.008795063,0.019910444,0.002833002,0.015712691,-0.021296859,-0.0054734466,-0.0064217923,0.02599526,0.036220063,0.028883623,-0.007798578,-0.031406127,0.008530296,0.012381447,0.029730877,0.027208373,0.016636968,0.021720484,-0.008356995,0.003843929,-0.0428633,-0.007962252,0.007841904,0.008072972,-0.0063736527,-0.001953255,-0.027323907,0.0063688387,-0.023260944,-0.011977076,0.044134177,-0.0009002063,-0.028768089,-0.0060992585,0.02277955,-0.017792312,0.002134981,-0.04324841,-0.030231526,-0.008862458,-0.031040266,0.0041279513,-0.0051990524,0.0119481925,-0.01390265,-0.017310917,-0.013844883,-0.043633528,-0.014066325,-0.012949491,0.036990292,0.0010193512,0.0047321003,-0.024743637,-0.01549125,-0.035257276,0.0037813478,-0.0029052112,0.0323304,-0.007668602,-0.011649728,-0.01349828,0.011986704,0.01870696,-0.023800105,-0.01267991,-0.012843585,-0.0059211426,0.03442928,-0.016434781,0.043595016,0.005126843,-0.0047296933,0.014066325,-0.0039426144,0.05742064,0.011158707,0.0029316877,-0.0029268737,-0.050835177,-0.012314051,-0.021797508,0.0067732097,-0.003973905,0.02247146,0.0060366774,-0.02522503,0.002132574,-0.0041014743,-0.011254985,-0.01567418,0.06870451,-0.0127761895,-0.015866738,0.01576083,-0.005988538,-0.018244822,0.0136234425,-0.00062039617,0.01209261,-0.0047128447,0.020911744,0.013209444,-0.021970809,-0.008703599,0.012169633,0.0066528614,-0.00081957283,0.0022697714,0.0021602544,-0.036220063,0.02019928,0.00459731,0.014249254,-0.012814701,0.0035213951,-0.044596314,0.012015588,-0.027477954,-0.013700466,0.0019291854,0.012169633,-0.0027776419,-0.004674333,-0.0034419652,-0.021123556,0.054609302,-0.039320238,-0.01413372,0.00035863832,-0.007808206,0.009801176,0.0048596696,0.012265912,0.009589363,-0.008260717,-0.031098034,-0.023954151,0.01349828,-0.033389468,0.026476655,-0.014316649,-0.035796437,-0.009387177,0.048986625,0.0057863523,0.0039546494,-0.0039570564,-0.0025176893,0.032311145,0.031771984,0.031502403,0.0067828377,-0.0119289365,-0.013392373,-0.028459996,-0.017590126,0.038550008,-0.022221135,-0.00826553,0.0010319878,0.0649689,-0.012381447,0.0031603498,-0.018601052,-0.016675478,-0.034506302,0.013430885,0.01100466,-0.025744935,0.01942905,0.027343163,0.010475127,0.011158707,-0.021296859,0.02237518,-0.01753236,0.026707724,0.0066961865,-0.0056467485,0.033119887,-0.01200596,-0.03406342,-0.007885229,-0.016868036,0.0019460341,0.00038030103,0.03134836,0.0013130014,-0.014422555,0.0044167875,-0.0033288375,0.00720165,0.023896385,-0.014624741,0.010157407,-0.00014742682,0.030096736,0.010398105,-0.013758233,0.019120958,-0.0011715919,0.004830786,-0.007735997,0.019400166,0.006436234,-0.0022769922,0.013777488,0.023318712,0.0066287913,-0.034044165,0.024897683,0.020603651,0.02853702,0.004306067,0.017696032,0.0026452586,0.020430349,0.014104836,-0.020680673,0.0018726216,0.00039564547,0.029076181,-0.010195919,0.024628103,0.022047833,-0.02123909,-0.023723083,0.038704056,0.010898754,-0.0048019025,0.015529761,0.011572705,0.0054156794,-0.01426851,-0.0049535413,-0.016993199,0.0034203024,0.0071679526,0.0011439119,-0.0009002063,0.024839915,-0.005203866,-0.027381675,0.02840223,-0.039378006,0.0115245655,-0.021913042,0.015963016,0.025417589,-0.022452204,0.0072257197,-0.027343163,0.013479024,-0.006108886,-0.013093909,-0.06650936,0.0041760905,-0.0037211734,0.010590662,0.018061893,0.022452204,0.014692136,-0.016348131,0.0123525625,-0.046868492,-0.023010619,0.0058633755,-0.0039498354,0.035815693,0.021662718,-0.019323144,-0.0499109,0.011052799,-0.023492014,-0.031175056,0.049294718,-0.020719185,-0.016694734,-0.0000224337,0.04193902,-0.02160495,-0.00060535263,0.017898219,0.016309619,0.015703063,0.012583632,0.022991365,-0.023569036,0.049987923,-0.00329514,0.0432099,-0.044827383,0.015414227,-0.035180252,-0.026168562,0.010311454,-0.0136138145,-0.027843812,-0.018533658,0.029056925,-0.008761366,-0.018562542,0.024974706,0.02337648,-0.01123573,0.022317413,-0.0011120195,0.039936423,0.018899517,0.0040100096,-0.0025393518,0.018995795,0.004450485,-0.004424008,-0.024801405,0.021046534,-0.016559944,-0.034852907,0.018052265,0.0042579276,-0.0067106285,0.016598456,0.021585694,0.057921294,0.012853213,0.01621334,0.0123525625,-0.017050965,0.019621609,0.007288301,0.005882631,0.01743608,-0.0030857336,0.02599526,-0.018071521,-0.023569036,0.0022998585,-0.007909299,-0.021585694,-0.0034588138,0.004424008,-0.009107969,-0.04193902,-0.020930998,-0.031367615,-0.0013683616,0.029499806,-0.019592725,0.0069272555,0.02264476,-0.017811568,-0.062042024,-0.013844883,0.004428822,0.030308548,-0.023723083,0.03129059,0.019371284,0.012439214,0.040244516,0.0005836899,0.01811966,0.006046305,0.021508671,-0.018735843,0.014884694,-0.021913042,-0.003059257,-0.0067780237,-0.011726751,0.015789714,0.04451929,-0.040206004,0.021758996,-0.008563994,-0.025398333,0.01947719,-0.005227936,0.011168335,-0.018081147,0.0049583553,0.02736242,-0.0046430426,0.013324978,-0.031194312,0.02046886,-0.04478887,-0.017763428,0.020622907,0.00627256,0.036431875,-0.0037476502,0.014018185,-0.028421486,0.014875066,-0.008467715,-0.0696673,0.0025128752,-0.025879726,0.008823947,0.026842514,0.02079621,0.010609917,0.019149842,0.040437073,0.0044817757,0.021065788,0.010465499,-0.034313746,0.019891188,-0.0031507218,0.014538091,-0.029538319,0.022259645,0.039397262,0.030674407,-0.014152976,0.0019376097,0.021335369,-0.0046911817,0.015317949,0.01838924,0.0033408725,0.014875066,0.010272942,0.06658638,-0.016107434,-0.017917475,-0.031733476,0.008092228,0.014191487,0.026515165,0.01286284,0.0025489798,-0.053376935,0.022818062,-0.0036321157,-0.029056925,-0.009709711,-0.00781302,-0.01132238,-0.008121112,0.02813265,0.0017173721,0.0111009395,0.0006895965,-0.0015958202,0.008780621,-0.013238328,0.015982272,-0.009160923,-0.0073171845,-0.008053717,0.029538319,0.047677234,-0.04451929,0.0040774047,-0.0171665]},{"id":"subsets-ii","name":"Subsets II","description":"You are given an array `nums` of integers, which that may contain duplicates. Return all possible subsets.\n\nThe solution must **not** contain duplicate subsets. You may return the solution in **any order**.\n\n**Example 1:**\n\n```java\nInput: nums = [1,2,1]\n\nOutput: [[],[1],[1,2],[1,1],[1,2,1],[2]]\n```\n\n**Example 2:**\n\n```java\nInput: nums = [7,7]\n\nOutput: [[],[7], [7,7]]\n```\n\n**Constraints:**\n* `1 <= nums.length <= 11`\n* `-20 <= nums[i] <= 20`\n","difficulty":"Medium","concepts":["Tree Maze","Subsets"],"solutions":{"python":"class Solution:\n    def subsetsWithDup(self, nums: List[int]) -> List[List[int]]:\n        res = []\n        nums.sort()\n\n        def backtrack(i, subset):\n            if i == len(nums):\n                res.append(subset[::])\n                return\n\n            subset.append(nums[i])\n            backtrack(i + 1, subset)\n            subset.pop()\n\n            while i + 1 < len(nums) and nums[i] == nums[i + 1]:\n                i += 1\n            backtrack(i + 1, subset)\n\n        backtrack(0, [])\n        return res\n","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {number[][]}\n     */\n    subsetsWithDup(nums) {\n        const res = [];\n        nums.sort((a, b) => a - b);\n        this.backtrack(0, [], nums, res);\n        return res;\n    }\n\n    /**\n     * @param {number} start\n     * @param {number[]} subset\n     * @param {number[]} nums\n     * @param {number[][]} res\n     * @return {void}\n     */\n    backtrack(start, subset, nums, res) {\n        res.push([...subset]);\n        for (let i = start; i < nums.length; i++) {\n            if (i > start && nums[i] === nums[i - 1]) {\n                continue;\n            }\n            subset.push(nums[i]);\n            this.backtrack(i + 1, subset, nums, res);\n            subset.pop();\n        }\n    }\n}\n","cpp":"class Solution {\npublic:\n    vector<vector<int>> subsetsWithDup(vector<int>& nums) {\n        vector<vector<int>> res;\n        sort(nums.begin(), nums.end());\n        backtrack(0, {}, nums, res);\n        return res;\n    }\n\nprivate:\n    void backtrack(int start, vector<int> subset, vector<int>& nums, vector<vector<int>>& res) {\n        res.push_back(subset);\n        for (int i = start; i < nums.size(); i++) {\n            if (i > start && nums[i] == nums[i - 1]) {\n                continue;\n            }\n            subset.push_back(nums[i]);\n            backtrack(i + 1, subset, nums, res);\n            subset.pop_back();\n        }\n    }\n};\n","java":"class Solution {\n    \n    public List<List<Integer>> subsetsWithDup(int[] nums) {\n        List<List<Integer>> res = new ArrayList<>();\n        Arrays.sort(nums);\n        backtrack(0, new ArrayList<>(), nums, res);\n        return res;\n    }\n\n    private void backtrack(int start, List<Integer> subset, int[] nums, List<List<Integer>> res) {\n        res.add(new ArrayList<>(subset));\n        for (int i = start; i < nums.length; i++) {\n            if (i > start && nums[i] == nums[i - 1]) {\n                continue;\n            }\n            subset.add(nums[i]);\n            backtrack(i + 1, subset, nums, res);\n            subset.remove(subset.size() - 1);\n        }\n    }\n}\n","csharp":"public class Solution {\n    \n    public List<List<int>> SubsetsWithDup(int[] nums) {\n        List<List<int>> res = new List<List<int>>();\n        Array.Sort(nums);\n        Backtrack(0, new List<int>(), nums, res);\n        return res;\n    }\n\n    private void Backtrack(int start, List<int> subset, int[] nums, List<List<int>> res) {\n        res.Add(new List<int>(subset));\n        for (int i = start; i < nums.Length; i++) {\n            if (i > start && nums[i] == nums[i - 1]) {\n                continue;\n            }\n            subset.Add(nums[i]);\n            Backtrack(i + 1, subset, nums, res);\n            subset.RemoveAt(subset.Count - 1);\n        }\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def subsetsWithDup(self, nums: List[int]) -> List[List[int]]:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {number[][]}\n     */\n    subsetsWithDup(nums) {}\n}\n","cpp":"class Solution {\npublic:\n    vector<vector<int>> subsetsWithDup(vector<int>& nums) {\n        \n    }\n};\n","java":"class Solution {\n    public List<List<Integer>> subsetsWithDup(int[] nums) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public List<List<int>> SubsetsWithDup(int[] nums) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/Vn2v6ajA7U0","embedding":[-0.016965665,-0.01692527,0.017692765,-0.047221098,0.0022418913,0.048917666,-0.021611026,0.00828086,0.0081748245,0.05323987,-0.0001677316,-0.06277296,-0.014208744,-0.021045502,0.020601165,0.033789948,-0.00501396,0.011684092,0.025993822,0.050452653,0.004655459,0.008684805,0.030013068,-0.026902696,0.054653674,-0.017682666,0.023226803,0.008038494,-0.0006207489,-0.00032078865,0.01401687,-0.017107045,-0.0024426011,0.04249495,-0.013431151,0.05731971,0.038778663,-0.005978377,-0.020641558,0.0075285137,0.022398716,-0.013703814,-0.01772306,-0.048998456,-0.029225377,0.04003089,0.03653677,-0.026014019,0.024862777,0.018470358,0.0035294641,0.024701199,-0.0093311155,0.000495463,-0.027973149,-0.022358323,-0.034557443,0.030376619,0.0046453606,0.0155821545,0.020904122,0.016258761,0.004945794,0.041525483,-0.020641558,0.007765831,0.019651895,-0.02004574,-0.028902221,-0.003943507,-0.039263394,0.008891826,-0.0023744355,-0.022075562,0.063257694,0.03639539,0.031952,0.058450755,-0.004971041,0.009755257,0.03669835,0.0052512772,0.044918615,0.019359035,-0.025327314,-0.0108964,-0.005806701,0.0043600746,-0.007927408,-0.04031365,0.038192943,-0.0030245336,-0.027225852,0.024580017,0.02280266,0.017197933,0.060268503,0.0042944336,0.002445126,0.03667815,0.028074136,-0.0038955386,-0.032073185,-0.018500654,-0.008573719,0.008659557,0.009235179,0.005041731,0.010643935,0.0055441367,0.013320066,-0.025024354,0.017440299,-0.025589878,0.026276583,-0.015218605,-0.03799097,-0.028195318,0.03502198,-0.00039100554,0.017733159,-0.048715692,0.01358263,-0.037324462,-0.009750208,0.01605679,0.012916122,-0.0574005,0.03544612,-0.0203386,0.040697396,-0.018369371,0.0100784125,0.011492218,-0.01642034,-0.04221219,-0.0022734494,-0.027064275,0.01328977,0.024600213,0.04738268,-0.034092907,-0.007220506,0.0025019306,0.024135677,-0.0044004694,-0.023287395,0.03203279,-0.016087085,0.049200427,0.018965188,-0.022176547,0.03334561,0.043181654,-0.019793276,-0.011229654,-0.011451824,0.013279672,0.021772603,-0.0069326954,-0.029588927,-0.00167132,-0.007811275,-0.011573006,0.02534751,-0.00602887,-0.0063419268,-0.036577165,-0.01023999,-0.047907803,0.0042111203,-0.014844957,0.018066414,0.0015804324,0.029205179,-0.009765356,-0.04621124,-0.07812285,-0.054088153,-0.04621124,-0.00092276046,0.027670192,-0.0073568374,-0.07529523,0.021590827,0.022338124,0.02579185,-0.06551978,-0.022479506,-0.003908162,0.059985742,0.039323986,0.012916122,0.003428478,-0.05315908,-0.041646667,0.011381133,0.05469407,-0.014976238,0.0030750267,-0.01997505,0.015198408,-0.035547107,0.04037424,0.019682191,-0.035122965,-0.0075083165,0.0072609005,-0.028942615,-0.03552691,0.026377568,0.018914696,-0.022136152,-0.013380658,-0.0154508725,-0.00075360877,0.0076244506,-0.0130777,-0.010285434,0.06915528,0.03457764,-0.016238565,-0.005730961,0.02229773,0.0435856,-0.0019364085,-0.0225199,0.014824759,0.0030573541,0.02266128,-0.004190923,-0.021267673,-0.006725674,-0.0008829972,-0.037425447,-0.00037775113,0.006705477,-0.019550908,-0.016511226,0.009694666,0.046453606,0.020782938,-0.004953368,-0.006160152,0.02607461,-0.012956516,-0.043706782,0.054532494,-0.06087442,-0.024277057,0.024014493,0.030114055,-0.0015880064,-0.039606746,0.0025625222,0.039364383,0.0074931686,0.0050745513,-0.011633598,0.036779135,-0.051987644,0.011441725,-0.054815255,-0.04685755,-0.004809463,-0.030740168,0.017086849,0.013572532,0.041222524,0.019520612,-0.024277057,-0.002855382,0.01735951,-0.03443626,-0.008457585,-0.023873113,-0.01822799,-0.000048007845,0.0108964,-0.06850897,-0.019197457,-0.038475703,0.0138048,0.020651657,0.03245693,-0.020247713,-0.039101817,0.015016633,-0.034234285,-0.034618035,-0.02112629,-0.016228465,-0.02215635,-0.010472259,-0.016501129,-0.018026019,0.010431864,0.015147915,0.03284068,-0.049119636,0.027589401,-0.042373765,-0.02744802,-0.0035067422,-0.036354996,-0.056673396,0.004693329,0.013905786,0.0012774741,0.02237852,-0.009745158,0.0060541164,-0.003509267,-0.031426873,0.015774028,-0.031790424,-0.030053463,0.0023277295,0.049079243,0.0033830344,-0.035183556,0.032376144,0.032335747,0.04823096,0.022580491,0.021368658,0.0005238654,0.006574195,-0.014956041,-0.02142925,-0.019783176,-0.008018296,-0.0110882735,0.06115718,-0.0588547,-0.005973328,0.0355875,-0.024438636,-0.00077443715,-0.0037011404,0.03645598,0.0443127,0.02492337,-0.019429725,-0.047180705,0.015390282,-0.018995484,0.017985623,-0.01707675,0.020025544,0.019672092,-0.012946418,0.045847688,-0.014259237,-0.0028503325,0.020762742,-0.027246049,-0.015067126,0.0025877687,0.018056314,-0.00034429948,0.025165735,0.040253058,-0.013784602,0.026559344,0.018914696,-0.0013469021,-0.044110727,-0.02011643,0.07824403,0.04677676,0.014057265,0.013754306,0.0072609005,-0.06354045,-0.0016801562,-0.028579066,0.00014493083,-0.013421052,-0.0312249,-0.050210286,-0.018460259,0.019348936,-0.03463823,0.060995605,0.04641321,-0.0011903737,-0.02280266,-0.028417489,-0.037587024,-0.058127597,-0.015804324,0.075052865,0.0021749882,0.02201497,-0.0370417,0.019106569,0.027791373,-0.048311748,-0.03582987,-0.00022343174,-0.011976951,0.0071144705,0.0103409765,-0.020166924,0.0072810976,0.01321908,0.043343235,0.042656526,-0.05235119,-0.048594512,-0.002956368,0.003953606,-0.009422003,0.002325205,0.052714743,-0.026135202,0.008316205,-0.020166924,0.023772128,0.0005185005,-0.039667338,0.029730307,0.002600392,0.01633955,-0.0025448496,-0.02433765,-0.019813472,-0.024095284,-0.021772603,-0.030376619,-0.00820512,-0.022216942,0.020298205,-0.03443626,0.04009148,0.011169062,0.0588547,-0.024519425,-0.06988238,-0.015753832,-0.068953305,-0.028801234,-0.021328263,0.017006058,-0.0377688,0.0074477247,0.016248664,0.025892835,-0.023913508,0.025589878,-0.014218843,0.026195794,0.033608172,0.010522751,-0.017430201,0.0015829571,-0.015168112,-0.0032870974,-0.025266722,-0.042171795,-0.0028503325,-0.036435783,-0.0008628,0.042414162,0.024822382,0.013643222,0.011825472,0.056754187,-0.0026862302,0.021409053,0.027508613,-0.0054027564,0.058006413,-0.0011203145,-0.032315552,0.037526432,0.07436616,0.008689853,0.010623737,-0.008220268,-0.08297018,-0.027710585,0.014632885,0.00504678,-0.017127242,0.012259712,0.027367232,0.017773554,-0.012340501,-0.0704479,0.016743494,-0.014925745,-0.005710764,0.045362957,0.002986664,-0.0050164843,-0.012441487,0.00075360877,0.011774979,0.0044408636,-0.10001663,0.028720446,0.0225199,0.05986456,0.016440537,-0.0141178565,-0.07060948,-0.002461536,0.06301533,-0.009987525,0.0072659496,0.039384577,-0.017248426,0.007836522,0.03863728,0.0076295,-0.06863015,0.0016889925,-0.015662944,0.0043020076,0.016501129,0.013572532,0.007387133,0.031022929,-0.020762742,-0.04168706,-0.04512059,-0.05986456,0.022499703,-0.00058540376,0.05206843,0.015269098,0.021308066,-0.0022469407,0.017389806,0.02484258,-0.023711536,-0.0031406677,-0.052472375,-0.017430201,0.041081145,-0.01772306,-0.0023353035,-0.006579244,-0.041565876,0.030477604,0.0045065046,-0.02556968,0.00020607475,-0.006210645,-0.0026458357,0.013673518,-0.014461209,0.004657984,-0.024822382,-0.020419389,0.038495902,-0.0013607877,-0.0021661518,-0.04104075,-0.0056905667,0.018197695,0.032658905,0.0062257927,0.010391469,0.016016396,-0.009689616,0.0030775513,-0.027549008,-0.004839759,0.029104194,0.031022929,-0.03021504,-0.001973016,-0.010755019,-0.028781038,-0.011138767,-0.05630985,0.029003207,-0.021631222,-0.032941666,0.018177498,-0.0084676845,-0.04249495,0.0268825,-0.014905548,0.0064631104,0.038798857,-0.013522038,0.030396815,0.011976951,0.001729387,0.027084472,-0.00813948,-0.005877391,-0.025610074,0.0023087948,0.035466317,-0.010482357,-0.010441963,0.03304265,-0.0030826007,-0.01720803,-0.018036118,-0.019944753,0.013905786,0.052230008,-0.0027417724,0.032719497,0.003996525,0.008725199,0.027811572,-0.0018328977,0.01002792,-0.017763454,0.0044560116,-0.01351194,0.00493822,-0.028356897,0.03457764,-0.028175121,0.009507841,0.004519128,0.0159861,-0.020601165,-0.01954081,0.023913508,0.023347985,-0.0062257927,-0.061439943,-0.00668023,0.030255435,0.004857431,-0.021590827,0.041141737,-0.03304265,-0.02666033,0.008028395,0.0067004277,0.034476653,0.00042824418,0.0072508017,-0.027872164,0.0046100155,0.0013330164,-0.005963229,-0.0050594034,-0.024600213,0.0026231138,0.005776405,-0.0047539207,0.00087668555,-0.0119668525,0.012562671,-0.0002740826,0.01736961,-0.038112152,-0.0072154566,-0.003246703,-0.046170846,-0.012047642,0.02884163,0.0015438249,0.015319591,-0.0268825,0.010724723,0.016672805,0.0479482,0.015117619,-0.0013910835,-0.0032214564,0.03284068,-0.039566353,-0.010714625,0.010856005,0.022095758,0.008689853,-0.023549957,-0.01155281,0.00508465,0.02047998,-0.039849114,0.06022811,0.0134008555,-0.017319115,0.010643935,0.010032969,-0.022338124,0.015955804,-0.010674231,-0.027084472,0.021005109,-0.013168587,0.02789236,0.008038494,0.017339313,0.011320542,-0.02369134,-0.0010527801,0.028639657,0.015279196,0.023247,0.022479506,-0.046534393,-0.013744208,0.013794701,0.0044509624,-0.0036304502,-0.011653796,0.038798857,0.02825591,-0.014148152,0.000097435804,-0.03494119,-0.002592818,0.0005487963,-0.031022929,0.01641024,-0.023247,-0.015057027,0.019439824,-0.014743971,0.007972852,-0.0021181833,0.013067601,0.00668528,-0.019843768,0.009472496,-0.022055363,0.0106338365,-0.0064479625,0.0032441784,-0.0045999167,-0.012481881,-0.05049305,-0.021207081,0.031406675,-0.050533444,-0.03336581,-0.03247713,-0.0011619712,0.029548531,0.0046074907,0.0147035755,0.004726149,-0.015481168,0.027225852,-0.07727456,0.026983485,-0.05097778,0.0019275722,0.02674112,0.012693953,0.0167031,0.030134251,-0.03930379,-0.0015160538,0.009386658,0.039707735,0.013118094,0.018500654,-0.024640609,-0.010856005,0.020661756,0.03726387,-0.01467328,0.03667815,0.009341214,0.020439586,0.019157063,-0.011270048,0.013229179,-0.017521087,0.019964952,-0.027266247,-0.034012116,0.0016889925,-0.03690032,0.0073315906,-0.048271354,0.035425924,0.02657954,0.037607223,0.0065186527,0.01809671,0.03698111,-0.0042792857,0.000018530554,-0.046736367,0.027205655,-0.00031195238,-0.0074073304,0.012562671,0.008396994,-0.009058453,0.00050051237,-0.016985862,0.01568314,-0.02506475,-0.0045999167,0.030194843,0.011815374,-0.008396994,0.023812521,0.012178923,-0.0014971189,-0.016834382,-0.016167874,0.00043739603,-0.025165735,0.068589754,0.01728882,-0.0045140786,0.028599262,0.0073265415,0.0069024,0.021368658,0.021691814,-0.020368896,-0.03181062,0.03885945,-0.0050089103,0.012471783,0.027912557,-0.05315908,0.0010445749,0.0043625995,0.030558392,-0.034618035,0.0054128547,0.015380182,-0.026014019,0.022742068,-0.011532612,0.055461563,-0.0017407478,0.0042994833,0.017824046,-0.0010117545,-0.05606748,0.0319722,0.0041934475,-0.057844836,-0.029043602,0.0356077,0.02367114,-0.013522038,0.013007009,-0.03203279,0.0043827966,0.022237139,0.040495425,0.012219318,0.0011966852,0.014198645,0.035365332,0.00966437,-0.0028124629,0.002530964,0.020964714,-0.030376619,0.015965901,-0.045847688,-0.0154508725,0.02484258,-0.03370916,0.003943507,0.030275632,-0.053037897,0.01133064,0.046938337,-0.026902696,-0.024660805,0.0038122253,-0.010977189,0.045847688,0.025993822,0.022742068,-0.009482594,0.058895092,0.012633361,-0.060026135,0.020308305,0.00030138038,-0.028740643,0.057279315,-0.0023125818,-0.0070134844,-0.028053937,0.0032845729,-0.02912439,0.008896875,-0.04968516,-0.039667338,0.0062863845,0.021510039,0.0049786144,0.05606748,0.006695378,-0.0061702505,-0.032658905,0.0035900557,0.023428775,0.01532969,0.024943566,0.008568671,0.025084946,-0.023206605,-0.023549957,0.010179399,-0.023893312,0.00792236,0.03619342,0.0013456397,0.035567302,0.009553284,-0.0040419684,0.031851016,0.008578769,0.009790602,-0.02556968,-0.023307592,-0.020722346,0.010643935,0.032214563,-0.026922893,0.009866342,0.015279196,0.01830878,0.042010218,0.037647616,0.020671854,-0.014097659,-0.020005345,-0.030417012,0.012279909,0.013663419,0.0028099383,0.0040495424,-0.024075085,0.016329452,0.0022848104,-0.0024274534,0.011855768,-0.044474278,0.015168112,-0.032052986,-0.0028856779,0.004700903,0.053926576,-0.046009265,0.000574674,-0.02847808,-0.003335066,0.020520374,-0.012451585,0.02912439,0.006917548,-0.014037068,0.013017108,-0.009896638,0.03530474,0.0052916715,0.01626886,-0.052431982,0.0012515965,0.015885113,-0.010734823,-0.058289174,0.03916241,-0.046897944,0.018833907,-0.0002826033,-0.025468694,0.014622787,-0.02607461,-0.0005317549,0.008866579,0.010401568,0.012310205,-0.019823572,0.0005983426,0.0009934508,-0.004657984,0.02128787,-0.014026969,0.024378045,0.027104668,-0.0015274148,0.032658905,0.0025334887,0.012330403,-0.019692289,0.0015741208,-0.02411548,-0.05570393,0.016349649,0.00660954,-0.010391469,-0.0043701734,-0.020944517,0.011340739,0.022277534,0.023347985,-0.06370203,0.06152073,-0.0037617323,-0.016359748,-0.009522989,-0.028437685,-0.023549957,0.0039561302,0.020742545,0.039283592,-0.0026407863,0.04657479,0.010154152,0.03885945,-0.043625996,0.028356897,0.016016396,-0.016480932,0.028215516,-0.029730307,-0.029649518,0.0016511227,0.03894024,0.030538196,0.023347985,-0.01321908,-0.047705833,-0.023893312,-0.013451348,-0.024277057,-0.0210657,-0.012047642,-0.015390282,0.013936082,0.021409053,-0.031103717,0.032093383,0.013198883,0.01873292,-0.02114649,0.0030169596,-0.020207318,0.00010863895,-0.03645598,0.021611026,-0.006639836,0.016753593,0.013915884,-0.014905548,0.010926696,0.02870025,0.0457669,0.02040929,0.020328501,-0.011158964,-0.0045746705,-0.0015753831,-0.014208744,0.019853868,0.008927171,-0.02534751,-0.03441606,-0.023166211,-0.020722346,-0.016238565,0.016369846,-0.004117708,-0.034900796,0.008780741,-0.0031280443,-0.007614352,-0.006887252,-0.0132392775,0.011573006,0.01169419,-0.010593441,-0.019116668,-0.016228465,-0.005907687,0.028195318,0.042535346,0.0070639774,-0.003362837,-0.031628847,-0.014077462,0.02971011,0.026680527,0.007649697,0.0210657,-0.014451111,-0.004004099,-0.026135202,-0.046978734,0.006695378,0.004620114,0.027064275,0.014208744,-0.023146013,-0.026316976,0.0071851606,-0.018167399,0.011320542,0.028235713,-0.020540573,0.0016852055,-0.028195318,0.014289533,-0.020308305,0.0036910418,-0.041343708,-0.048594512,0.010987287,-0.014632885,-0.003443626,0.0027291493,-0.014299631,-0.0015059552,-0.0054229535,0.0044635856,-0.048392538,-0.008422241,-0.020126529,0.02789236,0.0012396043,0.0016296632,-0.0042262683,-0.034274682,-0.017228229,-0.029063798,-0.0012572769,0.029952476,-0.02548889,-0.021186883,0.0053522633,0.0037895034,0.0018543572,-0.033810146,-0.0064075678,0.0062257927,0.014188547,0.030598788,0.008109184,0.055017225,0.0018114381,-0.01547107,-0.02114649,-0.021469645,0.022984436,0.007548711,0.001648598,0.027488416,-0.02447903,0.008997861,-0.002774593,-0.017319115,0.023610549,0.006776167,0.022701675,0.0024855204,-0.0074224784,0.013097897,-0.015774028,-0.013956279,0.045564927,-0.028760841,-0.010744921,0.0014403142,-0.0024362896,0.010381371,0.028377093,0.00813443,-0.0053876084,-0.0013872965,0.01765237,-0.015824521,0.00958863,0.0062409407,-0.019389331,-0.0003525046,-0.030881548,-0.023994297,-0.00987644,-0.04714031,0.030417012,0.014218843,0.00777088,-0.0016662707,0.01155281,-0.020106332,0.0069478434,0.00188844,0.0051906854,0.00035660717,0.020540573,-0.0007826423,-0.0025726208,-0.03748604,-0.02011643,0.028417489,-0.026700724,-0.012562671,0.011310443,-0.010946893,-0.0027241,0.017682666,0.012481881,0.0064984555,-0.015460972,-0.056552216,-0.023287395,-0.0009120307,-0.016672805,0.037748605,0.00086153764,-0.032497328,-0.0053320657,0.026034215,-0.0033173934,0.01198705,0.010866104,0.041808244,0.03942497,0.049402397,0.015339788,0.0065539978,-0.03187121,-0.013340264,-0.022479506,-0.021247474,0.028518474,-0.015531662,-0.012138529,0.0068822023,0.054209337,-0.0029386955,-0.003006861,0.0018253237,-0.0135624325,-0.014087561,0.026842104,-0.023125816,-0.027771177,-0.0008621688,0.029669715,-0.009578532,0.0094775455,-0.026640132,0.03035642,-0.012239515,0.028760841,-0.00784157,0.034092907,-0.0073113935,0.005584531,-0.020217417,-0.015430676,-0.009568432,0.0196115,-0.0070993225,0.01642034,0.0042464654,0.0025473742,0.0102248425,-0.00047621256,0.008366698,0.029750504,0.00006994076,0.021449447,-0.014067363,0.04221219,0.004849857,-0.017248426,0.025731258,0.016571818,-0.0072255554,0.0018657182,0.032012593,0.021449447,-0.010038018,0.0044484376,0.0076597957,-0.009815848,-0.027952952,0.022701675,0.02056077,0.016036592,-0.015198408,-0.012300107,0.0013077699,0.00406974,0.02070215,-0.010573245,0.02288345,0.00937151,0.02884163,-0.0031760128,0.016541522,0.0012017345,0.009649222,-0.00089625164,0.028154925,-0.0057208627,-0.00501396,0.027326837,0.04225258,0.011522514,-0.002527177,-0.010154152,0.012007247,0.024095284,-0.02019722,0.016006297,0.012865629,-0.0030624035,0.0074426755,-0.020591065,0.012502079,-0.016642509,-0.0009271786,-0.032275155,0.025408102,0.030719971,-0.011734584,0.008917073,-0.0065691457,0.0005563703,-0.020378994,-0.0023353035,-0.063863605,0.0035976297,0.012825235,0.019419627,0.0004588556,0.019651895,0.041889034,0.0042868597,0.00039952624,-0.033729356,0.0035319887,0.026175596,0.023852916,0.06051087,0.025185933,-0.036294404,-0.032234762,0.044918615,-0.0050518294,-0.0015867441,0.031851016,-0.020469882,-0.00465041,-0.0022646133,0.05267435,-0.02040929,-0.031548057,0.0037036652,0.030134251,0.017521087,0.0039056374,0.04221219,-0.017248426,0.06515623,-0.012290008,0.024297256,-0.01351194,0.014289533,-0.022681478,-0.064833075,0.0021118717,-0.011320542,-0.017995723,0.0059379824,0.014279434,-0.011825472,-0.008992812,0.020742545,0.008477783,0.0065539978,0.017773554,0.0018240614,0.04089937,0.012300107,0.016450636,0.010997386,0.009119045,0.0045418497,-0.04277771,-0.008083937,0.0045595225,0.0054027564,-0.038394913,-0.00784157,-0.016137578,0.011179161,0.0128151355,0.023024831,0.043020077,0.0021257573,0.0135624325,0.019833669,-0.033204228,0.0016536474,-0.02367114,0.028074136,0.006442913,-0.019490317,-0.005006386,-0.031729832,-0.04225258,-0.00937151,-0.02534751,-0.014228941,-0.017591778,-0.00077569945,-0.012461685,-0.03978852,-0.020762742,-0.04952358,-0.0044206665,0.031649042,-0.013764405,0.027791373,0.020429488,-0.024539622,-0.06188428,-0.028882025,0.008684805,0.004771593,-0.024095284,0.012996911,0.031406675,0.012199121,0.036859926,0.0091998335,0.02811453,0.014552097,-0.00014761327,-0.03896044,-0.00886153,-0.00974011,-0.007786028,0.008548473,-0.000058934856,0.024075085,0.048311748,-0.0134008555,0.017268622,-0.0016410241,-0.0020613787,0.05485565,0.0003162127,0.015561958,-0.014047166,0.0130777,0.0268825,0.015602352,0.016359748,-0.005680468,0.049402397,-0.0009448512,-0.028175121,0.024963763,0.004857431,0.02775098,-0.014441012,-0.0027341987,-0.018268386,0.0003149504,-0.0075638588,-0.05004871,0.0022014969,-0.023287395,0.018440062,0.010835809,-0.0022267434,0.0018127004,0.024943566,0.03532494,0.016430438,0.030982535,0.0141178565,-0.035042174,0.008710051,-0.000055502907,0.04366639,-0.011047879,-0.024539622,0.030518,0.029164786,-0.013168587,0.020661756,0.014360223,0.0006532538,-0.012956516,0.03637519,0.01278484,0.009830996,0.0071498156,0.032275155,-0.004865005,-0.011946656,-0.009644172,-0.024176072,-0.0055087917,0.017712962,0.014814661,0.015390282,-0.011007485,0.0052563264,-0.013794701,-0.03469882,-0.027730782,0.025751455,-0.010542949,-0.01205774,0.03094214,-0.002875579,0.0043777474,-0.0070639774,0.014400617,0.013471546,-0.0071296184,-0.008235416,0.0013696239,-0.0007977902,-0.012592967,0.02011643,0.062086254,-0.02847808,0.015804324,-0.0054683974]},{"id":"combination-target-sum-ii","name":"Combination Target Sum II","description":"You are given an array of integers `nums`, which may contain duplicates, and a target integer `target`. Your task is to return a list of all **unique combinations** of `nums` where the chosen numbers sum to `target`.\n\nEach element from `nums` may be chosen **at most once** within a combination. The solution set must not contain duplicate combinations.\n\nYou may return the combinations in **any order** and the order of the numbers in each combination can be in **any order**.\n\n**Example 1:**\n\n```java\nInput: candidates = [9,2,2,4,6,1,5], target = 8\n\nOutput: [\n  [1,2,5],\n  [2,2,4],\n  [2,6]\n]\n```\n\n**Example 2:**\n\n```java\nInput: candidates = [1,2,3,4,5], target = 7\n\nOutput: [\n  [1,2,4],\n  [2,5],\n  [3,4]\n]\n```\n\n**Constraints:**\n* `1 <= candidates.length <= 100`\n* `1 <= candidates[i] <= 50`\n* `1 <= target <= 30`\n","difficulty":"Medium","concepts":["Tree Maze","Combinations"],"solutions":{"python":"class Solution:\n    def combinationSum2(self, candidates: List[int], target: int) -> List[List[int]]:\n        res = []\n        candidates.sort()\n\n        def dfs(i, cur, total):\n            if total == target:\n                res.append(cur.copy())\n                return\n            if total > target or i == len(candidates):\n                return\n            # include candidates[i]\n            cur.append(candidates[i])\n            dfs(i + 1, cur, total + candidates[i])\n            cur.pop()\n\n            # skip candidates[i]\n            while i + 1 < len(candidates) and candidates[i] == candidates[i+1]:\n                i += 1\n            dfs(i + 1, cur, total)\n            \n        dfs(0, [], 0)\n        return res\n","javascript":"class Solution {\n    /**\n     * @param {number[]} candidates\n     * @param {number} target\n     * @return {number[][]}\n     */\n    combinationSum2(candidates, target) {\n        const res = [];\n        candidates.sort((a, b) => a - b);\n        this.backtrack([], 0, target, candidates, res);\n        return res;\n    }\n\n    /**\n     * @param {number[]} cur\n     * @param {number} pos\n     * @param {number} target\n     * @param {number[]} candidates\n     * @param {number[][]} res\n     * @return {void}\n     */\n    backtrack(cur, pos, target, candidates, res) {\n        if (target === 0) {\n            res.push([...cur]);\n            return;\n        }\n        if (target < 0) {\n            return;\n        }\n\n        let prev = -1;\n        for (let i = pos; i < candidates.length; i++) {\n            if (candidates[i] === prev) {\n                continue;\n            }\n            cur.push(candidates[i]);\n            this.backtrack(cur, i + 1, target - candidates[i], candidates, res);\n            cur.pop();\n            prev = candidates[i];\n        }\n    }\n}\n","cpp":"class Solution {\npublic:\n    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {\n        vector<vector<int>> res;\n        sort(candidates.begin(), candidates.end());\n        backtrack({}, 0, target, candidates, res);\n        return res;\n    }\n\nprivate:\n    void backtrack(vector<int> cur, int pos, int target, vector<int>& candidates, vector<vector<int>>& res) {\n        if (target == 0) {\n            res.push_back(cur);\n            return;\n        }\n        if (target < 0) {\n            return;\n        }\n\n        int prev = -1;\n        for (int i = pos; i < candidates.size(); i++) {\n            if (candidates[i] == prev) {\n                continue;\n            }\n            cur.push_back(candidates[i]);\n            backtrack(cur, i + 1, target - candidates[i], candidates, res);\n            cur.pop_back();\n            prev = candidates[i];\n        }\n    }\n};\n","java":"class Solution {\n    \n    public List<List<Integer>> combinationSum2(int[] candidates, int target) {\n        List<List<Integer>> res = new ArrayList<>();\n        Arrays.sort(candidates);\n        backtrack(new ArrayList<>(), 0, target, candidates, res);\n        return res;\n    }\n\n    private void backtrack(List<Integer> cur, int pos, int target, int[] candidates, List<List<Integer>> res) {\n        if (target == 0) {\n            res.add(new ArrayList<>(cur));\n            return;\n        }\n        if (target < 0) {\n            return;\n        }\n\n        int prev = -1;\n        for (int i = pos; i < candidates.length; i++) {\n            if (candidates[i] == prev) {\n                continue;\n            }\n            cur.add(candidates[i]);\n            backtrack(cur, i + 1, target - candidates[i], candidates, res);\n            cur.remove(cur.size() - 1);\n            prev = candidates[i];\n        }\n    }\n}\n","csharp":"public class Solution {\n    \n    public List<List<int>> CombinationSum2(int[] candidates, int target) {\n        List<List<int>> res = new List<List<int>>();\n        Array.Sort(candidates);\n        Backtrack(new List<int>(), 0, target, candidates, res);\n        return res;\n    }\n\n    private void Backtrack(List<int> cur, int pos, int target, int[] candidates, List<List<int>> res) {\n        if (target == 0) {\n            res.Add(new List<int>(cur));\n            return;\n        }\n        if (target < 0) {\n            return;\n        }\n\n        int prev = -1;\n        for (int i = pos; i < candidates.Length; i++) {\n            if (candidates[i] == prev) {\n                continue;\n            }\n            cur.Add(candidates[i]);\n            Backtrack(cur, i + 1, target - candidates[i], candidates, res);\n            cur.RemoveAt(cur.Count - 1);\n            prev = candidates[i];\n        }\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def combinationSum2(self, candidates: List[int], target: int) -> List[List[int]]:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} candidates\n     * @param {number} target\n     * @return {number[][]}\n     */\n    combinationSum2(candidates, target) {}\n}\n","cpp":"class Solution {\npublic:\n    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {\n        \n    }\n};\n","java":"class Solution {\n    public List<List<Integer>> combinationSum2(int[] candidates, int target) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public List<List<int>> CombinationSum2(int[] candidates, int target) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/FOyRpNUSFeA","embedding":[0.06665413,-0.03922239,0.04681452,-0.055081025,-0.018110171,0.0029422229,0.0011203289,0.06600151,-0.024516711,0.033805653,-0.009571742,-0.060867578,-0.003986413,-0.011203289,0.009838228,-0.008413344,0.0076465164,-0.025408624,-0.028932765,0.031064654,-0.0011570387,0.02135151,0.02351603,-0.020068027,0.0643047,-0.025212837,-0.0059769,0.03467581,0.0049925335,-0.018023156,0.06247737,-0.013694117,-0.033435836,-0.005408578,-0.0050469185,0.005721291,0.0055146287,0.056212228,-0.0008871536,-0.015097247,0.02445145,0.034197222,-0.0019877679,-0.015554081,0.000021254722,-0.010795402,0.02329849,-0.045944363,0.023276735,0.059866894,-0.00016485422,0.0164895,0.016467746,0.030194495,0.00030693476,-0.05160039,-0.015706358,-0.010365762,0.029585384,-0.003554053,0.027235957,-0.023146212,0.03424073,-0.017131243,0.006754604,-0.0089300005,0.053427722,0.018305955,-0.0142270895,-0.038548015,-0.03852626,0.024016371,0.016870195,0.004073429,0.015184264,0.006765481,0.032065336,0.015423557,0.037895396,-0.017511938,0.0067219734,-0.053558245,0.05851815,-0.006276017,0.00078994065,-0.043007575,-0.040592887,0.010866103,-0.048380803,-0.041832864,-0.05347123,-0.0068361815,0.013161145,0.059040245,0.02175396,0.007673709,0.03922239,-0.009392272,0.0012297785,0.026235275,0.022102023,0.017196504,0.024581974,-0.0037008922,0.02632229,-0.018392973,0.006199878,0.010985749,0.024038125,0.00075662986,0.016717918,0.049773056,0.01631547,0.013574471,0.009212801,-0.0054684016,-0.011399074,-0.04698855,0.010556108,-0.0057267295,-0.0026077558,-0.06160721,-0.017881755,0.00965332,-0.02758402,0.03702524,0.025887212,-0.05094777,0.0003878323,-0.038874324,0.021384142,-0.011562229,-0.0024962667,0.020350829,-0.0252781,-0.06199878,-0.003118974,0.02945486,-0.019328393,0.028323654,0.015325664,-0.0091801705,-0.0026594214,0.016772302,0.0040598325,-0.043225117,-0.039439928,0.020013642,-0.0042828107,-0.009239994,0.0011359645,-0.027714543,0.030564312,0.002488109,-0.009343325,-0.10337481,0.0030564312,-0.011366444,0.0021414054,-0.023429014,0.00011922189,-0.01865402,0.019350147,0.0026648599,0.054167356,0.02769279,-0.04968604,0.006363033,-0.033370573,-0.054645944,0.025321608,-0.049120437,-0.009528234,-0.021297125,0.027497005,-0.017055104,-0.06421769,-0.017707722,-0.042137418,0.01450989,-0.058648672,-0.015162509,-0.022667626,0.010583301,0.010376639,-0.0075595006,0.04529174,-0.041724093,-0.01742492,0.0037036114,0.021721328,0.01728352,0.044160537,0.012225725,-0.046248917,-0.0031244124,0.035241414,0.035480708,0.0043480727,-0.00082189176,0.0013310703,0.0018830771,-0.005030603,0.00036743795,0.026148258,-0.010088398,0.0064228564,0.010713825,0.01055067,-0.011257674,0.015554081,-0.041136738,-0.0013725389,-0.000088545414,-0.01609793,0.007097229,-0.020307321,-0.037395056,-0.00011327354,0.049468502,-0.004119656,0.05160039,-0.00003607248,0.01930664,-0.016739672,0.054602437,0.013694117,-0.026931401,-0.0012535718,-0.019437162,-0.011823277,-0.023668308,0.007363715,-0.020753277,0.0009041489,-0.02423391,0.0133243,-0.02189536,-0.018360341,0.0025751248,0.01368324,0.005694099,0.053340707,-0.021840975,-0.0042365836,-0.017076857,-0.0016410643,0.011442582,-0.0025588095,0.0012590104,0.03578526,0.020688014,0.0025560902,0.0002974174,-0.0143576125,-0.016576517,0.042028647,-0.048206773,0.016978964,-0.005288931,0.0043344763,0.020470476,-0.04220268,-0.050860755,-0.04598787,-0.017903509,-0.03828697,-0.014205335,0.030868867,0.060519513,0.009017016,0.029976955,0.013759379,-0.0064881183,0.0051991963,-0.052296516,-0.00012466038,-0.0038830817,0.0054711206,-0.06199878,-0.028345408,-0.003309321,0.039091863,-0.04181111,0.06817691,-0.058996737,-0.0069014435,0.008141419,0.007907564,-0.026213521,-0.009691388,0.020372583,-0.01087698,-0.0070156516,-0.0032005513,-0.008908246,-0.017087735,-0.04181111,0.03532843,0.017696846,-0.026365798,-0.011322935,0.014662168,0.024190402,-0.026887894,-0.042485483,0.051991962,0.026170012,-0.007760725,0.0029694154,-0.0048674485,-0.040462364,0.020350829,0.038091183,0.015401803,-0.079053886,0.023777077,-0.040766917,0.0048946408,0.030694837,0.028367162,0.009490165,0.039592206,0.015467064,0.026300536,-0.014912339,-0.011834154,-0.021503787,0.002145484,-0.02142765,0.002639027,-0.042159174,-0.013585348,0.009446656,-0.07561676,-0.013302546,0.032239366,0.00298845,0.011855908,0.028715225,-0.010518039,-0.006107424,0.0045030694,-0.032848477,-0.0030917814,-0.04165883,0.013759379,0.03961396,0.08283907,-0.018925944,0.014499013,-0.0035404568,0.0097892815,0.02643106,-0.025582656,-0.00432088,0.0069286358,0.0012080246,0.012040816,-0.0023276736,-0.01616319,0.010110152,0.008614568,-0.04664049,-0.0138572715,0.064043656,0.00008888532,0.0018531653,-0.024081632,0.0472496,0.0041713216,0.017337905,-0.00799458,0.016859317,-0.008587375,-0.021558173,0.016130561,0.019241376,0.017087735,0.009691388,-0.014814446,0.013530962,-0.036742438,0.0057267295,-0.004685259,0.057952546,-0.005851815,-0.034632303,-0.0018246133,-0.053775787,0.0030700273,-0.04598787,0.04252899,0.0068688127,0.030520804,0.06691518,0.01962207,0.09545637,0.001166556,-0.003586684,-0.006134616,0.0062433863,0.026191767,-0.010512601,-0.010344007,0.0059333923,0.024016371,0.03049905,0.022624116,-0.011475213,0.008348081,0.020872923,0.032761462,0.0075703776,0.015858635,0.0024486799,-0.041506555,0.052775104,0.020818539,-0.05325369,-0.015728112,0.014053057,0.029846432,-0.017098611,-0.010392954,-0.03561123,0.010322253,-0.016717918,0.010675755,0.013161145,-0.027649282,0.040244825,-0.024473203,0.008418782,-0.03913537,0.06661062,-0.0075323083,0.019393655,-0.016478624,0.007929318,-0.00993612,-0.024864774,-0.007608447,-0.030803606,-0.03345759,0.011899415,0.05721291,0.029389597,0.049816567,0.051252328,0.021036077,0.017522814,0.001710405,0.06787235,-0.033979684,0.02135151,0.026692107,0.034001436,0.03885257,-0.013748502,0.025517393,0.010795402,-0.044856664,-0.041528307,-0.0016138718,0.0034969489,0.034218978,-0.0004112858,-0.018556127,0.01461866,0.02791033,-0.00051801617,-0.0085601825,-0.013259038,-0.013694117,0.010218922,0.04929447,0.053210184,-0.015510573,0.034871597,-0.02423391,-0.021112217,-0.04603138,0.0006070714,0.00062134746,-0.04511771,0.02153642,-0.037895396,0.053427722,-0.013694117,0.00088103535,-0.009501042,0.0008545227,-0.0077552865,-0.005889884,-0.0078205485,0.004554735,0.018817175,-0.0010203966,0.020470476,-0.013139391,-0.078183725,-0.0025329767,0.014324982,0.03450178,-0.0045003504,-0.005533663,-0.039853252,0.020394336,0.03450178,-0.0181428,-0.005128496,-0.006520749,0.0011108115,0.003796066,0.01123592,-0.04590085,-0.04368195,0.024473203,-0.029846432,0.0049734986,-0.0013616618,-0.019589439,0.0036900153,-0.034480024,-0.021471158,-0.02181922,-0.02236307,-0.039004847,-0.02264587,-0.031303946,0.012649927,-0.02719245,0.052078977,-0.012040816,0.007048283,0.015651973,-0.009462972,0.0020326355,-0.014107442,0.00065703754,0.015325664,-0.01390078,-0.020220304,-0.0150863705,0.002023118,0.011605737,0.040962704,-0.0011169298,-0.042964067,-0.027997345,-0.06104161,-0.000013330673,-0.0060367235,-0.017218258,-0.044682633,-0.012552034,0.051295836,-0.017631583,-0.049860075,-0.00016111525,-0.017272644,-0.0010489487,-0.017446674,-0.003763435,0.004345353,0.030694837,-0.011496968,0.021253617,0.014683922,-0.004339915,-0.00968595,0.008005457,-0.08466641,0.02610475,0.014107442,-0.04194163,-0.023146212,-0.024364434,0.008837546,-0.011997309,-0.013737625,-0.0044459654,-0.024908284,0.008184927,0.009452095,-0.022841657,0.022091145,0.013498331,-0.022885164,0.012617297,0.009473849,0.03922239,0.01703335,-0.0016533008,-0.016935457,-0.007053721,-0.013704994,0.0035839647,-0.013715871,0.00021227106,0.014422875,-0.009783843,-0.0060149697,-0.063042976,0.018730158,0.030738344,0.02549564,0.0010537073,0.029433107,0.00015924577,-0.035241414,-0.013030621,-0.011616614,-0.012138709,-0.009239994,-0.0022338596,-0.000016591643,0.04318161,-0.02231956,0.013443947,0.008184927,0.011181535,-0.0031679203,0.0073147686,-0.0052943695,-0.048119757,-0.0018803579,-0.0040598325,0.027279465,-0.033066016,-0.020046273,0.0018871559,-0.022080269,-0.030847114,-0.02019855,0.008135981,0.014379367,0.015249525,0.0023752605,0.049599025,0.017707722,-0.018817175,-0.01112715,0.0050006914,-0.013172022,-0.0164895,0.025865458,0.026365798,-0.019502424,-0.007140737,-0.00914754,0.022993935,-0.02236307,0.014314105,0.0043127225,0.0021685977,-0.036198586,0.037329793,-0.003532299,-0.047684677,0.008587375,0.00021889921,-0.013052375,-0.0034615987,0.0006672347,0.018871559,0.017142119,0.022036761,-0.0222543,-0.0133678075,0.001465673,0.01804491,0.0016179507,-0.010208045,0.028040852,0.046248917,0.0045357,-0.008397028,-0.012845713,0.022025883,-0.015836881,-0.0004972819,0.018925944,-0.01930664,0.02506056,0.013335177,-0.0042664954,-0.020426968,-0.0075323083,0.002822576,0.009925243,-0.015923899,-0.0067600426,0.028584702,-0.021558173,0.02812787,0.008255627,-0.00839159,-0.030259756,-0.007929318,-0.023124458,-0.011110835,0.010594178,-0.01948067,-0.037569087,0.0030346774,0.052253008,0.022972181,0.015445311,-0.010931364,0.002747797,0.00016816829,0.0074344156,-0.021046955,0.053340707,-0.00048844435,0.00069612666,-0.020405214,-0.040288333,-0.03236989,0.014531644,-0.014248843,0.010251553,-0.01692458,0.018849805,-0.03885257,-0.030955883,0.034588795,-0.030760098,0.015651973,-0.046466455,-0.017272644,0.045596298,-0.017903509,-0.029607138,-0.03236989,0.033827405,-0.017849123,-0.014194458,0.024777759,-0.018675774,0.017544568,-0.022384824,0.0034044946,0.06225983,-0.028475933,0.0020217586,-0.042180926,0.0033827405,-0.05560312,0.004478596,0.008522114,-0.03171727,0.044160537,-0.008581936,0.0056125214,-0.0055581364,-0.007673709,0.0123780025,-0.013922534,0.019339269,-0.002887838,0.006934074,0.030085726,-0.0021128533,-0.033218294,0.048032742,-0.01725089,0.042006895,-0.002564248,-0.02027469,0.009359641,0.02268938,-0.008826668,0.035197906,-0.012345372,-0.029846432,-0.0049544643,0.020731524,0.048119757,0.03452353,0.022602363,0.065044336,0.025800195,0.0051692845,0.012987114,0.0061128624,-0.0066784653,-0.04072341,0.000100697034,0.0072875763,-0.031499732,0.026974909,0.053384215,0.021090463,0.002747797,-0.043116346,0.004307284,-0.03687296,-0.027671035,-0.004149568,0.017055104,0.010061206,0.011573106,-0.0037552773,-0.008201242,-0.018229818,-0.024886528,0.036503144,-0.037895396,0.035350185,0.015815128,-0.024494957,0.027736297,-0.0033800213,-0.021699574,-0.0066675884,0.00014063595,-0.02214553,-0.03450178,-0.014760061,-0.013356931,0.026844386,0.019284885,0.013770256,0.019382777,-0.0037117691,0.008951754,0.01368324,0.0208838,0.00092454324,-0.013868148,0.016402485,0.0489029,0.018741036,0.03785189,0.019067345,-0.009343325,0.064000145,-0.017936138,0.0051448112,-0.015760744,-0.005397701,0.009870859,0.03752558,-0.00968595,-0.019578563,-0.014368489,-0.020035395,-0.010338569,-0.021340633,0.03247866,0.01494497,-0.0070265285,0.043899488,0.009680511,-0.029128551,-0.009647881,-0.011921169,0.02095994,-0.015347418,0.0007824627,-0.031195177,-0.0009816474,-0.0096641965,-0.0005377307,0.020785907,-0.02019855,-0.029868186,0.0025982384,0.017185627,0.0032794094,-0.038504507,0.029280828,-0.025343362,0.0010870182,0.026300536,-0.010485408,-0.01846911,0.027018417,-0.001437121,0.017065981,0.031129915,0.013530962,-0.053819295,0.01868665,-0.0066240802,-0.025147576,-0.03819995,0.0018409288,-0.053036153,0.0061291778,-0.0018382096,0.00020972177,0.0122583555,0.020361705,0.005498313,0.045422267,-0.013476578,-0.010588739,-0.012225725,0.013128514,0.035567723,0.0056614676,0.009811035,-0.0021862728,0.0046471893,-0.019295761,-0.009593496,-0.026496321,-0.021220988,0.02988994,-0.022036761,-0.008842984,0.002013601,-0.035023876,0.012029939,0.047293108,-0.017990524,0.0069775824,-0.019915748,0.053384215,-0.014542522,0.03819995,-0.017936138,-0.002855207,-0.015673727,0.019709086,0.029302582,0.05247055,0.034697562,0.038548015,0.0057811146,-0.03880906,0.015532327,-0.006830743,-0.002343989,0.036394373,-0.0038341351,-0.06782884,0.011529598,-0.02373357,0.0025873615,-0.04529174,-0.05703888,0.022885164,-0.035676494,0.03735155,0.028040852,0.022265177,-0.011529598,-0.015325664,-0.028867504,-0.018305955,-0.011399074,-0.016326346,0.021830097,0.0022515347,0.032413397,0.02884575,-0.04231145,-0.044160537,0.028149623,-0.022754641,0.0068253046,0.020296443,0.013454824,0.010180852,-0.052296516,0.027409988,-0.022798149,-0.026757369,-0.019078221,-0.055124532,0.0021182918,0.008609129,0.00795651,0.016837563,-0.02758402,0.01940453,-0.023690062,-0.056081705,0.031608503,-0.020829415,-0.008168612,-0.009207363,-0.0025955192,-0.024059879,0.011747138,0.04363844,0.02841067,0.0472496,-0.023559537,-0.007641078,-0.003641069,-0.033022508,0.024712497,0.007809671,-0.010376639,0.017414045,-0.052775104,0.016174069,0.010447339,-0.0025805633,-0.038830817,0.04115849,-0.03702524,0.0016981685,-0.01735966,-0.029846432,-0.011986432,-0.023254981,0.00092590286,0.0070591597,-0.036851205,0.03637262,-0.0033718636,-0.0036274726,-0.037895396,-0.024995299,0.0007797435,-0.024473203,0.04259425,-0.0064119794,0.012987114,0.010545231,0.012704312,0.04400826,0.028867504,0.0020081624,-0.010447339,0.024647236,-0.014390244,-0.005343316,0.015390926,0.012149586,-0.013802887,0.03752558,0.015021109,-0.013520085,0.016500378,-0.011355567,-0.004704294,-0.019981012,-0.009125786,0.002459557,0.0064881183,-0.012552034,0.01854525,0.0011760734,0.011834154,-0.058866214,0.016076175,0.0103712,0.0043371953,0.021362387,0.01890419,-0.0177186,-0.0035567724,-0.013063252,-0.012040816,-0.014433752,0.0016981685,0.0015975564,-0.0065805726,-0.009392272,-0.034284238,0.0049544643,-0.050469186,-0.0032930055,-0.019067345,-0.029259074,0.028323654,0.012834836,-0.001105373,-0.022493593,-0.0024731532,0.01728352,0.028780488,0.015826005,-0.0091747325,0.010344007,0.014499013,0.003899397,-0.015173386,-0.04429106,-0.01159486,-0.029302582,0.008048965,0.026017735,0.018175432,0.0065261875,0.01930664,-0.010169975,0.004331757,-0.009017016,-0.0046363124,0.014683922,0.015619342,-0.0073528383,0.030760098,-0.0024541186,-0.024255663,-0.0023344718,0.0013915736,-0.024777759,0.013552716,0.0013412675,-0.0106594395,-0.0063249636,0.020818539,-0.012736943,0.043486163,0.0005384105,-0.039374664,0.01930664,-0.00014242045,-0.010267869,-0.0038259774,0.0041359714,0.0028715227,0.029433107,0.02340726,-0.018523496,-0.016304592,-0.02340726,-0.010398393,-0.007798794,0.0073909075,-0.014760061,-0.032021828,-0.044595614,-0.041637078,0.0019904873,-0.00961525,-0.0034833527,-0.03471932,-0.005955146,0.0039592204,0.014085689,0.011845031,0.03263094,-0.03659016,0.0054248935,0.0020693454,0.008538429,0.066697635,0.0078259865,-0.008723337,0.020720646,-0.017479306,0.04868536,-0.04274653,-0.01739229,0.011877662,-0.00921824,-0.008870177,0.012345372,0.009946997,-0.00828282,-0.018501742,-0.01242151,0.0039483435,0.04590085,0.03219586,-0.012247479,-0.002732841,0.005522786,-0.010643125,-0.004581928,0.019176114,0.035067383,-0.00003777201,0.028562948,0.008108788,-0.026061242,0.00478859,-0.023059197,-0.03280497,-0.0034833527,0.0058246227,-0.02610475,0.008494921,0.00058531744,0.004108779,0.009588057,-0.06356507,0.035698246,0.005628837,-0.003777031,0.009321571,-0.022123776,-0.014444629,0.023559537,-0.006042162,0.011583983,-0.03863503,-0.024320927,0.00950648,-0.015423557,-0.015227771,-0.024168648,-0.010436461,-0.036720682,0.009397711,0.02189536,-0.034741074,-0.03341408,-0.014216212,0.037503824,-0.013095884,-0.044987187,-0.031108161,-0.039483435,-0.013563593,-0.02725771,0.0042175488,-0.007902126,-0.008783161,0.00018286922,0.017696846,0.033000756,-0.03582877,0.008288259,-0.013346054,0.026518077,0.031412717,0.03169552,0.029106798,-0.0046172775,-0.026583338,-0.04659698,-0.024799513,0.018371219,-0.028040852,0.007608447,0.011747138,0.0414848,-0.017729476,0.006885128,-0.008875615,-0.01415095,0.028562948,-0.00324134,-0.015510573,-0.020285567,0.027845068,0.019785225,0.010545231,0.018403849,-0.034436516,0.030303264,-0.0370905,0.05120882,0.014248843,-0.0005676424,0.0038015044,-0.03741681,0.0017511937,-0.036829453,-0.05160039,0.037177514,0.018164556,-0.00011454819,-0.02024206,-0.0035921223,0.038091183,-0.0079510715,-0.014237966,-0.0037117691,0.019361023,0.01552145,-0.016174069,0.01242151,-0.0024174086,0.0070047746,0.02791033,0.018947698,-0.018773666,-0.012160463,0.0073909075,0.011170658,-0.012649927,0.029737663,0.02791033,0.022232546,-0.05499401,-0.0134874545,-0.013846395,0.023102704,-0.029998709,0.044530354,0.0011509204,-0.00091230666,0.047728185,0.0041468483,0.023037443,-0.033174787,-0.019328393,-0.005645152,-0.021079587,-0.021721328,-0.0425725,0.009985067,0.012519403,0.03452353,-0.00846229,0.01821894,0.025430378,-0.009278064,0.0024119702,0.013998672,-0.004619997,0.0143576125,-0.0010734219,-0.015738988,0.023603044,-0.00061556906,-0.002963977,-0.0024119702,0.010463654,-0.026692107,-0.005721291,0.030172741,-0.0015717235,0.066219054,-0.030238003,0.009718581,-0.012334495,0.03330531,0.013259038,-0.00021074148,-0.023494275,-0.008832107,-0.03182604,0.02560441,0.0046145585,0.025082314,0.060954593,-0.0048157824,0.01090961,0.0031570434,0.0016165911,0.0065370644,-0.04087569,0.04868536,0.023320245,-0.022384824,-0.050512694,0.015488818,0.0013603022,-0.011040134,0.040788673,-0.00986542,0.011366444,-0.01274782,0.078879856,-0.0029666962,-0.023559537,0.01461866,-0.0019904873,-0.016652655,0.05120882,0.04537876,0.018828051,0.023690062,-0.0326962,-0.00561796,-0.011301181,0.022167284,-0.011638368,-0.025038807,0.0006074113,-0.010719263,-0.03924414,-0.026692107,0.052427042,-0.017762108,-0.010229799,0.024821267,0.01343307,-0.024712497,0.015347418,0.023864092,0.026931401,-0.017207382,-0.046248917,0.0015418119,-0.022199916,0.021155724,0.002789945,-0.005462963,-0.009044209,-0.004677101,-0.02769279,0.0032141474,-0.0021060552,0.0034806335,-0.01843648,-0.013389561,0.019491548,-0.0059225154,-0.017490182,-0.011855908,0.015249525,0.024255663,-0.009294379,0.040201318,-0.03856977,-0.028280146,-0.011067326,-0.031499732,-0.029150305,-0.01584776,-0.019719964,0.024603728,0.00017420162,0.016445993,-0.035306673,-0.021405896,-0.018066663,-0.030847114,-0.02791033,0.011649245,-0.01645687,0.009767528,0.049468502,-0.0017702284,-0.018621389,-0.0136071015,-0.024081632,0.0005115579,0.021036077,0.031129915,0.0073473994,0.02318972,0.04716258,-0.0029231883,0.046945043,0.00032206057,-0.0097947195,-0.007086352,-0.0042501795,0.013008867,-0.007934757,0.022428332,-0.025539147,0.012813082,0.023472521,-0.060301974,0.030455543,-0.022754641,0.0076573933,0.039004847,-0.016108807,-0.013074129,-0.034632303,0.017979646,0.018251572,-0.010338569,0.011736261,0.061389674,0.03049905,-0.047945727,-0.030694837,0.027627528,-0.0070917904,0.0003830736,0.01541268,0.016184945,-0.009375956,-0.0071244217,-0.011099958,-0.019981012,-0.008924562,-0.006286894,0.038069427,0.026496321,0.008804915,-0.004674382,-0.0059605846,0.03835223,0.03824346,0.020579245,0.021743082,0.0032440592,0.017990524,0.031673763,-0.002405172,0.022058515,-0.009207363,0.021362387,-0.018034032,-0.0020326355,0.0034969489,0.034654055,-0.011279427,0.019893995,0.034632303,-0.006906882,-0.0009503761,0.017457552,0.01994838,-0.0036057187,0.00011803222,-0.0067600426,-0.031564996,0.025038807,0.037830133,0.041680586,0.017065981,0.011377321,-0.034305993,-0.0018314114,-0.00061216997,-0.054863483,0.048641853,0.0108987335,0.044073522,0.03374039,-0.002671658,0.012443264,-0.0025017052,-0.010256992,-0.0144772595,-0.0009646521,0.016576517,-0.022754641,0.0068796896,-0.037068747,-0.012867467,-0.009892613,0.00040278814,0.008772284,-0.007831425]},{"id":"palindrome-partitioning","name":"Palindrome Partitioning","description":"Given a string `s`, split `s` into substrings where every substring is a palindrome. Return all possible lists of palindromic substrings.\n\nYou may return the solution in **any order**.\n\n**Example 1:**\n\n```java\nInput: s = \"aab\"\n\nOutput: [[\"a\",\"a\",\"b\"],[\"aa\",\"b\"]]\n```\n\n**Example 2:**\n\n```java\nInput: s = \"a\"\n\nOutput: [[\"a\"]]\n```\n\n**Constraints:**\n* `1 <= s.length <= 20`\n* `s` contains only lowercase English letters.\n","difficulty":"Medium","concepts":["Tree Maze"],"solutions":{"python":"class Solution:\n    \n    def partition(self, s: str) -> List[List[str]]:\n        res, part = [], []\n\n        def dfs(i):\n            if i >= len(s):\n                res.append(part.copy())\n                return\n            for j in range(i, len(s)):\n                if self.isPali(s, i, j):\n                    part.append(s[i : j + 1])\n                    dfs(j + 1)\n                    part.pop()\n\n        dfs(0)\n        return res\n\n    def isPali(self, s, l, r):\n        while l < r:\n            if s[l] != s[r]:\n                return False\n            l, r = l + 1, r - 1\n        return True\n","javascript":"class Solution {\n    /**\n     * @param {string} s\n     * @return {string[][]}\n     */\n    partition(s) {\n        const res = [];\n        const part = [];\n        this.dfs(0, s, part, res);\n        return res;\n    }\n\n    /**\n     * @param {number} i\n     * @param {string} s\n     * @param {string[]} part\n     * @param {string[][]} res\n     * @return {void}\n     */\n    dfs(i, s, part, res) {\n        if (i >= s.length) {\n            res.push([...part]);\n            return;\n        }\n        for (let j = i; j < s.length; j++) {\n            if (this.isPali(s, i, j)) {\n                part.push(s.substring(i, j + 1));\n                this.dfs(j + 1, s, part, res);\n                part.pop();\n            }\n        }\n    }\n\n    /**\n     * @param {string} s\n     * @param {number} l\n     * @param {number} r\n     * @return {boolean}\n     */\n    isPali(s, l, r) {\n        while (l < r) {\n            if (s[l] !== s[r]) {\n                return false;\n            }\n            l++;\n            r--;\n        }\n        return true;\n    }\n}\n","cpp":"class Solution {\npublic:\n    vector<vector<string>> partition(string s) {\n        vector<vector<string>> res;\n        vector<string> part;\n        dfs(0, s, part, res);\n        return res;\n    }\n\nprivate:\n    void dfs(int i, const string& s, vector<string>& part, vector<vector<string>>& res) {\n        if (i >= s.length()) {\n            res.push_back(part);\n            return;\n        }\n        for (int j = i; j < s.length(); j++) {\n            if (isPali(s, i, j)) {\n                part.push_back(s.substr(i, j - i + 1));\n                dfs(j + 1, s, part, res);\n                part.pop_back();\n            }\n        }\n    }\n\n    bool isPali(const string& s, int l, int r) {\n        while (l < r) {\n            if (s[l] != s[r]) {\n                return false;\n            }\n            l++;\n            r--;\n        }\n        return true;\n    }\n};\n","java":"class Solution {\n    \n    public List<List<String>> partition(String s) {\n        List<List<String>> res = new ArrayList<>();\n        List<String> part = new ArrayList<>();\n        dfs(0, s, part, res);\n        return res;\n    }\n\n    private void dfs(int i, String s, List<String> part, List<List<String>> res) {\n        if (i >= s.length()) {\n            res.add(new ArrayList<>(part));\n            return;\n        }\n        for (int j = i; j < s.length(); j++) {\n            if (isPali(s, i, j)) {\n                part.add(s.substring(i, j + 1));\n                dfs(j + 1, s, part, res);\n                part.remove(part.size() - 1);\n            }\n        }\n    }\n\n    private boolean isPali(String s, int l, int r) {\n        while (l < r) {\n            if (s.charAt(l) != s.charAt(r)) {\n                return false;\n            }\n            l++;\n            r--;\n        }\n        return true;\n    }\n}\n","csharp":"public class Solution {\n    \n    public List<List<string>> Partition(string s) {\n        List<List<string>> res = new List<List<string>>();\n        List<string> part = new List<string>();\n        Dfs(0, s, part, res);\n        return res;\n    }\n\n    private void Dfs(int i, string s, List<string> part, List<List<string>> res) {\n        if (i >= s.Length) {\n            res.Add(new List<string>(part));\n            return;\n        }\n        for (int j = i; j < s.Length; j++) {\n            if (IsPali(s, i, j)) {\n                part.Add(s.Substring(i, j - i + 1));\n                Dfs(j + 1, s, part, res);\n                part.RemoveAt(part.Count - 1);\n            }\n        }\n    }\n\n    private bool IsPali(string s, int l, int r) {\n        while (l < r) {\n            if (s[l] != s[r]) {\n                return false;\n            }\n            l++;\n            r--;\n        }\n        return true;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def partition(self, s: str) -> List[List[str]]:\n        ","javascript":"class Solution {\n    /**\n     * @param {string} s\n     * @return {string[][]}\n     */\n    partition(s) {}\n}\n","cpp":"class Solution {\npublic:\n    vector<vector<string>> partition(string s) {\n        \n    }\n};\n","java":"class Solution {\n    public List<List<String>> partition(String s) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public List<List<string>> Partition(string s) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/3jvWodd7ht0","embedding":[0.016887343,-0.03487214,0.045465924,-0.037313413,0.0032531652,-0.0152187655,-0.01714491,0.029004123,0.0015061987,0.040225025,0.0022131042,-0.053304873,0.016484197,0.021344347,0.011736032,-0.002147313,0.01503959,0.0021347147,-0.001017664,0.08134593,0.04622742,-0.00018722497,0.0013655175,-0.031691764,0.038097307,-0.0059520043,0.024681501,0.040964123,-0.015173972,0.00927796,0.017760826,-0.002880815,0.005067323,-0.012699103,0.0051149162,0.080181286,-0.0030711894,0.012015994,-0.051781878,-0.018757492,-0.017559253,-0.016685769,-0.05048285,-0.019339815,0.011120114,0.010744964,0.016170638,0.022486594,-0.024972662,0.015745096,-0.016741762,0.021949066,0.04734727,-0.022128243,-0.052632965,-0.028914535,-0.03330435,0.057649896,0.026070116,0.015028391,0.03155738,-0.026002925,0.02349446,0.0041182498,-0.005498465,0.020000527,-0.01988854,0.014110114,-0.011204102,-0.01638341,-0.043674164,0.008040525,-0.009977866,-0.030168768,-0.0028780154,0.0053752814,0.0074190083,0.001331922,0.064234614,0.002476269,0.0024552718,-0.02752592,0.057470717,0.011360882,0.0006628114,0.044010118,-0.04450285,0.047033712,-0.079957314,-0.06298038,-0.005232501,-0.020112513,-0.026092513,-0.0054872665,0.038298883,-0.04345019,0.017301688,0.013214233,-0.034625772,0.026383674,-0.011691237,-0.0025294619,0.016573785,0.0021487128,0.013471799,-0.0044178097,0.051378734,0.0025336614,-0.033909068,-0.0143340845,-0.011142511,-0.0012514327,0.048825473,0.01660738,0.026965996,0.0546039,-0.021310752,-0.012441537,0.022766557,-0.015431537,-0.010632979,-0.0351633,0.021870676,-0.020616444,-0.07064016,0.00755899,-0.0028668167,-0.07395492,0.036843076,-0.012015994,0.01152326,-0.019821351,0.0284218,-0.02378562,0.0055012647,-0.0033315546,-0.029586446,0.016372211,-0.012430338,0.03769416,-0.013001462,0.008107716,-0.018723898,-0.009826686,0.021086782,-0.02678682,-0.023024123,0.012363148,-0.041344874,0.00039019785,0.025980527,-0.046048246,0.03679828,0.05057244,-0.012172773,-0.015554721,0.0217027,-0.015644308,0.03081828,0.04047139,-0.05191626,-0.0172009,0.00066701084,-0.0063495515,0.026652437,-0.028399404,0.02678682,0.012564721,-0.024726296,-0.07919581,-0.0013557188,-0.08922967,-0.027167568,-0.006551124,0.017973598,-0.008740432,-0.028041052,-0.032430865,-0.026450865,-0.0026736427,-0.013471799,0.03155738,-0.052274615,-0.0217027,0.04369656,0.014423672,0.0069598695,0.011349683,-0.044771615,0.03001199,0.032184497,0.053080905,0.018589515,0.025196632,-0.027660303,-0.006674308,0.04757124,0.007228634,-0.017548054,0.01638341,-0.0366639,-0.005260497,-0.041053712,0.029160902,0.017156107,-0.040381804,-0.039889067,0.0023138907,0.03509611,-0.056754015,0.0046949727,0.0051597105,0.021881875,-0.015913073,0.06365229,-0.010420207,0.022609778,-0.01766004,0.035521653,0.023225695,-0.019518992,0.01339341,0.0061703753,0.05872495,0.030952662,0.024412736,0.033080377,-0.032587644,0.015868278,0.0107841585,-0.0005168809,0.008964402,0.011556855,0.0059856,0.009658709,-0.04091933,-0.06620555,-0.009087585,-0.04504038,-0.019418204,0.00246927,0.019944534,0.016047455,-0.0031299817,0.045689892,-0.027884273,0.012396743,0.05491746,-0.028309816,0.019619778,0.008639645,-0.022341013,-0.05724675,-0.038097307,-0.050885998,0.052498583,-0.005327688,-0.043674164,0.018511126,0.0031775753,-0.064772144,0.0261821,-0.03717903,-0.053484052,-0.0028472194,-0.058097836,-0.0024664702,0.045801878,0.0021641108,-0.029160902,-0.02266577,-0.02925049,-0.007127847,-0.060785476,0.016708167,-0.010688972,0.015252361,0.015061987,-0.0053920792,-0.024905471,-0.03135581,-0.025398206,0.032274086,-0.0014824019,0.008135713,0.0013522193,0.04434607,-0.013382211,-0.032296482,-0.019787755,-0.007144645,0.0033987458,0.0057336334,0.041949593,-0.0087348325,0.015129178,-0.0030235958,0.011545657,0.033169966,-0.014457268,0.023068916,-0.03388667,0.023225695,0.042330343,-0.011993597,-0.046585772,-0.01884708,-0.028108243,-0.03791813,0.008488465,-0.022352213,0.015061987,-0.011937604,0.009070788,-0.012038391,-0.066563904,-0.009602716,-0.03164697,0.051692292,-0.0047677625,0.0064783343,0.0010141644,0.026338879,0.035275284,-0.004151845,0.040516183,-0.011360882,-0.02140034,0.0068030907,0.00030183466,-0.026518056,-0.01107532,-0.033550717,0.018690301,-0.057112366,0.008846818,0.034177832,0.038478058,0.013158241,0.02371843,-0.0040454594,0.005708437,0.025778955,0.032587644,-0.055007048,0.039261952,0.005207304,0.01585708,-0.008046124,-0.022318617,-0.009014795,0.003919476,-0.019283822,-0.03299079,-0.01443487,-0.019653372,-0.019317418,-0.026002925,-0.044278882,-0.020851612,0.027637906,0.019619778,0.005467669,-0.015577118,-0.03090787,0.05948645,-0.025868542,-0.020325283,0.004101452,0.026450865,0.012587118,-0.011164907,0.024591913,-0.012329552,-0.013102248,0.021512324,-0.06450338,0.027861876,-0.051423527,0.019720564,-0.022083448,0.036260754,-0.028556183,0.008964402,-0.0038858806,0.05715716,0.011993597,0.030571913,0.020000527,-0.06342832,0.016909739,-0.00710545,0.053125698,0.016741762,0.030728692,-0.008230899,0.049273413,0.023606444,-0.039911464,0.045913864,0.014826818,-0.0034295416,0.0149612,-0.014972399,-0.03487214,0.03794053,-0.015991462,0.053663228,0.0050309277,0.002259298,0.007441405,-0.01032502,0.0321621,-0.017895209,0.052185025,-0.0013130245,-0.020571651,0.0024958665,0.03769416,-0.0077325664,0.04450285,-0.05200585,-0.0020255293,0.010000263,0.04197199,0.047481652,0.012990263,-0.018679103,-0.010420207,0.00014829267,0.039441127,0.013964534,0.047929592,0.0042218356,-0.027817082,0.054738283,0.011237698,0.07861349,-0.02147873,-0.033192363,0.0040818546,-0.04495079,-0.017492061,0.028556183,-0.0028332213,-0.03608158,0.08094278,0.028847344,0.03876922,0.003127182,0.054290343,-0.011136912,0.013303822,0.013359814,-0.00010043658,-0.029944798,-0.03679828,-0.0068198885,0.0142780915,-0.0154427355,-0.01286708,0.041949593,-0.032229293,0.014703635,0.050975587,-0.007950937,-0.0068030907,-0.037403002,0.008062922,0.011136912,0.01750326,-0.007077454,0.0015747895,0.037291016,-0.022173036,0.0031775753,-0.00830929,0.017928803,-0.020941202,-0.0553654,0.001234635,-0.026607644,-0.00994427,-0.003561124,0.04539873,-0.0024804685,0.016237829,-0.0069374726,0.0019807352,-0.016069852,-0.026831614,-0.012564721,-0.0046809744,-0.00905399,-0.006758297,-0.023472063,-0.006965469,-0.013035058,-0.01286708,0.010812155,0.007917342,0.0048041577,-0.006758297,-0.02573416,0.032677233,-0.013583784,-0.033013187,-0.03350592,0.016461799,0.029944798,-0.03240847,0.005618849,0.03155738,-0.01900386,0.01615944,-0.01652899,-0.029071314,-0.0336627,-0.018511126,0.00009238765,0.0045913863,-0.027324349,-0.016909739,-0.03375229,0.018824684,-0.010157042,-0.023628842,0.00072300335,-0.04842233,-0.01736888,-0.009737099,-0.018511126,-0.009860282,0.02723476,-0.010235432,0.01863431,0.028399404,-0.008992398,-0.00038319879,-0.007430207,0.038500454,-0.007794158,-0.014927605,0.010520994,-0.0179512,-0.009703503,0.0224418,0.019922137,-0.0071726413,-0.0015061987,0.026607644,0.0069990647,0.026764423,-0.012777492,-0.02356165,-0.013203035,0.004347819,0.008617248,-0.0012164374,0.03014637,-0.024860676,0.00994427,0.05334967,-0.010532192,-0.007228634,-0.0029508055,0.0014376078,-0.016932137,0.0006943072,0.019407006,0.012990263,-0.0030571914,-0.0045381933,-0.049094237,0.046764947,-0.0456451,-0.022755358,-0.038366072,0.0068366863,-0.011316087,0.0071950383,0.01384135,-0.017268091,-0.016103448,-0.00950193,-0.030952662,-0.018085582,-0.020706031,-0.028108243,-0.015588316,-0.007586986,0.015879478,0.057918657,0.012676706,0.00028118741,-0.042576708,0.005484467,-0.011232099,-0.00071040506,-0.009619514,0.0062711616,0.0068422854,0.033998657,0.012755095,-0.018343149,-0.0359248,0.0074917986,0.05155791,-0.0025420603,0.02730195,0.032968394,-0.002088521,-0.0005133814,-0.017671239,0.03652952,-0.018723898,-0.018477531,0.012911874,0.016954534,-0.024233561,0.040583376,0.011780825,0.0045745885,0.033931464,0.004249832,0.016103448,-0.011803222,0.01742487,-0.021187568,0.03529768,-0.010711368,0.023852812,0.05048285,0.010873746,-0.019015059,0.010162641,0.038276482,0.027570715,0.033729892,0.013639777,0.04121049,-0.000041163246,0.014345283,-0.06374188,-0.00041924397,0.006416742,0.003373549,0.042599104,0.01615944,-0.026383674,0.032206897,0.017760826,0.051065173,0.01826476,0.0033791484,0.033998657,0.0052940925,-0.0396651,-0.003104785,-0.020067718,0.0009490731,-0.0034435398,0.04810877,-0.014580451,0.032184497,-0.030840678,0.0025840546,-0.005140113,0.051513113,-0.011601649,0.026316483,0.019138241,0.06298038,-0.03876922,-0.0069094766,0.0071838396,0.027615508,-0.03321476,-0.047840007,0.016282624,0.0074806,0.01966457,0.0023432868,0.02813064,-0.01772723,-0.01810798,-0.031781353,-0.031758957,-0.03276682,-0.046272215,-0.0018267558,-0.029519254,-0.018835882,-0.033707496,0.06575761,0.0012038391,0.025353411,0.025331015,0.009714701,-0.05818742,0.002056325,-0.004818156,0.003082388,0.020683635,-0.03717903,-0.00012852032,0.016629778,0.024726296,-0.01563311,-0.019966932,0.0022411004,0.014479664,-0.0023222896,0.033729892,-0.017301688,0.017604047,0.03037034,0.00081819063,0.019462999,-0.012777492,-0.006052791,-0.009076387,-0.003493933,0.0040790546,-0.0118368175,0.0072230347,0.01809678,-0.00069920655,0.02956405,-0.009977866,0.014121313,0.013729365,-0.004241433,-0.00023674336,0.016372211,-0.05379761,-0.009709102,0.03037034,-0.021333149,-0.0025336614,-0.013796556,0.028600978,0.0070718545,0.018455133,0.0061311806,-0.009669907,-0.032587644,0.031154236,-0.06029274,0.057784278,-0.016932137,0.0056356466,0.028668169,-0.01465884,-0.00045073975,0.026361277,-0.007077454,0.01692094,-0.027548319,-0.031691764,0.010269027,0.0010330619,0.017828017,-0.022833748,0.03334914,0.019496594,-0.036686298,-0.0030571914,0.015465133,-0.012553522,-0.011052922,-0.0033567513,0.03334914,-0.0027926266,0.025666969,-0.0066687088,-0.004129448,0.00868444,-0.0006113683,0.013494196,-0.008337285,0.011960002,-0.008779626,-0.020840414,-0.025487794,0.02573416,-0.0051821074,-0.02176989,0.03928435,-0.051513113,-0.027817082,0.00935635,-0.0336851,-0.006203971,-0.0017595649,-0.03912757,-0.0031019854,-0.051871467,0.00023394373,-0.010812155,0.03023596,0.0172009,0.0054816674,0.02221783,0.004249832,-0.013147043,-0.0017329684,0.0025784553,-0.020627642,-0.002745033,0.011713634,0.034021053,-0.001773563,0.02416637,0.030773487,-0.017671239,-0.09093185,0.03023596,0.030773487,0.024905471,-0.014322885,-0.001166744,0.010862548,-0.011848017,-0.03404345,-0.02221783,0.051289145,0.005565656,-0.0006491632,0.009473934,-0.01863431,-0.013180639,0.003337154,0.011288092,0.058904126,0.065847196,0.020067718,-0.01189281,-0.005190506,0.023740826,-0.020762024,0.039709892,-0.018970264,-0.04226315,0.0002530162,0.008880413,0.018813485,-0.055320606,0.014703635,-0.05818742,0.012251163,0.05146832,0.0131694395,0.025263824,-0.038590044,0.030258356,0.02864577,0.013818953,-0.02274416,-0.00025826547,0.03554405,0.008258896,-0.0029564048,-0.01938461,-0.042083975,0.0069542704,-0.00064601365,-0.0009749697,-0.037649367,-0.0018113579,0.027436333,0.007827754,0.02797386,-0.035499256,0.020672437,-0.025778955,0.008382079,-0.0070438585,0.026943598,0.006416742,0.022553785,-0.010000263,-0.030056782,0.046361804,0.0014950002,-0.04280068,0.04766083,0.0032279685,0.03771656,0.0011555456,0.013594983,-0.04197199,0.026114909,-0.0034099442,0.009591518,0.01772723,0.013975732,-0.0284218,0.047750417,-0.018914271,-0.011568054,0.0011527459,-0.026943598,0.027436333,-0.0031019854,0.0011310488,-0.0366415,-0.006629514,0.0060415925,0.0005858217,-0.0055460585,-0.029160902,-0.011657642,0.0576051,0.026338879,-0.010873746,-0.030728692,-0.023964796,0.028959328,0.017604047,0.028108243,-0.013606181,0.0018841481,-0.03679828,0.045129966,-0.006987866,0.0061759744,0.018701501,0.0306839,0.026921201,0.041837607,0.036507122,0.019194234,-0.0085668545,-0.012385544,-0.004554991,-0.018085582,-0.0031747757,0.011187305,0.0037486989,0.01692094,-0.015207567,-0.00994987,-0.0067079035,-0.03278922,-0.034625772,0.018578317,-0.04878068,0.05957604,0.002528062,-0.0007747964,-0.022497794,-0.00021049686,0.004205038,-0.020762024,0.007055057,-0.035208095,0.018723898,0.022161838,0.00031303315,-0.0008958803,0.007015862,0.05191626,0.01010105,0.0050589237,0.007883746,-0.0013851149,-0.041636035,0.0055124634,-0.04300225,0.016439402,0.0035107308,-0.030325547,0.051513113,-0.0024482727,-0.017940002,0.017480863,0.042778283,-0.009020395,-0.020840414,0.01062738,-0.027794685,-0.009664308,-0.010845751,-0.027705098,0.0034967326,0.0105097955,0.03424502,0.016361013,0.013818953,0.019686969,0.019261425,0.01781682,0.03155738,-0.0154987285,-0.021803485,-0.0072454317,-0.0047537647,0.05626128,0.019720564,-0.0034463394,-0.060113564,0.052498583,0.035723224,-0.0448836,-0.040986523,-0.015476331,-0.0006197672,-0.0034155436,0.046272215,-0.062218882,0.009020395,-0.024121575,0.008544458,0.053080905,0.055723753,-0.016025059,0.02701079,-0.027100377,-0.02864577,0.0012934271,-0.01219517,-0.029138505,0.014322885,-0.010935338,-0.0042330343,-0.016652174,0.018275958,-0.022609778,0.019989328,-0.03180375,-0.038366072,-0.0321621,0.0052353004,0.023651239,0.03576802,0.03155738,0.024211165,-0.02723476,0.024278356,0.0041798414,0.019104647,0.013774159,-0.021523522,-0.019698167,-0.007659776,0.0071670422,0.009014795,-0.0060415925,0.0065287272,0.007570188,0.026271688,-0.028265022,-0.02184828,0.014244496,0.032027718,0.047616035,-0.0014103114,-0.009445937,0.033281952,-0.022117043,-0.002147313,0.017772024,0.008970001,0.035880003,0.015689103,0.01264311,-0.019317418,-0.04031461,0.021803485,-0.019115845,-0.0027198365,-0.042218357,0.0055292607,-0.01989974,0.0022131042,-0.03876922,0.002528062,-0.007771761,-0.054111168,0.030571913,-0.02125476,-0.019250227,0.0055628563,-0.0118368175,0.008768428,-0.023091314,-0.013259028,-0.05549978,0.00025826547,0.011702436,0.026114909,-0.012687904,0.003989467,-0.00935635,-0.026249291,0.0035779218,-0.020314084,-0.022329815,-0.0020073317,0.0035415266,0.012206368,0.015913073,-0.020661239,0.003838287,-0.037156634,-0.042039182,0.034827344,-0.01661858,-0.013292624,0.03395386,0.004773362,-0.009311555,0.008247698,-0.004731368,-0.017839216,-0.01189281,-0.010716967,0.010084252,-0.0033455528,-0.00703266,0.006427941,0.038343675,0.03171416,-0.02976562,-0.04436847,-0.026159704,0.022979328,-0.004728568,0.012620713,0.0033707495,-0.025084646,-0.042733487,-0.003673109,-0.011288092,0.008746031,0.011276892,0.0070886523,-0.017189702,-0.0021417136,-0.0081245145,0.012990263,0.0044626035,0.008158109,0.036955062,0.013998129,0.03563364,0.052722555,0.019698167,0.003771096,-0.005784027,-0.0044178097,0.020067718,-0.01473723,-0.008662042,-0.0029116108,-0.017111313,0.0007209036,-0.014367679,-0.033259556,0.011915208,-0.004512997,0.008410076,-0.012374346,0.016349815,0.039082777,0.0013851149,-0.024547119,-0.0046809744,0.011848017,-0.021803485,-0.00027891272,0.0069094766,-0.007211836,0.006215169,-0.028287418,0.008639645,0.023606444,0.0072902255,0.013191837,-0.016282624,0.008964402,-0.023068916,-0.0021207165,0.0035723224,0.019698167,-0.014580451,-0.013650975,0.03037034,-0.01900386,0.050841205,0.021344347,-0.017559253,-0.00023691833,0.009143578,-0.0014145109,-0.0023922801,-0.01809678,-0.013874945,0.016696969,0.018947868,-0.028712962,-0.01773843,0.013919739,-0.009781892,0.030885471,0.00576163,-0.056082103,0.02140034,0.027817082,0.015924271,0.025935734,-0.028488992,-0.04555551,-0.003838287,-0.047840007,-0.0051569105,-0.0031971727,0.012307155,-0.018880676,0.010604982,0.033326745,0.02259858,-0.017861612,0.006635113,0.00231949,-0.02985521,0.04913903,-0.01743607,-0.0048461524,0.011293691,-0.0067079035,-0.009709102,-0.00852766,-0.0012577319,0.007127847,-0.0009308756,0.02985521,0.03852285,-0.009025994,0.0028500191,-0.015431537,-0.027279554,0.011579252,0.039239556,-0.007547791,-0.0046753753,0.04698892,0.0010680573,0.006663109,0.012889477,0.0076205814,0.044413265,-0.017156107,0.013460601,-0.0052381,-0.048825473,0.039441127,0.00127243,-0.020885209,0.0070270607,-0.0004962337,0.024009591,0.011248897,0.05603731,-0.000013276351,0.007144645,0.040538583,0.0037514986,-0.034984123,-0.006551124,0.019619778,0.009154776,-0.013673373,0.022105845,0.023292886,0.00194574,-0.008141312,-0.01855592,0.019933335,0.029205697,0.01376296,0.014826818,-0.009182773,-0.012071987,0.0038326876,-0.017917605,-0.03428982,0.0141661065,0.011036125,0.0002416427,-0.0014005128,0.0053220885,-0.0043926127,0.015162773,0.021109179,-0.0020381275,0.011915208,-0.037067045,-0.031736556,0.0064839334,0.0034155436,0.029832812,-0.0018911472,0.011467267,0.036999855,0.0141661065,0.03030315,0.0062207687,0.013852549,-0.006920675,-0.010425806,-0.0077493642,0.013203035,-0.0014754027,-0.022318617,0.03563364,-0.011204102,-0.0129454695,0.011405676,-0.0069262744,0.04855671,-0.028309816,-0.02745873,0.010095451,-0.0017567652,-0.00015520425,-0.012743897,-0.010789758,0.00061031844,-0.038030118,-0.017973598,-0.034603376,-0.0080685215,-0.0038998788,-0.0095635215,0.0007251031,0.032430865,-0.00013508195,0.017044121,-0.02925049,-0.022553785,-0.0076149823,0.0017791622,-0.000089150584,-0.007676574,-0.0066407123,-0.023920003,-0.025689367,-0.027884273,0.038097307,-0.01219517,-0.021456333,0.0031215828,-0.039306745,-0.012015994,-0.008886012,0.03657431,-0.021221163,-0.03599199,-0.0033791484,0.0012444337,-0.013650975,-0.00882442,-0.011825619,-0.0042974255,0.013494196,0.03464817,0.010649776,-0.007368615,-0.026921201,-0.028847344,-0.026294086,-0.02034768,-0.05558937,-0.020448467,-0.039821878,0.030191164,-0.016472999,0.003972669,0.020437269,0.031064648,0.015543522,0.003507931,0.028399404,-0.014177305,0.023315284,0.027346745,0.015543522,0.038097307,0.0025028654,0.014714833,0.0044989986,0.012430338,0.02551019,0.005784027,0.003395946,0.03838847,0.0011086519,0.03321476,-0.016932137,0.041053712,0.035364874,0.0067303004,0.0044682026,0.00018145074,0.025151838,0.006651911,0.031288616,0.0056356466,-0.014356481,0.016551388,-0.019138241,-0.053618435,-0.042151164,0.003449139,0.0028668167,-0.020090114,-0.011624047,0.0070438585,-0.03299079,-0.027257157,-0.03608158,-0.033125173,0.013001462,-0.0091771735,0.0209524,0.027817082,0.00027716297,-0.015162773,-0.0065063303,0.00040384603,0.016584983,-0.02797386,0.047929592,0.009115581,-0.00904839,0.019810151,-0.033707496,0.024502326,0.009742698,0.0025308616,0.006545525,0.015476331,-0.0046557775,-0.005744832,-0.009781892,-0.017850414,0.018925471,0.006965469,-0.0194518,0.010353016,-0.010420207,0.00066246145,0.022016257,0.010481799,0.011657642,-0.003404345,0.013830151,0.0012976265,0.026428467,0.027436333,0.016730564,-0.0070382594,0.002073123,-0.032050118,0.02125476,0.023180902,0.034065846,-0.02042607,0.022721764,-0.06127821,-0.0172009,-0.0072510308,-0.027593112,-0.0004916843,0.023852812,0.016472999,-0.0055180625,0.0028094244,0.06293559,-0.0019947335,0.007323821,0.021501126,0.008102117,-0.0023754826,-0.011108915,0.020818017,0.007144645,0.0095635215,0.0020899207,0.00042064377,0.02147873,-0.0041406467,-0.012934271,0.018757492,-0.0033035583,-0.0026134506,0.03471536,0.010840151,-0.007122248,0.0011926406,0.013236631,0.015431537,-0.015543522,-0.022251425,-0.00047628634,-0.025846146,0.024009591,0.039149966,0.030504722,0.014703635,-0.04436847,-0.019541388,0.014569253,-0.0014243097,-0.01077296,0.0132814245,0.031669367,0.049631767,0.010005862,0.02813064,0.0111705065,-0.0021879075,-0.0024580713,0.029496858,0.022139441,0.0066183154,0.03867963,-0.00011320987,-0.011702436,0.012318353,0.010061855,0.021299552,-0.01885828,-0.011377679]},{"id":"combinations-of-a-phone-number","name":"Combinations of a Phone Number","description":"You are given a string `digits` made up of digits from `2` through `9` inclusive.\n\nEach digit (not including 1) is mapped to a set of characters as shown below:\n\nA digit could represent any one of the characters it maps to.\n\nReturn all possible letter combinations that `digits` could represent. You may return the answer in **any order**.\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/796a0dc1-2fcd-4ebb-0686-28f9007ec800/public)\n\n**Example 1:**\n\n```java\nInput: digits = \"34\"\n\nOutput: [\"dg\",\"dh\",\"di\",\"eg\",\"eh\",\"ei\",\"fg\",\"fh\",\"fi\"]\n```\n\n**Example 2:**\n\n```java\nInput: digits = \"\"\n\nOutput: []\n```\n\n**Constraints:**\n* `0 <= digits.length <= 4`\n* `2 <= digits[i] <= 9`\n","difficulty":"Medium","concepts":["Tree Maze"],"solutions":{"python":"class Solution:\n    def letterCombinations(self, digits: str) -> List[str]:\n        res = []\n        digitToChar = {\n            \"2\": \"abc\",\n            \"3\": \"def\",\n            \"4\": \"ghi\",\n            \"5\": \"jkl\",\n            \"6\": \"mno\",\n            \"7\": \"qprs\",\n            \"8\": \"tuv\",\n            \"9\": \"wxyz\",\n        }\n\n        def backtrack(i, curStr):\n            if len(curStr) == len(digits):\n                res.append(curStr)\n                return\n            for c in digitToChar[digits[i]]:\n                backtrack(i + 1, curStr + c)\n\n        if digits:\n            backtrack(0, \"\")\n\n        return res\n","javascript":"class Solution {\n    /**\n     * @param {string} digits\n     * @return {string[]}\n     */\n    letterCombinations(digits) {\n        const res = [];\n        const digitToChar = {\n            2: 'abc',\n            3: 'def',\n            4: 'ghi',\n            5: 'jkl',\n            6: 'mno',\n            7: 'qprs',\n            8: 'tuv',\n            9: 'wxyz',\n        };\n\n        if (digits) {\n            this.backtrack(0, '', digits, res, digitToChar);\n        }\n\n        return res;\n    }\n\n    /**\n     * @param {number} i\n     * @param {string} curStr\n     * @param {string} digits\n     * @param {string[]} res\n     * @param {Map} digitToChar\n     * @return {void}\n     */\n    backtrack(i, curStr, digits, res, digitToChar) {\n        if (curStr.length === digits.length) {\n            res.push(curStr);\n            return;\n        }\n\n        for (const c of digitToChar[digits[i]]) {\n            this.backtrack(i + 1, curStr + c, digits, res, digitToChar);\n        }\n    }\n}\n","cpp":"class Solution {\npublic:\n    vector<string> letterCombinations(string digits) {\n        vector<string> res;\n        if (digits.empty()) {\n            return res;\n        }\n\n        unordered_map<char, string> digitToChar = {\n            {'2', \"abc\"},\n            {'3', \"def\"},\n            {'4', \"ghi\"},\n            {'5', \"jkl\"},\n            {'6', \"mno\"},\n            {'7', \"qprs\"},\n            {'8', \"tuv\"},\n            {'9', \"wxyz\"}\n        };\n\n        backtrack(0, digits, \"\", res, digitToChar);\n        return res;\n    }\n\nprivate:\n    void backtrack(int i, const string& digits, string curStr, vector<string>& res,\n                   const unordered_map<char, string>& digitToChar) {\n        if (curStr.length() == digits.length()) {\n            res.push_back(curStr);\n            return;\n        }\n\n        for (char c : digitToChar.at(digits[i])) {\n            backtrack(i + 1, digits, curStr + c, res, digitToChar);\n        }\n    }\n};\n","java":"class Solution {\n    \n    public List<String> letterCombinations(String digits) {\n        List<String> res = new ArrayList<>();\n        if (digits.isEmpty()) {\n            return  res;\n        }\n        Map<Character, String> digitToChar = new HashMap<>();\n        digitToChar.put('2', \"abc\");\n        digitToChar.put('3', \"def\");\n        digitToChar.put('4', \"ghi\");\n        digitToChar.put('5', \"jkl\");\n        digitToChar.put('6', \"mno\");\n        digitToChar.put('7', \"qprs\");\n        digitToChar.put('8', \"tuv\");\n        digitToChar.put('9', \"wxyz\");\n\n        backtrack(0, digits, \"\", res, digitToChar);\n        return res;\n    }\n\n    private void backtrack(int i, String digits, String curStr, List<String> res, Map<Character, String> digitToChar) {\n        if (curStr.length() == digits.length()) {\n            res.add(curStr);\n            return;\n        }\n        for (char c : digitToChar.get(digits.charAt(i)).toCharArray()) {\n            backtrack(i + 1, digits, curStr + c, res, digitToChar);\n        }\n    }\n}\n","csharp":"public class Solution {\n    \n    public List<string> LetterCombinations(string digits) {\n        List<string> res = new List<string>();\n        if (string.IsNullOrEmpty(digits)) {\n            return res;\n        }\n\n        Dictionary<char, string> digitToChar = new Dictionary<char, string> {\n            {'2', \"abc\"},\n            {'3', \"def\"},\n            {'4', \"ghi\"},\n            {'5', \"jkl\"},\n            {'6', \"mno\"},\n            {'7', \"qprs\"},\n            {'8', \"tuv\"},\n            {'9', \"wxyz\"}\n        };\n\n        Backtrack(0, digits, \"\", res, digitToChar);\n        return res;\n    }\n\n    private void Backtrack(int i, string digits, string curStr, List<string> res, Dictionary<char, string> digitToChar) {\n        if (curStr.Length == digits.Length) {\n            res.Add(curStr);\n            return;\n        }\n\n        foreach (char c in digitToChar[digits[i]]) {\n            Backtrack(i + 1, digits, curStr + c, res, digitToChar);\n        }\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def letterCombinations(self, digits: str) -> List[str]:\n        ","javascript":"class Solution {\n    /**\n     * @param {string} digits\n     * @return {string[]}\n     */\n    letterCombinations(digits) {}\n}\n","cpp":"class Solution {\npublic:\n    vector<string> letterCombinations(string digits) {\n        \n    }\n};\n","java":"class Solution {\n    public List<String> letterCombinations(String digits) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public List<string> LetterCombinations(string digits) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/0snEunUacZY","embedding":[0.027193803,-0.043343227,0.04080064,-0.024611484,0.0027288157,0.017579632,-0.012752682,0.025942372,0.0075234864,0.08883177,-0.048706505,-0.055976726,-0.03245776,-0.04030404,0.049103785,0.018771471,0.021433245,0.0048617115,-0.02403543,0.029160338,0.008298182,-0.034980487,-0.027531492,-0.012166694,0.017738543,0.019983174,-0.053791687,-0.0059244353,0.016546704,-0.003900791,0.0113125425,-0.017579632,-0.022883317,-0.009336076,0.014977449,0.010706691,-0.0054278355,0.0007417959,-0.013328738,0.009350973,0.0011328682,0.037662126,0.0006704097,-0.031285785,-0.029537754,0.0606249,-0.002140345,0.01970508,0.004456983,0.049381882,-0.018334463,0.026141012,0.01672548,-0.0003594141,-0.012673226,-0.048746232,-0.03652988,0.011531047,-0.00017334435,0.009475123,0.03668879,-0.0027461967,0.036351103,-0.034066744,0.033470824,0.035715453,0.028445235,0.036549743,-0.034126338,-0.026955435,-0.006858043,0.03150429,-0.018403986,0.044614524,0.0055271555,0.03180225,0.011153631,0.01642752,0.036649063,-0.028902106,-0.034583207,-0.034364704,0.022128485,0.0032626605,0.002043508,0.02069828,-0.028067818,-0.01771868,0.0009292623,-0.05454652,0.015305205,-0.053394407,-0.026518427,0.0086607,-0.023002502,0.00920696,0.022188077,-0.022565493,-0.017251875,-0.014897993,-0.018145755,0.0036798043,0.009862471,0.035318177,-0.021731205,0.015046973,0.013368466,0.013914726,-0.0034737154,-0.0031434766,-0.004839365,0.04509126,0.0033669465,-0.006843145,0.06582926,0.010170363,-0.028147275,-0.08978524,-0.0025897678,-0.03986703,-0.030769322,-0.017678952,0.042191114,0.03374892,-0.026240332,-0.019615691,-0.012226286,-0.043224044,0.02069828,-0.051646374,-0.0106470985,-0.030352177,0.0003046329,-0.019148886,-0.0146099655,-0.032497488,0.032874905,0.022068894,-0.00480212,0.024929307,0.046799563,-0.02528686,0.0059740953,0.004705283,0.004432153,-0.04167465,-0.03142483,0.011531047,-0.05859877,0.022386717,-0.04648174,-0.078780584,0.014639761,0.036649063,0.028842514,-0.06400178,-0.008864306,0.011193358,0.03202075,0.011074175,-0.03285504,0.0041416422,-0.0101058055,0.01851324,0.013229418,-0.00058288395,0.0051298756,-0.008844442,-0.017053235,-0.04763385,0.0056761354,-0.05216284,0.0059343674,-0.019278003,-0.07603936,-0.0030466395,-0.028187003,-0.011054311,-0.06082354,-0.014590101,-0.008526618,-0.027889043,-0.015434321,-0.08374658,-0.014828469,-0.042032205,0.030570682,-0.04723657,0.017599495,0.04993807,0.033530418,0.0055122576,0.009266552,-0.008124372,-0.069563694,0.0073794727,0.023856653,-0.03523872,-0.014391461,0.027690403,-0.02175107,0.0025823188,-0.03603328,-0.023201142,0.049659975,-0.012563974,-0.023419645,-0.0035010283,0.031146737,-0.034285247,0.0051199435,-0.033570144,-0.0089487275,-0.027332852,-0.038734782,0.007900902,0.05589727,-0.034682527,-0.010964923,0.012256082,-0.022764133,0.025266996,0.00972839,0.014361666,0.033033818,0.0006865492,0.020330794,-0.0029026256,0.02095651,0.0089983875,0.0013706153,-0.01752004,-0.0041043973,-0.017162489,0.016864529,-0.020916782,-0.018642355,0.017460449,-0.0163282,0.01915882,-0.004163989,0.021731205,0.033689328,0.034821577,-0.0075731464,-0.0029547687,-0.0070368187,0.031146737,-0.029061018,-0.011680027,0.0027437138,0.04091982,0.0000133170215,-0.027531492,0.011918395,0.057168566,-0.01821528,-0.047792763,0.03021313,0.02040032,-0.0013917208,-0.0051149777,-0.024651213,-0.03718539,-0.008159135,-0.031226194,-0.0053980392,-0.003987696,-0.0010049938,0.015990512,-0.029299386,0.012414994,0.0074092685,-0.039827302,-0.017837863,-0.050057255,0.0050901477,-0.026101284,-0.0020025386,0.01044846,-0.021016102,0.029974762,0.0023153964,-0.020092426,0.022823725,0.01737106,0.010180295,-0.026101284,-0.07135145,-0.055420533,0.0106967585,-0.020936646,-0.022227805,-0.008278318,-0.0146596255,-0.02135379,-0.0050802156,0.0016238813,0.019436914,-0.0016276058,-0.043144587,0.0029373877,0.0035233754,-0.017589564,-0.065471716,0.02294291,-0.02165175,0.008154168,-0.00851172,-0.020241406,0.056532916,0.00047083866,0.028921971,0.017500175,-0.0074390643,-0.029478163,-0.028047955,-0.055936996,0.0089487275,-0.03132551,0.0066792667,0.0020521986,0.024412844,-0.002470584,0.009400633,0.016785072,-0.04080064,-0.0037443622,-0.0025363832,-0.06137973,0.0019255655,-0.057367206,-0.0011701132,0.054665703,-0.08207801,-0.017986843,0.004300554,-0.025326587,-0.026299924,0.0027164007,0.019417051,0.0539506,0.027769858,-0.036609333,-0.03192143,0.011481387,0.005919469,0.005869809,0.021016102,-0.0013979283,-0.0077717863,0.017957047,0.01572235,-0.008894102,0.02036059,0.026657475,-0.019695146,0.016437452,-0.0058499454,-0.026637612,0.0090232175,0.00831308,-0.010925195,-0.025346452,-0.0060982453,0.01786766,0.0073248465,0.015950784,-0.021731205,0.0025773528,0.030689865,-0.014341801,0.065193616,-0.0036624232,-0.0027188838,-0.018334463,-0.028763058,0.029080883,0.020122223,0.019595826,-0.0008169066,0.010835807,0.015354864,0.0031906534,0.013408193,0.024770396,-0.016258676,-0.034185927,-0.011680027,-0.04862705,-0.02294291,-0.006520355,0.07309949,0.016934052,-0.027809586,-0.0032378305,0.011968055,0.058638502,-0.027650675,0.02045991,0.016298404,0.03702648,0.028167138,0.030133674,0.026717067,-0.03718539,0.0030466395,0.03331191,0.0057158633,0.046322826,0.018145755,0.022486037,-0.0007964219,-0.024452573,0.029676802,0.039052606,-0.0135273775,-0.012236218,-0.010339207,0.008253488,-0.018920451,-0.009038116,0.0034315044,-0.0061727352,0.015474048,0.031484425,0.0069523966,-0.0070169545,0.011441658,0.009693627,-0.04469398,0.042548668,-0.04648174,0.0024693424,-0.035357904,0.008819612,-0.024790261,0.07147064,-0.0035705522,-0.03041177,-0.028484963,-0.0055619176,0.014004113,-0.02687598,0.0013619248,-0.036112733,0.0030590545,0.026299924,0.004913855,0.002207386,0.022863453,-0.0055768155,0.00056488224,0.013229418,-0.031285785,0.0018585246,0.04310486,-0.013120166,0.04588582,-0.06634573,-0.057406932,-0.01029948,-0.04111846,-0.026220467,0.009812811,0.0135273775,-0.01363663,0.024829987,0.036847703,0.016785072,-0.02065855,0.024790261,-0.004640725,0.030352177,-0.0055768155,0.017331332,0.0074986564,0.08223692,-0.028882243,-0.040443085,-0.03261667,-0.03325232,-0.03847655,0.0028355846,-0.03041177,-0.029358977,-0.0053980392,-0.020122223,-0.011282747,0.013706153,-0.030093946,-0.0038734782,-0.048905145,-0.0044545,0.029875442,0.023797061,0.0067636888,-0.040025942,0.014153093,-0.03440443,-0.020440046,-0.04171438,0.0052490593,0.0067289267,0.022108622,0.034781847,0.016636092,-0.03206048,0.020996237,0.007081513,-0.00455382,-0.052599847,0.013974317,0.01029948,-0.018592695,-0.00861104,-0.00009287967,-0.055658903,-0.015742213,-0.04449534,-0.0014314489,0.0005478116,0.030431634,0.016189152,-0.012206422,-0.028127411,-0.019863991,0.026021827,-0.0051199435,0.004533956,0.0010062353,0.028802786,0.0073198806,0.04167465,-0.011838938,-0.006430967,0.020440046,0.020837326,0.048666775,-0.03255708,-0.025306724,0.044376153,0.0037915392,0.0053533455,0.00081628584,-0.028643874,0.017986843,0.002095651,-0.026915707,-0.0075532827,0.010498119,0.0018411436,-0.023419645,-0.03156388,-0.02707462,-0.017460449,-0.0052142977,0.022982636,0.018106027,-0.011272815,-0.0259821,-0.030888505,0.01616929,0.01363663,0.01582167,0.040423222,-0.0054675634,0.055976726,-0.009291382,-0.00962907,0.021989437,-0.04290622,0.0053831413,-0.03652988,-0.009172197,-0.014520577,-0.04068145,0.032278985,-0.044932347,0.009807846,-0.0018374191,-0.0073844385,0.023697741,-0.006619675,-0.049461335,0.0017741027,0.02095651,-0.006634573,0.021333925,-0.061419457,-0.0032676265,0.05053399,0.02294291,0.0146596255,-0.016755275,-0.0029100745,-0.022783997,-0.0070467507,0.0076476363,-0.011848871,-0.00972839,0.034761984,-0.024671076,0.05232175,-0.035079807,-0.01567269,0.01766902,0.047713306,-0.0023079475,0.012633498,0.018980043,-0.013567106,-0.010945058,-0.02214835,-0.01801664,0.052997127,-0.0012570182,-0.0056513054,0.04902433,-0.018692015,0.011471455,0.050891545,0.024412844,0.023777196,0.04058213,-0.014719217,-0.009494987,-0.018850926,-0.023677876,0.008069746,-0.013000982,0.0099816555,0.024095021,0.0030168437,-0.020996237,-0.009077843,0.010408731,-0.0052937535,0.0095148515,0.011521115,0.010925195,0.0036624232,0.01925814,0.010279615,0.0016921638,-0.0018163136,0.013020846,0.010716623,0.0017095447,0.01826494,0.006932533,0.024154613,0.027491763,0.046561193,0.008581244,0.011968055,-0.026796523,-0.023797061,-0.02059896,-0.019436914,0.004263309,-0.02413475,0.018900586,-0.02727326,-0.02637938,-0.0032477626,0.011948191,-0.045726907,0.019873923,0.03196116,-0.024969036,0.039747845,0.05212311,-0.015414457,-0.03827791,-0.018999906,0.0034861304,-0.03480171,-0.003995145,-0.03202075,0.03658947,0.0017443066,-0.00900832,0.03897315,-0.00017427548,0.0070119887,0.0060734153,-0.008541516,-0.024611484,0.035576407,-0.008506754,-0.0015258028,-0.017480312,0.014083569,0.048190042,-0.030769322,0.031881705,-0.0033594975,-0.008198862,-0.0193078,0.015215817,-0.026041692,0.008879203,0.005869809,0.020340726,0.022783997,0.0086607,0.0053781755,-0.0482695,-0.027134212,0.021115422,0.026657475,-0.022068894,0.034066744,-0.011451591,0.036152463,0.0035904164,-0.03619219,-0.011163563,-0.064399056,-0.006455797,0.0075582485,-0.014649693,-0.037244983,0.0072006965,0.025127947,0.021731205,-0.038158726,0.015841532,0.010736487,0.019834194,0.009142402,0.0052689235,0.02304223,-0.011987918,-0.021909982,-0.022108622,0.019734874,-0.005695999,-0.038198452,-0.0017654122,-0.04977916,-0.012136898,0.016060036,-0.007970426,0.056135636,-0.018076232,0.0019541201,-0.068451315,0.04038349,-0.021572294,0.0014066189,0.004193785,-0.034722257,0.0249889,0.02528686,0.01573228,-0.00910764,-0.011590638,0.0035829672,0.021294197,0.0074340985,0.013934589,0.002296774,0.02234699,0.044972073,-0.045567993,0.029259657,-0.017162489,0.041039005,-0.017003575,-0.015354864,0.006614709,0.018334463,-0.03553668,-0.028246595,0.010339207,0.027829451,-0.010786147,-0.015235681,-0.04270758,0.035059944,-0.03732444,0.029498026,0.002204903,0.00017427548,0.0066296067,0.000025819309,0.0056364075,-0.048905145,0.025624547,0.00948009,0.005780421,0.0004072118,0.014073637,0.015573368,0.002309189,-0.010170363,0.010339207,-0.037860766,-0.012414994,-0.006490559,-0.009986621,-0.027571218,0.0259821,0.02334019,0.0034637833,-0.012802342,-0.00811444,0.045329627,0.0019255655,0.036212053,0.011938258,0.0107960785,0.0053930734,-0.0037418792,-0.0037319472,0.021631885,-0.0027362646,0.016387792,-0.008576278,-0.017450515,-0.056811012,0.022525765,0.02343951,0.010865603,0.011193358,0.030948097,0.004044805,-0.013447922,-0.034086607,0.028127411,-0.023260733,0.023598421,0.014778809,0.0024829989,-0.03305368,0.012613634,0.01712276,0.012186558,-0.014937721,0.0012315675,-0.039489612,-0.0015841533,0.046402283,0.029537754,-0.00836274,-0.037244983,0.025962235,-0.020837326,0.04020472,-0.004715215,0.053235494,-0.010875535,0.0036971853,0.008665666,0.027730132,-0.0049312357,-0.035159264,-0.008298182,0.05033535,0.014222617,0.031047417,-0.07882032,-0.029498026,0.009783016,0.038337503,-0.003977764,-0.0346428,-0.026061555,-0.00799029,-0.0052440935,-0.0009727148,0.01259377,0.05192447,-0.017986843,0.0076426705,-0.018155687,0.038456686,-0.026399244,0.038635463,0.022565493,0.008779884,0.01572235,-0.020301,-0.07377486,0.011550911,-0.018255007,0.0033942594,-0.041634925,-0.005596679,-0.0020670965,0.017837863,-0.026617747,-0.015762076,0.017232012,0.006723961,0.0076178405,0.05530135,-0.017430652,0.01284207,0.013269146,-0.017003575,0.020877054,-0.020380454,0.019377323,-0.023201142,-0.017529972,-0.02145311,0.029597346,-0.011461522,-0.07258302,-0.006421035,0.006619675,0.011322475,0.006202531,-0.013894862,0.00006094986,0.026141012,0.019993106,0.021373654,0.0054675634,0.02488958,-0.028882243,0.030670002,-0.00034141235,0.02204903,0.006053551,0.022327125,0.028882243,-0.0054129376,0.017897455,0.014083569,-0.027094483,-0.0010186502,-0.024472436,-0.008864306,-0.025545092,0.023459373,-0.0076823984,-0.03360987,0.0022682194,-0.04095955,0.0016660922,0.0037021514,-0.027551355,0.01611963,-0.03184198,0.02628006,0.012305742,0.04425697,0.0029572516,-0.025862915,-0.008010155,-0.015394593,0.034066744,-0.021592157,0.022724405,0.0035928993,0.011550911,0.002562455,-0.008695462,0.006455797,0.0073149144,-0.016844664,0.007955528,-0.009797913,0.037900493,-0.00823859,-0.045528267,0.025068356,-0.01029948,-0.0207976,0.013328738,-0.04326377,0.03150429,0.012673226,-0.013368466,0.053275224,-0.025763595,0.0076575684,-0.033232458,-0.001966535,0.021393517,0.026319787,-0.009648933,-0.0074738264,0.0029373877,0.029637074,0.0023700225,0.04564745,0.014252413,0.03305368,0.0027312988,-0.006614709,-0.029577482,-0.026796523,0.012117034,-0.0032775584,0.013845202,0.00806478,-0.025147812,-0.0100313155,-0.0068282466,-0.008347842,-0.04469398,0.04914351,0.021572294,0.0022533215,0.03235844,-0.02214835,-0.010478255,-0.019248206,0.03543736,0.014570237,-0.004191302,0.043422684,-0.0198044,0.001083829,-0.04068145,0.018741675,0.039132062,-0.033172864,0.018195415,0.004521541,-0.00977805,-0.0005397419,0.021413382,-0.006366409,0.006361443,0.0011496284,-0.0057108975,-0.017182352,-0.00023588489,-0.015394593,0.0047450108,0.03742376,-0.006694165,0.036410693,0.0415952,0.0041292273,0.010766283,-0.0052589914,-0.022128485,-0.06424014,0.0017641707,-0.031166602,-0.0089983875,-0.04644201,0.018741675,-0.0118290065,0.030451497,-0.012166694,0.03877451,-0.0058847074,-0.010766283,0.043978874,0.033272184,0.028147275,0.009445327,-0.017430652,-0.025048492,0.008422332,0.004444568,-0.006455797,-0.005964163,-0.023618285,-0.011948191,-0.025048492,-0.011689958,-0.006445865,0.009336076,-0.0433035,-0.0047499766,-0.01598058,-0.027869178,-0.039489612,-0.008069746,0.0003690357,0.012971186,-0.011193358,-0.018374192,0.0026543257,-0.0020099876,-0.028326051,0.016566569,-0.043025404,0.0009075361,-0.015424388,-0.014669557,0.010220023,-0.0029051087,-0.0038362332,-0.014192821,-0.028385643,0.02135379,-0.0052490593,-0.014818537,0.01752004,0.0047127316,-0.023955973,0.014679489,-0.0074291327,-0.014937721,-0.0059740953,0.0195561,-0.004665555,0.016636092,0.013666426,-0.033133138,-0.014600033,0.014679489,-0.016685752,0.04664065,0.00018312117,-0.033669464,0.037542943,-0.024075156,-0.00046897642,0.00053167215,0.0021415865,0.0032254155,0.0070914445,0.0002135379,-0.012385198,0.00833791,-0.016298404,0.025346452,0.0074043027,-0.005671169,0.0028306188,-0.04588582,-0.0391122,-0.03593396,-0.022426445,-0.017450515,-0.0074092685,-0.012583838,-0.007831378,-0.00071634515,0.022962773,-0.00012508106,0.03921152,-0.012146831,-0.019238275,0.026101284,0.000043064512,0.042548668,0.024154613,-0.024671076,0.025127947,-0.0008603591,0.02175107,0.016099764,0.013050642,-0.01776834,-0.056771286,0.038158726,-0.018284803,0.04668038,-0.03444416,-0.03490103,0.02488958,-0.009311246,0.013318806,0.031107008,-0.009043082,-0.019883854,0.0152754085,-0.0060237553,-0.017410789,0.014321937,0.020678414,-0.014828469,0.025127947,0.017460449,0.014878129,0.001931773,-0.000493496,0.012623566,-0.046561193,-0.018642355,-0.057843942,0.032100208,-0.0254855,-0.009251653,0.0130109135,-0.08029025,0.019218411,0.027452035,0.029001426,0.0056264754,0.0053334814,0.0052987193,0.033927698,-0.016387792,0.020877054,0.01034914,-0.05172583,-0.008874238,-0.027392443,-0.014828469,-0.04787222,0.028663738,-0.04807086,0.021790797,-0.012931458,-0.038158726,-0.0026046657,0.015533641,0.02488958,-0.006684233,-0.055221893,-0.052083384,0.0031434766,-0.01796698,-0.0361326,0.00900832,-0.023797061,-0.05037508,-0.01722208,0.011094038,0.0032303815,-0.032735858,0.015245613,-0.014798673,0.014004113,0.016695684,0.03374892,0.026995163,-0.004238479,-0.009946893,-0.04306513,0.005671169,0.028167138,0.013954453,-0.024432708,0.030550817,0.044137787,0.0016797488,0.015503844,0.010021383,-0.013616766,0.026995163,0.03345096,-0.022108622,-0.023955973,0.0462831,0.03351055,0.02000304,0.026001964,-0.016397724,-0.012196491,-0.062015377,0.0136266975,-0.026458835,0.013000982,0.04046295,-0.011501251,0.00026071488,0.014520577,-0.0036102803,0.010220023,-0.021075694,0.017937183,0.006182667,-0.0442967,0.053791687,-0.00415654,-0.0020795115,0.020191746,0.02528686,-0.011789278,0.012434858,0.05156692,0.0014153094,0.018294735,0.030232994,0.0053334814,-0.02667734,0.037344303,0.017212149,-0.043025404,0.0019305316,-0.00072255265,0.018831063,0.014351733,-0.0053036856,0.03140497,-0.0023613318,-0.012017715,0.028465098,0.039390292,-0.024472436,-0.0032055515,-0.0046754866,0.006475661,-0.018741675,-0.009445327,-0.020032834,-0.005993959,0.0163282,0.02628006,-0.00062478456,0.030491225,0.0051199435,0.004792188,0.0019404636,0.025505364,0.0060734153,-0.0047996365,-0.010617303,0.08326985,0.013169826,-0.0011167288,-0.013785609,-0.013467786,0.019377323,0.026518427,-0.0012570182,-0.0050181407,0.028028091,-0.016834732,0.007985325,0.013318806,0.020678414,0.020519502,0.0059492653,0.0072453907,0.0036425593,0.05371223,0.018076232,-0.029239794,-0.04350214,0.0014761428,-0.012524246,0.0160799,0.028246595,0.014669557,0.018056367,-0.023975836,0.03261667,-0.011034447,-0.0049461336,-0.008198862,0.028127411,0.0069374987,0.024591621,-0.026419107,-0.038258046,-0.01007601,-0.035020217,-0.006291919,0.018493375,-0.01771868,0.029100746,-0.030769322,0.031583745,-0.020340726,0.04062186,-0.025644412,0.017182352,-0.019278003,0.011302611,0.010597439,-0.015950784,0.0068679745,-0.021175014,0.008531584,0.0010974855,0.03434484,-0.004049771,-0.042985674,0.015444253,-0.023578556,-0.014629829,-0.02618074,0.05335468,-0.0056413733,-0.009450293,0.023757333,-0.018145755,0.010021383,-0.014947653,-0.011540978,0.043819964,-0.022486037,-0.013984249,-0.012514314,-0.0034910964,0.016040172,0.012504382,-0.0053831413,0.01886086,-0.0009516093,-0.032894768,0.0014885578,0.0025773528,0.0066296067,0.029458297,0.0067388588,0.033927698,0.0038039542,0.00900832,0.0079158,-0.029259657,0.03867519,-0.01304071,0.02065855,0.0023650564,0.009311246,0.0014674523,-0.0067537567,-0.02185039,-0.027293123,-0.04346241,0.028842514,0.0014711769,-0.0066792667,-0.006793485,0.0005844358,-0.0031509255,0.0076228064,-0.017589564,0.011243018,-0.00487661,0.010706691,0.018791335,-0.00487661,-0.014411326,-0.033788648,0.0107464185,0.029875442,-0.0021490355,0.026935572,0.0052937535,-0.0036773214,0.009882336,-0.009773083,0.014401393,0.012484518,0.0090480475,0.010607371,0.030530954,-0.000959679,0.042191114,0.018135823,-0.005730761,0.008248522,0.019446846,-0.030630274,-0.011401931,0.006381307,0.00925662,0.026041692,0.0021639336,-0.017261809,-0.030749457,0.01587133,0.043144587,0.013974317,0.04370078,0.008481924,0.039151926,-0.022466173,-0.024234068,0.015186021,-0.018255007,0.010269683,0.0014935238,-0.017500175,-0.018304667,0.006435933,-0.050096985,-0.03186184,-0.037741583,-0.017390924,0.007945596,0.043581594,-0.0029274556,-0.0153250685,0.026915707,0.027015027,0.024214204,0.046998203,0.028862378,-0.013795542,0.019615691,0.001098727,0.016417589,-0.01611963,-0.0019702595,0.021393517,0.009450293,-0.03553668,0.04370078,0.014619897,0.009147367,0.04107873,0.047554392,0.020231474,0.032596808,0.018324532,0.034722257,0.015523708,-0.02393611,-0.0076625342,0.0146596255,0.010239887,0.039648525,0.04088009,-0.023618285,-0.013666426,-0.029438434,-0.033391368,-0.023618285,0.004615895,0.054387607,-0.01811596,0.03986703,0.029537754,0.01592099,-0.016646024,0.0026468767,0.009172197,0.0003777262,0.017083032,-0.015464117,-0.024591621,0.00015751524,-0.02588278,0.025167676,0.052401207,-0.022188077,-0.00014432431,0.0029870477]},{"id":"n-queens","name":"N-Queens","description":"The **n-queens** puzzle is the problem of placing `n` queens on an `n x n` chessboard so that no two queens can attack each other.\n\nA **queen** in a chessboard can attack horizontally, vertically, and diagonally.\n\nGiven an integer `n`, return all distinct solutions to the **n-queens puzzle**.\n\nEach solution contains a unique board layout where the queen pieces are placed. `'Q'` indicates a queen and `'.'` indicates an empty space.\n\nYou may return the answer in **any order**.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/cdf2b34d-7905-4388-db0b-9a120ebf4a00/public)\n\n```java\nInput: n = 4\n\nOutput: [[\".Q..\",\"...Q\",\"Q...\",\"..Q.\"],[\"..Q.\",\"Q...\",\"...Q\",\".Q..\"]]\n```\n\nExplanation: There are two different solutions to the 4-queens puzzle.\n\n**Example 2:**\n\n```java\nInput: n = 1\n\nOutput: [[\"Q\"]]\n```\n\n**Constraints:**\n* `1 <= n <= 8`\n","difficulty":"Hard","concepts":["Tree Maze"],"solutions":{"python":"class Solution:\n    def solveNQueens(self, n: int) -> List[List[str]]:\n        col = set()\n        posDiag = set()\n        negDiag = set()\n\n        res = []\n        board = [[\".\"] * n for i in range(n)]\n\n        def backtrack(r):\n            if r == n:\n                copy = [\"\".join(row) for row in board]\n                res.append(copy)\n                return\n\n            for c in range(n):\n                if c in col or (r + c) in posDiag or (r - c) in negDiag:\n                    continue\n\n                col.add(c)\n                posDiag.add(r + c)\n                negDiag.add(r - c)\n                board[r][c] = \"Q\"\n\n                backtrack(r + 1)\n\n                col.remove(c)\n                posDiag.remove(r + c)\n                negDiag.remove(r - c)\n                board[r][c] = \".\"\n\n        backtrack(0)\n        return res\n","javascript":"class Solution {\n    /**\n     * @param {number} n\n     * @return {string[][]}\n     */\n    solveNQueens(n) {\n        const col = new Set();\n        const posDiag = new Set();\n        const negDiag = new Set();\n\n        const res = [];\n        const board = Array.from({ length: n }, () => Array(n).fill('.'));\n\n        /**\n         * @param {number} r\n         * @return {void}\n         */\n        function backtrack(r) {\n            if (r === n) {\n                res.push(board.map(row => row.join('')));\n                return;\n            }\n\n            for (let c = 0; c < n; c++) {\n                if (col.has(c) || posDiag.has(r + c) || negDiag.has(r - c)) {\n                    continue;\n                }\n\n                col.add(c);\n                posDiag.add(r + c);\n                negDiag.add(r - c);\n                board[r][c] = 'Q';\n\n                backtrack(r + 1);\n\n                col.delete(c);\n                posDiag.delete(r + c);\n                negDiag.delete(r - c);\n                board[r][c] = '.';\n            }\n        }\n\n        backtrack(0);\n        return res;\n    }\n}\n","cpp":"class Solution {\npublic:\n    vector<vector<string>> solveNQueens(int n) {\n        unordered_set<int> col;\n        unordered_set<int> posDiag;\n        unordered_set<int> negDiag;\n\n        vector<vector<string>> res;\n        vector<string> board(n, string(n, '.'));\n\n        backtrack(0, n, col, posDiag, negDiag, board, res);\n        return res;\n    }\n\nprivate:\n    void backtrack(int r, int n, unordered_set<int>& col, unordered_set<int>& posDiag,\n                   unordered_set<int>& negDiag, vector<string>& board,\n                   vector<vector<string>>& res) {\n        if (r == n) {\n            res.push_back(board);\n            return;\n        }\n\n        for (int c = 0; c < n; c++) {\n            if (col.count(c) || posDiag.count(r + c) || negDiag.count(r - c)) {\n                continue;\n            }\n\n            col.insert(c);\n            posDiag.insert(r + c);\n            negDiag.insert(r - c);\n            board[r][c] = 'Q';\n\n            backtrack(r + 1, n, col, posDiag, negDiag, board, res);\n\n            col.erase(c);\n            posDiag.erase(r + c);\n            negDiag.erase(r - c);\n            board[r][c] = '.';\n        }\n    }\n};\n","java":"class Solution {\n    \n    public List<List<String>> solveNQueens(int n) {\n        Set<Integer> col = new HashSet<>();\n        Set<Integer> posDiag = new HashSet<>();\n        Set<Integer> negDiag = new HashSet<>();\n\n        List<List<String>> res = new ArrayList<>();\n        char[][] board = new char[n][n];\n        for (char[] row : board) {\n            Arrays.fill(row, '.');\n        }\n\n        backtrack(0, n, col, posDiag, negDiag, board, res);\n        return res;\n    }\n\n    private void backtrack(int r, int n, Set<Integer> col, Set<Integer> posDiag, Set<Integer> negDiag,\n                           char[][] board, List<List<String>> res) {\n        if (r == n) {\n            List<String> copy = new ArrayList<>();\n            for (char[] row : board) {\n                copy.add(new String(row));\n            }\n            res.add(copy);\n            return;\n        }\n\n        for (int c = 0; c < n; c++) {\n            if (col.contains(c) || posDiag.contains(r + c) || negDiag.contains(r - c)) {\n                continue;\n            }\n\n            col.add(c);\n            posDiag.add(r + c);\n            negDiag.add(r - c);\n            board[r][c] = 'Q';\n\n            backtrack(r + 1, n, col, posDiag, negDiag, board, res);\n\n            col.remove(c);\n            posDiag.remove(r + c);\n            negDiag.remove(r - c);\n            board[r][c] = '.';\n        }\n    }\n}\n","csharp":"public class Solution {\n    \n    public List<List<string>> SolveNQueens(int n) {\n        HashSet<int> col = new HashSet<int>();\n        HashSet<int> posDiag = new HashSet<int>();\n        HashSet<int> negDiag = new HashSet<int>();\n\n        List<List<string>> res = new List<List<string>>();\n        char[][] board = new char[n][];\n        for (int i = 0; i < n; i++) {\n            board[i] = new char[n];\n            Array.Fill(board[i], '.');\n        }\n\n        Backtrack(0, n, col, posDiag, negDiag, board, res);\n        return res;\n    }\n\n    private void Backtrack(int r, int n, HashSet<int> col, HashSet<int> posDiag, HashSet<int> negDiag,\n                           char[][] board, List<List<string>> res) {\n        if (r == n) {\n            List<string> copy = new List<string>();\n            foreach (char[] row in board) {\n                copy.Add(new string(row));\n            }\n            res.Add(copy);\n            return;\n        }\n\n        for (int c = 0; c < n; c++) {\n            if (col.Contains(c) || posDiag.Contains(r + c) || negDiag.Contains(r - c)) {\n                continue;\n            }\n\n            col.Add(c);\n            posDiag.Add(r + c);\n            negDiag.Add(r - c);\n            board[r][c] = 'Q';\n\n            Backtrack(r + 1, n, col, posDiag, negDiag, board, res);\n\n            col.Remove(c);\n            posDiag.Remove(r + c);\n            negDiag.Remove(r - c);\n            board[r][c] = '.';\n        }\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def solveNQueens(self, n: int) -> List[List[str]]:\n        ","javascript":"class Solution {\n    /**\n     * @param {number} n\n     * @return {string[][]}\n     */\n    solveNQueens(n) {}\n}\n","cpp":"class Solution {\npublic:\n    vector<vector<string>> solveNQueens(int n) {\n        \n    }\n};\n","java":"class Solution {\n    public List<List<String>> solveNQueens(int n) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public List<List<string>> SolveNQueens(int n) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/Ph95IHmRp5M","embedding":[0.009439562,-0.01493093,0.038224112,-0.01712049,0.0074712886,0.030141378,0.0022434248,-0.016049003,-0.03482331,0.04630685,0.0073897624,-0.032004833,-0.042277128,0.01797069,0.024318082,-0.03095664,0.043232147,-0.006306629,0.02832451,0.06717754,0.010726511,0.020952217,0.061307658,-0.072348624,0.08376229,0.07113738,0.013952617,0.016771091,0.0018707338,-0.016887557,0.012228921,-0.010091771,0.0005957959,0.021464668,-0.0061959866,-0.006597794,0.009655024,-0.028557442,-0.03566186,0.0060154647,-0.0064522116,-0.023514468,-0.0046266085,-0.02678716,-0.017202016,0.01906547,-0.02883696,0.026530934,0.029209651,0.03915584,-0.029046599,0.029489169,-0.0010562002,-0.011675708,-0.051897213,-0.011844584,-0.02323495,0.032633748,0.02890684,0.028860254,0.04309239,-0.015932538,0.02023013,0.017842578,0.010592575,0.0005586724,-0.009189161,-0.010540165,-0.04302251,-0.014872697,-0.07081128,-0.012718078,-0.021324908,-0.027043385,0.0025156639,-0.00029080082,-0.001447089,0.014138962,0.016456634,-0.035265878,-0.01595583,-0.012357034,0.064056255,-0.01023153,0.02487712,-0.016142176,-0.04500243,0.017108843,-0.07724019,-0.09089,-0.018541373,0.030071499,-0.0043995,0.009602615,0.0089678755,-0.0011253519,0.09298638,0.017365068,-0.010330527,0.0001927147,-0.015093982,-0.021872299,0.023421295,0.051384762,0.011885347,0.0015504524,-0.018657839,0.028930133,-0.037944596,0.031073106,-0.018506434,-0.0030339372,0.047890782,-0.026065072,0.033169493,0.033472303,-0.037641782,-0.027672302,0.037641782,-0.011227314,-0.017772699,-0.040786363,-0.013288761,0.024341376,-0.03601126,0.047890782,-0.011937756,-0.07887071,0.019985551,0.022606034,0.023549408,0.014919284,0.0047139577,0.026041778,-0.05977031,-0.0047023115,0.017038964,0.0033192786,-0.014523299,0.04325544,0.01646828,-0.0010838609,-0.015629726,-0.026647402,0.0035027124,0.013032536,0.004812954,0.028883547,-0.01694579,0.029768689,0.035172705,0.006987955,0.0065395613,0.040996,0.0031795194,-0.09182173,-0.022221696,-0.00443444,0.036733348,0.0014565518,-0.018844185,-0.025506034,-0.0068481956,-0.049800824,0.019275108,-0.014267075,0.017073903,-0.020067077,-0.0174233,-0.029722102,0.016922498,-0.020486355,0.009561852,0.014360247,0.03293656,0.015210449,-0.004053014,-0.046679538,-0.029442584,-0.0058553237,-0.062192798,-0.004448998,-0.01081386,-0.07314059,0.00003439384,-0.0017950309,-0.002405021,-0.08147956,-0.030071499,-0.003496889,0.0148959905,0.047541387,-0.000047496254,0.024970291,-0.0055525126,-0.02183736,0.047261868,-0.012380327,-0.016584747,-0.002175001,-0.0053195804,0.012357034,0.015851011,0.007937152,0.018844185,-0.048496407,-0.039854635,-0.03664018,0.0143835405,-0.025925312,0.012939363,-0.015932538,0.019601213,-0.02180242,0.002514208,-0.013102415,0.004696488,0.023689168,-0.0070985975,0.065314084,-0.004722693,0.009934543,-0.008100204,0.044047408,0.053015284,0.058931753,0.016479926,0.023141777,0.011652415,-0.0043121506,-0.03482331,-0.00833896,0.035242587,0.0035987967,0.005846589,-0.07542332,-0.044326928,-0.02415503,-0.042416885,0.038014475,0.03761849,-0.0033425717,0.028860254,0.012566673,0.026810454,-0.016037356,-0.026134951,-0.010551812,-0.017283542,0.012252214,0.008729121,0.017365068,0.036500417,-0.05678878,-0.016479926,0.0844145,-0.02473736,-0.023724107,0.02795182,-0.020987159,-0.012962656,0.025995193,-0.034357443,-0.048496407,-0.0050080344,-0.043465078,0.0020643584,0.010621691,-0.016759446,0.025063464,-0.013346993,-0.037036162,0.00022874633,-0.014138962,-0.02210523,0.00054338627,0.033285957,-0.039644998,-0.0062367497,-0.06191328,-0.019007238,0.0037647607,0.014977517,0.016340168,-0.012054222,0.0113496035,0.0010882284,0.0120425755,0.0025506036,-0.026321298,-0.037665077,-0.017318482,-0.043511666,0.04677271,-0.025715673,-0.0683422,-0.030700415,-0.013346993,0.048775926,0.0013051461,-0.021441374,-0.018017277,0.027555835,0.0033862465,-0.06946027,-0.05539119,0.010656632,-0.031632144,0.032028127,-0.00092735986,0.01906547,0.011058439,-0.023246596,0.05087231,-0.024061859,-0.07337353,-0.015093982,-0.011407836,0.023968685,0.0020381536,0.020800812,-0.009241571,0.05040645,0.04213737,-0.026181538,0.011081732,0.021674307,0.04046026,-0.000471323,-0.025342982,-0.014569886,-0.008210847,-0.017982338,0.046283554,-0.038503632,-0.037152626,0.040204033,0.009975306,0.00056267594,0.013836151,0.02729961,0.031282745,0.03915584,0.00077158667,-0.0062891594,0.009427915,0.018867478,0.023048604,0.023782339,0.0033542183,-0.012578319,0.009346389,0.05795344,0.06140083,0.010423699,-0.017993983,-0.029628929,0.03659359,-0.017959043,0.039132547,-0.01855302,-0.039016083,-0.017400008,0.019624507,-0.0055641592,0.004300504,0.015629726,0.0047139577,0.033285957,0.006656027,0.011093378,0.03330925,0.000031140982,0.03987793,-0.01653816,-0.06564019,-0.015280328,0.016829325,-0.017865872,-0.000011527169,-0.08870044,-0.022629328,0.014034143,0.017982338,0.014441773,0.05115183,0.01698073,-0.06312452,-0.04807713,-0.042766284,-0.011291371,-0.006603617,0.07011248,0.008321489,0.021825712,0.000984137,0.036966283,0.06200645,-0.01832009,0.0013793932,0.034101218,-0.02634459,0.030933347,-0.018459847,-0.047518093,-0.037944596,0.029605636,0.034427326,-0.00021600787,0.015571493,-0.048263475,-0.0007803216,0.015548199,0.010674101,-0.001150101,0.008705827,-0.060282756,0.026251417,-0.005168175,0.05860565,0.0035318288,-0.0077042202,0.057860266,-0.005275906,0.02118515,0.02473736,-0.011367073,-0.048542995,-0.0041985963,-0.012007636,-0.00618434,0.0789173,0.009672495,0.018226916,0.0064987983,0.04844982,0.019426515,0.06112131,0.03214459,-0.0110176755,-0.072907664,-0.023491176,0.046959057,-0.0056340387,0.022268282,0.006347392,-0.005913557,0.013591573,0.06270525,0.015827717,0.003555122,-0.015396794,0.06400967,-0.007075304,0.026461056,-0.06191328,0.029256238,0.01288113,0.012147395,-0.016934143,-0.024760654,0.0049556247,-0.0025506036,0.008909643,0.037152626,0.029838568,-0.03132933,0.011285547,-0.008915465,-0.016817678,-0.029046599,0.01493093,-0.017318482,-0.014395187,-0.013708038,0.041694798,0.029489169,0.06871489,-0.042766284,-0.0026772602,-0.030118085,-0.015291975,-0.034939773,0.0064696814,0.048170302,0.008665064,0.011337956,-0.008222493,0.034124512,0.004437351,-0.033635356,0.035265878,0.012508439,-0.009853017,0.0060736975,-0.028301217,0.03820082,-0.0029407644,-0.037502024,-0.025622502,-0.031888366,0.027043385,-0.00489448,0.013999203,0.03624419,-0.020824106,-0.00724418,0.010056832,0.022000412,0.037898008,0.020346595,-0.02620483,-0.0071975933,-0.030607242,-0.0035871502,0.012543379,-0.027159851,-0.030770294,-0.030677121,0.0059048217,0.009800606,-0.010266471,0.00013766636,0.011681532,0.014267075,-0.029186359,-0.024015272,-0.013801211,-0.020358242,-0.00077595416,-0.016584747,-0.0063357456,-0.00570683,0.032633748,-0.013114062,-0.02531969,-0.02825463,0.016829325,0.012834543,-0.044699617,0.02002049,0.020800812,-0.014767878,-0.016689565,0.026624108,0.009684141,-0.009934543,0.036430538,-0.025855433,0.015967477,-0.006359039,0.011023499,-0.016305229,-0.021173503,-0.0038666683,-0.017446594,-0.030910054,0.011704825,0.037315678,0.015431734,-0.010045185,0.013824504,-0.011058439,-0.03037431,0.012648199,0.011972696,0.0010562002,0.017108843,0.008653417,-0.020509647,-0.0029465877,-0.03351889,0.019356634,-0.019310048,0.031166278,-0.019333342,-0.019880733,-0.009270687,-0.018925712,0.016212055,0.0049818293,-0.054878738,-0.0041898615,-0.045934156,-0.043930944,-0.004143275,0.002322039,0.019310048,-0.0033629532,-0.012415267,-0.01701567,0.0021429728,0.029256238,0.020288363,-0.015874304,-0.032587163,-0.023700813,0.014278721,0.0037007045,-0.012729725,-0.0023831837,0.009486149,0.0043296204,0.017714465,0.006737553,-0.019042177,0.018331734,0.015979124,0.011035145,-0.011739764,-0.0068481956,0.0165731,0.020649407,0.010051008,0.008333136,-0.02825463,0.0026335856,0.024620894,0.020300008,-0.04360484,0.006819079,0.047145404,0.045747813,0.0063765086,-0.02839439,0.01091868,-0.025785554,0.024574308,-0.017446594,0.0032057243,-0.046749417,-0.022547802,-0.01715543,0.015571493,-0.04835665,0.03221447,0.02139479,-0.0057417694,0.04479279,-0.012240567,0.0341711,-0.043208856,-0.015548199,-0.0012228921,0.01738836,0.028231338,0.003968576,-0.0055670706,-0.0037822307,-0.008624301,-0.008408839,-0.016747799,0.010161651,-0.056928538,0.024620894,0.00989378,-0.028371098,-0.012706432,-0.013149002,0.041438572,-0.018494787,-0.017795991,0.024085151,0.0045363475,-0.00885141,-0.018063864,0.0055437777,0.0028301217,0.02148796,0.0001355736,0.012100808,-0.018308442,0.012694784,-0.019892378,-0.02019519,0.0110176755,0.0065686777,-0.038154233,0.017271895,-0.015792778,0.002265262,0.0014354424,-0.010877917,0.039551824,0.013952617,-0.012030929,-0.014208841,-0.0060562277,-0.014010849,-0.015350208,0.0025258546,0.0509189,-0.034636963,-0.016852617,0.020567881,-0.018028924,0.025506034,0.019077117,-0.006562854,-0.06345063,-0.003432833,0.027416077,0.026181538,-0.016840972,-0.005788356,-0.056183156,-0.012065869,0.0053865486,0.027322903,0.022769086,-0.01646828,0.002894178,-0.016584747,0.03219118,-0.043162268,0.030420898,-0.0011653871,0.023782339,0.029722102,-0.03745544,0.003307632,0.019892378,-0.013288761,-0.038550217,0.009462856,-0.010249,0.0040996,0.0017964868,0.0098122535,-0.0165731,0.0074130553,-0.0049206847,0.026367882,0.026018485,-0.002480724,-0.015338561,-0.011233138,0.0047488976,0.004909038,-0.02590202,-0.0085660685,-0.05473898,0.027579129,-0.023246596,-0.0036075318,0.03037431,-0.020952217,0.010994382,-0.06782975,-0.0014463611,-0.024015272,0.0074945814,0.006137754,-0.025925312,-0.00257972,0.0040151626,-0.014127315,-0.019822499,0.0186229,-0.015548199,-0.0013364464,-0.007675104,-0.00989378,-0.025785554,0.018052217,0.049567893,0.010190767,0.012869484,0.013114062,-0.012811251,-0.029652221,-0.029326117,0.0012534644,0.0013422697,-0.033705235,-0.052735765,-0.015257034,0.02729961,0.00014439954,-0.00038579333,-0.033122905,-0.0056951833,0.02221005,0.0067026136,0.017691173,0.018401615,0.025226517,-0.014581532,0.0146048255,-0.037874717,-0.018168682,0.02313013,-0.0077915695,0.015885951,-0.0029043688,0.0037385558,-0.017178722,0.005042974,0.0061668702,-0.04171809,0.014663058,0.0194731,0.020917278,-0.013440167,-0.016444987,0.038666684,0.00058524124,-0.0036424715,-0.009713258,0.047564678,0.012787958,0.051943798,-0.028813668,0.0070927744,0.051897213,-0.0010875005,-0.011058439,-0.012706432,0.022116877,-0.004961448,-0.004044279,-0.023071898,0.00013939514,0.003447391,0.004384942,-0.005465163,-0.013603219,0.010976912,0.028114872,0.022408042,-0.011029322,0.0047838376,-0.050685965,0.041671503,0.0102839405,0.0123337405,-0.023106838,-0.013218882,0.015757838,0.020870691,-0.007913859,-0.00833896,0.00043128783,-0.006871489,-0.02224499,0.020276716,0.005779621,-0.011815467,0.056043398,-0.048030544,-0.005380725,0.006306629,-0.027625715,-0.023013664,-0.025296398,-0.023071898,0.015140569,0.020183543,-0.0038637568,-0.0113496035,0.014104023,0.0013495488,-0.022804026,-0.023363063,-0.0038346401,-0.008047795,-0.005968878,-0.00045931246,-0.007989562,-0.033472303,-0.006382332,0.021674307,-0.012764664,0.04623697,-0.0026903625,0.008059441,-0.020416474,-0.048729338,0.019950612,-0.014686352,0.029232945,-0.016491573,-0.017504826,0.040367085,-0.012147395,-0.021895591,0.02063776,-0.0019318784,0.015641373,-0.019275108,0.008030325,-0.0071568303,0.031073106,-0.031795196,-0.038317285,0.007028718,0.006865666,-0.011122495,0.046423312,0.01346346,0.002256527,-0.017190369,0.018389968,-0.013789564,0.020358242,-0.00016514503,-0.00025677096,0.001811045,0.025785554,-0.024923706,-0.0012774855,0.009486149,-0.0017906635,0.0009193528,0.027975112,0.035196,0.009841369,0.0088572325,0.042067487,0.024178324,0.033192787,0.021418082,0.004387853,-0.002125503,0.029139772,0.013696391,0.021243382,-0.009672495,0.025669087,-0.01445342,0.046004035,0.02795182,-0.014057436,-0.014546593,-0.011664062,0.023421295,-0.027043385,0.0024210352,-0.019496394,-0.01832009,-0.03058395,-0.020824106,-0.008583538,-0.0008654873,0.00040326323,0.008682534,0.033798408,0.016165469,-0.0007402865,0.045095604,0.008659241,-0.032074712,-0.018692778,0.01858796,-0.031422503,-0.011652415,0.0057767094,0.007034541,0.010656632,-0.0010518328,0.010668278,0.0070112483,0.043488372,0.0006751384,0.022373103,0.027695594,0.0348466,-0.038736563,0.024411255,-0.026600815,0.041298814,-0.0097714905,0.016584747,0.0062949825,-0.011483539,-0.018692778,-0.0065919706,-0.017632939,0.02927953,-0.04362813,0.019997198,-0.0043703835,-0.051384762,0.004606227,0.010959443,0.02620483,-0.015816072,0.022466276,-0.007162654,-0.0009484693,0.027555835,0.041438572,0.022431334,0.021091977,-0.027020093,-0.014162255,-0.04073978,0.014767878,-0.018028924,0.018972298,0.009829723,-0.032517284,0.03153897,0.03226106,-0.022967078,-0.056975126,0.018424908,-0.0060562277,-0.007599401,-0.021569487,-0.0509189,0.0032231943,0.019123703,-0.015455027,-0.01441848,0.017993983,0.0103945825,0.011006029,-0.035009652,-0.03629078,0.012461853,-0.044583153,-0.01038876,0.019146996,0.0016712858,-0.034077927,-0.010545989,0.031888366,-0.016561452,0.015245388,0.006778316,0.007715867,-0.00045749266,0.010842977,-0.015222095,0.011774704,0.022897199,-0.027788768,-0.013847797,0.028184751,0.010295587,0.04770444,-0.022268282,-0.005896087,-0.004597492,0.0123337405,-0.024714068,0.004466468,-0.016642978,-0.011914463,-0.049288373,0.04090283,-0.029535756,0.032074712,0.0018736453,0.02279238,0.033402424,0.016293582,0.015722899,0.009433739,0.0018780129,-0.015944183,-0.020218482,0.01701567,-0.027322903,-0.0135100465,0.016829325,-0.020556234,-0.006987955,-0.00068023376,0.006062051,0.012927717,-0.021977117,0.0036686764,-0.000661672,-0.0045509054,-0.047098815,-0.0070811277,0.021790773,-0.00825161,0.016689565,-0.019414868,-0.0027908145,-0.00082326843,0.008507835,0.051431347,-0.0027573304,0.00040945047,-0.029163064,-0.0034706842,0.027555835,0.0047488976,-0.009404623,-0.008991169,0.0038986965,0.023828926,-0.017132137,-0.0037589374,-0.0014521844,0.010010245,-0.018879125,0.029046599,0.0016086855,-0.025086759,-0.01752812,0.023502821,-0.018704426,0.026577521,-0.0009033388,-0.018902417,-0.028720494,-0.007116067,0.011244784,0.035312466,-0.004856629,-0.075842604,0.021616073,-0.029908447,0.017365068,-0.019275108,-0.0061144605,-0.047564678,0.012147395,0.002150252,-0.008577715,0.0011894081,-0.002300202,0.028138164,-0.021103624,0.03475343,0.005112854,-0.008397193,-0.007331529,-0.030234551,-0.010842977,0.028464269,-0.009748197,-0.049288373,0.01346346,0.0071393605,0.004053014,-0.0075644613,0.015361854,0.010458639,0.03810765,0.021511255,-0.0016319787,0.06074862,0.0044140583,-0.030420898,0.0059805247,0.0031940776,0.007075304,0.02282732,-0.0096608475,-0.010225708,-0.00775663,-0.016118882,-0.050173517,-0.00671426,-0.007372292,0.016444987,0.019554626,-0.03775825,0.0009804975,0.033775114,-0.018226916,0.007360646,0.01773776,0.017609647,0.025040172,0.020043785,0.032098006,0.0099927755,0.00007893296,0.004422793,0.030840173,0.013742978,0.019088764,-0.0026932743,-0.03447391,0.024714068,0.0092241,-0.027276317,0.018646194,-0.0056602433,0.002936397,0.0023453324,0.035871502,-0.0067550233,0.028580736,0.041671503,0.005581629,-0.036919694,0.011693178,0.0048071304,0.019775912,-0.014302014,-0.02176748,-0.005258436,-0.004812954,-0.021709247,-0.0064522116,0.06293818,-0.018785952,0.023607641,0.025436155,-0.024853826,-0.006300806,-0.008059441,0.021918885,-0.016619686,-0.009841369,-0.031096399,0.016514868,-0.055810466,-0.014336954,-0.0120425755,-0.03477672,-0.00016150546,-0.012391973,0.0034386562,0.0529687,-0.0033338368,0.009422093,-0.0021051215,0.018902417,0.03167873,-0.025226517,0.0061494005,-0.024387963,-0.004355825,-0.035009652,-0.015303621,0.015035749,-0.0070054247,-0.014826111,-0.002736949,0.038526926,-0.011623298,0.0039802226,0.0038550217,-0.0013750257,-0.008280726,0.03566186,0.00025604304,-0.00588444,0.037921302,0.03542893,-0.020416474,0.00014976789,0.003828817,0.029908447,-0.031096399,-0.004862452,-0.0098821325,0.013556632,0.015420087,0.0064289183,-0.038806442,-0.018634547,-0.053993598,0.01712049,-0.022629328,-0.017376715,0.023386355,-0.02927953,0.039831344,-0.010784743,-0.021942178,-0.022967078,-0.030816881,0.010091771,-0.02046306,0.03505624,0.012985949,-0.008018678,0.037152626,0.030677121,0.0125550255,0.028580736,0.038154233,0.0067957863,-0.028720494,0.027206438,0.012822897,0.031748608,-0.002853415,0.046516486,-0.024853826,-0.030257845,-0.0105052255,-0.004943978,0.010749804,-0.035452224,0.05040645,0.0031562264,0.02839439,-0.046120502,-0.00464699,-0.04213737,0.034264274,-0.0022638063,0.0016858442,-0.0109070325,0.027532542,0.008129321,-0.004087954,0.005069179,0.021208443,-0.03330925,-0.009887956,0.033285957,0.013754625,-0.021592781,-0.0027151117,0.013102415,0.008461249,0.042347006,-0.016107235,-0.018203622,0.016002417,0.000011657965,-0.013498399,-0.024131738,0.010598398,0.03482331,0.011780527,0.005083737,0.0040559256,-0.008467072,-0.027136559,0.0038841383,-0.05380725,-0.0036366482,-0.012694784,0.021138564,0.05650926,0.006306629,0.0027879027,-0.02309519,-0.0020119487,-0.02340965,0.014826111,0.00026568788,-0.00057395856,0.06619923,0.026647402,-0.021534547,-0.04530524,-0.013032536,-0.026134951,-0.003415363,0.023502821,-0.0026510553,0.015559847,-0.011000206,0.030816881,-0.041019294,0.02722973,0.011407836,0.007203417,0.0056078336,-0.005010946,-0.023630934,-0.012718078,0.026903626,0.00032173708,-0.01243856,-0.03167873,0.021289969,-0.003240664,0.012974303,-0.008717474,-0.0062542195,-0.06806268,-0.04537512,0.02183736,-0.033565477,0.01493093,0.019251816,0.01646828,-0.011605828,-0.007290766,0.013801211,0.014127315,0.009130928,0.006347392,0.029722102,0.013638158,-0.028813668,-0.010313056,-0.00046440784,-0.009125104,-0.0036570297,-0.008140967,0.012426913,0.045095604,0.012450206,0.000058960868,-0.0038462868,0.041019294,0.009963659,-0.008304019,-0.0023715373,0.005869882,-0.022955433,-0.0012687505,0.008082734,0.009358036,0.021138564,0.028953426,-0.023502821,-0.03095664,-0.023002017,0.020952217,0.0068773124,-0.014115669,0.012147395,-0.020963864,0.0019144085,-0.023071898,-0.032051418,-0.018785952,0.010592575,-0.035032947,-0.007028718,0.012357034,-0.014045789,-0.029000012,-0.009177514,0.023922099,0.028301217,-0.032470696,0.026833747,0.0053865486,0.011961049,0.018902417,-0.0052555245,0.014302014,-0.011780527,0.0042713876,-0.021755833,-0.011448599,0.009183337,0.050173517,-0.0037472907,-0.038666684,0.04486267,0.024993585,-0.03594138,0.016887557,-0.0092241,0.01671286,-0.011763058,0.019927317,-0.007931328,-0.0049265083,0.0076052244,0.039109252,0.008158437,0.029978326,-0.033565477,0.0050982954,-0.0006383788,-0.05702171,0.002455975,0.025412863,0.034800015,-0.026833747,-0.0076110475,-0.025692381,0.02115021,0.0019566275,-0.0031154633,0.03687311,-0.013207234,0.018424908,0.0040559256,0.014325308,-0.020218482,0.014150608,-0.009864663,0.038014475,0.033844996,0.025832139,-0.009986952,0.012240567,0.02941929,-0.0015533641,0.009614261,-0.0027966378,0.04428034,0.006656027,-0.012496793,0.009090165,0.010738158,-0.007762453,0.008210847,0.027485956,0.0029101921,0.03132933,0.014406834,0.018949004,0.008030325,-0.04185785,0.015769485,-0.0049992995,0.0072674733,0.04148516,-0.02955905,-0.002786447,-0.04735504,-0.010033539,-0.003176608,-0.011279724,-0.03820082,0.04230042,-0.016969083,0.036756642,0.027159851,-0.022163464,0.001206878,-0.016107235,0.016887557,0.0010249,0.0165731,-0.0044955844,-0.025273103,0.0011537404,-0.02108033,0.020917278,0.025552621,0.0014652868,0.0022929227,-0.0117106475]},{"id":"max-area-of-island","name":"Max Area of Island","description":"You are given a matrix `grid` where `grid[i]` is either a `0` (representing water) or `1` (representing land).\n    \nAn island is defined as a group of `1`'s connected horizontally or vertically. You may assume all four edges of the grid are surrounded by water.\n\nThe **area** of an island is defined as the number of cells within the island.\n\nReturn the maximum **area** of an island in `grid`. If no island exists, return `0`.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/8eeb491c-c8ff-4ed6-78ed-ce4cf87d7200/public)\n\n```java\nInput: grid = [\n  [0,1,1,0,1],\n  [1,0,1,0,1],\n  [0,1,1,0,1],\n  [0,1,0,0,1]\n]\n\nOutput: 6\n```\nExplanation: `1`'s cannot be connected diagonally, so the maximum area of the island is `6`.\n\n**Constraints:**\n* `1 <= grid.length, grid[i].length <= 50`\n","difficulty":"Medium","concepts":["Matrix DFS","Matrix BFS"],"solutions":{"python":"class Solution:\n    def maxAreaOfIsland(self, grid: List[List[int]]) -> int:\n        ROWS, COLS = len(grid), len(grid[0])\n        visit = set()\n\n        def dfs(r, c):\n            if (\n                r < 0\n                or r == ROWS\n                or c < 0\n                or c == COLS\n                or grid[r][c] == 0\n                or (r, c) in visit\n            ):\n                return 0\n            visit.add((r, c))\n            return 1 + dfs(r + 1, c) + dfs(r - 1, c) + dfs(r, c + 1) + dfs(r, c - 1)\n\n        area = 0\n        for r in range(ROWS):\n            for c in range(COLS):\n                area = max(area, dfs(r, c))\n        return area\n","javascript":"class Solution {\n    /**\n     * @param {number[][]} grid\n     * @return {number}\n     */\n    maxAreaOfIsland(grid) {\n        const ROWS = grid.length;\n        const COLS = grid[0].length;\n        const visit = new Set();\n\n        /**\n         * @param {number} r\n         * @param {number} c\n         * @return {number}\n         */\n        function dfs(r, c) {\n            if (\n                r < 0 ||\n                r === ROWS ||\n                c < 0 ||\n                c === COLS ||\n                grid[r][c] === 0 ||\n                visit.has(`${r},${c}`)\n            ) {\n                return 0;\n            }\n            visit.add(`${r},${c}`);\n            return (\n                1 +\n                dfs(r + 1, c) +\n                dfs(r - 1, c) +\n                dfs(r, c + 1) +\n                dfs(r, c - 1)\n            );\n        }\n\n        let area = 0;\n        for (let r = 0; r < ROWS; r++) {\n            for (let c = 0; c < COLS; c++) {\n                area = Math.max(area, dfs(r, c));\n            }\n        }\n        return area;\n    }\n}\n","cpp":"class Solution {\npublic:\n    int maxAreaOfIsland(vector<vector<int>>& grid) {\n        int ROWS = grid.size();\n        int COLS = grid[0].size();\n        unordered_set<string> visit;\n\n        int area = 0;\n        for (int r = 0; r < ROWS; r++) {\n            for (int c = 0; c < COLS; c++) {\n                if (grid[r][c] == 1 && visit.count(to_string(r) + \",\" + to_string(c)) == 0) {\n                    area = max(area, Dfs(grid, r, c, visit));\n                }\n            }\n        }\n        return area;\n    }\n\n    int Dfs(vector<vector<int>>& grid, int r, int c, unordered_set<string>& visit) {\n        if (r < 0 || r == grid.size() || c < 0 || c == grid[0].size() || grid[r][c] == 0 || visit.count(to_string(r) + \",\" + to_string(c))) {\n            return 0;\n        }\n        visit.insert(to_string(r) + \",\" + to_string(c));\n        return 1 + Dfs(grid, r + 1, c, visit) + Dfs(grid, r - 1, c, visit) + Dfs(grid, r, c + 1, visit) + Dfs(grid, r, c - 1, visit);\n    }\n};\n","java":"class Solution {\n    \n    public int maxAreaOfIsland(int[][] grid) {\n        int ROWS = grid.length;\n        int COLS = grid[0].length;\n        Set<String> visit = new HashSet<>();\n\n        int area = 0;\n        for (int r = 0; r < ROWS; r++) {\n            for (int c = 0; c < COLS; c++) {\n                area = Math.max(area, dfs(grid, visit, r, c));\n            }\n        }\n        return area;\n    }\n\n    private int dfs(int[][] grid, Set<String> visit, int r, int c) {\n        int ROWS = grid.length;\n        int COLS = grid[0].length;\n\n        if (r < 0 || r == ROWS || c < 0 || c == COLS || grid[r][c] == 0 || visit.contains(r + \",\" + c)) {\n            return 0;\n        }\n        visit.add(r + \",\" + c);\n        return 1 + dfs(grid, visit, r + 1, c) + dfs(grid, visit, r - 1, c) + dfs(grid, visit, r, c + 1) + dfs(grid, visit, r, c - 1);\n    }\n}\n","csharp":"public class Solution {\n    \n    public int MaxAreaOfIsland(int[][] grid) {\n        int ROWS = grid.Length;\n        int COLS = grid[0].Length;\n        HashSet<string> visit = new HashSet<string>();\n\n        int area = 0;\n        for (int r = 0; r < ROWS; r++) {\n            for (int c = 0; c < COLS; c++) {\n                if (grid[r][c] == 1 && !visit.Contains(r + \",\" + c)) {\n                    area = Math.Max(area, Dfs(grid, r, c, visit));\n                }\n            }\n        }\n        return area;\n    }\n\n    private int Dfs(int[][] grid, int r, int c, HashSet<string> visit) {\n        if (r < 0 || r == grid.Length || c < 0 || c == grid[0].Length || grid[r][c] == 0 || visit.Contains(r + \",\" + c)) {\n            return 0;\n        }\n        visit.Add(r + \",\" + c);\n        return 1 + Dfs(grid, r + 1, c, visit) + Dfs(grid, r - 1, c, visit) + Dfs(grid, r, c + 1, visit) + Dfs(grid, r, c - 1, visit);\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def maxAreaOfIsland(self, grid: List[List[int]]) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[][]} grid\n     * @return {number}\n     */\n    maxAreaOfIsland(grid) {}\n}\n","cpp":"class Solution {\npublic:\n    int maxAreaOfIsland(vector<vector<int>>& grid) {\n        \n    }\n};\n","java":"class Solution {\n    public int maxAreaOfIsland(int[][] grid) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int MaxAreaOfIsland(int[][] grid) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/iJGr1OtmH0c","embedding":[0.00078865467,-0.013331505,0.098441385,0.017209956,-0.05825241,-0.015319346,0.004618491,-0.04129093,-0.015243722,-0.0026765643,0.015006045,-0.043192346,-0.03539223,0.0007366629,0.033469208,0.0032815596,-0.014411854,-0.0047427313,0.015503006,0.025431411,0.013180256,-0.013385522,0.020170113,0.004456439,0.028132284,0.01576229,-0.0086319875,0.056739923,0.04280342,0.0057744645,0.007178918,0.0007677229,-0.008043197,-0.027354432,-0.0051424606,-0.017728524,-0.00019412518,-0.009474659,0.0010796736,0.005785268,0.0150600625,-0.024048565,-0.007097892,-0.014789975,0.033209924,-0.013817661,0.025215343,0.016032377,0.0019716367,0.021736618,0.015416577,0.00730856,-0.0014908814,-0.054276727,-0.02450231,-0.0111492,-0.024761595,0.03044423,0.020753501,0.028477995,-0.00044901998,-0.0008352447,0.018214682,0.03552187,-0.0044429344,0.040080942,0.031611007,0.002784599,0.0031924308,-0.03180547,-0.09213215,-0.03130851,0.019413868,-0.053109948,0.009053323,-0.038914166,0.017922986,-0.03171904,0.034419913,0.017426027,0.022211973,-0.0424361,0.034916874,-0.013914893,0.014022928,-0.0033274745,-0.0034139024,0.023270713,-0.054060657,-0.030120125,-0.042220034,-0.0102146985,0.022925003,0.003589459,0.008189044,0.009118144,0.037466496,0.04593643,-0.006147185,0.020764304,-0.0151248835,-0.023249106,0.0117974095,0.045072153,0.018895302,0.006222809,-0.03236725,0.0337501,0.0053801374,0.0076164594,-0.012402405,-0.009798764,0.030249767,0.00023733913,-0.007859537,-0.010430768,-0.024329456,-0.026317298,0.053931013,-0.009782558,0.007978376,0.008653594,-0.026079621,-0.012953383,-0.00030806824,-0.000050092738,-0.015308543,-0.018808873,-0.03958398,0.031394936,-0.0042538736,-0.0027278808,0.048572484,-0.014487478,-0.03452795,-0.0069520446,-0.001762319,0.025928373,0.023810888,0.007821726,0.008475336,0.06326523,0.014919617,0.0022781857,-0.0011451697,-0.017361205,-0.009004707,0.07065482,0.04245771,-0.005779866,0.044726443,-0.03351242,0.01746924,0.02715997,-0.03379331,-0.056912776,0.047621775,0.009101939,0.012931775,-0.029061384,-0.018279502,-0.06922875,-0.03301546,0.0040053935,-0.0133963255,0.009442248,-0.016831836,-0.0050155194,-0.059505615,0.0042052576,0.008642791,-0.05552993,0.03787703,-0.04422948,0.02422142,-0.034484737,-0.03409581,-0.0059311152,-0.023141071,0.014941225,-0.046843924,-0.0288021,-0.036839895,-0.03459277,0.04265217,0.04589322,0.06080203,-0.05466565,-0.032777783,0.023292322,0.012099907,-0.019932436,0.016950672,-0.008718415,-0.0105388025,0.009463856,0.04973926,-0.0042592753,-0.039259877,0.01886289,-0.012207942,-0.028931743,0.001415257,0.02594998,0.026792651,-0.030465838,-0.017015494,0.026965506,0.026857473,-0.04865891,-0.0063740583,-0.014325426,0.0015557023,-0.024545526,0.018290306,-0.013417932,0.03975684,0.042608958,0.002719778,0.022665719,-0.041053254,0.034549557,-0.004475345,0.021606976,0.014163373,0.015891932,0.041982356,0.013169453,0.04237128,0.030076912,0.034506343,-0.038482025,0.024696775,-0.055443503,0.0135583775,-0.039972905,-0.014487478,-0.009917602,-0.0077082887,0.016983084,0.051683888,-0.014487478,0.015049259,-0.01576229,-0.037768994,-0.018322716,-0.010365947,0.058295622,-0.00001834694,-0.011462501,0.017642096,0.03815792,0.017566472,-0.069920175,-0.007886547,0.0043403013,0.0004534089,-0.030141732,0.03986487,-0.005085742,-0.017922986,0.055227432,-0.086168624,-0.060153823,0.036407758,-0.0025091101,-0.01693987,0.043689307,-0.045417864,0.021012785,-0.030984405,-0.009312607,0.019338245,-0.027181577,0.050430685,0.0033328761,0.0063254423,0.027181577,-0.03472241,-0.0891936,0.005453061,0.01848477,0.02558266,0.046843924,0.020386182,-0.012823741,0.0010999301,-0.01814986,0.0033247736,-0.041939143,-0.033382777,-0.0036569808,-0.006984455,0.02988245,0.003270756,-0.009674524,-0.06253059,-0.00873462,0.05410387,-0.03357724,0.028024249,0.020548236,-0.017750131,0.03145976,-0.05280745,-0.005215384,0.017706918,0.010906122,0.013763644,0.0039783847,-0.0121863345,0.0052748034,-0.0007116798,0.05881419,-0.026619796,-0.050128184,-0.004027,-0.0012397002,-0.01226196,0.013860876,-0.001102631,0.023983745,0.05924633,0.021790637,-0.0067521804,-0.0647345,-0.03143815,0.027851393,-0.012229549,-0.03617008,-0.02687908,0.03016334,0.019651545,0.018106647,-0.05332602,0.009220777,-0.017922986,0.019435475,-0.026965506,0.018106647,0.0014355135,0.026274083,-0.014941225,0.0075894506,0.0076920837,0.03744489,0.040707543,0.01790138,0.008902075,-0.039281484,-0.043581273,-0.004642799,-0.02623087,0.016053984,-0.026036408,-0.0086481925,-0.011721785,-0.00857797,-0.052202456,0.011559732,-0.026338905,-0.008675201,0.020742698,-0.022622505,-0.032107968,0.026554974,-0.03668865,0.012337584,0.03323153,0.05630778,0.0066873594,0.016615765,-0.056264568,-0.03288582,0.0052369907,-0.017145136,-0.0060499534,0.029925663,-0.005612412,-0.007638066,-0.0025739311,0.05431994,-0.0075894506,0.010338939,0.03323153,0.025993193,0.010787283,-0.005004716,-0.04939355,-0.021639388,0.032043148,0.005833884,0.02223358,0.003143815,0.04680071,0.003459817,0.019251816,0.0151897045,0.0016137711,0.037401676,0.014703548,0.0150924735,0.0065955296,0.00087103125,0.0033436797,-0.043365203,0.010117467,0.018592803,-0.034635983,-0.04524501,-0.015448988,-0.031546187,0.004224164,-0.02651176,0.0005030374,-0.00020999281,-0.037790604,0.01783656,-0.034679197,-0.0028035052,-0.009669122,0.048140343,0.016388891,-0.0009918953,0.031027619,0.043818947,0.040340226,-0.025064092,-0.062141664,0.010970943,0.03759614,0.038244348,0.03636454,0.018916909,-0.03208636,0.035478655,0.04209039,0.02019172,0.019349048,0.016702194,-0.014174176,-0.04753535,0.014465871,0.008934485,0.034549557,0.004162044,0.080291525,0.03465759,0.0023835197,0.02121805,0.016345678,-0.050257828,0.03528419,0.0052450937,0.0075948522,-0.015394971,0.016388891,0.047924273,-0.032475285,0.0325185,0.001972987,0.03001209,-0.02316268,0.02257929,0.01483319,0.020008061,-0.012478029,0.002511811,-0.008993904,0.010814291,-0.04129093,-0.013137042,0.011084379,0.010198493,-0.0501714,0.011473305,-0.013018204,-0.012996596,0.0063092373,-0.03137333,-0.008410515,0.00016804489,-0.014930421,-0.027916213,0.023594819,-0.019424671,-0.01929503,-0.043149132,-0.014843993,-0.011764999,-0.06153667,0.025539447,0.01836593,-0.007259944,0.0050398274,-0.0055908053,-0.0408804,0.02022413,-0.011494911,0.005239692,0.029126205,-0.012510439,-0.019705562,0.006989857,0.034182236,-0.0049128863,-0.030141732,-0.021304479,0.010198493,0.026144441,-0.06417272,0.039994515,-0.01443346,-0.0028548217,0.016637372,0.01090072,-0.009760952,-0.00015082683,0.006293032,-0.029255847,-0.01585952,-0.023400355,-0.031913504,0.0019500296,0.029493524,-0.002734633,-0.05181353,-0.023832494,-0.0297312,0.0057474556,-0.023486784,-0.03368528,-0.006903429,0.050041758,-0.010754873,0.018960122,-0.011322056,-0.0043484042,0.009328812,0.0039000593,0.019651545,0.019122174,-0.004186352,0.0010925027,0.0008318686,-0.0055421893,0.025777124,0.004983109,-0.007281551,-0.008313284,-0.025712302,-0.018473964,0.0033382778,-0.036429364,0.004734629,0.043343596,0.0056286175,0.039692014,-0.025431411,0.041939143,-0.031783864,-0.012715706,-0.013450343,-0.020051274,0.00083929603,0.03658061,-0.011786606,0.025453018,0.020893946,0.026792651,-0.010371349,-0.00026806156,0.0030762933,-0.008540157,0.029687986,-0.008923681,-0.012510439,-0.03833078,-0.0043159937,0.022006705,-0.02294661,0.014130963,-0.00331397,0.029839234,-0.0021201845,-0.017566472,-0.013709627,0.016388891,0.039065413,-0.02093716,-0.05224567,0.019392261,0.026965506,0.019024942,-0.024134994,-0.017112726,-0.011451698,0.05903026,0.003254551,0.014930421,0.024739988,0.01025251,0.015276132,0.008129625,-0.039605588,-0.013353111,0.011386877,0.05211603,0.0022093134,0.00051282806,-0.016669782,-0.043559667,0.015837913,-0.040275406,0.0036839896,-0.029407095,-0.014552299,0.031502973,0.030552264,-0.020008061,0.00923158,-0.0051802727,0.047103208,0.021012785,-0.031502973,-0.026360512,-0.046541426,0.008189044,-0.0018203878,0.00764887,-0.032345645,-0.004920989,0.013947303,0.012337584,0.006293032,-0.017458437,-0.006001338,0.011127593,0.047621775,-0.00755704,0.035024907,-0.017415224,-0.015222115,-0.04775142,0.023746068,0.03444152,0.024026958,-0.012315976,-0.003759614,0.00941524,-0.0045968844,0.019154584,0.0023794684,-0.011257235,0.0062444163,0.0057582594,0.0232275,-0.05704242,-0.0069790534,0.009318009,-0.007162713,0.005339624,0.017253172,0.004918288,0.0019054653,-0.042414494,-0.010198493,0.0077352975,0.027678536,0.008151232,0.045201797,-0.019586725,0.031027619,0.021671798,-0.03145976,0.018679231,-0.011667768,-0.042695384,-0.03738007,-0.0121215135,0.014282212,0.012650885,0.012834544,0.03180547,-0.039692014,0.022536077,-0.022968216,-0.0004571226,-0.020850733,-0.032864213,0.0019405766,0.028542817,-0.03722882,-0.0009324761,0.017534062,0.007767708,0.0051046484,0.006438879,0.005639421,-0.12462904,0.009166759,0.014703548,0.004748133,0.004143138,-0.02257929,-0.013072221,-0.0055637965,-0.014887207,0.03392295,-0.006233613,0.03861167,-0.022903396,-0.048140343,-0.009372026,-0.014843993,0.042630564,0.05881419,0.04187432,-0.008831852,-0.03722882,-0.0030330794,-0.021293676,-0.039000593,-0.0085023455,0.0054827705,0.0051181526,-0.019489493,-0.019100567,0.016734604,-0.033598848,-0.0037082974,-0.006757582,0.033317957,0.009096537,0.02586355,-0.042565744,0.010414563,-0.0064118705,-0.01343954,-0.019316638,-0.04187432,0.032475285,0.020418594,-0.016734604,-0.015384167,-0.007535433,-0.04044826,-0.0014598214,-0.058554906,0.014012124,-0.03022816,0.0052639996,0.006066159,-0.01619443,0.01682103,0.0597649,-0.01783656,-0.0077569047,0.033469208,0.005131657,0.0057096435,0.027246397,-0.010338939,-0.0073841843,0.02895335,-0.017512454,-0.055573143,-0.0048021507,-0.0039000593,-0.018916909,0.021736618,-0.015243722,0.028132284,0.013504361,-0.0031195073,-0.045633934,-0.0153517565,-0.022168757,-0.018916909,-0.0011465203,-0.027116755,-0.0017366607,0.0014557701,0.027354432,0.000997297,-0.018636018,0.03658061,0.008091813,0.052850664,-0.050517112,-0.015405774,-0.020775108,0.002047261,0.008108018,0.035759546,0.015362561,-0.009923004,-0.014552299,-0.025841944,-0.003986487,0.020483414,-0.008108018,0.034225453,0.022428041,-0.020893946,0.02821871,-0.004494251,-0.029061384,-0.011062772,0.030746728,-0.008318686,0.015891932,-0.03308028,0.008848057,0.055443503,-0.004518559,0.0077461014,-0.023141071,0.01886289,0.032583322,0.020267345,0.012586064,-0.04215521,0.010425366,-0.04852927,0.0418095,0.018473964,0.013709627,0.026274083,0.052504953,0.021693405,0.012283566,-0.021639388,0.01644291,0.061147746,0.0061147744,0.013763644,-0.024005352,-0.003951376,0.007967573,0.020321362,0.031783864,0.0075462367,-0.015016849,-0.047146425,-0.005952722,-0.0036920921,0.0044807466,0.01687505,-0.028694065,0.02722479,-0.009334214,-0.003843341,-0.012910169,0.023681246,0.015481398,-0.0014098552,0.039778445,0.028413175,-0.0007623212,-0.011775802,0.0018690035,0.012964186,-0.014595512,0.0031924308,0.0049750064,-0.056523852,-0.026252476,-0.030033698,-0.00013048589,0.011030362,0.002545572,-0.02750568,0.0042754803,-0.03137333,0.02923424,-0.010765676,-0.019662349,0.0013619148,0.036775075,0.025669089,0.0017407121,-0.024891237,0.016421303,-0.029774414,-0.04209039,0.03846042,0.024005352,0.0022255187,0.006784591,0.028672459,-0.04258735,0.02286018,-0.015891932,-0.004642799,0.032410465,0.015999965,-0.017080314,0.03143815,0.017274778,0.0118298195,-0.01975958,0.004307891,0.0030222759,-0.021034392,0.00021877064,-0.020688681,0.0014665736,0.0075030224,-0.037768994,-0.02450231,-0.011181611,0.009804166,-0.014995242,-0.00529641,0.024372669,0.009804166,0.024134994,0.017263975,-0.010241707,-0.02644694,0.01843075,0.009253188,-0.0036866905,0.011084379,-0.006881822,-0.009188367,0.041204505,0.02112082,0.015232919,0.041766286,0.0058987048,0.024243027,0.023573212,-0.0018609009,0.0064658877,-0.035781153,-0.013882482,0.013083024,-0.0016232241,-0.01740442,-0.0014341631,-0.02152055,-0.028758885,-0.034679197,-0.04576358,0.04960962,-0.030033698,0.013655609,0.019921632,0.030789942,-0.017015494,0.03696954,-0.010652239,-0.0038163322,-0.0073301666,-0.009339616,-0.0029844637,-0.00029895277,-0.014973635,-0.01464953,-0.03859006,-0.024934452,0.028413175,0.0017609686,-0.002954754,-0.0062444163,0.019273423,0.021650191,-0.042414494,0.027808178,-0.0032464482,0.006314639,0.010733265,-0.023962136,-0.028845314,0.00068399584,-0.018409144,0.019316638,-0.000065158536,0.022557683,0.013137042,-0.053282805,0.019273423,0.0022430744,-0.02350839,-0.005361231,-0.010760275,0.011667768,0.013914893,0.035543475,0.05643742,0.033382777,0.025128914,0.009982423,0.021142427,0.0060229446,0.047924273,0.02901817,0.0062606214,-0.020451004,-0.015362561,0.037574533,-0.016864246,-0.016270053,-0.043818947,-0.008437525,-0.016648175,-0.0039567775,0.0066009313,-0.057993125,-0.0019783888,0.02452392,-0.029558344,0.0056502246,-0.014919617,0.011635357,0.028715672,-0.050214615,-0.04245771,0.01074947,0.002808907,0.008383507,-0.0059797307,-0.013137042,-0.028369961,0.029990483,0.030336196,0.025820337,0.014130963,0.0012471277,0.0023335535,0.010398357,0.034549557,-0.020991178,0.040902007,0.0030141734,0.01143009,-0.03266975,-0.01529774,0.030552264,0.006249818,0.008869664,0.007033071,0.0022930405,0.015989162,-0.037855424,-0.01139768,-0.0048237573,0.011873034,0.016561748,0.0064550843,-0.038482025,0.019705562,-0.009577292,-0.005137059,-0.0038973584,-0.011343663,-0.0103767505,-0.014779172,-0.010527999,-0.0017974303,0.0053720344,-0.009069528,-0.028369961,-0.01111679,0.043581273,0.017717721,-0.028996563,-0.014163373,-0.018884497,0.005952722,-0.018495573,-0.019305835,-0.01043617,-0.018214682,-0.03629972,-0.02394053,0.04094522,0.0012349738,0.007659673,-0.013147845,0.00861038,0.01678862,-0.0065307086,-0.011203217,-0.010587418,-0.01616202,0.0017353103,-0.011754195,0.037358463,0.038438812,0.031286903,-0.020656269,-0.021758225,0.016961476,0.03387974,0.01846316,-0.02644694,-0.024415884,0.003975684,0.0018919609,-0.025128914,-0.05323959,-0.012856151,-0.0047616377,0.014163373,0.0033193717,-0.020969572,0.0020337566,-0.03202154,0.022708932,-0.0010378101,0.040080942,0.027354432,-0.06153667,0.026468547,0.0041890526,0.013958107,0.003038481,0.0020837227,-0.034571163,-0.00318973,0.044337515,0.0041242316,0.017609686,0.0015813606,-0.017317992,-0.006735975,0.00789735,-0.036904715,-0.065858066,-0.028996563,-0.038309168,-0.0019918932,0.005323419,-0.023918923,-0.031913504,0.010657641,-0.003359885,-0.04323556,-0.03508973,0.0069142324,-0.026533367,0.016572552,-0.012272763,0.042263247,0.048356414,0.038352385,-0.011559732,0.005844687,0.052072816,0.029342275,0.009280196,0.0020053976,0.029990483,-0.00963131,-0.007141106,-0.065296285,0.01143009,-0.0260148,-0.017912183,-0.014487478,-0.009798764,-0.008054,0.00039972906,-0.0028548217,0.013601592,-0.052288882,0.002830514,0.030422622,0.0037164,-0.004788646,0.0071897213,0.020796714,0.004577978,0.01607559,-0.01508167,0.004618491,0.01158134,0.010722462,0.008162036,0.0054152487,-0.0101336725,-0.012812938,-0.012272763,0.025496233,-0.02523695,0.034333486,0.0025671788,0.014357836,-0.033944562,0.01561104,-0.0018406443,0.014055339,-0.0032005333,-0.02929906,-0.037488103,0.0038919568,0.0008494243,-0.010403759,-0.016950672,-0.03094119,0.01783656,-0.021660995,-0.015146491,0.0343767,-0.009307205,-0.031049225,-0.027030328,0.021628583,-0.019089764,-0.027030328,-0.06806198,-0.006735975,-0.043473236,-0.0086968085,0.016669782,-0.018139057,0.0070006605,0.000817689,-0.034744017,0.030055305,-0.015470595,0.017361205,-0.0402538,0.0016704894,0.041550215,0.0018217382,-0.0053720344,-0.014768369,-0.038265955,0.0065847263,0.009544882,0.017372008,-0.029536737,-0.0037893236,0.005255897,0.02450231,-0.015654255,-0.034268666,0.018214682,-0.018376734,-0.014293015,0.016810227,0.008723817,-0.001009451,0.044942513,0.024545526,-0.013958107,-0.010889917,0.021887867,0.026209263,0.008432123,-0.0019932436,0.0065847263,-0.010576615,-0.012888562,-0.0023389552,-0.009690729,-0.0031600203,0.010987148,0.0050533316,0.014595512,0.0068494114,-0.009744747,-0.031481367,0.018063432,0.0032869612,0.008383507,-0.01025251,0.014638727,0.029968876,0.009393633,0.013277487,0.00957189,-0.005091144,0.01972717,0.03552187,0.00069041044,0.00005840636,0.006233613,0.01687505,-0.0010479384,0.019781187,0.0032329438,0.011192414,-0.029169418,0.02288179,-0.026468547,-0.030098518,-0.0014571205,0.006887224,0.005688037,0.0037812209,0.023551604,0.01080889,0.009814969,-0.04796749,-0.031827077,-0.006001338,-0.015157294,0.006633342,-0.037833817,0.0067791888,0.005871696,-0.0017339599,-0.0039999913,-0.0069142324,0.013180256,-0.0052099824,0.010744069,-0.024826417,-0.017631292,0.011268038,-0.060197037,-0.0059149098,-0.0222984,-0.021239659,0.012834544,-0.021077605,0.028823707,-0.02286018,-0.0118622305,-0.031546187,-0.04051308,0.07290194,0.01839834,0.014109355,-0.025453018,0.017317992,0.012207942,-0.0013214017,-0.019457083,-0.014141766,-0.026209263,0.0067143682,0.041766286,0.0066873594,0.04446716,-0.04286824,-0.043408416,0.013180256,0.0085023455,0.02286018,-0.016518533,0.039216664,0.061709527,-0.033620454,-0.037185606,0.017112726,-0.0014071544,-0.023076251,0.04887498,0.022168757,0.015945949,-0.011084379,0.027246397,-0.0678459,0.0007629964,0.034225453,-0.0024956057,-0.0007332868,0.020083684,0.004772441,-0.002099928,0.014314622,-0.017112726,-0.008307883,-0.015773093,0.017199153,-0.0013922995,-0.01790138,0.0027791974,-0.036494184,-0.046843924,-0.051986385,0.00066610257,-0.03044423,-0.017037101,-0.024696775,-0.012467226,-0.0222984,-0.030076912,0.006082364,0.006568521,-0.0045536705,0.028326746,0.044856083,-0.00031431398,-0.03709918,0.017523259,-0.03165422,0.013245077,0.01226196,0.026922293,-0.007967573,0.042846635,0.030854763,-0.0030276775,0.000072796945,0.034506343,0.010965541,0.00139365,-0.03573794,0.0103443405,-0.017274778,0.016151216,0.018257895,0.0022741342,0.017263975,0.05181353,-0.008124223,-0.031178867,-0.015945949,0.010625231,-0.014195784,-0.017263975,-0.007006062,-0.015989162,-0.0059419186,-0.019986453,-0.026835864,-0.012272763,0.0074328,-0.01923021,-0.034614377,0.030833155,0.002480751,-0.025755515,-0.041377362,-0.016388891,0.01347195,0.0051856744,0.012153924,0.000024772062,-0.007908153,0.031416543,0.010663043,0.01347195,-0.02465356,0.0041512405,-0.056178138,0.018646821,0.0008865613,0.031135654,0.0065361103,-0.011991872,0.03059548,0.0008777834,-0.048399627,0.038265955,0.004626594,0.0003666434,-0.0046779104,-0.0325185,-0.013083024,0.018668428,0.035845973,0.03001209,0.03992969,-0.0072113285,0.0048048515,0.016777817,-0.023465177,-0.04632536,0.027311219,-0.008037795,0.006995259,-0.03951916,-0.0047022183,-0.017966202,-0.002440238,-0.008054,-0.0016826433,0.0022930405,-0.0130074,0.01780415,-0.011764999,0.0075084246,-0.055918857,0.017231563,-0.023357142,0.055702787,0.020353772,-0.015675861,-0.015438185,0.034355093,0.0022984422,-0.0029574549,0.020202523,-0.00396488,0.01846316,0.021715011,-0.008740022,0.008680603,0.011473305,-0.018031022,0.01412016,0.009447651,0.026684616,0.029104598,-0.006482093,0.011408484,0.012218745,-0.013320701,0.00030553614,-0.03357724,0.003081695,0.030746728,-0.026274083,-0.010646838,-0.004667107,-0.009577292,-0.006989857,-0.0033058675,0.0020364576,0.03152458,0.030768335,0.034333486,0.026360512,0.011656964,0.00861038,-0.03087637,0.062487375,0.016108,0.030768335,0.014271408,0.0077623064,0.009496266,-0.0134611465,0.013925697,0.004054009,0.0077623064,0.027181577,0.017696114]},{"id":"surrounded-regions","name":"Surrounded Regions","description":"You are given a 2-D matrix `board` containing `'X'` and `'O'` characters.\n\nIf a continous, four-directionally connected group of `'O'`s is surrounded by `'X'`s, it is considered to be **surrounded**. \n\nChange all **surrounded** regions of `'O'`s to `'X'`s and do so **in-place** by modifying the input board.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/9e6916bf-0e25-4e15-9619-cbc42d2d8f00/public)\n\n```java\nInput: board = [\n  [\"X\",\"X\",\"X\",\"X\"],\n  [\"X\",\"O\",\"O\",\"X\"],\n  [\"X\",\"O\",\"O\",\"X\"],\n  [\"X\",\"X\",\"X\",\"O\"]\n]\n\nOutput: [\n  [\"X\",\"X\",\"X\",\"X\"],\n  [\"X\",\"X\",\"X\",\"X\"],\n  [\"X\",\"X\",\"X\",\"X\"],\n  [\"X\",\"X\",\"X\",\"O\"]\n]\n```\n\nExplanation: Note that regions that are on the border are not considered surrounded regions.\n\n**Constraints:**\n* `1 <= board.length, board[i].length <= 200`\n* `board[i][j]` is `'X'` or `'O'`.\n","difficulty":"Medium","concepts":["Matrix DFS"],"solutions":{"python":"class Solution:\n    def solve(self, board: List[List[str]]) -> None:\n        ROWS, COLS = len(board), len(board[0])\n\n        def capture(r, c):\n            if r < 0 or c < 0 or r == ROWS or c == COLS or board[r][c] != \"O\":\n                return\n            board[r][c] = \"T\"\n            capture(r + 1, c)\n            capture(r - 1, c)\n            capture(r, c + 1)\n            capture(r, c - 1)\n\n        for r in range(ROWS):\n            for c in range(COLS):\n                if board[r][c] == \"O\" and (r in [0, ROWS - 1] or c in [0, COLS - 1]):\n                    capture(r, c)\n\n        for r in range(ROWS):\n            for c in range(COLS):\n                if board[r][c] == \"O\":\n                    board[r][c] = \"X\"\n\n        for r in range(ROWS):\n            for c in range(COLS):\n                if board[r][c] == \"T\":\n                    board[r][c] = \"O\"\n","javascript":"class Solution {\n    /**\n     * @param {character[][]} board\n     * @return {void} Do not return anything, modify board in-place instead.\n     */\n    solve(board) {\n        const ROWS = board.length;\n        if (ROWS === 0) return;\n        const COLS = board[0].length;\n\n        for (let r = 0; r < ROWS; r++) {\n            for (let c = 0; c < COLS; c++) {\n                if (\n                    board[r][c] === 'O' &&\n                    (r === 0 || c === 0 || r === ROWS - 1 || c === COLS - 1)\n                ) {\n                    this.capture(board, r, c);\n                }\n            }\n        }\n\n        for (let r = 0; r < ROWS; r++) {\n            for (let c = 0; c < COLS; c++) {\n                if (board[r][c] === 'O') {\n                    board[r][c] = 'X';\n                }\n            }\n        }\n\n        for (let r = 0; r < ROWS; r++) {\n            for (let c = 0; c < COLS; c++) {\n                if (board[r][c] === 'T') {\n                    board[r][c] = 'O';\n                }\n            }\n        }\n    }\n\n    /**\n     * @param {character[][]} board\n     * @param {number} r\n     * @param {number} c\n     * @return {void}\n     */\n    capture(board, r, c) {\n        const ROWS = board.length;\n        const COLS = board[0].length;\n\n        if (r < 0 || c < 0 || r === ROWS || c === COLS || board[r][c] !== 'O') {\n            return;\n        }\n        board[r][c] = 'T';\n        this.capture(board, r + 1, c);\n        this.capture(board, r - 1, c);\n        this.capture(board, r, c + 1);\n        this.capture(board, r, c - 1);\n    }\n}\n","cpp":"class Solution {\npublic:\n    void solve(vector<vector<char>>& board) {\n        int ROWS = board.size();\n        if (ROWS == 0) return;\n        int COLS = board[0].size();\n\n        for (int r = 0; r < ROWS; r++) {\n            for (int c = 0; c < COLS; c++) {\n                if (board[r][c] == 'O' && (r == 0 || c == 0 || r == ROWS - 1 || c == COLS - 1)) {\n                    capture(board, r, c);\n                }\n            }\n        }\n\n        for (int r = 0; r < ROWS; r++) {\n            for (int c = 0; c < COLS; c++) {\n                if (board[r][c] == 'O') {\n                    board[r][c] = 'X';\n                }\n            }\n        }\n\n        for (int r = 0; r < ROWS; r++) {\n            for (int c = 0; c < COLS; c++) {\n                if (board[r][c] == 'T') {\n                    board[r][c] = 'O';\n                }\n            }\n        }\n    }\n\nprivate:\n    void capture(vector<vector<char>>& board, int r, int c) {\n        int ROWS = board.size();\n        int COLS = board[0].size();\n\n        if (r < 0 || c < 0 || r == ROWS || c == COLS || board[r][c] != 'O') {\n            return;\n        }\n        board[r][c] = 'T';\n        capture(board, r + 1, c);\n        capture(board, r - 1, c);\n        capture(board, r, c + 1);\n        capture(board, r, c - 1);\n    }\n};\n","java":"class Solution {\n    \n    public void solve(char[][] board) {\n        int ROWS = board.length;\n        if (ROWS == 0) return;\n        int COLS = board[0].length;\n\n        for (int r = 0; r < ROWS; r++) {\n            for (int c = 0; c < COLS; c++) {\n                if (board[r][c] == 'O' && (r == 0 || c == 0 || r == ROWS - 1 || c == COLS - 1)) {\n                    capture(board, r, c);\n                }\n            }\n        }\n\n        for (int r = 0; r < ROWS; r++) {\n            for (int c = 0; c < COLS; c++) {\n                if (board[r][c] == 'O') {\n                    board[r][c] = 'X';\n                }\n            }\n        }\n\n        for (int r = 0; r < ROWS; r++) {\n            for (int c = 0; c < COLS; c++) {\n                if (board[r][c] == 'T') {\n                    board[r][c] = 'O';\n                }\n            }\n        }\n    }\n\n    private void capture(char[][] board, int r, int c) {\n        int ROWS = board.length;\n        int COLS = board[0].length;\n\n        if (r < 0 || c < 0 || r == ROWS || c == COLS || board[r][c] != 'O') {\n            return;\n        }\n        board[r][c] = 'T';\n        capture(board, r + 1, c);\n        capture(board, r - 1, c);\n        capture(board, r, c + 1);\n        capture(board, r, c - 1);\n    }\n}\n","csharp":"public class Solution {\n    \n    public void Solve(char[][] board) {\n        int ROWS = board.Length;\n        if (ROWS == 0) return;\n        int COLS = board[0].Length;\n\n        for (int r = 0; r < ROWS; r++) {\n            for (int c = 0; c < COLS; c++) {\n                if (board[r][c] == 'O' && (r == 0 || c == 0 || r == ROWS - 1 || c == COLS - 1)) {\n                    Capture(board, r, c);\n                }\n            }\n        }\n\n        for (int r = 0; r < ROWS; r++) {\n            for (int c = 0; c < COLS; c++) {\n                if (board[r][c] == 'O') {\n                    board[r][c] = 'X';\n                }\n            }\n        }\n\n        for (int r = 0; r < ROWS; r++) {\n            for (int c = 0; c < COLS; c++) {\n                if (board[r][c] == 'T') {\n                    board[r][c] = 'O';\n                }\n            }\n        }\n    }\n\n    private void Capture(char[][] board, int r, int c) {\n        int ROWS = board.Length;\n        int COLS = board[0].Length;\n\n        if (r < 0 || c < 0 || r == ROWS || c == COLS || board[r][c] != 'O') {\n            return;\n        }\n        board[r][c] = 'T';\n        Capture(board, r + 1, c);\n        Capture(board, r - 1, c);\n        Capture(board, r, c + 1);\n        Capture(board, r, c - 1);\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def solve(self, board: List[List[str]]) -> None:\n        ","javascript":"class Solution {\n    /**\n     * @param {character[][]} board\n     * @return {void} Do not return anything, modify board in-place instead.\n     */\n    solve(board) {}\n}\n","cpp":"class Solution {\npublic:\n    void solve(vector<vector<char>>& board) {\n        \n    }\n};\n","java":"class Solution {\n    public void solve(char[][] board) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public void Solve(char[][] board) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/9z2BunfoZ5Y","embedding":[0.007827051,-0.023662651,0.027156465,-0.03627668,-0.03183001,0.010918169,0.007577493,-0.02516,-0.023639964,0.043128185,0.046644688,-0.05068299,0.011865356,0.030899838,0.00715211,-0.048641153,0.036095183,-0.01273881,0.043218937,0.026543913,0.023174878,-0.00977247,0.047279928,-0.02711109,0.06025695,0.038046274,0.026158232,0.008167358,-0.017820721,-0.022278737,0.011434301,-0.0077703334,-0.0093754465,-0.01277284,-0.010243228,-0.038840324,0.015064238,-0.0065055275,-0.019045824,-0.008655131,0.045396898,-0.018058935,0.016164562,-0.020248242,-0.008536023,0.008473634,-0.033395417,0.013929882,-0.002454461,0.06266178,-0.010850108,0.027292587,0.026589287,-0.01810431,-0.05649089,-0.009749783,-0.009874563,0.04249295,0.03457515,0.040156174,0.028517691,-0.026974969,0.01031129,0.006964941,0.0059156627,0.051363606,-0.029788168,0.010628909,-0.022982037,-0.023526527,-0.04639513,-0.009012452,-0.0049344455,-0.028563065,-0.016085157,0.013600919,0.020441081,0.029402489,0.024456698,-0.048641153,-0.017514445,-0.01998734,0.0691503,-0.029402489,-0.0030542514,-0.010107106,-0.042016517,0.011020261,-0.014224815,-0.087572224,-0.03024191,-0.0049996707,-0.0022899797,-0.017355636,0.020452425,-0.019499566,0.033803787,-0.02595405,-0.008144671,0.0039135255,-0.017423697,-0.022346798,0.03786478,0.03221569,0.0003722103,-0.006794788,-0.026362415,0.015347826,-0.034665897,0.0057965554,-0.051454354,-0.0044948827,0.017673254,0.028018575,0.029652046,-0.031376265,-0.0039589,-0.041335907,0.011088323,-0.048868023,-0.0065111993,-0.01708339,-0.05408606,-0.011649828,-0.022516951,0.043854173,0.0021921415,-0.06869655,0.019272696,-0.0023693845,-0.0024530431,-0.0051613166,-0.028767249,0.018569395,-0.050138503,-0.004177263,0.0055101304,0.014213472,-0.024638196,0.03532382,-0.014655869,0.0005303111,-0.049503263,-0.020463768,-0.023776086,0.008416916,-0.02088348,0.03525576,-0.027769016,-0.01954494,0.066246346,-0.037660595,0.01771863,0.03675311,0.028495004,-0.07931412,-0.014066005,0.035482634,0.006187908,0.017866096,0.0067267264,0.013033742,0.02602211,-0.019102542,0.016879207,-0.008507664,0.0047557843,0.007197484,-0.020123461,-0.038205083,0.031308204,0.03639012,-0.037433725,0.047053054,0.0084339315,-0.011269819,-0.0372976,-0.019930622,-0.04895877,-0.031172082,-0.07010315,-0.020758701,-0.053496193,-0.017968187,0.025137313,-0.00957963,0.012489251,-0.055538032,-0.010430397,0.009477538,-0.0002484947,0.0017256379,0.0365943,-0.0064771683,0.014156753,0.008224076,0.05045612,-0.033576917,0.012182975,-0.03198882,-0.01379376,0.00016022768,0.0021666186,0.005246393,0.012375816,0.010243228,-0.014576465,0.022210676,-0.00034899148,-0.02538687,0.022913976,-0.046599314,0.03024191,-0.04709843,-0.001217305,-0.0020347498,0.03262406,-0.0031279847,0.017639223,0.03645818,-0.04051917,0.03697998,-0.0137824165,0.0058816317,0.027859764,0.024229828,-0.01852402,0.024592822,0.023322344,-0.03464321,-0.016187249,-0.024570135,0.031217456,-0.002611853,0.054040685,-0.05939484,-0.029243678,-0.016107844,-0.01500752,0.03235181,0.010135464,-0.005623566,0.00071393483,-0.009193949,-0.050909862,-0.020509142,-0.008989765,0.0009734186,0.00775899,0.04074604,0.017446384,-0.009936952,-0.03634474,-0.047143806,-0.041449342,0.06198117,-0.0065509016,-0.07219037,0.016697709,-0.018660143,-0.009551271,0.06048382,-0.066246346,-0.103543945,-0.0033917222,-0.04131322,-0.020713327,0.00071570725,0.00013417295,0.03337273,-0.009046483,0.013884508,-0.0147919925,-0.05785212,-0.020781389,-0.040632606,0.021768278,-0.015903661,-0.035459947,-0.06461287,-0.0031903742,0.050365373,0.049049523,0.033917222,-0.021927087,-0.0068628495,-0.008382886,0.027247213,-0.038454644,-0.023231596,-0.031625826,0.001039353,-0.030105788,0.08094759,-0.035845626,-0.02947055,-0.024320576,-0.028472317,0.035641443,-0.05649089,0.0035845626,-0.03493814,-0.0057596886,0.0012329024,-0.04546496,-0.01736698,-0.00951724,-0.007174797,0.044557475,-0.009239323,-0.03298705,-0.01395257,0.024434011,0.050138503,-0.017559819,-0.058260486,0.009301713,-0.051363606,0.004670708,-0.03738835,0.0005366918,-0.018331181,0.051363606,0.031240143,-0.01740101,0.008615429,-0.005830586,0.055538032,0.0040921867,-0.029311739,-0.0062502977,-0.0040439763,-0.015756194,0.06393226,-0.07350622,-0.019590314,0.010736672,0.025454931,-0.010991902,0.012228349,-0.0067210547,0.040405735,0.008779909,0.041267846,-0.030536843,0.038205083,0.024207141,0.02554568,0.041086346,-0.04625901,0.006460153,-0.00638642,0.011434301,0.0001767999,-0.013192551,0.009369775,-0.043672677,0.04982088,0.018036248,0.021110352,-0.013487484,-0.036299367,0.008275121,-0.016017096,-0.001646233,0.023685338,-0.01571082,0.0034654553,0.059939332,0.022789197,0.022369485,0.017650567,-0.05744375,0.010299945,0.022811884,-0.035051577,-0.037501786,0.033123173,-0.04968476,0.03285093,-0.0603477,0.0046508564,-0.000086760454,0.0019213142,0.02244889,0.024592822,-0.0028146189,-0.026702723,-0.009279026,-0.033758413,0.010974887,0.00456578,0.037796717,0.002129752,0.047597546,0.022891289,0.025727177,0.09392461,-0.0032641073,0.019091198,-0.0046990667,-0.0034087375,-0.007430027,0.032782868,-0.036322054,-0.029810855,0.041018285,0.024751632,-0.024343263,0.025908673,-0.0078610815,0.0033888863,0.020327646,-0.005788048,0.037320286,-0.004024125,-0.04616826,-0.030650279,-0.01085578,0.051363606,-0.03400797,-0.03450709,0.027451398,0.008093624,0.021609468,0.06987628,-0.020044057,-0.051998846,0.030105788,-0.005322962,-0.015586041,0.055764902,0.0051272856,0.012886276,0.009625005,0.01497349,0.0022701283,0.006664337,0.0038681515,-0.02218799,-0.07554806,0.012602687,0.03793284,-0.023639964,-0.011264147,-0.015563354,0.011247132,0.0401108,0.02672541,0.0064034355,0.03416678,-0.036662363,0.01966972,0.0158356,0.016482182,-0.008728864,0.023912208,0.009670379,-0.016436808,0.012750153,-0.025681803,0.0005097509,-0.000495217,0.014678557,0.024751632,0.044421352,-0.053768437,0.0072428584,0.032941677,-0.007968846,-0.027882451,0.053314697,0.0076625696,-0.0028429779,-0.014667213,0.04560108,0.038182396,0.056400143,-0.05948559,-0.033690352,-0.014247502,-0.02065661,-0.036231305,-0.016368747,0.035618756,0.013351361,-0.028880686,-0.04968476,-0.016709052,0.020872137,-0.043854173,0.011354896,-0.00040978583,-0.009279026,0.007798692,-0.0093981335,0.039679747,0.012999712,0.02295935,-0.02774633,0.0076852567,-0.0062219384,-0.017230857,0.03173926,0.02359459,-0.036571614,-0.032941677,-0.028313506,0.0066019474,0.047279928,0.014372281,0.0015625744,0.0050847474,-0.016357403,-0.009086185,-0.022006491,-0.045101963,-0.016482182,-0.052089594,-0.01848999,-0.019681064,-0.016164562,0.01277284,0.0058589447,-0.0026075991,-0.012046853,-0.037342973,-0.01998734,-0.06356927,0.017548475,-0.013884508,0.007730631,-0.0016391433,0.053314697,0.0020716162,-0.025999423,-0.032737494,0.013113147,0.0013463378,-0.032397185,0.007781677,0.016833832,0.021893056,-0.0014519747,0.014553778,0.0047104103,0.02334503,0.01762788,-0.011451316,0.02915293,-0.005651925,-0.0072031557,-0.024093706,-0.050274625,-0.005705807,0.015892318,-0.0005501623,0.016811145,0.014712588,0.025522994,-0.01998734,-0.014224815,-0.016402777,-0.0013186879,0.031467013,0.046440504,-0.011269819,0.0010003595,0.021700216,-0.014916772,0.016992642,-0.016879207,-0.01497349,-0.015903661,0.016300686,-0.02065661,-0.029742794,-0.015631415,-0.034983516,0.0010854362,0.011218773,-0.023798773,-0.01245522,-0.016618304,-0.04560108,0.00022828899,-0.0069592693,0.02711109,-0.012307755,-0.021722903,-0.023753399,0.0063977637,0.0014845874,0.011922074,-0.015404545,-0.021893056,0.0045005544,0.02484238,-0.011944761,-0.015824256,0.012908963,-0.0054562488,0.040405735,0.051545102,-0.012228349,-0.033758413,0.006874193,0.030037727,0.012523282,0.0045260773,-0.01657293,0.014723931,0.0093073845,0.014701244,-0.02838157,-0.015812913,-0.02554568,0.033350043,0.029311739,-0.0039390484,-0.009505897,0.029810855,0.034597836,-0.017956844,-0.021053633,0.011377583,-0.044648223,0.05281558,-0.020225555,0.011162056,-0.026271667,-0.011672515,-0.008184373,-0.003525009,-0.0050337017,-0.0040156175,0.039112568,-0.008212732,0.053042453,0.0036582956,0.025069252,-0.034847394,-0.0016448151,0.0010414799,0.00032577265,0.00897275,0.03509695,0.018115653,-0.020928854,0.0023481154,0.004948625,0.010260243,0.044466726,-0.014916772,0.029742794,-0.0071804686,0.0069082235,-0.012500595,-0.020679297,0.02947055,-0.040337674,-0.021666186,-0.023254283,-0.008592741,0.0013101803,-0.04458016,-0.031875383,-0.0070159873,0.0034796346,0.0049628043,-0.032102253,-0.0005643417,0.00083516905,-0.015018864,-0.0019666883,0.021961117,0.020633923,-0.046349756,-0.00005711656,0.056309395,0.01931807,0.008314824,-0.017820721,0.0052350494,-0.018716862,0.0068912082,-0.0063410457,-0.031444326,-0.01711742,-0.012103571,0.010662939,0.019851217,-0.03393991,0.0019156424,-0.009795157,-0.025568368,0.01433825,0.02624898,-0.0077249594,-0.1122558,0.03471127,0.0005473264,0.009210965,0.008513336,0.0069365823,-0.05671776,0.012523282,0.0005707225,0.0061935796,0.025114626,-0.0307864,-0.0029861901,-0.023934895,0.032193,-0.036571614,0.034552462,0.015052894,0.015064238,0.032011505,-0.026589287,-0.004211294,0.011451316,-0.040995598,-0.059667088,0.027632894,-0.022550981,0.013861821,-0.0056490893,-0.0009535674,0.009074842,0.009942624,-0.033463478,0.0072371867,-0.00059447304,0.021893056,-0.00046260425,-0.02241486,0.002789096,0.013986601,-0.025500307,-0.013941226,0.00042751012,0.022516951,-0.038273145,-0.004942953,0.029561298,-0.04796054,0.018864328,-0.073324725,0.040950224,0.021189757,0.0064771683,0.01708339,-0.04460285,0.0023949074,0.0053087827,-0.011173399,0.015438575,-0.010373679,-0.008513336,-0.012568656,0.0023523693,-0.038114335,-0.03384916,0.011967448,0.028041262,-0.018989107,-0.013260613,0.008757222,-0.010288602,-0.007254202,-0.020860793,0.012784184,-0.005019522,-0.016527556,-0.04827816,0.00019301764,0.013873165,0.010254571,-0.040723354,-0.039543625,0.011649828,-0.0047274255,0.009176934,0.0005058515,-0.0061198464,0.021189757,-0.0022644566,0.018750893,-0.025659116,-0.01848999,-0.0030287285,-0.018660143,0.0063977637,0.024320576,-0.017310262,-0.020792732,-0.031512387,0.01631203,-0.0136916675,0.0118540125,-0.005371172,0.018818954,0.018830298,0.023685338,0.029720107,-0.0009606571,-0.014134066,-0.023129504,0.026611974,0.0035420242,0.0545398,-0.034212153,0.013521515,0.044466726,-0.0011549154,-0.0025494634,0.0008216986,0.009086185,-0.00074583857,0.008246763,-0.011343553,-0.0040156175,0.0075434623,-0.03198882,0.010736672,-0.0008755805,0.0045005544,0.016323373,0.009936952,0.0006770683,0.0022375158,-0.018875672,0.04467091,0.017208168,0.023435779,0.028767249,-0.02040705,-0.0026699887,0.023866834,-0.029720107,0.026226293,-0.025273435,-0.043150872,-0.03480202,0.0055838637,-0.010906826,-0.03464321,0.010390694,-0.053042453,0.003221569,0.0043672677,-0.021178413,-0.010821749,-0.016618304,-0.033758413,-0.011252804,0.008728864,0.0065338863,0.029561298,0.025817925,0.044330604,0.008677818,-0.04269713,-0.016765771,-0.021586781,-0.022494264,-0.009171262,-0.035391882,-0.012545969,0.022709792,-0.008751551,-0.0043672677,0.03949825,0.029311739,0.012829558,-0.016119188,-0.025454931,0.010470099,0.004001438,0.022074554,-0.014553778,-0.032102253,0.024933128,0.0039050179,-0.039316755,0.04480703,0.01848999,0.004764292,-0.021416627,0.0042651757,-0.016482182,0.033667665,-0.031920757,-0.012489251,0.029016808,-0.0010464428,-0.03205688,0.048641153,0.025522994,0.0046451846,-0.035074264,0.026680036,-0.019023137,-0.006358061,-0.001646233,-0.011122353,0.0026799142,-0.0067267264,-0.023152191,-0.019295383,-0.029765481,-0.033418104,0.006749414,0.0021425134,0.044761658,0.0037320289,-0.00324142,0.026271667,0.038772263,-0.027655581,0.008116311,0.012908963,0.00811064,0.026475852,-0.019896591,0.0057398374,0.019851217,-0.0049344455,-0.022687105,-0.011967448,0.008087953,-0.007129423,-0.014066005,0.0018787759,-0.0050563887,-0.026884219,-0.010691298,-0.02570449,-0.04160815,-0.037592534,-0.023957582,-0.02295935,-0.018501334,-0.017298918,-0.044239856,0.0040156175,-0.0031903742,0.03496083,0.033735726,-0.02248292,-0.006709711,-0.007588837,-0.024320576,-0.043060124,-0.013703011,-0.016368747,0.005700135,-0.009528584,-0.013544202,-0.0004182935,-0.021450657,0.0051868395,-0.000431055,0.031467013,0.026112858,0.000024570312,-0.051000614,0.033032425,-0.0365943,0.018331181,0.0040581557,0.017310262,0.0165389,-0.021983804,-0.013612263,-0.00887633,0.0004236108,0.01928404,-0.054267555,0.02829082,0.0016745919,-0.0365943,0.030355347,-0.014270189,-0.023004724,-0.0186488,0.036662363,-0.011695202,0.004537421,0.019975996,0.050274625,-0.0012619703,0.026952282,-0.0089160325,-0.0055696843,-0.015756194,-0.011224445,-0.036163244,0.014111379,-0.00431055,-0.012296411,0.027791703,0.0029238006,-0.023685338,-0.058623478,0.03697998,-0.021371253,-0.0035165013,0.014088692,-0.029856231,-0.017412353,0.023866834,-0.01692458,-0.033168547,0.015926348,0.032397185,-0.021722903,-0.03055953,-0.037116103,0.0039957664,-0.009273354,-0.0002938689,0.048641153,0.023776086,-0.028631127,0.0012350293,0.01114504,0.007447042,0.016709052,0.012908963,0.017537132,-0.0011293924,0.012511939,-0.017775347,0.015461262,0.044852406,0.004866384,-0.0072598737,-0.013510171,0.026770784,0.032147627,-0.018070279,-0.0072088274,-0.012126258,0.007276889,-0.016788458,0.020713327,0.0014789157,0.000029267252,-0.03276018,0.05399531,-0.042651758,0.013056429,-0.017832065,0.015120955,0.023776086,-0.006749414,0.024343263,0.01622128,-0.024570135,-0.020282272,0.005617894,0.0006465825,-0.027474085,-0.021416627,0.03872689,-0.014939459,-0.010039044,-0.011485347,-0.006499856,-0.0020177343,-0.028767249,-0.009800829,-0.04403567,-0.00989725,-0.05140898,-0.0019723603,0.004968476,-0.009012452,0.018796267,-0.0035618756,-0.0016930252,0.0068231467,-0.025591055,0.03298705,-0.010509801,0.0084112445,-0.039135255,-0.029515924,0.031353578,0.034915455,0.044648223,-0.0049401172,-0.010095762,0.033350043,0.022176646,-0.013861821,-0.008490649,0.015325139,-0.018274464,0.01324927,0.0076455544,-0.014644526,-0.050138503,0.0034569476,-0.022142615,0.014894084,-0.03487008,0.022131272,-0.031807322,0.00003886053,0.0070840484,0.044875093,0.004336073,-0.033735726,0.008904689,0.0033066457,-0.013101803,-0.003649788,0.030105788,-0.033644978,0.033123173,0.031761948,-0.002989026,0.0007819962,-0.039157942,0.01293165,-0.014939459,0.06089219,-0.018943733,-0.030128475,-0.009704409,-0.005399531,-0.015676789,0.0041602477,-0.016867863,-0.028268132,0.023231596,0.020418394,0.0034144092,0.004239653,-0.0023722204,-0.029720107,-0.0002373284,0.0031194768,0.024479385,0.052089594,0.010231884,-0.025613742,0.012557313,-0.012954337,0.020429738,-0.010606222,0.011076979,-0.0002802212,-0.021405283,0.00775899,-0.027927827,0.02679347,-0.030378034,-0.0068628495,0.027247213,-0.027496772,-0.009568286,0.03652624,-0.023934895,-0.010237556,-0.019102542,0.01551798,-0.010350992,0.01242119,0.024797006,-0.0015639924,0.01602844,0.008995437,0.025749864,0.025182687,-0.009012452,-0.0052151983,-0.025772551,0.011610126,-0.0037688953,-0.0307864,-0.005535654,-0.026453165,-0.008144671,-0.043150872,0.027678268,-0.01175192,0.04718918,-0.00031992362,0.008241091,-0.0013704429,-0.012103571,0.015574697,-0.01155908,0.009057826,-0.0054108747,-0.014780649,0.002912457,-0.04097291,-0.024728945,0.023481153,-0.03473396,0.020225555,0.016402777,-0.019658377,-0.020770045,-0.01044174,0.024728945,-0.026044797,-0.025091939,-0.045442272,-0.04038305,-0.03416678,0.013487484,-0.0063467175,-0.019465536,-0.021416627,0.007934815,-0.04764292,0.014576465,0.0041630836,0.008553038,-0.03902182,0.011048621,0.020928854,-0.0034597835,-0.012897619,-0.0022616207,-0.007356294,-0.01140027,-0.0036894905,0.008882002,-0.007549134,-0.022823228,0.027519459,0.01813834,-0.006159549,0.00094364176,0.013680324,-0.0076852567,0.005853273,0.05649089,-0.013555545,-0.023526527,0.06538424,0.0036668032,-0.0046480205,0.014485717,-0.010197854,0.012443877,-0.013725699,-0.015223048,0.008632444,0.008195717,-0.0029635031,0.02104229,-0.038999133,0.0039957664,-0.030287284,0.027927827,0.0063240305,0.024570135,0.018898359,-0.04850503,0.04773367,-0.019431505,0.0008925958,-0.013215238,0.0023693845,0.03362229,-0.0006192871,0.007611524,-0.006607619,-0.010498458,0.042220704,0.016482182,-0.015234391,0.0036838187,0.021654842,0.013544202,-0.013226583,0.05408606,0.017866096,-0.0061708926,0.01175192,0.021303192,-0.0078610815,-0.033032425,0.016436808,-0.013907195,-0.009182606,-0.006687024,0.033644978,0.036480866,0.02624898,-0.045011215,-0.008598412,-0.039747808,-0.027451398,-0.026974969,0.001039353,0.007146438,0.020157494,-0.007021659,0.012103571,0.012205662,-0.008530351,-0.008870658,-0.029266365,0.01947688,-0.0031875384,-0.0032442561,0.008723192,0.022550981,0.019442849,0.0051329574,-0.01242119,0.027791703,0.03480202,-0.011530722,0.028200071,-0.026543913,-0.009761127,0.011082651,-0.0013385392,-0.0007578911,-0.0030457438,0.0029748466,-0.002535284,-0.0043984624,-0.010022028,-0.008995437,-0.008479306,0.019374788,0.03260137,0.034348276,0.0014236158,-0.039384816,-0.0034824705,-0.015234391,-0.0018532529,-0.0029776825,-0.0023466975,0.048005912,0.015052894,-0.040950224,-0.029765481,-0.0040581557,0.0073336065,-0.036163244,0.00830348,-0.03305511,0.015052894,-0.022085898,0.026203606,-0.05045612,0.0226077,0.00090606627,0.007940487,0.008127656,0.023254283,-0.0065792603,0.017854752,0.029289052,-0.018433273,-0.0029946978,-0.013317331,0.0079518305,-0.033871848,0.01446303,-0.02733796,-0.04796054,-0.04414911,-0.07169125,0.0049344455,-0.0055923713,0.0019425834,0.044262543,0.033418104,-0.020747358,-0.005617894,-0.009193949,-0.011683859,-0.0014774977,-0.011865356,0.025137313,-0.014485717,-0.016187249,-0.006516871,0.007980189,-0.019907935,-0.017162794,0.01031129,0.022539638,0.03407603,0.01775266,-0.014292876,0.005073404,0.0077249594,0.0042708474,-0.004509062,0.010804734,-0.024524761,-0.015200361,0.03055953,0.021348566,0.0076001803,0.00015934146,0.02672541,-0.010662939,-0.024184454,-0.027496772,-0.0009585302,0.017264888,0.0055384897,-0.026589287,0.008201389,0.01261403,-0.04496584,-0.0082978085,-0.022596357,0.01842193,-0.03972512,-0.046508566,0.023367718,-0.059077222,-0.01692458,-0.012625374,0.024728945,0.03550532,-0.011122353,0.022653075,-0.0028302164,0.0045827953,0.011553409,-0.007934815,0.022743823,-0.009613661,-0.000887633,-0.011610126,0.00092662644,-0.014100036,0.014474373,0.024116393,-0.02522806,0.003196046,0.0063183587,-0.033236608,0.011587439,-0.0061935796,-0.0039418847,0.01379376,-0.012466564,-0.0005902192,-0.0018603426,0.007174797,0.012058197,-0.01056652,0.0072371867,-0.008553038,0.0165389,0.009681722,-0.03611787,-0.031648513,0.005853273,0.007373309,-0.021802308,0.032782868,-0.003828449,-0.0037036699,-0.0051357932,-0.0023693845,0.009454851,-0.009471866,0.03471127,-0.0094435075,0.006437466,-0.0047756354,0.026044797,-0.023061443,-0.010197854,-0.014826023,-0.0072371867,-0.017389666,0.0022772183,0.014202128,-0.009409477,0.033508856,-0.020463768,0.02649854,0.041335907,-0.02672541,0.0015384693,0.027859764,-0.0051896754,0.009063498,0.024592822,0.013135834,0.021382596,0.002892606,0.022312768,-0.016550243,-0.04764292,-0.0056916275,-0.028653814,-0.008711848,0.018308494,-0.017968187,-0.016629647,-0.027519459,-0.0064714965,-0.022233363,-0.0030599232,-0.033032425,0.020100774,0.0051896754,0.04326431,0.028563065,0.037252225,-0.00045232417,-0.032646745,0.01622128,-0.0041942787,0.0076852567,0.0148146795,0.027360648,-0.0022162467,-0.021983804,0.024025645,0.00426234,0.020225555,0.014531091,-0.01069697]},{"id":"rotting-fruit","name":"Rotting Fruit","description":"You are given a 2-D matrix `grid`. Each cell can have one of three possible values:\n* `0` representing an empty cell\n* `1` representing a fresh fruit\n* `2` representing a rotten fruit\n\nEvery second, if a fresh fruit is horizontally or vertically adjacent to a rotten fruit, then the fresh fruit also becomes rotten.\n\nReturn the minimum number of seconds that must elapse until there are zero fresh fruits remaining. If this state is impossible within the grid, return `-1`.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/5daa219c-ae90-4027-41c3-6ea4d9158300/public)\n\n```java\nInput: grid = [[1,1,0],[0,1,1],[0,1,2]]\n\nOutput: 4\n```\n\n**Example 2:**\n\n```java\nInput: grid = [[1,0,1],[0,2,0],[1,0,1]]\n\nOutput: -1\n```\n\n**Constraints:**\n* `1 <= grid.length, grid[i].length <= 10`\n","difficulty":"Medium","concepts":["Matrix BFS"],"solutions":{"python":"class Solution:\n    def orangesRotting(self, grid: List[List[int]]) -> int:\n        q = collections.deque()\n        fresh = 0\n        time = 0\n\n        for r in range(len(grid)):\n            for c in range(len(grid[0])):\n                if grid[r][c] == 1:\n                    fresh += 1\n                if grid[r][c] == 2:\n                    q.append((r, c))\n\n        directions = [[0, 1], [0, -1], [1, 0], [-1, 0]]\n        while fresh > 0 and q:\n            length = len(q)\n            for i in range(length):\n                r, c = q.popleft()\n\n                for dr, dc in directions:\n                    row, col = r + dr, c + dc\n                    if (\n                        row in range(len(grid))\n                        and col in range(len(grid[0]))\n                        and grid[row][col] == 1\n                    ):\n                        grid[row][col] = 2\n                        q.append((row, col))\n                        fresh -= 1\n            time += 1\n        return time if fresh == 0 else -1\n","javascript":"class Solution {\n    /**\n     * @param {number[][]} grid\n     * @return {number}\n     */\n    orangesRotting(grid) {\n        const q = [];\n        let fresh = 0;\n        let time = 0;\n\n        for (let r = 0; r < grid.length; r++) {\n            for (let c = 0; c < grid[0].length; c++) {\n                if (grid[r][c] === 1) {\n                    fresh++;\n                }\n                if (grid[r][c] === 2) {\n                    q.push([r, c]);\n                }\n            }\n        }\n\n        const directions = [\n            [0, 1],\n            [0, -1],\n            [1, 0],\n            [-1, 0],\n        ];\n        while (fresh > 0 && q.length > 0) {\n            const length = q.length;\n            for (let i = 0; i < length; i++) {\n                const [currR, currC] = q.shift();\n\n                for (const [dr, dc] of directions) {\n                    const row = currR + dr;\n                    const col = currC + dc;\n                    if (\n                        row >= 0 &&\n                        row < grid.length &&\n                        col >= 0 &&\n                        col < grid[0].length &&\n                        grid[row][col] === 1\n                    ) {\n                        grid[row][col] = 2;\n                        q.push([row, col]);\n                        fresh--;\n                    }\n                }\n            }\n            time++;\n        }\n        return fresh === 0 ? time : -1;\n    }\n}\n","cpp":"class Solution {\npublic:\n    int orangesRotting(vector<vector<int>>& grid) {\n        queue<pair<int, int>> q;\n        int fresh = 0;\n        int time = 0;\n\n        for (int r = 0; r < grid.size(); r++) {\n            for (int c = 0; c < grid[0].size(); c++) {\n                if (grid[r][c] == 1) {\n                    fresh++;\n                }\n                if (grid[r][c] == 2) {\n                    q.push({r, c});\n                }\n            }\n        }\n\n        vector<pair<int, int>> directions = {{0, 1}, {0, -1}, {1, 0}, {-1, 0}};\n        while (fresh > 0 && !q.empty()) {\n            int length = q.size();\n            for (int i = 0; i < length; i++) {\n                auto curr = q.front();\n                q.pop();\n                int r = curr.first;\n                int c = curr.second;\n\n                for (const auto& dir : directions) {\n                    int row = r + dir.first;\n                    int col = c + dir.second;\n                    if (row >= 0 && row < grid.size() && col >= 0 && col < grid[0].size()\n                            && grid[row][col] == 1) {\n                        grid[row][col] = 2;\n                        q.push({row, col});\n                        fresh--;\n                    }\n                }\n            }\n            time++;\n        }\n        return fresh == 0 ? time : -1;\n    }\n};\n","java":"class Solution {\n    public int orangesRotting(int[][] grid) {\n        Queue<int[]> q = new ArrayDeque<>();\n        int fresh = 0;\n        int time = 0;\n\n        for (int r = 0; r < grid.length; r++) {\n            for (int c = 0; c < grid[0].length; c++) {\n                if (grid[r][c] == 1) {\n                    fresh++;\n                }\n                if (grid[r][c] == 2) {\n                    q.offer(new int[]{r, c});\n                }\n            }\n        }\n\n        int[][] directions = {{0, 1}, {0, -1}, {1, 0}, {-1, 0}};\n        while (fresh > 0 && !q.isEmpty()) {\n            int length = q.size();\n            for (int i = 0; i < length; i++) {\n                int[] curr = q.poll();\n                int r = curr[0];\n                int c = curr[1];\n\n                for (int[] dir : directions) {\n                    int row = r + dir[0];\n                    int col = c + dir[1];\n                    if (row >= 0 && row < grid.length && col >= 0 && col < grid[0].length\n                            && grid[row][col] == 1) {\n                        grid[row][col] = 2;\n                        q.offer(new int[]{row, col});\n                        fresh--;\n                    }\n                }\n            }\n            time++;\n        }\n        return fresh == 0 ? time : -1;\n    }\n}\n","csharp":"public class Solution {\n    public int OrangesRotting(int[][] grid) {\n        Queue<int[]> q = new Queue<int[]>();\n        int fresh = 0;\n        int time = 0;\n\n        for (int r = 0; r < grid.Length; r++) {\n            for (int c = 0; c < grid[0].Length; c++) {\n                if (grid[r][c] == 1) {\n                    fresh++;\n                }\n                if (grid[r][c] == 2) {\n                    q.Enqueue(new int[] { r, c });\n                }\n            }\n        }\n\n        int[][] directions = { new int[] { 0, 1 }, new int[] { 0, -1 }, new int[] { 1, 0 }, new int[] { -1, 0 } };\n        while (fresh > 0 && q.Count > 0) {\n            int length = q.Count;\n            for (int i = 0; i < length; i++) {\n                int[] curr = q.Dequeue();\n                int r = curr[0];\n                int c = curr[1];\n\n                foreach (int[] dir in directions) {\n                    int row = r + dir[0];\n                    int col = c + dir[1];\n                    if (row >= 0 && row < grid.Length && col >= 0 && col < grid[0].Length\n                            && grid[row][col] == 1) {\n                        grid[row][col] = 2;\n                        q.Enqueue(new int[] { row, col });\n                        fresh--;\n                    }\n                }\n            }\n            time++;\n        }\n        return fresh == 0 ? time : -1;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def orangesRotting(self, grid: List[List[int]]) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[][]} grid\n     * @return {number}\n     */\n    orangesRotting(grid) {}\n}\n","cpp":"class Solution {\npublic:\n    int orangesRotting(vector<vector<int>>& grid) {\n        \n    }\n};\n","java":"class Solution {\n    public int orangesRotting(int[][] grid) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int OrangesRotting(int[][] grid) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/y704fEOx0s0","embedding":[-0.030065553,-0.017213,0.035798732,-0.0027521958,-0.028558237,0.008418086,0.021600364,-0.04812642,-0.018437693,0.016270928,0.038355786,-0.06858284,-0.010806911,0.02236748,0.0551785,-0.030899959,0.026055017,0.021950277,-0.0068300217,0.05943128,0.01765712,-0.013834999,0.043012314,0.016095972,-0.011116449,0.02067175,0.019554721,0.028800486,0.036067896,-0.013747521,0.004121565,-0.021748403,-0.015032777,-0.011425987,-0.009629321,-0.02426508,0.00081253704,0.008061444,-0.007052081,0.0104368115,-0.0016965707,-0.056524318,-0.008317149,-0.0020742405,0.025395568,0.018666482,0.013673501,0.014104162,-0.022111773,0.011452903,0.009333241,0.011796086,-0.018504985,-0.037790544,-0.036660057,-0.028046828,-0.08575546,0.04311998,0.04524637,0.045946196,0.022569353,-0.025287902,0.04621536,-0.0006918341,-0.008350795,0.03103454,-0.010867473,0.009629321,0.009501468,0.017320665,-0.099913456,0.005201583,0.05636282,-0.05603982,0.000449587,0.02530136,0.05598599,0.0069646034,0.038301952,0.016230553,0.026902882,-0.042931564,0.05208312,-0.00012890404,-0.00036841742,-0.023484508,-0.034318335,-0.016149804,-0.0026192965,-0.03604098,-0.02169457,0.016069056,-0.01816853,-0.0077720936,0.005941782,0.014803988,0.009622592,0.040939756,-0.0024174238,-0.013915748,-0.016028682,-0.007186663,0.017401414,0.06863667,0.00082725694,0.036983054,-0.014480991,0.016809255,-0.028208325,-0.028638987,-0.006537306,-0.013545648,-0.020402586,-0.010954951,0.061476924,0.016540091,-0.021829152,-0.041666497,0.0576548,-0.028127577,0.0019547993,-0.006692075,-0.05450559,0.015503813,-0.064491555,0.0029860316,0.007825926,-0.06702169,0.018208904,0.019245183,0.0021162974,-0.028073743,0.030065553,-0.016715048,-0.053267438,0.012495912,0.0058812206,0.012886198,0.012273852,0.050118227,0.0044613834,0.023417216,-0.049229987,-0.003943244,0.012987135,-0.0026680822,-0.003559686,0.026512597,-0.008916038,0.020429503,0.034372166,-0.01838386,0.0068973126,0.026862508,0.03450675,-0.04766884,0.04656527,0.044950288,0.0063287048,-0.013229381,0.0106252255,-0.05900062,-0.016890004,-0.012166186,0.00978409,0.030361632,-0.023955543,-0.024534244,-0.048287917,-0.016499717,0.023497965,-0.058892954,0.011789357,-0.028558237,0.0022222805,0.016351677,-0.060292605,-0.011580756,0.012839095,0.009945588,-0.007173205,0.015988307,-0.014521366,-0.021829152,0.051544793,0.017226458,0.03281102,-0.03264952,-0.034560584,0.0060797287,-0.013983039,0.008767998,-0.002250879,-0.0023534975,-0.020106507,-0.025314819,0.054478675,-0.04451963,-0.016459342,-0.032488022,-0.009205389,0.04772267,0.004801202,-0.02818141,0.0015384371,-0.03267644,-0.035045076,-0.008088361,0.015638394,-0.021815695,0.032488022,0.011271218,-0.025193695,-0.010827098,0.0004941672,-0.0067795534,0.010174377,0.04702285,-0.0009513244,0.0579778,-0.03943244,0.011836461,0.017912826,0.07348161,0.039405525,0.056524318,0.010921305,0.02230019,0.044250466,-0.013538919,-0.00068131986,-0.024776492,0.00022163925,-0.044331215,0.029688723,-0.026647178,-0.03281102,-0.035368074,-0.016661216,0.04360447,0.046753686,0.010322417,0.012462266,-0.013572565,-0.021681113,-0.0021819058,-0.025718564,-0.01265068,-0.007825926,-0.030819211,-0.009979233,0.028558237,0.029823305,-0.042285573,-0.0094678225,0.036875386,-0.015921015,-0.071597464,0.003192951,-0.010840557,-0.0269298,0.030550048,-0.041666497,-0.0578163,-0.0076038665,-0.0125632025,-0.0150058605,0.0053328,-0.013121717,0.016055597,-0.014965486,-0.013888832,0.017266832,-0.028154492,-0.017428331,-0.010201293,0.012327684,0.044223547,-0.026310723,-0.06443772,-0.0022912535,0.00963605,0.06126159,0.0066146906,0.0019245184,-0.013040967,-0.023242261,0.013215924,0.008182568,-0.03692922,-0.04419663,0.0113452375,0.007920133,0.02640493,-0.020913998,-0.0030179948,-0.06056177,0.008868935,0.026176142,-0.06255358,0.067883015,-0.005373175,-0.0331071,0.015544187,-0.04120892,-0.03216503,-0.003192951,0.024655368,0.027347002,0.0014518001,-0.027992995,-0.0041888556,0.0079335915,0.044842623,-0.006496932,-0.030846126,0.03862495,0.0045993295,0.035421904,-0.030469298,-0.013915748,-0.023417216,0.04589236,0.07062848,-0.020591,-0.042285573,-0.00074272277,0.030065553,0.024076667,-0.027091296,-0.052486867,-0.047938004,-0.0032905226,0.060938597,-0.038517285,-0.01338415,0.009972504,0.00031016878,-0.02861207,-0.010551206,-0.023349926,-0.018007033,0.028315991,-0.0034065994,-0.028638987,0.022434771,0.011177011,0.020685209,0.00285145,-0.023349926,0.0083709825,0.00072043267,-0.008135464,0.0027303263,0.007038623,0.007852842,-0.030092468,0.06766768,-0.028558237,0.026472222,-0.030092468,0.011264489,0.007846113,-0.018814523,-0.007179934,0.023740213,-0.015907558,-0.00020218798,0.05280986,0.064276226,-0.0085593965,0.010712704,-0.032488022,-0.030065553,-0.02464191,0.006002344,0.000041241932,0.046538353,-0.008478647,0.0027942527,-0.03200353,0.021815695,-0.0604541,-0.039459355,0.022851974,0.019662388,-0.03208428,0.008586313,-0.06669869,-0.021721488,0.010275313,-0.010100357,-0.006692075,0.0050198976,0.028800486,0.010806911,0.031384453,0.04198949,-0.003366225,0.038894113,0.00044748417,-0.032138113,-0.03345701,-0.011506735,-0.025422484,-0.032138113,0.027643083,0.04104742,-0.000055620094,-0.024574619,-0.013014051,-0.014911653,0.03340318,0.0026832228,0.008667062,-0.06443772,-0.049122322,-0.011479819,-0.023888253,0.01633822,-0.022380937,-0.0099994205,0.04311998,-0.0016999352,-0.016957294,0.04441196,-0.0070722685,-0.011035699,-0.024668826,-0.04936457,0.021263909,0.042770065,-0.014319493,0.041504998,-0.0071395594,0.00522177,0.043308392,0.0011548792,0.00060729997,-0.042204823,0.00503672,-0.015086609,0.05407493,0.03391459,0.01147309,-0.03765596,0.005706264,0.04532712,0.030119386,-0.035583403,0.040024597,-0.0026865874,0.019541264,-0.040832087,-0.03418375,0.0042965207,-0.009959046,0.025866603,-0.008916038,-0.008579584,-0.06562204,0.007879759,-0.026351098,-0.007011707,0.036094815,0.027548876,-0.03596023,-0.020981288,0.026714468,0.0069847903,-0.027037464,0.043173812,0.02684905,0.012415162,-0.03369926,0.022179065,0.009609134,0.005097282,-0.005692806,-0.010981867,0.011096261,-0.058569957,-0.011291405,-0.038490366,0.010874202,-0.0037110904,-0.022475144,-0.07057465,-0.056147486,-0.040186096,-0.040051516,0.03383384,-0.021196619,-0.015073151,-0.0010842239,0.015261565,-0.013808083,-0.014561741,-0.014480991,-0.027266253,0.033968423,-0.031384453,0.010497373,0.0076307827,0.013303402,-0.00765097,0.026256891,0.010181106,0.010578122,0.030469298,0.01882798,0.04936457,-0.010800182,-0.015638394,0.0039768894,0.0053361645,-0.0057029,-0.013444712,-0.032837935,-0.00027147654,0.02553015,-0.013969581,0.0033157568,-0.010928035,0.0056557963,-0.019447057,-0.004444561,-0.049122322,-0.06535288,0.004986252,-0.012637222,0.0075365757,-0.010100357,0.045111787,-0.024184333,0.0011245983,-0.008525751,-0.012845824,0.0063522565,-0.052217703,0.040805172,0.009656237,0.030442381,-0.034479834,-0.008835289,-0.00022563463,-0.0024847146,-0.005972063,-0.020954372,0.022932723,-0.01338415,-0.020362211,-0.008552668,-0.037709795,0.001934612,0.013592753,0.012415162,0.0144137,0.010228209,0.00794032,-0.02780458,-0.020873623,0.0062916945,-0.024305455,0.022098316,0.033268597,0.0036303415,0.010208022,0.030819211,-0.016809255,0.004744005,-0.041451164,-0.01088766,-0.03103454,0.004720453,0.0032198674,-0.015180816,-0.02162728,-0.020469878,0.009420719,-0.024224706,-0.018235821,-0.034695163,-0.0008133782,-0.03119604,-0.010403166,-0.003781746,0.016580466,0.02818141,-0.054828588,-0.009514927,0.026270349,0.029392645,-0.0041720327,-0.04142425,-0.015853725,-0.025207153,0.032245778,0.009124639,0.0076307827,0.0005753368,0.03281102,0.011089533,0.013559107,-0.010208022,-0.0033258505,0.034533665,0.02553015,-0.029231146,-0.014830904,-0.01419837,-0.033349346,0.00019787716,-0.029042732,0.007825926,-0.0019749866,-0.015140442,0.050737303,0.026593344,-0.022273272,-0.009023704,0.016122889,0.049122322,-0.010981867,-0.024022834,-0.011923939,0.004898774,0.01919135,-0.012112353,0.019958466,-0.013559107,-0.03862495,-0.0004132079,0.00010130428,-0.022825057,0.0153826885,0.011358696,0.004165304,0.0331071,-0.020940913,0.033995338,0.0063926307,0.0063791727,-0.020281462,0.027992995,0.0038894112,0.042285573,0.00046262462,0.0039533377,0.00802107,0.01793974,0.005319342,0.014777071,-0.0023602266,0.010315687,0.017024586,-0.0041955844,-0.036956135,-0.008593041,0.004135023,0.012913114,-0.03281102,0.02022763,0.026458763,0.008512293,-0.023942085,-0.009144827,0.007953779,0.039109442,0.007119372,0.022475144,0.008256587,0.030280884,0.013666772,-0.011722066,-0.004276334,-0.018653024,-0.028369823,-0.039001778,-0.0034385626,0.011964314,0.006597868,0.01434641,0.029284978,0.00017979274,0.0012760027,-0.0058374815,0.0059384177,-0.016459342,-0.0060427184,0.002597427,0.04371214,-0.02230019,-0.0069847903,0.015692227,-0.021277368,0.02192336,0.031438287,0.0024039657,-0.07348161,0.05361735,0.021546531,0.03582565,0.007967237,-0.011574026,-0.0038894112,0.018653024,0.00926595,-0.008667062,0.012240206,0.044008218,-0.007873029,-0.050656553,0.040643673,-0.04325456,0.05103338,0.025180237,0.022354022,0.007179934,-0.020631375,-0.009541843,0.03507199,-0.045273285,-0.037709795,-0.017643662,-0.01890873,-0.005840846,-0.020173797,0.011035699,-0.0035563216,-0.0025234069,-0.013074612,0.032918684,0.0151942745,-0.023794046,0.012220019,0.011890294,0.012711242,0.006039354,0.0005988886,-0.04032068,0.039890017,0.0018572275,-0.033806924,0.009346699,0.036821555,-0.040132266,-0.0039600665,-0.08866243,0.017549455,-0.031465203,0.011789357,-0.01302078,-0.023969002,0.0024544338,0.036956135,0.014655948,0.0024477048,0.016526634,0.029554142,0.0006518801,0.034748998,-0.00896987,-0.042258654,0.048583996,0.022825057,-0.0014341363,-0.0032518303,0.011372154,0.043442976,0.033941507,0.0019817157,0.035287324,-0.0052856966,-0.009286137,-0.05603982,-0.017616745,-0.0061100093,-0.015786434,0.0052116765,-0.054048013,-0.009696612,-0.022690475,0.013195736,0.010423353,-0.009555301,0.008579584,0.013538919,0.021317743,-0.038490366,-0.018262736,-0.017307207,0.011338509,0.030792294,0.009104452,-0.003721184,-0.00474737,-0.051302545,-0.02111587,0.0052184057,0.022798141,0.0026899518,0.0370638,0.004632975,-0.008741082,0.022098316,0.0036135188,-0.007583679,-0.020550625,0.017710952,-0.0213312,0.029661808,-0.029123481,0.022528978,0.044708043,0.00426624,-0.006247956,-0.030657712,0.0014063788,0.027858414,0.007408723,-0.03964777,-0.007590408,-0.006163842,-0.045515534,-0.0031458472,0.008640146,0.02442658,0.0017125522,0.0041888556,0.011230843,-0.010759807,-0.045703948,0.04075134,0.044761874,0.02442658,0.020456418,-0.026970174,-0.03604098,0.03509891,0.012482453,0.05636282,0.009582218,-0.025920436,-0.02801991,-0.0014669406,-0.008202755,-0.017562913,0.03956702,-0.032326527,0.004969429,-0.017980115,0.0014930158,0.00020702451,0.010187835,-0.022771224,-0.021236993,0.027172046,0.011338509,0.005760097,0.0027589248,0.0050468137,0.008781456,-0.055770658,-0.02419779,0.017428331,-0.02920423,-0.033510845,-0.0051544793,-0.0098110065,0.006133561,-0.027966078,-0.037602127,0.03523349,-0.03913636,0.020496793,-0.03170745,-0.039001778,0.0015031095,0.011129907,0.041397333,0.027535416,-0.0013214241,0.012085437,-0.015638394,-0.024601536,0.02507257,0.021815695,0.0035630506,-0.020335296,0.0022744308,-0.031061457,0.025785854,-0.029904054,0.009622592,0.0064767445,0.042716235,-0.03582565,0.0538596,0.0077115316,0.005797107,-0.03633706,0.025207153,0.039001778,-0.010652142,-0.028504405,-0.018747231,-0.015921015,-0.0025620991,-0.013559107,0.012704513,-0.025772396,0.014306035,0.03846345,0.044142798,0.042339403,-0.00673245,0.018087782,0.0009647826,-0.014144537,-0.022380937,0.0008848747,-0.0010463728,-0.0017226458,-0.03184203,0.029823305,0.009292867,0.022125233,0.00024350877,-0.0037312778,0.039890017,0.024897614,-0.0049458775,-0.023053845,-0.0037851105,-0.057116475,0.0031492119,-0.008848747,0.010611768,-0.01213927,-0.038275037,-0.011459632,-0.03604098,0.0015014271,-0.013215924,-0.042770065,0.020348754,-0.014898195,0.0010362791,0.028154492,0.012973676,0.013505274,0.059969608,-0.0013651631,-0.025947353,0.0038557658,-0.02139849,0.009985963,0.019016394,-0.014965486,-0.056470484,-0.010470456,-0.012845824,0.008519022,0.016580466,0.013760979,0.00065272127,0.015436522,0.025906978,-0.044035133,0.021533072,-0.01882798,-0.027050924,-0.008626687,-0.020281462,-0.008673791,0.02684905,-0.009528385,0.06535288,-0.01493857,0.023363383,0.0073818066,-0.022057941,-0.008270046,0.00014940673,-0.026606804,0.0035428633,0.0024224706,0.007866301,0.0153826885,0.05127563,0.024978364,-0.019675845,0.0037985686,0.0016166627,0.010537747,-0.025799314,0.04201641,0.018814523,0.0026697647,-0.024588078,-0.04032068,0.06389939,-0.020496793,-0.025906978,-0.040912837,0.0113115925,-0.043066144,0.024964906,0.011089533,0.0024460226,-0.013276485,0.011479819,-0.02426508,0.00720685,-0.031815115,0.003869224,-0.01633822,-0.05264836,-0.038490366,-0.005834117,-0.0049223257,-0.018720316,0.013915748,0.013929207,-0.033806924,0.023646006,0.0063825375,0.009965776,0.0068098344,-0.018181989,-0.001996856,0.01787245,0.011661504,-0.0004378111,0.052782945,0.014332952,-0.021183161,-0.03676772,-0.009117911,0.0038221204,-0.0009294549,-0.0011826367,0.02655297,-0.013195736,0.0005719722,-0.006944416,-0.016432427,-0.049983647,0.001364322,-0.006076364,0.040509094,-0.05054889,-0.018814523,0.019810427,0.02294618,0.01449445,-0.008431544,0.02839674,0.01559802,-0.027912246,0.013875374,-0.004781015,-0.013444712,-0.024130499,-0.008411356,0.025328277,-0.025395568,-0.043227643,-0.008922767,-0.015126984,-0.00023068146,-0.04435813,-0.013498545,-0.014400243,-0.014306035,-0.0578163,-0.009023704,0.009393803,-0.02655297,0.033430096,-0.023242261,-0.011082804,0.006665159,-0.012569931,0.011607672,0.021977192,0.01986426,-0.030873043,-0.018599192,0.01360621,0.02419779,0.021196619,-0.03994385,0.0023080762,0.03383384,0.011722066,0.015449979,0.0032787467,-0.0023148053,-0.02559744,0.0063219755,-0.008626687,-0.059108283,-0.018491527,0.014359868,-0.014830904,0.002839674,0.009252492,-0.021829152,-0.0029675267,0.0087478105,-0.011446174,0.025503233,0.0010833828,-0.06804451,0.008855476,-0.03022705,0.016311303,0.004091284,0.009299596,-0.014400243,0.013875374,0.018060865,0.006604597,-0.016217096,-0.012314226,-0.011957585,-0.0005059431,0.016674673,-0.012825636,-0.02920423,-0.013586023,0.017414873,-0.0006766936,0.016634298,-0.0045454972,-0.044088967,0.009985963,0.000029991743,-0.0132226525,-0.028585155,0.01184319,-0.015503813,0.014642489,0.0104368115,0.02155999,0.07035931,-0.0050434493,-0.0048886803,0.006416183,0.030442381,0.005790378,0.0035260406,0.0192721,-0.0058744913,-0.044950288,-0.006826657,-0.0317882,0.019850802,-0.007327974,0.024184333,0.019110601,-0.05289061,0.013794625,-0.002908647,-0.038651865,0.0037110904,0.01882798,0.021236993,0.020214172,0.01861265,-0.005803836,0.011883564,0.009965776,0.016311303,-0.0012684326,0.0049627004,-0.023188427,0.034076087,-0.03951319,-0.0026075204,0.013727334,-0.010477186,0.01551727,-0.005686077,-0.018626109,-0.027616166,0.046403773,-0.009871568,0.044169717,-0.00026958398,0.022394396,-0.027858414,0.005413549,0.005067001,-0.04465421,0.007738448,0.016741965,-0.013586023,0.007920133,-0.03221886,-0.012166186,0.030280884,-0.012112353,0.040051516,0.02434583,-0.01810124,-0.016136346,-0.012462266,0.0288274,-0.017993573,0.0026192965,-0.043900553,-0.028369823,-0.022098316,-0.0070049777,0.01169515,-0.0014955392,-0.018330028,0.02655297,-0.029769473,0.04126275,0.0061537484,0.018922187,-0.014467534,0.03297252,0.04460038,-0.0055144853,-0.01729375,-0.013431254,-0.029446477,-0.027252795,-0.0021129327,0.036606222,-0.008471918,0.025705105,0.031976614,0.02141195,-0.0032652887,-0.021600364,0.00052991544,-0.0317882,-0.013040967,0.014992402,0.028800486,-0.012919843,0.02869282,0.0069847903,0.01684963,0.01324284,-0.015947932,0.031438287,-0.014898195,-0.007401994,-0.018626109,-0.0051376563,0.007496201,0.00068594614,-0.03259569,0.012125812,0.0051881247,0.0010388026,0.011944126,0.03811354,0.006466651,-0.026970174,-0.001996856,0.016580466,-0.015234649,-0.029096564,0.025503233,0.019218268,0.012045062,0.009346699,-0.0008419768,-0.030630795,0.018747231,0.040266845,0.011735525,0.020483335,-0.0077249897,0.011560569,0.00015066842,0.0021768592,-0.008882392,0.016903462,-0.014211828,0.012583389,0.0055851405,-0.0015821762,0.0097167995,-0.0027370555,0.009138098,-0.023551797,0.018666482,0.030657712,0.03795204,-0.024238165,-0.00072463835,-0.012738158,-0.032784104,0.016378593,-0.021667654,-0.019837344,0.010322417,-0.020429503,-0.023067305,-0.002920423,0.026539512,-0.018451152,0.00022605521,0.0054539237,0.0075433045,-0.011775899,-0.024588078,0.0022306917,-0.013794625,0.013532191,-0.0041316585,-0.039324775,0.022071399,-0.010349333,-0.010914576,-0.040697508,-0.03111529,0.043416057,-0.012273852,0.015988307,-0.019164436,0.028854318,-0.010107086,0.014427159,-0.028208325,-0.014898195,-0.003916328,0.023874795,0.02162728,0.009339971,0.02434583,-0.008727623,-0.020779416,-0.009111182,0.03068463,-0.0083709825,-0.017414873,0.05636282,0.015692227,-0.050710388,-0.029957887,0.0023955544,-0.0045724134,-0.019447057,0.027468126,0.016997669,0.03060388,-0.011116449,0.038894113,-0.0660527,0.0052184057,0.029984804,0.032784104,0.03884028,0.001630962,0.01485782,-0.021236993,0.015651852,-0.024291998,0.0034200575,-0.036094815,0.022717392,-0.009656237,-0.007745177,-0.022623185,-0.025476316,-0.036579307,-0.040562924,0.029823305,-0.027252795,-0.038355786,-0.036579307,0.008929496,-0.012973676,0.009333241,0.0020439597,0.012428621,0.01810124,-0.007893217,0.02699709,0.00319968,-0.015086609,-0.007038623,-0.028585155,0.028127577,-0.010732891,-0.02067175,0.009965776,0.020362211,-0.0031222955,0.0083709825,-0.0065709515,0.016822712,0.027885329,-0.009387074,-0.01978351,-0.009292867,-0.012294039,-0.0025149956,0.027696915,-0.002070876,0.009595675,0.048287917,-0.0058643976,-0.011897023,-0.016095972,-0.0068603023,-0.019473972,0.0032804292,0.0032703355,-0.036175564,0.01662084,-0.027885329,-0.015315398,-0.0009521656,-0.002553688,-0.017791701,-0.012569931,0.04686135,-0.043173812,-0.014898195,-0.029365728,0.011870107,0.03378001,0.016795797,0.022071399,-0.0052823317,0.03103454,0.032353442,0.011022242,0.0067055332,-0.02971564,-0.014454075,-0.006803105,0.01155384,0.016176721,0.027562333,0.015261565,-0.001958164,0.016069056,-0.0065574935,-0.06120776,0.030899959,-0.0009891755,-0.022905806,-0.001096841,-0.030550048,-0.012374788,-0.004986252,0.029634891,0.0008445002,0.010261855,-0.0011540381,0.016836172,-0.010490644,-0.016513174,-0.011890294,0.02398246,-0.011022242,0.02737392,-0.016876547,-0.015113525,-0.016230553,0.011076074,-0.022475144,0.019689303,0.0056827124,-0.039620854,0.010753078,-0.015369231,0.0041013774,-0.017387956,0.02391517,-0.030173218,0.026956715,0.0025200425,-0.02169457,-0.008788185,0.023161512,-0.0017218047,0.000007399365,-0.00062033755,-0.031384453,0.015261565,0.009649509,-0.005457288,0.0032030446,0.026970174,-0.0057500033,0.015436522,0.011136636,0.031572867,0.059162118,-0.003012948,0.034533665,0.010140731,-0.031599786,0.0058879494,-0.0020641468,-0.022677017,0.04966065,-0.048422497,-0.01676888,-0.03959394,-0.008445002,-0.022690475,0.0041720327,-0.022555893,0.04120892,-0.0026579886,0.050279725,0.01729375,0.017912826,-0.003781746,-0.031061457,0.047130514,-0.017912826,0.030092468,0.011594214,-0.0037380068,0.0056457026,-0.023955543,0.0071261013,0.0062042167,-0.0064632865,-0.019029854,0.0056086928]},{"id":"course-schedule-ii","name":"Course Schedule II","description":"You are given an array `prerequisites` where `prerequisites[i] = [a, b]` indicates that you **must** take course `b` first if you want to take course `a`.\n\n* For example, the pair `[0, 1]`, indicates that to take course `0` you have to first take course `1`.\n\nThere are a total of `numCourses` courses you are required to take, labeled from `0` to `numCourses - 1`. \n\nReturn a valid ordering of courses you can take to finish all courses. If there are many valid answers, return **any** of them. If it's not possible to finish all courses, return an **empty array**.\n\n**Example 1:**\n\n```java\nInput: numCourses = 3, prerequisites = [[1,0]]\n\nOutput: [0,1,2]\n```\n\nExplanation: We must ensure that course 0 is taken before course 1.\n\n**Example 2:**\n\n```java\nInput: numCourses = 3, prerequisites = [[0,1],[1,2],[2,0]]\n\nOutput: []\n```\n\nExplanation: It's impossible to finish all courses.\n\n**Constraints:**\n* `1 <= numCourses <= 1000`\n* `0 <= prerequisites.length <= 1000`\n* All `prerequisite` pairs are **unique**.\n","difficulty":"Medium","concepts":["Adjacency List"],"solutions":{"python":"class Solution:\n    def findOrder(self, numCourses: int, prerequisites: List[List[int]]) -> List[int]:\n        prereq = {c: [] for c in range(numCourses)}\n        for crs, pre in prerequisites:\n            prereq[crs].append(pre)\n\n        output = []\n        visit, cycle = set(), set()\n\n        def dfs(crs):\n            if crs in cycle:\n                return False\n            if crs in visit:\n                return True\n\n            cycle.add(crs)\n            for pre in prereq[crs]:\n                if dfs(pre) == False:\n                    return False\n            cycle.remove(crs)\n            visit.add(crs)\n            output.append(crs)\n            return True\n\n        for c in range(numCourses):\n            if dfs(c) == False:\n                return []\n        return output\n","javascript":"class Solution {\n    /**\n     * @param {number} numCourses\n     * @param {number[][]} prerequisites\n     * @return {number[]}\n     */\n    findOrder(numCourses, prerequisites) {\n        const prereq = new Map();\n        for (const [course, pre] of prerequisites) {\n            if (!prereq.has(course)) {\n                prereq.set(course, []);\n            }\n            prereq.get(course).push(pre);\n        }\n\n        const output = [];\n        const visit = new Set();\n        const cycle = new Set();\n\n        for (let c = 0; c < numCourses; c++) {\n            if (!this.dfs(c, prereq, visit, cycle, output)) {\n                return [];\n            }\n        }\n\n        return output;\n    }\n\n    /**\n     * @param {number} course\n     * @param {Map} prereq\n     * @param {Set} visit\n     * @param {Set} cycle\n     * @param {number[]} output\n     * @return {boolean}\n     */\n    dfs(course, prereq, visit, cycle, output) {\n        if (cycle.has(course)) {\n            return false;\n        }\n        if (visit.has(course)) {\n            return true;\n        }\n\n        cycle.add(course);\n        for (const pre of prereq.get(course) || []) {\n            if (!this.dfs(pre, prereq, visit, cycle, output)) {\n                return false;\n            }\n        }\n        cycle.delete(course);\n        visit.add(course);\n        output.push(course);\n        return true;\n    }\n}\n","cpp":"class Solution {\npublic:\n    vector<int> findOrder(int numCourses, vector<vector<int>>& prerequisites) {\n        unordered_map<int, vector<int>> prereq;\n        for (const auto& pair : prerequisites) {\n            prereq[pair[0]].push_back(pair[1]);\n        }\n\n        vector<int> output;\n        unordered_set<int> visit;\n        unordered_set<int> cycle;\n\n        for (int course = 0; course < numCourses; course++) {\n            if (!dfs(course, prereq, visit, cycle, output)) {\n                return {};\n            }\n        }\n\n        return output;\n    }\n\nprivate:\n    bool dfs(int course, const unordered_map<int, vector<int>>& prereq,\n             unordered_set<int>& visit, unordered_set<int>& cycle, vector<int>& output) {\n        if (cycle.count(course)) {\n            return false;\n        }\n        if (visit.count(course)) {\n            return true;\n        }\n\n        cycle.insert(course);\n        if (prereq.count(course)) {\n            for (int pre : prereq.at(course)) {\n                if (!dfs(pre, prereq, visit, cycle, output)) {\n                    return false;\n                }\n            }\n        }\n        cycle.erase(course);\n        visit.insert(course);\n        output.push_back(course);\n        return true;\n    }\n};\n","java":"class Solution {\n    \n    public int[] findOrder(int numCourses, int[][] prerequisites) {\n        Map<Integer, List<Integer>> prereq = new HashMap<>();\n        for (int[] pair : prerequisites) {\n            prereq.computeIfAbsent(pair[0], k -> new ArrayList<>()).add(pair[1]);\n        }\n\n        List<Integer> output = new ArrayList<>();\n        Set<Integer> visit = new HashSet<>();\n        Set<Integer> cycle = new HashSet<>();\n\n        for (int course = 0; course < numCourses; course++) {\n            if (!dfs(course, prereq, visit, cycle, output)) {\n                return new int[0];\n            }\n        }\n\n        int[] result = new int[numCourses];\n        for (int i = 0; i < numCourses; i++) {\n            result[i] = output.get(i);\n        }\n        return result;\n    }\n\n    private boolean dfs(int course, Map<Integer, List<Integer>> prereq,\n                        Set<Integer> visit, Set<Integer> cycle, List<Integer> output) {\n        if (cycle.contains(course)) {\n            return false;\n        }\n        if (visit.contains(course)) {\n            return true;\n        }\n\n        cycle.add(course);\n        for (int pre : prereq.getOrDefault(course, Collections.emptyList())) {\n            if (!dfs(pre, prereq, visit, cycle, output)) {\n                return false;\n            }\n        }\n        cycle.remove(course);\n        visit.add(course);\n        output.add(course);\n        return true;\n    }\n}\n","csharp":"public class Solution {\n    \n    public int[] FindOrder(int numCourses, int[][] prerequisites) {\n        Dictionary<int, List<int>> prereq = new Dictionary<int, List<int>>();\n        foreach (var pair in prerequisites) {\n            if (!prereq.ContainsKey(pair[0])) {\n                prereq[pair[0]] = new List<int>();\n            }\n            prereq[pair[0]].Add(pair[1]);\n        }\n\n        List<int> output = new List<int>();\n        HashSet<int> visit = new HashSet<int>();\n        HashSet<int> cycle = new HashSet<int>();\n\n        for (int course = 0; course < numCourses; course++) {\n            if (!Dfs(course, prereq, visit, cycle, output)) {\n                return new int[0];\n            }\n        }\n\n        return output.ToArray();\n    }\n\n    private bool Dfs(int course, Dictionary<int, List<int>> prereq,\n                     HashSet<int> visit, HashSet<int> cycle, List<int> output) {\n        if (cycle.Contains(course)) {\n            return false;\n        }\n        if (visit.Contains(course)) {\n            return true;\n        }\n\n        cycle.Add(course);\n        if (prereq.ContainsKey(course)) {\n            foreach (int pre in prereq[course]) {\n                if (!Dfs(pre, prereq, visit, cycle, output)) {\n                    return false;\n                }\n            }\n        }\n        cycle.Remove(course);\n        visit.Add(course);\n        output.Add(course);\n        return true;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def findOrder(self, numCourses: int, prerequisites: List[List[int]]) -> List[int]:\n        ","javascript":"class Solution {\n    /**\n     * @param {number} numCourses\n     * @param {number[][]} prerequisites\n     * @return {number[]}\n     */\n    findOrder(numCourses, prerequisites) {}\n}\n","cpp":"class Solution {\npublic:\n    vector<int> findOrder(int numCourses, vector<vector<int>>& prerequisites) {\n        \n    }\n};\n","java":"class Solution {\n    public int[] findOrder(int numCourses, int[][] prerequisites) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int[] FindOrder(int numCourses, int[][] prerequisites) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/Akt3glAwyfY","embedding":[-0.030955914,-0.005330503,0.012940407,-0.05518897,-0.008733126,0.008381605,-0.011001543,0.0027201767,-0.03053848,0.06986501,0.02717705,-0.060329977,-0.03884319,0.044753157,0.051937386,-0.030143019,0.008711156,-0.012522974,0.0007085367,0.10545663,0.053475298,-0.005778144,-0.0070359344,-0.044577394,-0.0024826247,0.0037678774,0.057693563,0.026759619,0.038601518,-0.007299576,0.058132965,0.00459725,-0.051541924,0.03686588,-0.026452037,-0.017235568,-0.011424468,0.07430298,0.009161544,-0.028143737,-0.009837125,-0.0027009528,-0.01780679,-0.034646895,-0.032779433,0.03007711,0.002433192,-0.018180283,0.044006173,0.048246406,-0.010139215,0.042819783,0.010617065,0.026320215,-0.037371192,-0.009287872,-0.050487358,0.013654436,0.015708644,0.0025828634,0.091219984,-0.01058411,0.0148627935,0.028121768,0.014423391,0.006975516,0.03350445,0.0003532385,0.0035207134,-0.027748274,-0.10255657,0.024716396,0.0406008,-0.014851808,0.020091685,0.04943279,0.032691553,0.03389991,-0.0009467753,-0.017323447,0.0154340165,-0.0069974866,0.062175468,0.002814923,0.0013902973,-0.05255255,-0.015972285,0.023705771,-0.038293935,-0.10158988,0.020531086,-0.0060088304,-0.020783743,0.07091958,0.04912521,-0.020959504,0.042907663,0.004075459,-0.02878087,0.035921164,-0.017762851,-0.018531805,0.0100128865,0.00013465287,0.050751,0.03545979,-0.012841541,0.058220845,-0.05699052,-0.018334074,-0.040886413,0.047894884,0.030670302,-0.027308872,0.022134906,0.0032405942,-0.009199992,-0.056595057,-0.04189704,-0.024298964,0.01190781,-0.022431502,0.026869468,-0.034580983,-0.017235568,0.012490019,0.012654795,-0.030846063,0.03759089,-0.01923485,0.03341657,0.004311638,0.00013319391,-0.011852886,-0.02539747,-0.039985638,-0.005621607,0.0022533115,0.0031994001,-0.02363986,0.03506433,0.03690982,-0.005970383,0.036009043,0.02530959,-0.011743034,-0.04018337,0.014840823,-0.00466316,-0.00076071575,0.010210618,-0.04044701,-0.008821007,0.00839259,0.014148764,-0.010677483,-0.0029577287,-0.0011081184,0.030955914,0.012149482,0.00333946,-0.0036580267,-0.0148627935,-0.019037118,0.011105901,-0.0037459072,-0.026386127,0.01188584,-0.043061454,-0.017817775,0.0142696,0.005426622,0.0035097282,-0.013874137,0.03403173,0.03550373,-0.013643451,-0.023222428,-0.0287589,-0.05558443,-0.022277713,-0.011830915,-0.03701967,-0.052684374,0.03176881,0.017169656,-0.007030442,-0.046576675,-0.02867102,0.019729177,0.023442129,-0.007925725,0.011732049,0.047455482,0.00022141772,-0.025990665,0.03031878,-0.0036552805,-0.018553775,-0.008661724,-0.07632423,0.0001549924,-0.019696223,0.024914127,0.06314215,-0.031680927,0.028407378,-0.01919091,0.030911973,-0.028407378,0.032691553,-0.016642373,-0.008897902,-0.014917718,-0.022848936,-0.01058411,-0.02511186,-0.009249425,-0.02192619,0.04009549,-0.0061351587,-0.02695735,0.012160467,0.034888566,0.044247843,0.013764286,0.044489514,0.017653,0.03370218,-0.03190063,-0.027374782,0.008815515,0.009425186,0.017389359,0.02695735,-0.032581702,0.012731691,0.01518136,0.005794622,-0.03915077,0.0031636988,-0.01433551,0.008535395,0.03750301,0.030230898,0.0024180876,-0.05070706,0.0152362855,-0.036031015,0.019608341,-0.0026968336,0.021332996,0.024430785,-0.08823204,-0.03712952,0.00054341747,-0.017576104,-0.024782307,0.0399417,-0.006695397,-0.046796378,0.034734774,-0.016576463,-0.015445001,-0.013830197,-0.012182437,0.004196295,-0.027792215,-0.018378014,0.0406008,0.0057506817,-0.026671737,0.009249425,-0.012369183,-0.01780679,-0.02697932,0.026539918,0.020871624,0.015093479,-0.046488795,-0.023420159,0.014137778,0.03550373,-0.00028132065,0.020618968,0.0077884113,0.013324884,0.0040260265,-0.047894884,-0.0048718764,0.0019745654,-0.009150559,-0.014763927,0.013050257,-0.014423391,-0.04255614,-0.0019567148,-0.008634261,0.03559161,0.01166614,-0.013797242,-0.018520819,0.0321423,0.07390752,-0.046796378,-0.007755456,0.05619959,-0.010298499,-0.039480325,0.004896593,0.013621481,0.08550775,-0.021486787,0.020498132,0.008194858,-0.0951746,-0.040974293,-0.017905656,0.02361789,-0.024013352,-0.00061928306,0.03537191,0.056726877,0.029352093,0.009930499,0.024540635,-0.027089171,0.021904219,0.004970742,-0.01429157,-0.027264932,0.012797601,-0.016554493,-0.0021571922,-0.06903015,0.01435748,0.048290346,0.026539918,-0.005217906,-0.013478675,0.029439975,-0.012984347,-0.0021159982,0.0056353384,-0.004682384,0.016730255,-0.03389991,-0.017037837,0.054134402,-0.012775631,-0.0065745614,-0.012720705,0.032515794,0.015192345,-0.051278286,-0.0154230315,-0.026298245,0.032647613,-0.007854322,-0.0029000572,-0.02530959,0.025507322,-0.003009908,-0.005415637,0.0031719375,0.032449882,-0.023178488,-0.018619685,-0.038403787,0.015939329,0.016664343,0.003836534,0.02535353,-0.032405943,-0.030428631,-0.04183113,-0.026298245,0.030736212,-0.0069810087,-0.0071128295,-0.005231637,-0.043391008,0.014434376,-0.017861716,0.03034075,0.047411542,-0.010073305,-0.004709847,-0.007898262,-0.031065764,0.039436385,-0.014796883,0.0539147,0.0027407738,0.0017287746,0.019740162,0.0471479,0.053738937,-0.021915205,-0.0068107406,-0.011281662,0.020003803,0.012116527,0.05206921,-0.04198492,-0.034405224,0.02689144,0.0007359994,-0.0100128865,0.004723578,-0.009463633,-0.00019086551,0.01949849,0.017191626,0.0012413124,-0.0061186813,-0.019630311,0.008381605,-0.0029028035,-0.024760338,0.0058385623,0.021003444,0.0016202971,0.023002727,-0.001815282,-0.022695145,0.0067613074,-0.069821075,-0.012138497,-0.018707566,-0.016246911,0.005767159,0.0017933119,0.032471854,-0.043478888,-0.0052261446,-0.005767159,-0.019487506,0.00054032786,-0.044797096,0.030977884,-0.027660394,0.010227095,-0.0038530116,-0.009161544,0.023046667,-0.0076291277,0.009710797,0.058440547,-0.0035454298,0.0088814255,0.018169297,0.029945288,0.019114014,-0.017433299,-0.0013058496,0.0178727,0.02715508,0.007376471,0.03227412,-0.029418005,0.046488795,-0.04666456,-0.0037816088,0.008469485,0.009007754,-0.006299935,-0.011078438,0.045082707,-0.0047153393,0.021519743,-0.025023978,0.016323807,-0.060461797,-0.015335151,0.034559015,-0.0027902066,0.08471682,-0.025946723,0.03346051,-0.013072227,-0.034624927,0.027396752,0.052860133,0.01607115,0.032867316,-0.0016834612,-0.0011094916,-0.027440693,0.016543508,-0.008299217,0.040798534,-0.0124460785,-0.008590321,-0.026825529,0.019652281,0.01943258,-0.020816699,-0.0012145363,0.01778482,0.01359951,-0.033043075,-0.0037184446,-0.026254306,0.056595057,-0.0073709786,-0.03337263,-0.031571075,0.001588715,0.07113928,-0.017180642,0.0032323555,0.00878256,0.04042504,0.0069535463,-0.0013408645,-0.0024812515,-0.02355198,-0.035833284,-0.003487758,0.00678877,-0.020750787,-0.0014733719,0.032801405,0.03862349,-0.011567273,-0.02871496,-0.013390794,-0.024606546,-0.04578575,-0.0032735495,-0.00084104406,-0.002836893,0.046928197,-0.034800686,0.016719269,-0.006393308,-0.0067118746,-0.021596638,-0.047367603,-0.012270317,0.029637706,-0.017982552,-0.0032735495,-0.016246911,-0.0038694893,0.024804277,-0.0025320575,-0.007283098,-0.02361789,-0.008815515,-0.006585547,-0.019333715,0.0029796988,0.009633902,0.0035014895,-0.021365952,-0.020465177,0.034844626,-0.0018290133,-0.025748992,-0.025617171,0.025595201,0.0006838203,-0.0015063271,0.018070431,-0.001392357,-0.012303273,0.023420159,-0.0014321778,-0.031263497,-0.014719987,-0.05523291,0.0013415511,0.021981115,0.011056468,0.005248115,-0.0035234597,-0.014983629,-0.012984347,-0.017795805,-0.017422313,0.019839028,0.0064811883,-0.00928238,-0.0000026872644,0.00077719335,0.058089025,0.0049844733,-0.0075851874,0.005146503,0.029066483,0.01863067,-0.019806072,-0.04090838,-0.025858844,-0.019992819,0.048026703,-0.005396413,-0.006195577,-0.019817058,0.019092044,0.034559015,-0.018663626,-0.02713311,-0.025507322,0.034163553,0.036448445,0.041501574,0.027572513,-0.015631748,-0.017169656,-0.013632466,-0.0073984414,0.01515939,0.0003117012,0.033262778,0.006991994,0.014533241,-0.0012564168,0.055101085,0.022068996,0.03365824,0.0357454,0.048685808,-0.035877224,0.020586012,0.05562837,-0.00841456,-0.0010785961,-0.01598327,0.006816233,-0.0076895454,-0.020047745,0.005695756,0.014368465,-0.005462324,0.006102204,0.011446438,-0.006558084,0.032471854,-0.0023535502,-0.0020596997,-0.023727741,0.04044701,0.028934661,-0.018861357,0.03040666,-0.009562499,-0.040930353,0.021135265,-0.0131820785,0.027352812,-0.029439975,0.019300759,-0.005498025,-0.042863723,-0.051102523,-0.0073819635,0.019465536,0.014851808,-0.03027484,0.023178488,-0.009436171,0.0010621184,-0.029483914,-0.01351163,0.024848217,0.035921164,0.022673175,-0.03354839,0.014840823,-0.004652175,-0.021805353,-0.043522827,-0.018125357,0.031197585,-0.011325602,-0.021629592,0.01179796,-0.030626362,0.009474618,0.007815874,0.014203689,-0.004981727,-0.019070074,-0.0321423,0.016521538,-0.010342439,0.025924753,0.035767373,-0.006838203,-0.008667217,0.034361284,0.0217724,-0.0065416065,0.0031115196,-0.01090817,0.011973721,-0.022870906,0.013237003,-0.009611932,0.023991382,0.006838203,-0.05927541,-0.016444642,0.010644528,0.015719628,0.04330313,0.009408709,0.020443207,-0.0031801763,-0.024079263,0.028627079,-0.028231617,0.010001902,-0.016422672,-0.042402353,0.02880284,-0.04732366,0.011259692,0.059495114,0.015543867,-0.02377168,-0.011545303,-0.016686315,0.032999136,0.014159749,0.013039272,0.0065416065,0.019103028,-0.029066483,0.014159749,0.04090838,-0.0005729398,-0.024848217,-0.010353424,0.009463633,0.021706488,-0.017004881,-0.056243535,-0.021882249,0.034954477,0.0022505652,0.0067613074,0.024716396,-0.018037478,0.034844626,-0.059495114,0.036052983,-0.059802696,0.004921309,0.011732049,-0.02025646,0.030230898,-0.022892876,-0.014851808,0.0070579043,-0.01179796,-0.019795088,-0.0067118746,0.03034075,-0.008085008,-0.007068889,0.021585653,0.026605828,-0.008249784,-0.016927985,0.010825782,0.047367603,0.006508651,0.00070132775,-0.025836874,0.0059484127,-0.0049542645,-0.016126076,-0.023200458,-0.0072446503,-0.0084585,-0.035679493,-0.009853603,0.024298964,0.026627798,0.001794685,-0.0073874565,-0.013204048,0.001056626,-0.008650739,0.02878087,-0.036624208,-0.013434734,0.011402498,-0.0003844773,0.008771574,0.010666498,-0.0065031587,-0.015675688,-0.043171305,-0.015071509,-0.025507322,-0.013962017,0.014137778,0.028209647,-0.019586371,0.014236645,-0.0058934875,0.007145785,-0.02094852,-0.012347213,0.011896825,0.030099079,0.034580983,0.0057451893,0.015082494,0.009754738,0.014445361,-0.01631282,0.02702326,-0.007365486,-0.029725587,0.0010662379,-0.024496695,0.0061516366,0.020091685,0.007024949,0.009914021,-0.0015475211,0.011094916,0.0012783869,-0.0016985657,0.05439804,0.03565752,-0.029330123,0.004262205,0.019663267,-0.011144348,0.018828401,0.0033751612,0.022266727,0.018257178,0.008117964,0.024540635,-0.009145067,0.006508651,-0.0670089,0.008733126,-0.037415132,-0.015412047,0.02123413,-0.019586371,0.0067777853,0.017466253,0.031043794,-0.023266368,0.014203689,-0.0077060233,-0.02027843,0.012896466,-0.015038555,0.0087001715,0.009018739,-0.017059807,0.011243214,-0.017861716,0.028890721,-0.014774913,0.02355198,0.007283098,-0.018202253,-0.015313181,-0.0066569494,-0.01529121,-0.022453474,-0.046972137,0.013797242,0.01023808,-0.030890003,0.0009817902,-0.010545663,-0.019081058,0.020849654,-0.015972285,0.008634261,0.027792215,-0.026737649,-0.05061918,-0.021442847,0.0076565905,0.009227455,-0.0064811883,-0.0050860853,-0.008249784,0.038228028,-0.0475873,-0.041611426,0.015554852,0.011391512,-0.007217188,0.05039948,0.0253755,-0.024562605,0.006827218,0.027528573,0.030714242,-0.010913663,0.0054019056,-0.039326534,0.035152208,0.019300759,-0.032735493,-0.021728458,0.0022395803,-0.033438537,-0.022409532,0.049828254,0.015412047,0.0053195176,-0.018103387,0.030890003,0.012885481,0.023376219,-0.0251558,-0.022387562,0.0044709216,0.024694426,0.03352642,0.005239876,-0.015785538,0.0369977,-0.025727022,0.023090607,0.010699454,0.0010325961,-0.034339312,-0.00012838795,0.0041743247,-0.03717346,0.005816592,0.014730972,0.011446438,0.00589898,0.023178488,-0.0047620256,-0.0025897291,0.010617065,-0.05567231,-0.0008959694,-0.0030922957,0.0020377296,0.005849547,0.03357036,-0.044972856,-0.004775757,-0.003103281,-0.023859562,0.01676321,-0.051190402,0.004105668,-0.027374782,0.008689187,-0.030143019,-0.0065965317,0.033065047,0.026430067,-0.008041068,0.027594484,0.0065965317,-0.013566555,-0.012402139,-0.041875068,0.019059088,-0.0007792531,-0.013841182,0.0034987433,0.016543508,-0.013313899,0.010078797,0.020509116,-0.012501004,-0.020564042,-0.0047208318,0.008249784,-0.017433299,0.026781589,-0.028868752,0.02350804,0.028033886,0.009480111,0.026539918,-0.00461922,0.03398779,-0.018883327,0.009101126,-0.03207639,0.009903036,-0.007673068,-0.039524265,-0.052816194,-0.0076895454,-0.007096352,0.006623994,-0.04912521,0.0030895495,0.019882968,0.023903502,-0.068502866,0.051497985,-0.0053469804,-0.0116881095,0.031329405,-0.03365824,0.0015063271,-0.009199992,-0.011034498,0.03027484,-0.017477239,0.041962948,-0.021563683,-0.02357395,-0.010144708,0.021343982,0.0019937893,-0.032999136,0.007865307,-0.007727993,0.043039486,0.005116294,0.030186959,0.011567273,0.006931576,-0.00033607433,-0.005778144,-0.05936329,0.009710797,-0.031065764,0.006206562,-0.0100128865,-0.004218265,-0.00018005208,0.031109704,-0.01433551,0.02108034,-0.0027050723,0.019322729,0.04372056,0.018037478,-0.005108055,0.02366183,0.0120616015,-0.016422672,-0.0042951605,0.0077170082,-0.02873693,0.014730972,-0.0064592184,-0.02127807,0.029505884,0.016356762,0.0253755,-0.0013127152,-0.009161544,-0.029901348,0.017444283,-0.026320215,0.026495976,-0.023024697,-0.015280225,-0.029967258,-0.039656084,-0.0408205,0.016378732,-0.009249425,-0.037524983,0.02539747,0.005599637,-0.039326534,-0.0050503835,0.010595095,0.013918078,0.010122738,0.00854638,0.03541585,-0.0052728313,0.010320469,0.019948877,0.00674483,-0.016038194,0.005330503,-0.03165896,0.016016224,0.0026679977,0.008903395,-0.0051519955,-0.0004908951,-0.026320215,0.01782876,0.021739444,0.016126076,-0.031395316,0.026649768,-0.011232229,0.03053848,0.02869299,-0.06397702,-0.0098096635,-0.014807868,-0.0036799968,0.0026322962,-0.0042649517,-0.00628895,0.00137176,-0.008387097,0.0049240557,0.026452037,-0.0408205,-0.023969412,0.034888566,-0.010402856,-0.0009337305,0.011083931,0.018718552,-0.028231617,-0.011479393,0.031834718,-0.019124998,-0.005756174,0.0067118746,0.027396752,0.011358557,0.008387097,-0.035877224,-0.02544141,-0.041523546,-0.034317344,0.00013499615,0.00080602913,-0.0019347447,-0.0071567697,-0.006206562,0.009979932,0.004652175,-0.009617425,0.012138497,-0.018509835,0.013731332,0.009908529,0.0046274588,0.055364728,0.048202466,0.012127512,0.027726304,-0.0040809517,0.014445361,-0.031241525,0.0062669795,0.015148405,-0.038491666,0.03723937,0.011578259,0.001423939,-0.024980038,-0.024628516,0.007332531,0.0034630417,0.011358557,-0.012457063,0.015027569,0.017224582,0.019893954,0.017598074,-0.0008376112,0.0038337877,-0.010545663,-0.005248115,0.0026144455,0.035086296,0.02519974,-0.0006261487,0.0025718783,0.014774913,-0.017257538,-0.012094556,0.018663626,0.022607263,-0.0076950383,-0.0032131316,-0.012863511,-0.018015508,0.044731185,0.011567273,-0.011962736,0.0031746838,0.018905297,0.005083339,0.025946723,-0.010155693,-0.00071746204,-0.015324166,0.0010497603,-0.0070469193,-0.020322371,-0.034119613,-0.0027297887,0.0071402923,-0.006277965,0.014214674,0.016170016,-0.016631389,-0.0040370114,-0.011655154,0.05083888,0.0031939077,-0.010858737,-0.041567486,-0.054222282,-0.056463234,-0.02867102,0.028099796,-0.031395316,0.0029824453,-0.0025348037,0.041962948,0.02695735,0.015104464,0.003144475,-0.03565752,-0.017817775,0.023376219,0.002732535,-0.012457063,-0.018268162,0.0024922367,-0.0073270383,0.0033037583,0.01611509,0.0031884152,-0.020827683,-0.01849885,0.04894945,-0.01709276,0.0037404147,0.0040919366,-0.018839387,-0.05255255,0.02186028,-0.014785898,-0.018773476,0.033306718,-0.03031878,-0.019037118,-0.0060088304,-0.06494371,0.021201177,-0.019135984,0.008568351,-0.0028945648,-0.018301118,0.008469485,-0.00791474,-0.014467331,-0.044247843,-0.035086296,-0.018762492,-0.035767373,0.0033586835,-0.0063493676,-0.0028314006,0.034646895,-0.015445001,-0.03394385,0.025880814,-0.006261487,0.007272113,0.016686315,0.002784714,0.004561548,0.0285392,-0.012391154,0.013830197,-0.0114903785,0.019871984,0.020201534,0.036712088,-0.00022862667,0.019828042,0.012380169,-0.01433551,-0.025067918,0.01101802,-0.022442488,0.012083571,-0.0044819065,0.006662442,-0.00092686486,0.001938864,0.009699812,0.026495976,-0.0049927123,-0.0068327105,-0.003196654,-0.02671568,-0.027660394,-0.004978981,-0.006547099,0.03209836,-0.031065764,-0.020036759,0.008469485,-0.015379091,0.015598793,0.019092044,-0.007283098,0.011534318,0.018202253,0.0043253694,0.0034685342,0.00061138754,0.0357454,0.012830556,0.01602721,-0.014280585,-0.0033586835,-0.024145173,0.015719628,-0.053607117,-0.0067393375,0.014104824,-0.032493822,0.0022972517,0.0113146175,-0.0022052517,-0.018894313,0.0023714008,-0.055013206,-0.0062175468,0.0054733087,0.040776562,0.02110231,0.0088869175,0.030999854,-0.020289415,0.012171452,-0.010880707,-0.012468049,-0.014961659,-0.02379365,-0.011303632,0.012259332,-0.03225215,-0.03176881,0.009458141,-0.018971207,-0.039634116,0.006772293,0.025683083,0.033350658,-0.016752224,0.027660394,-0.049652494,-0.014643092,-0.019081058,0.015401062,0.016631389,-0.009513066,0.03053848,-0.031241525,0.014533241,0.024958069,0.0014102077,-0.008106978,0.0018207745,-0.013522615,0.008788052,0.042248562,-0.02713311,-0.041040204,0.0062450096,0.02099246,-0.012511989,-0.023244398,-0.006102204,0.027880095,-0.0372174,0.026539918,0.011111394,0.021135265,-0.009754738,0.022717115,0.016268881,-0.03502039,0.036602236,-0.007167755,-0.0336143,0.03238397,0.008095993,0.021003444,-0.03409764,0.018850371,-0.0051135477,0.0033669225,-0.0013250735,0.021662548,-0.005794622,-0.011155333,-0.0007195218,0.0075192773,0.009414201,0.030450601,-0.009562499,-0.047894884,0.021673534,0.061780006,-0.04046898,-0.036031015,0.046620615,-0.029044513,0.016971925,0.007892769,0.0073874565,0.0029879378,0.003394385,-0.042863723,-0.0008135814,0.008903395,0.054793503,0.0033586835,0.032999136,0.01778482,-0.009870081,-0.045038767,0.007332531,-0.036426477,0.019795088,0.0051327716,0.048246406,0.02847329,0.014049898,0.06872257,0.029571796,0.02101443,0.017905656,0.004210026,-0.022936815,0.011215751,-0.0285392,-0.0009323574,0.042578112,-0.020805713,0.0029522362,0.049300972,-0.03690982,0.027264932,-0.006437248,0.036096923,0.027704334,0.00006260629,0.0066349795,-0.014214674,0.0010682975,0.027396752,-0.0054733087,0.0006690591,-0.0042676977,-0.011611214,-0.0067668003,-0.027814185,0.046752438,-0.0077225007,-0.01264381,0.012358198,-0.0022917592,-0.012182437,0.029813467,-0.023068637,-0.011182796,0.015016584,-0.0178727,0.03532797,0.001588715,-0.0041193995,0.029725587,-0.008562858,0.010759871,0.056638997,0.00921647,0.01515939,-0.004745548,-0.0024290725,-0.0026625053,0.0033257285,0.026452037,-0.021904219,0.034932505,0.018356044,0.0006161935,-0.013061242,0.039216682,-0.018993178,0.023420159,-0.019135984,0.031109704,-0.0046027424,-0.000693089,0.0026048336,-0.018509835,-0.020443207,0.010699454,-0.040798534,0.05699052,-0.0003700594,0.0142696,-0.011166318,-0.016235927,-0.025946723,-0.027902065,0.007068889,-0.0039134296,0.034690835,-0.0013724465,0.036426477,0.039853815,0.0058550397,0.029571796,-0.018081417,0.034734774,-0.006453726,0.0372174,-0.003949131,-0.04886157,0.014873778,-0.015961299,0.038359847,0.0065251286,-0.024826247,0.016521538,-0.013204048]},{"id":"redundant-connection","name":"Redundant Connection","description":"You are given a connected **undirected graph** with `n` nodes labeled from `1` to `n`. Initially, it contained no cycles and consisted of `n-1` edges.\n\nWe have now added one additional edge to the graph. The edge has two **different** vertices chosen from `1` to `n`, and was not an edge that previously existed in the graph.\n\nThe graph is represented as an array `edges` of length `n` where `edges[i] = [ai, bi]` represents an edge between nodes `ai` and `bi` in the graph.\n\nReturn an edge that can be removed so that the graph is still a connected non-cyclical graph. If there are multiple answers, return the edge that appears last in the input `edges`.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/1a966522-e4d9-4215-18a1-4df7d26c3700/public)\n\n```java\nInput: edges = [[1,2],[1,3],[3,4],[2,4]]\n\nOutput: [2,4]\n```\n\n**Example 2:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/5cf17b17-8758-4f0a-8829-99cea143b100/public)\n\n```java\nInput: edges = [[1,2],[1,3],[1,4],[3,4],[4,5]]\n\nOutput: [3,4]\n```\n\n**Constraints:**\n* `n == edges.length`\n* `3 <= n <= 100`\n* `1 <= edges[i][0] < edges[i][1] <= edges.length`\n* There are no repeated edges and no self-loops in the input.\n","difficulty":"Medium","concepts":["Union-Find"],"solutions":{"python":"class Solution:\n    def findRedundantConnection(self, edges: List[List[int]]) -> List[int]:\n        par = [i for i in range(len(edges) + 1)]\n        rank = [1] * (len(edges) + 1)\n\n        def find(n):\n            p = par[n]\n            while p != par[p]:\n                par[p] = par[par[p]]\n                p = par[p]\n            return p\n\n        def union(n1, n2):\n            p1, p2 = find(n1), find(n2)\n\n            if p1 == p2:\n                return False\n            if rank[p1] > rank[p2]:\n                par[p2] = p1\n                rank[p1] += rank[p2]\n            else:\n                par[p1] = p2\n                rank[p2] += rank[p1]\n            return True\n\n        for n1, n2 in edges:\n            if not union(n1, n2):\n                return [n1, n2]\n","javascript":"class Solution {\n    /**\n     * @param {number[][]} edges\n     * @return {number[]}\n     */\n    findRedundantConnection(edges) {\n        const par = new Array(edges.length + 1).fill(0).map((_, i) => i);\n        const rank = new Array(edges.length + 1).fill(1);\n\n        /**\n         * @param {number} n\n         * @return {number}\n         */\n        function find(n) {\n            let p = par[n];\n            while (p !== par[p]) {\n                par[p] = par[par[p]];\n                p = par[p];\n            }\n            return p;\n        }\n\n        /**\n         * @param {number} n1\n         * @param {number} n2\n         * @return {boolean}\n         */\n        function union(n1, n2) {\n            const p1 = find(n1);\n            const p2 = find(n2);\n\n            if (p1 === p2) {\n                return false;\n            }\n            if (rank[p1] > rank[p2]) {\n                par[p2] = p1;\n                rank[p1] += rank[p2];\n            } else {\n                par[p1] = p2;\n                rank[p2] += rank[p1];\n            }\n            return true;\n        }\n\n        for (const [n1, n2] of edges) {\n            if (!union(n1, n2)) {\n                return [n1, n2];\n            }\n        }\n        return [];\n    }\n}\n","cpp":"class Solution {\npublic:\n    vector<int> findRedundantConnection(vector<vector<int>>& edges) {\n        int n = edges.size();\n        vector<int> par(n + 1), rank(n + 1, 1);\n        for (int i = 0; i <= n; ++i)\n            par[i] = i;\n\n        for (const auto& edge : edges) {\n            if (!Union(par, rank, edge[0], edge[1]))\n                return vector<int>{ edge[0], edge[1] };\n        }\n        return {};\n    }\n\nprivate:\n    int Find(vector<int>& par, int n) {\n        int p = par[n];\n        while (p != par[p]) {\n            par[p] = par[par[p]];\n            p = par[p];\n        }\n        return p;\n    }\n\n    bool Union(vector<int>& par, vector<int>& rank, int n1, int n2) {\n        int p1 = Find(par, n1);\n        int p2 = Find(par, n2);\n\n        if (p1 == p2)\n            return false;\n        if (rank[p1] > rank[p2]) {\n            par[p2] = p1;\n            rank[p1] += rank[p2];\n        } else {\n            par[p1] = p2;\n            rank[p2] += rank[p1];\n        }\n        return true;\n    }\n};\n","java":"class Solution {\n    \n    public int[] findRedundantConnection(int[][] edges) {\n        int[] par = new int[edges.length + 1];\n        int[] rank = new int[edges.length + 1];\n        for (int i = 0; i < par.length; i++) {\n            par[i] = i;\n            rank[i] = 1;\n        }\n\n        for (int[] edge : edges) {\n            if (!union(par, rank, edge[0], edge[1]))\n                return new int[]{edge[0], edge[1]};\n        }\n        return new int[0];\n    }\n\n    private int find(int[] par, int n) {\n        int p = par[n];\n        while (p != par[p]) {\n            par[p] = par[par[p]];\n            p = par[p];\n        }\n        return p;\n    }\n\n    private boolean union(int[] par, int[] rank, int n1, int n2) {\n        int p1 = find(par, n1);\n        int p2 = find(par, n2);\n\n        if (p1 == p2)\n            return false;\n        if (rank[p1] > rank[p2]) {\n            par[p2] = p1;\n            rank[p1] += rank[p2];\n        } else {\n            par[p1] = p2;\n            rank[p2] += rank[p1];\n        }\n        return true;\n    }\n}\n","csharp":"public class Solution {\n    \n    public int[] FindRedundantConnection(int[][] edges) {\n        int[] par = new int[edges.Length + 1];\n        int[] rank = new int[edges.Length + 1];\n        for (int i = 0; i < par.Length; i++) {\n            par[i] = i;\n            rank[i] = 1;\n        }\n\n        foreach (var edge in edges) {\n            if (!Union(par, rank, edge[0], edge[1]))\n                return new int[]{ edge[0], edge[1] };\n        }\n        return new int[0];\n    }\n\n    private int Find(int[] par, int n) {\n        int p = par[n];\n        while (p != par[p]) {\n            par[p] = par[par[p]];\n            p = par[p];\n        }\n        return p;\n    }\n\n    private bool Union(int[] par, int[] rank, int n1, int n2) {\n        int p1 = Find(par, n1);\n        int p2 = Find(par, n2);\n\n        if (p1 == p2)\n            return false;\n        if (rank[p1] > rank[p2]) {\n            par[p2] = p1;\n            rank[p1] += rank[p2];\n        } else {\n            par[p1] = p2;\n            rank[p2] += rank[p1];\n        }\n        return true;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def findRedundantConnection(self, edges: List[List[int]]) -> List[int]:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[][]} edges\n     * @return {number[]}\n     */\n    findRedundantConnection(edges) {}\n}\n","cpp":"class Solution {\npublic:\n    vector<int> findRedundantConnection(vector<vector<int>>& edges) {\n        \n    }\n};\n","java":"class Solution {\n    public int[] findRedundantConnection(int[][] edges) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int[] FindRedundantConnection(int[][] edges) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/FXWRE67PLL0","embedding":[-0.021063715,-0.07068952,0.064919844,-0.034463894,-0.0060779774,0.039198548,-0.002440275,0.013433211,-0.027372919,0.03201949,0.0019723147,-0.039484832,0.0068927784,0.033781223,0.009557399,-0.020337,0.027967505,-0.0034271204,-0.030588081,0.067562446,0.0099703055,0.032129597,0.061704684,0.029575085,0.030147647,0.036622014,0.055450533,0.008764619,0.04562887,-0.05527436,0.06033934,0.0024223824,-0.02193357,0.025589166,0.002059025,0.029310826,-0.03800938,0.0065184105,-0.033847287,0.0011499434,0.035124544,0.025765339,0.03433176,-0.00094486674,-0.0044318587,-0.028407937,-0.0047539254,0.017859563,0.004239169,0.009474818,-0.006380775,0.007586461,0.013840611,-0.062101074,-0.039881222,-0.017309023,-0.018850539,0.058269303,0.0012497291,0.01807978,0.07421298,0.012926713,0.03693032,0.029839344,-0.04602526,-0.010063897,0.00870406,-0.031557035,0.012398193,-0.033120573,-0.054657754,0.0044869124,0.015404149,-0.0091775255,0.0145012615,0.0059623634,0.051002156,-0.0017410873,-0.02803357,0.004905324,0.014820575,-0.0011657715,0.04426353,-0.013257038,-0.021911548,-0.06073573,0.0006816391,-0.035014436,-0.04532057,-0.047654867,-0.020337,-0.0016075809,0.0057806848,0.009188537,0.012166966,0.07042526,0.08782237,0.008698555,-0.009816154,0.02459819,-0.011770575,-0.0040574903,0.0053705317,0.027284833,0.011682489,-0.018377073,0.006656046,0.01195776,-0.013279059,0.009739078,-0.0071845655,0.00425018,-0.000015236664,0.021151802,0.029068587,-0.038846202,-0.060559556,-0.005621028,0.052147284,0.017033752,0.029420933,-0.037568945,0.010845666,0.008059926,-0.060383383,0.012034835,0.021823462,-0.043074362,0.044065334,-0.020381043,0.057916958,0.04137869,0.03748086,0.045496743,-0.062497463,0.020226892,-0.0015098598,-0.009216064,0.039110463,0.024245845,-0.007982851,0.015503246,-0.032812268,0.012475269,0.078220926,0.05567075,0.012530323,0.0053512626,0.020568227,0.0115613695,0.02446606,-0.013201984,-0.019566242,-0.0013722245,-0.036710102,-0.08385847,0.032349814,0.019962631,0.08385847,-0.024642235,-0.009981316,-0.031204687,-0.020909563,0.027086638,0.03481624,0.03864801,-0.038625985,-0.027152702,-0.027461005,-0.04849169,0.009650991,-0.043757033,0.022418046,0.041510824,0.048844036,-0.0054200804,-0.069192044,-0.018200899,0.00977211,-0.032790247,-0.0449462,-0.026778335,-0.025545122,0.0024168768,-0.019951621,-0.010944763,0.042744037,-0.005494403,0.0041868677,0.006083483,0.020414077,0.008913266,-0.015756495,0.037040427,-0.033120573,-0.024223823,0.028892415,-0.017496206,0.001650248,-0.0428101,-0.026756313,-0.037723098,-0.0058247284,-0.006276172,-0.004021705,-0.041312627,-0.012486279,-0.021107757,0.03970505,-0.047214434,0.022506133,-0.030544039,-0.016802525,-0.009601442,0.0550101,-0.051750895,0.0281657,0.0062816776,-0.005967869,0.06795883,-0.039308656,-0.02301263,0.02484043,0.049064253,0.0034271204,0.052455585,0.00877563,-0.023761367,0.016703427,0.029729236,-0.053997103,-0.042699993,-0.006523916,-0.008087453,-0.008819673,-0.032129597,-0.012244041,-0.038625985,0.007872743,0.033318765,0.006408302,-0.04849169,-0.007652526,0.0012084384,-0.0040079416,-0.0142149795,-0.0216583,0.052543674,-0.07504981,0.00079897325,0.012277074,0.0635545,0.023629237,-0.06403898,-0.034067504,0.03122671,-0.005376037,-0.05875378,0.05637544,-0.032636095,-0.014919672,0.05492201,-0.017198915,-0.09909745,-0.00830767,-0.0075809555,0.057080135,0.043360643,-0.020843498,0.018828517,-0.0084398,0.011847652,0.028011547,-0.02499458,-0.007977345,-0.016989708,0.014203968,-0.011737543,0.049460642,-0.06166064,0.015294041,0.006116515,0.010961279,0.018333029,0.031424906,-0.031557035,-0.04146678,0.042986274,-0.042766057,-0.012508301,-0.023100719,-0.008560919,-0.0019324004,0.025589166,0.004418095,0.0051640784,-0.00077763974,0.0023549409,0.042105407,-0.03545487,0.019874545,-0.045232482,-0.023453064,0.08011479,-0.042369667,-0.053732842,0.002495329,0.011979781,0.00056740176,0.027372919,-0.027989525,-0.0065844753,-0.0077461177,0.00744332,-0.024422018,-0.03578519,-0.019753426,0.007960829,0.005433844,-0.0073937713,-0.00018735613,-0.030213714,0.0853119,0.05144259,0.006188086,0.014963716,-0.03016967,0.016802525,0.029464977,-0.0029261278,-0.004082265,-0.0028091376,-0.0045254505,0.0358953,-0.027086638,-0.025941512,-0.014919672,-0.010256587,0.0043768045,0.0015951938,-0.024267865,-0.00032051833,0.022429058,0.0003160452,-0.018982667,0.032349814,-0.006804692,0.019048734,0.06254151,0.020105774,-0.0068927784,-0.031446926,0.0073332116,0.018410105,0.025457036,-0.0017493453,-0.03933068,0.044417683,0.018806495,0.010895215,-0.011704511,-0.02406967,-0.013796568,0.0076360097,0.016505232,0.002799503,-0.027174724,0.07174656,0.027174724,0.032503966,-0.0054090694,0.04796317,-0.0045447196,0.018531224,-0.016945666,0.015877614,-0.053732842,0.048976164,0.006468862,0.016031766,-0.011269583,-0.0069918763,-0.0008154895,-0.0155472895,0.012970756,0.03549891,-0.0433166,-0.02831985,-0.080423094,-0.026932487,-0.0038978332,-0.017980684,0.045232482,0.005009927,0.052631762,-0.050473638,0.0032674633,0.0145012615,-0.010906226,0.032217685,0.0077571287,-0.0012256429,0.0007852097,0.012519312,0.033847287,0.032922376,0.029002523,0.022219852,0.049901076,-0.015646387,-0.00558249,-0.016450178,0.017837541,0.016362092,-0.001424526,-0.03098447,0.00024086187,0.0058412445,-0.014897651,-0.03545487,0.027306855,0.036996383,0.0022682308,-0.011082399,-0.003977662,0.01097229,-0.007949818,0.020557217,0.025192775,-0.04532057,-0.022407036,0.040894218,0.056683745,0.037260644,0.0057861903,0.03908844,0.040651977,0.045893133,-0.01912581,-0.031248732,-0.02977328,-0.048007213,-0.0044015786,0.004671344,-0.0025476303,0.026205773,0.022924544,-0.005802707,0.0046300534,0.050165333,-0.0073001795,0.017848553,0.026844399,0.06681371,-0.019698372,-0.0030197196,-0.013829601,0.041290607,0.0057641687,-0.051090244,0.003328023,0.014303066,-0.010256587,0.024179779,0.036577974,-0.0022090476,-0.0071405224,-0.013752525,0.037282664,0.008924277,0.009469313,0.008693049,0.010999817,0.0009008234,-0.009623464,0.00053574564,0.045672916,0.0645675,-0.012651442,0.0116935,-0.021041693,-0.03829566,0.0069808653,0.0004886055,0.023761367,-0.0042006313,0.030918406,0.01036119,-0.025236819,0.030852342,0.02378339,0.019511187,-0.008010378,-0.008384746,0.022638263,-0.025192775,-0.039110463,0.004109792,0.017914617,-0.016967686,-0.03391335,-0.02499458,-0.01595469,-0.0029343858,0.032746203,-0.020568227,-0.047698908,-0.004032716,-0.029927433,0.0118256295,0.03265812,0.029817324,0.021052703,0.046774,-0.004379557,0.021063715,0.02325487,0.0144902505,-0.01581155,-0.007680053,0.02871624,-0.009992327,0.0186083,0.041664977,0.0025531359,-0.012299095,-0.0118146185,-0.031821296,-0.010140973,0.0016791513,-0.0136754485,0.005890793,0.033142593,0.031050537,-0.006777165,-0.007338717,0.002620577,-0.04239169,-0.027372919,-0.0102400705,-0.011407218,0.012519312,-0.012122923,-0.00956841,-0.012695485,-0.008726082,0.031072559,0.025280863,0.0016240972,0.0011726533,0.018399095,-0.020006675,-0.0155472895,-0.010185016,-0.035829235,-0.000036172292,-0.011539348,0.026778335,0.027571114,0.005995396,-0.01648321,0.0020191106,0.01715487,-0.026227793,-0.004010694,0.027461005,-0.0012483527,0.031094579,0.0025214797,-0.0043850625,0.020689346,-0.024642235,-0.01195776,-0.08460721,0.026866421,0.0066670566,0.015888626,-0.005406317,-0.023100719,0.004062996,-0.034089524,-0.012034835,0.0047979685,0.00097377016,-0.03283429,-0.044858117,-0.023210827,-0.05355667,0.017870575,-0.0047621834,-0.015106857,0.028496023,0.0054999087,0.008467327,-0.024972558,-0.04388916,0.010416244,0.014875629,0.031160645,0.013488265,0.00065617653,0.025236819,0.025082666,-0.03893429,-0.026249815,-0.0082361,0.011880684,0.039947286,-0.012530323,0.026844399,-0.0051145297,-0.0038427792,0.010592417,0.006628519,0.030125627,-0.0030334832,-0.011572381,-0.0036721113,0.03825162,-0.02710866,0.052059196,0.031468946,-0.031204687,-0.003383077,0.022968588,-0.025589166,0.011550359,0.030323822,0.0028930951,-0.028870393,-0.04212743,0.0019626801,-0.0027141692,-0.016362092,-0.048403602,-0.011451262,0.02444404,-0.005241154,0.032437902,-0.012783572,0.01355433,-0.07372851,-0.010999817,-0.022792416,-0.013994763,-0.009882218,-0.054393493,0.0008918771,-0.0064908834,0.0039914255,0.014699456,-0.0142259905,0.06157255,0.0070524355,-0.004539214,0.025963534,-0.021592235,-0.023871476,0.0071955766,0.003787725,0.001202933,-0.008456316,0.016428156,-0.014016785,-0.0060449447,-0.029288804,0.035146564,0.03336281,0.031424906,0.0058852877,-0.0036858749,0.053204324,0.025677253,-0.005213627,-0.0050044213,0.002686642,0.011010828,0.004310739,-0.010157489,-0.017617326,0.015128878,0.026778335,0.0009909746,0.017121838,0.0014382894,0.00235907,-0.009689529,0.0031463443,-0.03959494,0.0055219303,0.0091555035,0.009601442,-0.0019599274,0.001315794,0.030566059,0.001428655,0.01914783,0.017980684,-0.008070937,-0.05954656,0.04756678,0.037767142,0.008726082,0.0070359195,0.007355233,-0.025192775,0.019830503,-0.0043933205,0.017529238,-0.008676533,-0.0011045238,-0.013928698,-0.0074488255,-0.0038840699,-0.04468194,0.0055439523,0.0065734647,-0.0013660309,0.021482127,-0.04668591,-0.014413174,0.044153422,-0.042699993,0.0060449447,0.007002887,0.041642953,0.0019365294,0.014644402,-0.010190521,-0.022407036,-0.019841513,-0.0039528874,-0.009012363,0.052059196,0.036974363,-0.0064633563,0.012166966,0.010394222,-0.01434711,-0.0224731,-0.04998916,0.011748554,0.034089524,-0.025743317,-0.01003637,0.03761299,-0.035014436,0.024047649,-0.0635545,0.024179779,-0.043536816,0.0056815874,-0.024532126,0.0022241874,-0.019841513,0.020821476,-0.008819673,0.008874727,0.025082666,-0.0061330316,-0.0070083924,0.020160828,0.00770758,-0.006468862,0.031292774,0.027725266,-0.010526352,-0.031248732,0.033494942,0.008538897,0.029332846,0.005142057,0.028606132,-0.009601442,-0.017198915,0.0011065883,0.0021512406,-0.008830684,-0.012211009,-0.0015043544,0.0052796924,0.010465792,-0.021680322,-0.008995847,0.012948735,0.0086379945,0.011968771,-0.00000583875,0.03402346,-0.04188519,-0.004993411,0.005731136,-0.0428101,0.029949453,0.020931585,-0.012541333,-0.0372166,-0.055362444,-0.002522856,0.00041841148,0.012794583,0.026007576,0.025853425,0.014919672,0.0255231,0.026029598,0.018806495,-0.011638446,0.015316063,0.018024726,-0.044219486,0.03404548,-0.0136754485,0.0033335283,0.055142228,0.04437364,-0.0039060914,0.018421115,0.048051257,0.04558483,-0.030367864,-0.0037326708,0.013224005,-0.00224208,-0.016956676,-0.018586278,0.008505865,0.009194042,0.004574999,0.011264077,0.00038090584,0.011308121,0.004467644,0.023298914,0.032217685,0.02272635,0.01302581,-0.009733573,0.029509021,-0.005001669,-0.0062651616,0.00037127137,-0.017474186,-0.01036119,-0.046289522,0.03789927,0.00824711,-0.026844399,0.011484294,-0.042017322,0.008181046,0.01582256,-0.0014809564,-0.007531407,0.0028352884,0.016009744,0.0075259013,-0.011120937,-0.008671028,0.036467865,0.022517145,0.00956841,0.0023026394,-0.011203518,0.015316063,-0.007922291,-0.008280143,-0.0039694034,-0.03307653,-0.020986639,-0.037062448,0.0007459836,0.01635108,-0.004563988,0.017187903,0.023563173,0.0164722,0.0059623634,-0.023144761,-0.011352164,0.044043314,-0.000047871297,-0.016130865,0.04426353,0.0071570384,-0.05994295,0.06421515,0.0014203968,0.023409022,-0.026998552,0.040453784,0.007927797,0.041664977,-0.032900356,-0.041422736,-0.0058687716,-0.0039969306,0.0028407937,0.017264979,0.021823462,0.008302164,-0.02909061,0.0012077503,0.018244943,-0.0102290595,-0.0017355818,-0.018696386,-0.0028022558,-0.010702525,-0.027703244,-0.0010646095,-0.0353888,-0.018938625,0.017606314,-0.034596022,-0.0045915153,0.006419313,-0.01009693,0.047214434,0.015877614,0.018542236,0.0010233189,-0.002105821,-0.01980848,0.030103605,0.008538897,0.00001852701,-0.014468228,-0.004668591,0.014743499,0.040453784,0.0022351982,-0.00040223933,-0.007355233,-0.019301983,0.014005774,-0.014523283,-0.0006217677,0.011968771,0.025302883,-0.03096245,0.009981316,-0.005835739,-0.0025517596,-0.00047656242,0.008258121,0.009865702,-0.0011341154,-0.0052989614,0.05434945,0.035697106,-0.036071476,0.014765521,-0.0052218856,-0.021460105,-0.028231764,-0.004415342,-0.0072120926,0.006457851,-0.023144761,0.027064616,0.013102886,0.020281946,-0.008621478,-0.006832219,-0.018663354,-0.008748103,-0.022043679,-0.013532308,-0.07289168,0.060779773,-0.0018484428,0.014413174,0.0038703063,-0.018487182,0.015305052,0.0016089573,-0.0063092047,0.022550177,-0.023651259,0.0040850174,-0.0053347466,-0.0144902505,0.02034801,-0.011572381,0.03519061,-0.0003452927,0.023387,0.0015717958,0.036666058,0.0026907711,0.045364615,0.014380142,-0.056992047,-0.009882218,-0.031006493,0.004123555,-0.00016129143,0.008472833,0.04137869,-0.01409386,-0.015668409,-0.0011279217,-0.016604329,-0.03083032,-0.044197466,-0.005629286,-0.020458119,0.00046142252,0.00007522632,-0.05461371,0.00065067114,0.016009744,0.022616241,-0.0016915385,-0.0029481493,0.014578337,0.0076910635,-0.038890246,-0.017298011,-0.00005496812,-0.02179043,-0.00062624086,-0.00063966034,-0.026117684,-0.021823462,-0.0012283955,0.0043575354,-0.0025324905,0.023453064,0.0029564074,-0.028407937,-0.00080585503,0.009920756,0.0039969306,0.006964349,0.005593501,-0.051662806,0.0019090024,-0.0029866872,0.001639237,0.020425087,-0.019357037,-0.008962815,-0.00857193,0.008676533,-0.016813535,0.017441152,0.006661551,0.010856677,-0.042083386,0.028672198,-0.033869307,0.011170485,0.02072238,0.028628154,0.03415559,-0.0006448216,-0.029861366,-0.006011912,-0.0039060914,-0.005703609,0.029949453,-0.005731136,-0.015404149,-0.0066670566,-0.018035738,-0.015866604,-0.0045887628,-0.027020574,-0.024377974,-0.00949684,-0.061044034,0.0128936805,-0.03816353,0.008203067,-0.045276526,0.004079512,0.0014086979,0.009474818,0.03323068,-0.015305052,0.013179962,-0.010592417,-0.0025159742,0.022792416,-0.007399277,-0.023210827,-0.019489167,0.011374186,0.011330143,0.022142775,0.002814643,0.005309972,0.016901622,0.037767142,-0.025545122,0.004690613,0.0006664992,-0.0031133117,-0.0045061815,0.007294674,0.022451079,-0.015161911,-0.028540067,-0.012563355,-0.033296745,0.032922376,-0.015404149,0.008874727,-0.014170936,-0.016428156,0.007030414,0.029420933,-0.009194042,-0.038317684,0.02589747,-0.049768943,0.004547472,0.020964617,0.0035014434,-0.0019791964,-0.01822292,0.023364978,-0.02299061,-0.0086435005,-0.019720394,0.0068377242,-0.008192057,0.001837432,0.014170936,-0.0037271655,0.0010288242,-0.016890611,-0.001233901,-0.0033693134,-0.015569312,-0.0016323553,0.0039143497,0.013653427,-0.038515877,-0.020612272,-0.0029481493,-0.0047704414,0.018145846,-0.006496389,0.012541333,0.051883023,-0.0028986007,-0.021757398,0.013576351,0.0032289254,0.024201801,-0.025479058,0.006628519,0.030191692,-0.02673429,0.016384114,0.007630504,0.016989708,-0.020546205,-0.005590748,0.009529872,0.0022186819,0.0017548507,0.027350897,-0.0039886725,-0.0016997966,0.02459819,-0.01580054,0.022164797,0.013983753,-0.0091555035,0.037657034,0.042766057,0.028650176,0.015591333,0.023034653,0.0002697653,0.0021884022,-0.005863266,-0.015668409,-0.015602344,-0.0005663695,0.013741514,-0.028496023,-0.014974726,-0.001066674,0.008467327,-0.011330143,0.014523283,0.039000355,0.008181046,-0.0060284287,0.018795485,-0.0052301437,0.024377974,-0.027130682,0.0025834157,-0.017419131,-0.0041125445,-0.036688082,-0.025589166,0.022704327,-0.026536096,-0.0046465695,0.032415878,-0.03362707,-0.0036500897,-0.0136864595,0.038912266,0.018586278,0.010207038,-0.030940428,-0.014963716,-0.016119853,0.012882669,0.0107796015,-0.058665693,0.024422018,0.0003055505,-0.009243591,0.022924544,-0.00080723135,-0.013862633,0.0072506308,-0.020292956,0.019643318,-0.01381859,-0.014776532,-0.008984836,-0.026690248,-0.020557217,0.01409386,0.03578519,-0.014875629,-0.012321117,0.007481858,0.024532126,0.0014176442,-0.0186083,0.029200718,-0.016196929,0.010388717,-0.014049817,-0.015987722,0.0039446293,0.026800357,-0.009188537,-0.008125992,-0.0060504503,-0.005020938,0.032085553,0.0005636168,0.008335197,0.011352164,0.023342956,0.016648373,0.019610286,0.006391786,-0.021471115,-0.041664977,0.025787361,-0.0027884922,-0.021537181,-0.040960282,-0.003939124,0.03604945,0.000026838894,-0.0066395295,-0.021063715,0.010652976,0.014589348,0.008527887,0.023078697,0.0051640784,-0.020678336,0.001409386,-0.0059623634,0.0003224108,0.0035757665,0.020986639,-0.0074378145,-0.025038624,0.027769309,0.010548374,0.007916786,0.0049851527,-0.0033858297,-0.017419131,0.00023690486,-0.0047429143,0.020502163,0.016780503,0.031072559,0.010702525,0.00029488374,-0.0003523465,0.005590748,-0.04388916,0.003950135,-0.029575085,-0.024047649,0.022638263,-0.0083792405,0.00068301545,-0.021294942,0.01302581,0.030477973,0.05210324,-0.012739529,0.016318047,-0.009805143,-0.02605162,-0.042589884,-0.010295125,0.026161728,-0.015448192,0.014831586,0.007944313,-0.0063752695,0.016923644,-0.004696118,0.005802707,-0.05461371,0.034067504,0.02977328,-0.040651977,0.006138537,-0.0033142595,-0.01609783,-0.013598373,-0.020997649,-0.044153422,-0.009518861,-0.009926262,-0.02512671,0.019456133,0.021867506,0.016747471,-0.02112978,-0.02484043,-0.010140973,-0.03151299,0.01580054,0.024554148,0.04278808,0.010994312,-0.030125627,-0.057344396,0.008764619,-0.0032289254,-0.02301263,0.035631042,0.03602743,0.006380775,0.011363175,0.028980501,-0.035058476,-0.012001803,-0.013168951,-0.04010144,0.011528337,0.017044762,0.0010797493,-0.004090523,0.030632125,-0.002031498,-0.018123824,-0.0049108295,-0.0019296476,-0.031535015,-0.024906494,-0.0036858749,-0.016042776,-0.011539348,-0.041532844,0.028892415,-0.017738445,-0.024796385,-0.040211547,-0.009551894,0.0071074897,-0.042744037,-0.012860647,-0.030499995,0.05276389,-0.015249997,0.026998552,0.013708482,0.023849454,0.005890793,-0.016108843,0.020788444,0.0066835727,-0.026293859,0.002829783,0.005967869,-0.0038978332,-0.010531858,0.037811186,0.005574232,-0.0033610554,0.030411908,-0.005725631,-0.0061660637,-0.009739078,0.03199747,0.031711187,-0.002627459,-0.006408302,0.0047043767,-0.022274906,-0.0038978332,0.033406854,-0.018277975,-0.015492235,0.0006138537,0.02354115,-0.018046748,0.0031408388,-0.042677972,-0.006512905,-0.0025600176,0.03855992,-0.017804509,-0.026492054,0.04849169,0.012959745,-0.020689346,-0.013400178,-0.004905324,0.025060646,-0.015371117,0.02831985,0.038846202,-0.005546705,0.034353785,0.013389167,-0.0010109317,0.015238986,0.016637363,-0.038978335,-0.047346562,-0.0024939526,-0.003402346,0.0059183203,-0.044615876,0.0030692685,0.056155223,-0.03545487,0.004277707,-0.017077794,0.003939124,0.0358953,0.025941512,-0.017066784,-0.013146929,-0.0118146185,-0.00045591712,-0.004013447,0.07174656,0.011748554,0.02591949,-0.0005622404,-0.027725266,0.023100719,0.029839344,-0.0063312263,-0.00092009234,-0.004445622,0.013279059,-0.021856494,0.007074457,-0.019191874,0.035653062,-0.008566424,0.041620933,-0.011473283,-0.01595469,0.0032371837,-0.0022861233,0.009034385,0.048976164,0.040233567,0.006738627,-0.005208122,0.009348193,0.016791513,0.010129962,0.009078428,-0.004800721,-0.019180864,0.0065844753,-0.017066784,0.021636277,-0.013069853,0.004764936,-0.00584675,-0.0072396197,-0.026492054,-0.0050347014,-0.00040395977,0.004294223,-0.017584292,-0.010520847,0.02354115,-0.011726532,-0.003908844,0.056903962,-0.010427254,-0.0036886276,-0.015778517,-0.00075768266,-0.010702525,-0.0030224724,0.0053815423,0.059062082,0.011352164,0.031204687,0.03798736,-0.0062816776,0.003974909,-0.012574366,0.0021884022,0.0060614613,0.018399095,0.0147545105,-0.021526169,0.031843316,-0.03045595,0.00791128,0.068399265,-0.02166931,-0.015007759,0.015932668]},{"id":"word-ladder","name":"Word Ladder","description":"You are given two words, `beginWord` and `endWord`, and also a list of words `wordList`. All of the given words are of the same length, consisting of lowercase English letters, and are all distinct.\n\nYour goal is to transform `beginWord` into `endWord` by following the rules:\n    \n* You may transform `beginWord` to any word within `wordList`, provided that at exactly one position the words have a different character, and the rest of the positions have the same characters.\n* You may repeat the previous step with the new word that you obtain, and you may do this as many times as needed.\n\nReturn the **minimum number of words within the transformation sequence** needed to obtain the `endWord`, or `0` if no such sequence exists.\n\n**Example 1:**\n\n```java\nInput: beginWord = \"cat\", endWord = \"sag\", wordList = [\"bat\",\"bag\",\"sag\",\"dag\",\"dot\"]\n\nOutput: 4\n```\n\nExplanation: The transformation sequence is `\"cat\" -> \"bat\" -> \"bag\" -> \"sag\"`.\n\n**Example 2:**\n\n```java\nInput: beginWord = \"cat\", endWord = \"sag\", wordList = [\"bat\",\"bag\",\"sat\",\"dag\",\"dot\"]\n\nOutput: 0\n```\n\nExplanation: There is no possible transformation sequence from `\"cat\"` to `\"sag\"` since the word `\"sag\"` is not in the wordList.\n\n**Constraints:**\n* `1 <= beginWord.length <= 10`\n* `1 <= wordList.length <= 100`\n","difficulty":"Hard","concepts":["Adjacency List"],"solutions":{"python":"class Solution:\n    def ladderLength(self, beginWord: str, endWord: str, wordList: List[str]) -> int:\n        if endWord not in wordList:\n            return 0\n\n        nei = collections.defaultdict(list)\n        wordList.append(beginWord)\n        for word in wordList:\n            for j in range(len(word)):\n                pattern = word[:j] + \"*\" + word[j + 1 :]\n                nei[pattern].append(word)\n\n        visit = set([beginWord])\n        q = deque([beginWord])\n        res = 1\n        while q:\n            for i in range(len(q)):\n                word = q.popleft()\n                if word == endWord:\n                    return res\n                for j in range(len(word)):\n                    pattern = word[:j] + \"*\" + word[j + 1 :]\n                    for neiWord in nei[pattern]:\n                        if neiWord not in visit:\n                            visit.add(neiWord)\n                            q.append(neiWord)\n            res += 1\n        return 0\n","javascript":"class Solution {\n    /**\n     * @param {string} beginWord\n     * @param {string} endWord\n     * @param {string[]} wordList\n     * @return {number}\n     */\n    ladderLength(beginWord, endWord, wordList) {\n        if (!wordList.includes(endWord)) {\n            return 0;\n        }\n\n        const nei = {};\n        wordList.push(beginWord);\n        for (const word of wordList) {\n            for (let j = 0; j < word.length; ++j) {\n                const pattern =\n                    word.substring(0, j) + '*' + word.substring(j + 1);\n                if (!nei[pattern]) {\n                    nei[pattern] = [];\n                }\n                nei[pattern].push(word);\n            }\n        }\n\n        const visit = new Set([beginWord]);\n        const q = [beginWord];\n        let res = 1;\n        while (q.length > 0) {\n            const size = q.length;\n            for (let i = 0; i < size; ++i) {\n                const word = q.shift();\n                if (word === endWord) {\n                    return res;\n                }\n                for (let j = 0; j < word.length; ++j) {\n                    const pattern =\n                        word.substring(0, j) + '*' + word.substring(j + 1);\n                    for (const neiWord of nei[pattern]) {\n                        if (!visit.has(neiWord)) {\n                            visit.add(neiWord);\n                            q.push(neiWord);\n                        }\n                    }\n                }\n            }\n            ++res;\n        }\n        return 0;\n    }\n}\n","cpp":"class Solution {\npublic:\n    int ladderLength(string beginWord, string endWord, vector<string>& wordList) {\n        if (endWord.empty() || find(wordList.begin(), wordList.end(), endWord) == wordList.end()) {\n            return 0;\n        }\n\n        unordered_map<string, vector<string>> nei;\n        wordList.push_back(beginWord);\n        for (const string& word : wordList) {\n            for (int j = 0; j < word.size(); ++j) {\n                string pattern = word.substr(0, j) + \"*\" + word.substr(j + 1);\n                nei[pattern].push_back(word);\n            }\n        }\n\n        unordered_set<string> visit{beginWord};\n        queue<string> q;\n        q.push(beginWord);\n        int res = 1;\n        while (!q.empty()) {\n            int size = q.size();\n            for (int i = 0; i < size; ++i) {\n                string word = q.front();\n                q.pop();\n                if (word == endWord) {\n                    return res;\n                }\n                for (int j = 0; j < word.size(); ++j) {\n                    string pattern = word.substr(0, j) + \"*\" + word.substr(j + 1);\n                    for (const string& neiWord : nei[pattern]) {\n                        if (visit.find(neiWord) == visit.end()) {\n                            visit.insert(neiWord);\n                            q.push(neiWord);\n                        }\n                    }\n                }\n            }\n            ++res;\n        }\n        return 0;\n    }\n};\n","java":"class Solution {\n    public int ladderLength(String beginWord, String endWord, List<String> wordList) {\n        if (!wordList.contains(endWord)) {\n            return 0;\n        }\n\n        Map<String, List<String>> nei = new HashMap<>();\n        wordList.add(beginWord);\n        for (String word : wordList) {\n            for (int j = 0; j < word.length(); j++) {\n                String pattern = word.substring(0, j) + \"*\" + word.substring(j + 1);\n                nei.computeIfAbsent(pattern, k -> new ArrayList<>()).add(word);\n            }\n        }\n\n        Set<String> visit = new HashSet<>();\n        Queue<String> q = new LinkedList<>();\n        q.offer(beginWord);\n        int res = 1;\n        while (!q.isEmpty()) {\n            int size = q.size();\n            for (int i = 0; i < size; i++) {\n                String word = q.poll();\n                if (word.equals(endWord)) {\n                    return res;\n                }\n                for (int j = 0; j < word.length(); j++) {\n                    String pattern = word.substring(0, j) + \"*\" + word.substring(j + 1);\n                    for (String neiWord : nei.getOrDefault(pattern, Collections.emptyList())) {\n                        if (!visit.contains(neiWord)) {\n                            visit.add(neiWord);\n                            q.offer(neiWord);\n                        }\n                    }\n                }\n            }\n            res++;\n        }\n        return 0;\n    }\n}\n","csharp":"public class Solution {\n    public int LadderLength(string beginWord, string endWord, IList<string> wordList) {\n        if (!wordList.Contains(endWord)) {\n            return 0;\n        }\n\n        Dictionary<string, List<string>> nei = new Dictionary<string, List<string>>();\n        wordList.Add(beginWord);\n        foreach (string word in wordList) {\n            for (int j = 0; j < word.Length; j++) {\n                string pattern = word.Substring(0, j) + \"*\" + word.Substring(j + 1);\n                if (!nei.ContainsKey(pattern)) {\n                    nei[pattern] = new List<string>();\n                }\n                nei[pattern].Add(word);\n            }\n        }\n\n        HashSet<string> visit = new HashSet<string>();\n        Queue<string> q = new Queue<string>();\n        q.Enqueue(beginWord);\n        int res = 1;\n        while (q.Count > 0) {\n            int size = q.Count;\n            for (int i = 0; i < size; i++) {\n                string word = q.Dequeue();\n                if (word == endWord) {\n                    return res;\n                }\n                for (int j = 0; j < word.Length; j++) {\n                    string pattern = word.Substring(0, j) + \"*\" + word.Substring(j + 1);\n                    if (nei.ContainsKey(pattern)) {\n                        foreach (string neiWord in nei[pattern]) {\n                            if (!visit.Contains(neiWord)) {\n                                visit.Add(neiWord);\n                                q.Enqueue(neiWord);\n                            }\n                        }\n                    }\n                }\n            }\n            res++;\n        }\n        return 0;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def ladderLength(self, beginWord: str, endWord: str, wordList: List[str]) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {string} beginWord\n     * @param {string} endWord\n     * @param {string[]} wordList\n     * @return {number}\n     */\n    ladderLength(beginWord, endWord, wordList) {}\n}\n","cpp":"class Solution {\npublic:\n    int ladderLength(string beginWord, string endWord, vector<string>& wordList) {\n        \n    }\n};\n","java":"class Solution {\n    public int ladderLength(String beginWord, String endWord, List<String> wordList) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int LadderLength(string beginWord, string endWord, IList<string> wordList) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/h9iTnkgv05E","embedding":[0.033564728,-0.010920261,0.046494856,-0.03345307,-0.03626688,0.023225095,-0.009262123,0.010434544,-0.039527327,0.07119385,-0.039661318,-0.030058634,-0.013365596,0.0108365165,0.02089142,0.009340284,0.024230028,-0.012226673,-0.01099284,0.032872442,0.030237287,0.00704569,0.003067834,0.006794457,0.031621862,0.011746539,-0.012907794,0.028718723,0.027267156,-0.069273315,0.04363638,-0.0090834685,-0.018803395,0.031956837,-0.011299903,0.0028500988,-0.007436497,0.037316475,0.020009313,-0.014817164,-0.035730917,-0.03126455,-0.037941765,-0.037830107,0.030326616,-0.023627069,-0.009094635,0.034368675,-0.0076207346,0.018725233,0.007698896,0.04531127,-0.0012436034,0.004474739,-0.028450742,-0.070389904,-0.009111384,-0.012148512,0.007174098,-0.014504518,0.037584458,-0.015688105,0.013454923,0.0028500988,-0.050559245,-0.0005645764,0.04218481,0.021237563,0.015230303,-0.012182009,0.017229002,0.048683375,-0.012461157,0.0054573393,-0.029857647,-0.019317027,0.008927146,0.009848334,-0.014593846,-0.0027244824,-0.034703653,-0.018758731,0.03919235,-0.031800516,0.023582404,0.0140467165,-0.02162837,0.014504518,0.01237183,-0.098081365,0.0017014057,-0.010741606,-0.0022569099,-0.0059905113,0.018144606,0.0009232813,0.020165635,0.026306886,-0.018792229,0.013856896,0.018658238,0.019026713,0.056142204,-0.011992189,-0.006180332,-0.0468075,-0.005510377,-0.011054252,-0.033185087,-0.013052951,-0.08687079,0.0075984024,0.0053540543,0.0039806473,0.076910794,-0.0067218784,0.0044356585,-0.02015447,-0.002651904,0.0072634253,-0.004089515,-0.006559973,0.021740029,-0.03383271,-0.024788324,0.010417795,0.0056527425,-0.0066102194,0.06373502,0.0015060023,0.026909847,0.0063534034,0.054623637,0.019339358,-0.038366072,-0.023872718,-0.005499211,0.0014501727,-0.031286884,0.054177,0.018557744,-0.009831585,0.003592632,0.012583982,-0.0036959166,-0.005602496,-0.0065767216,0.0015716021,-0.043949027,-0.010780687,0.00842468,-0.051497184,0.0010782083,0.04591423,0.010602033,-0.06087655,-0.034569662,0.027914777,0.042095486,0.014169541,0.005705781,-0.04886203,-0.004030894,0.0016134742,0.027177827,0.019707834,0.013957389,0.002395088,-0.033006433,-0.059000675,0.005164234,-0.037830107,0.0040113535,-0.053596374,0.006169166,-0.027289487,-0.03602123,0.009826002,-0.030773252,-0.012762637,-0.014872994,-0.0028780135,-0.03564159,0.024676664,-0.0032995269,-0.0045947726,0.018613575,0.015051648,-0.009820419,0.0032855694,-0.009770173,0.0630204,0.02952267,-0.011701875,-0.033051096,0.017385324,0.043346066,-0.009418447,0.043234408,-0.005351263,-0.07606219,0.030438274,0.012684476,0.011193826,0.006068673,0.0018758731,-0.060965877,0.048728038,-0.021695366,-0.081019856,0.019071376,-0.016972186,0.03787477,-0.043100417,-0.012583982,-0.008754075,0.037294142,-0.0270885,0.021215232,0.028428411,-0.01703918,0.0051558595,-0.010116315,0.045869563,0.0251233,0.010641114,0.009904163,0.0004319812,0.0016693037,0.038165085,-0.0021871228,-0.0031683273,-0.02015447,-0.013253937,-0.015341962,-0.026820518,-0.027356483,-0.010026989,-0.004896252,-0.0031459955,-0.018446086,-0.0038187418,0.030661592,0.015252635,-0.023627069,-0.022331823,-0.04459665,0.037830107,-0.016637208,0.014593846,0.0453336,-0.0034921388,-0.006582305,-0.051541846,-0.012952457,0.061903812,-0.037785444,0.0002887435,0.03164419,-0.022354154,0.008865734,0.0087149935,-0.046226874,-0.01433703,-0.019763663,-0.08410165,-0.012606313,0.04102356,-0.012003355,0.009881832,0.0068726186,0.002640738,0.021125903,-0.007079188,0.010440127,-0.034123026,0.035596926,-0.050067946,-0.013633578,-0.039504994,-0.02151671,0.034480333,0.0036624188,-0.009920912,-0.0064985603,0.0052368124,0.007950129,-0.0060910047,-0.047700774,-0.039036024,-0.051899157,-0.011115665,-0.015598778,-0.0017502566,-0.027981773,-0.001117289,-0.0011396208,-0.026440877,0.05560624,-0.028785719,-0.017083844,0.014069049,0.00012579098,0.015353128,-0.03260446,0.009753424,0.0335424,-0.0512292,-0.031554867,0.021617204,0.041224543,0.057616103,-0.028875047,0.017240167,-0.033408407,-0.026641864,0.0051251533,-0.0032046165,0.017496983,-0.05708014,-0.0050386176,0.0207016,0.033386074,0.028004106,0.014325865,0.039728314,-0.026195228,0.0030510852,-0.007056856,-0.05350705,0.008407931,-0.038500063,0.027512806,-0.0040755575,-0.031398542,0.025525274,0.041447863,0.056276195,-0.009887414,0.05891135,-0.024609668,-0.020266129,0.025636932,0.028785719,-0.03883504,-0.0014292366,0.01482833,0.0054433816,0.024922313,0.013868062,-0.029812982,-0.029634329,0.012684476,-0.008156698,-0.024364019,-0.02009864,-0.011204992,-0.010613198,-0.022086173,0.0035898404,-0.03798643,0.0027384397,0.0036847508,0.029187692,-0.059983276,0.04645019,0.036847506,-0.010696943,0.024944646,0.03247047,-0.0045780237,-0.0037964098,0.019774828,0.0006319208,0.01093701,0.030639261,0.008307438,0.0041509275,0.0018116691,-0.01635806,-0.02485532,0.05551691,-0.035239615,0.010535037,0.013153443,0.022867786,-0.016827028,-0.012796135,-0.011590216,-0.043658715,-0.014672007,-0.0053596376,0.08307438,0.03479298,0.03995163,-0.013700573,0.06476229,0.014526851,0.014203039,0.008837819,0.011947525,-0.004731555,-0.0031822848,-0.0068558697,-0.0002250629,-0.057794757,0.00428771,0.042073153,-0.0029310517,0.0350163,0.017910121,0.057035476,0.009507773,-0.009111384,-0.0067330445,-0.006158,-0.0022164334,-0.012606313,-0.004050434,-0.027110832,-0.020087475,-0.05096122,-0.01898205,0.003924818,0.034346342,0.012170844,0.018055279,-0.0026267807,-0.013890394,0.027468141,0.012316,0.04289943,0.043189745,-0.0007816138,-0.020031644,0.021594873,-0.03738347,0.08240443,-0.0131981075,-0.042586785,-0.009909746,-0.04276544,0.018747564,0.009144882,-0.029611997,0.009284455,-0.016279899,0.021092406,0.02009864,-0.032001503,-0.010495957,-0.021338057,0.03760679,-0.047700774,-0.023135768,-0.017742634,-0.039147686,-0.017563978,0.020422451,-0.020857923,-0.016536715,0.019227698,-0.009820419,-0.028361415,0.010495957,-0.00012919308,-0.015956087,-0.0236494,0.042832434,-0.01739649,0.009267706,0.007062439,0.015487119,-0.049308665,0.025301956,0.04511028,-0.0069898604,0.03506096,-0.06677215,-0.043524724,-0.028964374,-0.0482814,0.020087475,-0.026150564,0.00970876,0.010624365,0.0061245025,-0.025100969,-0.01818927,-0.026239892,-0.0072299275,-0.0002657138,0.006777708,-0.008787572,-0.014973487,0.015297298,0.0472988,-0.029924642,0.034123026,-0.014013219,-0.04117988,-0.04276544,0.003335816,0.017597476,-0.005906767,-0.06288641,-0.0006622781,-0.01089793,-0.012997121,0.032291815,-0.07172982,-0.010629947,0.022309491,0.017429987,0.017351827,0.008022707,-0.014437524,-0.007280174,0.009172796,-0.0335424,-0.025190296,0.0014390068,-0.006325489,-0.03137621,-0.0015883509,-0.014504518,-0.047120146,-0.014906491,-0.016916355,0.0055857473,-0.02253281,-0.00867033,-0.026485542,0.0060965875,-0.048326064,0.022309491,0.004304459,0.0022499312,-0.019350525,-0.023135768,0.012293668,0.0700326,0.018781062,-0.0070959367,0.013655909,-0.006911699,0.01960734,-0.0025709511,-0.02891971,-0.0012631437,-0.0015492702,-0.00470364,-0.017932454,-0.03923701,-0.020802094,-0.008620083,0.003838282,-0.01854658,0.0036959166,0.027222492,0.025078638,-0.029589664,0.038031094,-0.02523496,0.020277295,0.03343074,0.021036576,0.011037503,0.020556442,0.00695078,0.0014613386,-0.053819694,-0.02255514,-0.026150564,-0.0023266969,-0.05538292,0.03459199,-0.014370528,0.04129154,0.00931237,-0.012182009,-0.020143304,0.009022056,0.005041409,-0.011065418,-0.0063980673,-0.0112608215,0.03564159,0.0030706257,-0.015219137,0.031041233,0.010423378,0.027177827,0.011847032,-0.018490748,-0.043792706,-0.0052647274,-0.024922313,-0.000035700385,0.0040755575,-0.00088768994,0.02113707,0.013801066,0.011054252,-0.0067442106,-0.053953685,0.025100969,0.0670848,-0.0029422175,0.023470746,-0.0020824424,-0.011171495,-0.025636932,0.0023853178,-0.007151766,-0.010903512,-0.020310793,-0.022398818,0.031309213,-0.024431014,0.03800876,0.018613575,0.026842851,-0.006710713,0.008826653,-0.013287434,-0.036981497,0.0013713135,0.019585008,0.0065990537,-0.044239342,0.013533085,0.00016687803,-0.024431014,-0.008017125,0.015542949,0.0065097264,0.010490374,0.025525274,0.032537464,0.017653305,-0.027892446,-0.012472323,-0.016592544,-0.02002048,0.011992189,-0.00882107,0.011623714,0.021762362,0.006537641,0.015029317,0.01856891,0.05819673,-0.018256266,0.00970876,0.005133528,-0.047030818,-0.031912174,0.0042095487,-0.023135768,0.0014069048,-0.032403473,0.020444784,-0.008229277,0.008301855,-0.016469719,0.015509451,-0.023627069,0.01911604,0.0128296325,-0.02550294,0.017686803,0.049040683,-0.009764589,-0.03381038,0.00008544539,0.0109481765,-0.014258869,-0.020333124,0.016123576,-0.010512706,0.023828054,-0.0022108504,0.045043286,-0.012930125,0.020601107,0.0025528064,0.008296272,0.010479208,0.024565006,-0.003441892,-0.0354406,-0.016972186,-0.013041784,0.029924642,0.012182009,0.011523221,0.06936264,-0.005708572,-0.074409634,0.004282127,-0.027736124,-0.022622136,-0.0033637309,-0.0036903338,-0.03211316,0.000336722,0.027110832,0.0012757054,0.0027621672,-0.03724948,0.026865182,-0.03834374,-0.0029589664,-0.045668576,0.022376487,0.009937661,-0.050916556,0.0031152891,-0.03273845,-0.011093332,-0.0022652843,0.012260171,-0.018959718,-0.00886015,0.038053427,0.010920261,-0.012818466,0.043078087,-0.003388854,0.00630874,0.025145633,0.013722905,0.014203039,-0.01630223,-0.011981023,-0.038053427,0.022387652,-0.029210024,-0.016681872,-0.030929575,-0.0073695015,0.012639811,0.020444784,0.012874296,0.02755747,-0.002357403,0.02670886,-0.07356102,-0.013086448,-0.016023083,0.005691823,0.019718999,-0.02096958,0.036199883,0.031755853,0.004633853,0.02400671,0.027669128,-0.01715084,0.009770173,0.011802368,-0.0025681595,-0.049219336,0.027021505,0.01611241,-0.026418546,0.017351827,0.012416493,0.010646696,0.021237563,-0.016235234,0.032894775,0.01739649,0.021460881,-0.010239141,-0.016648374,-0.0014459855,0.049665973,-0.060474575,-0.0056862403,0.019451018,0.0049799965,0.015799765,-0.0062361616,-0.016067747,0.022890119,0.031532533,0.018803395,-0.044909295,-0.017630974,-0.0374728,-0.0020977955,-0.018044112,0.024899982,0.01237183,-0.02236532,-0.0058453544,-0.0016246401,-0.051139873,0.018613575,-0.015308464,0.011646045,0.0018256265,-0.04426167,0.00029467538,0.015609944,0.022354154,-0.019294694,0.037026163,-0.020165635,0.06360103,-0.007296923,0.021092406,-0.005398718,0.036356207,-0.0058509377,-0.025793254,0.044172347,0.033899706,-0.036467865,0.006532058,-0.039259344,0.0006490186,0.010244723,0.025458278,0.051497184,0.01242766,0.011299903,0.024542673,-0.019372856,0.014984653,-0.029567333,0.009736675,0.016592544,0.0172625,-0.011350149,0.012360664,-0.018848058,0.004002979,-0.0072243446,-0.00458919,-0.015219137,-0.07914398,-0.026798187,0.02670886,0.00047699377,-0.015085146,0.04658418,-0.03941567,-0.007458829,0.019707834,0.010646696,-0.017307162,0.0056499513,0.04962131,0.047254138,0.008971809,-0.03586491,-0.008647998,0.03381038,-0.016268732,-0.02952267,0.04341306,-0.00886015,-0.006783291,-0.02138272,0.034011368,-0.055248927,0.014482187,0.00404206,0.016748866,-0.023359086,0.014080214,-0.0033023183,0.015643442,-0.00912255,-0.008368851,0.03222482,-0.003235323,0.035351276,0.010401047,0.0028808052,0.041470196,-0.008022707,-0.05877736,0.0073918332,0.026262224,0.056320857,-0.025547605,0.019294694,0.012003355,0.025815587,0.026061237,-0.010535037,-0.00079487334,-0.0009016473,-0.0043128333,0.049889293,-0.01507398,0.018021781,-0.003922026,0.009976742,-0.0003550411,-0.010423378,-0.016514383,-0.0085865855,0.010367549,-0.011456225,-0.025190296,0.02782545,-0.018490748,-0.018501915,0.045020953,0.063243724,0.02559227,-0.015308464,-0.02009864,0.033609394,0.031666525,0.005066532,-0.03637854,0.0049353326,0.02353774,0.029500337,-0.03530661,-0.04801342,0.0041174297,0.024118368,-0.028227424,-0.0051837745,0.008553088,0.017988283,0.0062584933,-0.002255514,-0.007799389,0.006185915,0.014917658,-0.006543224,0.05256911,-0.053462382,0.024654333,-0.027334152,-0.03923701,0.02952267,-0.015297298,0.027512806,-0.038276743,0.033944372,-0.0021257105,-0.01567694,-0.030706257,0.0021033785,-0.0026100317,-0.025904914,-0.00704569,0.015163308,-0.019562677,-0.0022206206,0.011216158,0.04720947,0.00050490856,0.020902585,-0.008971809,0.0066381344,0.0023294883,0.0050860727,0.042296473,0.024230028,-0.048415393,0.016447388,0.020053977,0.018032948,0.06762076,-0.013700573,0.0032213654,0.007710062,-0.008240443,0.04017495,-0.050782565,0.036043562,0.0140467165,-0.012863129,0.019919986,-0.035485268,0.002795665,0.011244073,0.019730166,-0.009792504,0.046226874,0.032671455,0.03124222,-0.009412863,0.010412212,-0.004223506,0.009334702,-0.009027639,-0.022220163,0.001020983,-0.004636645,-0.00857542,-0.05855404,0.013823398,-0.046628844,-0.008502842,-0.022153169,0.03307343,0.048102748,-0.047120146,-0.010752773,0.016313396,-0.047834765,-0.017284831,0.016570212,0.031755853,0.031331547,0.004639436,-0.014739003,-0.004538943,0.01709501,-0.010490374,0.0009965575,0.010674612,0.015274967,0.00073695014,0.0035200536,0.0036959166,0.021192899,-0.019272363,0.009636181,0.011417144,0.03186751,0.03443567,0.027512806,0.02769146,-0.0216842,0.015174474,-0.0065990537,-0.013019453,-0.014593846,0.018948551,0.0048571713,-0.0025960745,-0.026619533,0.015788598,-0.018903889,-0.02402904,0.031666525,-0.01310878,0.021170568,-0.04298876,0.03566392,-0.06369036,0.025145633,0.029611997,0.0045975638,0.04971064,0.01698335,0.014482187,-0.01093701,-0.0013720114,-0.016737701,-0.0045138197,-0.006409233,0.0025583894,0.0144710215,0.031286884,-0.045378264,-0.026128232,0.0023294883,0.010903512,-0.0032688205,-0.035708584,0.01917187,-0.02485532,0.004100681,-0.022789625,0.005368012,-0.013443757,0.026664196,0.0039276094,-0.015051648,0.010685777,-0.013745237,0.018222768,-0.008011541,-0.023738727,0.0074923267,-0.009429612,0.018032948,0.04412768,0.016480885,-0.010830934,-0.0064594797,0.0052312296,0.021192899,-0.0011479952,-0.024207696,0.03291711,0.025167964,-0.03088491,0.04535593,-0.010060486,-0.010987257,-0.028718723,-0.04102356,-0.043547053,0.039973963,-0.00022331823,0.0042905016,0.01745232,0.003592632,-0.01739649,0.024274692,-0.004672934,-0.031219888,0.017485818,-0.010825351,-0.02586025,-0.03164419,0.0021145444,-0.0013126924,0.0016120784,0.024096036,-0.03421235,-0.004315625,-0.02105891,-0.002079651,0.0061747488,0.007051273,0.00037545376,-0.06150184,-0.02867406,-0.021807024,-0.013566582,0.002261097,-0.01020006,-0.012215507,0.017664472,0.009440778,-0.008943895,0.013443757,-0.004913001,-0.00034021135,0.01586676,0.016760033,0.011735373,0.055204265,-0.0018060862,-0.024051374,-0.0018563328,-0.014739003,-0.0053931354,0.008100868,-0.018970883,-0.0182451,-0.025659265,-0.0075984024,0.0035591342,0.022354154,-0.010613198,0.0037182486,0.008100868,-0.015732769,-0.008452595,-0.016369225,0.02586025,-0.0010495957,0.007693313,0.009591518,-0.007553739,-0.009049971,-0.0013775943,-0.03941567,0.043815035,-0.0035507597,0.021472048,0.03624455,0.004812508,0.010021405,-0.0039946046,-0.0027216908,0.002646321,0.01390156,-0.01592259,-0.0072634253,0.0350163,-0.0118247,0.05265844,-0.015721602,0.04557925,-0.00940728,0.011026338,-0.0029785067,0.0016037041,-0.0046282704,-0.01414721,-0.0016288273,-0.030170292,-0.0029338433,0.0010391276,-0.0021201274,-0.03800876,0.005242395,-0.019406354,0.0027663545,0.008966227,-0.023560073,-0.0033665223,-0.02523496,0.012338332,-0.002939426,-0.030438274,-0.018211601,0.046896826,-0.048683375,-0.021204066,-0.0009498003,0.00017952692,-0.03075092,0.0320685,-0.012126179,-0.016949853,-0.045646247,0.015710438,-0.028071102,0.017195504,0.026239892,-0.02646321,-0.0006720483,-0.008514008,0.039147686,-0.018312095,0.011936359,0.017362991,0.009144882,-0.003640087,-0.015297298,0.04180517,0.010272638,0.005878852,-0.005351263,-0.024431014,0.03220249,0.030348947,-0.019897655,-0.024475677,0.056410182,-0.0012024291,-0.014493353,0.019317027,0.03561926,0.026485542,-0.012193175,0.02340375,-0.010669028,0.020221466,-0.00753699,-0.018345593,0.020846756,-0.023426082,-0.001796316,0.010590867,0.00007262204,0.017496983,-0.009150464,-0.020388953,0.024721328,-0.02976832,-0.005340097,0.0127738025,-0.0018954135,0.011054252,-0.0072299275,0.009005307,0.01715084,0.011958691,0.012583982,-0.011221741,-0.01928353,0.012963623,0.012304834,-0.0054712966,0.0045808153,0.017117342,0.0008569837,-0.020422451,-0.019317027,0.015743935,-0.029545002,-0.008776406,-0.009329119,0.011400395,0.021304559,0.045400597,0.003634504,-0.0042793355,-0.031711187,0.014928823,-0.025391283,-0.009736675,-0.013868062,0.029701324,0.0015297298,0.013734071,0.010931428,-0.0051781912,0.011914027,-0.0058397716,0.016559046,0.014225371,0.02253281,0.009284455,-0.010077235,0.013443757,-0.0152638005,0.039147686,-0.0029059285,-0.001320369,0.017485818,-0.000539802,0.02009864,-0.052033145,-0.027423479,-0.015587612,0.03711549,0.025458278,-0.03970598,0.024721328,0.0025193088,-0.03086258,-0.01813344,-0.04363638,-0.021226397,-0.0055885385,0.009881832,0.026262224,0.013856896,0.015107478,-0.010434544,-0.05426633,-0.004656185,0.003212991,-0.0063199056,-0.026976842,-0.022208998,0.004427284,0.016346894,-0.028964374,-0.014872994,0.052345794,0.04153719,0.011389229,0.021829357,0.0153196305,-0.026306886,-0.028093433,0.008536339,-0.020489447,0.015219137,-0.03086258,0.02402904,0.011791202,-0.029678993,-0.017195504,-0.009161631,0.004340748,-0.025659265,-0.018166937,-0.0062194127,0.0055997046,0.0076263174,-0.03001397,-0.0015883509,-0.0058286055,-0.069273315,-0.020120973,0.0047594695,-0.013119946,-0.019506847,0.008547505,0.009044388,0.007218762,-0.018870391,0.01543129,0.049174674,0.010054903,0.05243512,0.01099284,0.0031236636,0.009362617,-0.00045884916,-0.016916355,0.030974237,0.025525274,0.0013140882,0.014348196,0.022376487,-0.03653486,0.022309491,-0.013778735,-0.01029497,-0.009898581,0.0052479785,-0.0030510852,0.015933756,0.044083018,0.004714806,-0.005116779,-0.010311719,-0.009451944,-0.005655534,-0.01990882,-0.06346704,-0.0019554303,-0.010127482,0.03159953,0.0027621672,-0.018903889,-0.019774828,-0.022275994,-0.0006640228,-0.012182009,-0.0265972,0.028406078,0.00032834758,-0.0241407,0.041626517,-0.033252083,-0.024989309,-0.02105891,0.013689407,0.0026100317,0.019060211,0.021315726,0.010434544,-0.0064315647,0.01665954,0.0010412212,0.05413234,-0.018669404,0.008022707,0.022867786,0.021371555,0.009418447,0.011076584,0.018222768,-0.04886203,0.011305485,0.02187402,-0.017910121,-0.01780963,0.03258213,0.007308089,0.04743279,-0.0028668477,-0.009658514,-0.020500613,-0.022309491,0.0068949503,-0.0005366616,0.014850662,0.0036959166,-0.02353774,-0.0021424592,-0.037428133,0.03624455,-0.018446086,0.0061133364,-0.016469719,0.015889091,-0.06275242,-0.0025946787,-0.0335424,-0.033989035,0.0086424155,-0.0087708235,-0.029634329,0.053373057,0.0076095685,-0.038142752,-0.023694064,0.01469434,0.04126921,-0.029611997,0.07767008,-0.017843125,0.0042011742,0.033386074,-0.011512054,-0.00753699,0.020980747,0.0048850863,-0.02353774,-0.0095971,0.021829357,0.023225095,-0.0071294345,0.021025412,-0.004430075,-0.0044775303,0.018289763,0.03258213,-0.0074699945,-0.006833538,-0.04667351,-0.011612548,-0.017597476,0.017351827,0.03941567,0.006777708,0.019216534,-0.026440877,-0.034636658,-0.008061788,-0.0020782552,0.0020712765,0.023582404,0.05953664,0.046852164,0.012874296,-0.006911699,0.017485818,-0.009055554,0.0027607717,0.015810931,0.03724948,-0.033721052,-0.01488416,0.0048348396,-0.032247152,0.011244073,0.0065711387,-0.016503217,-0.01635806,0.017865459]},{"id":"reconstruct-flight-path","name":"Reconstruct Flight Path","description":"You are given a list of flight tickets `tickets` where `tickets[i] = [from_i, to_i]` represent the source airport and the destination airport. \n\nEach `from_i` and `to_i` consists of three uppercase English letters.\n\nReconstruct the itinerary in order and return it.\n\nAll of the tickets belong to someone who originally departed from `\"JFK\"`. Your objective is to reconstruct the flight path that this person took, assuming each ticket was used exactly once.\n\nIf there are multiple valid flight paths, return the lexicographically smallest one.\n* For example, the itinerary `[\"JFK\", \"SEA\"]` has a smaller lexical order than `[\"JFK\", \"SFO\"]`.\n\nYou may assume all the tickets form at least one valid flight path.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/e5ea2ea5-da22-4c22-a5c1-5840dab7fb00/public)\n\n```java\nInput: tickets = [[\"BUF\",\"HOU\"],[\"HOU\",\"SEA\"],[\"JFK\",\"BUF\"]]\n\nOutput: [\"JFK\",\"BUF\",\"HOU\",\"SEA\"]\n```\n\n**Example 2:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/9bfece1f-1fec-4618-4f95-31b2abcd3100/public)\n\n```java\nInput: tickets = [[\"HOU\",\"JFK\"],[\"SEA\",\"JFK\"],[\"JFK\",\"SEA\"],[\"JFK\",\"HOU\"]]\n\nOutput: [\"JFK\",\"HOU\",\"JFK\",\"SEA\",\"JFK\"]\n```\n\nExplanation: Another possible reconstruction is `[\"JFK\",\"SEA\",\"JFK\",\"HOU\",\"JFK\"]` but it is lexicographically larger.\n\n**Constraints:**\n* `1 <= tickets.length <= 300`\n* `from_i != to_i`\n","difficulty":"Hard","concepts":["Adjacency List"],"solutions":{"python":"class Solution:\n    def findItinerary(self, tickets: List[List[str]]) -> List[str]:\n        adj = {src: [] for src, dst in tickets}\n        res = []\n\n        for src, dst in tickets:\n            adj[src].append(dst)\n\n        for key in adj:\n            adj[key].sort()\n\n        def dfs(adj, result, src):\n            if src in adj:\n                destinations = adj[src][:]\n                while destinations:\n                    dest = destinations[0]\n                    adj[src].pop(0)\n                    dfs(adj, res, dest)\n                    destinations = adj[src][:]\n            res.append(src)\n\n        dfs(adj, res, \"JFK\")\n        res.reverse()\n\n        if len(res) != len(tickets) + 1:\n            return []\n\n        return res\n","javascript":"class Solution {\n    /**\n     * @param {string[][]} tickets\n     * @return {string[]}\n     */\n    findItinerary(tickets) {\n        const adj = {};\n        const res = [];\n\n        for (const [src, dst] of tickets) {\n            if (!(src in adj)) {\n                adj[src] = [];\n            }\n            adj[src].push(dst);\n        }\n\n        for (const key in adj) {\n            adj[key].sort();\n        }\n\n        /**\n         * @param {Map} adj\n         * @param {string[]} result\n         * @param {string} src\n         * @return {void}\n         */\n        function dfs(adj, result, src) {\n            if (src in adj) {\n                let destinations = [...adj[src]];\n                while (destinations.length > 0) {\n                    const dest = destinations.shift();\n                    adj[src].shift();\n                    dfs(adj, res, dest);\n                    destinations = [...adj[src]];\n                }\n            }\n            res.push(src);\n        }\n\n        dfs(adj, res, 'JFK');\n        res.reverse();\n\n        if (res.length !== tickets.length + 1) {\n            return [];\n        }\n\n        return res;\n    }\n}\n","cpp":"class Solution {\npublic:\n    vector<string> findItinerary(vector<vector<string>>& tickets) {\n        map<string, vector<string>> adj;\n        vector<string> res;\n\n        for (const auto& ticket : tickets) {\n            const string& src = ticket[0];\n            const string& dst = ticket[1];\n            adj[src].push_back(dst);\n        }\n\n        for (auto& entry : adj) {\n            sort(entry.second.begin(), entry.second.end());\n        }\n\n        DFS(adj, res, \"JFK\");\n        reverse(res.begin(), res.end());\n\n        if (res.size() != tickets.size() + 1) {\n            return vector<string>();\n        }\n\n        return res;\n    }\n\nprivate:\n    void DFS(map<string, vector<string>>& adj, vector<string>& result, const string& src) {\n        if (adj.find(src) != adj.end()) {\n            vector<string> destinations = adj[src];\n            while (!destinations.empty()) {\n                string dest = destinations[0];\n                adj[src].erase(adj[src].begin());\n                DFS(adj, result, dest);\n                destinations = adj[src];\n            }\n        }\n        result.push_back(src);\n    }\n};\n","java":"class Solution {\n    \n    public List<String> findItinerary(List<List<String>> tickets) {\n        Map<String, List<String>> adj = new HashMap<>();\n        List<String> res = new ArrayList<>();\n\n        for (List<String> ticket : tickets) {\n            String src = ticket.get(0);\n            String dst = ticket.get(1);\n            adj.putIfAbsent(src, new ArrayList<>());\n            adj.get(src).add(dst);\n        }\n\n        for (String key : adj.keySet()) {\n            Collections.sort(adj.get(key));\n        }\n\n        dfs(adj, res, \"JFK\");\n        Collections.reverse(res);\n\n        if (res.size() != tickets.size() + 1) {\n            return new ArrayList<>();\n        }\n\n        return res;\n    }\n\n    private void dfs(Map<String, List<String>> adj, List<String> result, String src) {\n        if (adj.containsKey(src)) {\n            List<String> destinations = new ArrayList<>(adj.get(src));\n            while (!destinations.isEmpty()) {\n                String dest = destinations.get(0);\n                adj.get(src).remove(0);\n                dfs(adj, result, dest);\n                destinations = new ArrayList<>(adj.get(src));\n            }\n        }\n        result.add(src);\n    }\n}\n","csharp":"public class Solution {\n    \n    public List<string> FindItinerary(List<List<string>> tickets) {\n        var adj = new Dictionary<string, List<string>>();\n        var res = new List<string>();\n\n        foreach (var ticket in tickets) {\n            var src = ticket[0];\n            var dst = ticket[1];\n            if (!adj.ContainsKey(src))\n                adj[src] = new List<string>();\n            adj[src].Add(dst);\n        }\n\n        foreach (var key in adj.Keys)\n            adj[key].Sort();\n\n        DFS(adj, res, \"JFK\");\n        res.Reverse();\n\n        if (res.Count != tickets.Count + 1)\n            return new List<string>();\n\n        return res;\n    }\n\n    private void DFS(Dictionary<string, List<string>> adj, List<string> result, string src) {\n        if (adj.ContainsKey(src)) {\n            var destinations = new List<string>(adj[src]);\n            while (destinations.Any()) {\n                var dest = destinations[0];\n                adj[src].RemoveAt(0);\n                DFS(adj, result, dest);\n                destinations = new List<string>(adj[src]);\n            }\n        }\n        result.Add(src);\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def findItinerary(self, tickets: List[List[str]]) -> List[str]:\n        ","javascript":"class Solution {\n    /**\n     * @param {string[][]} tickets\n     * @return {string[]}\n     */\n    findItinerary(tickets) {}\n}\n","cpp":"class Solution {\npublic:\n    vector<string> findItinerary(vector<vector<string>>& tickets) {\n        \n    }\n};\n","java":"class Solution {\n    public List<String> findItinerary(List<List<String>> tickets) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public List<string> FindItinerary(List<List<string>> tickets) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/ZyB_gQ8vqGA","embedding":[-0.036023233,-0.05810627,0.0091717625,-0.06562955,-0.030823318,-0.014460186,-0.039364453,0.021419218,-0.033788376,0.05076001,-0.01650696,-0.0104551455,0.0022625157,-0.008629644,-0.017248224,-0.014769968,-0.004439288,0.01507975,-0.013829557,0.038855523,0.029296534,-0.00017312878,0.017624388,-0.0062288325,0.0008719536,0.014537631,-0.001312425,0.016197179,0.018111188,-0.042462274,0.06801929,-0.0020453916,0.020744337,0.008607517,0.00858539,0.00843603,-0.0034656872,0.044984784,0.017071206,-0.023100892,0.0042705676,0.012291711,0.0024727248,-0.024583422,-0.06054027,0.02287962,0.0065496783,0.025269367,0.026088078,0.023300039,-0.012734257,0.019803926,0.0071526472,-0.021463472,-0.024052367,0.018432034,-0.04421033,0.021773254,0.04086911,0.007904975,0.037328742,-0.027061678,-0.011959801,0.004088017,-0.014847413,0.049078334,0.02810166,0.0027908047,-0.0049205567,-0.0089449575,-0.032659885,0.045847747,0.031177355,-0.021463472,0.040647835,0.004159931,0.05292848,0.012435538,0.00949814,-0.075586826,0.031199481,-0.037129596,-0.00782753,0.020412426,-0.012479792,-0.045449458,-0.016042287,-0.030579917,-0.017148651,-0.06306278,-0.024716185,0.0039746147,-0.004868004,0.036886197,0.060938563,0.023499183,0.03903254,0.018586924,-0.042639293,0.0059909644,0.019217553,-0.015035495,0.016285688,0.03772703,0.030447153,0.0037561078,-0.006411383,0.07262177,0.027858261,0.019294998,-0.056999903,0.026375731,0.030602045,-0.027105933,-0.003122714,0.012889148,-0.032903284,-0.057619467,0.007064138,0.018277142,0.002656658,-0.043413747,-0.020622635,-0.007628384,-0.011749592,0.012579366,-0.030115245,-0.062753,0.013995512,-0.006062878,0.04885706,-0.031686284,-0.0053548045,0.0109862005,-0.023477057,-0.026751896,0.016031222,0.008668367,0.042373765,0.0100789815,0.017978424,0.019206489,-0.01638526,0.012369156,-0.022071974,0.007030947,0.0012190755,0.042108238,-0.031155227,0.041643564,0.027194442,-0.02057838,0.017215034,0.02476044,-0.0008519007,-0.051158298,-0.018940961,-0.023012383,0.030624172,0.043657146,-0.027703369,-0.028898243,-0.021386027,-0.01833246,0.03874489,-0.008530071,-0.0067930785,0.018089062,-0.030823318,-0.05292848,-0.0039192964,-0.05850456,0.023919603,0.018476289,0.0006676219,-0.027504224,-0.041621435,-0.03996189,-0.013840621,0.016374197,-0.055362485,0.014183594,-0.05819478,-0.053902082,-0.033943266,0.022591965,0.036399394,-0.013774239,0.015190386,-0.01784566,0.0116610825,-0.024096621,-0.024229385,0.062133435,-0.0311331,0.024472784,0.009608776,-0.011251728,0.038612124,0.03693045,-0.025711913,-0.008286671,-0.028721225,0.01936138,-0.039275944,-0.02263622,-0.011218537,-0.013774239,0.055273976,-0.0028239957,0.055185467,0.0199035,0.00995175,-0.02549064,0.0033882416,0.015035495,0.00029145792,-0.013630412,-0.0015060388,0.031730536,-0.023543438,-0.025048094,-0.02251452,0.043944802,0.055628013,0.04330311,0.01507975,0.005719905,-0.022437073,-0.042572908,-0.040470816,-0.018066933,-0.017403115,-0.012302774,-0.029628444,-0.029562062,-0.023565566,-0.069966495,-0.009647499,0.01429423,0.013862749,-0.037461504,0.03954147,0.013984448,0.03653216,-0.04011678,-0.029119516,0.020169027,-0.013420203,0.033899013,0.04575924,0.02909739,0.011793846,-0.040714215,-0.015068686,0.04974215,-0.02737146,-0.020777527,0.043612894,-0.005661821,0.010654291,0.08160545,-0.070409045,0.009813454,-0.03797043,-0.021131564,0.024517039,0.03407603,0.008762408,0.01605335,-0.030115245,-0.013884876,-0.016042287,0.0050450223,-0.0048984294,-0.03153139,0.0037837669,-0.013453393,0.017414179,-0.044874147,-0.039364453,0.0010697163,0.04427671,-0.054698665,0.01675036,-0.031841174,0.0061403234,0.032637756,0.0071194563,0.0441882,-0.018564798,0.0200252,0.0057309684,0.043922674,-0.004497372,0.008596453,0.029960353,-0.039696362,0.038014688,-0.02378684,0.0026995295,-0.06620486,0.019527335,0.039696362,-0.012391283,0.020854972,0.036797687,0.026729768,0.03792618,0.048193242,-0.005996496,0.029119516,-0.012490856,-0.0058858595,0.005056086,-0.07859614,0.01426104,-0.03431943,0.0063560647,-0.027327206,-0.002190602,0.0031088844,0.056690123,0.049565133,0.026021695,-0.027548479,0.025092348,0.018066933,-0.028654844,0.017834598,-0.03757214,-0.04520606,-0.01405083,-0.008662835,-0.06169089,0.013840621,0.039984018,0.009387503,0.015035495,0.018476289,0.040470816,-0.004439288,-0.017679706,-0.011760656,-0.059964962,0.014084022,-0.01638526,-0.008723685,0.01732567,0.01948308,-0.03717385,0.024627676,-0.0033605825,0.03564707,-0.025070222,-0.049874917,0.012203202,0.04876855,-0.01602016,-0.009149635,-0.008535603,0.014438058,0.0037146192,-0.03277052,-0.0029291003,0.0104551455,0.024362149,0.02484895,-0.0335671,0.02202772,0.040492944,-0.010610037,0.0005929423,-0.0005027044,-0.009686222,-0.027482096,0.00029577967,0.021729,-0.02376471,0.048060477,-0.01614186,-0.03808107,-0.006439042,-0.049565133,0.055849284,0.048237495,-0.020235408,-0.03513814,-0.0024810226,-0.026154459,0.036819812,-0.030756935,0.033058174,0.00974154,0.0033965393,0.01380743,0.049255352,0.10497187,-0.02916377,-0.009061126,0.010051322,-0.029362917,0.011373428,0.020943481,-0.043834165,0.012280647,-0.0043839696,0.027592734,0.02287962,0.00819263,-0.010842373,-0.010112172,0.012855956,-0.020744337,0.0065386146,0.042727802,0.004123974,0.0075785974,-0.0066990377,-0.009719413,-0.008231353,0.030380772,0.03540367,0.0506715,0.015146132,-0.0060573462,0.03898829,-0.006256492,-0.013873812,-0.038213834,0.00011063646,0.010200681,0.01286702,0.027769752,-0.054433137,0.04002827,0.037859797,-0.00892283,-0.025711913,-0.030203754,0.020854972,-0.035425793,0.035182394,0.043502256,-0.04752942,-0.01620824,0.023985984,0.03462921,0.052972738,0.005589907,0.03865638,0.0027092104,0.010975136,-0.00538523,-0.009918558,0.0066603147,-0.02230431,0.021197945,0.04673284,-0.039231688,-0.023543438,0.031752665,-0.0050865114,0.02096561,0.0325935,-0.031265862,0.0069811605,-0.024472784,0.025711913,-0.035912596,0.00004367115,-0.014814222,0.008884108,0.005177786,-0.023012383,0.04974215,0.0065054237,0.034872614,-0.07213497,0.0042041857,0.019294998,-0.0038778079,-0.00033502103,0.012214265,-0.017004823,-0.007196902,0.0016014627,-0.036974706,0.00039759977,-0.0063837236,0.034961123,0.04069209,-0.042130362,-0.008878576,-0.03856787,-0.0046992837,-0.009752604,-0.032792646,0.04427671,-0.028787607,0.025557023,-0.04876855,0.01323212,0.044320967,0.016683979,0.008718153,-0.009553459,-0.044652876,0.042639293,0.025756167,-0.023543438,-0.016562277,0.012015119,-0.012280647,0.018708626,-0.012579366,-0.033766247,-0.016230369,-0.005161191,0.017181842,-0.014980176,-0.009216017,-0.019040534,0.011782783,0.012999784,-0.0020495404,0.008469221,-0.04011678,-0.018188633,-0.021430282,0.00719137,0.018133316,-0.012999784,0.044785637,0.029185899,-0.011290451,0.02254771,0.012999784,-0.01687206,-0.008303266,-0.0013642858,0.03635514,-0.01772396,0.0044365223,-0.010156427,-0.010549187,0.016529087,0.017026952,-0.011760656,0.0054156547,0.009901963,-0.0019333721,-0.015555486,-0.03055779,0.003189096,-0.034186665,0.028322933,0.0013525307,0.026442114,0.0148363495,-0.0050394908,-0.002469959,-0.024871076,-0.017558007,-0.006156919,0.033766247,0.01580995,0.04290482,0.0109806685,-0.04363502,0.004096315,-0.034828357,0.025092348,-0.032482866,0.0019624142,0.0022694303,-0.013431266,-0.046511568,-0.011727464,0.0208771,-0.003219521,0.0030148434,0.020954546,0.010161959,0.0059854323,-0.023233656,0.027349332,0.01217001,-0.015832078,-0.01884139,-0.0064501055,0.03425305,0.033810504,-0.00036268015,0.011694274,0.01854267,-0.01890777,0.022946002,0.017281415,0.0032084573,-0.009702818,0.053548045,-0.020202218,-0.02491533,-0.019306062,0.011307046,0.044652876,0.051689353,0.017956298,0.026021695,0.018432034,-0.018653307,0.0066603147,-0.0013947109,-0.035824087,-0.0031780323,-0.06363809,0.0011395555,0.020600509,0.0047767293,0.025623403,-0.013995512,0.038191706,0.03571345,0.007285411,0.011373428,-0.008458157,0.023831094,-0.017336734,-0.001564123,-0.030004608,0.034673467,-0.016518023,-0.008563262,-0.029938227,0.00046121574,0.024826821,-0.011627892,-0.016285688,0.014969113,0.03644365,-0.012347029,-0.0017397583,-0.0058526685,0.008994744,0.014061894,0.0076062568,-0.0030037798,0.010449613,0.0048818337,-0.026619133,-0.003811426,0.03055779,-0.0015226343,0.049786408,0.048104733,0.009907495,-0.03666492,0.014570822,0.015632931,0.0027327205,0.02378684,0.020644763,0.015754633,0.029783335,-0.0061071324,0.007954761,0.015146132,0.015278895,0.035093885,-0.02096561,0.00067972275,0.020246472,-0.020711144,-0.00631181,0.0036288758,0.006101601,-0.029274408,-0.03670918,-0.00916623,-0.018653307,-0.0060462826,-0.009199422,0.032859027,0.03073481,-0.020556254,-0.028145915,-0.020290727,-0.024052367,0.0054599093,-0.031730536,0.008325393,-0.04305971,0.013818494,0.06514275,0.0083419895,0.03243861,0.038258087,-0.043502256,-0.039010417,-0.0025584681,-0.02047881,0.025623403,-0.025446385,-0.029805463,0.024494912,0.046069022,-0.0045416267,0.014803158,-0.012811702,0.013409139,0.010139831,-0.012922338,-0.0017964595,-0.03595685,0.02900888,-0.009885368,-0.0100789815,0.008336457,-0.04396693,-0.013774239,0.019217553,0.024140876,-0.0052607637,-0.018918835,-0.052574445,-0.0057530957,-0.043657146,-0.004497372,-0.0028309105,0.032150954,-0.021917082,0.0345407,0.002837825,-0.0010669504,-0.0029125048,-0.051999137,-0.0026137864,-0.03170841,0.0061679827,-0.017380988,-0.020810718,0.022370692,-0.009038999,0.020434555,0.028809734,0.00021038215,0.004002274,-0.098510705,0.03580196,-0.020766463,0.0051197023,0.02230431,-0.06500998,0.03774916,0.044962656,0.015101877,0.008297735,-0.01678355,0.0068483967,0.003095055,0.01405083,-0.011959801,-0.01474784,0.041798454,0.038014688,-0.004475245,-0.004339715,-0.0017715663,0.033390082,-0.013918066,-0.041510798,0.007838593,-0.016993761,0.031199481,-0.028743353,-0.024140876,-0.005556716,0.012999784,-0.0059577734,-0.0056479913,0.0034933463,-0.015256768,-0.009818986,0.02712806,-0.025048094,-0.001390562,0.0020287961,0.03055779,-0.0093211215,0.0049648113,0.005009066,0.006289683,0.004220781,0.0209988,-0.00937644,0.0071028606,-0.017535878,-0.010156427,-0.0070475424,0.010156427,0.036886197,0.024295766,0.02712806,0.03560281,0.024804695,-0.016075477,-0.03540367,-0.015998032,-0.0046771565,-0.033213064,0.039917633,0.010167491,0.00083253934,0.06381511,-0.001078014,-0.048326004,0.005440548,0.0051750205,-0.03434156,-0.022580901,-0.007833062,0.0142278485,-0.010964073,0.03987338,0.010145363,-0.013298502,0.014526567,-0.024959585,0.0033467528,0.013984448,0.02385322,0.05704416,0.025136603,0.04549371,0.02646424,0.030203754,-0.008756876,0.016252495,0.036133867,-0.0077334885,0.05301699,-0.027991025,-0.027968897,-0.03250499,0.03226159,0.021319646,-0.0023537907,0.026198713,-0.017038016,-0.0027894217,0.001842097,0.021264328,0.010128768,-0.000071740826,-0.0029263343,0.00040658898,0.042882692,-0.01401764,0.016130796,0.0025709148,-0.011594701,0.023034511,-0.03564707,0.0066049965,-0.006289683,0.0065220194,0.022271119,-0.006101601,-0.014803158,-0.023167275,-0.0043867356,0.00013570253,-0.007473493,0.0080377385,-0.008662835,0.018631179,-0.0035099417,-0.019294998,-0.020157963,0.027305078,0.019195426,0.012767447,0.06660315,0.0029014412,-0.03896616,0.025225112,0.03316881,0.03367774,-0.04427671,0.049255352,-0.020412426,0.041201018,-0.055539504,0.026265096,0.0011430129,-0.0051031066,0.0033522847,0.022248993,0.027017424,-0.03471772,-0.02761486,0.042506527,0.0063671283,-0.011196409,-0.012490856,-0.002967823,-0.03195181,-0.01080365,0.0016222071,-0.033921137,-0.026796151,-0.037372995,-0.01610867,-0.014714649,0.012335965,0.004414395,0.0049288543,0.010731736,-0.0057033096,0.019494144,-0.024494912,0.026641259,-0.025136603,0.006560742,0.014559758,0.012247456,0.0104994,0.0011395555,0.00065655826,-0.0108645,0.02630935,-0.015743569,0.021662619,-0.0058360733,0.0034297302,0.03310243,0.0018600755,-0.0035154736,-0.024738312,0.0033827098,-0.006975629,-0.030469282,-0.012966593,-0.013873812,-0.03277052,0.036797687,-0.009525799,0.04845877,0.066780165,0.016009096,-0.005365868,0.02646424,-0.028610589,-0.010687482,-0.0030203753,-0.030690555,0.012690002,-0.008994744,0.036111742,0.031177355,0.021518791,0.0109806685,-0.03993976,0.020213282,0.032792646,0.011860228,-0.018443098,0.03434156,-0.036554284,-0.0026884659,-0.018011617,0.02279111,0.018952025,-0.013475521,0.037063215,0.038258087,-0.02819017,0.036089614,-0.008447094,0.011981929,-0.0041682287,-0.018111188,0.015422722,-0.0026414455,0.015964841,-0.010626632,0.021220073,0.008480284,0.002873782,0.052353173,0.0034822826,0.039563596,-0.000953548,-0.031553518,-0.025291495,0.008187098,0.015179322,0.012181074,0.022813238,0.0059743687,0.0023855986,0.010278127,0.0055843755,-0.0048818337,-0.033611357,-0.023167275,0.0025432557,-0.027061678,0.009586649,-0.0061292597,-0.010051322,0.0046716244,0.030380772,0.015478041,0.00661606,0.023100892,-0.04412182,-0.003844617,0.0041626967,0.030270135,0.0058028824,0.0000012073851,-0.023963857,-0.013475521,-0.0045443927,0.014880604,0.027083805,-0.006062878,0.016086541,0.0058305413,-0.0017439072,-0.017336734,0.006582869,-0.019438826,0.012590429,0.0015267831,-0.026021695,-0.0076117883,0.011428746,-0.013641476,0.019228617,-0.011174282,0.0020122007,0.014172531,0.002129752,0.019184362,0.03219521,0.03170841,0.02803528,0.0045554563,0.018221825,-0.03310243,0.025601277,0.0005068533,-0.012026183,-0.0005362411,0.000905836,-0.033921137,0.008568794,-0.016805679,-0.028566334,-0.030203754,-0.028942497,-0.011461937,-0.029694825,-0.013165738,-0.019826053,-0.025136603,0.009702818,-0.023831094,0.0060241553,-0.018100126,0.010764928,-0.0211205,-0.010200681,-0.028168043,0.012203202,0.020910291,-0.010350041,0.0041958876,0.020268599,0.01131811,0.02427364,-0.018763943,-0.0009238144,-0.018232888,0.007694766,-0.036133867,0.0050173635,0.017458433,-0.008236884,-0.008391775,0.018188633,-0.013287439,-0.0035735576,0.0015267831,0.0017162481,0.0068981834,-0.010648759,0.012358093,0.011882355,0.04095762,-0.028853988,0.01744737,0.014670394,0.0042124833,0.014659331,-0.033899013,0.036377266,0.0076394477,-0.019660098,-0.0019707119,-0.0002869633,0.00061161217,-0.0038252557,0.0199035,-0.010145363,-0.004442054,0.021231137,-0.022348564,0.0015046558,-0.00015566895,0.041665692,-0.020268599,-0.016551215,-0.054477394,0.033611357,0.00070392445,-0.004466947,-0.020744337,-0.02206091,-0.066160604,-0.028876116,-0.015466977,0.021054119,-0.011124496,-0.030425027,0.0026068715,0.006627124,-0.023963857,-0.021961337,-0.012579366,-0.023831094,0.031000337,0.015832078,0.06487722,0.05522972,0.024406403,-0.00937644,0.021518791,0.030624172,0.028322933,-0.018166507,0.03903254,0.0007122222,-0.013342757,-0.008801131,-0.025202986,-0.0008664218,-0.032062445,-0.023897475,0.036111742,-0.0040603583,-0.007893912,0.008054335,0.0003232659,0.009099849,0.034009647,0.0024270874,-0.005968837,-0.00913304,0.015345277,-0.0041682287,0.016540151,-0.0007682319,-0.0039027012,0.022127291,-0.01683887,-0.018775007,-0.017071206,-0.019527335,-0.015411659,-0.011716401,0.019350316,0.0023551737,0.025468513,-0.028853988,0.031597774,-0.0049814065,0.013752112,0.019958816,0.017226096,-0.025933186,-0.014670394,-0.012833829,-0.009747072,0.0052082115,0.01405083,-0.04027167,0.002937398,-0.053592302,-0.035182394,0.017624388,-0.04646731,0.018155443,0.006444574,-0.011417682,-0.0227026,-0.001439657,0.01902947,0.021131564,-0.060496017,-0.022359628,-0.043834165,-0.022746855,-0.012236392,-0.051114045,-0.037063215,-0.015832078,-0.005935646,0.032881156,0.033721995,-0.0019624142,-0.004873536,-0.022835365,-0.0020232643,0.004840345,0.023875348,0.010947478,-0.013641476,-0.028123789,-0.04983066,0.020412426,0.011495128,0.0035818554,0.0035071757,0.027924642,0.021883892,-0.024406403,-0.018365651,0.020766463,-0.03538154,-0.0037478101,0.010433018,-0.01298872,-0.020257536,0.037328742,-0.0021919848,-0.0016457173,0.03367774,-0.018465225,0.02900888,-0.022569837,0.035160266,-0.009044531,-0.011395555,0.0012425857,-0.01629675,-0.038302343,-0.013608284,-0.045626476,0.023985984,0.0022182611,-0.0069313743,-0.0012695533,0.007528811,-0.0062343646,-0.035182394,-0.022724729,-0.031199481,0.016617596,0.007595193,0.008463689,0.037041087,0.038612124,-0.00044738618,0.03651003,0.021795383,-0.018741816,0.02108731,0.035425793,0.006085005,-0.0125683015,0.035093885,-0.0049316203,0.019826053,-0.057486705,0.04308184,-0.04646731,-0.028300807,-0.015643995,-0.0035486645,-0.01981499,-0.00008440352,0.043989055,-0.0005815329,0.01004579,0.0027548478,0.0044724788,-0.0333237,0.011152155,0.013519775,0.0004031316,-0.022835365,0.02312302,0.019129043,-0.010853437,0.023477057,0.007573066,-0.021253264,0.019538399,0.018077997,-0.016551215,0.023720456,0.0019873073,-0.014493376,0.0016982696,0.009553459,0.0012308306,0.017425243,-0.0032859028,0.009243676,0.017192906,-0.06682442,0.00810412,0.038191706,-0.013154675,0.0012840744,0.007346261,0.0069258423,0.005930114,0.0052967207,-0.05385783,-0.02218261,-0.045847747,0.013353821,0.020346045,0.02697317,0.038501486,-0.027592734,0.014792095,-0.015898459,-0.020124773,0.024826821,-0.016418451,0.041687816,0.0030093116,-0.045228183,-0.023432802,0.0010966839,-0.039762743,-0.04633455,0.0124134105,-0.03898829,0.011627892,0.02549064,0.027504224,0.013497648,0.0034629211,-0.025180858,0.019859245,-0.014637204,0.015179322,0.040138908,-0.00003775037,-0.012214265,-0.011450874,-0.01793417,-0.026242968,-0.00073573244,-0.041355908,-0.03635514,-0.012557238,-0.011815974,-0.01213682,-0.057398196,0.00015273018,-0.018199697,0.0047905585,0.0025404897,0.004939918,-0.0035873873,-0.011506191,0.013342757,0.032549247,-0.00081110356,0.018741816,0.012158947,0.0032997325,0.028787607,0.0015502934,0.008242416,0.026707642,0.018221825,0.015024431,-0.0113513,0.02582255,-0.045228183,-0.010410891,-0.0065220194,0.012181074,0.025180858,0.012800639,0.007030947,-0.0061403234,-0.017292479,0.008911767,0.0050450223,-0.011992992,0.013951258,0.019140108,-0.043812037,-0.04239589,0.008784535,-0.038767014,0.025623403,-0.005150127,-0.0028226126,-0.014659331,0.0000023229334,-0.0021159223,-0.024251511,-0.007030947,0.012579366,0.0005659746,0.0061458554,-0.0113623645,-0.012999784,-0.012103628,-0.014338485,0.0087955985,-0.0038944033,-0.01368573,0.030380772,0.0004553382,-0.019195426,0.046865605,0.0026677216,0.040338054,-0.0067101014,0.0026400625,-0.017458433,-0.0031586709,0.0057973503,0.016075477,-0.006051814,0.0042124833,-0.0041792924,0.042196747,-0.058858596,0.02597744,-0.0054820366,0.027437842,-0.0060241553,-0.023831094,0.0100015355,0.005346507,0.0049150246,0.021751128,0.00855773,0.047839206,0.0010593442,0.020102644,-0.036133867,-0.029805463,0.04124527,0.0072411564,0.013431266,-0.020843908,-0.017259289,-0.014006576,-0.0025142136,0.027482096,-0.016617596,0.031774793,0.0037975966,0.03620025,0.035337284,-0.027393587,0.0010531208,0.014438058,0.0057641594,0.03717385,0.0016706105,0.0030867571,-0.022293247,0.03341221,0.013707858,-0.013785303,0.030779064,-0.007882847,0.041289527,0.01450444,-0.03219521,-0.0026677216,0.040470816,-0.0048569404,0.026132332,0.0031669687,-0.0023551737,0.048148986,-0.029960353,0.016042287,-0.02630935,-0.03153139,-0.013907003,0.004812686,0.014858477,0.007440302,0.018863516,0.015478041,-0.036155995,-0.029407172,-0.016130796,-0.012933402,0.002501767,0.062664494,-0.0095479265,0.028278679,-0.014880604,0.039320197,-0.020500936,-0.0060794735,0.015389532,0.011251728,0.035978977,0.008270076,-0.041311655,0.011323642,-0.03212883,0.03310243,-0.00031514105,0.00053416664,-0.012324901,-0.04642306]},{"id":"min-cost-to-connect-points","name":"Min Cost to Connect Points","description":"You are given a 2-D integer array `points`, where `points[i] = [xi, yi]`. Each `points[i]` represents a distinct point on a 2-D plane.\n\nThe cost of connecting two points `[xi, yi]` and `[xj, yj]` is the **manhattan distance** between the two points, i.e. `|xi - xj| + |yi - yj|`.\n\nReturn the minimum cost to connect all points together, such that there exists exactly one path between each pair of points.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/e0cd5270-73b5-42d4-3c3f-5451f795ca00/public)\n\n```java\nInput: points = [[0,0],[2,2],[3,3],[2,4],[4,2]]\n\nOutput: 10\n```\n\n**Constraints:**\n* `1 <= points.length <= 1000`\n* `-1000 <= xi, yi <= 1000`\n","difficulty":"Medium","concepts":["Adjacency List","Prim's","Kruskal's"],"solutions":{"python":"class Solution:\n    def minCostConnectPoints(self, points: List[List[int]]) -> int:\n        N = len(points)\n        adj = {i: [] for i in range(N)}\n        for i in range(N):\n            x1, y1 = points[i]\n            for j in range(i + 1, N):\n                x2, y2 = points[j]\n                dist = abs(x1 - x2) + abs(y1 - y2)\n                adj[i].append([dist, j])\n                adj[j].append([dist, i])\n\n        res = 0\n        visit = set()\n        minH = [[0, 0]]\n        while len(visit) < N:\n            cost, i = heapq.heappop(minH)\n            if i in visit:\n                continue\n            res += cost\n            visit.add(i)\n            for neiCost, nei in adj[i]:\n                if nei not in visit:\n                    heapq.heappush(minH, [neiCost, nei])\n        return res\n","javascript":"/**\n * const { MinPriorityQueue } = require('@datastructures-js/priority-queue');\n */\n\nclass Solution {\n    /**\n     * @param {number[][]} points\n     * @return {number}\n     */\n    minCostConnectPoints(points) {\n        const N = points.length;\n        const adj = new Map();\n        for (let i = 0; i < N; i++) {\n            adj.set(i, []);\n        }\n\n        for (let i = 0; i < N; i++) {\n            const [x1, y1] = points[i];\n            for (let j = i + 1; j < N; j++) {\n                const [x2, y2] = points[j];\n                const dist = Math.abs(x1 - x2) + Math.abs(y1 - y2);\n                adj.get(i).push([dist, j]);\n                adj.get(j).push([dist, i]);\n            }\n        }\n\n        let res = 0;\n        const visit = new Set();\n        const minHeap = new MinPriorityQueue(entry => entry[0]);\n        minHeap.enqueue([0, 0]);\n\n        while (visit.size < N) {\n            const [cost, i] = minHeap.dequeue();\n            if (visit.has(i)) continue;\n            res += cost;\n            visit.add(i);\n            for (const [neiCost, nei] of adj.get(i)) {\n                if (!visit.has(nei)) {\n                    minHeap.enqueue([neiCost, nei]);\n                }\n            }\n        }\n        return res;\n    }\n}\n","cpp":"class Solution {\npublic:\n    int minCostConnectPoints(vector<vector<int>>& points) {\n        int N = points.size();\n        unordered_map<int, vector<pair<int, int>>> adj;\n        for (int i = 0; i < N; i++) {\n            int x1 = points[i][0];\n            int y1 = points[i][1];\n            for (int j = i + 1; j < N; j++) {\n                int x2 = points[j][0];\n                int y2 = points[j][1];\n                int dist = abs(x1 - x2) + abs(y1 - y2);\n                adj[i].push_back({dist, j});\n                adj[j].push_back({dist, i});\n            }\n        }\n\n        int res = 0;\n        unordered_set<int> visit;\n        priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> minH;\n        minH.push({0, 0});\n        while (visit.size() < N) {\n            auto curr = minH.top();\n            minH.pop();\n            int cost = curr.first;\n            int i = curr.second;\n            if (visit.count(i)) {\n                continue;\n            }\n            res += cost;\n            visit.insert(i);\n            for (const auto& nei : adj[i]) {\n                int neiCost = nei.first;\n                int neiIndex = nei.second;\n                if (!visit.count(neiIndex)) {\n                    minH.push({neiCost, neiIndex});\n                }\n            }\n        }\n        return res;\n    }\n};\n","java":"class Solution {\n    public int minCostConnectPoints(int[][] points) {\n        int N = points.length;\n        Map<Integer, List<int[]>> adj = new HashMap<>();\n        for (int i = 0; i < N; i++) {\n            int x1 = points[i][0];\n            int y1 = points[i][1];\n            for (int j = i + 1; j < N; j++) {\n                int x2 = points[j][0];\n                int y2 = points[j][1];\n                int dist = Math.abs(x1 - x2) + Math.abs(y1 - y2);\n                adj.computeIfAbsent(i, k -> new ArrayList<>()).add(new int[]{dist, j});\n                adj.computeIfAbsent(j, k -> new ArrayList<>()).add(new int[]{dist, i});\n            }\n        }\n\n        int res = 0;\n        Set<Integer> visit = new HashSet<>();\n        PriorityQueue<int[]> minH = new PriorityQueue<>(Comparator.comparingInt(a -> a[0]));\n        minH.offer(new int[]{0, 0});\n        while (visit.size() < N) {\n            int[] curr = minH.poll();\n            int cost = curr[0];\n            int i = curr[1];\n            if (visit.contains(i)) {\n                continue;\n            }\n            res += cost;\n            visit.add(i);\n            for (int[] nei : adj.getOrDefault(i, Collections.emptyList())) {\n                int neiCost = nei[0];\n                int neiIndex = nei[1];\n                if (!visit.contains(neiIndex)) {\n                    minH.offer(new int[]{neiCost, neiIndex});\n                }\n            }\n        }\n        return res;\n    }\n}\n","csharp":"public class Solution {\n    public int MinCostConnectPoints(int[][] points) {\n        int N = points.Length;\n        var adj = new Dictionary<int, List<int[]>>();\n        for (int i = 0; i < N; i++) {\n            int x1 = points[i][0];\n            int y1 = points[i][1];\n            for (int j = i + 1; j < N; j++) {\n                int x2 = points[j][0];\n                int y2 = points[j][1];\n                int dist = Math.Abs(x1 - x2) + Math.Abs(y1 - y2);\n                if (!adj.ContainsKey(i))\n                    adj[i] = new List<int[]>();\n                adj[i].Add(new int[] { j, dist });\n\n                if (!adj.ContainsKey(j))\n                    adj[j] = new List<int[]>();\n                adj[j].Add(new int[] { i, dist });\n            }\n        }\n\n        int res = 0;\n        var visit = new HashSet<int>();\n        var pq = new PriorityQueue<int, int>(); // The first parameter is the index of the point, the second is the cost.\n        pq.Enqueue(0, 0); // Start with point 0 and cost 0\n\n        while (visit.Count < N && pq.Count > 0) {\n            if (pq.TryPeek(out int i, out int cost)) {\n                pq.Dequeue();\n\n                if (visit.Contains(i)) {\n                    continue;\n                }\n\n                res += cost;\n                visit.Add(i);\n\n                if (adj.ContainsKey(i)) {\n                    foreach (var edge in adj[i]) {\n                        var nei = edge[0];\n                        var neiCost = edge[1];\n                        if (!visit.Contains(nei)) {\n                            pq.Enqueue(nei, neiCost);\n                        }\n                    }\n                }\n            }\n        }\n        return visit.Count == N ? res : -1;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def minCostConnectPoints(self, points: List[List[int]]) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[][]} points\n     * @return {number}\n     */\n    minCostConnectPoints(points) {}\n}\n","cpp":"class Solution {\npublic:\n    int minCostConnectPoints(vector<vector<int>>& points) {\n        \n    }\n};\n","java":"class Solution {\n    public int minCostConnectPoints(int[][] points) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int MinCostConnectPoints(int[][] points) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/f7JOBJIC-NA","embedding":[-0.04898572,-0.020073723,0.06632875,-0.033539586,-0.022616811,-0.06090905,0.018114295,0.016446695,-0.012194318,0.021115972,0.018301899,-0.00035208487,-0.020751186,0.027932283,0.037750274,-0.028244957,0.013382482,-0.009333343,0.024221875,0.058616105,0.0019424922,0.07216535,0.061784543,-0.01750979,0.033998173,0.008343206,0.012725865,-0.028244957,0.026598204,-0.034415074,0.060116943,-0.015873458,-0.034248315,0.006607861,0.007754335,0.025493419,-0.029349742,0.031455085,0.00063251506,0.03364381,0.004455616,0.008249404,-0.02240836,-0.04473334,-0.0022317164,-0.034915354,0.004697939,0.022179067,0.037208304,0.021428647,-0.012736287,0.032997616,0.014977124,-0.030808892,-0.043024056,-0.009150949,0.0018721404,0.045108553,0.057156954,0.022762727,0.03806295,0.0057896953,-0.011558546,0.046776153,0.015477403,0.038584072,0.02098048,-0.031100722,-0.021866392,-0.03360212,-0.062409893,-0.012131782,0.0038667452,-0.03766689,0.006211806,-0.008770528,-0.024430325,0.022033151,-0.02653567,-0.0013549242,-0.01634247,-0.014226704,0.0341024,-0.043566022,-0.018989783,-0.034415074,-0.046400942,-0.00037423265,-0.052862886,-0.021949772,-0.0017939718,-0.007660533,0.037791964,-0.010797704,0.017739084,0.0023476668,0.06991409,0.013424172,-0.0023633004,0.0056750476,0.004247166,-0.03197621,0.025826938,0.004301884,0.021845547,0.033581275,0.019229501,0.028224112,-0.034227468,0.059324834,0.008520389,0.036499575,-0.018948093,0.018697953,0.031580158,-0.0511536,-0.059908494,-0.05190402,0.045650523,-0.029349742,0.027536228,-0.0251599,0.04977783,-0.012903047,-0.014278816,0.018948093,0.02378413,-0.03958463,0.011537701,-0.028974533,0.00013427103,0.013142765,0.045483764,0.010083763,-0.034915354,-0.030412836,-0.0098232,0.009479258,0.052070778,-0.03255987,0.04777671,0.016540498,0.000757585,0.029308053,0.0073634917,0.03176776,-0.043816164,0.06345214,-0.0051174443,0.039813925,0.026619049,-0.023367232,0.03589507,0.020052878,-0.0014370013,-0.057365406,-0.020011188,0.020532312,0.0063681435,-0.013101075,-0.008509967,-0.046942912,0.026660739,-0.015498248,0.030371146,0.035123803,0.010646577,-0.002123583,-0.055489358,-0.061117504,0.01813514,-0.09463624,-0.01584219,0.05173726,0.042732224,-0.04540038,-0.07174844,-0.03339367,0.0058574416,0.03622859,-0.036082674,-0.032955926,-0.026952568,-0.038354777,-0.013872339,0.03979308,-0.030287767,0.012736287,0.037416752,-0.019073164,-0.0072957454,0.010552775,-0.021928927,0.015300221,-0.0029834388,0.022450052,0.013757692,-0.007488562,0.023158781,0.0013744663,-0.03814633,-0.013716002,0.017853731,0.011506433,0.0059356103,-0.00906757,-0.026327219,0.00078298984,0.0018708376,-0.01613402,-0.0035228028,-0.013403327,0.02332554,0.0060242014,0.028411718,-0.0049480787,-0.01228812,0.00923954,-0.017582746,0.052112468,-0.010042072,-0.0070195496,0.02361737,0.02653567,0.030079316,0.0047552628,0.0012676358,0.003543648,0.059199765,0.03356043,-0.040022377,-0.033789724,-0.024305256,0.0006670396,0.00067225087,-0.022721035,-0.007910673,-0.03297677,-0.036186896,0.011068689,-0.0018304505,-0.053279787,-0.013955719,-0.00019102477,0.026598204,-0.05023642,-0.046942912,0.054947387,-0.006034624,0.010047284,0.02649398,0.025555955,0.060075253,-0.022533432,-0.0095105255,0.018030914,-0.00011977725,0.005695893,0.04104378,-0.04154406,-0.028974533,0.045025174,-0.015289798,-0.058866244,-0.017822465,-0.029537346,-0.010005594,0.055822875,-0.04071026,0.0071498305,-0.0101827765,0.006388989,0.013799381,-0.01630078,0.0012982519,-0.015133461,-0.029579038,0.015060503,0.0012279,-0.09405258,-0.03627028,-0.018656263,0.02478469,0.0044582216,0.058157515,-0.002691609,0.021928927,0.026077079,-0.012319388,-0.009187428,-0.012486148,0.009244752,-0.052696127,0.045692213,0.024388636,0.018843869,-0.02324216,-0.014466422,0.05352993,-0.021470336,-0.006884057,-0.021532873,0.0075250403,0.023638215,-0.044983484,-0.0079836305,0.00430449,-0.00044002465,-0.0112354485,0.005982511,-0.02324216,0.04058519,0.013028117,-0.011193758,-0.01232981,0.00014957906,-0.02707764,-0.031913675,0.000730226,-0.021845547,0.008489121,-0.025305815,0.058699485,-0.016623877,0.0022525615,0.009614751,-0.021095127,0.015977683,-0.04540038,-0.024805535,-0.012131782,-0.014195437,-0.0068371557,0.01914612,-0.019469218,0.014080789,0.015456558,-0.009333343,-0.011152068,0.031663537,-0.00058659096,-0.008713204,-0.0022538642,0.0023281246,0.040606037,0.033456206,0.02541004,0.0110374205,0.010828971,0.008353629,-0.0007224091,-0.018791756,-0.0018174223,0.027056793,0.03101734,0.020407243,-0.017749507,-0.01049024,-0.07595913,0.029537346,-0.037062388,-0.003645267,-0.03239311,-0.02436779,-0.013205299,0.019312881,-0.034081556,-0.019542176,-0.0011445201,0.017103313,0.022283291,0.040522657,-0.00478653,0.009682497,-0.013424172,-0.0120900925,-0.0039605475,0.03260156,-0.014508111,-0.014299661,-0.014758251,-0.02353399,0.035561547,0.015863035,0.00021431253,0.02478469,0.008749683,-0.011683616,-0.040856175,-0.003611394,0.0727907,-0.033685498,0.014643604,0.00090415135,0.012746709,-0.015685853,0.04644263,0.009817989,-0.028849462,0.024472015,-0.012736287,-0.033039305,-0.036833093,-0.0043070954,0.012131782,-0.030121006,-0.026639894,0.044316445,0.010974886,-0.02649398,0.007582364,-0.021491181,0.021074282,0.00380421,-0.0070768734,0.0016180922,0.00014689202,-0.0014226704,-0.024597086,-0.019031474,0.003861534,0.05111191,0.07516702,0.036020137,-0.03560324,0.014257971,0.014132901,0.024472015,0.015425291,-0.027369468,-0.027973972,0.028036509,0.028974533,-0.01253826,-0.005450964,0.028474253,0.0068944795,0.03360212,-0.013372059,-0.024096806,-0.06841325,-0.057323717,-0.020990903,0.016144443,0.018374857,-0.002788017,0.043149125,0.040564347,0.026097924,0.08071179,-0.0009836229,-0.00055108935,0.04923586,0.059074692,-0.023992581,-0.02528497,0.007816871,0.039980687,-0.009208273,0.022741882,0.012590372,0.03272663,-0.010985308,0.039105196,-0.001993302,0.030225232,0.023554835,0.017707817,0.0061127925,0.024680465,0.005779273,-0.01700951,0.006243074,0.029328898,0.011141646,0.020917945,-0.008760106,0.013820226,0.02114724,0.017040778,-0.0020532312,-0.014549801,-0.005951244,-0.0507367,0.03925111,0.0056750476,0.04062688,-0.006670396,-0.022450052,0.011318828,-0.023992581,-0.00806701,0.017072044,-0.0063160313,0.03172607,-0.00059375644,-0.027869748,-0.0036973797,0.013153187,-0.0014578463,-0.0030485794,-0.008035743,-0.027598763,0.03589507,0.029766642,0.022095686,-0.012486148,-0.03218466,-0.016665567,0.028057354,-0.0142162815,0.048652202,-0.007134197,0.007660533,0.0019125276,0.05244599,0.0049116,-0.037896186,-0.00315541,0.01634247,-0.013590932,-0.024763845,0.0035618872,0.018395701,-0.039980687,0.0009438871,-0.010662211,-0.017520212,-0.036145207,-0.0054718093,-0.013747269,-0.005404063,-0.011871221,0.03289339,-0.05361331,-0.004450405,0.005216458,-0.04915248,0.022304136,0.010964463,0.010870661,0.0052425144,-0.017686972,-0.015612896,0.0026733696,-0.04535869,0.050361488,0.059074692,-0.03514465,-0.010354747,0.031392552,-0.023992581,-0.031892832,0.022324981,0.012267275,-0.033956483,-0.02453455,-0.003452451,0.04719305,0.00027766175,-0.003757309,-0.019813161,0.02453455,0.008530811,0.003267452,0.015550361,0.02595201,-0.0077387015,-0.029370587,-0.010808126,0.0055812453,-0.03360212,0.010328691,-0.08171235,0.046942912,-0.018124716,-0.011777418,-0.012110937,0.009745032,-0.006076314,-0.016040217,0.033622965,0.012767555,0.0009445385,-0.028474253,-0.008410952,-0.02678581,-0.006331665,-0.0018161195,0.00035469048,-0.045275312,0.009203062,0.0023424556,-0.004093434,-0.03979308,-0.027911438,-0.011131223,0.035519857,0.02123062,0.013299102,0.034915354,0.023679907,0.00047454916,-0.011287561,-0.023117092,-0.0077751805,0.0392928,0.058491036,0.018354012,0.021115972,-0.017207537,-0.017686972,0.0469846,0.016259091,0.0032909024,-0.0032909024,-0.0010767739,-0.011537701,0.039813925,-0.042482086,0.029016223,0.016040217,0.00290527,0.027306933,0.0077439127,0.018145561,-0.035165492,-0.025597645,-0.007519829,-0.0073634917,-0.056364845,0.015623318,-0.019156544,-0.0037833652,0.001972457,-0.028453408,0.004760474,0.014205859,0.032914236,-0.030371146,-0.005336317,-0.023763286,-0.0042601945,-0.038563225,0.011881643,0.022241602,-0.042440396,-0.003950125,-0.016571766,-0.0067485645,-0.0050262474,-0.004533785,0.01605064,-0.034456763,0.0029651995,0.021970617,0.016405005,-0.009057147,-0.0004113628,-0.0036061828,-0.0033013248,0.0054770205,0.01241319,0.03506127,0.04104378,-0.07020592,0.008895598,0.037854496,0.0669541,-0.01675937,-0.02357568,0.03347705,0.021970617,0.0013874945,0.021366112,-0.000015704987,0.002436258,-0.038438156,-0.027744679,-0.010109819,0.008895598,0.010860238,-0.010922774,0.04715136,-0.006670396,-0.025097365,0.007227999,0.021126395,-0.019281613,-0.03891759,0.015164728,0.019615132,-0.022887796,0.0036895627,-0.00084226776,-0.0057532163,-0.011996291,0.044441514,-0.0043123066,-0.03401902,0.003486324,-0.037937876,0.0259937,-0.014257971,-0.027890593,-0.016790638,-0.008353629,0.02378413,0.044649962,0.01717627,0.010172354,-0.012548682,-0.017999647,-0.027598763,-0.009614751,0.05127867,-0.018624997,0.019573443,0.015748387,-0.030350301,-0.023888355,0.024805535,0.038375624,-0.0087288385,-0.030662976,-0.00290527,0.02461793,0.015571206,0.018395701,-0.027265243,0.0037677314,-0.023638215,0.010683056,0.027161019,0.022199912,0.0013796776,0.006300397,-0.016863596,-0.020626115,-0.008171235,-0.044316445,-0.013059384,0.035749152,-0.02465962,0.058157515,0.032163814,-0.024680465,-0.014091211,-0.05169557,0.022095686,-0.016613455,0.0035801267,0.0031606213,0.025264125,0.014758251,0.042898983,0.0028271014,0.022450052,0.05290458,-0.0046406155,-0.03331029,0.002276012,-0.015321066,0.0018760489,0.06291017,0.009505314,-0.025493419,-0.023096247,0.017780773,0.0090936255,0.018197674,0.006300397,0.01132925,-0.0013484102,0.0061336374,-0.056740057,-0.038354777,-0.04594235,-0.014257971,0.00422111,0.005555189,-0.003916252,0.0076344768,-0.022533432,-0.0033586486,0.021574562,0.043190815,0.009322921,0.009150949,-0.04360771,0.007457294,-0.014007832,-0.024930606,0.0012233402,0.03214297,0.012131782,-0.0139974095,-0.020323863,0.020803297,-0.036624644,0.0027775946,0.0007556308,0.008999824,0.0016584793,0.01266333,0.017061623,0.0059199766,-0.007931517,-0.013643044,0.02420103,0.0021574562,0.061159194,0.0234923,-0.020428088,0.06762114,0.038188018,-0.046901222,0.010594465,0.019656824,0.056448225,0.009447991,-0.015425291,-0.019834006,-0.02470131,0.031746916,-0.00606068,0.035540704,0.0014930222,0.019448373,0.016874017,0.00049604557,0.012923893,0.009844045,0.012819667,0.050945148,0.014466422,0.04831868,-0.015529515,0.019615132,-0.020824142,0.027098484,0.00524512,-0.017666128,0.0073009566,-0.057782304,-0.018301899,-0.0049793464,-0.012611218,-0.023054557,-0.005292021,-0.01308023,0.037500132,-0.030871427,-0.011766995,0.011089534,-0.0010344326,0.033080995,-0.02023006,0.017989224,0.010078551,-0.008723627,-0.03364381,0.0018617179,-0.015029236,0.013914029,-0.031163257,0.013559665,-0.017530635,-0.03372719,-0.033914793,-0.010026439,0.018624997,-0.004531179,-0.0073322244,0.008968555,0.0071602534,0.0101827765,0.015946416,-0.022804417,0.026097924,0.055947945,0.017645283,-0.022450052,0.040606037,0.011558546,-0.036582954,0.044316445,0.006503636,0.01696782,-0.016071485,0.02081372,-0.004981952,0.013392905,0.028515942,-0.022116533,0.009593906,0.008379685,0.020636538,0.017436832,0.056323156,0.04731812,-0.009062358,0.030621286,0.0021144634,-0.006065891,-0.037416752,-0.007874194,0.0066026496,-0.0008579015,-0.012715442,0.04141899,-0.0409604,-0.0049298396,-0.0022668925,-0.01174615,0.022450052,0.0268275,0.021574562,0.04075195,0.038479846,0.002498793,-0.010625732,-0.022908641,-0.019125275,0.051487118,-0.03364381,-0.03699985,0.024055116,-0.007931517,-0.030850582,0.03381057,-0.0027280878,0.001771824,0.014320507,0.003577521,0.040230826,0.0012083579,-0.010849816,-0.020574003,0.020719917,-0.05111191,0.015195996,-0.009885735,-0.0075458856,-0.011350095,-0.009661651,0.02118893,-0.00923954,-0.02436779,0.01813514,0.029474812,-0.07675125,0.018666686,0.020386398,-0.054030206,-0.043274194,0.0006566171,-0.022450052,0.009854468,-0.011339673,0.015821345,0.01617571,-0.0012331113,-0.029224671,-0.005805329,0.026890034,0.0030590019,-0.0255768,0.007227999,-0.05111191,0.011047843,-0.010922774,0.020459356,0.020970058,-0.012725865,-0.015821345,0.021803856,-0.0018447813,0.022929486,-0.028807772,-0.011965022,0.010521508,-0.02382582,-0.011652348,-0.021386957,0.05169557,-0.032372266,0.026764965,-0.0011217209,0.02378413,0.054447107,0.033622965,0.015143883,-0.016874017,0.018374857,-0.0204802,0.01817683,0.04769333,0.006305609,0.016061062,0.011985868,-0.0065088472,-0.018416546,0.012569527,-0.020344708,-0.021949772,-0.03218466,0.016728103,0.013351214,-0.020511467,-0.028703548,-0.019948652,0.0004094086,0.008760106,0.002975622,-0.0033768879,-0.024513705,0.0067172972,-0.016488384,0.0056229355,0.0038224496,-0.0150709255,0.007957574,0.031225791,-0.031163257,-0.029182982,0.031350862,-0.013028117,0.025139054,-0.007493773,-0.015644163,-0.020615693,-0.015915148,0.019208657,0.008572501,0.021126395,-0.008989401,0.0021809067,0.0010012108,-0.002774989,0.016154865,-0.0052008242,-0.0123715,0.0101827765,0.015237686,-0.0037312529,-0.007790814,-0.020011188,0.018333167,-0.017395142,-0.011579391,-0.009484469,0.004760474,0.015008391,0.020334285,0.003778154,0.0054196967,-0.020428088,-0.033873104,0.005398852,-0.02553511,-0.017989224,0.003038157,-0.022679346,0.002630377,-0.047359813,-0.0065140584,-0.01780162,0.008958133,-0.018781334,-0.014122479,0.017332608,0.017791197,0.032539025,-0.003335198,0.003798999,-0.037958723,-0.012809245,0.03418578,0.004906389,0.013924452,0.016936552,0.038042102,-0.002296857,-0.024388636,0.01993823,0.034915354,0.0006224183,-0.030412836,0.024013426,0.031142412,0.02031344,-0.01019841,0.00084943324,-0.028849462,0.0154878255,0.010151509,0.011099956,-0.021209775,0.032205507,0.008801796,0.03945956,0.015143883,-0.010714323,0.0074156043,-0.015519093,-0.036478728,0.012767555,-0.0029547769,-0.006566171,-0.021470336,-0.027369468,0.017238805,0.020282174,-0.021157661,-0.023804976,0.040251672,-0.0082025025,0.019135699,0.021553718,-0.02470131,-0.02436779,-0.0063160313,0.024430325,0.0034498454,0.01721796,-0.008145179,-0.0022382305,-0.01370558,0.0050913882,-0.018155985,-0.016113175,-0.007603209,-0.013174032,-0.017541056,-0.0376252,-0.004671883,0.039397027,-0.0018721404,-0.004880333,-0.015571206,-0.056031328,0.027557073,-0.015331488,0.035478167,0.009713764,0.045775592,0.047943473,0.04961107,-0.01308023,0.03920942,0.044566583,0.043440953,0.020844987,-0.030683821,0.022241602,-0.043107435,-0.011464743,0.0056229355,0.0034785073,-0.025555955,0.016029796,-0.02056358,-0.0345193,-0.009187428,-0.008254615,0.0070195496,-0.00039735757,-0.025722714,0.017697394,0.00794194,0.010234889,0.034310848,-0.012632063,0.037958723,-0.017436832,0.030871427,0.021574562,0.0043826587,-0.031121567,0.0058209626,0.0002747304,0.003918858,-0.027723834,-0.021199353,-0.013747269,-0.03447761,-0.02486807,0.019583866,-0.006623495,0.03397733,-0.0055030766,0.0075927866,0.0142892385,0.027828058,0.0052008242,-0.007660533,0.016832327,-0.011485588,0.00008549702,-0.015654586,-0.03564493,-0.004122096,0.0004927885,-0.016613455,-0.015185573,0.04665108,-0.005346739,-0.033247754,0.0048360373,0.030141851,-0.014508111,-0.010130664,-0.025743559,0.0067016636,-0.032539025,-0.026931724,-0.021783011,-0.01851035,0.0251599,0.018895982,0.008212925,-0.037166614,-0.043482643,0.010745591,-0.038479846,0.011006153,0.004734418,0.010724746,-0.021741321,-0.036040984,-0.04183589,-0.0030590019,-0.0050470927,0.03268494,-0.0098232,-0.015248109,-0.016728103,0.02507652,-0.058907934,-0.02424272,-0.042773914,-0.022637656,0.0011862101,0.016790638,-0.006962226,0.0040308996,0.0034759017,0.0119546,0.04660939,-0.013226145,-0.023992581,0.028766083,0.030371146,-0.0053727953,0.046234183,-0.009296864,0.035707463,-0.015644163,0.01609233,-0.02010499,-0.019990344,0.0142162815,-0.010693478,-0.00059375644,-0.018739644,-0.01613402,0.04171082,-0.009302076,0.0150709255,-0.013966141,0.04008491,0.01846866,0.014028677,0.03343536,-0.0070403945,-0.0013901001,0.013236567,0.012694597,-0.037646048,0.019375416,0.020886678,0.017561901,-0.022637656,0.025097365,0.010667422,0.003749492,0.021345267,0.010620521,-0.047359813,0.022679346,-0.018093448,0.0033873105,0.008171235,-0.0027280878,0.0068371557,0.010177565,0.0010806823,-0.014185014,-0.021637097,0.025785249,-0.010000383,0.0065974384,0.0053258943,-0.018301899,-0.026556514,-0.020990903,-0.0069205356,-0.014560224,0.0482353,-0.029724952,0.03937618,-0.045692213,0.0069205356,0.015102194,0.019208657,0.027265243,-0.037750274,0.021574562,-0.01370558,-0.03289339,0.005320683,-0.013424172,-0.004726601,-0.028786927,0.0002781503,0.03143424,-0.033998173,0.023367232,0.026660739,0.029704107,0.04016829,-0.03310184,-0.042231943,-0.005638569,-0.001134749,0.00053057005,0.015237686,0.01312192,0.021824703,-0.02064696,0.0030876638,-0.017155424,-0.035999294,0.005083571,0.0134345945,0.033998173,0.029620728,-0.017561901,-0.01692613,-0.012475725,0.003356043,-0.023346385,0.009963904,0.013132342,-0.019125275,0.008853909,0.027536228,-0.007134197,0.045817282,-0.00054262107,-0.025785249,0.009885735,0.01847908,0.007967996,0.0063160313,0.02236667,-0.0022864346,-0.021553718,-0.011902488,-0.005659414,-0.011985868,-0.03825055,0.011839953,-0.0034003386,-0.036082674,-0.04719305,-0.0017470705,-0.0049454733,-0.0054561757,0.0056281467,-0.01203798,-0.013695157,-0.030371146,-0.005612513,0.027348623,0.024096806,0.0016845355,-0.000524056,0.026639894,-0.021699632,0.0021144634,-0.013903607,0.021845547,0.008890387,0.00016513138,0.007488562,-0.0081660235,-0.00025974808,-0.005112233,0.017072044,0.012465303,0.024888914,0.019073164,0.006190961,-0.01784331,-0.021178506,0.014476844,-0.0042628,-0.027953127,0.021949772,0.03983477,-0.027848903,-0.06578678,0.014820786,-0.025826938,-0.0072175767,-0.02595201,0.037395906,-0.0096199615,-0.019698514,-0.04873558,-0.029349742,-0.0013601354,0.001003165,-0.0032882967,-0.04660939,0.06837156,0.0067433533,-0.04727643,-0.04004322,-0.022387516,0.009651229,0.0046823053,0.04923586,0.0069987047,0.009296864,0.026639894,0.006738142,0.02424272,0.0000071349295,-0.015519093,-0.034310848,-0.038855057,0.0034628736,0.02411765,0.016644722,-0.026327219,-0.0089477105,0.018083027,-0.017311761,0.011068689,0.0041325185,0.03043368,0.009025879,-0.008332783,0.01721796,-0.03879252,-0.0020532312,0.010693478,0.036624644,0.02570187,0.002145731,0.0061701164,-0.01353882,-0.038500693,0.03645788,0.02093879,-0.02236667,0.009223907,-0.024743,0.013007272,-0.0011634108,0.015623318,-0.0036296335,-0.0128717795,-0.0066599734,0.042523775,-0.0035306197,-0.032080434,-0.02561849,0.020626115,0.001985485,0.029057913,0.017530635,0.017072044,0.0008657184,0.004088223,0.020000765,-0.027244398,0.01730134,-0.017676549,0.016102754,0.0075875754,-0.01960471,0.02018837,-0.006248285,0.0036087884,0.01521684,0.015175151,-0.021532873,-0.0017092889,0.011152068,-0.017436832,-0.018541615,-0.019385839,-0.01212136,-0.02591032,-0.0010168445,0.024138495,-0.0073843366,0.00089438027,-0.029057913,-0.013590932,-0.04831868,0.017332608,-0.012548682,0.038584072,0.0071081407,0.05173726,0.0045963195,0.017759928,-0.0026264684,-0.02395089,0.024680465,-0.013069808,0.036603797,0.026702428,-0.016019372,-0.020198792,-0.0050757546,0.006540115,0.037875343,-0.0016063668,0.013934874,0.013309524]},{"id":"network-delay-time","name":"Network Delay Time","description":"You are given a network of `n` directed nodes, labeled from `1` to `n`. You are also given `times`, a list of directed edges where `times[i] = (ui, vi, ti)`. \n    \n* `ui` is the source node (an integer from `1` to `n`)\n* `vi` is the target node (an integer from `1` to `n`)\n* `ti` is the time it takes for a signal to travel from the source to the target node (an integer greater than or equal to `0`).\n\nYou are also given an integer `k`, representing the node that we will send a signal from.\n\nReturn the **minimum** time it takes for all of the `n` nodes to receive the signal. If it is impossible for all the nodes to receive the signal, return `-1` instead.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/ba9b9be8-b888-45d6-627a-e719d1ac4e00/public)\n\n```java\nInput: times = [[1,2,1],[2,3,1],[1,4,4],[3,4,1]], n = 4, k = 1\n\nOutput: 3\n```\n\n**Example 2:**\n\n```java\nInput: times = [[1,2,1],[2,3,1]], n = 3, k = 2\n\nOutput: -1\n```\n\n**Constraints:**\n* `1 <= k <= n <= 100`\n* `1 <= times.length <= 1000`\n","difficulty":"Medium","concepts":["Adjacency List","Dijkstra's"],"solutions":{"python":"class Solution:\n    def networkDelayTime(self, times: List[List[int]], n: int, k: int) -> int:\n        edges = collections.defaultdict(list)\n        for u, v, w in times:\n            edges[u].append((v, w))\n\n        minHeap = [(0, k)]\n        visit = set()\n        t = 0\n        while minHeap:\n            w1, n1 = heapq.heappop(minHeap)\n            if n1 in visit:\n                continue\n            visit.add(n1)\n            t = w1\n\n            for n2, w2 in edges[n1]:\n                if n2 not in visit:\n                    heapq.heappush(minHeap, (w1 + w2, n2))\n        return t if len(visit) == n else -1\n","javascript":"/**\n * const { MinPriorityQueue } = require('@datastructures-js/priority-queue');\n */\n\nclass Solution {\n    /**\n     * @param {number[][]} times\n     * @param {number} n\n     * @param {number} k\n     * @return {number}\n     */\n    networkDelayTime(times, n, k) {\n        const edges = new Map();\n        for (let i = 1; i <= n; i++) {\n            edges.set(i, []);\n        }\n        for (const [u, v, w] of times) {\n            edges.get(u).push([v, w]);\n        }\n\n        const minHeap = new MinPriorityQueue(entry => entry[0]);\n        minHeap.enqueue([0, k]);\n\n        const visit = new Set();\n        let t = 0;\n\n        while (!minHeap.isEmpty()) {\n            const [w1, n1] = minHeap.dequeue();\n            if (visit.has(n1)) continue;\n            visit.add(n1);\n            t = w1;\n\n            for (const [n2, w2] of edges.get(n1)) {\n                if (!visit.has(n2)) {\n                    minHeap.enqueue([w1 + w2, n2]);\n                }\n            }\n        }\n\n        return visit.size === n ? t : -1;\n    }\n}\n","cpp":"class Solution {\npublic:\n    int networkDelayTime(vector<vector<int>>& times, int n, int k) {\n        unordered_map<int, vector<pair<int, int>>> edges;\n        for (const auto& time : times) {\n            edges[time[0]].emplace_back(time[1], time[2]);\n        }\n\n        priority_queue<pair<int, int>, vector<pair<int, int>>, greater<>> minHeap;\n        minHeap.push({0, k});\n\n        set<int> visited;\n        int t = 0;\n        while (!minHeap.empty()) {\n            auto curr = minHeap.top();\n            minHeap.pop();\n            int w1 = curr.first, n1 = curr.second;\n            if (visited.count(n1)) {\n                continue;\n            }\n            visited.insert(n1);\n            t = w1;\n\n            if (edges.count(n1)) {\n                for (const auto& next : edges[n1]) {\n                    int n2 = next.first, w2 = next.second;\n                    if (!visited.count(n2)) {\n                        minHeap.push({w1 + w2, n2});\n                    }\n                }\n            }\n        }\n\n        return visited.size() == n ? t : -1;\n    }\n};\n","java":"class Solution {\n    public int networkDelayTime(int[][] times, int n, int k) {\n        Map<Integer, List<int[]>> edges = new HashMap<>();\n        for (int[] time : times) {\n            edges.computeIfAbsent(time[0], key -> new ArrayList<>()).add(new int[]{time[1], time[2]});\n        }\n\n        PriorityQueue<int[]> minHeap = new PriorityQueue<>(Comparator.comparingInt(a -> a[0]));\n        minHeap.offer(new int[]{0, k});\n\n        Set<Integer> visited = new HashSet<>();\n        int t = 0;\n        while (!minHeap.isEmpty()) {\n            int[] curr = minHeap.poll();\n            int w1 = curr[0], n1 = curr[1];\n            if (visited.contains(n1)) {\n                continue;\n            }\n            visited.add(n1);\n            t = w1;\n\n            if (edges.containsKey(n1)) {\n                for (int[] next : edges.get(n1)) {\n                    int n2 = next[0], w2 = next[1];\n                    if (!visited.contains(n2)) {\n                        minHeap.offer(new int[]{w1 + w2, n2});\n                    }\n                }\n            }\n        }\n\n        return visited.size() == n ? t : -1;\n    }\n}\n","csharp":"public class Solution {\n    public int NetworkDelayTime(int[][] times, int n, int k) {\n        var edges = new Dictionary<int, List<int[]>>();\n        foreach (var time in times) {\n            if (!edges.ContainsKey(time[0])) {\n                edges[time[0]] = new List<int[]>();\n            }\n            edges[time[0]].Add(new int[] { time[1], time[2] });\n        }\n\n        var pq = new PriorityQueue<int, int>();\n        pq.Enqueue(k, 0);\n\n        var dist = new Dictionary<int, int>();\n        for (int i = 1; i <= n; i++) {\n            dist[i] = int.MaxValue;\n        }\n        dist[k] = 0;\n\n        while (pq.Count > 0) {\n            // Correctly using TryDequeue to get node and its distance\n            if (pq.TryDequeue(out int node, out int minDist)) {\n                if (minDist > dist[node]) {\n                    continue;\n                }\n\n                if (edges.ContainsKey(node)) {\n                    foreach (var edge in edges[node]) {\n                        var next = edge[0];\n                        var weight = edge[1];\n                        var newDist = minDist + weight;\n                        if (newDist < dist[next]) {\n                            dist[next] = newDist;\n                            pq.Enqueue(next, newDist);\n                        }\n                    }\n                }\n            }\n        }\n\n        int result = 0;\n        for (int i = 1; i <= n; i++) {\n            if (dist[i] == int.MaxValue) return -1;\n            result = Math.Max(result, dist[i]);\n        }\n\n        return result;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def networkDelayTime(self, times: List[List[int]], n: int, k: int) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[][]} times\n     * @param {number} n\n     * @param {number} k\n     * @return {number}\n     */\n    networkDelayTime(times, n, k) {}\n}\n","cpp":"class Solution {\npublic:\n    int networkDelayTime(vector<vector<int>>& times, int n, int k) {\n        \n    }\n};\n","java":"class Solution {\n    public int networkDelayTime(int[][] times, int n, int k) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int NetworkDelayTime(int[][] times, int n, int k) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/EaphyqKU4PQ","embedding":[-0.04171491,-0.052235927,0.027294656,-0.03700814,-0.016473697,0.00729088,0.031862993,0.03548536,-0.02597953,0.031978354,0.0056383195,-0.011063219,-0.0114842905,-0.032647453,0.042337865,-0.048867356,-0.0010324902,0.018342564,0.019150097,0.022610959,-0.037723385,0.027179295,0.02521814,0.001077914,0.05080544,0.033985656,0.017038971,0.0340318,0.039753757,0.0059353765,0.04056129,-0.015481585,-0.0012048122,0.011184349,0.0055373777,0.036292896,-0.031816848,0.040399782,-0.03758495,0.007215895,-0.009990352,-0.052697375,-0.039338455,0.003466629,0.017581174,-0.004931727,-0.022068758,0.034170233,0.038692426,0.046144813,-0.024964344,0.02962497,-0.028402133,-0.036177535,-0.03855399,-0.03077859,0.015989177,0.057865594,0.012297592,0.027087005,0.0676483,-0.001871749,0.02397223,0.032647453,-0.0021414077,-0.012412955,-0.006506419,0.0051855235,-0.022195654,0.00081258133,-0.08056884,0.038138688,0.002895587,-0.040584363,-0.03986912,0.02354539,-0.017869579,0.00053607294,0.06594094,-0.017961869,0.024041448,-0.047806025,0.017246624,0.008196472,-0.034977768,-0.041876417,-0.04812904,-0.023649216,-0.034124088,-0.030547867,-0.00037745014,0.043699138,0.00987499,0.04104581,0.009765396,0.032139864,0.07226278,0.013555039,-0.015066281,0.032462876,0.016312191,0.009863454,-0.03366264,0.023810724,-0.015204716,0.042914677,-0.047229216,0.0031291952,-0.07240121,0.021618845,-0.02837906,0.018042622,-0.015516194,0.0068986495,0.018942446,-0.016450625,-0.047113854,-0.04812904,0.0734164,0.006096883,-0.024156809,-0.022599421,-0.0120437965,0.006812128,-0.046767768,-0.003181108,0.01352043,-0.025010489,0.021365048,0.017915724,0.012666751,-0.01102861,0.03689278,0.0064891144,-0.015423903,-0.0006525165,-0.012516781,0.002095263,0.034654755,-0.010111482,-0.043976005,0.024318317,-0.02484898,0.017950332,0.041553404,0.093535535,0.009050151,0.021699598,-0.0075908215,0.025518082,0.016035322,0.0029936447,0.034977768,0.02895587,-0.021076644,-0.03525464,-0.011143972,0.042060997,0.02637176,0.007585054,0.020338327,-0.018215666,-0.013774226,0.025725733,0.033916436,-0.0016179525,-0.014962455,-0.007319721,-0.037169646,-0.031009315,0.056942698,-0.052881956,0.028886653,0.030824736,0.08195319,0.0067832875,-0.06783287,-0.03354728,0.01023838,0.033431917,-0.0010115808,0.00352431,-0.034747045,-0.018192593,0.006298767,-0.026787063,-0.018953983,-0.026348688,-0.0048711617,-0.013970342,0.009638498,0.028586712,-0.023533855,0.015377759,-0.00881366,0.014397182,-0.013958806,-0.04487583,0.0072216634,-0.049605675,-0.02674092,0.021157397,0.0188963,-0.024918199,0.08329139,-0.035646867,-0.0280099,-0.0051018856,0.033570353,0.022864755,0.024318317,-0.0023519434,0.037446514,-0.049744107,-0.019726908,-0.0062583904,-0.025333501,-0.010596002,-0.03910773,0.028425205,-0.031009315,0.017869579,-0.0003210309,0.035992954,0.026833208,0.04679084,-0.026440978,-0.0138549805,-0.0012069753,0.020119138,-0.049328804,-0.022703247,0.013878052,-0.036200605,-0.009286644,-0.038046397,-0.06972481,-0.027756104,-0.038577065,-0.000092469876,0.026625557,-0.01658906,-0.015400832,0.047898315,-0.0010469104,-0.017673463,-0.07660039,-0.017119726,-0.07133988,-0.010959393,0.012759041,-0.026071819,0.001419674,-0.029671114,-0.019853806,0.042107143,0.05122074,-0.034377884,0.015193179,-0.00026803647,0.036385186,0.00054364355,-0.0033743393,-0.04399908,-0.022011075,-0.045268063,0.015781526,-0.02129583,-0.02133044,0.00049028866,0.042614736,-0.04305311,0.004011715,-0.064971894,-0.0021154513,-0.029232739,0.012793649,-0.044829685,0.007440851,-0.078169316,-0.027848395,-0.013843444,0.005721957,-0.027917612,0.013462749,-0.011172812,0.0021356395,0.04572951,-0.008058038,-0.049513385,-0.032670528,-0.008040734,-0.038507845,0.04344534,0.013451213,-0.007088997,-0.042937748,0.019023199,0.03460861,-0.021618845,0.022507133,-0.018181056,0.010071105,0.04969796,-0.060634285,0.0036540923,0.027502308,-0.017281232,-0.025102777,0.02084592,0.0020361398,-0.00054184103,-0.017131262,-0.0019669225,-0.024549041,-0.025587298,0.04969796,-0.017685,0.024479823,-0.03142462,-0.0014852862,-0.057404146,0.04083816,0.05112845,0.020592123,0.01658906,0.005176871,0.018008012,0.018965518,-0.0105786985,-0.06118802,-0.011951506,0.014039559,0.013693473,-0.031032387,0.025379647,0.041761056,-0.009551976,0.00043332862,0.045406494,-0.009482759,0.01510089,0.03566994,0.0072216634,0.030732445,0.054497022,0.015620019,-0.023649216,0.042153288,0.066679254,-0.005393175,-0.032047573,0.017004363,0.042707026,0.034354813,-0.030155635,-0.025241213,0.06289538,-0.0242491,0.0032301368,-0.04065358,-0.0023533856,-0.030132562,-0.025056634,-0.039038513,0.019219315,-0.014743268,-0.010613307,-0.04794446,0.009586585,-0.02780225,0.053435694,-0.009286644,-0.00088756665,-0.02348771,-0.04159955,0.016785176,0.03943074,0.03866935,0.022045685,-0.033501133,-0.016762104,-0.02780225,0.021699598,0.048313618,0.02047676,-0.027456164,-0.010596002,-0.060218982,-0.010803654,0.015608483,-0.02646405,0.027825322,0.014535616,0.015504657,-0.016600596,0.005724841,0.02944039,0.0058055944,0.044714324,0.0013223373,-0.040999666,-0.03989219,0.025379647,0.008456037,-0.021688063,0.003633904,0.006737143,0.018734794,0.010255685,0.0055979425,-0.010647915,0.019127024,-0.019473111,0.01720048,-0.015943034,-0.022714784,0.038577065,0.0030484416,-0.00068279903,-0.015746918,0.011974579,0.042753167,-0.005321074,-0.029578825,-0.00065540057,0.011432378,0.004992292,0.022634031,-0.009794236,0.0003907889,0.050390135,0.022195654,0.0676483,0.04739072,0.029278884,0.024572114,0.061049588,-0.0013194532,0.008225312,-0.026925499,-0.004917307,-0.01458176,0.051359177,-0.01999224,-0.020995889,-0.027594598,0.0048942342,0.07840004,0.03153998,0.037169646,-0.011305479,0.01780036,0.019957632,-0.057173423,-0.0020822848,0.045983307,0.063910566,0.008917485,-0.045106556,-0.01917317,0.0005047089,-0.045037337,-0.01813491,-0.0021702482,0.037054285,0.02971726,0.0005728446,0.022380235,0.04238401,0.0028739567,0.027733032,-0.014916311,-0.018619431,0.007371634,0.07101687,0.035416145,0.03525464,-0.008796355,-0.008456037,-0.037746456,-0.019969167,-0.0019424082,0.020488298,0.019923022,-0.005272045,0.0384617,0.0011384791,-0.007585054,-0.03320119,0.0023086828,0.012689823,0.02914045,-0.009800005,-0.0071063014,0.011288174,-0.037608024,0.011438145,0.0077696326,-0.032255225,-0.0442298,0.01394727,0.002780225,-0.060865007,-0.0170159,0.018977053,-0.03147076,0.004040555,-0.005018248,0.028332915,-0.056204382,0.007556213,0.007994588,0.011732318,-0.004868278,0.032624383,-0.011893826,-0.007723488,-0.009505832,0.01394727,-0.01099977,-0.01765039,-0.037723385,0.029417317,0.0444836,-0.011651565,0.0039367294,-0.014743268,-0.024318317,-0.014939383,0.009961511,-0.012459099,-0.014789413,0.03689278,-0.013312778,0.018469462,-0.009361628,-0.020892063,0.03931538,-0.02685628,0.015366223,0.03133233,-0.02914045,-0.017004363,-0.019703835,-0.021076644,0.019069344,0.0017996477,-0.00944815,-0.033131976,0.009944207,-0.012020724,0.0071870545,-0.015158571,-0.039384596,0.0010872871,-0.03788489,0.011524667,0.034101017,-0.023199305,-0.004646206,0.020730557,0.0017794593,-0.027686888,-0.01731584,0.02828677,-0.0036685127,0.048175186,0.006148796,-0.0040578595,0.0015573874,-0.036292896,-0.011247798,-0.0070197796,0.035323855,-0.026348688,0.00012473519,0.015054746,-0.014535616,0.035877593,-0.006933258,0.015308541,-0.026810136,-0.029301956,-0.030224852,-0.0019452922,-0.010844031,-0.008450269,-0.008957862,-0.015873816,0.006598708,0.004775988,0.022887828,0.0073081846,-0.010624843,-0.04679084,-0.036477473,-0.027594598,0.02992491,-0.012516781,-0.025033562,0.03029407,-0.010244149,-0.021353513,0.007331257,0.008744442,0.015043209,0.04065358,-0.011628493,0.021157397,0.012632143,-0.004989408,0.022022612,-0.0075389086,-0.005052857,-0.026094891,0.0156777,0.00048740458,0.0032012963,-0.0020606543,0.023233913,0.028240625,0.004493351,0.020522906,-0.010319133,0.015943034,-0.025010489,0.030178707,-0.00019413266,0.010030729,-0.008577167,0.000025866331,-0.045914087,0.008467573,-0.063725986,0.026048746,0.033016615,0.0022495596,-0.015493121,-0.041853346,0.006656389,-0.04651397,-0.0072447355,0.009973047,-0.0052893492,0.033339627,-0.022195654,0.010261453,0.022680175,-0.0070716925,0.037377298,-0.0037117733,0.035046984,0.009482759,0.00783885,0.022599421,-0.024502896,-0.025633443,-0.003400296,-0.009321252,0.037515733,-0.0071870545,-0.0089809345,0.022703247,0.015643092,-0.03396258,0.034862407,0.013024373,0.034931622,-0.016565988,0.002393762,0.039038513,0.0066736937,0.005866159,-0.015516194,-0.056250528,-0.011882289,-0.005335494,-0.054220155,0.0032243687,-0.0010851241,0.015631555,-0.005038437,0.083937414,0.03998448,-0.014062632,0.019196242,0.028309843,-0.015781526,-0.015193179,0.007671575,-0.0093270205,-0.016427554,0.004758684,0.0262564,-0.0010851241,0.04485276,0.041438043,-0.0101807,-0.063679844,0.021757279,0.01759271,-0.02166499,0.033501133,0.00963273,0.003400296,-0.0037060052,0.025679588,0.006696766,-0.022253336,-0.005621015,-0.018100303,-0.028217552,0.019830734,-0.017419666,0.00941931,-0.01020954,0.00077725167,-0.015170108,-0.009701947,-0.01893091,0.052789666,-0.035116203,-0.0045741047,-0.017373523,-0.015850743,0.00510477,0.008905949,0.045706436,-0.011720782,-0.008836731,-0.00826569,0.03345499,0.013508894,0.0046173655,0.007971517,-0.020972818,0.008888644,-0.009696179,-0.02655634,-0.057588726,0.010157627,0.007054388,-0.009944207,0.009425078,0.0391308,-0.018723257,0.00442125,-0.051266886,0.0033195424,-0.058603913,0.007031316,-0.019300068,0.016116075,-0.022564813,0.0036425563,-0.0018054158,0.004666394,0.018757867,-0.0017434087,-0.0084387325,0.004147265,-0.036777414,-0.01762732,0.05205135,-0.006091115,-0.010105714,0.008017661,-0.014166458,0.020499833,0.040353637,-0.031586125,0.0324398,0.011143972,-0.0005562613,-0.03920002,-0.04016906,0.015781526,-0.006587172,0.010844031,0.005759449,-0.0022048568,-0.03463168,-0.019127024,0.026048746,-0.0074812276,-0.0009301064,-0.01318588,-0.0043347282,-0.01938082,-0.040030625,-0.016727494,-0.032393657,0.0051220744,0.04123039,-0.038392484,-0.018031085,-0.04379143,-0.010555626,-0.014293356,0.04476047,0.004992292,0.019957632,-0.026325615,-0.013474286,0.0026014138,0.009580817,0.03440096,0.01212455,0.035439216,-0.0016107424,0.03165534,-0.032716673,0.019888414,0.02248406,0.023533855,-0.000018644938,0.0062007094,0.02266864,0.0093270205,0.015862279,-0.0017693652,-0.018181056,0.0066736937,-0.041553404,-0.012355274,0.029463463,-0.019184707,-0.0016165104,0.047575302,0.015977642,-0.005176871,0.008479109,0.037054285,0.0542663,0.01658906,-0.023568463,-0.01510089,0.015250861,0.038600136,-0.02484898,0.014501007,-0.0059296084,-0.022230264,-0.008640616,0.005566218,-0.012874403,-0.0029965288,0.0016914958,-0.027825322,-0.032716673,0.01971537,0.03290125,0.00088900863,0.015666164,-0.01193997,0.014789413,0.035231564,0.04083816,0.009701947,0.017465811,-0.026187181,-0.01735045,0.00062692055,-0.013889588,0.010319133,0.0025004721,-0.010549858,-0.011207421,-0.018065695,-0.01971537,0.040030625,-0.02397223,0.013878052,0.009805772,0.016035322,-0.00020188355,-0.041761056,0.02369536,0.001874633,0.018365635,0.015793063,-0.020857455,0.03862321,0.022091828,0.0017160103,0.025518082,0.018123375,0.0063391435,-0.043283835,0.010405655,-0.010590235,0.032070644,-0.011351624,0.0074639237,0.008161863,0.015181643,0.0020678644,0.030893952,0.018607896,0.013416604,-0.045568004,0.04249937,0.014085704,0.016519843,0.023995303,-0.0024687476,-0.0019121256,0.014051096,-0.007088997,0.019634617,-0.0088425,0.004369337,0.03299354,-0.0010865661,-0.0002837185,0.0022957043,0.019726908,0.042868532,0.02387994,0.018804012,-0.028540567,0.0048855823,-0.0059872894,0.0056123626,-0.015308541,0.010261453,0.018700186,0.018273346,0.01720048,0.051543757,0.005831551,-0.0064948825,-0.009834614,-0.065525636,-0.001988553,0.0073543293,0.0039655697,-0.003357035,-0.01318588,-0.03297047,0.005124958,-0.0025639213,0.022518668,-0.0031464994,-0.0049692197,0.027017787,-0.017246624,-0.04238401,0.0596191,0.036085244,-0.035693012,-0.009361628,0.00352431,0.008905949,-0.0027485003,0.02531043,0.00060024305,-0.0009906715,0.0058200145,0.03756188,0.03232444,0.0053066537,-0.030247925,-0.0010620517,0.03864628,-0.0121591585,-0.016242974,0.020384472,-0.048405908,0.036638983,0.008744442,0.008848268,-0.0060276664,-0.01731584,-0.033985656,0.009846149,0.024987416,0.011224725,-0.019807661,0.005110538,0.02056905,-0.06317225,-0.0029273115,-0.013208953,0.00896363,-0.006177637,0.021641918,0.030178707,0.04162262,0.029002015,0.003576223,0.02053444,-0.03077859,0.0029431737,0.018677114,-0.029301956,-0.0033051223,-0.024179881,0.0039280774,-0.016935145,-0.029094305,0.045037337,-0.017062044,0.0022856102,-0.038900077,0.01203226,-0.0008291646,0.025564225,-0.014777876,-0.017431203,-0.016958218,0.010503713,-0.011628493,0.017327378,-0.02339542,0.007873459,0.008375283,-0.047436867,-0.009090528,0.0280099,-0.027317729,-0.010682524,-0.014247211,-0.043283835,-0.010099946,0.011755391,0.043399196,-0.011195885,0.025564225,0.005110538,-0.005387407,0.0104518,0.005344146,0.03373186,-0.00296192,0.023741506,-0.01394727,0.0015674816,-0.010492177,0.028079119,0.008329139,0.0010425843,-0.0011190117,0.014650978,0.02190725,-0.024387533,0.013012838,0.008115719,0.0021313136,-0.02561037,0.009021311,-0.037423443,0.028240625,0.04651397,-0.009286644,0.0036829328,0.026071819,0.0048077125,-0.024595184,-0.017177407,0.015227788,0.01203226,0.0029734564,-0.0155508015,0.015781526,-0.0077754008,-0.052605085,-0.0009603889,-0.00050903496,0.01361272,0.00037745014,0.0025394068,0.0046721622,0.0100191925,-0.017454276,-0.029209666,0.0046923505,0.023614608,-0.039338455,-0.015031673,0.009823077,0.004386641,-0.0033656873,-0.0043318444,0.020557513,-0.023049334,0.0050009442,0.006921722,-0.0030253693,0.009857685,-0.01394727,-0.008375283,-0.0012127433,0.024687475,0.0064545055,-0.01898859,-0.0076485025,-0.021341976,0.004135729,-0.021803424,0.029394245,0.029278884,-0.011074755,0.012689823,-0.013485822,0.0072851125,-0.02473362,-0.023026261,-0.008404124,0.000737596,-0.016889002,0.018700186,0.016358336,0.00087170437,-0.03537,0.03703121,-0.03174763,-0.0009279433,-0.016554452,0.020557513,0.00039475446,-0.005387407,-0.006033434,-0.03537,-0.009586585,-0.0068467367,0.002099589,0.001019512,0.026302543,0.0188963,-0.012436027,0.0041588014,-0.04639861,-0.009073224,0.013047446,0.0313554,-0.029486535,-0.0045135394,0.030317143,-0.01653138,-0.054127865,-0.011807304,0.0032532094,0.015573874,-0.013785763,0.021561164,0.04630632,0.008986702,-0.0025783414,-0.0013857865,-0.029578825,0.04429902,-0.012655215,0.0051739872,-0.0036050635,-0.060218982,-0.02434139,-0.023476174,0.021007426,-0.005447972,0.021734206,0.045014266,-0.007908068,0.019069344,0.0055950587,0.0060507385,0.010111482,0.023741506,0.008473341,-0.013578111,0.013393532,0.0242491,0.0029849925,0.019611545,0.013578111,0.015873816,0.014154921,-0.015077817,0.007919603,0.0016972639,0.000653598,0.016750567,-0.015689237,0.022034148,-0.01318588,0.019623082,-0.01971537,-0.015700772,-0.004251091,-0.0066909976,0.027779177,0.00454238,-0.03393951,-0.014477935,0.019450039,-0.010082642,0.010515249,0.0042309025,-0.003472397,-0.019207777,-0.02051137,-0.038807787,0.012678287,-0.039684538,0.020153748,0.026117964,-0.030109491,-0.028586712,0.01370501,0.01677364,0.01409724,0.017696535,0.01154774,0.033293482,-0.026071819,0.0042856997,0.01601225,-0.040030625,0.00025505823,-0.009926903,0.026141036,0.024687475,-0.039753757,-0.008911717,-0.022276409,0.010642148,0.0021154513,0.015389295,-0.030732445,-0.028079119,-0.00025235445,-0.038115617,0.037238862,0.04026135,0.016058395,-0.0109074805,-0.0053383783,0.024595184,-0.03290125,-0.021503482,0.01485863,-0.006823664,-0.00566716,0.00072425726,-0.030524794,-0.01716587,0.024572114,0.017950332,0.013324315,0.0022870523,-0.004213598,0.026417905,-0.037907965,0.009892294,0.026510196,0.02434139,0.013566575,-0.015481585,-0.0063968245,-0.03689278,-0.018434852,0.023603072,-0.0007202917,0.015043209,-0.01573538,-0.026533267,0.045798726,-0.020649804,-0.053066533,-0.017442739,0.0037752225,-0.0037781065,0.021134324,0.028909726,-0.0038992367,-0.025102777,0.025471937,0.013220489,-0.018388707,0.02561037,0.011749623,0.04083816,-0.025448864,0.012020724,-0.007371634,-0.040145986,-0.017708072,0.007273576,-0.04716,0.0019193358,0.004545264,0.01999224,0.019911487,0.010630611,0.049836397,0.025102777,0.0074812276,-0.03451632,0.0106940605,0.010417191,-0.0052576247,-0.018677114,0.037907965,-0.045706436,0.019438501,-0.023810724,0.011155508,-0.004822133,0.027179295,-0.013047446,-0.0028696305,-0.0038934685,-0.0062756944,0.0014513986,-0.0038415557,0.023926085,0.0120437965,0.03855399,0.012262984,0.002562479,0.026141036,-0.0015285469,0.013093591,-0.046006378,-0.00015618937,0.041761056,0.0021760163,0.0024500012,-0.02118047,0.001759271,0.0022048568,-0.0014045327,-0.044506673,-0.017038971,-0.00881366,-0.004484699,0.015723845,-0.004112656,-0.003867512,-0.019899951,-0.009615425,-0.05080544,0.009165513,-0.009246266,-0.0038473238,0.043491486,0.04150726,-0.04141497,-0.03855399,0.001977017,-0.006119956,0.02358,0.0074062427,0.00067703094,-0.025933385,-0.021422729,0.010728669,-0.022703247,0.00034121925,-0.02579495,0.030155635,0.01121319,0.021734206,0.01361272,-0.030663228,0.01731584,-0.037308082,0.00969041,0.006910186,-0.010186467,0.0073658656,-0.015158571,0.0054796967,-0.011732318,-0.058050174,-0.054681603,-0.0033253105,0.00805227,-0.001308638,0.037192717,-0.0015992061,-0.021526555,-0.02561037,0.014454863,0.03530078,0.056112092,-0.00014654583,-0.0031320793,-0.0014535616,-0.047898315,-0.0101807,-0.02819448,0.015066281,0.016808247,-0.029855695,0.02962497,-0.0150086,-0.0076485025,-0.0020577703,0.014754804,0.021641918,0.034585536,0.034470174,0.003584875,0.012320665,-0.029255811,0.009713483,0.0037550342,-0.012805185,0.037054285,0.005701768,-0.042245574,0.0023894361,0.015181643,-0.010959393,0.008952093,0.008225312,0.03622368,-0.018884765,0.027686888,-0.024272172,0.0048019444,0.0010519575,-0.011582348,0.016185293,-0.056296673,-0.0047269594,-0.024572114,-0.034839332,-0.025587298,-0.018827084,0.03883086,0.0043347282,0.037423443,0.0038444398,-0.0086348485,0.029348101,-0.016669814,0.040584363,-0.01811184,0.010446032,-0.037631094,0.011143972,0.0048653935,0.015746918,-0.003466629,-0.033708785,0.009909598,0.030086419,-0.027433092,0.028517494,0.017085116,-0.009713483,0.009413542,0.008513718,0.006702534,-0.043699138,0.010521017,0.013820372,0.008467573,0.01337046,-0.0034291365,-0.0024197185,0.009453919,-0.024433678,0.032393657,0.028448276,0.01409724,0.018157983,-0.03682356,0.018261809,-0.018527143,-0.005344146,-0.03320119,0.03816176,-0.031101603,0.030801663,0.006148796,-0.011311247,0.005736377,0.0306863,0.0073081846,0.061972484,0.015470048,-0.007585054,-0.009598121,0.0011247798,-0.0059642172,0.00454238,-0.00328205,-0.014351036,0.03317812,-0.0002817357,-0.0032272527,0.008144559,0.03661591,-0.0083233705,0.019911487,-0.03433174,-0.026879353,0.0042280187,0.016992828,0.0083233705,0.014351036,-0.00944815,0.0043549165,0.013820372,0.012793649,0.05569679,0.015758453,0.0028047394,-0.020211428,-0.0016626553,-0.0014355363,-0.021445801,-0.0031378472,0.003530078,0.01443179,0.019830734,0.034585536,-0.005889232,0.0088425,-0.020672876,0.0017174522,-0.011068987,0.029394245,-0.0017736913,-0.045683365,-0.0020794007,0.009598121,0.04372221,0.04496812,-0.009730787,-0.012136086,0.0012826816]},{"id":"swim-in-rising-water","name":"Swim in Rising Water","description":"You are given a square 2-D matrix of distinct integers `grid` where each integer `grid[i][j]` represents the elevation at position `(i, j)`.\n\nRain starts to fall at time = `0`, which causes the water level to rise. At time `t`, the water level across the entire grid is `t`.\n\nYou may swim either horizontally or vertically in the grid between two adjacent squares if the original elevation of both squares is less than or equal to the water level at time `t`.\n\nStarting from the top left square `(0, 0)`, return the minimum amount of time it will take until it is possible to reach the bottom right square `(n - 1, n - 1)`.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/11a45dd8-625f-4be6-9fbb-a3b6ffcc1100/public)\n\n```java\nInput: grid = [[0,1],[2,3]]\n\nOutput: 3\n```\n\nExplanation: For a path to exist to the bottom right square `grid[1][1]` the water elevation must be at least `3`. At time `t = 3`, the water level is `3`.\n\n**Example 2:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/e585e59c-a1f9-4d10-538d-9e52bcdb6200/public)\n\n```java\nInput: grid = [\n  [0,1,2,10],\n  [9,14,4,13],\n  [12,3,8,15],\n  [11,5,7,6]]\n]\n\nOutput: 8\n```\n\nExplanation: The water level must be at least `8` to reach the bottom right square. The path is `[0, 1, 2, 4, 8, 7, 6]`.\n\n**Constraints:**\n* `grid.length == grid[i].length`\n* `1 <= grid.length <= 50`\n* `0 <= grid[i][j] < n^2`\n","difficulty":"Hard","concepts":["Adjacency List","Dijkstra's"],"solutions":{"python":"class Solution:\n    def swimInWater(self, grid: List[List[int]]) -> int:\n        N = len(grid)\n        visit = set()\n        minH = [[grid[0][0], 0, 0]]  # (time/max-height, r, c)\n        directions = [[0, 1], [0, -1], [1, 0], [-1, 0]]\n\n        visit.add((0, 0))\n        while minH:\n            t, r, c = heapq.heappop(minH)\n            if r == N - 1 and c == N - 1:\n                return t\n            for dr, dc in directions:\n                neiR, neiC = r + dr, c + dc\n                if (\n                    neiR < 0\n                    or neiC < 0\n                    or neiR == N\n                    or neiC == N\n                    or (neiR, neiC) in visit\n                ):\n                    continue\n                visit.add((neiR, neiC))\n                heapq.heappush(minH, [max(t, grid[neiR][neiC]), neiR, neiC])\n","javascript":"/**\n * const { MinPriorityQueue } = require('@datastructures-js/priority-queue');\n */\n\nclass Solution {\n    /**\n     * @param {number[][]} grid\n     * @return {number}\n     */\n    swimInWater(grid) {\n        const N = grid.length;\n        const visit = new Set();\n        const minPQ = new MinPriorityQueue(entry => entry[0]);\n        const directions = [\n            [0, 1],\n            [0, -1],\n            [1, 0],\n            [-1, 0],\n        ];\n\n        minPQ.enqueue([grid[0][0], 0, 0]);\n        visit.add('0,0');\n\n        while (!minPQ.isEmpty()) {\n            const [t, r, c] = minPQ.dequeue();\n            if (r === N - 1 && c === N - 1) {\n                return t;\n            }\n            for (const [dr, dc] of directions) {\n                const neiR = r + dr;\n                const neiC = c + dc;\n                if (\n                    neiR < 0 ||\n                    neiC < 0 ||\n                    neiR >= N ||\n                    neiC >= N ||\n                    visit.has(`${neiR},${neiC}`)\n                ) {\n                    continue;\n                }\n                visit.add(`${neiR},${neiC}`);\n                minPQ.enqueue([Math.max(t, grid[neiR][neiC]), neiR, neiC]);\n            }\n        }\n    }\n}\n","cpp":"class Solution {\npublic:\n    int swimInWater(vector<vector<int>>& grid) {\n        int N = grid.size();\n        set<pair<int, int>> visit;\n        priority_queue<vector<int>, vector<vector<int>>, greater<>> minHeap;\n        vector<vector<int>> directions = {{0, 1}, {0, -1}, {1, 0}, {-1, 0}};\n\n        minHeap.push({grid[0][0], 0, 0});\n        visit.insert({0, 0});\n\n        while (!minHeap.empty()) {\n            auto curr = minHeap.top();\n            minHeap.pop();\n            int t = curr[0], r = curr[1], c = curr[2];\n            if (r == N - 1 && c == N - 1) {\n                return t;\n            }\n            for (const auto& dir : directions) {\n                int neiR = r + dir[0], neiC = c + dir[1];\n                if (neiR < 0 || neiC < 0 || neiR == N || neiC == N || visit.count({neiR, neiC})) {\n                    continue;\n                }\n                visit.insert({neiR, neiC});\n                minHeap.push({max(t, grid[neiR][neiC]), neiR, neiC});\n            }\n        }\n\n        return -1;\n    }\n};\n","java":"class Solution {\n    public int swimInWater(int[][] grid) {\n        int N = grid.length;\n        boolean[][] visit = new boolean[N][N]; // 2D array to track visited cells\n        PriorityQueue<int[]> minHeap = new PriorityQueue<>(Comparator.comparingInt(a -> a[0]));\n        int[][] directions = {{0, 1}, {0, -1}, {1, 0}, {-1, 0}};\n\n        minHeap.offer(new int[]{grid[0][0], 0, 0});\n        visit[0][0] = true; // Mark the starting point as visited\n\n        while (!minHeap.isEmpty()) {\n            int[] curr = minHeap.poll();\n            int t = curr[0], r = curr[1], c = curr[2];\n            if (r == N - 1 && c == N - 1) {\n                return t; // Reached the bottom-right corner\n            }\n            for (int[] dir : directions) {\n                int neiR = r + dir[0], neiC = c + dir[1];\n                if (neiR >= 0 && neiC >= 0 && neiR < N && neiC < N && !visit[neiR][neiC]) {\n                    visit[neiR][neiC] = true; // Mark the cell as visited\n                    minHeap.offer(new int[]{Math.max(t, grid[neiR][neiC]), neiR, neiC});\n                }\n            }\n        }\n        return -1; // No valid path found\n    }\n}\n","csharp":"public class Solution {\n    public int SwimInWater(int[][] grid) {\n        int N = grid.Length;\n        var visit = new HashSet<(int, int)>();\n        var minHeap = new PriorityQueue<(int t, int r, int c), int>();\n        int[][] directions = { new int[]{0, 1}, new int[]{0, -1}, new int[]{1, 0}, new int[]{-1, 0} };\n\n        minHeap.Enqueue((grid[0][0], 0, 0), grid[0][0]);\n        visit.Add((0, 0));\n\n        while (minHeap.Count > 0) {\n            var curr = minHeap.Dequeue();\n            int t = curr.t, r = curr.r, c = curr.c;\n            if (r == N - 1 && c == N - 1) {\n                return t;\n            }\n            foreach (var dir in directions) {\n                int neiR = r + dir[0], neiC = c + dir[1];\n                if (neiR < 0 || neiC < 0 || neiR >= N || neiC >= N || visit.Contains((neiR, neiC))) {\n                    continue;\n                }\n                visit.Add((neiR, neiC));\n                minHeap.Enqueue((Math.Max(t, grid[neiR][neiC]), neiR, neiC), Math.Max(t, grid[neiR][neiC]));\n            }\n        }\n\n        return -1;  // This line only executes if no path is found, which should not happen in a valid grid.\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def swimInWater(self, grid: List[List[int]]) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[][]} grid\n     * @return {number}\n     */\n    swimInWater(grid) {}\n}\n","cpp":"class Solution {\npublic:\n    int swimInWater(vector<vector<int>>& grid) {\n        \n    }\n};\n","java":"class Solution {\n    public int swimInWater(int[][] grid) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int SwimInWater(int[][] grid) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/amvrKlMLuGY","embedding":[-0.010805186,-0.005194315,0.06427571,0.007832497,-0.018429406,-0.01844203,-0.022948397,-0.013380254,-0.015046474,0.04253911,-0.0046325973,-0.039105684,-0.056197066,0.027391652,0.037616186,0.01301419,0.0060053356,-0.030092947,0.021269554,0.054783303,0.00043706724,-0.0006406112,0.023478558,0.007794629,0.008602493,0.011878131,0.013405499,0.045341387,0.03552079,0.013481237,0.023428068,0.0071129934,-0.017331215,-0.0070625017,0.03579849,0.0015920608,-0.008286921,0.037994873,0.00086545624,0.009037983,0.03037065,-0.009694372,-0.02615461,0.0026129363,0.008002906,0.011000841,-0.0020180831,0.017773015,0.0054089045,0.03615193,-0.0010745227,0.054429863,-0.008608805,-0.036379144,-0.029209346,-0.0052763643,-0.020272346,0.032365065,-0.0063998005,-0.011543624,-0.011928623,-0.0043264925,-0.006589144,-0.013178288,-0.014099758,0.048269898,0.027240178,-0.0071887304,-0.017974982,-0.039408635,-0.08088742,-0.009814289,0.035571277,-0.050895456,-0.040519446,-0.0011881286,0.0105842855,-0.045947287,0.029537542,0.035167348,0.028376237,-0.072354354,0.021976436,-0.010287648,-0.025750676,-0.04152928,-0.03158245,-0.005538289,-0.037641432,-0.041579768,-0.014491067,-0.004481123,-0.042210914,0.010855678,-0.018025475,0.009530275,0.05705542,0.014301724,0.0072455336,0.013784186,-0.005797058,-0.0083752815,0.051627584,0.015576635,0.0786153,0.061549168,-0.02782083,0.034889642,-0.020979227,0.023743639,-0.01870711,-0.021711355,0.028376237,-0.018946944,0.009309375,0.016687449,-0.017848754,-0.033955548,0.0050365296,0.025371991,-0.004569483,-0.027341159,-0.008122824,-0.03413227,-0.0070877476,-0.011404773,-0.00076052855,-0.043397464,-0.02400872,0.042034194,-0.0012575545,0.01139215,0.010761006,-0.014402707,-0.04622499,-0.00521325,-0.025687562,0.033071946,0.043801397,0.0056234933,-0.01989366,0.071495995,0.0061789,-0.0074475,0.01393566,-0.003506005,0.010331828,0.06210457,0.017545804,-0.0047304244,0.013960906,0.0010232423,0.019590711,0.029588033,0.0015778601,-0.03471292,-0.005307921,0.044407293,0.023554295,-0.0021711355,-0.04693187,-0.040948626,-0.007744137,0.008009218,0.006866847,-0.025233138,-0.02782083,-0.018126456,-0.05427839,0.0049323905,0.032440804,-0.030446388,0.026230346,-0.01932563,0.05574264,-0.006248326,-0.05097119,-0.017192364,-0.018871207,-0.011701411,-0.03221359,0.0034744479,-0.02361741,-0.027568372,0.038676508,0.020979227,0.050365295,-0.026785754,-0.025182648,0.013721071,-0.032087363,0.012231572,0.018189572,-0.030547371,0.00022543676,-0.0033987106,0.04609876,0.001861875,0.025750676,0.0011755058,0.01130379,-0.0072455336,0.012458784,0.02296102,0.011467887,-0.016207779,-0.031456217,0.03913093,0.015210572,-0.055540677,0.01840416,0.0025356212,0.0014058733,-0.050769225,-0.010073059,0.0049450137,-0.0003007796,-0.007030945,-0.017558428,0.046250235,-0.047613505,0.03443522,-0.0142007405,0.0553892,-0.007119305,0.025952643,0.029714262,0.013733694,0.042084683,0.0026949851,0.03203687,-0.018631373,0.025069041,-0.03322342,0.011518379,-0.036303405,-0.0055950917,-0.044407293,-0.014705656,0.027745092,0.0015660261,-0.018303176,-0.016056305,-0.021686109,-0.021686109,-0.006664881,-0.04385189,0.021017097,0.009744864,-0.0069552073,0.014592051,-0.013556974,0.009000114,-0.048219405,-0.027139194,0.02457675,0.026129363,-0.034864396,0.021345291,-0.03860077,-0.01415025,0.018719733,-0.026583787,-0.071495995,0.036833566,-0.04741154,-0.021320045,0.016548596,-0.03019393,0.02519527,-0.016599089,0.029941473,0.00048755878,-0.039509617,-0.004263378,0.011594116,0.027265422,0.02397085,0.0041560833,-0.063972756,-0.02058792,-0.008709787,0.021711355,0.0054783304,-0.008526756,-0.00613472,-0.021585125,0.007655777,0.01695253,-0.055793133,-0.010401254,0.045417126,-0.015298932,0.025371991,0.018505143,0.0074159424,-0.050491523,0.019780055,0.04332173,-0.050138082,0.048522353,0.0032409246,-0.053924948,0.04092338,-0.034031287,0.0059927125,-0.0052921427,-0.008993803,-0.00092225923,-0.0006800577,-0.043372218,0.033248667,-0.0013135686,0.04784072,-0.032062117,-0.05564166,0.035848983,0.0067406185,0.0032661704,-0.04092338,0.014945491,-0.009606012,0.07604023,0.030345405,0.025700185,-0.040948626,-0.021989059,0.015866961,-0.026634278,-0.035344068,-0.019817922,-0.016763186,0.031430975,-0.007251845,-0.044937454,-0.0072139762,0.002210582,-0.009719619,-0.013973529,0.0202471,-0.005008128,0.024526257,0.0010129862,0.045795813,-0.011657231,0.057812795,0.004569483,0.006450292,0.028603448,-0.021774469,0.008198561,-0.004891366,-0.0004015654,0.0021269554,-0.028426727,0.0198053,-0.026053626,0.04349845,-0.043195497,0.0068416013,-0.049456447,-0.03698504,-0.01840416,-0.006033737,0.0029395535,0.029083118,-0.035243083,-0.014478444,-0.000049949133,0.057459354,0.022506597,0.027770339,0.018568257,0.003720594,-0.049052514,0.02287266,0.019350877,0.044281065,-0.0121116545,-0.011234364,-0.034334235,0.02804804,-0.031001795,-0.038676508,0.00701201,0.04253911,-0.011417395,0.02418544,-0.06614389,-0.026432313,0.054783303,-0.05508625,0.028729677,-0.017116627,0.037035532,-0.006551275,0.068416014,0.01292583,0.014907622,0.03554603,-0.008249053,-0.04758826,-0.008974868,-0.01691466,-0.006892093,-0.01704089,0.0032077895,0.050289556,-0.028603448,-0.05877213,-0.049229234,0.006279883,0.041781735,0.004825096,-0.0058696396,-0.023087248,-0.025359368,0.0060779173,-0.017419575,0.03913093,-0.052359708,-0.005061775,0.035344068,-0.017167117,0.002896951,0.025927396,0.010861989,-0.0054625515,0.007699957,-0.0342585,0.03728799,0.021042341,0.014339592,0.026078872,-0.033980794,0.026129363,0.049027268,0.013683203,0.026179854,-0.01498336,-0.010855678,-0.0375152,-0.0031999003,0.024816584,0.034561448,-0.0306736,0.019464482,0.031632937,-0.012654438,-0.05008759,0.027644109,-0.044483032,0.040468957,0.008987491,0.031279497,0.024248553,0.020133495,-0.0007976083,0.0014042954,0.0014729324,-0.0411001,0.034763414,-0.0242738,0.031128025,0.018467275,0.0116130505,-0.0045884172,-0.017911868,0.050743982,-0.012376735,-0.040065024,0.021181194,0.028098533,-0.0035501851,-0.019817922,0.020537427,-0.015601881,0.021673486,-0.035344068,-0.009347243,0.022115286,-0.048345633,-0.03408178,-0.021812338,0.027063457,-0.0019344565,-0.021635618,-0.05157709,-0.03299621,-0.019578088,-0.028578201,0.013228779,0.002562445,-0.012786978,-0.018555636,-0.011518379,-0.06225605,0.013948283,-0.02251922,-0.022355122,0.026129363,-0.037489954,-0.010817809,0.009372489,0.0110828895,-0.0071761077,-0.025902152,-0.05170332,0.016687449,0.027240178,-0.017078757,0.038171593,-0.008362658,0.018454652,0.013973529,0.022506597,0.013695826,0.0055225105,0.012585012,-0.012326243,0.00081812043,-0.006507095,-0.003641701,0.0054751746,0.034738168,-0.011411084,-0.008350035,-0.02466511,-0.013733694,0.01200436,-0.0045189913,0.014364839,-0.030547371,0.038070608,-0.02033546,-0.00015048841,-0.021648241,0.007826186,0.016031059,-0.011915999,0.01055904,0.03175917,0.010843054,0.0076431544,0.009953141,0.02414757,0.01423861,-0.01134797,0.011379527,-0.018025475,-0.018543012,-0.03193589,0.0014500534,-0.028199516,-0.011120758,0.03168343,0.0052605853,0.039534863,-0.018429406,0.04039322,-0.01709138,-0.0043959185,0.011045021,-0.03675783,-0.006021114,0.05670198,0.008918066,-0.028982135,0.02060054,0.01030027,0.009397735,-0.011032398,-0.012578701,-0.029209346,0.0336526,-0.012938453,-0.02655854,-0.014970737,-0.025599202,0.02489232,-0.0138220545,0.0003883508,0.016068928,0.008577247,-0.03544505,-0.006406112,-0.003777397,0.019679071,0.018176949,-0.046982363,-0.00534579,0.03186015,0.0030941837,0.029158855,-0.022733808,-0.04402861,-0.015526143,0.0132918935,0.015538766,0.015362046,0.012016983,0.030042456,0.041504033,0.004149772,-0.016662203,-0.0046262858,0.037212253,0.042564355,0.026255593,-0.02108021,-0.03032016,-0.017116627,0.0075926627,0.0004197108,-0.014869753,-0.014289101,-0.031481463,0.032314576,0.040721413,-0.007965038,-0.0066585694,0.017545804,0.03554603,-0.0017908713,-0.045088932,-0.029032625,-0.040342726,0.020322839,-0.021875452,0.037742414,-0.042867303,-0.02900738,-0.01844203,0.009309375,-0.026003134,0.026886737,-0.0039383387,0.0009964186,0.016927283,-0.0066522583,0.017672034,-0.0021648242,0.0033008833,-0.03294572,0.03418276,0.051804304,0.006415579,-0.020890867,0.023314461,-0.017697278,0.016321385,0.007510614,0.022998888,0.008425773,0.018732356,0.008955934,-0.0017293347,-0.071495995,-0.016270893,-0.009214703,0.00836897,0.018921698,0.024702977,0.006847913,-0.027618863,-0.025384612,0.00081496476,-0.009088474,0.007497991,0.015210572,0.023011511,0.006519718,0.029158855,0.000304527,0.003483915,0.0088738855,0.023655279,-0.0022610736,-0.041403048,0.014819262,-0.000704909,0.03728799,0.01730597,0.038171593,0.012786978,-0.006459759,-0.01897219,0.030850321,0.0011676165,0.021824962,0.02248135,0.010931415,-0.04001453,-0.013796809,0.021282177,-0.007561106,0.023352329,0.010527482,0.014920245,-0.12542094,0.023162987,0.008716099,0.021925945,-0.0102055995,-0.009719619,-0.039055195,-0.009492407,0.010571662,0.025031172,-0.02655854,-0.009934207,-0.025182648,-0.026609033,0.021787092,-0.024677731,0.025839036,0.022405613,0.049961362,-0.0136705795,0.00088202377,0.0041876407,0.016132042,-0.04920399,0.0023131429,-0.03579849,0.015564012,0.01209272,-0.016965153,0.025409859,-0.046124008,0.008974868,-0.023516428,0.032314576,0.022847414,0.012117965,-0.00021853362,0.0049229236,-0.0134433685,-0.002063841,-0.019489728,-0.045442373,-0.00048006393,0.056550507,-0.0043107136,0.045442373,0.0013987729,-0.028199516,-0.0082238065,-0.09775159,-0.011000841,-0.029360821,0.009915273,0.011183873,-0.012218948,0.0039225603,0.05044103,0.000042232412,-0.009953141,0.03228933,0.010521171,0.012193703,0.03716176,-0.0077567603,-0.032769,0.02835099,0.0031525644,-0.025788546,0.002538777,0.011531002,-0.011240675,0.0055540674,-0.018214816,0.039459124,0.0071003702,0.006866847,-0.06680028,-0.03572275,0.018555636,-0.01661171,0.008356347,-0.020360706,0.011644607,-0.0043738284,0.020474313,0.019047927,-0.0067027495,0.03322342,0.020411199,0.038575523,-0.04627548,-0.054783303,-0.02787132,-0.021963812,0.0090253595,0.040216498,0.007882989,0.013986152,-0.027896566,-0.0044716555,0.0014216519,0.05069349,-0.00047296355,0.049532183,0.014225987,-0.015765978,0.012635504,-0.005718165,-0.0047777602,-0.006248326,0.03390506,-0.012130588,0.028502464,-0.04460926,0.04317025,0.029057872,0.026735261,0.024854451,-0.021395782,-0.014958113,0.03587423,0.019376121,-0.03496538,-0.011966491,-0.0017829819,-0.010552729,0.022733808,-0.010786252,-0.009637569,0.013380254,0.050668243,0.013367631,0.029133609,-0.019716939,0.03509161,0.031001795,0.012805913,0.0060526715,-0.052612167,-0.001162094,0.03627816,0.0262051,0.040039778,-0.0009853736,-0.040696166,-0.032264084,0.004203419,-0.011221741,-0.012130588,0.024917567,-0.030067703,0.016763186,0.010672646,0.009725929,-0.0027233865,0.032895226,-0.009277818,0.0004520569,0.035773244,0.012698618,0.019123664,0.0012196859,-0.016447613,0.003711127,0.0036290782,-0.011329035,-0.0009885293,0.0030358029,-0.017369084,-0.012591324,-0.013039436,0.0075043025,-0.0039856746,-0.04872432,0.007037256,-0.012023294,0.014554181,0.0035501851,-0.017911868,0.034510955,-0.018833337,0.023592165,0.0076684,-0.03829782,0.014794016,-0.010571662,-0.053066593,0.0100541245,-0.01914891,-0.00011370454,-0.027113948,0.0017687812,-0.015955321,0.011398462,-0.007605286,-0.023339707,0.025902152,0.03519259,0.0074790567,0.0559951,0.035596523,-0.0062672603,-0.015109588,0.024021342,0.024160193,0.010773629,-0.022632826,-0.029108362,-0.0061631217,0.021585125,-0.025422482,-0.034940135,0.008520445,-0.007889301,0.004635753,0.045189913,0.034056533,0.004045633,0.014402707,0.0028511933,0.009694372,-0.052713152,-0.0053615686,0.0021411562,0.0021174883,0.0023320771,0.0031383638,0.0064944723,0.026735261,0.025081664,-0.0017498469,0.025296252,-0.0027644108,-0.00035225728,-0.01498336,0.0088738855,0.000451268,-0.029108362,0.001975481,-0.004642064,0.0103570735,-0.043397464,-0.011423707,-0.018454652,0.005121734,-0.014074512,-0.017924491,0.057509843,-0.016838923,-0.02058792,0.013089927,0.018164326,-0.019603334,0.05402593,-0.01822744,-0.03251654,-0.034283746,0.0016614867,-0.0005940643,0.028780168,-0.017343838,-0.034334235,-0.031885397,-0.007699957,0.008318478,0.02283479,0.002445683,0.0029695327,0.011108135,0.026962474,-0.050289556,-0.0035785867,0.036833566,0.012231572,0.036126684,-0.02602838,-0.005617182,-0.015349423,-0.006137876,0.04763875,-0.01652335,0.025536088,0.024248553,-0.060539335,-0.0033703092,-0.016296139,-0.02567494,0.0013609043,-0.0118844425,-0.0017829819,0.00050925434,0.033071946,0.06250851,0.012086408,-0.005004972,0.0018697642,0.007024633,-0.031531956,0.022935774,0.010331828,0.014074512,-0.025839036,-0.05367249,0.03675783,-0.0070435675,-0.02028497,-0.033071946,0.024198063,-0.033198178,0.00084415515,-0.010666334,0.0010453323,-0.0016457081,0.018341046,-0.0025466662,0.031355236,-0.012364112,0.01121543,0.05114791,-0.05437937,-0.035041116,-0.015614504,-0.0011321147,-0.0075484826,0.0075295484,0.007927169,-0.030976549,0.013153042,0.044937454,0.007933481,0.009006426,0.004522147,0.010571662,0.008021841,0.023238724,-0.016876793,0.0553892,0.01673794,0.011101823,0.006481849,-0.032264084,-0.00131988,0.024349537,0.0008678231,0.029310329,-0.008356347,-0.0018129613,-0.030724091,-0.0031178514,-0.010874612,-0.025359368,-0.00512489,0.039004702,-0.040216498,0.025447728,-0.0113101015,-0.012887961,-0.011859196,0.021042341,-0.00055659015,-0.018341046,-0.0060400483,-0.0053047654,0.015526143,-0.015450406,-0.023238724,-0.011284855,0.0070688133,-0.02243086,-0.034157515,0.0068416013,0.015955321,0.0077315145,-0.0276946,-0.0070877476,0.025170024,-0.04281681,-0.059226558,0.018151702,0.035217836,-0.0038310443,-0.0009916851,-0.016535973,0.007554794,0.013266648,-0.0075295484,0.040771905,-0.00012474957,0.00016606977,-0.032491297,-0.020663656,0.02812378,0.03193589,0.017293347,-0.018265309,-0.020752016,0.013405499,0.0138220545,0.025687562,0.019994643,0.0015975833,-0.0018429406,0.029209346,0.020802507,-0.05670198,-0.023188232,-0.0007120094,-0.011101823,0.0067027495,-0.022493973,0.0026018913,-0.007636843,-0.013948283,-0.005143824,0.032920472,0.0019770586,-0.042488616,0.03158245,-0.026482804,0.051551845,-0.015109588,0.006213613,-0.02900738,0.0031068064,0.01673794,-0.01327927,-0.013657957,0.0050428407,-0.005494109,0.030976549,0.004162395,0.0023762572,-0.052359708,-0.036429632,-0.038550276,-0.021875452,0.026003134,0.0012354645,-0.014263855,-0.01319091,0.01695253,0.006182056,-0.015841715,0.03589947,-0.016321385,0.010369697,0.0057591894,0.019855792,0.059781965,0.036000457,-0.048522353,0.0018666085,0.01231362,0.046452202,0.016182533,-0.0032914162,0.048345633,-0.04925448,-0.005538289,-0.03049688,-0.010988218,-0.023503805,0.01121543,-0.02615461,-0.02787132,-0.016838923,-0.016902037,-0.0067974213,-0.0027249644,0.0023431221,0.034460466,0.013923038,-0.009233638,0.00093882676,0.0012102186,0.045644335,0.015021228,0.036101438,-0.014465821,-0.009031671,0.0081480695,0.0031793881,0.027290668,0.014011398,-0.016119419,-0.020890867,-0.021307422,0.031961136,-0.017406953,0.035470296,-0.020057758,-0.01139215,0.012805913,-0.0024977524,0.014945491,0.018568257,-0.005355257,-0.036025703,-0.00841315,0.026003134,-0.0024551502,-0.013329762,-0.034157515,-0.028250007,0.031178515,-0.011934934,0.045896795,0.0077125803,0.0018255841,-0.03233982,-0.021193817,0.010476991,-0.027442142,-0.0049797264,-0.031355236,-0.009845847,-0.07119305,-0.018101212,-0.005143824,-0.0008899131,0.030067703,0.032920472,0.015942698,0.017444821,-0.051804304,0.052915115,-0.04135256,0.013531729,0.033273913,-0.009075851,-0.020310216,-0.037086025,-0.005355257,-0.0262051,0.0069110272,0.013329762,-0.01402402,0.00035620193,0.009643881,0.05195578,-0.0055761575,-0.018568257,0.005131201,-0.013468614,-0.0212948,0.018770223,0.0033860877,0.015084342,0.020928737,0.00043588385,0.008167004,0.024033966,-0.008722411,0.04486172,-0.0043580495,-0.018429406,-0.031102778,-0.015223194,-0.0076431544,0.01735646,-0.00018096084,-0.014390084,0.0039162487,-0.015904829,-0.01652335,-0.00059840345,0.009075851,-0.03733848,0.027416898,0.010918792,-0.025233138,-0.023188232,0.025031172,0.031733923,0.02042382,0.0097511755,-0.012275752,0.007422254,0.0077188914,0.004048789,-0.0047304244,0.019477105,-0.0074601225,0.03607619,-0.0014476867,0.0022610736,-0.0068352898,0.006043204,-0.019754808,-0.01055904,-0.00615681,-0.021067588,0.018113835,0.021938566,-0.0081480695,0.022493973,0.019047927,0.020322839,-0.0033040391,-0.02602838,-0.026735261,0.0034239565,-0.009126343,0.007832497,-0.030269668,-0.038979456,0.02423593,-0.023024134,-0.039812565,0.032087363,0.0026918293,0.0024740847,0.00832479,0.017066134,0.009164211,0.007586351,-0.031456217,0.0018681864,-0.015715487,-0.0074475,-0.01498336,-0.007283402,0.03014344,-0.019918906,0.0033766206,-0.041655507,-0.020221855,0.029739507,0.014099758,0.03269326,0.020752016,0.008671919,0.017709902,-0.015980568,-0.017735148,-0.015500898,0.008173315,0.0073906966,0.025788546,-0.009227326,0.038752243,-0.012951076,-0.014743525,-0.027669355,0.004061412,0.014528936,-0.031557202,0.029411312,0.027391652,-0.03448571,0.00093172636,0.0016961996,-0.017596295,-0.01730597,0.022935774,0.017810885,0.019956775,-0.035949964,0.0066711926,-0.06271047,-0.01524844,0.012521897,0.017583674,0.031986378,0.0058822623,0.0046894,-0.023693148,-0.0039635845,-0.0153368,-0.0039982973,-0.026129363,0.032365065,-0.008993803,0.0006776909,-0.013556974,-0.031632937,-0.028931642,-0.046906624,0.009492407,-0.016939906,-0.017343838,-0.009107408,-0.05367249,-0.022733808,0.0010524327,0.0038594457,-0.0105085485,-0.0020243945,0.008848639,0.018290555,-0.0006078706,-0.0068163555,-0.008564625,-0.03804536,0.01134797,-0.017558428,0.0345362,0.03693455,0.019691695,0.01849252,0.013859923,-0.015311554,0.010275025,0.027896566,0.010502237,0.008577247,0.0017687812,-0.005771812,0.016296139,0.050062343,-0.0076684,0.037363727,0.019035304,-0.0029805778,-0.039585356,0.042135175,0.023175608,-0.029512295,0.023377575,0.0037016599,-0.022620203,0.004197108,-0.03158245,0.01152469,-0.037717167,0.010275025,-0.014629919,-0.048042685,0.028376237,-0.012951076,0.0035722752,-0.017419575,-0.010085681,-0.0013474926,0.0034144893,0.013872546,0.015702864,-0.008362658,0.035293575,0.032592278,0.02948705,0.00462313,0.012117965,-0.054480355,0.019376121,-0.002030706,0.042084683,-0.005030218,-0.041706,0.009404046,-0.011329035,-0.053874455,0.011411084,-0.011228053,0.0015100121,0.015879584,-0.03150671,0.012622881,-0.0051785368,0.03203687,0.015564012,0.023958229,-0.0136705795,-0.0013159353,0.032062117,-0.007586351,-0.027972303,0.019969398,0.050769225,0.015235817,-0.002333655,-0.010464368,-0.03579849,0.00527952,-0.023592165,0.019565465,0.012288375,-0.0051027997,0.017836131,0.04324599,0.0016109952,-0.031027041,0.03049688,-0.00696783,0.0666993,0.005263741,0.008419462,-0.007005699,0.032895226,0.01647286,-0.010439122,0.0000691793,0.02019661,0.035419803,0.012162145,0.00079248025,0.023869868,0.027366405,-0.015778601,0.013645334,0.04710859,-0.018378915,0.032062117,-0.0022153156,0.033576865,-0.012212637,-0.04390238,0.014036643,-0.001465832,-0.001953391,0.030042456,-0.019969398,-0.017533181,-0.005165914,0.027492635,-0.024336914,0.012496652,-0.0061220974,0.018517766,0.008141758,0.015841715,0.012799601,0.025738053,0.0010066747,-0.005790747,0.019641202,0.01310255,0.061953098,-0.010186665,-0.0062325476,0.000586175,-0.010110928,-0.005639272,0.0020149273,-0.030446388,0.024299046,-0.0039004702]},{"id":"cheapest-flight-path","name":"Cheapest Flight Path","description":"There are `n` airports, labeled from `0` to `n - 1`, which are connected by some flights. You are given an array `flights` where `flights[i] = [from_i, to_i, price_i]` represents a one-way flight from airport `from_i` to airport `to_i` with cost `price_i`. You may assume there are no duplicate flights and no flights from an airport to itself.\n\nYou are also given three integers `src`, `dst`, and `k` where:\n\n* `src` is the starting airport\n* `dst` is the destination airport\n* `src != dst`\n* `k` is the maximum number of stops you can make (not including `src` and `dst`)\n\nReturn **the cheapest price** from `src` to `dst` with at most `k` stops, or return `-1` if it is impossible.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/e272e71f-c38b-4db8-3c4e-1158418d2a00/public)\n\n```java\nInput: n = 4, flights = [[0,1,200],[1,2,100],[1,3,300],[2,3,100]], src = 0, dst = 3, k = 1\n\nOutput: 500\n```\n\nExplanation:\nThe optimal path with at most 1 stop from airport 0 to 3 is shown in red, with total cost `200 + 300 = 500`.\nNote that the path `[0 -> 1 -> 2 -> 3]` costs only 400, and thus is cheaper, but it requires 2 stops, which is more than k.\n\n**Example 2:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/93e910ee-378d-4ac8-93e0-471df7ccf600/public)\n\n```java\nInput: n = 3, flights = [[1,0,100],[1,2,200],[0,2,100]], src = 1, dst = 2, k = 1\n\nOutput: 200\n```\n\nExplanation:\nThe optimal path with at most 1 stop from airport 1 to 2 is shown in red and has cost `200`.\n\n**Constraints:**\n* `1 <= n <= 100`\n* `fromi != toi`\n* `1 <= pricei <= 1000`\n* `0 <= src, dst, k < n`\n","difficulty":"Medium","concepts":["Adjacency List"],"solutions":{"python":"class Solution:\n    def findCheapestPrice(self, n: int, flights: List[List[int]], src: int, dst: int, k: int) -> int:\n        prices = [float(\"inf\")] * n\n        prices[src] = 0\n\n        for i in range(k + 1):\n            tmpPrices = prices.copy()\n\n            for s, d, p in flights:  # s=source, d=dest, p=price\n                if prices[s] == float(\"inf\"):\n                    continue\n                if prices[s] + p < tmpPrices[d]:\n                    tmpPrices[d] = prices[s] + p\n            prices = tmpPrices\n        return -1 if prices[dst] == float(\"inf\") else prices[dst]\n","javascript":"class Solution {\n    /**\n     * @param {number} n\n     * @param {number[][]} flights\n     * @param {number} src\n     * @param {number} dst\n     * @param {number} k\n     * @return {number}\n     */\n    findCheapestPrice(n, flights, src, dst, k) {\n        let prices = new Array(n).fill(Number.MAX_SAFE_INTEGER);\n        prices[src] = 0;\n\n        for (let i = 0; i <= k; i++) {\n            const tmpPrices = [...prices];\n\n            for (const flight of flights) {\n                const s = flight[0];\n                const d = flight[1];\n                const p = flight[2];\n\n                if (prices[s] === Number.MAX_SAFE_INTEGER) continue;\n\n                if (prices[s] + p < tmpPrices[d]) tmpPrices[d] = prices[s] + p;\n            }\n\n            prices = tmpPrices;\n        }\n\n        return prices[dst] === Number.MAX_SAFE_INTEGER ? -1 : prices[dst];\n    }\n}\n","cpp":"class Solution {\npublic:\n    int findCheapestPrice(int n, vector<vector<int>>& flights, int src, int dst, int k) {\n        vector<int> prices(n, INT_MAX);\n        prices[src] = 0;\n\n        for (int i = 0; i <= k; i++) {\n            vector<int> tmpPrices = prices;\n\n            for (const auto& flight : flights) {\n                int s = flight[0];\n                int d = flight[1];\n                int p = flight[2];\n\n                if (prices[s] == INT_MAX)\n                    continue;\n\n                if (prices[s] + p < tmpPrices[d])\n                    tmpPrices[d] = prices[s] + p;\n            }\n\n            prices = tmpPrices;\n        }\n\n        return prices[dst] == INT_MAX ? -1 : prices[dst];\n    }\n};\n","java":"class Solution {\n    public int findCheapestPrice(int n, int[][] flights, int src, int dst, int k) {\n        int[] prices = new int[n];\n        Arrays.fill(prices, Integer.MAX_VALUE);\n        prices[src] = 0;\n\n        for (int i = 0; i <= k; i++) {\n            int[] tmpPrices = Arrays.copyOf(prices, n);\n\n            for (int[] flight : flights) {\n                int s = flight[0];\n                int d = flight[1];\n                int p = flight[2];\n\n                if (prices[s] == Integer.MAX_VALUE) {\n                    continue;\n                }\n\n                if (prices[s] + p < tmpPrices[d]) {\n                    tmpPrices[d] = prices[s] + p;\n                }\n            }\n\n            prices = tmpPrices;\n        }\n\n        return prices[dst] == Integer.MAX_VALUE ? -1 : prices[dst];\n    }\n}\n","csharp":"public class Solution {\n    public int FindCheapestPrice(int n, int[][] flights, int src, int dst, int k) {\n        int[] prices = new int[n];\n        Array.Fill(prices, int.MaxValue);\n        prices[src] = 0;\n\n        for (int i = 0; i <= k; i++) {\n            int[] tmpPrices = (int[])prices.Clone();\n\n            foreach (var flight in flights) {\n                int s = flight[0];\n                int d = flight[1];\n                int p = flight[2];\n\n                if (prices[s] == int.MaxValue)\n                    continue;\n\n                if (prices[s] + p < tmpPrices[d])\n                    tmpPrices[d] = prices[s] + p;\n            }\n\n            prices = tmpPrices;\n        }\n\n        return prices[dst] == int.MaxValue ? -1 : prices[dst];\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def findCheapestPrice(self, n: int, flights: List[List[int]], src: int, dst: int, k: int) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number} n\n     * @param {number[][]} flights\n     * @param {number} src\n     * @param {number} dst\n     * @param {number} k\n     * @return {number}\n     */\n    findCheapestPrice(n, flights, src, dst, k) {}\n}\n","cpp":"class Solution {\npublic:\n    int findCheapestPrice(int n, vector<vector<int>>& flights, int src, int dst, int k) {\n        \n    }\n};\n","java":"class Solution {\n    public int findCheapestPrice(int n, int[][] flights, int src, int dst, int k) {\n\n    }\n}\n","csharp":"public class Solution {\n    public int FindCheapestPrice(int n, int[][] flights, int src, int dst, int k) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/5eIK3zUdYmE","embedding":[-0.032970365,-0.052505996,0.02251168,-0.071127556,0.013562278,0.00634536,0.003627059,0.045405995,-0.027953597,0.022192817,-0.016729644,0.00325771,-0.056714978,-0.014667667,0.013732337,0.0102620525,-0.007636753,-0.03403324,-0.058585636,0.053356297,0.016325751,0.017824404,-0.0042196116,-0.001167169,0.015390421,0.009326723,0.019748207,-0.015390421,-0.0033825978,-0.037391923,0.054631744,-0.007918415,0.017420512,0.0004769649,-0.011404643,-0.032779045,-0.05021019,0.048339527,-0.004283384,-0.03794462,0.01185105,-0.030568268,-0.024042219,-0.024148507,-0.015773056,-0.011479043,-0.0023622385,-0.0038024331,0.022958087,0.016729644,-0.03698803,-0.019673806,-0.040580545,-0.027485933,-0.03046198,0.015889972,-0.0039964076,0.011755391,0.049912583,-0.011702247,0.046596415,-0.01523099,-0.010182337,0.051017974,-0.0072169174,0.030717071,0.04417306,0.005755465,-0.020768566,-0.017367369,-0.042855095,0.028718866,0.023298208,-0.07503893,-0.011415271,-0.00026306143,0.013615421,0.023595812,0.06551558,-0.033289228,-0.027485933,-0.014710182,-0.0008223991,0.04604372,0.0014215945,-0.051188033,-0.027953597,0.0065260488,-0.028591322,-0.051017974,-0.052761085,0.000492908,0.0034357416,0.0021961643,0.04170719,0.04274881,0.043620367,-0.02268174,0.003496857,0.0116809895,-0.017186679,-0.0139342835,0.04867965,0.04011288,0.010793489,-0.00719566,0.011744763,0.05786288,-0.020098954,0.04791438,0.0052213706,0.061519172,-0.010681888,0.01971632,-0.02682695,0.02293683,-0.06759881,-0.01303084,0.018685332,-0.017303595,-0.0004626825,-0.04155839,0.024956292,0.022044016,-0.043195218,0.0029919916,-0.029569166,-0.035500005,0.057267673,-0.010883834,0.041345816,-0.013487876,0.02969671,0.02869761,-0.038135935,-0.01253129,-0.021852698,-0.0032523957,0.033225454,0.040325455,-0.012669463,0.04291887,-0.0042647836,-0.008662427,-0.026104195,0.029824257,0.015007786,0.038454797,-0.029335335,0.050932944,0.022320364,-0.02952665,0.00022121074,0.018685332,-0.01036834,-0.010267367,0.017250452,-0.019333685,0.04196228,0.017356738,-0.023213178,0.008609283,-0.01430629,-0.012903295,-0.029760484,-0.0072116028,-0.031163478,-0.034585934,-0.049700007,-0.018908536,-0.006201872,-0.02310689,0.02742216,0.004583646,0.031354796,-0.03182246,0.01134087,-0.066578455,0.0049822237,0.046511386,-0.06572816,0.009852846,-0.017792517,-0.062326957,-0.0024592257,0.022490423,-0.0073922914,-0.04053803,-0.011638475,-0.007014971,0.01159596,-0.021427548,-0.038901202,-0.0034516847,-0.026359286,0.03724312,0.0034224556,-0.0018812877,0.055226956,-0.0011459115,-0.03968773,-0.025487728,0.023489526,0.00016781791,0.0050486536,-0.046766475,-0.042961385,-0.028761381,0.046894018,0.0063613034,0.02014147,0.03488354,0.015273506,-0.03841228,-0.0071903453,-0.006371932,0.015517967,0.0044189002,-0.015677398,0.049402405,-0.0067386236,-0.029930543,0.0036722312,0.01219117,0.037391923,0.0103098815,0.0052346564,-0.00019563532,0.042642523,-0.0015238962,-0.016463924,0.008455166,0.000051898165,0.015624254,0.0048759365,0.0028485034,-0.04002785,-0.079120375,-0.0073816627,0.01303084,-0.037200604,-0.04544851,0.024105992,0.0096509,0.00334274,-0.030908389,-0.06185929,0.0016102548,-0.026890723,0.015868716,0.027613478,0.054376654,0.020460332,-0.07588924,0.016378894,0.0060052406,0.0013950227,0.02098114,0.06993714,-0.01684656,-0.00931078,0.033204198,-0.032396413,-0.00939581,-0.020077698,-0.04604372,-0.023213178,0.044300605,-0.006212501,-0.006132785,0.004243526,-0.025020063,-0.01726108,-0.0061381,-0.029888028,-0.037009288,0.017920062,-0.02242665,-0.0043046414,-0.049487434,-0.054376654,0.021183087,0.029207788,-0.038539827,0.020258386,-0.023999704,0.06827905,0.008821858,0.0073922914,-0.01938683,-0.024148507,-0.033310484,-0.004044237,0.040984437,0.044555694,-0.031078449,-0.03877366,-0.02861258,0.034585934,-0.026890723,0.010841319,-0.058288034,0.026125453,0.02708204,-0.036541622,-0.015252247,0.028973958,0.034500904,-0.0026877436,0.03815719,0.0083488785,0.04706408,-0.0025708275,0.008141618,-0.007126573,-0.023043117,0.023765871,0.0011479043,-0.010363026,-0.0070256,0.04442815,-0.05288863,0.09200241,0.02461617,0.011617217,-0.0065207346,0.02952665,0.0027501876,-0.011521558,0.00064104615,-0.06976708,0.019429345,-0.0071106297,-0.038050905,-0.053611387,0.021895213,0.044045515,-0.026550602,-0.0045650457,-0.0118297925,0.04349282,0.0072222315,0.014646409,0.008221334,0.0066589084,0.025487728,0.008720885,-0.01998204,0.0308021,0.040835634,-0.041197013,0.04155839,0.0072860043,0.05161318,-0.007987501,-0.0072860043,-0.0015637539,0.05297366,-0.04257875,-0.009927247,-0.04765929,-0.029888028,-0.021385033,-0.023638327,0.011670361,-0.0062922165,0.020492218,-0.0175268,-0.008295734,0.01734611,0.022532938,0.018749105,-0.0144232055,-0.016899703,-0.009539298,-0.04053803,0.00083369215,0.015943116,0.0024565684,0.042196114,-0.028570065,-0.015241619,-0.038263477,-0.020385932,0.034097012,0.0122762,-0.008651798,-0.031078449,-0.04417306,-0.022107787,0.05373893,-0.006510106,0.07248803,0.0081044175,-0.015868716,0.014720811,0.07869522,0.066706,-0.037434436,0.064920366,0.016878447,-0.027804796,-0.0057501504,0.006743938,-0.048552103,0.008710256,-0.018866021,0.0562048,-0.018812878,-0.0465539,0.013976798,-0.014858984,0.037221864,0.00002916677,-0.03088713,0.017739374,0.008859058,0.038752403,-0.024743717,0.01897231,0.0027475304,-0.010400226,0.029632939,0.024446111,-0.034500904,0.038901202,0.014242517,-0.029016472,0.032290123,-0.0308021,-0.0048892223,-0.005824552,-0.00046068963,0.010618116,-0.02225659,0.05662995,-0.00596804,-0.013519763,0.029250303,-0.018430242,-0.025423957,-0.053526357,0.024361081,0.024637429,-0.0183771,-0.030695813,0.0011332899,0.031631142,0.014104344,0.0053622015,0.021895213,-0.000027485268,0.0027236156,0.0070787435,-0.03326797,-0.03358683,0.047616772,0.031609885,0.05594971,0.001713885,0.000992459,0.050890427,0.0018799591,-0.019535631,0.024679944,-0.03148234,0.00723286,0.0023569241,0.010936977,0.0068449113,0.00029478158,-0.0033480544,-0.041770965,-0.012116768,-0.018908536,0.02767725,-0.0052692,0.03377815,-0.027634734,0.029590424,-0.013328445,0.010681888,0.005558833,-0.0051230546,-0.020927997,-0.016028145,0.039900307,0.00342777,-0.023361979,0.0041026953,0.010410855,0.011245212,-0.0063187885,-0.0074082348,-0.0636024,-0.02157635,0.0058723814,0.056417376,0.0034888852,-0.015114075,-0.015592367,-0.01548608,-0.0092788935,-0.024637429,0.028293718,0.00668548,0.018600302,-0.06997965,-0.034054495,0.021385033,-0.01642141,0.011734134,0.003914035,0.031248508,0.01997141,0.014114972,-0.0016487839,0.011298355,-0.043917973,0.014497607,0.0040601804,-0.019280542,-0.026295513,0.028655095,-0.0052505997,-0.008997232,-0.021714525,-0.039900307,0.013668565,-0.014742068,-0.00062111724,0.01446572,-0.008853744,0.07571917,-0.026933238,0.012393116,0.04121827,-0.027443418,-0.0020845626,-0.0064250757,0.025679046,0.024254795,-0.042940125,-0.0096509,0.0058086086,-0.04223863,0.036158986,0.021958986,-0.023765871,-0.0166765,0.036329046,-0.02506258,-0.034139525,-0.0421536,-0.0076314383,-0.024658687,0.008736827,0.015114075,0.03469222,0.012393116,-0.0002618989,-0.019833237,0.000086856766,-0.021087429,0.016719015,0.0061381,0.0048440504,0.0084020225,-0.026210483,-0.04196228,0.005829866,-0.017271709,0.008938774,-0.022575453,0.0386036,0.01751617,0.014614523,-0.027039526,0.008960031,0.0027315873,-0.0038635486,0.010400226,-0.0027794165,-0.014965272,0.014773955,-0.039538927,-0.0024791546,-0.016804045,-0.030525753,-0.030823357,-0.0046766475,0.006212501,0.03849731,-0.01625135,0.0054366025,-0.00022885014,0.0037253748,0.03443713,0.03539372,0.018547159,-0.009247008,0.027549705,-0.021810183,-0.010926349,-0.01599626,-0.0045012734,0.02969671,0.033905692,0.0116809895,0.023468267,-0.0053940876,-0.00757298,-0.008880315,-0.002755502,0.02319192,0.012169912,-0.029569166,-0.00071345444,0.039560188,-0.01193608,-0.023085633,-0.033841923,0.047616772,0.02657186,0.010559658,-0.012658834,-0.04013414,0.019227399,0.007509208,-0.024637429,-0.016814673,0.024084734,-0.025700303,-0.014168116,-0.028718866,-0.026359286,0.030568268,-0.02251168,0.0001418273,-0.0013219501,0.013551649,0.014912128,0.0035606292,-0.012350601,0.0021403634,0.002997306,-0.007987501,0.012244313,0.0041372385,-0.029824257,0.013668565,0.037519466,0.013020212,-0.010676574,0.030079346,0.055652104,-0.013657936,-0.04206857,-0.00031819803,-0.0023409808,0.0051071118,0.019673806,-0.013232786,0.02606168,-0.020088326,-0.061561685,0.019748207,0.03671168,0.041282043,-0.021788925,0.0066961087,0.015783684,0.020779194,-0.05161318,-0.044003002,-0.009401124,-0.009502097,0.0013990084,-0.04079312,0.023850901,-0.029930543,0.012052996,-0.009587128,0.038220964,0.005580091,-0.011319612,-0.034075756,-0.008130989,-0.019503746,0.02378713,0.009347981,0.006573878,-0.005686378,0.039538927,0.02461617,-0.014370062,0.011542817,0.061179053,-0.0041186386,-0.05501438,0.0044481293,-0.0016554269,0.016952846,-0.012467517,-0.01988638,-0.027188327,0.005930839,0.002226722,0.020555992,0.00017022598,0.02878264,0.0067333095,0.033204198,-0.0051602554,-0.02818743,0.039241325,-0.021682639,0.028314974,0.01507156,-0.040261682,-0.021374404,0.044470664,0.012658834,-0.011043265,-0.009757187,-0.00922575,-0.0025150266,-0.0034091696,0.0031115648,-0.02614671,0.0201521,-0.039623957,0.0065260488,0.029080244,0.022830542,-0.008502996,-0.024722459,0.007785555,0.0019583462,-0.014986529,-0.026189225,0.0003813062,0.04104821,-0.0024632115,-0.012063624,0.0022174218,-0.019397458,-0.010586229,-0.03732815,-0.020364674,-0.030419465,0.00404158,0.028123656,-0.030653298,0.02089611,0.024509884,-0.0048201354,-0.0025801277,-0.0055747763,-0.0040176655,-0.019099854,0.016198207,-0.002314409,0.008189447,0.033182938,0.009571184,-0.027655993,-0.039751504,0.0015252248,0.04013414,-0.03656288,0.0073763486,0.00010005966,0.008476423,-0.014518864,-0.03926258,-0.021268116,0.0048812507,0.006653594,0.024807489,-0.013859882,0.0077270973,0.0032683387,-0.011213325,0.004081438,-0.017452398,0.009294837,-0.027996112,0.019482488,-0.008428594,-0.004658047,-0.005216056,-0.018802248,0.0036961457,-0.01507156,-0.01633638,-0.025466472,-0.028144915,-0.009996334,-0.029399106,0.02682695,0.046894018,0.019333685,-0.003770547,0.0058032945,0.02827246,0.023170663,0.0031779946,0.0037253748,0.0043232418,-0.008784657,0.046171267,0.01794132,0.02648683,0.046256296,0.009172606,-0.028336233,-0.014773955,0.00059985975,0.005136341,0.0023741957,-0.011319612,0.010421484,0.0017098992,0.013190271,0.0096243275,0.029356591,0.009417067,-0.04587366,0.011415271,0.009257636,-0.010240795,0.022532938,0.02886767,0.007200974,0.034330845,0.028655095,-0.007812127,0.020768566,0.01921677,0.017452398,0.01955689,-0.019854493,0.016814673,-0.033671863,0.043471564,-0.023319464,0.044215575,0.006143414,-0.013551649,-0.0037785186,0.029930543,-0.008226648,-0.019078596,0.009353295,-0.03766827,-0.008343564,0.05765031,0.008667741,-0.0051629124,0.029314077,-0.026444316,-0.008306364,-0.04476827,-0.025615273,0.008487052,0.00421164,0.00009208811,-0.0029919916,0.006547306,-0.0040176655,-0.020247757,-0.0010363025,-0.006616393,0.015262877,-0.013668565,0.017144164,-0.046086233,-0.0002811635,-0.018217668,0.015411679,0.034819767,0.027719764,0.03333174,0.014678296,-0.0315036,-0.0033533687,0.009347981,-0.00028913506,-0.032013778,0.025997909,-0.029165274,0.04179222,-0.023893418,0.01988638,-0.011202697,-0.005038025,0.008455166,0.019365571,0.048126955,0.016655242,0.018387727,0.02506258,0.0097199865,-0.015294763,0.0017311567,-0.012021109,0.00065599283,0.0008223991,0.0060211834,0.053611387,-0.022575453,-0.011457786,-0.024148507,0.009220435,0.005479118,0.0007659339,0.009156663,-0.008853744,0.023978448,0.013998056,0.0022147645,-0.00024363074,-0.061349113,0.027889825,-0.024935033,0.026231742,-0.0019729605,-0.013987428,0.008465795,0.02682695,0.048722163,-0.026210483,0.016952846,-0.030993419,0.028059885,0.021682639,0.015092817,0.006579193,0.002654529,0.009305466,0.009002547,0.0019118454,-0.015539224,0.003371969,0.007200974,0.02251168,-0.023935933,0.019227399,0.04893474,0.006653594,-0.026167968,-0.0057182643,-0.034415875,-0.007254118,-0.015209733,-0.008699627,0.0024552399,-0.0016142406,0.02327695,0.03190749,0.015039673,0.04291887,-0.04070809,0.0237021,0.030929646,0.033097908,-0.016070662,0.020853596,-0.05059282,0.00065134274,0.024191022,-0.0132009005,0.015390421,-0.00031055862,0.005580091,0.018143266,-0.0056013484,0.011468415,-0.034415875,-0.030334435,0.0044082715,-0.010177023,0.0042036683,0.010612801,0.0579054,-0.029101502,0.009076947,0.00474042,0.010836004,0.05645989,0.0140830865,0.03122725,0.0030504495,-0.036903,0.009805016,0.023064375,0.011574702,0.0073922914,0.012297457,0.026465572,-0.03494731,-0.0077270973,-0.00888563,-0.0077961837,-0.009273579,0.0012229698,-0.009980391,-0.007822756,-0.0129564395,-0.026805693,0.011000751,0.0065632495,0.010304567,0.0048041926,-0.03233264,0.0042488403,-0.011351499,-0.010049477,-0.0026306142,0.01430629,-0.002712987,-0.0063878754,0.029505394,-0.025083836,0.015464823,0.0044082715,0.02529641,-0.015645511,0.019673806,0.0017710145,-0.008178819,-0.0057023214,-0.02869761,0.006313474,0.01726108,0.009852846,-0.011946709,-0.0114365285,0.004724477,0.0052479426,0.025402699,0.0031886233,-0.008003444,0.023808386,-0.014550751,-0.0059520965,0.009045062,0.040644318,-0.013742967,-0.00359783,0.01015045,-0.000643039,0.010044163,0.008476423,-0.014657038,-0.021788925,0.010049477,-0.048254497,-0.019726949,0.013211529,-0.013551649,-0.0009280222,-0.0065207346,0.010187651,0.00685554,0.007668639,-0.0070043425,-0.009874104,-0.015964374,-0.035202403,0.012988325,0.0064782198,0.033565573,-0.00033198218,-0.029058987,-0.022235332,0.03046198,0.008869687,0.013742967,0.034904797,0.025190124,-0.012722607,0.008572082,0.00039326353,0.030525753,-0.020120213,-0.007014971,-0.022150302,0.008497681,0.013881139,0.00020493548,-0.0028511607,0.039177552,-0.0111920675,-0.008752771,0.030547012,0.0457036,-0.009438325,0.011011379,0.022724256,0.029144017,0.021268116,-0.043917973,-0.004937052,-0.02529641,-0.020662278,0.03014312,-0.0148164695,-0.03267276,0.015730541,-0.035287432,0.054716773,0.0035712582,-0.0054631745,-0.012828894,0.010134508,0.014710182,0.027400903,0.008991918,0.0036111157,0.013594164,-0.005242628,0.01820704,-0.016368266,0.022532938,-0.015613625,0.047361683,0.010293939,-0.0008981289,0.0012030409,-0.022192817,-0.046851505,-0.02082171,0.00042382118,0.003967179,-0.027230842,-0.03122725,-0.0023396523,0.018090123,-0.022788027,-0.04204731,-0.00825322,0.00079250574,0.058415577,0.038284738,0.050635338,0.048169468,0.042855095,-0.008906888,0.008072531,0.022065273,0.04893474,-0.006568564,0.039007492,0.023255693,-0.010618116,-0.0005281157,-0.008556139,0.011787278,0.0029335334,-0.005580091,0.04527845,0.044810787,-0.0009054362,-0.018387727,-0.010129193,0.012573805,-0.00167137,0.018642817,0.009953819,0.007503893,0.013211529,-0.0370518,0.03622276,0.0036323734,-0.0075570373,-0.0018201724,0.014603894,0.01507156,-0.008476423,0.011574702,-0.027570963,-0.01548608,0.003741318,-0.006850226,-0.00087155704,-0.025615273,0.05169821,0.00080645597,0.011457786,0.009757187,-0.009007861,-0.0060211834,0.0043471563,-0.016219463,-0.0042382115,0.008274477,0.00026156675,-0.014455092,-0.01548608,-0.04342905,-0.0049157944,0.039900307,-0.053696416,0.024764974,0.009640271,-0.013721709,-0.038879946,-0.01447635,0.022532938,-0.0038104048,-0.0011239897,-0.033310484,0.011096409,-0.011362128,-0.0026585145,-0.01912111,-0.03199252,-0.0055960338,0.019461231,0.048467074,0.016240722,-0.03133354,0.013976798,-0.024871262,0.024339825,-0.017473655,0.049359888,-0.010665945,-0.013243415,-0.040729348,-0.06857666,0.04884971,0.013870511,-0.013721709,0.0016594126,0.0053329724,0.016559584,-0.035096113,-0.028655095,0.033905692,-0.006169986,-0.008035331,0.013498506,-0.003757261,-0.0036190874,0.06219941,0.005479118,-0.005681064,0.005643863,-0.022129046,0.02784731,-0.022575453,0.04028294,-0.004801535,-0.017292967,-0.010788175,0.0167509,-0.020715423,-0.012329344,-0.053526357,0.015188475,-0.024743717,-0.0033294542,0.01269072,0.003356026,0.009863474,-0.03832725,-0.017484285,-0.0073816627,0.0028006742,0.0068608546,0.011659732,0.045491025,0.020800453,-0.0167509,0.018175153,-0.0030026203,0.010782861,0.04791438,0.0607539,0.039708987,-0.022405393,0.019259285,0.023914674,0.023893418,-0.04170719,0.016389523,-0.022490423,-0.028378747,0.006813025,-0.004865308,0.018759733,0.0034729422,0.043832943,-0.0154541945,0.022362879,0.0062497016,0.0048467075,-0.011032636,-0.013169014,0.0038343195,-0.021810183,-0.046001203,0.0037918044,0.018132638,0.013169014,0.0090875765,0.021098057,-0.03029192,-0.00047065408,-0.004182411,-0.004628818,0.00918855,-0.0030451352,0.0030504495,-0.021342518,0.018568415,-0.0060902704,0.029229047,-0.0071106297,0.022639224,0.010777547,-0.03443713,-0.012095511,0.028973958,-0.0111920675,-0.015188475,-0.0022546223,-0.027549705,-0.005096483,0.0006420426,-0.05714013,-0.012786379,-0.0029202474,0.021873955,0.035244916,0.0012070268,0.016952846,-0.0031806517,0.023234434,-0.033714376,-0.030058088,-0.014338176,-0.026848208,0.018143266,0.026720664,-0.032290123,-0.002471183,-0.000616135,-0.02674192,-0.014954643,0.007052172,-0.0069193123,0.02759222,0.027996112,0.012924553,0.0074188635,0.017250452,-0.016782787,-0.0009572513,-0.024573656,0.028973958,0.021023655,-0.0139342835,-0.00043511423,0.0017377997,-0.0055056894,-0.005511004,0.0046102176,-0.012903295,0.02225659,0.021385033,0.03824222,-0.031014675,-0.0562048,0.0237021,0.0028219316,-0.011064523,-0.0081522465,0.018674703,-0.004341842,0.00025043977,0.004830764,0.034841023,-0.017239824,0.029802999,0.02952665,-0.017505541,0.001124654,-0.021810183,-0.010735031,0.0076952106,-0.00033546973,0.029909287,-0.00554289,0.02954791,-0.006653594,-0.024191022,-0.01108578,0.019333685,-0.022809286,0.008024702,0.004113324,0.0052957716,-0.03968773,0.034224555,0.008136304,-0.013434732,0.066365875,0.007854642,-0.031354796,-0.026763178,0.032608986,-0.03934761,0.026210483,-0.011744763,0.002970734,-0.0017909434,-0.010809433,-0.0008024702,-0.030313179,0.011447158,0.010936977,-0.020364674,-0.027953597,0.033756893,-0.0034729422,-0.02529641,-0.006547306,-0.03352306,0.006653594,-0.0041638105,0.054801807,0.029207788,-0.009608385,0.048467074,-0.0140512,0.06283714,0.011776648,-0.041685935,-0.043790426,0.00237021,0.006063699,-0.0020221185,-0.018302698,-0.013062727,-0.009353295,0.03316168,-0.01591123,0.021618865,-0.034415875,0.04714911,0.00090809335,0.0077961837,0.024977548,-0.016368266,-0.019429345,0.04138833,0.04893474,0.03175869,0.007769612,-0.0044056145,0.008247905,-0.046426356,0.04051677,0.0115853315,0.013849254,0.02217156,-0.0017750002,-0.044045515,-0.0040229796,0.0007360405,0.002298466,0.036201503,0.0035234287,0.042451203,0.0017324853,-0.027528448,-0.014529494,0.010384283,-0.0073816627,0.086347915,0.011797906,0.02521138,-0.009693415,0.052335937,-0.015411679,0.019248655,0.005813923,-0.0046766475,0.04884971,-0.000288969,-0.0020354046,-0.017186679,0.008731513,0.016145062,0.013275301,-0.002657186,-0.013700452,0.005340944,0.007456064,0.0039592073,-0.0046500755,-0.014795212,-0.020577248,-0.0237021,0.033544317,0.0018866021,0.05314372,-0.010639373,-0.051400606,-0.017037878,-0.013944913,-0.012626948,0.022915572,0.053271268,0.017622458,0.014338176,-0.018387727,0.043195218,0.025764076,-0.017027248,0.035074856,0.00951804,0.009151349,-0.019673806,-0.045065876,-0.012658834,-0.005285143,0.027996112,0.021714525,0.018515272,0.013615421,0.008407337]},{"id":"min-cost-climbing-stairs","name":"Min Cost Climbing Stairs","description":"You are given an array of integers `cost` where `cost[i]` is the cost of taking a step from the `ith` floor of a staircase. After paying the cost, you can step to either the `(i + 1)th` floor or the `(i + 2)th` floor.\n\nYou may choose to start at the index `0` or the index `1` floor.\n\nReturn the minimum cost to reach the top of the staircase, i.e. just past the last index in `cost`.\n\n**Example 1:**\n\n```java\nInput: cost = [1,2,3]\n\nOutput: 2\n```\n\nExplanation: We can start at index = `1` and pay the cost of `cost[1] = 2` and take two steps to reach the top. The total cost is `2`.\n\n**Example 2:**\n\n```java\nInput: cost = [1,2,1,2,1,1,1]\n\nOutput: 4\n```\n\nExplanation: Start at index = `0`.\n* Pay the cost of `cost[0] = 1` and take two steps to reach index = `2`.\n* Pay the cost of `cost[2] = 1` and take two steps to reach index = `4`.\n* Pay the cost of `cost[4] = 1` and take two steps to reach index = `6`.\n* Pay the cost of `cost[6] = 1` and take one step to reach the top.\n* The total cost is `4`.\n\n**Constraints:**\n* `2 <= cost.length <= 100`\n* `0 <= cost[i] <= 100`\n","difficulty":"Easy","concepts":["Fibonacci Sequence","Tree Maze","1-Dimension DP"],"solutions":{"python":"class Solution:\n    def minCostClimbingStairs(self, cost: List[int]) -> int:\n        for i in range(len(cost) - 3, -1, -1):\n            cost[i] += min(cost[i + 1], cost[i + 2])\n\n        return min(cost[0], cost[1])\n","javascript":"class Solution {\n    /**\n     * @param {number[]} cost\n     * @return {number}\n     */\n    minCostClimbingStairs(cost) {\n        for (let i = cost.length - 3; i >= 0; i--) {\n            cost[i] += Math.min(cost[i + 1], cost[i + 2]);\n        }\n        return Math.min(cost[0], cost[1]);\n    }\n}\n","cpp":"class Solution {\npublic:\n    int minCostClimbingStairs(vector<int>& cost) {\n        for (int i = cost.size() - 3; i >= 0; i--) {\n            cost[i] += min(cost[i + 1], cost[i + 2]);\n        }\n        return min(cost[0], cost[1]);\n    }\n};\n","java":"class Solution {\n    public int minCostClimbingStairs(int[] cost) {\n        for (int i = cost.length - 3; i >= 0; i--) {\n            cost[i] += Math.min(cost[i + 1], cost[i + 2]);\n        }\n        return Math.min(cost[0], cost[1]);\n    }\n}\n","csharp":"public class Solution {\n    public int MinCostClimbingStairs(int[] cost) {\n        for (int i = cost.Length - 3; i >= 0; i--) {\n            cost[i] += Math.Min(cost[i + 1], cost[i + 2]);\n        }\n        return Math.Min(cost[0], cost[1]);\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def minCostClimbingStairs(self, cost: List[int]) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} cost\n     * @return {number}\n     */\n    minCostClimbingStairs(cost) {}\n}\n","cpp":"class Solution {\npublic:\n    int minCostClimbingStairs(vector<int>& cost) {\n        \n    }\n};\n","java":"class Solution {\n    public int minCostClimbingStairs(int[] cost) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int MinCostClimbingStairs(int[] cost) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/ktmzAZWkEZ0","embedding":[-0.017486958,-0.038485684,0.037910655,-0.046494976,-0.012917553,-0.01459129,0.00013396956,0.023165341,-0.03205771,0.01728159,0.0059042866,-0.039738417,-0.036021285,-0.0018649845,0.0041817753,-0.00007773443,0.030496925,-0.030024583,-0.0377669,0.038711585,0.021727776,0.008856431,0.002450279,-0.009985946,0.05117733,-0.010607179,0.046577122,-0.02875131,0.02875131,-0.0015723372,0.031975564,-0.015607854,-0.064156495,0.013626067,0.014704241,-0.017620446,-0.04064203,0.005781067,0.053354215,-0.0070235343,0.013533653,0.0027005696,-0.023637684,-0.024253784,-0.003000918,-0.024685053,0.020896042,0.026923548,0.004900558,0.033207763,0.02095765,-0.0068695094,0.018246813,-0.0030548268,-0.031154098,-0.032653272,0.018359765,-0.0111924745,0.053929243,0.047357515,0.018103058,-0.019417403,-0.036082894,0.0013233303,0.04854864,0.06432079,0.05031479,0.01654227,0.0022731505,-0.0067770947,-0.07327477,-0.007434267,0.016131539,-0.026081545,0.0036914628,-0.02127597,-0.040600955,0.017784739,0.0179593,0.008856431,-0.024910957,-0.042387646,0.04156618,-0.008322477,0.009025858,-0.026143156,-0.026471741,0.023473391,-0.0241511,-0.073233694,-0.032447908,-0.0061507267,0.01746642,0.011017913,0.04941118,0.02924419,0.05117733,0.0145502165,0.026369058,0.009765177,0.010720131,-0.049370106,0.058940187,0.0083122095,-0.0018714023,0.038834807,-0.009914068,0.010637985,-0.059679504,0.012753259,0.00071749924,0.022836754,-0.039327685,0.013626067,0.01728159,-0.031749662,-0.035713233,-0.023288561,0.019715184,-0.035569478,0.035425723,-0.03708919,0.03224254,-0.017528031,-0.040292908,-0.0060839825,0.03285864,-0.05935092,-0.013944386,-0.009282566,0.0012424673,-0.004548868,0.04008754,0.011603207,-0.010191313,-0.04119652,-0.009220956,-0.011089791,0.021748312,0.035446256,0.019869208,0.0025824837,-0.021563482,0.023206415,0.010109166,0.031236244,0.010432618,0.051013038,-0.059063405,0.050684452,0.04370199,0.012034477,0.031913955,0.029593313,-0.012558161,-0.03409084,0.0024412943,-0.00076178135,0.04780932,-0.02402788,-0.004803009,-0.046577122,-0.009036126,-0.04193584,0.016501198,0.036329333,0.033248838,0.0065563256,-0.035466794,-0.024171637,0.048137907,-0.034665864,-0.004014915,-0.014745315,0.042264424,-0.03365957,-0.081818014,-0.007711512,-0.035384648,0.02390466,-0.017856617,-0.021563482,-0.029326336,-0.0058734817,-0.004772204,0.0020973054,-0.018986132,-0.038403537,0.00019686304,0.01416002,0.01985894,-0.0084148925,-0.027149452,0.012229575,0.008050367,0.032776494,0.014457801,-0.0027313745,0.04027237,0.026430668,-0.057584766,-0.03308454,0.04125813,0.021132212,0.022734072,-0.024849346,-0.059802726,0.0410733,0.0054216757,-0.017795008,0.0060223727,0.037561532,0.013369359,-0.025527056,0.009765177,0.025198469,0.031113025,-0.03273542,0.04969869,0.061568875,-0.022138508,-0.007999025,-0.0033038335,0.014581022,0.030414779,-0.022323338,0.0047824723,0.032037172,0.0701532,0.0060480433,-0.010504496,-0.029531702,-0.017404811,0.06025453,-0.01758964,0.004738832,-0.01906828,-0.009282566,-0.006581996,-0.022775145,-0.004430782,-0.016953005,-0.0007887357,-0.004774771,0.010165642,-0.022980511,-0.032468442,0.010376142,-0.053436365,0.05236846,0.025485983,0.021830458,0.025629738,-0.040067002,-0.025547592,0.077012435,0.034296207,-0.0049775704,0.043168038,-0.027395891,-0.0054576145,0.0063766297,-0.0015402487,-0.05791335,-0.018626742,-0.03205771,-0.021912605,0.006325288,-0.026389595,0.00883076,0.0033603094,0.02955224,0.030661218,0.005770799,0.02501364,-0.0035297368,0.03733563,0.0095906155,-0.027539648,-0.036247186,-0.036945432,0.038033877,0.037910655,-0.02556813,0.02618423,-0.014683705,0.054956075,0.011972867,-0.011613475,-0.041155446,-0.043866284,-0.0371508,-0.042428717,0.033330984,0.008076037,0.026307449,-0.023473391,-0.013872507,0.04965762,-0.037890118,-0.030722829,-0.04210013,0.0103402035,0.03168805,-0.014303776,-0.022631388,-0.011449182,0.00053074403,-0.01636771,0.0386089,-0.02470559,0.057666913,0.021604557,-0.0008516292,-0.0033962484,-0.040149152,-0.035959672,-0.061075997,0.0058940183,-0.04616639,0.0173432,-0.018185204,0.04267516,0.0026043039,0.0371508,0.013893044,0.0050032414,0.053107776,-0.008846162,-0.046125315,-0.025670812,-0.024602907,-0.027046768,-0.0030240216,-0.008948845,0.042634085,0.04162779,0.010607179,0.0017520329,0.0021807356,-0.005334395,-0.049082592,-0.01385197,0.042387646,0.013769824,0.022487631,0.038506217,-0.026738718,0.030394241,0.024294857,-0.00038409952,0.019386597,0.02912097,-0.012034477,0.007172425,0.049205814,-0.009672762,0.015474366,-0.05602398,0.023432318,-0.02322695,-0.014047069,-0.0017481823,-0.013133188,0.028340576,0.040970616,-0.01269165,0.004584807,0.0181544,0.02844326,0.018595936,-0.015371682,-0.029716533,-0.018400839,-0.018637009,-0.015782416,-0.010699594,0.065306544,0.038649976,-0.023206415,-0.021501873,-0.008147916,-0.0129483575,0.014190825,0.030558536,0.0050751194,0.004897991,-0.0051598335,-0.012239844,-0.025280615,0.061445657,-0.027560184,0.03708919,0.03101034,-0.007300779,0.0044769896,0.08526817,0.009580347,-0.008687003,0.04390736,0.004204879,-0.015577049,-0.005755396,0.0028802652,-0.036637384,-0.064895816,-0.013708214,0.022241192,-0.0229189,-0.04682356,0.024438614,-0.0046797893,-0.0028674298,-0.014847998,-0.006232873,-0.012270648,0.014498875,0.023863588,0.003891695,-0.015197121,-0.025896715,-0.0076293657,0.051013038,0.0027211062,0.0010120717,0.028053064,0.008173587,-0.016696297,0.0019663842,0.019047743,0.021419726,0.0015903069,0.004050854,-0.013574726,-0.043003745,0.021296507,-0.020803627,0.021091139,0.008810223,-0.013923849,-0.024171637,-0.04131974,-0.0026132888,0.0024618309,-0.00037928624,0.0011750815,-0.00023986165,0.04780932,-0.003634987,0.040169686,-0.000023204007,-0.012167965,0.021748312,0.0163061,-0.05836516,0.010637985,0.012640308,0.027478037,-0.017743666,0.007886074,-0.014940413,0.021481335,-0.008707539,0.0036529566,-0.0009831921,-0.016419051,0.015125243,0.011058986,0.026656572,-0.05130055,-0.0017597342,-0.017784739,-0.042593013,0.007295645,-0.020803627,0.005770799,0.00600697,0.015659196,-0.029942436,-0.0105455695,0.014334582,0.0043049953,0.04210013,-0.020690674,0.0033295043,-0.0018136429,0.017374005,-0.061651025,-0.025157396,0.023925196,-0.0060583116,0.0012745558,-0.008527844,-0.0062944833,0.0026569292,0.010607179,-0.027436964,0.02433593,0.0039327685,0.029141506,0.017107029,-0.022754608,-0.020546919,0.025978861,0.018657546,0.0007868104,-0.0095136035,-0.005375468,0.028977213,0.029346872,-0.06900314,0.014324313,0.027252134,0.00037704007,0.009123406,0.03511767,-0.009698433,-0.04665927,0.01686059,-0.012619771,-0.0050417474,-0.032776494,0.02402788,-0.00321912,-0.02470559,-0.0027365086,-0.010160508,-0.0047259964,-0.001178932,-0.007973354,-0.024849346,-0.023576073,0.0015492336,0.030907659,-0.04051881,0.028525406,0.01747669,-0.014724778,-0.0128970165,-0.0068797776,0.020608528,0.021234896,-0.03622665,0.023637684,-0.012209038,-0.028792383,0.02501364,0.065101184,-0.033146154,-0.013708214,0.03532304,-0.02949063,-0.038875878,-0.030661218,-0.0054216757,-0.02587618,0.009960275,0.015741343,0.05405246,0.025773495,-0.00069054484,-0.022754608,0.025527056,-0.00041811337,0.023329634,-0.0107920095,0.02176885,-0.0014118947,-0.00035136924,-0.024007345,0.042223353,0.014714509,-0.0068387045,-0.053477436,0.024869883,0.00038409952,0.018626742,-0.031749662,0.03764368,0.00023280218,0.0024117727,-0.010555838,0.01808252,-0.020947384,-0.018061984,0.0005490345,-0.0034244864,-0.0049493327,0.0043306663,-0.028196821,-0.035898063,0.011870184,0.032139856,0.009174748,-0.03548733,-0.011839379,-0.017014615,0.04131974,0.00037575653,0.002751911,0.023452854,0.028648626,0.0012739141,0.018246813,-0.032468442,-0.008235197,0.009072065,0.05585969,0.0026492279,0.031236244,-0.014683705,0.0019830703,-0.0033680105,0.01931472,-0.010006483,-0.019674111,0.022487631,0.024130564,0.030127265,-0.00030002763,0.04039559,-0.0024400107,0.030312095,-0.007927147,0.0063047516,0.013359091,-0.019817866,-0.019212035,0.0049441983,0.0050340462,-0.028094137,0.03980003,-0.05388817,-0.05565432,-0.009944873,-0.029778142,-0.003668359,0.00922609,-0.006078848,-0.006356093,0.022097435,0.007526682,-0.02887453,-0.06506011,-0.025978861,0.028053064,-0.007932281,0.0035579747,-0.026882475,-0.00127969,0.013749287,0.021974215,0.01704542,-0.010432618,0.00044346327,0.05836516,-0.028607553,-0.0048184115,0.011069254,0.001128874,-0.011079523,0.027005695,0.00683357,0.07508199,0.02133758,-0.044112723,-0.0023912361,0.021809923,0.05585969,-0.010201581,-0.007680707,0.004700326,0.018862912,-0.0022115405,-0.01036074,0.010987108,0.014919876,-0.017456152,-0.04780932,-0.017610177,-0.01876023,-0.0003542572,0.010627717,0.02875131,-0.018257082,-0.020639334,0.00092414924,-0.0049390644,-0.018123593,-0.0022808516,0.006854107,0.006001836,-0.049082592,0.0017314963,0.029921899,0.019530354,-0.024623442,0.06382791,-0.011274621,-0.056722227,0.014940413,-0.034111377,0.009267163,0.01066879,-0.025794033,-0.008738345,-0.012917553,0.017219981,0.02384305,0.0058324086,-0.0002913637,-0.042634085,-0.028176283,-0.0389991,-0.05540788,0.042428717,-0.003283297,-0.008784552,0.020854969,-0.017024882,-0.025219006,0.012280917,0.013821165,0.004235684,-0.032222003,0.0028648626,-0.021358116,0.02856648,0.012732723,-0.009333908,0.013564457,-0.0040251836,-0.036575772,0.033762254,-0.0045694048,-0.02513686,-0.041217055,0.013790361,-0.00827627,-0.018103058,-0.020885773,-0.0070492052,0.0061404584,-0.0067257527,0.0108433515,0.0077577196,-0.03347474,0.0051957723,-0.05898126,-0.0053189923,-0.0003629211,0.0024233246,-0.009950007,-0.03162644,0.015494903,0.039491978,-0.0042793243,0.018472716,0.0074650724,-0.022754608,-0.0108433515,-0.0111924745,-0.011880452,-0.02850487,0.016891394,0.039512515,-0.032098785,-0.0009196568,0.038649976,0.044852044,0.009544408,-0.020834431,0.0179593,-0.00060005527,-0.014796657,0.01391358,-0.0021666165,-0.042017985,0.008209526,-0.025239542,0.0048338138,0.0404572,0.005216309,-0.008255733,-0.009734372,0.01949955,0.0353025,0.028340576,0.010771473,-0.024007345,-0.019694647,-0.01942767,-0.023678757,0.008604856,0.013133188,0.01097684,-0.013009967,0.0016647521,0.014878803,-0.05364173,0.027765552,0.006602533,-0.012989431,-0.026081545,-0.0019779361,0.036514163,0.007942549,-0.044482384,-0.0075985603,0.020002697,-0.007583158,0.05265597,0.012989431,-0.013564457,0.008953979,0.0027082707,-0.039533053,-0.022836754,-0.006160995,0.017805275,-0.0059915674,0.0030111864,-0.042017985,0.000108459186,0.05130055,-0.0053652,0.04119652,0.010720131,0.015227926,0.024438614,0.00056892936,-0.026040472,0.013472042,0.018945059,0.0029649788,0.020803627,0.0495344,-0.026677107,0.007588292,0.030414779,0.012999699,0.020629065,0.0008349432,-0.012106355,-0.03517928,-0.0026415265,-0.015792685,0.02751911,0.010083495,-0.040970616,0.0027647465,0.023432318,-0.00080349646,0.0017892556,-0.014971218,-0.030620145,0.031934492,0.001519712,-0.008255733,0.00071364857,0.044646677,0.0050032414,-0.0041175983,-0.041792084,-0.021625092,0.00094340235,0.004554002,0.0014401326,-0.032755956,-0.015946709,0.036041822,0.011284889,-0.03517928,-0.007423999,0.038485684,-0.009770311,0.0020267107,0.008574052,0.036801677,0.0065460573,0.018667815,0.0010261907,0.02115275,0.01758964,0.011356767,-0.042757306,-0.007706378,0.013359091,0.0058940183,-0.026471741,0.036185578,-0.020362088,0.025239542,0.004263922,0.008373819,-0.0067514237,0.022631388,-0.031236244,0.035836454,0.026964622,0.03647309,0.011089791,0.022384949,-0.003067662,0.011900988,-0.023925196,-0.02359661,0.0026120052,-0.037130263,-0.025588665,0.029921899,-0.0507666,0.009251761,0.016881127,0.034768548,0.016347174,0.005236846,0.009446859,0.02115275,-0.012085819,0.00018402764,-0.039635733,-0.03470694,-0.014786388,0.03671953,-0.03390601,-0.026533352,0.035425723,0.042757306,0.023247488,0.03762314,0.010997376,0.0031677783,0.018226277,-0.03372118,0.021399189,0.008897504,-0.012958626,-0.0036863287,0.0214608,-0.030332632,-0.00037736094,-0.021830458,-0.032899715,0.019550892,-0.010699594,0.061158143,-0.024007345,0.035097133,0.0047491,0.043003745,-0.06785309,0.037664216,-0.01716864,-0.0429216,-0.021604557,-0.008034964,-0.011911257,0.008163318,0.0015376817,0.038649976,-0.029079895,0.013574726,0.023021584,-0.020742016,0.0344605,0.014632363,0.01715837,0.0061404584,-0.030496925,-0.03162644,0.016696297,0.007300779,0.024808273,0.022179581,0.0034039498,0.021809923,-0.0068489728,0.0032319552,-0.036555238,0.008199258,0.02341178,-0.022282265,-0.00074702065,-0.0023475958,0.025527056,-0.019869208,0.018565131,-0.002576066,0.02053665,0.036822215,0.03402923,0.05380602,0.0051726685,0.0026145722,-0.011213011,-0.0032653273,0.048959374,0.013769824,-0.0140984105,0.005236846,-0.043455552,-0.012219307,0.0025529624,0.01139784,-0.076642774,0.02310373,0.017692324,-0.009811385,-0.014509143,-0.03144161,-0.027909307,-0.02495203,0.03335152,0.013256407,-0.01562839,0.0033141018,-0.020711211,-0.0064485082,-0.030763902,-0.0048902896,-0.028915603,0.01287648,0.03211932,-0.036863286,0.013328286,0.023617147,0.02127597,0.008178721,0.015915904,-0.011141133,0.014581022,0.0046002096,-0.0027775818,-0.00055031804,0.035220355,0.025711887,-0.009179883,0.009487933,-0.03029156,0.0034681268,0.008609991,-0.008594588,0.031667516,-0.011788037,-0.0058067376,-0.041976914,-0.0069978633,0.028422723,0.03684275,-0.008615125,0.031092487,-0.043250185,-0.0112951575,0.008810223,-0.0032165528,0.0141497515,0.004145836,-0.019253109,0.006469045,-0.001469654,-0.025855642,0.006730887,-0.0021640495,0.01796957,-0.020084843,0.012558161,0.011921525,-0.008943711,-0.015217657,-0.020813895,0.017363738,-0.011634012,0.05113626,0.0013502848,-0.018986132,-0.045961022,-0.024972565,-0.000098672186,0.023493927,0.018801304,0.008055501,-0.0019484147,0.016932467,0.01931472,0.03708919,0.0048184115,0.015782416,-0.025937788,0.0061096535,0.008358416,0.01440646,0.00464385,0.021255434,-0.021727776,0.008594588,0.019571427,0.026286911,0.00040271087,0.018287886,0.023391245,0.06740128,0.022610852,-0.024726126,0.008445697,-0.035158746,-0.036390945,0.03267381,0.011120596,-0.039101783,0.025629738,-0.0344605,-0.010535302,-0.012270648,-0.0060172384,-0.0018097922,0.017671788,0.018462447,0.0041946108,0.010355606,-0.026533352,-0.018678084,-0.020012965,0.042798378,-0.027498575,0.016706565,0.007300779,0.024130564,0.0019099085,0.013934117,-0.0025247245,-0.045509215,-0.047973614,-0.024479687,-0.019602232,-0.0189964,-0.016665492,0.001519712,-0.009606018,0.008266002,-0.011726427,-0.041792084,0.008738345,-0.0015440994,0.042593013,0.0051675346,0.04555029,0.0476861,0.03353635,-0.025937788,0.03267381,0.040375054,0.039553586,0.004928796,-0.0036247186,0.0389991,-0.022508169,0.009303102,-0.014077874,0.0024258918,-0.023658222,-0.014355118,-0.018934792,-0.023391245,-0.0030368571,0.004674655,-0.0021589154,-0.029223653,0.0027544782,0.023740368,-0.019663842,-0.008163318,0.008784552,-0.02004377,0.047480736,-0.013543921,0.021234896,0.010822815,0.01459129,0.008969381,0.015114974,-0.008995052,-0.017086493,-0.017507493,-0.009056662,-0.023329634,0.002939308,-0.043168038,0.03947144,-0.013400164,0.03230415,0.0116956225,-0.0065922644,-0.001863701,-0.009000187,0.010109166,-0.011387573,-0.0043383674,0.0018008075,0.022692999,-0.0058324086,-0.051670212,-0.026574425,0.018637009,-0.01250682,-0.0034039498,0.022015288,-0.014180557,-0.044235945,-0.027868234,0.050684452,0.00012346056,-0.01789769,-0.032755956,0.007542085,-0.053970315,-0.021871531,-0.0123836,-0.0071210833,0.0031985831,0.032591663,0.038916953,-0.004515496,-0.03273542,0.019930819,-0.032468442,0.010016751,0.015186853,0.009313371,0.0008156901,-0.03536411,-0.016377978,0.004800442,0.06933173,0.044975262,-0.005739994,-0.027046768,0.007803927,0.0036734932,-0.019941088,-0.013040773,0.0044923923,-0.039348222,0.007269974,0.02470559,-0.043866284,0.0034193522,0.043209113,-0.020557187,0.0023899525,-0.010781741,-0.054093536,0.04468775,0.009518737,0.0038583232,0.009539274,-0.008687003,0.030373706,0.0032473577,0.0083122095,-0.024931492,-0.02402788,0.031092487,0.0019342958,0.0004932005,0.020762553,-0.024849346,0.037315093,-0.015484634,-0.01477612,-0.01452968,-0.00821466,0.043866284,-0.003285864,0.047850393,0.02226173,0.0019227439,-0.0066590086,0.021892069,-0.008281404,0.025609203,0.015956977,0.017240517,-0.03684275,0.031462148,0.017076224,0.013513115,-0.042593013,0.02795038,-0.012126892,-0.0005451839,-0.022672461,0.03029156,-0.016655223,0.04707,0.022898365,-0.0064587765,-0.0024772333,-0.027252134,-0.0009960275,0.0004967302,-0.031071952,-0.0094982,-0.002540127,-0.0002543015,0.013009967,-0.0076344996,0.0080400985,0.00959575,0.029839752,-0.0012662128,0.015073901,-0.005098223,0.026985157,0.055777542,0.0073726573,0.011592939,-0.03452211,-0.0039404696,0.018945059,0.019961623,0.02445915,-0.030250486,0.020896042,-0.031030878,0.010304264,0.036390945,-0.049246885,0.021830458,0.0030496926,-0.0040944945,0.011685354,-0.011418377,-0.028956676,-0.002198705,0.013687677,0.012886748,0.0124965515,0.000908105,0.016254758,-0.04027237,-0.0018316124,-0.013677409,-0.036370408,-0.0132974805,-0.020587992,0.022035826,0.039081246,-0.020382626,-0.0359186,0.0069670584,0.006597399,-0.021542946,0.04021076,-0.0020780524,0.041360814,0.00852271,0.017425347,-0.011859915,0.00088692654,-0.012270648,0.024007345,-0.01703515,-0.009451993,0.00038827103,-0.021317042,-0.0011474853,0.0061507267,-0.02825843,-0.041648325,0.023288561,-0.01942767,-0.015063632,0.007922012,-0.013430969,0.0042202817,-0.055448953,-0.0023796842,-0.0065255207,0.019437939,0.019951355,0.022241192,-0.013749287,-0.014960949,-0.0060121045,0.009292834,-0.014211361,0.038218707,-0.017671788,-0.020854969,0.01139784,-0.021912605,-0.01219877,0.010139971,0.0049159606,0.018770497,0.018318692,0.025362764,-0.0049724365,0.013564457,0.0063766297,0.027005695,-0.015823489,0.011469719,-0.007013266,0.0120960865,0.023268024,0.01477612,0.008266002,-0.012434942,0.012209038,-0.0048158444,-0.045139555,-0.048507567,0.022590315,-0.0060839825,-0.013584994,-0.04419487,0.011182206,0.012609503,-0.018421374,-0.021809923,-0.006884912,-0.022754608,0.008568917,-0.030722829,-0.040128615,0.06686733,-0.011613475,-0.0573794,-0.02998351,-0.034214057,-0.0045565693,-0.014786388,0.017086493,-0.009082333,-0.020916577,0.06087063,-0.00044153797,0.029408483,-0.0148993395,0.005534627,-0.032037172,0.009308237,0.0025426939,0.019817866,-0.002492636,-0.020177258,0.016573077,0.04033398,-0.029531702,0.03696597,-0.008199258,0.021727776,0.010104032,-0.021871531,-0.00802983,-0.034357816,-0.01139784,0.021193823,0.01593644,-0.000071757946,0.021933142,0.001673737,0.005745128,-0.051423773,0.025403837,0.02949063,-0.010396679,0.0154024875,0.004579673,-0.038649976,0.018123593,0.01900667,-0.016049393,0.0033243701,0.0023103731,0.01213716,-0.015381951,-0.010453155,-0.014242167,0.015885098,-0.017240517,0.049493328,0.0071056806,0.050232645,-0.005585969,0.04620746,0.0034886634,-0.010247788,-0.004179208,-0.00034559332,0.028607553,-0.006787363,0.018924523,0.021912605,0.030989805,0.013174261,0.0076755728,0.01716864,0.0073726573,0.020885773,0.01428324,0.00708001,-0.007192962,-0.017240517,-0.0326122,-0.07081037,0.02445915,-0.0036401213,0.0022461961,0.0038583232,-0.028956676,-0.012588967,-0.017599909,0.014016263,0.011716159,0.020742016,0.025527056,0.042593013,0.001707109,0.018123593,0.04518063,-0.020433966,0.020608528,0.014981486,0.03659631,0.00022333607,-0.054093536,0.0030881988,-0.019140158,-0.010273459,0.04764503,-0.0049159606,0.012619771,0.026266376]},{"id":"partition-equal-subset-sum","name":"Partition Equal Subset Sum","description":"You are given an array of positive integers `nums`.\n    \nReturn `true` if you can partition the array into two subsets, `subset1` and `subset2` where `sum(subset1) == sum(subset2)`. Otherwise, return `false`.\n\n**Example 1:**\n\n```java\nInput: nums = [1,2,3,4]\n\nOutput: true\n```\n\nExplanation: The array can be partitioned as `[1, 4]` and `[2, 3]`.\n\n**Example 2:**\n\n```java\nInput: nums = [1,2,3,4,5]\n\nOutput: false\n```\n\n**Constraints:**\n* `1 <= nums.length <= 100`\n* `1 <= nums[i] <= 50`\n","difficulty":"Medium","concepts":["Tree Maze","1-Dimension DP","0 / 1 Knapsack"],"solutions":{"python":"class Solution:\n    def canPartition(self, nums: List[int]) -> bool:\n        if sum(nums) % 2:\n            return False\n\n        dp = set()\n        dp.add(0)\n        target = sum(nums) // 2\n\n        for i in range(len(nums) - 1, -1, -1):\n            nextDP = set()\n            for t in dp:\n                if (t + nums[i]) == target:\n                    return True\n                nextDP.add(t + nums[i])\n                nextDP.add(t)\n            dp = nextDP\n        return False\n","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {boolean}\n     */\n    canPartition(nums) {\n        const sum = nums.reduce((acc, num) => acc + num, 0);\n        if (sum % 2 !== 0) {\n            return false;\n        }\n\n        let dp = new Set();\n        dp.add(0);\n        const target = sum / 2;\n\n        for (let i = nums.length - 1; i >= 0; i--) {\n            const nextDP = new Set();\n            for (const t of dp) {\n                if (t + nums[i] === target) {\n                    return true;\n                }\n                nextDP.add(t + nums[i]);\n                nextDP.add(t);\n            }\n            dp = nextDP;\n        }\n        return false;\n    }\n}\n","cpp":"class Solution {\npublic:\n    bool canPartition(vector<int>& nums) {\n        int sum = 0;\n        for (int num : nums) {\n            sum += num;\n        }\n        if (sum % 2 != 0) {\n            return false;\n        }\n\n        unordered_set<int> dp;\n        dp.insert(0);\n        int target = sum / 2;\n\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            unordered_set<int> nextDP;\n            for (int t : dp) {\n                if (t + nums[i] == target) {\n                    return true;\n                }\n                nextDP.insert(t + nums[i]);\n                nextDP.insert(t);\n            }\n            dp = nextDP;\n        }\n        return false;\n    }\n};\n","java":"class Solution {\n    public boolean canPartition(int[] nums) {\n        if (Arrays.stream(nums).sum() % 2 != 0) {\n            return false;\n        }\n\n        Set<Integer> dp = new HashSet<>();\n        dp.add(0);\n        int target = Arrays.stream(nums).sum() / 2;\n\n        for (int i = nums.length - 1; i >= 0; i--) {\n            Set<Integer> nextDP = new HashSet<>();\n            for (int t : dp) {\n                if (t + nums[i] == target) {\n                    return true;\n                }\n                nextDP.add(t + nums[i]);\n                nextDP.add(t);\n            }\n            dp = nextDP;\n        }\n        return false;\n    }\n}\n","csharp":"public class Solution {\n    public bool CanPartition(int[] nums) {\n        if (nums.Sum() % 2 != 0) {\n            return false;\n        }\n\n        HashSet<int> dp = new HashSet<int>();\n        dp.Add(0);\n        int target = nums.Sum() / 2;\n\n        for (int i = nums.Length - 1; i >= 0; i--) {\n            HashSet<int> nextDP = new HashSet<int>();\n            foreach (int t in dp) {\n                if (t + nums[i] == target) {\n                    return true;\n                }\n                nextDP.Add(t + nums[i]);\n                nextDP.Add(t);\n            }\n            dp = nextDP;\n        }\n        return false;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def canPartition(self, nums: List[int]) -> bool:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {boolean}\n     */\n    canPartition(nums) {}\n}\n","cpp":"class Solution {\npublic:\n    bool canPartition(vector<int>& nums) {\n        \n    }\n};\n","java":"class Solution {\n    public boolean canPartition(int[] nums) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public bool CanPartition(int[] nums) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/IsvocB5BJhw","embedding":[-0.00035624008,-0.009862531,0.029917719,-0.0009181645,0.04836354,0.018074429,-0.047827084,0.022118479,0.0024256564,0.05657544,0.015866708,-0.020797973,0.0025236628,0.030516073,0.023500884,0.027606834,-0.008676139,0.039656453,0.036540885,0.045062274,0.010997341,0.07658936,-0.010987025,-0.03738683,0.06945037,-0.016619809,0.05005544,0.0015874445,-0.0010509888,-0.029608225,0.03862481,-0.004812626,-0.019663163,0.034064934,-0.03503468,0.025295947,0.007505221,0.017249113,-0.029732022,-0.04304025,-0.008830885,-0.00640136,-0.04291645,-0.006143449,0.000382676,0.02255177,0.05199493,-0.021685189,0.009769683,0.023480251,0.015031075,0.030309744,0.018064113,-0.0031619933,-0.012245632,-0.010378353,-0.05834987,0.030474808,0.018280758,-0.016929302,0.00058352447,-0.013989112,0.039594553,0.014835062,-0.015784176,0.018022846,0.022675568,-0.018775947,0.0038944618,-0.031588987,-0.04460835,0.017455442,0.019271137,-0.019559998,-0.010656898,0.04361797,0.0057875314,0.02135506,0.0016042087,0.014969176,0.017001517,0.0000040097157,0.04601139,0.023129491,0.0015487578,0.012998733,-0.061733667,0.023872277,-0.035901263,-0.04609392,0.017259428,0.006535474,-0.012132151,0.015350885,0.034766454,-0.022985062,0.029401897,-0.015577847,0.008067467,0.03445696,0.013669303,0.015412783,-0.02042658,-0.0041188444,0.04262759,-0.007778607,0.05447088,0.007819872,-0.01044541,-0.019229872,0.04217367,0.026038732,-0.0046681957,-0.01347329,0.02156139,0.007984936,0.005968069,-0.015361201,0.012617025,-0.016640441,0.00030852648,-0.05715316,-0.02255177,-0.030743035,-0.038026452,-0.009243543,-0.025791137,-0.07072961,0.05793721,0.04559873,-0.0024578953,0.01641348,0.017156264,0.034003034,-0.0021664556,-0.02255177,0.00803136,0.010373196,-0.02383101,0.022985062,0.043989364,-0.019281454,0.015454049,-0.0020349207,0.052159995,-0.01588734,-0.011946455,-0.0010948337,-0.032434933,-0.0060506007,0.049188856,-0.028741643,0.050591893,0.028019492,0.015020758,-0.010368037,0.004923528,-0.02296443,0.020591645,0.036128227,-0.012080569,-0.023212023,-0.019570315,-0.011471897,0.020767024,0.038727973,0.026327593,0.0034173257,-0.011729809,-0.015031075,0.05310911,-0.026987845,-0.01137905,-0.020828923,0.0437005,-0.016836455,-0.03346658,-0.06049569,-0.03936759,-0.01693962,-0.023789745,0.032579366,-0.02773063,-0.06350809,0.010491835,0.031238224,0.03387924,-0.020591645,-0.023212023,-0.019137023,0.034725185,0.014917593,0.009666518,0.005921645,0.012720189,-0.038315315,0.058473665,0.073700756,0.003105253,-0.033528477,-0.028452782,0.021375695,0.0012947151,0.0008652927,-0.00026758303,-0.042297464,0.007902404,0.011090189,0.0014185125,-0.030124048,0.0111005055,-0.0022296438,0.025481643,-0.03586,0.005343924,0.0129884165,-0.0015745489,0.026430758,0.0012766613,0.03940886,0.021055885,-0.0057978476,0.017991897,0.06466354,0.0054470883,0.00267712,0.036767844,0.006458101,-0.0087070875,0.028555946,-0.016516645,-0.012214682,0.013514556,-0.003535965,-0.028163921,-0.036932908,-0.04324658,-0.036334556,-0.05224253,0.018033164,0.011389366,0.028163921,0.014824745,0.020333732,-0.012575759,-0.01658886,-0.020230567,0.046547845,-0.02234544,-0.021643922,-0.008124208,0.013782783,-0.009016582,-0.03835658,-0.02552291,0.040646832,-0.002857658,-0.034560125,0.013163797,0.0077270246,-0.06544759,-0.0005000257,-0.046960503,-0.06255898,0.012090885,-0.0373662,-0.008335696,0.049312655,0.02424367,-0.014298607,-0.018724365,-0.04403063,0.030041516,-0.03588063,-0.01300905,-0.007273101,-0.0065457905,0.006942974,0.017857783,-0.072173916,-0.01769272,-0.03125886,0.025976833,0.017073732,0.033569746,-0.019064808,0.006210506,0.02135506,-0.00852655,-0.040254805,-0.0015629429,-0.0259562,-0.015969872,0.029546326,-0.012224999,0.010780695,-0.028617846,-0.018569618,0.020725757,-0.054924805,0.014948543,-0.015557214,0.00012798852,0.002973718,-0.00980579,-0.04687797,0.010904493,0.03375544,-0.04041987,-0.009418923,-0.016753923,0.0052098096,-0.04027544,-0.014319239,0.036850378,-0.06503493,-0.03616949,-0.01559848,0.036045693,-0.0076754424,0.013163797,0.028679745,0.013958164,0.05921645,0.04510354,0.037324935,0.023315188,0.025192782,0.011121138,-0.017465757,-0.032311138,-0.033507846,0.0038660914,0.039512023,-0.058267336,0.03586,0.03453949,-0.0049312655,-0.0033863762,-0.0055296198,0.029917719,0.00477136,0.0324762,-0.011740126,-0.038810503,-0.017424492,-0.01908544,0.02234544,0.00593712,-0.016361898,-0.035302907,-0.0050911703,0.01219405,-0.028886074,-0.024780124,-0.033363417,-0.019745694,-0.031362023,-0.010352562,0.011038607,0.01591829,0.035117213,0.037263036,0.0005358109,0.014917593,0.048033413,-0.06672683,-0.059464045,-0.035694934,0.08616303,0.03460139,0.03687101,0.016269049,-0.035426706,-0.014969176,0.029257465,-0.025708605,0.008768987,-0.00803136,-0.01850772,-0.0292781,-0.016743606,0.01606272,-0.013205063,-0.0089804735,0.06561265,-0.031155694,-0.017094366,-0.00035946397,-0.030474808,-0.001780878,-0.019807594,0.05558506,0.0079539865,0.016279366,-0.031815946,0.013029682,0.016361898,-0.04716683,-0.022448605,-0.0030768826,0.008320221,0.011430632,-0.0016609492,-0.000328837,0.0134526575,0.019229872,0.058845058,0.043411642,-0.032352403,-0.0073814234,-0.04390683,0.022654936,0.009413765,0.06544759,0.008995948,-0.032001644,-0.009651043,-0.009176486,-0.030371644,-0.0028653953,-0.0086245565,0.018848162,-0.036066327,0.016784873,-0.03942949,-0.027813163,-0.035117213,-0.027483035,-0.05261392,-0.0043922304,-0.014236707,0.0453924,0.019405251,-0.08046835,0.0520362,0.0015384413,0.05579139,-0.013813733,-0.048982527,-0.014731897,-0.054553412,0.00861424,-0.0055296198,0.012761455,-0.0324762,0.006148607,0.020013923,0.072380245,-0.037675694,0.046630375,-0.034312528,0.053480502,0.027338605,-0.049766578,-0.0027725473,0.016145252,0.017950632,-0.013597088,0.007463955,-0.048899997,0.0186212,-0.010337087,0.005921645,0.025894301,-0.024223035,-0.03978025,-0.0028886073,0.02453253,0.0055450946,0.050591893,-0.020715442,0.054140754,0.028328985,-0.013854999,-0.012874936,0.04085316,0.061816197,0.0259562,0.0017911944,-0.009939904,-0.0583086,-0.019250505,0.010605316,0.029979618,0.007778607,0.0054316134,0.028494049,-0.0034121675,-0.023438985,-0.0373662,-0.005307816,0.004399968,-0.0066128476,-0.0040440504,0.0057565817,0.017713353,0.0074433223,0.014051012,0.023810377,0.014040695,-0.07708455,0.03751063,-0.02411987,0.039512023,-0.0128646195,-0.019095758,-0.04766202,-0.029917719,0.06565392,-0.014020062,0.032373033,0.040956326,-0.023088226,0.0037964555,0.037531264,0.015020758,-0.024016706,0.005508987,-0.017568922,0.015577847,0.021251896,0.035220377,0.0071183536,-0.011502847,-0.013607404,-0.0210662,-0.008650348,-0.051458478,-0.005653417,0.0023353875,0.02284063,-0.020880505,-0.0025945883,-0.016970567,0.03940886,0.0324762,-0.014525568,-0.04984911,-0.02865911,0.052490123,0.011131455,-0.04848734,0.0023753638,-0.014556518,-0.021458225,0.021705821,0.019559998,-0.03594253,-0.010259714,-0.01350424,-0.030825567,0.0030459333,-0.005514145,0.004170427,-0.023418352,0.013029682,0.013906581,-0.010048227,0.008222215,-0.028597213,-0.015144556,0.030660504,-0.0036159174,-0.024903921,0.004691408,-0.009326075,-0.018074429,0.0006547725,0.029463794,-0.0086245565,0.04745569,0.015000125,-0.037118606,0.045186073,-0.034333162,-0.02793696,-0.0110592395,-0.024429364,0.0113481,-0.0065406323,-0.011977404,-0.010228765,-0.028328985,-0.030784301,0.008444019,-0.01681582,0.006695379,0.031362023,-0.032434933,0.011471897,0.01911639,0.04510354,0.004461867,-0.0029917718,-0.04671291,-0.021499492,0.026760884,0.014814429,-0.007572278,0.02531658,0.027049745,0.003672658,-0.02473886,-0.0041136863,-0.007644493,0.0113481,0.03264126,-0.022180378,0.03020658,-0.016000822,0.0067675943,0.020963036,-0.010182341,0.0019691533,-0.0123591125,0.023851644,0.032806326,0.014257341,-0.013205063,0.030185947,0.027421137,-0.018136328,-0.00059255137,0.010208132,0.008531708,0.0063085123,0.054305818,-0.01684677,0.011079872,-0.040894426,-0.025357846,0.053645566,-0.004173006,-0.012813037,0.02517215,-0.0023637577,0.026678352,0.011636961,-0.011956771,0.005328449,0.011337784,-0.0091713285,-0.051706072,0.0069481325,-0.015010442,0.010218449,0.011533797,0.017114999,-0.0064735753,0.048899997,0.0065870564,0.021437593,-0.0065251575,-0.01251386,-0.008026202,-0.022737466,-0.04469088,-0.01882753,-0.01457715,-0.010295822,0.006504525,0.025213415,-0.006690221,0.033074554,-0.036747213,0.03837721,0.0046424046,0.055337463,0.016609492,-0.02095272,0.049518984,0.011822658,-0.02651329,-0.0035849682,0.022675568,0.00042361944,-0.002813813,-0.023480251,0.027524302,0.010997341,0.0019162815,-0.01920924,0.040543668,0.011977404,0.005282025,0.008598765,0.00026452035,-0.029298732,-0.026925948,-0.002973718,-0.024718225,0.008727721,-0.01871405,0.033528477,-0.0073401574,0.019436201,0.009083639,0.005653417,0.002033631,-0.01414386,-0.0048487335,0.020374998,0.021251896,-0.048941262,-0.0041833227,0.016970567,0.02383101,0.014680315,-0.004425759,0.027132276,0.01751734,0.020240884,0.0062259804,-0.027111644,0.017001517,0.001417223,0.00022228736,0.009723259,-0.008418228,-0.0020207355,0.011853606,-0.011894872,0.034168098,0.031444553,0.022593036,0.012080569,-0.028184555,0.03198101,0.007984936,0.028060757,-0.02616253,-0.007144145,0.02255177,0.022118479,-0.02680215,0.00721636,0.07972556,-0.053728096,-0.012224999,0.0054264553,0.03163025,0.05657544,-0.025419746,0.0422562,-0.0057720565,-0.034848984,0.039821517,-0.054140754,0.042998984,-0.010770379,0.0026874365,0.03218734,0.010729113,0.01609367,0.029319365,-0.03127949,0.033322148,0.0015706803,-0.0059525943,0.02808139,0.027978225,-0.02467696,-0.0032058384,0.018961644,0.003131044,-0.039759617,0.03870734,-0.011626645,0.002063291,-0.0074381637,0.023480251,0.018971961,-0.023604048,0.037613794,0.012709873,-0.025048353,-0.021808986,-0.01446367,0.010594999,-0.024016706,0.005096329,-0.012297214,0.03290949,-0.01769272,-0.012524176,0.037077338,-0.004402547,-0.0055296198,-0.022283543,-0.03680911,0.030722402,-0.037820123,-0.0062930374,0.0029866137,-0.017032467,-0.008041676,-0.019240187,0.01117272,-0.032311138,0.0260181,0.013184429,0.028494049,0.0040698415,0.015969872,-0.0060196514,-0.008768987,0.017063417,0.00074471906,0.0011386788,0.0063343034,0.04271012,0.037778858,-0.0014481724,0.0025468748,-0.007917879,-0.021994682,0.012132151,-0.012317847,0.008041676,0.009687151,-0.010749746,0.031671517,0.0030691454,-0.00235731,-0.051499743,0.0032109965,0.04196734,0.017991897,0.035282277,-0.013751835,-0.00020423357,-0.023851644,0.008908259,0.010548575,0.037056707,0.037923288,0.008562657,0.005049905,-0.015877023,-0.012854302,0.042668857,-0.02659582,-0.04609392,-0.014443037,0.009666518,0.021396328,-0.047992148,-0.011048923,-0.041884806,-0.0051427525,0.019921074,0.027111644,-0.014092278,-0.020354366,0.015588163,0.02773063,0.003489541,-0.012080569,-0.010125601,0.010012119,-0.009449872,0.01588734,-0.009671676,-0.0135351885,0.01946715,-0.011389366,-0.04646531,-0.032455567,-0.01230753,0.022324808,0.004559873,-0.019559998,-0.02828772,0.023769112,-0.018033164,0.00090075546,-0.015165188,0.013607404,-0.014515252,0.03509658,0.009496297,-0.01169886,0.03994531,-0.016578542,-0.05298531,0.013958164,-0.022861265,0.012070253,-0.022159744,-0.0041368986,-0.0211281,0.0029917718,-0.010290664,-0.0275862,0.015062024,0.03290949,-0.008454335,0.031031895,-0.04093569,-0.057895944,0.002744177,-0.022118479,0.031423923,-0.02424367,-0.000021378435,-0.015877023,0.029752655,-0.019137023,-0.012462278,-0.010945759,-0.010182341,0.027916327,0.031568352,0.018342657,0.016011138,-0.0162381,0.0054625627,0.013091581,0.011781392,0.013483606,-0.024656327,-0.018322024,-0.02095272,0.058473665,0.017589556,-0.0035333857,-0.030289112,0.0022025632,0.0002124545,0.06994557,0.023294555,0.013700252,-0.022324808,-0.027668731,-0.01166791,-0.012967784,0.020416263,0.024800757,-0.008722562,0.0018956485,0.0047842558,-0.019652847,-0.010001803,-0.012596391,-0.0011863923,0.0050009014,-0.03821215,0.020622592,-0.008825727,0.04778582,-0.036953542,0.010904493,-0.029958986,-0.0041807434,0.022427972,-0.0018801739,0.035426706,0.020540062,-0.008578132,-0.014700948,-0.027400505,0.032992024,-0.003878987,0.007577436,-0.041368984,0.01585639,-0.007928195,-0.018002214,-0.041018225,0.025357846,0.006102183,-0.037201136,0.012699556,-0.032538097,-0.03311582,-0.023273923,0.012936834,-0.023232656,-0.01673329,0.0026384334,0.006509683,-0.01329791,0.021520125,0.026430758,0.016330948,-0.0135764545,0.022861265,0.03282696,0.02665772,0.01527867,0.02872101,0.00038364317,-0.0259562,0.0011431922,0.0044850786,-0.05339797,0.025832403,0.008464651,-0.00491837,0.014422404,-0.06346683,0.0035720726,0.036086958,-0.013834366,-0.04828101,0.04217367,0.0057514235,-0.008712246,0.0060196514,-0.05224253,0.017630821,0.0025842718,0.00675212,0.03134139,0.022923162,0.032950755,0.017960947,-0.005338765,-0.030371644,-0.019652847,0.010202974,-0.0071544615,0.015051708,-0.021024935,-0.023315188,0.013638353,0.03311582,-0.011193354,-0.0045959805,0.026141897,-0.03738683,-0.039656453,0.0044850786,-0.01428829,0.015309619,-0.0066334805,-0.010605316,0.021293163,0.015237404,-0.021705821,0.0010213291,-0.023026327,-0.011213986,-0.043494172,-0.009114588,-0.013401075,0.002994351,-0.04667164,0.007850822,0.0045160283,0.007030664,-0.00022244855,-0.03270316,0.004851313,0.00980579,0.009903797,0.017940314,-0.004245221,0.014896961,-0.0045908224,-0.0340443,-0.021210631,0.001993655,0.011987721,0.029958986,-0.058019742,-0.05665797,-0.055048604,-0.02226291,-0.0070409803,-0.01364867,-0.048817463,0.024656327,-0.009217752,-0.032950755,-0.016269049,-0.019487783,0.00320068,0.018548986,0.017568922,-0.0147112645,-0.001257318,-0.001519098,0.019982973,0.02956696,0.003626234,-0.011771075,-0.030866833,0.010914809,0.01038867,0.031073162,0.0010348693,-0.012534493,0.03468392,-0.021086834,-0.0057411073,-0.024924556,-0.030908098,-0.0018737261,0.0012044461,-0.009857372,-0.019033859,-0.02659582,0.024780124,-0.024842024,-0.003646867,0.047620755,-0.015144556,-0.020880505,0.008289271,0.011905189,0.013019366,0.00096007506,-0.068253666,-0.029030504,0.014669999,-0.0059783855,0.008217056,-0.017084049,-0.002514636,-0.031588987,0.012637657,0.03326025,-0.05381063,-0.020220252,-0.017249113,0.031465188,-0.019302087,0.052077465,-0.007809556,-0.047909617,-0.025502276,-0.010208132,-0.0018221438,0.014948543,0.008763828,-0.018311707,0.009047531,0.0122353155,0.018022846,-0.018548986,-0.0048384173,0.017476074,0.008191265,-0.0007434295,0.010414462,0.05261392,0.010507309,0.023315188,-0.009522088,0.004062104,0.036478985,-0.0029530851,-0.023810377,0.010527942,-0.02296443,0.02473886,-0.0064323097,-0.044154428,-0.0041368986,-0.0052974997,0.0061795563,-0.0016609492,0.0019227293,0.026368858,0.0036597624,-0.013421708,0.03680911,-0.0040698415,-0.001452041,0.0053903474,-0.0022799366,0.0022580142,0.0227581,-0.009795474,0.0073143663,-0.00008752867,0.034518857,0.02045753,0.006458101,0.0037500313,-0.013978796,-0.011998037,0.026368858,-0.0011238488,-0.0116885435,-0.0074020564,0.030330377,0.003087199,0.004786835,0.0063033537,-0.0015668116,-0.02964949,0.0055657276,0.0012566731,0.0025133463,0.023480251,-0.0029376105,0.038191516,0.013380442,-0.000640265,0.00055966765,0.025646707,-0.014855695,0.04178164,0.010239081,-0.0068656006,0.006968765,0.012152784,0.005890696,0.00068217557,-0.02162329,-0.05575012,-0.025770504,-0.017362593,-0.038893037,0.0076548094,-0.0006515486,-0.028102024,-0.017919682,0.06969797,0.03070177,-0.0027957594,0.004371598,0.0060402844,-0.017672088,0.0502205,-0.0008988211,0.017527657,-0.001757666,-0.03070177,-0.037263036,-0.023005694,0.01088386,-0.007618702,0.0016918986,-0.00421943,0.06734582,-0.0011992878,-0.0012521597,-0.011121138,-0.002769968,-0.028349617,0.026141897,-0.0005638587,-0.0105124675,0.009475663,0.033425312,-0.011884556,0.013514556,-0.0032084174,0.04481468,-0.0028009175,0.0038351421,0.01702215,-0.039181896,-0.01102829,0.00044683146,-0.037263036,-0.02793696,-0.004967373,0.030371644,-0.000039573275,0.056410376,0.0068346513,-0.010811645,0.011502847,-0.011121138,-0.02226291,0.026368858,-0.002380522,0.024449999,-0.019559998,0.015701644,0.0069326577,0.003038196,0.035261642,0.024057973,0.0074072145,0.0035462813,0.005916487,0.028494049,0.013710569,-0.020096455,0.014835062,0.002522373,-0.008237689,0.0029221359,0.009336391,0.0065715816,-0.033280883,0.021458225,0.003902199,-0.010285505,0.01812601,0.015608796,0.011544113,0.016640441,0.012493227,-0.022324808,-0.021334428,-0.011678227,-0.0103474045,0.024449999,0.019549683,-0.0052768667,0.007035822,0.0105331,0.02907177,-0.007984936,-0.026265694,-0.011544113,0.006509683,0.04033734,-0.021994682,-0.004812626,0.050756957,-0.005828797,-0.013947847,-0.011740126,0.03994531,-0.054429617,0.015185822,-0.01879658,-0.0065922146,0.046424046,-0.0077528157,-0.002653908,-0.04927139,-0.011987721,0.0075000627,0.0052510756,-0.03501405,-0.010852911,0.0029917718,0.0013411391,0.03105253,-0.011275885,0.022283543,-0.029670125,-0.0039744144,-0.01073943,-0.004614034,0.027317973,-0.0034095882,0.021705821,0.012152784,-0.0030923574,-0.06565392,0.03284759,0.011977404,0.0016931881,0.03474582,-0.0141644925,-0.0066541135,0.0017331644,0.03978025,-0.028349617,-0.027771896,0.015433417,0.018693415,-0.003969256,0.0027364397,0.005217547,-0.03701544,0.04786835,0.01137905,-0.00084014627,0.0012657001,-0.0013437183,-0.036128227,-0.05013797,-0.002744177,-0.042297464,-0.024553163,-0.0020594222,0.008330537,-0.0066283224,0.00680886,0.021664554,-0.000065042026,-0.00989348,0.03210481,0.021932783,-0.0034147466,0.023789745,0.017909365,-0.0045753475,0.015144556,0.015650062,0.001242488,-0.034725185,-0.024223035,-0.008505917,-0.020901138,0.005212389,0.012998733,-0.00041362536,0.027173541,0.0057668984,0.05376936,0.03026848,-0.0044283383,-0.019900441,-0.018342657,0.0003642998,-0.0036365504,0.025337214,-0.0030227213,0.012637657,0.04262759,-0.019735377,-0.023996074,-0.0073762652,0.03963582,-0.007288575,-0.01769272,0.019033859,0.019828226,-0.02234544,-0.031114427,-0.053934425,0.003698449,0.037737593,-0.03841848,0.012214682,0.026265694,-0.036107592,-0.061651133,0.004745569,-0.014793796,0.01882753,-0.019271137,0.03532354,0.018445821,-0.01350424,0.019095758,-0.013607404,0.009491138,-0.0040646833,0.023913542,-0.0005412915,0.016299998,-0.018961644,-0.00097232586,-0.008330537,-0.0047378317,0.01993139,0.035983793,-0.029876454,0.034209363,-0.038913667,0.0007531012,0.038686704,-0.010553733,0.02511025,-0.027070377,0.0074072145,0.023067594,-0.009093955,0.010863227,0.012441644,0.010357721,-0.04112139,0.002019446,0.008289271,-0.0099244295,0.027111644,-0.014185125,-0.031011263,-0.009578829,-0.015681012,-0.010904493,-0.040791262,0.0022631723,-0.03402367,0.038748603,-0.020251201,0.020993985,0.034147464,0.044071894,0.025626075,0.017795885,0.048115946,0.015536581,-0.022180378,-0.008763828,-0.00028209056,0.015371517,-0.04295772,-0.0260181,0.02147886,0.03288886,-0.00023985757,0.0035720726,0.035344176,-0.009362183,0.01574291,0.0037139237,0.006710854,-0.010997341,-0.015928606,0.04766202,-0.017733986,0.012874936,-0.02019962,-0.0045908224,0.015650062,0.020828923,0.05409949,-0.007278259,-0.030825567,-0.014958859,0.0003917029,0.009001107,-0.038067717,-0.0037474523,0.0043638605,0.026245061,0.019487783,0.009393132,0.031588987,0.0027183858,0.00026355317,0.006370411,-0.016134934,-0.0022618826,-0.0022386706,0.01024424,0.0021754825,0.017166581,0.03218734,-0.020230567,0.0110592395,0.0044077053]},{"id":"buy-and-sell-crypto-with-cooldown","name":"Buy and Sell Crypto with Cooldown","description":"You are given an integer array `prices` where `prices[i]` is the price of NeetCoin on the `ith` day.\n\nYou may buy and sell one NeetCoin multiple times with the following restrictions:\n* After you sell your NeetCoin, you cannot buy another one on the next day (i.e., there is a cooldown period of one day).\n* You may only own at most one NeetCoin at a time.\n\nYou may complete as many transactions as you like.\n\nReturn the **maximum profit** you can achieve. \n\n**Example 1:**\n\n```java\nInput: prices = [1,3,4,0,4]\n\nOutput: 6\n```\n\nExplanation: Buy on day 0 (price = 1) and sell on day 1 (price = 3), profit = 3-1 = 2. Then buy on day 3 (price = 0) and sell on day 4 (price = 4), profit = 4-0 = 4. Total profit is 2 + 4 = 6.\n\n**Example 2:**\n\n```java\nInput: prices = [1]\n\nOutput: 0\n```\n\n**Constraints:**\n* `1 <= prices.length <= 5000`\n* `0 <= prices[i] <= 1000`\n","difficulty":"Medium","concepts":["Tree Maze","2-Dimension DP"],"solutions":{"python":"class Solution:\n    def maxProfit(self, prices: List[int]) -> int:\n        dp = {}  # key=(i, buying) val=max_profit\n\n        def dfs(i, buying):\n            if i >= len(prices):\n                return 0\n            if (i, buying) in dp:\n                return dp[(i, buying)]\n\n            cooldown = dfs(i + 1, buying)\n            if buying:\n                buy = dfs(i + 1, not buying) - prices[i]\n                dp[(i, buying)] = max(buy, cooldown)\n            else:\n                sell = dfs(i + 2, not buying) + prices[i]\n                dp[(i, buying)] = max(sell, cooldown)\n            return dp[(i, buying)]\n\n        return dfs(0, True)\n","javascript":"class Solution {\n    /**\n     * @param {number[]} prices\n     * @return {number}\n     */\n    maxProfit(prices) {\n        const dp = new Map();\n        return this.dfs(0, true, prices, dp);\n    }\n\n    /**\n     * @param {number} i\n     * @param {boolean} buying\n     * @param {number[]} prices\n     * @param {Map} dp\n     * @return {number}\n     */\n    dfs(i, buying, prices, dp) {\n        if (i >= prices.length) {\n            return 0;\n        }\n        const key = `${i}-${buying}`;\n        if (dp.has(key)) {\n            return dp.get(key);\n        }\n\n        const cooldown = this.dfs(i + 1, buying, prices, dp);\n        if (buying) {\n            const buy = this.dfs(i + 1, !buying, prices, dp) - prices[i];\n            dp.set(key, Math.max(buy, cooldown));\n        } else {\n            const sell = this.dfs(i + 2, !buying, prices, dp) + prices[i];\n            dp.set(key, Math.max(sell, cooldown));\n        }\n        return dp.get(key);\n    }\n}\n","cpp":"class Solution {\npublic:\n    int maxProfit(vector<int>& prices) {\n        unordered_map<long, int> dp; // Use long for the combined key\n        return dfs(0, true, prices, dp);\n    }\n\n    int dfs(int i, bool buying, vector<int>& prices, unordered_map<long, int>& dp) {\n        if (i >= prices.size()) {\n            return 0;\n        }\n        \n        // Combine 'i' and 'buying' into a single long key\n        long key = static_cast<long>(i) << 1 | static_cast<long>(buying);\n        if (dp.find(key) != dp.end()) {\n            return dp[key];\n        }\n\n        int cooldown = dfs(i + 1, buying, prices, dp);\n        if (buying) {\n            int buy = dfs(i + 1, !buying, prices, dp) - prices[i];\n            dp[key] = max(buy, cooldown);\n        } else {\n            int sell = dfs(i + 2, !buying, prices, dp) + prices[i];\n            dp[key] = max(sell, cooldown);\n        }\n        return dp[key];\n    }\n};\n","java":"class Solution {\n    \n  public int maxProfit(int[] prices) {\n      Map<String, Integer> dp = new HashMap<>();\n      return dfs(0, true, prices, dp);\n  }\n\n  private int dfs(int i, boolean buying, int[] prices, Map<String, Integer> dp) {\n      if (i >= prices.length) {\n          return 0;\n      }\n      String key = i + \",\" + buying; // Encode 'i' and 'buying' into a String key\n      if (dp.containsKey(key)) {\n          return dp.get(key);\n      }\n\n      int cooldown = dfs(i + 1, buying, prices, dp);\n      if (buying) {\n          int buy = dfs(i + 1, !buying, prices, dp) - prices[i];\n          dp.put(key, Math.max(buy, cooldown));\n      } else {\n          int sell = dfs(i + 2, !buying, prices, dp) + prices[i];\n          dp.put(key, Math.max(sell, cooldown));\n      }\n      return dp.get(key);\n  }\n}\n","csharp":"public class Solution {\n    \n    public int MaxProfit(int[] prices) {\n        Dictionary<Tuple<int, bool>, int> dp = new Dictionary<Tuple<int, bool>, int>();\n        return Dfs(0, true, prices, dp);\n    }\n\n    private int Dfs(int i, bool buying, int[] prices, Dictionary<Tuple<int, bool>, int> dp) {\n        if (i >= prices.Length) {\n            return 0;\n        }\n        var key = Tuple.Create(i, buying);\n        if (dp.ContainsKey(key)) {\n            return dp[key];\n        }\n\n        int cooldown = Dfs(i + 1, buying, prices, dp);\n        if (buying) {\n            int buy = Dfs(i + 1, !buying, prices, dp) - prices[i];\n            dp[key] = Math.Max(buy, cooldown);\n        } else {\n            int sell = Dfs(i + 2, !buying, prices, dp) + prices[i];\n            dp[key] = Math.Max(sell, cooldown);\n        }\n        return dp[key];\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def maxProfit(self, prices: List[int]) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} prices\n     * @return {number}\n     */\n    maxProfit(prices) {}\n}\n","cpp":"class Solution {\npublic:\n    int maxProfit(vector<int>& prices) {\n        \n    }\n};\n","java":"class Solution {\n    public int maxProfit(int[] prices) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int MaxProfit(int[] prices) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/I7j0F7AHpb8","embedding":[0.013476584,-0.03906973,0.078319296,-0.027380282,-0.012161521,0.006294318,-0.0043273433,0.06514619,0.00036529524,0.015038923,0.08321987,-0.043228477,-0.029628253,-0.048780963,0.03978908,0.030572401,0.0018475509,0.025649345,-0.051973082,0.03297773,-0.0029532714,0.012318879,0.0053136405,0.018208561,0.02762756,0.011385972,0.012925832,0.01918643,0.004743218,-0.020332895,0.01679234,-0.0003110278,0.0033972457,-0.0047769374,-0.034259073,-0.050894056,-0.017095817,0.02220995,0.038755015,0.0010663811,0.011419691,-0.014712968,-0.022479707,-0.017691528,-0.0033269965,-0.01608423,0.022614585,-0.017916325,0.0039901477,0.02141192,-0.0040238677,0.012026643,0.010217027,0.010363145,-0.01603927,-0.015421079,0.017871367,0.0429812,0.04743218,0.030010408,0.0085366685,-0.0075419415,0.027470201,0.030100327,-0.00020389796,0.016443904,0.0017506072,0.04372303,-0.011599529,-0.041047946,-0.059885938,-0.034079235,0.024233123,-0.02688573,-0.007339624,0.012431278,0.032505658,0.022884341,0.044195104,0.013735101,-0.032123502,-0.03275293,0.019568585,0.031786304,-0.0124762375,-0.040148757,-0.015376119,0.030752238,-0.027762437,-0.08330979,-0.012352599,-0.050264623,0.04457726,-0.018253522,0.026413655,-0.008401791,0.036192328,0.031111915,-0.01453313,0.030887118,0.006035801,-0.013532783,0.025357109,0.024120726,0.0010972907,0.043565672,0.010582322,-0.010902658,-0.043138556,0.008941303,-0.048511207,0.012745993,0.021277042,0.0153423995,0.0043751127,-0.0042655244,-0.07584653,-0.021906475,0.030932076,-0.03131423,0.015027684,-0.0027284743,0.015949352,-0.0023561541,-0.028234512,0.008930064,-0.0015553148,-0.074812464,0.03664192,-0.012071602,0.005527198,0.030280165,0.010694721,0.027290363,-0.013454105,-0.03138167,-0.016769862,0.016342746,0.020141818,0.0044931313,0.0056676962,0.008092694,-0.04520669,0.00088513846,-0.027088046,-0.01983834,0.0108576985,-0.0026694653,-0.016196629,0.032056063,0.040306114,-0.050039828,0.026930688,0.030797198,-0.01152085,-0.03376452,0.0074183033,0.01529744,0.010627281,-0.013667662,-0.026481094,-0.006732672,-0.05521016,-0.035585377,-0.0024488831,0.043363355,-0.009728093,0.0059796018,-0.022648305,-0.02220995,0.0030544302,-0.018759316,-0.0066764727,-0.035472978,0.011307293,-0.040463474,-0.077105395,-0.005569347,-0.037136476,0.003678242,-0.04516173,-0.00997537,-0.025851663,-0.057188373,-0.004299244,0.031651426,0.003450635,-0.031539027,-0.004386353,0.020085618,0.054760564,-0.015443559,0.043026157,-0.002374419,-0.022648305,0.005737945,0.029695692,0.034753628,-0.02978561,-0.016713662,-0.023311455,-0.014937765,0.0098629715,0.032393258,0.00687879,-0.035383057,0.008266912,0.0034084856,-0.0155671965,-0.0673492,0.01298203,0.023288976,-0.013397905,-0.042014573,-0.0061088605,-0.035517935,0.024098245,0.016612504,0.0068225907,0.08115174,0.010666621,0.017264415,-0.036439605,0.01225144,-0.005811004,0.021591758,0.025491986,0.018871713,0.030932076,0.0018292861,0.006041421,-0.024929995,-0.008845764,0.004771318,0.021917714,0.00095257757,0.0038468398,-0.038889892,-0.011397211,-0.027470201,0.01916395,-0.014364532,-0.005448519,0.007502602,0.001837716,-0.012790953,-0.039474364,0.013633942,-0.040306114,0.004279574,0.011745647,0.035765212,0.00054583536,-0.033292446,-0.002363179,-0.017017137,-0.017511692,0.0056311665,0.0071541667,-0.024368001,-0.017792689,0.023221537,-0.026930688,-0.039878998,0.011402831,-0.02531215,-0.00612572,0.0012553511,0.009138001,0.009227919,0.0008261292,-0.0053136405,-0.019725943,-0.003692292,0.01687102,-0.043430794,0.044262543,0.015690835,-0.008755846,-0.02998793,-0.044105183,0.026346216,0.02528967,-0.015836954,0.048556168,-0.015589677,0.056469023,0.010616042,-0.030122807,-0.001685978,-0.0126223555,-0.028077153,0.017860128,-0.0026891348,0.040778186,-0.026098939,-0.053456742,-0.026638452,0.062313747,-0.03133671,0.025019914,-0.00094836263,-0.013116909,0.022760702,-0.031179354,-0.04050843,0.027043087,-0.010149588,-0.024592798,0.002592191,0.02533463,0.024952475,0.030122807,0.015881913,-0.005822244,-0.025132312,0.031359192,-0.031853743,-0.006592174,-0.011903005,0.018309722,0.028571706,0.01533116,0.04374551,-0.004139076,-0.01837716,-0.005192812,0.0123301195,0.0061594397,-0.04214945,-0.025784224,0.04205953,-0.033225007,0.021232083,-0.08088198,0.029628253,0.07135059,0.014735447,-0.013420384,-0.022356069,0.044824533,0.030460002,-0.018849233,-0.0065247347,0.022816902,-0.020760009,0.062088948,0.03434899,0.0038974192,0.008514189,-0.014330813,-0.0005584802,0.0721149,0.02690821,-0.00914924,0.0183884,-0.012745993,0.008564768,-0.091852084,-0.0020372234,-0.040148757,-0.007508222,0.022771943,-0.036349684,-0.033202525,0.044150144,-0.010784639,-0.022637064,0.001759037,0.026750851,0.04529661,0.02306418,-0.0367768,0.009643794,-0.016005551,-0.06379741,-0.018804274,0.040351074,0.0007734424,-0.029448416,-0.019298827,0.018590717,-0.04815153,0.037383754,0.0154885175,0.019703463,0.042419206,0.0028942623,-0.011234233,-0.04064331,0.082725324,-0.02915618,0.067124404,-0.013263027,-0.020164296,0.018219803,0.06838327,0.056513984,-0.0028057485,0.044757094,-0.023513773,-0.0134316245,0.02528967,0.005900923,-0.038934853,-0.026121419,0.0017211025,0.058537155,-0.013004511,-0.029560814,0.050489422,0.026413655,0.007862277,-0.015724555,0.010228267,0.028976342,-0.006221259,0.0067270524,-0.00998099,-0.022513427,0.017601611,0.003602373,0.036866717,0.04738722,-0.024592798,0.010082148,0.043790467,-0.040755708,-0.019995699,-0.0004618877,0.0037597308,-0.0058278637,0.0006118695,0.009761812,-0.04446486,0.03225838,-0.041834734,0.018152364,-0.0028155833,-0.03736127,-0.027807398,-0.05435593,0.03895733,0.014949005,-0.019051552,-0.014488171,0.032842852,0.0446447,0.031898703,-0.028841464,0.031763826,0.019231388,0.01307195,0.026840769,-0.041789774,0.015454798,0.04815153,0.062943175,-0.037383754,0.04833137,-0.026975648,0.062718384,-0.009812392,-0.0024643377,0.009851731,0.0012103918,0.0058728233,0.03392188,-0.004532471,-0.0037681607,-0.018590717,-0.0022549955,-0.03835038,-0.0032567475,-0.009767433,0.015758274,-0.013161868,0.03819302,0.011880525,-0.021704156,0.008946924,-0.01918643,-0.0010600587,0.026098939,0.014488171,0.017095817,0.025379589,-0.055524874,-0.046173315,0.016477626,-0.03684424,0.01685978,0.015061404,-0.009109901,-0.015702074,0.0011998543,0.034866024,0.008508569,0.0414301,0.0033354266,0.040103797,-0.04446486,-0.022131272,0.0036979117,0.03670936,0.0070024286,0.012341359,-0.04819649,-0.015836954,0.06730424,-0.07296913,-0.007834177,-0.012824672,0.007457643,-0.005440089,-0.00038812618,-0.008637827,-0.040418513,-0.0037597308,0.010166448,0.008210713,-0.009857351,-0.02605398,0.053366825,0.019332547,0.0010944807,-0.045476448,0.004976445,-0.043116078,-0.043610632,-0.003964858,0.013375426,-0.023131618,0.04073323,-0.013229308,0.033989318,-0.004110976,0.014106016,0.003518074,-0.004285194,-0.005816624,0.026368696,-0.029538335,0.01757913,0.012296399,-0.064022206,0.080297515,0.051523488,-0.027942276,0.0018939152,0.011554569,0.019737182,-0.041947134,-0.015286201,0.03295525,-0.016241588,-0.030415043,0.023873448,0.047926735,-0.010177687,-0.011756887,-0.024412962,0.016623743,-0.008789565,0.006434816,0.027380282,0.022614585,0.00690127,-0.022558386,-0.0025711164,-0.0051141335,0.025784224,-0.0037456811,-0.045611326,0.041722335,0.0038187401,0.013184348,-0.0053389305,0.03279789,-0.009469576,-0.01536488,0.028953861,0.006215639,0.022457227,0.00007161016,-0.014769168,-0.0049371053,0.033180047,0.011262333,-0.018601958,-0.050219666,-0.025132312,0.012487477,0.002371609,-0.010217027,-0.030684799,-0.0075644213,0.04815153,-0.026998127,-0.0048528067,0.0005251119,0.028616667,-0.01768029,0.0020414384,-0.03428155,0.003922709,-0.007266565,0.04073323,0.0051759523,-0.007851037,0.009154861,0.005973982,-0.011194894,-0.011779366,-0.027402762,-0.015926871,0.0012089867,0.036979116,0.030190246,-0.01227392,0.02528967,0.0067270524,0.02996545,0.021479359,0.006609034,-0.015870674,-0.006535975,0.015398599,0.03452883,0.02067009,0.0037709707,0.018860474,0.013307986,-0.008126414,-0.008160134,-0.02607646,0.023513773,-0.022603344,0.021355722,-0.011858045,0.040463474,-0.014016097,-0.042419206,-0.0105654625,-0.0044622216,0.0012209291,0.012903351,0.011104975,0.012431278,-0.02369361,-0.016511345,0.044127665,0.002228301,-0.002229706,0.019737182,0.03358468,-0.015825713,-0.03751863,-0.023963368,0.01762409,0.014308333,0.007041768,0.020085618,-0.0015581247,0.036619443,-0.044959415,-0.015657116,0.04066579,0.075576775,0.0113353925,-0.046802748,0.02607646,0.032123502,-0.0040491573,-0.041475058,0.0123301195,0.0025697115,-0.048061613,-0.036686882,0.0061594397,-0.010773399,0.041722335,-0.042666484,0.013128148,-0.025447028,-0.0101552075,-0.01750045,0.0046364395,-0.012599875,0.026863249,-0.007969056,0.039699163,-0.0153423995,0.0052377717,0.002745334,-0.025357109,0.005673316,0.037271354,-0.03228086,-0.063167974,-0.019422466,-0.018186083,0.007907237,0.000536703,-0.07054132,0.028571706,0.013116909,0.0150501635,0.024705198,-0.009924791,0.026840769,0.012352599,-0.00921106,-0.0049848747,-0.022086311,0.0752171,0.006440436,0.0127684735,0.020681331,-0.04232929,-0.0034787345,0.035922572,-0.015893152,-0.009008743,-0.022041352,-0.022963021,-0.024660239,0.017410534,0.021839036,-0.0018545758,-0.008935683,-0.03365212,-0.008924443,0.0083905505,0.016556304,-0.049185596,0.00032999506,-0.0017295324,-0.03457379,-0.02760508,-0.00015419674,0.016769862,-0.002062513,-0.017961286,0.013544023,0.0091661,-0.03374204,0.0384403,-0.06869798,-0.0017449872,-0.0026778951,0.0060245614,0.008688407,0.020108098,0.037451193,0.05664886,-0.003371956,0.027897315,-0.0015145702,-0.0024320232,-0.0009877022,0.02378353,-0.0230417,0.031583987,0.0083905505,0.0036866718,-0.047072504,0.011723167,0.0070192884,-0.0025654966,-0.0011338202,-0.009121141,0.025357109,-0.0067214323,-0.009480816,-0.0017815167,-0.017017137,-0.0046280096,-0.0015440749,-0.017871367,0.0020273884,0.028863944,-0.028054673,0.011222994,-0.014971484,-0.023154099,0.03527066,-0.008845764,0.048466247,-0.037226394,0.022131272,-0.061009925,-0.036956638,0.022479707,0.0076936795,0.006356137,-0.010031569,-0.01531992,-0.001990859,-0.028729064,-0.018871713,0.011380351,-0.022457227,-0.0058559636,-0.0055749672,-0.00027045896,-0.0040351073,-0.00998099,-0.03291029,0.023536252,-0.013903699,0.0049399156,-0.00995851,-0.009317839,0.03374204,-0.009413377,-0.026211338,-0.04572372,0.01002033,0.01983834,0.0013677496,0.0034871644,0.002454503,-0.01145903,0.04520669,0.031898703,0.018837994,0.03207854,0.0066483733,0.031651426,0.02373857,-0.004001388,-0.0048050373,0.019298827,0.044037744,0.025716783,0.011144315,-0.030864637,-0.0050944635,0.02450288,0.017848887,0.026548533,0.012375078,-0.025244711,-0.016634982,0.005619927,-0.0073283846,0.03623729,0.014589329,-0.029515855,0.011790606,0.023019219,0.010835218,-0.008047735,0.00066174637,0.0053361203,0.0024769828,0.032393258,-0.0050073545,-0.014960244,-0.00037126642,-0.0065696943,0.010947617,-0.018096164,-0.027133007,0.0007734424,-0.021659197,-0.018152364,0.0051731425,0.006682093,0.050983973,0.0013572123,-0.014701728,-0.0022845003,0.0023547492,0.016983418,-0.0027734337,0.009548255,0.0052546314,0.015241241,0.03443891,0.028661625,-0.014836607,0.005895303,0.0092504,-0.027357804,0.022097552,0.00839617,0.008795185,-0.0076262406,0.027852356,-0.020186776,0.0068563106,-0.017107056,-0.023558732,-0.029583294,0.011082496,-0.00923354,0.053276904,0.024008326,0.043071117,-0.008755846,-0.011768126,0.0065977937,0.005052314,0.004670159,-0.02141192,0.004366683,-0.010475543,0.01995074,0.025694305,-0.015600916,-0.0150501635,0.0055019083,-0.019523624,0.0009167505,0.015836954,-0.0003905849,0.02450288,0.003133109,-0.0039760983,-0.007260945,-0.012892112,-0.02540207,0.034551308,-0.007603761,-0.01301575,0.012026643,0.01222896,0.009402137,0.044779576,0.00053705426,0.01143093,0.022457227,-0.016736142,0.0503995,0.004054777,-0.010627281,0.008862624,-0.0275826,-0.011509609,-0.019995699,0.0032258378,0.001615729,-0.0011246878,-0.044869494,0.050489422,-0.026571013,0.035720255,0.021973914,0.03605745,-0.048016652,0.019579824,-0.036439605,0.0050129746,0.008311871,-0.025424547,0.026930688,0.034866024,0.0116669675,0.021973914,-0.04450982,0.001532835,0.005510338,-0.02688573,0.010093388,-0.0030881497,-0.025447028,0.024368001,-0.040958025,-0.026368696,0.007260945,-0.0058503435,-0.005291161,-0.017017137,-0.041767295,0.034079235,-0.009340318,0.00268773,-0.008154513,-0.015510998,-0.027380282,-0.033112608,0.018433359,0.030010408,0.029403456,-0.047791857,-0.0132855065,-0.009750573,0.025019914,0.07103587,0.048466247,0.049230557,0.029201139,0.021614239,-0.030684799,-0.016893499,0.025559427,0.014162215,-0.00020442482,0.008604107,-0.032640535,-0.0025121071,0.0055075283,-0.056963578,-0.021108445,0.037810866,0.0012602685,-0.0460834,-0.011711927,-0.02063637,-0.016005551,-0.0069237496,0.008373691,0.0146118095,-0.03848526,0.011408451,-0.006564074,-0.030415043,0.01079026,0.0010424964,-0.025109833,-0.016477626,0.04080067,-0.008761466,0.012116562,0.032460697,0.024705198,0.012487477,0.014364532,0.041879695,0.022783183,-0.06056033,0.006417956,0.013173108,0.032415736,0.0034309651,-0.014690489,-0.0073902034,-0.005659266,-0.021917714,0.0460834,0.009638174,-0.035428017,0.02762756,0.0168373,-0.048691045,-0.00010923733,0.024997434,-0.0053389305,0.02596406,0.020602651,-0.023491293,0.012487477,-0.0035630334,-0.0123301195,-0.014870326,0.019377507,-0.0151962815,0.004754458,-0.008030876,0.000315594,0.021569278,-0.013982378,0.026750851,-0.014814126,0.024727678,0.040823147,-0.03052744,-0.01915271,-0.010812739,0.019321308,-0.012566156,0.025829183,-0.009537015,-0.037765905,-0.019343788,-0.02382849,0.01682606,0.0029898009,0.014544371,0.017017137,-0.016488865,0.009003122,-0.008047735,0.01983834,0.01002033,0.022839382,-0.0111499345,0.001107828,0.05359162,0.0055384375,0.0075700413,0.020523973,-0.023985848,-0.027425243,0.024795117,0.009851731,-0.011256713,-0.008969403,0.030797198,0.04511677,-0.0024123534,-0.051748283,0.0038974192,-0.023491293,-0.007407063,0.034079235,-0.019647263,-0.045319088,0.036979116,0.017837647,-0.016151669,0.021940194,-0.002381444,-0.02526719,0.020377854,0.025694305,0.017073337,-0.0041025463,0.003147159,-0.012847153,0.013971138,0.04500437,-0.016601263,0.039654203,-0.018152364,0.0021102824,0.02219871,0.003919899,-0.019546105,-0.025851663,-0.040980507,-0.051793244,-0.023356415,-0.01596059,-0.03275293,-0.0012848558,-0.04280136,0.020366615,-0.038755015,-0.038507737,0.0025022724,-0.021692917,0.0659105,-0.00765996,0.014049817,0.05808756,0.024997434,-0.0074183033,0.012296399,0.032663014,0.055569835,-0.00067790365,0.015432319,0.0053866995,-0.047162425,-0.010475543,-0.023536252,-0.00921106,0.008233192,0.0013789895,0.005105703,0.018478319,-0.017792689,0.015387359,-0.03133671,0.012127802,-0.018826755,-0.012543676,0.0038693196,0.005524388,0.020018179,-0.019062791,0.0113353925,0.015409838,-0.006968709,0.05210796,0.009587595,0.00011880876,0.031763826,0.016028032,0.0072440854,0.0052546314,0.0036136128,-0.008851385,-0.026660932,-0.035090823,0.034933463,-0.035428017,0.029695692,0.0023280545,0.019029072,0.011172414,0.02540207,-0.012667315,-0.023581212,-0.015274961,-0.018579477,0.017196976,-0.008087074,-0.046173315,-0.0034646848,0.017241934,-0.0011612173,-0.011206133,0.05377146,-0.0103800045,-0.017477972,0.008176994,0.031718865,0.021973914,-0.0085760085,-0.027425243,0.0027397142,-0.013229308,-0.012375078,0.00007143454,0.018309722,-0.02000694,-0.018489558,0.037383754,0.019591065,-0.027133007,0.008255673,-0.035517935,0.0021833414,0.026728371,-0.0058559636,-0.01298203,-0.027043087,-0.035810173,-0.016488865,0.0026413656,0.035090823,-0.030482482,0.0038552696,0.008997503,0.037833348,-0.02830195,-0.031966142,-0.026840769,-0.028099634,0.012082842,0.020332895,-0.006614654,-0.0075531816,0.01693846,0.009773052,0.01378006,-0.007457643,0.009126761,0.039586764,0.006462916,0.054176092,0.016207868,-0.028256992,0.021366961,0.0072328458,0.017095817,-0.016657462,-0.033135086,0.013487824,-0.036574483,-0.027425243,0.00002467499,-0.033989318,0.027739959,0.0032595575,0.010919518,0.037226394,0.013116909,0.031111915,-0.014499411,0.03300021,-0.01907403,0.005684556,0.015645877,0.038867414,0.004799417,0.012161521,0.0111499345,0.014870326,0.0047375984,0.025109833,0.01002033,0.009272879,-0.021928953,-0.003369146,-0.012633595,-0.011414071,0.008047735,0.0019697843,-0.009834872,-0.015398599,0.002360369,0.016893499,0.006687713,-0.0108183585,0.023356415,0.007480122,-0.020018179,0.0069968086,-0.016994659,0.010767779,-0.0037063416,-0.010087769,-0.0025472317,0.016342746,0.009879831,-0.004313294,-0.007935337,-0.018837994,-0.00192061,0.014431972,0.005822244,0.0065528345,0.012363839,0.0030094706,0.014364532,-0.0044818916,0.027065566,-0.007704919,-0.008941303,-0.026863249,-0.016736142,0.023491293,0.0352257,-0.01456685,-0.021232083,-0.0025472317,-0.008694027,0.0064067165,-0.019388746,-0.016230348,0.013049469,0.009812392,0.038642615,0.015769513,0.04520669,-0.023311455,0.0038777494,0.02286186,-0.003970478,-0.0065415944,-0.03772095,0.023221537,0.02061389,-0.03362964,-0.038687576,0.028212031,-0.0026497955,-0.0042458544,0.017837647,0.00153143,0.0115882885,0.019422466,0.0042008953,0.0018925103,-0.022131272,0.012296399,0.00021917713,0.0067495317,0.019591065,0.013746341,-0.035765212,0.024772637,0.029358497,-0.026481094,-0.0037063416,0.058896832,-0.025874142,-0.0053192605,0.029268578,-0.0065247347,-0.040485952,-0.051028933,0.008677167,-0.01690474,-0.019343788,0.0013986592,0.030122807,-0.035203222,-0.025626866,0.0013248977,0.03063984,0.001530025,0.01612919,-0.000315594,-0.004653299,-0.023333935,0.031291753,-0.032663014,0.024030806,-0.0017351523,-0.0010888608,-0.012184001,0.04684771,0.031044474,-0.011925484,0.0035546036,0.038755015,-0.000022874858,0.018545758,-0.013386665,-0.037923265,0.028167073,0.0014836607,0.011166794,-0.03072976,0.012599875,-0.0036220427,-0.022760702,-0.057817806,0.009525776,-0.018017486,-0.0006557752,-0.0014710157,0.016803581,-0.00013496605,-0.023895929,-0.04059835,-0.025896622,0.009896691,-0.007895997,-0.01750045,-0.02300798,0.025019914,0.00090761814,-0.02605398,-0.020827448,-0.03369708,0.00841303,-0.0033831957,0.012195241,0.040530913,-0.010143967,0.042486645,0.018748075,0.032483175,-0.0038721294,0.03365212,-0.021175884,0.018950393,-0.014600569,0.032685492,0.0036248527,0.0047010686,0.012015403,0.0035714633,-0.022423508,0.027694998,0.018512039,0.042688962,0.026998127,-0.018984113,0.035540417,-0.033180047,-0.007283425,0.03754111,0.028032195,0.010110248,0.005119753,-0.0070024286,-0.0064010965,-0.02830195,0.010194547,0.02376105,0.0030740998,-0.001263781,0.003742871,-0.013937418,-0.011981684,0.013993617,0.021647958,-0.010346285,-0.011869285,0.0135777425,-0.020018179,0.0099697495,0.008311871,0.0035377438,0.01530868,0.027380282,0.023244016,0.014971484,-0.010087769,0.010093388,0.0021102824,-0.0099697495,0.006586554,-0.0071485466,0.0018840804,0.033269964,-0.011543329,-0.0048584267,0.034978423,0.007412683,0.021692917,-0.03731631,-0.0060301814,0.004147506,-0.025154792,0.0051815724,-0.011341012,-0.0068563106,0.02297426,-0.027357804,0.022682024,0.020939847,0.012487477,-0.011380351,-0.011903005,-0.024929995,-0.01764657,0.002447478,-0.008581628,0.063482694,0.034011796,0.02904378,-0.002232516,0.019197669,0.04601596,-0.034731146,0.039361965,0.032235898,0.028256992,-0.014420732,0.0052405815,0.018568238,-0.008165753,0.016668702,0.006339277,0.0014864706,0.03072976,0.0129932705]},{"id":"coin-change-ii","name":"Coin Change II","description":"You are given an integer array `coins` representing coins of different denominations (e.g. 1 dollar, 5 dollars, etc) and an integer `amount` representing a target amount of money.\n\nReturn the number of distinct combinations that total up to `amount`. If it's impossible to make up the amount, return `0`.\n\nYou may assume that you have an unlimited number of each coin and that each value in `coins` is unique.\n\n**Example 1:**\n\n```java\nInput: amount = 4, coins = [1,2,3]\n\nOutput: 4\n```\n\nExplanation:\n* 1+1+1+1 = 4\n* 1+1+2 = 4\n* 2+2 = 4\n* 1+3 = 4\n\n**Example 2:**\n\n```java\nInput: amount = 7, coins = [2,4]\n\nOutput: 0\n```\n\n\n**Constraints:**\n* `1 <= coins.length <= 100`\n* `1 <= coins[i] <= 1000`\n* `0 <= amount <= 1000`\n","difficulty":"Medium","concepts":["Tree Maze","2-Dimension DP","Unbounded Knapsack"],"solutions":{"python":"class Solution:\n    def change(self, amount: int, coins: List[int]) -> int:\n        dp = [0] * (amount + 1)\n        dp[0] = 1\n        for i in range(len(coins) - 1, -1, -1):\n            nextDP = [0] * (amount + 1)\n            nextDP[0] = 1\n\n            for a in range(1, amount + 1):\n                nextDP[a] = dp[a]\n                if a - coins[i] >= 0:\n                    nextDP[a] += nextDP[a - coins[i]]\n            dp = nextDP\n        return dp[amount]\n","javascript":"class Solution {\n    /**\n     * @param {number} amount\n     * @param {number[]} coins\n     * @return {number}\n     */\n    change(amount, coins) {\n        let dp = new Array(amount + 1).fill(0);\n        dp[0] = 1;\n        for (let i = coins.length - 1; i >= 0; i--) {\n            const nextDP = new Array(amount + 1).fill(0);\n            nextDP[0] = 1;\n\n            for (let a = 1; a <= amount; a++) {\n                nextDP[a] = dp[a];\n                if (a - coins[i] >= 0) {\n                    nextDP[a] += nextDP[a - coins[i]];\n                }\n            }\n            dp = nextDP;\n        }\n        return dp[amount];\n    }\n}\n","cpp":"class Solution {\npublic:\n    int change(int amount, vector<int>& coins) {\n        vector<int> dp(amount + 1, 0);\n        dp[0] = 1;\n        for (int i = coins.size() - 1; i >= 0; i--) {\n            vector<int> nextDP(amount + 1, 0);\n            nextDP[0] = 1;\n\n            for (int a = 1; a <= amount; a++) {\n                nextDP[a] = dp[a];\n                if (a - coins[i] >= 0) {\n                    nextDP[a] += nextDP[a - coins[i]];\n                }\n            }\n            dp = nextDP;\n        }\n        return dp[amount];\n    }\n};\n","java":"class Solution {\n    public int change(int amount, int[] coins) {\n        int[] dp = new int[amount + 1];\n        dp[0] = 1;\n        for (int i = coins.length - 1; i >= 0; i--) {\n            int[] nextDP = new int[amount + 1];\n            nextDP[0] = 1;\n\n            for (int a = 1; a <= amount; a++) {\n                nextDP[a] = dp[a];\n                if (a - coins[i] >= 0) {\n                    nextDP[a] += nextDP[a - coins[i]];\n                }\n            }\n            dp = nextDP;\n        }\n        return dp[amount];\n    }\n}\n","csharp":"public class Solution {\n    public int Change(int amount, int[] coins) {\n        int[] dp = new int[amount + 1];\n        dp[0] = 1;\n        for (int i = coins.Length - 1; i >= 0; i--) {\n            int[] nextDP = new int[amount + 1];\n            nextDP[0] = 1;\n\n            for (int a = 1; a <= amount; a++) {\n                nextDP[a] = dp[a];\n                if (a - coins[i] >= 0) {\n                    nextDP[a] += nextDP[a - coins[i]];\n                }\n            }\n            dp = nextDP;\n        }\n        return dp[amount];\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def change(self, amount: int, coins: List[int]) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number} amount\n     * @param {number[]} coins\n     * @return {number}\n     */\n    change(amount, coins) {}\n}\n","cpp":"class Solution {\npublic:\n    int change(int amount, vector<int>& coins) {\n        \n    }\n};\n","java":"class Solution {\n    public int change(int amount, int[] coins) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int Change(int amount, int[] coins) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/Mjy4hd2xgrs","embedding":[0.022424009,-0.054979347,0.018495305,0.0034502805,-0.027444646,-0.013001872,-0.0023048774,0.045568466,-0.012123824,0.002727016,0.028120067,-0.048675407,-0.036270157,0.011538458,0.0448255,0.0037711058,0.009911817,-0.0071144444,-0.02652157,0.030371474,-0.028322693,-0.00022478886,0.042281415,-0.005048779,0.057590976,0.0106998095,-0.008166977,-0.031249521,0.004429642,-0.051782347,0.04863038,0.00086116296,0.0015675417,0.011549715,-0.024337703,-0.017324572,-0.043452144,0.025598492,0.03318573,-0.05633019,0.000083416366,-0.034333948,-0.015984986,-0.03482926,-0.023684796,0.016277669,0.0034953086,-0.0020347086,-0.00717073,0.037148207,-0.007975607,0.01066041,0.019823633,-0.019666035,-0.0014577857,-0.030078791,0.0017757969,0.020960594,0.034649145,-0.000018633467,0.027624758,-0.06875795,0.016739206,-0.034424003,-0.009427764,0.016716693,-0.025958717,0.029718565,-0.053133193,-0.010592868,-0.02807504,0.019519694,0.050971843,-0.02652157,-0.045320813,-0.015500934,-0.012529077,-0.02241275,0.022975603,0.027174477,-0.049215745,-0.055159457,-0.0048348955,0.0015731703,0.020757968,-0.03478423,-0.030146332,0.043902427,-0.04336209,-0.09185738,-0.0064784223,-0.0029577853,0.027782356,0.0061125685,0.028277665,-0.0018714817,0.01581613,0.03888179,0.010238271,0.046243887,0.02381988,-0.04601875,0.04048029,0.0016378982,0.020454029,0.044014998,0.01539962,0.014183861,-0.04863038,0.0009941367,-0.000052899257,0.007305814,-0.023999993,-0.01373358,-0.012765475,-0.0013599902,-0.012866788,0.00018521336,0.0026257029,-0.03865665,-0.017020633,-0.030123819,-0.003478423,-0.028232638,-0.026048772,-0.0031125695,-0.00449437,-0.0680375,0.02863789,-0.0029577853,0.058401484,0.016502809,0.012112567,0.019474667,-0.028615376,-0.036022503,0.004851781,0.04331706,0.0033630384,0.045568466,0.037621003,-0.017110689,-0.028097553,-0.020532828,-0.015996244,-0.031136952,-0.042416498,0.0040187608,-0.03372607,-0.01190994,0.03417635,-0.015602247,0.012427764,0.021016879,-0.010007502,-0.023257028,-0.009799247,0.010136957,0.0032842392,0.016457781,-0.031699803,0.015388363,-0.046649143,-0.059347074,0.052592855,-0.0029521568,-0.011161348,-0.012135081,-0.022818005,-0.024022507,-0.001832082,-0.034378976,0.0065403357,-0.025508435,-0.0013184799,-0.04054783,-0.03118198,-0.030326445,-0.011459659,0.037485916,-0.019249525,-0.026093801,-0.03251031,-0.057320807,0.06186865,-0.012078796,-0.014724199,-0.03872419,0.007564726,-0.010778609,0.08168103,-0.02526078,0.03683301,-0.0014690427,-0.049485914,0.00394559,0.066776715,0.023617255,0.010120072,-0.007429641,-0.019969976,0.038679164,0.0054033757,0.002615853,-0.009551592,-0.05705064,0.0077054384,0.009996245,0.01816885,-0.028885545,0.01282176,-0.035864905,-0.01794371,-0.055654768,-0.0088311415,0.012506563,0.051242013,-0.036022503,-0.003914633,0.026048772,0.027894925,0.00073452137,-0.007260786,0.04291181,-0.007654782,-0.020082546,0.00887617,0.029605996,0.017707312,-0.0049699796,-0.02807504,-0.012135081,-0.007834895,-0.007969979,0.023009375,0.026296427,-0.012348965,-0.02241275,-0.03737335,0.011954969,-0.011999996,0.015917445,0.0020586299,-0.01733583,-0.037193235,-0.0071257013,-0.031317063,0.054303925,-0.047864903,0.016784236,-0.012540334,-0.025238266,-0.0030703556,-0.06060786,-0.023392113,-0.026116315,0.025283294,0.0276923,0.005333019,0.020318944,-0.004742025,-0.011397745,-0.07213506,-0.030101305,0.016874291,-0.01843902,-0.006118197,0.019891176,0.009692305,0.0173696,0.026003744,-0.00050867716,-0.0035262653,0.009968102,0.011324574,-0.04149342,0.04646903,0.021748586,0.009996245,-0.051917434,-0.028570348,-0.023797367,0.023347085,0.016829263,0.018427761,0.0025694177,-0.02658911,0.04075046,0.029696051,-0.043384604,0.019857405,0.03534708,0.0024174477,0.0023428698,0.0000092727605,-0.025598492,-0.06439023,-0.025463408,0.018562846,-0.03091181,0.008504688,0.038454022,-0.019587236,0.007896808,-0.014690427,-0.054258894,0.02780487,0.015028139,0.009011255,-0.00477861,0.004865852,0.018833015,0.0080431495,0.04093057,0.019148212,-0.021894928,-0.002803001,-0.029493425,0.016480295,-0.019485923,0.005169792,0.048495296,0.0066247634,0.009568477,0.028480291,0.02553095,-0.01251782,0.034378976,0.032712936,-0.030866783,-0.035932448,0.0081444625,0.0053893044,-0.015455905,-0.08843525,0.040570345,0.0625891,0.016559094,0.032870535,0.024585359,0.021478418,-0.01581613,0.031542204,-0.009855532,-0.0035431508,0.0005544088,0.03190243,-0.008701686,0.011335831,-0.0116848,0.007153844,0.020262659,0.036292672,-0.019058155,0.007035645,0.00424953,-0.02260412,0.006315195,-0.020228887,-0.012135081,-0.028345207,0.021287048,-0.011093806,-0.053268276,-0.010069415,0.031249521,0.0033827382,-0.02404502,-0.0043649143,-0.022446522,0.0023386485,0.022007499,-0.027399616,-0.014926825,-0.00929268,-0.008589116,-0.01126829,0.035752334,0.005983113,-0.039467156,-0.00003064903,0.023864908,0.012135081,0.06213882,0.03687804,0.06781236,0.015692303,-0.00087664137,-0.0028409935,-0.070424,0.07627765,-0.03485177,0.064930566,0.011330203,-0.032487795,-0.00051852706,0.046784226,0.09077671,-0.0073452136,0.011943711,-0.017966224,0.009658534,0.0030478416,-0.010913692,-0.018371476,0.019238269,0.0077279527,0.06466039,0.009472793,-0.007598497,0.021151964,-0.014116319,0.029921193,-0.03172232,0.01042964,-0.004795496,0.0028986859,-0.016559094,-0.018011251,0.015354592,0.005757972,-0.00032803696,0.015320821,0.0014591928,0.030889297,0.0073226998,-0.013328326,-0.034378976,-0.0024906185,-0.04374483,-0.023043144,-0.008397746,0.006168854,0.0033405244,-0.040953085,0.040165093,0.0016716693,0.023076916,0.017797368,-0.069253266,-0.01714446,0.0020459655,0.031159466,0.022772977,-0.03622513,-0.0025004684,-0.023076916,0.0019207312,0.048315182,0.012551591,0.044082537,-0.017437143,0.024630386,0.05587991,-0.028840518,-0.0077448385,0.030821754,0.013227013,0.0147467125,0.037846144,-0.015320821,0.030348958,-0.015028139,0.0140600335,0.03861162,-0.01103752,-0.024270162,0.037328318,-0.0010075044,-0.036022503,0.01190994,0.01573733,-0.011110691,0.020701682,0.012810503,-0.0029268283,0.042393982,0.04980111,-0.016210126,-0.00477861,-0.033861153,-0.025238266,0.00049038447,-0.004013132,-0.0023245772,0.019350838,-0.017110689,-0.0032251398,-0.02188367,-0.018821757,0.0073564705,0.00686679,-0.01915947,-0.009298309,0.0073902416,0.008217634,0.0015787988,-0.017876167,0.02868292,-0.0064390227,0.030821754,-0.045118187,0.019621007,0.02314446,0.006529079,-0.008960598,0.033208247,-0.048225127,0.017088175,0.058356456,-0.010812379,-0.02814258,0.008099435,-0.033140704,0.008701686,0.009636019,0.0025863033,-0.055429626,0.0109024355,0.009112568,-0.00015144226,0.027602244,0.062408987,0.033275787,0.007998122,-0.028390236,-0.0038358339,-0.05898685,-0.017583484,0.012292679,-0.0045506554,0.00040806743,-0.007469041,0.033410873,-0.02575609,-0.0072439,-0.0034699803,-0.011262661,0.017403372,-0.050836757,0.021343334,0.010784237,-0.031699803,-0.0077729807,-0.019519694,-0.011853655,0.038251396,0.028772974,-0.0024835828,-0.0013761722,0.0024779541,-0.0076941815,-0.07528703,-0.041921187,-0.00462664,-0.017437143,0.014712941,0.014307688,0.041966215,0.019485923,0.005136021,-0.046243887,0.014003748,0.002954971,0.002365384,0.0101144435,0.0038414623,-0.026408998,-0.018303934,-0.014228889,-0.015613504,0.027129447,0.009213881,-0.050971843,0.010716694,-0.011026263,-0.060787976,-0.0029634137,-0.010868665,0.009191367,0.009939959,-0.010243899,-0.01949718,-0.030371474,-0.03577485,0.040570345,-0.010547839,0.05268291,0.043024376,-0.011065663,-0.05520449,0.06758722,0.01908067,0.033433385,-0.022142584,0.0047898674,-0.034986857,0.055429626,0.0071763583,-0.016367724,0.010075044,0.031091923,-0.01855159,0.00671482,-0.03699061,-0.00948405,-0.02348217,0.025621006,0.008121949,0.0145553425,-0.00793058,-0.012686675,0.0009997652,-0.004556284,-0.03831894,-0.036360215,0.003706378,0.0637148,0.0063264524,0.03523451,0.0067204484,-0.006213882,0.034243893,0.01741463,0.005333019,0.005493432,-0.029605996,0.042011246,0.021264534,0.029110685,-0.019125698,0.006945589,-0.028390236,0.0084371455,0.014544086,0.027849898,0.037891172,-0.0004597794,0.009405251,-0.038431507,0.027399616,-0.0027002806,0.001636491,-0.03296059,0.016829263,0.043902427,0.028615376,0.005439961,0.03428892,-0.029110685,0.0045309556,0.028480291,0.03694558,-0.03782363,0.004055346,0.0024441832,-0.024270162,-0.045568466,0.0024019692,0.006213882,-0.017966224,-0.022592863,0.003999061,0.01376735,0.03091181,-0.0318574,-0.023639768,0.014499058,0.047009367,-0.009168853,-0.029605996,0.04412757,0.006748591,0.0005924013,-0.0015520634,0.023662282,0.003182926,-0.02586866,-0.03674295,0.026499053,0.03167729,-0.0037936198,-0.02924577,0.0291332,0.006360223,0.00014801239,-0.0063827373,0.02060037,-0.007401499,0.011898683,-0.0021683858,0.021073164,0.015568476,-0.0005498357,0.01695309,0.013463411,0.043452144,0.024292676,0.015061909,-0.049260773,-0.018686675,-0.04387991,0.027984982,-0.016030014,-0.044780474,0.002691838,-0.0064502796,0.022131326,-0.0032898677,0.011729828,0.031879917,-0.00027069644,-0.0025961532,0.024202619,-0.01809005,0.06551593,0.006878047,0.02807504,0.034378976,-0.022919318,-0.009095682,-0.012112567,-0.008082549,-0.02503564,-0.016052527,-0.025621006,-0.012146338,0.022750461,0.018652903,-0.0049868654,-0.009574106,-0.0152420215,0.015692303,-0.025485922,-0.022930576,-0.016896805,-0.042799238,0.012292679,0.016142584,0.003008442,-0.021692302,0.020150088,0.026791736,-0.06704689,0.024292676,0.04619886,-0.019609751,0.043834884,-0.07245026,0.036135074,-0.040187605,0.005921199,0.048135072,-0.011707313,0.020082546,0.02746716,-0.016266411,0.011499058,-0.029876163,0.0012530484,0.02066791,0.0055046887,-0.015883673,-0.020701682,0.0028508434,-0.004947466,-0.042191356,-0.0013747651,-0.018202621,0.017628513,0.014026262,0.010227014,0.017662283,0.010609753,0.020454029,-0.034694172,-0.028367722,-0.012371479,-0.006664163,-0.021433389,-0.021726072,0.027759843,-0.037035637,-0.019902432,-0.0012797839,-0.015804874,0.05916696,-0.032105055,0.04153845,-0.004536584,-0.01612007,-0.036135074,-0.013249527,-0.020003747,0.012596619,0.027377103,0.015793616,-0.029043144,-0.014893054,0.0064390227,0.007986864,0.0027115378,-0.014116319,-0.014217632,0.007305814,0.02343714,-0.023279542,0.0027424945,-0.02719699,0.00109545,-0.0037879914,0.034919314,0.014600371,0.0010265006,0.022649148,0.0033602242,-0.028277665,0.0003391181,0.0015408063,0.0018067537,0.015073166,-0.016502809,0.0140600335,0.022919318,0.019350838,0.0036951208,-0.0116848,0.0625891,0.010378984,0.028502805,-0.0071369587,0.01642401,-0.030439015,0.038183853,0.022243896,0.010232642,0.04590618,0.0059605986,0.0024990612,0.016131327,0.0039596613,0.028480291,-0.04093057,-0.037350833,-0.028953087,0.025440892,-0.0012502342,-0.014881797,0.029651023,-0.023797367,-0.007902437,0.02564352,0.00012910408,-0.024630386,0.018844273,0.007232643,0.03356847,0.022446522,-0.008116321,-0.019733578,0.03888179,0.008031893,-0.0032420254,-0.008251404,-0.02127579,-0.020048775,-0.004373357,-0.03372607,-0.0042579724,0.0070525305,0.02132082,-0.029898677,-0.044487793,-0.024112564,0.015129452,0.02598123,-0.020645397,0.004241087,0.0043227,0.02553095,0.023257028,0.002660881,0.009489678,0.032555338,0.010559096,-0.055744823,0.013339584,-0.008082549,-0.022097554,-0.009607877,-0.013272041,-0.00115666,0.03687804,-0.013418383,0.027917441,-0.021523446,0.02503564,-0.024022507,0.049170718,0.009467164,-0.023234515,-0.005276734,0.004125702,-0.0052176346,-0.013395868,-0.010024387,-0.033140704,0.011470916,-0.061193228,0.009647277,0.04741462,0.000117935,0.033275787,-0.0038470908,0.015196994,0.02530581,-0.008403375,-0.008279547,0.016547838,-0.0048574093,0.0069287033,-0.041921187,-0.015196994,-0.042033758,0.03019136,0.00789118,-0.011932454,0.02314446,0.006686677,-0.010739209,0.046333946,0.0045534694,-0.0098217605,0.027219504,-0.034919314,0.03280299,0.008060035,-0.02803001,0.027039392,-0.02742213,-0.041628506,-0.00059873343,0.00275938,-0.021196991,-0.011392117,-0.029155714,0.051602237,0.014206375,0.010930578,0.038363967,0.0016913691,-0.0493058,-0.011425888,-0.030078791,-0.0047898674,0.031046895,0.010181986,0.037981227,0.027669786,0.013992491,0.005983113,-0.043227006,-0.02071294,-0.0040300176,-0.021388361,-0.019947462,-0.025575977,0.0017293616,0.06065289,-0.047954958,-0.026408998,0.02135459,-0.034604117,0.017504685,-0.03133958,-0.0144540295,-0.017594742,-0.027737327,0.010609753,0.012236394,-0.020949338,-0.00010351193,-0.036472786,0.05466415,0.0038217625,0.007632268,0.0032842392,0.0073789847,0.008105063,0.021332076,0.057681035,0.035437137,0.03804877,-0.02234521,0.0119887395,0.02093808,-0.052142575,0.0010025795,-0.024247648,-0.0130694145,0.024022507,-0.015838645,0.02309943,0.0026200742,-0.0005586302,-0.02006003,0.05025139,-0.0422589,-0.05052156,0.0422589,0.01855159,-0.038679164,0.009067539,0.0055581597,0.0318574,-0.014476543,0.025215752,0.013936206,-0.005439961,-0.044375222,0.017741082,0.0075422116,0.0008210598,0.029515939,-0.03284802,-0.014499058,0.017999995,0.04966603,0.011842398,0.024157591,-0.007857408,0.003303939,-0.027827384,-0.019632265,-0.012697932,0.0379362,-0.01794371,-0.022052526,-0.0058086286,0.010519696,0.005431518,0.0275347,-0.011786113,-0.028210122,-0.0040750457,-0.0023639768,-0.03023639,0.005527203,-0.017538456,-0.009776733,-0.0023090988,0.026093801,-0.044082537,0.010530953,-0.005864914,-0.009664162,0.016570352,-0.002606003,0.002027673,0.025080668,0.003990618,-0.050881784,-0.014251403,-0.0032110685,0.05304314,0.018900556,0.0071594724,-0.022322696,-0.020904308,-0.03831894,0.020363972,0.024247648,-0.0086285155,-0.01373358,-0.041470908,-0.02018386,-0.01434146,-0.010536582,0.0060900543,0.020532828,0.0003568831,0.015996244,-0.017166974,0.0010138365,-0.028120067,0.019283297,0.011943711,0.0088311415,-0.01915947,0.024180105,0.033523444,0.0065853638,0.033388358,0.008487802,-0.000964587,0.009951216,0.0027931512,0.0038977475,-0.029200742,-0.0047054393,0.028367722,0.0029859277,0.008864913,0.00048862555,0.00016859165,0.022300182,0.0009040804,0.031947456,-0.011178233,-0.0233696,0.0061744824,0.007992493,-0.022311438,-0.008679172,-0.012450278,-0.03595496,0.037530947,0.0017856468,0.00538649,-0.01426266,0.046829253,-0.022322696,-0.022637893,0.032105055,-0.023121944,0.013575981,-0.0038442765,0.018990614,-0.009962474,-0.005628516,-0.0006923075,-0.05943713,-0.02807504,-0.06308441,0.012968102,-0.0021515002,-0.021579731,0.011606,-0.022198867,-0.0102157565,-0.009703562,-0.0049671656,-0.006011255,-0.017257031,0.007075045,-0.021061907,0.0115947435,0.05146715,-0.011105062,0.014769226,0.006399623,0.040232632,0.016491553,-0.01509568,-0.0019277668,0.010530953,-0.05916696,-0.0102045,-0.006900561,-0.0011798777,-0.0018067537,-0.040457774,-0.01031707,0.0006518525,0.0026102243,0.024112564,-0.006923075,-0.00047314714,-0.008172605,0.0038105054,-0.0056735445,-0.0027298303,0.0120900525,-0.021287048,0.04536584,0.014926825,0.011437145,0.026926821,0.0027171662,0.0136660375,-0.0072889286,0.008932455,0.025463408,0.0002341111,0.015894929,-0.023842394,-0.0023513127,-0.050566588,0.0078461515,-0.011212004,0.006686677,-0.025350837,-0.015973728,0.003098498,-0.034919314,0.012405249,0.012337708,0.0007788459,-0.017954966,0.018675417,-0.0007303,-0.044487793,-0.037058152,0.03350093,-0.0043001864,0.004438085,0.035369597,0.02852532,-0.00986116,-0.011786113,0.04935083,-0.0063433377,0.018686675,-0.053403363,-0.022592863,-0.022671662,-0.011763599,-0.012472792,-0.01354221,-0.05268291,-0.0015802059,0.038431507,-0.0022274852,0.0020473727,0.004699811,-0.011127576,0.026116315,0.008707315,0.0067542195,0.028052524,0.009455907,-0.019227011,-0.040682916,0.011127576,0.014859282,-0.01619887,0.0131707275,0.010806751,0.05822137,0.025485922,0.00569043,0.0005642587,-0.042281415,-0.023797367,0.007981236,-0.0030140704,-0.02010506,0.024450274,0.02409005,0.025621006,0.0049530943,0.0038414623,0.017696055,0.028457778,0.03068667,0.017606,0.010857408,0.031249521,0.013046901,0.0024948397,0.013902435,-0.03019136,-0.0015534705,-0.009759847,0.00047736854,-0.0033545957,-0.016018758,0.027917441,-0.009996245,-0.03311819,0.00115666,-0.0045084413,0.050476532,0.019879919,0.03417635,0.021343334,0.013181984,0.017617255,0.024720443,-0.012225137,0.024810499,0.018765474,0.028885545,-0.016829263,-0.006664163,0.026971849,0.024720443,-0.02935834,0.02742213,0.056735445,-0.0016210127,-0.014701684,0.038296424,-0.0050065652,-0.0050515933,0.008217634,0.026566597,0.023121944,-0.04264164,0.008881799,-0.019181984,-0.0031041268,-0.018990614,-0.005484989,-0.026791736,0.0347392,0.01073358,0.029403368,-0.015624761,-0.00015935737,-0.015793616,-0.02165853,-0.0043705427,0.009118197,0.028052524,-0.015422135,-0.021118192,0.0070919306,0.009590992,-0.024878042,-0.011628514,0.017437143,-0.0318574,0.019395867,-0.02868292,-0.0069061895,0.027332075,-0.017515942,-0.006039398,-0.013362098,0.033028133,-0.036022503,0.008797371,-0.02154596,-0.019362096,0.007384613,0.008589116,0.032600366,0.022671662,0.013632266,-0.0018954028,0.00394559,0.004395871,-0.011251404,-0.0003287405,-0.022277666,0.02985365,0.003391181,-0.023166973,-0.05007128,0.021827385,-0.0026116315,-0.0010138365,0.0146453995,-0.04601875,0.0012692304,0.028795488,0.017358344,-0.024945583,-0.01809005,0.020397743,0.0033320815,-0.012844274,-0.012371479,0.013587238,-0.009360222,0.03401875,0.00567073,-0.0042467155,-0.029380854,0.034153838,-0.03910693,-0.052142575,0.009410879,-0.02564352,-0.027332075,-0.03190243,0.052322686,-0.019868663,-0.0024610688,0.03156472,-0.00394559,0.007761724,0.011060034,-0.017628513,0.010975607,-0.006247653,-0.010103187,-0.009771104,0.0014310502,-0.020544084,0.021377105,-0.043519687,0.014307688,-0.010227014,0.028187608,0.00076618174,0.030439015,0.025103182,-0.0075928685,0.01407129,0.0009856939,0.0023189487,0.0019277668,0.005780486,0.015984986,0.028795488,0.04248404,0.029786108,-0.014420259,-0.0046181977,0.016761722,-0.017617255,-0.03091181,-0.016716693,0.0050853644,0.015692303,-0.0055215745,-0.0069793602,0.03782363,-0.003042213,-0.029110685,-0.039219502,0.010981235,0.0059718555,0.0014887425,-0.01092495,0.040570345,-0.013722323,-0.026994364,-0.011662286,-0.0025877103,0.027512187,0.0016055342,0.038971845,0.030484043,0.009247652,0.076142564,0.00014827622,0.0026425885,-0.019136954,0.025621006,-0.022840519,0.03687804,-0.03334333,0.007609754,-0.014105061,0.0031660404,0.03861162,0.03527954,-0.04104314,0.043069407,-0.009602249,0.032645393,0.01631144,-0.0130694145,0.008425889,-0.016243897,-0.0097204475,0.0012579734,0.055249516,-0.027332075,0.016694179,-0.0040046894,-0.019632265,-0.012078796,0.0010532361,0.006652906,-0.0066754203,-0.00085975585,0.0026946522,-0.0347392,0.003903376,-0.0122814225,-0.014634142,0.00006292505,-0.022851776,0.0149493385,0.023054402,0.0289756,-0.02841275,0.034221377,0.02530581,-0.0011728421,0.020679168,0.03804877,-0.0123827355,0.036382727,0.010519696,-0.03174483,-0.017178232,-0.002017823,0.020048775,0.028367722,0.0041200737,-0.0066022496,0.041673534,0.009365851,0.014195118,-0.030146332,-0.022637893,0.017684799,-0.0046575973,0.042889293,0.0047476534,0.0025750462,-0.04619886,-0.018855529,-0.015005624,-0.00008359226,0.00031062373,-0.0057101296,-0.008983112,0.014240146,-0.02868292,0.00088789844,-0.010913692,0.002375234,0.023121944,0.021489674,0.018934328,0.02530581,0.030011248,-0.0049165087,0.012112567,0.006180111,-0.03269042,0.015354592,-0.011318946,0.03257785,0.0015548776,0.03579736,0.016581608,-0.031317063,0.0020741082,0.02863789]},{"id":"target-sum","name":"Target Sum","description":"You are given an array of integers `nums` and an integer `target`.\n\nFor each number in the array, you can choose to either add or subtract it to a total sum. \n\n* For example, if `nums = [1, 2]`, one possible sum would be `\"+1-2=-1\"`.\n\nIf `nums=[1,1]`, there are **two different ways** to sum the input numbers to get a sum of `0`: `\"+1-1\"` and `\"-1+1\"`.\n\nReturn the number of **different ways** that you can build the expression such that the total sum equals `target`.\n\n**Example 1:**\n\n```java\nInput: nums = [2,2,2], target = 2\n\nOutput: 3\n```\nExplanation: There are 3 different ways to sum the input numbers to get a sum of 2.\n`+2 +2 -2 = 2`\n`+2 -2 +2 = 2`\n`-2 +2 +2 = 2`\n\n**Constraints:**\n* `1 <= nums.length <= 20`\n* `0 <= nums[i] <= 1000`\n* `-1000 <= target <= 1000`\n","difficulty":"Medium","concepts":["Tree Maze","2-Dimension DP","0 / 1 Knapsack"],"solutions":{"python":"class Solution:\n    def findTargetSumWays(self, nums: List[int], target: int) -> int:\n        dp = {}  # (index, total) -> # of ways\n\n        def backtrack(i, total):\n            if i == len(nums):\n                return 1 if total == target else 0\n            if (i, total) in dp:\n                return dp[(i, total)]\n\n            dp[(i, total)] = backtrack(i + 1, total + nums[i]) + backtrack(\n                i + 1, total - nums[i]\n            )\n            return dp[(i, total)]\n\n        return backtrack(0, 0)\n","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @param {number} target\n     * @return {number}\n     */\n    findTargetSumWays(nums, target) {\n        const dp = new Map();\n        return this.backtrack(0, 0, nums, target, dp);\n    }\n\n    /**\n     * @param {number} i\n     * @param {number} total\n     * @param {number[]} nums\n     * @param {number} target\n     * @param {Map} dp\n     * @return {number}\n     */\n    backtrack(i, total, nums, target, dp) {\n        if (i === nums.length) {\n            return total === target ? 1 : 0;\n        }\n        const key = `${i}-${total}`;\n        if (dp.has(key)) {\n            return dp.get(key);\n        }\n\n        const ways =\n            this.backtrack(i + 1, total + nums[i], nums, target, dp) +\n            this.backtrack(i + 1, total - nums[i], nums, target, dp);\n        dp.set(key, ways);\n        return ways;\n    }\n}\n","cpp":"class Solution {\npublic:\n    int findTargetSumWays(vector<int>& nums, int target) {\n        unordered_map<long, int> dp; // Changed to long for key\n        return backtrack(0, 0, nums, target, dp);\n    }\n\n    int backtrack(int i, int total, vector<int>& nums, int target, unordered_map<long, int>& dp) {\n        if (i == nums.size()) {\n            return total == target ? 1 : 0;\n        }\n        long key = static_cast<long>(i) << 32 | (total & 0xffffffffL); // Combine i and total into a single key\n        if (dp.find(key) != dp.end()) {\n            return dp[key];\n        }\n\n        int ways = backtrack(i + 1, total + nums[i], nums, target, dp) \n                + backtrack(i + 1, total - nums[i], nums, target, dp);\n        dp[key] = ways;\n        return ways;\n    }\n};\n","java":"class Solution {\n\n    public int findTargetSumWays(int[] nums, int target) {\n        Map<String, Integer> dp = new HashMap<>();\n        return backtrack(0, 0, nums, target, dp);\n    }\n\n    private int backtrack(int i, int total, int[] nums, int target, Map<String, Integer> dp) {\n        if (i == nums.length) {\n            return total == target ? 1 : 0;\n        }\n        String key = i + \",\" + total; // Use a composite key of \"i,total\"\n        if (dp.containsKey(key)) {\n            return dp.get(key);\n        }\n\n        int ways = backtrack(i + 1, total + nums[i], nums, target, dp)\n                + backtrack(i + 1, total - nums[i], nums, target, dp);\n        dp.put(key, ways);\n        return ways;\n    }\n}\n","csharp":"public class Solution {\n    \n    public int FindTargetSumWays(int[] nums, int target) {\n        Dictionary<Tuple<int, int>, int> dp = new Dictionary<Tuple<int, int>, int>();\n        return Backtrack(0, 0, nums, target, dp);\n    }\n\n    private int Backtrack(int i, int total, int[] nums, int target, Dictionary<Tuple<int, int>, int> dp) {\n        if (i == nums.Length) {\n            return total == target ? 1 : 0;\n        }\n        var key = Tuple.Create(i, total);\n        if (dp.ContainsKey(key)) {\n            return dp[key];\n        }\n\n        int ways = Backtrack(i + 1, total + nums[i], nums, target, dp)\n                + Backtrack(i + 1, total - nums[i], nums, target, dp);\n        dp[key] = ways;\n        return ways;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def findTargetSumWays(self, nums: List[int], target: int) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @param {number} target\n     * @return {number}\n     */\n    findTargetSumWays(nums, target) {}\n}\n","cpp":"class Solution {\npublic:\n    int findTargetSumWays(vector<int>& nums, int target) {\n        \n    }\n};\n","java":"class Solution {\n    public int findTargetSumWays(int[] nums, int target) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int FindTargetSumWays(int[] nums, int target) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/g0npyaQtAQM","embedding":[-0.0014625116,-0.029974425,0.05908598,-0.03100165,-0.020801306,-0.01355937,-0.04195187,0.04269147,-0.04511572,0.044745922,0.004494109,-0.002051882,-0.014278428,-0.015500825,0.02981007,0.014042166,-0.0062301196,0.0026528086,0.017555276,0.04310236,0.010282522,0.053128075,0.018972846,-0.016969757,0.080657706,-0.005598376,0.0049127038,0.024571221,-0.006158214,-0.008823862,0.04564988,-0.015428919,-0.015747359,0.010755045,-0.0012467944,0.0083205225,0.010457151,0.017555276,-0.027899431,-0.03264521,0.012121255,-0.007231664,0.008757093,-0.00035214558,-0.0042886646,-0.00006733139,0.011114574,0.009619962,0.06972803,0.012634868,0.032111052,0.03743208,0.013579914,0.030056603,-0.021469003,-0.0548949,-0.030714028,0.005582968,-0.0001937282,0.02547518,0.029686803,-0.04121227,0.013672365,-0.0034232272,0.0110837575,0.0063944757,0.024735577,-0.018305149,-0.027673442,-0.04564988,-0.026358593,0.027159829,0.020133609,-0.019239925,0.03693901,0.039609797,0.012408878,-0.00009983343,0.026214782,-0.013898354,0.028659577,-0.04059593,0.020554772,0.0036800336,0.0070467633,-0.017966164,-0.012634868,-0.028865023,-0.04123281,-0.036137775,-0.032439765,-0.025947703,-0.0039265677,0.037411533,0.019075569,0.015428919,0.0111248465,0.036425397,0.031207096,0.047868684,0.021427913,0.0015010325,0.0028608216,-0.004142285,0.044745922,-0.022866027,0.030118236,-0.011525464,0.004792005,-0.0030251776,0.013066302,0.03465857,0.0025244055,-0.02323583,0.030898929,0.0026553767,-0.016127432,-0.0014522393,0.025125923,0.016815674,-0.008839271,-0.032891743,0.023050928,-0.015500825,-0.015192658,0.0189523,0.02022606,-0.031248184,0.042013504,-0.0052748,0.036322676,-0.011165936,0.009435061,0.034227137,-0.033898424,-0.06697507,0.015326197,0.047170173,0.018305149,0.020390416,0.05103254,0.017267652,-0.002221374,0.030529127,0.008392428,-0.044540476,-0.028330866,0.06467409,-0.012963579,-0.0013482329,0.023092018,-0.019414552,0.014596867,-0.0020685743,0.0056600096,-0.070221104,-0.016219882,-0.0043759784,-0.0033128005,0.0016525482,0.0065126065,-0.03821277,0.0044067954,-0.0017873715,0.033549167,0.03854148,-0.0362405,0.011268659,-0.02045205,-0.044252854,0.018880395,-0.027262552,-0.0037493713,-0.01675404,0.052059762,-0.032953378,-0.03858257,-0.06455082,-0.06212657,0.006194167,-0.06040083,-0.015531642,-0.020061703,-0.033364266,0.03313828,0.015870627,0.04803304,-0.04971769,-0.003076539,-0.030837294,0.06689289,0.001976124,0.069974564,-0.015541914,-0.051402338,-0.014165433,0.03118655,0.06155132,-0.008834135,-0.01890094,-0.03488456,-0.005885999,0.039650884,0.029933337,-0.03346699,-0.01305603,0.034001146,0.040287763,0.008433517,-0.0071340776,0.0246534,-0.015459736,0.024858845,-0.03552144,-0.027159829,0.031802885,-0.014072983,-0.013569642,0.0010137426,0.040287763,0.009034444,0.008926585,-0.022085337,0.0060709,0.010349291,0.027385818,-0.017945621,0.011864449,0.0012544985,0.0111453915,-0.010539329,-0.011422742,0.010518784,-0.0020441778,-0.025372457,-0.027242007,0.00369801,-0.047498886,-0.024632856,0.0019542954,0.036610298,-0.00023224915,0.028002154,-0.025454635,-0.05119689,0.0022316463,-0.026214782,0.042444937,-0.025228646,0.007955858,0.04963551,0.018181883,0.009024171,-0.013477192,0.0061479416,0.02255786,0.0014920443,-0.031453628,-0.002791484,0.016969757,-0.0027632352,-0.0042552794,-0.044047408,-0.052388474,-0.014237339,-0.02744745,-0.02510538,0.038520936,0.046142947,0.04881373,-0.01725738,-0.03167962,0.03825386,-0.0485672,-0.008834135,-0.0289472,0.0050334022,-0.02629696,0.03186452,-0.10370863,-0.008592737,-0.035891242,0.026605127,0.016476689,0.048937,-0.034946196,-0.012912218,0.06327706,-0.020102793,-0.036630843,-0.04203405,0.012223978,-0.033302635,-0.00963537,-0.0010355712,-0.0034771566,-0.00844379,-0.03196724,0.018500322,-0.016415056,-0.019640543,-0.035788517,0.014956396,-0.016497234,-0.030549672,-0.04589641,0.019198835,0.04355434,-0.025023201,0.023297463,-0.024612311,0.0006824626,-0.0040164497,-0.009440198,0.009183391,-0.07868543,0.030344225,0.0049846093,0.018202428,0.02816651,-0.0073857475,0.02954299,0.044211764,0.03480238,0.034822926,0.024673944,0.018736584,0.009142302,0.04803304,-0.0036029916,-0.011864449,-0.040020686,-0.002300984,0.05021076,-0.10190072,0.014596867,0.05168996,-0.01406271,0.019845987,0.044745922,0.0111864805,0.0044581564,0.033035554,-0.035644706,-0.005048811,-0.03459694,-0.0082588885,0.0051746457,0.040986277,-0.0041731014,0.026851662,-0.013302564,0.020986207,0.017565547,-0.013682637,0.023030384,-0.019229652,-0.035726886,0.0035387902,-0.013733998,-0.023482364,0.019322103,0.019013934,-0.037781335,0.0027837798,0.035500895,-0.0021610246,-0.027159829,0.0020775625,0.05386768,0.020565044,0.049265712,-0.020801306,-0.016784856,-0.015274836,0.008608146,0.029275913,-0.007565512,-0.0034386357,-0.014083255,-0.033117734,-0.001027867,-0.046101857,0.012121255,0.015336469,0.031700164,-0.0071597584,-0.036035053,-0.0092552975,-0.04363652,-0.013888082,-0.03537763,0.03313828,0.009553192,0.0057421876,0.01292249,0.015028302,0.07716514,-0.01703139,-0.020698583,0.0056446013,-0.013980532,0.0036363765,0.016363693,0.015377558,0.00979459,0.0038084367,0.041376624,0.041623157,-0.008751957,-0.01639451,0.006569104,0.02999497,0.013374469,0.04885482,0.0070416275,-0.012943035,0.014966669,-0.003577311,-0.03981524,-0.02469449,0.03278902,0.031166006,-0.014093527,-0.020534229,-0.027961064,-0.021284102,-0.020904029,0.004227031,-0.023276918,-0.016230155,0.013579914,-0.0037519394,0.031885065,-0.088012636,0.03683629,-0.013364197,0.06545477,0.007072444,-0.03406278,-0.012614323,-0.0493068,-0.03843876,0.015141296,0.018818762,-0.015778176,-0.0088084545,0.043389983,0.050827093,0.005916816,0.033302635,-0.012521872,0.011946627,0.012039077,-0.030426404,-0.024530133,0.036425397,-0.002095539,-0.020883484,-0.0051566693,0.005788413,-0.00016010265,-0.0493068,-0.029768981,-0.021284102,0.0013482329,-0.004103764,-0.02181826,0.016897852,0.023092018,0.016805401,0.013795632,0.0011492079,0.026317505,-0.026091514,-0.0038033004,-0.013456647,0.07108397,0.034124415,-0.00058583927,-0.031556353,-0.035583075,-0.022578405,0.023461819,-0.012367789,-0.024221966,0.008315386,-0.002917319,0.03963034,-0.02259895,-0.043225627,0.012378061,0.030303137,-0.0060195383,0.016928667,-0.010785863,0.0033461854,0.008664642,-0.0023767417,0.011114574,0.028474677,-0.073261686,0.014340061,0.0120185325,0.044622652,-0.017267652,-0.0015870626,-0.009121758,-0.0052696643,0.08258889,-0.04803304,-0.025495725,-0.007360067,0.018048342,0.0020300534,0.024160331,-0.035069462,-0.03377516,0.0078942245,-0.011782271,-0.009090941,0.020893756,0.03246031,0.019044751,-0.010744774,-0.013600459,-0.047868684,-0.036219954,-0.07289188,0.017164929,-0.016127432,0.017883986,-0.009239889,0.018500322,-0.021243013,0.037288267,0.017462825,-0.019568637,-0.006774549,-0.019188562,-0.00028601795,0.016353423,-0.013959988,-0.03936326,-0.0037545073,0.0082178,0.020842396,0.029933337,-0.007190575,-0.01880849,-0.008582464,-0.041890234,-0.013980532,-0.024920478,-0.00730357,-0.062989436,-0.030241504,0.021982614,0.006990266,-0.002096823,-0.026646215,-0.027611807,0.0063893395,-0.011874721,0.013775087,0.0018451529,0.0068515907,0.0066307373,0.006533151,0.0048716147,0.014268155,-0.0011119711,0.008171575,-0.04310236,0.044622652,0.002303552,-0.0025706305,-0.006122261,-0.07363149,0.01520293,-0.021530636,0.005251688,0.009280978,-0.0328712,-0.019897347,-0.0032280546,-0.026481861,0.018849578,0.025701169,-0.014894762,0.02155118,-0.014915307,0.026399683,0.020195244,-0.03601451,-0.024879389,-0.041438255,-0.018613316,0.034432583,-0.0065126065,0.011011852,0.012480783,-0.031289272,-0.027899431,-0.03880856,0.011453559,0.004938384,0.020246604,-0.0056446013,0.040308308,-0.028371954,-0.015747359,-0.014771495,-0.0059424965,-0.027509086,-0.01255269,-0.0032280546,0.008022627,-0.0032948242,0.01141247,0.043472163,-0.0059476327,0.0148023125,0.0023587653,0.004938384,0.0012692648,-0.040431574,0.038562026,-0.010734501,0.017206019,-0.07515178,-0.0244685,0.023050928,-0.009625098,-0.024550678,0.005721643,-0.019096112,-0.02711874,0.003780188,-0.021756625,0.031227639,0.04057539,-0.0041397167,-0.04014395,0.019383736,0.003412955,-0.035439264,0.00748847,0.030529127,-0.023502909,0.008346203,0.024776667,0.0064458367,-0.022105882,0.013508009,-0.01374427,-0.013569642,-0.016877307,0.017308742,-0.010359564,-0.024632856,-0.009090941,0.016682133,-0.0030868112,0.019640543,-0.030714028,0.018366782,-0.010529056,0.032809567,-0.011792543,-0.028741755,0.011361108,0.0078736795,0.0061068526,-0.004106332,0.036322676,0.028228143,0.018151065,-0.024715032,-0.010385245,0.022208605,-0.025043745,-0.016651317,0.026605127,-0.014391422,0.023112562,0.009804863,0.008274297,-0.011052941,0.005480245,0.0059322244,-0.014216794,-0.011433014,0.007930177,0.037308812,-0.025125923,0.030714028,0.028700667,-0.03383679,-0.022434594,-0.021222468,-0.023852164,0.00091551425,0.0036954419,-0.0416437,-0.025536813,0.005829502,0.009799726,0.005870591,0.0018297445,-0.025701169,0.033117734,-0.0043913866,-0.035993963,-0.032994468,0.037103366,-0.0010426333,-0.001027867,-0.003651785,-0.05493599,-0.04733453,0.02611206,-0.02510538,0.021797715,0.0048407977,-0.0012673389,-0.00091744034,-0.0069337687,0.05703153,0.0023151084,0.000823064,-0.043431073,-0.034309316,0.025146468,-0.0028145965,-0.03903455,-0.009126894,0.048649374,-0.03975361,-0.024982112,-0.0185825,-0.011443286,0.016260972,-0.02584498,0.020195244,0.035850152,-0.022845484,-0.0040575387,-0.070508726,0.013189569,-0.04429394,0.002706738,0.029830614,-0.0008834135,0.04486919,0.03757589,-0.00739602,-0.0023151084,0.0073754755,0.037308812,0.009830543,0.015993893,-0.0082178,0.0010509796,0.022763306,0.019774081,-0.032254864,0.045526613,-0.015336469,0.031494718,0.021345735,0.01292249,0.00846947,-0.00844379,0.0043811146,-0.027529629,-0.054812726,-0.009697004,-0.0055264705,0.0050796275,0.005464837,0.01990762,0.0029994969,0.011022124,0.02625587,-0.0091988,0.03428877,0.0031895337,0.026194237,-0.036363766,-0.0021006751,0.025351914,-0.04223949,0.01109403,0.03776079,0.028659577,0.0042039184,-0.04014395,-0.003664625,-0.029501902,-0.0074987425,-0.010359564,-0.005331298,0.001727022,0.031987786,-0.022208605,0.014750951,-0.01479204,0.005223439,-0.002466624,-0.016445871,0.045485523,-0.0035516303,-0.018459233,0.00287623,-0.0002587323,0.011792543,0.015069391,0.03843876,-0.010857768,-0.014750951,0.008192119,-0.0040986277,0.019394008,0.027735075,0.0050411066,0.021160835,0.031289272,0.0026374,0.0064971983,0.025783347,0.00461224,-0.027837798,0.023872709,0.05021076,0.041972414,0.04086301,0.015449464,-0.007760685,0.04269147,-0.027673442,0.016764311,-0.027159829,-0.0129738515,-0.0012249658,0.03932217,-0.017051935,-0.0369801,0.018644134,-0.037678614,-0.028474677,0.0038520938,0.011361108,-0.007514151,-0.009774046,0.024386322,0.028187053,0.016332878,-0.01785317,-0.0035259498,0.014453055,-0.01305603,0.0051489654,-0.002262463,-0.02405761,0.021078657,-0.011011852,-0.0069337687,-0.0041371486,-0.035829607,0.017575819,0.018253788,-0.013487464,-0.045814235,0.01593226,-0.014730406,0.0064407005,-0.00213406,0.009619962,-0.026995473,0.0530459,-0.008839271,-0.0075449673,0.03570634,0.007514151,-0.052429564,0.019928165,0.013199842,-0.02812542,-0.012501328,-0.010570145,-0.05912707,-0.014360606,0.0066050566,-0.015747359,0.0017514186,0.027693985,0.019209107,0.039198905,-0.04228058,-0.019445369,-0.015172113,0.03022096,0.025988793,0.0070056743,0.010734501,0.010621507,0.011895265,0.0017334422,-0.041479345,0.0071597584,0.011730909,0.04359543,-0.0024062744,0.013384742,0.015952805,-0.01241915,0.0034001148,0.030036058,0.026584582,0.008603009,-0.04355434,0.013497736,-0.032727387,0.014966669,0.008335931,-0.006117125,-0.0050719236,-0.011843904,0.009907585,0.05842856,0.0021147993,0.024263054,0.013703181,-0.015028302,-0.008418109,-0.004034426,0.009250161,0.04889591,-0.012614323,-0.039281085,0.035439264,-0.0011286634,-0.022804394,-0.006872135,0.021592269,-0.00510274,-0.024345232,0.000054611453,0.02095539,0.013353925,-0.0139497155,-0.027776163,-0.013323108,-0.011381653,-0.010354428,-0.013384742,-0.0055778315,0.013004668,0.01557273,0.0377197,-0.03278902,-0.01314848,0.011237841,-0.02744745,-0.02734473,0.0138059035,0.04384196,0.00015464552,-0.050580557,0.019332374,0.017308742,-0.010878312,-0.005305617,-0.04803304,0.0027478267,0.003862366,0.0015446895,0.0053929314,-0.016671862,0.04647166,0.014206521,-0.04384196,0.025598446,-0.03936326,-0.00016756608,-0.013138208,-0.0001132355,0.032994468,0.036815744,0.039096184,0.008479742,-0.0027632352,-0.043225627,-0.009378565,0.0070467633,-0.046923637,0.033343725,-0.029378634,-0.007057036,0.03373407,-0.05263501,0.011730909,0.010570145,0.01812025,-0.035254363,0.045403346,-0.003210078,-0.010950219,-0.022249693,0.0063893395,-0.00945047,-0.03478184,0.0087879095,0.003659489,-0.0049846093,0.035726886,0.00041570512,0.011320019,-0.0451979,-0.0017424304,0.017236836,-0.015336469,0.020565044,-0.02775562,-0.009404245,-0.0055521512,0.013898354,0.023441274,0.012614323,0.011730909,-0.0011029828,-0.01583981,-0.018366782,0.0060298108,0.031946696,-0.025043745,-0.013980532,0.030919472,0.009219345,-0.012203433,0.00091744034,-0.02775562,0.013323108,-0.012860857,-0.029049924,-0.019599453,0.0078069097,-0.03911673,0.03317937,-0.014134616,0.010441742,-0.011165936,0.0092552975,0.0006301383,-0.005413476,0.02140737,0.044129584,0.007960994,-0.005624057,0.008818727,-0.022064792,-0.02771453,0.03063185,-0.029296456,-0.009060125,-0.048649374,-0.033220455,-0.039917964,-0.037165,-0.00031474815,-0.019763809,-0.037411533,0.016589684,-0.019250195,-0.026748938,-0.012429423,-0.01077559,0.023050928,0.02935809,0.0031022194,0.00026370792,-0.0119979875,-0.0058243657,0.021469003,0.02547518,-0.009460743,-0.02255786,-0.015706271,0.009096078,0.018377054,0.026687305,0.029768981,0.03059076,-0.0033538896,-0.0006863147,0.00076785067,-0.021427913,0.011802815,0.006820774,-0.02707765,0.012090438,0.00922448,-0.0043348894,-0.011884993,-0.004142285,-0.021222468,0.026091514,-0.020369872,-0.014596867,0.0018631293,0.021653904,-0.030693483,0.031453628,-0.032583576,-0.0676325,0.035500895,-0.01424761,-0.0060965805,-0.025167013,0.0058140936,-0.026564037,0.021715537,0.040123407,-0.055223614,-0.018181883,-0.020308238,0.021448458,-0.017637454,0.035090007,-0.03829495,-0.042444937,-0.05016967,-0.03455585,-0.002960976,0.003246031,-0.0046327845,-0.019938437,-0.009979491,0.019188562,0.020647222,-0.002053166,-0.0038315493,-0.0147406785,0.026379138,0.003284552,0.0246534,0.059003804,0.0050385385,0.0028223007,0.031248184,-0.028002154,0.027262552,0.002791484,-0.022722216,0.021325191,-0.019342646,-0.005015426,-0.0008063716,0.010421198,-0.0129533075,-0.0057781404,0.016230155,-0.0069645853,0.025927158,0.02816651,-0.016579412,-0.00094825705,0.025351914,-0.017904531,-0.00992813,-0.012265067,0.0033513214,-0.0082794335,0.023276918,-0.005220871,-0.004316913,-0.0040883557,0.02689275,-0.02469449,0.009019036,0.004643057,-0.031843975,0.011515192,0.018387327,-0.011135119,0.0070364913,-0.043759786,0.025988793,0.026214782,0.0019440233,-0.014021621,-0.0024499316,-0.013014941,-0.0010747341,-0.009717548,0.013477192,-0.026728394,-0.0210992,-0.008818727,-0.0111248465,-0.0013379606,-0.017000573,0.013138208,-0.047416706,-0.006076036,0.00837702,0.016856762,-0.019034479,0.0026219918,0.008649235,-0.02588607,-0.02067804,-0.015993893,-0.014812584,-0.028988289,-0.023954887,-0.023831619,-0.00657424,-0.010816679,-0.011525464,0.037493713,0.022619495,-0.007996947,0.000090684705,-0.0010869325,0.03708282,0.049471155,0.03839767,0.009445334,-0.0072932974,-0.020626677,-0.046636015,-0.007611737,0.041253354,-0.007514151,0.0032973923,0.0029378636,0.035069462,-0.033898424,-0.0037211226,-0.017770993,-0.016291788,-0.01141247,0.0060606273,0.009311794,-0.02245514,-0.0070056743,0.022126427,-0.00461224,0.008587601,-0.0110837575,-0.0014907602,-0.03192615,0.051484518,0.036610298,-0.0030945153,0.0058603184,0.0110837575,-0.035069462,-0.047950864,-0.030898929,0.04160261,0.0011832347,0.015274836,0.016558867,-0.0146585,0.0054186117,-0.004655897,-0.005315889,-0.0027503949,0.0032537351,0.04156152,-0.0039471122,0.032131597,0.0023677535,-0.011864449,0.05842856,0.0147406785,-0.008510559,-0.018890668,0.04363652,0.016836219,-0.008032899,0.012655412,0.021201923,0.011011852,-0.024304144,0.009049852,0.007930177,0.011484375,-0.04881373,0.023523452,0.020616405,0.0025809028,0.021982614,-0.006743732,0.017216291,-0.0059835855,0.012799223,-0.0129533075,-0.0023292326,-0.018839307,-0.022866027,0.0074114283,0.0009013899,0.00493068,-0.0073908838,0.009912721,0.018459233,-0.0049486565,-0.0073446585,0.0058192294,0.012912218,0.012860857,0.00018923411,-0.02958408,0.0379046,0.0031766933,-0.014206521,-0.029666258,-0.018325694,-0.02812542,0.0071186693,-0.017134113,-0.015511097,0.050827093,-0.0003826413,0.008638962,-0.023030384,-0.009835679,0.00063045934,0.0077041877,-0.04388305,-0.024201421,0.013477192,0.023359096,0.018726312,0.035788517,0.01127893,-0.027324185,0.031885065,0.0033615937,-0.013631276,0.04131499,-0.0060657635,0.07926068,0.02510538,-0.01972272,-0.03377516,0.032891743,0.0036466487,-0.026050426,0.02652295,0.012686228,-0.009845952,0.0035028371,0.05390877,0.007057036,-0.023975432,0.052676097,0.02479721,0.012491056,0.035583075,0.02300984,-0.03533654,0.042650383,-0.019845987,0.0029044787,-0.022866027,0.016630773,-0.0548949,-0.04934789,0.005834638,-0.014524962,-0.03063185,-0.018469505,0.04121227,-0.02360563,-0.008032899,0.03634322,0.008186983,-0.009650779,0.025372457,0.01602471,0.022270238,0.014011349,-0.012347245,0.012367789,-0.008264025,0.012881401,-0.016733496,-0.035069462,-0.005952769,-0.016795129,0.0032537351,0.007570648,-0.0054083397,0.0066820984,-0.0026425363,-0.00853624,0.055798862,0.02136628,0.0375348,-0.011607642,-0.00986136,-0.015993893,0.0032819838,0.03644594,-0.04314345,-0.015439192,0.032624666,-0.025968248,-0.025290279,0.0029404315,-0.005968177,0.01712384,0.01781208,0.015131024,-0.017996982,-0.016815674,0.020493139,-0.053456787,0.0027683713,0.042650383,0.005226007,0.015942533,0.021243013,-0.016240427,-0.034227137,-0.03794569,-0.01890094,0.027961064,-0.0065896483,0.003043154,0.014278428,0.009096078,0.047498886,-0.039650884,0.02771453,-0.029481357,-0.01039038,-0.005012858,-0.010559873,-0.025351914,-0.027262552,-0.0017385783,0.0092963865,0.015973348,0.028330866,-0.028454132,0.016897852,0.0034437717,0.018685224,0.046307303,-0.0022637472,0.013508009,-0.004481269,0.016723223,0.03644594,0.010693412,0.014298972,0.019137202,0.0119158095,-0.03757589,-0.019619998,0.01739092,0.010323611,0.031309817,-0.007683643,0.003292256,0.0029327273,-0.027591264,-0.024899933,-0.04004123,-0.002098107,-0.03761698,0.007596329,0.027858341,0.025598446,-0.0036389446,0.011617915,0.045074634,0.04437612,0.02282494,0.031248184,-0.024447955,0.008941993,0.012850584,0.0015562458,0.0049512247,-0.00402929,0.04232167,-0.0017925076,0.0016486961,0.0008789194,0.033158824,0.014699589,0.021797715,0.041869693,0.01781208,0.011556281,0.0018413007,0.024591766,-0.019250195,0.007812046,-0.04569097,-0.024180876,0.03223432,0.023543997,0.041766968,0.06701616,-0.0105496,-0.019527547,0.012758135,-0.0039650886,-0.026481861,0.038972918,0.024324687,0.026646215,0.03829495,-0.00958401,0.027200919,-0.015028302,-0.013004668,-0.025988793,-0.0035182456,0.008094533,-0.009019036,0.0048639104,-0.015357014,0.023276918,0.017493641,-0.016918395,0.005505926,0.003574743]},{"id":"interleaving-string","name":"Interleaving String","description":"You are given three strings `s1`, `s2`, and `s3`. Return `true` if `s3` is formed by **interleaving** `s1` and `s2` together or `false` otherwise.\n\n**Interleaving** two strings `s` and `t` is done by dividing `s` and `t` into `n` and `m` substrings respectively, where the following conditions are met\n\n* `|n - m| <= 1`, i.e. the difference between the number of substrings of `s` and `t` is at most `1`.\n* `s = s1 + s2 + ... + sn`\n* `t = t1 + t2 + ... + tm`\n* **Interleaving** `s` and `t` is  `s1 + t1 + s2 + t2 + ...` or `t1 + s1 + t2 + s2 + ...`\n\nYou may assume that `s1`, `s2` and `s3` consist of lowercase English letters.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/fc30feb8-d898-4b9f-3667-4e2c98a1a900/public)\n\n```java\nInput: s1 = \"aaaa\", s2 = \"bbbb\", s3 = \"aabbbbaa\"\n\nOutput: true\n```\n\nExplanation: We can split `s1` into `[\"aa\", \"aa\"]`, `s2` can remain as `\"bbbb\"` and `s3` is formed by interleaving `[\"aa\", \"aa\"]` and `\"bbbb\"`.\n\n**Example 2:**\n\n```java\nInput: s1 = \"\", s2 = \"\", s3 = \"\"\n\nOutput: true\n```\n\n**Example 3:**\n\n```java\nInput: s1 = \"abc\", s2 = \"xyz\", s3 = \"abxzcy\"\n\nOutput: false\n```\n\nExplanation: We can't split `s3` into `[\"ab\", \"xz\", \"cy\"]` as the order of characters is not maintained.\n\n\n**Constraints:**\n* `0 <= s1.length, s2.length <= 50`\n* `0 <= s3.length <= 100`\n","difficulty":"Medium","concepts":["Tree Maze","2-Dimension DP"],"solutions":{"python":"class Solution:\n    def isInterleave(self, s1: str, s2: str, s3: str) -> bool:\n        if len(s1) + len(s2) != len(s3):\n            return False\n\n        dp = [[False] * (len(s2) + 1) for i in range(len(s1) + 1)]\n        dp[len(s1)][len(s2)] = True\n\n        for i in range(len(s1), -1, -1):\n            for j in range(len(s2), -1, -1):\n                if i < len(s1) and s1[i] == s3[i + j] and dp[i + 1][j]:\n                    dp[i][j] = True\n                if j < len(s2) and s2[j] == s3[i + j] and dp[i][j + 1]:\n                    dp[i][j] = True\n        return dp[0][0]\n","javascript":"class Solution {\n    /**\n     * @param {string} s1\n     * @param {string} s2\n     * @param {string} s3\n     * @return {boolean}\n     */\n    isInterleave(s1, s2, s3) {\n        if (s1.length + s2.length !== s3.length) {\n            return false;\n        }\n\n        const dp = Array.from({ length: s1.length + 1 }, () =>\n            Array(s2.length + 1).fill(false),\n        );\n        dp[s1.length][s2.length] = true;\n\n        for (let i = s1.length; i >= 0; i--) {\n            for (let j = s2.length; j >= 0; j--) {\n                if (i < s1.length && s1[i] === s3[i + j] && dp[i + 1][j]) {\n                    dp[i][j] = true;\n                }\n                if (j < s2.length && s2[j] === s3[i + j] && dp[i][j + 1]) {\n                    dp[i][j] = true;\n                }\n            }\n        }\n        return dp[0][0];\n    }\n}\n","cpp":"class Solution {\npublic:\n    bool isInterleave(string s1, string s2, string s3) {\n        if (s1.length() + s2.length() != s3.length()) {\n            return false;\n        }\n\n        vector<vector<bool>> dp(s1.length() + 1, vector<bool>(s2.length() + 1, false));\n        dp[s1.length()][s2.length()] = true;\n\n        for (int i = s1.length(); i >= 0; i--) {\n            for (int j = s2.length(); j >= 0; j--) {\n                if (i < s1.length() && s1[i] == s3[i + j] && dp[i + 1][j]) {\n                    dp[i][j] = true;\n                }\n                if (j < s2.length() && s2[j] == s3[i + j] && dp[i][j + 1]) {\n                    dp[i][j] = true;\n                }\n            }\n        }\n        return dp[0][0];\n    }\n};\n","java":"public class Solution {\n    public boolean isInterleave(String s1, String s2, String s3) {\n        if (s1.length() + s2.length() != s3.length()) {\n            return false;\n        }\n\n        boolean[][] dp = new boolean[s1.length() + 1][s2.length() + 1];\n        dp[s1.length()][s2.length()] = true;\n\n        for (int i = s1.length(); i >= 0; i--) {\n            for (int j = s2.length(); j >= 0; j--) {\n                if (i < s1.length() && s1.charAt(i) == s3.charAt(i + j) && dp[i + 1][j]) {\n                    dp[i][j] = true;\n                }\n                if (j < s2.length() && s2.charAt(j) == s3.charAt(i + j) && dp[i][j + 1]) {\n                    dp[i][j] = true;\n                }\n            }\n        }\n        return dp[0][0];\n    }\n}\n","csharp":"public class Solution {\n    public bool IsInterleave(string s1, string s2, string s3) {\n        if (s1.Length + s2.Length != s3.Length) {\n            return false;\n        }\n\n        bool[,] dp = new bool[s1.Length + 1, s2.Length + 1];\n        dp[s1.Length, s2.Length] = true;\n\n        for (int i = s1.Length; i >= 0; i--) {\n            for (int j = s2.Length; j >= 0; j--) {\n                if (i < s1.Length && s1[i] == s3[i + j] && dp[i + 1, j]) {\n                    dp[i, j] = true;\n                }\n                if (j < s2.Length && s2[j] == s3[i + j] && dp[i, j + 1]) {\n                    dp[i, j] = true;\n                }\n            }\n        }\n        return dp[0, 0];\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def isInterleave(self, s1: str, s2: str, s3: str) -> bool:\n        ","javascript":"class Solution {\n    /**\n     * @param {string} s1\n     * @param {string} s2\n     * @param {string} s3\n     * @return {boolean}\n     */\n    isInterleave(s1, s2, s3) {}\n}\n","cpp":"class Solution {\npublic:\n    bool isInterleave(string s1, string s2, string s3) {\n        \n    }\n};\n","java":"class Solution {\n    public boolean isInterleave(String s1, String s2, String s3) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public bool IsInterleave(string s1, string s2, string s3) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/3Rw3p9LrgvE","embedding":[-0.008835128,-0.040863868,0.028155653,-0.053437363,-0.009800592,-0.0121356705,0.040931225,-0.0013661049,-0.01976958,0.043625545,-0.01777129,-0.05182077,-0.022418994,0.023328329,-0.031029595,-0.0076451353,-0.0035138435,0.0065730205,0.026853397,0.0056384276,0.0052034073,0.046611752,0.018063176,0.020813629,0.042188574,-0.016345548,0.016648658,0.02896395,-0.0069322633,-0.024406057,0.012270386,-0.012865382,-0.012124444,-0.011529448,-0.06169995,0.050338894,-0.027706599,0.030670352,-0.021397399,-0.033476938,0.022172015,-0.0022733333,-0.027998485,-0.04486044,0.0361039,0.01523414,0.026224723,0.003227572,-0.024450962,0.03702446,0.010395588,0.055143766,-0.013415473,-0.028312823,-0.029502813,-0.0010286131,-0.033207506,0.01596385,0.035295602,-0.0646637,0.058376953,-0.018433645,0.017973365,-0.0064046253,-0.029368097,-0.0007998765,0.050428707,-0.0022536872,0.030109037,-0.03129903,-0.06830104,0.037091818,0.003909572,-0.012674535,-0.03635088,0.040796507,-0.0006963837,0.012719439,0.06758255,-0.023036443,-0.009160691,-0.037136722,0.053482268,0.012337744,-0.05456,0.012438782,-0.01805195,0.042704985,-0.046117794,-0.04391743,-0.037742946,-0.05550301,-0.028806781,-0.013415473,0.054649808,-0.01654762,0.07184856,-0.034711834,-0.036036544,0.0005606152,-0.0024557612,0.020454386,-0.019500148,0.052269824,0.012101991,-0.042974416,0.053078122,0.023754928,-0.03668767,-0.02896395,0.02611246,0.021352492,0.002372967,-0.009334699,0.060667124,0.00056868413,-0.03291562,-0.05819733,0.025506238,-0.013550188,0.0043165265,-0.047240425,0.012068313,-0.005733852,-0.03282581,-0.005321284,0.009345925,-0.05936487,-0.010990584,-0.028245464,0.0155147975,-0.029233381,-0.0010370329,0.002392613,-0.026179818,0.0039039587,-0.020454386,0.014257448,-0.036328427,0.040190287,-0.018624494,0.001058784,-0.010210354,0.0014355679,0.021958714,0.023216065,0.007673201,-0.016738469,-0.008139094,-0.0036064608,0.0013506687,-0.012831703,0.021431077,0.04216612,0.0011998147,-0.021981169,-0.0068761315,-0.008565695,0.08011114,0.044164408,-0.026179818,-0.030445825,0.00589944,-0.008986683,-0.015683193,-0.035565037,0.03340958,0.018837793,-0.02077995,-0.053931322,-0.026673777,-0.038147092,-0.037473515,0.0023182386,0.04266008,-0.008941777,-0.027235094,-0.07633909,0.01682828,-0.012360197,0.04057198,0.059499588,-0.0074430616,-0.041784428,0.019477695,0.026539061,0.03006413,-0.0129551925,-0.008380461,0.008453432,0.0051528886,0.039673876,0.014212542,-0.0009766914,0.0002450499,-0.06515766,0.027841317,-0.0049031028,-0.00073672837,-0.006421465,0.020858534,0.002969366,-0.014717728,0.018321382,0.009166304,-0.01869185,-0.01599753,-0.040010665,-0.026898304,-0.0045999917,0.015806682,0.011731522,-0.00029486677,0.013291983,0.006825613,-0.017198749,-0.027661694,-0.011899917,0.024473414,0.0135614155,-0.05725432,0.016513942,0.030445825,0.054784525,-0.0035952344,0.043513283,0.013684905,-0.02669623,0.016962996,-0.002737823,0.023979455,0.0126633085,0.032960527,-0.01372981,0.01431358,-0.022070978,-0.030558089,-0.06425955,-0.028874138,0.0195226,0.013819621,0.025034731,0.011108461,0.013954337,0.021621926,-0.013202173,-0.008206452,0.052045297,-0.043805167,-0.0014790699,-0.0020502098,0.029862056,-0.017681481,-0.039426897,-0.009228049,0.015986305,0.0058433083,-0.010945679,-0.015941398,-0.007420609,-0.0772821,0.061161082,-0.050922666,-0.04254782,-0.015503571,-0.023507949,0.036373332,0.051281907,0.008908099,0.030086583,0.024832657,0.0015281851,0.026247175,-0.0060509956,-0.0027771152,-0.030019226,0.0062755225,-0.0040078023,0.020252312,-0.0059724115,-0.08500583,-0.028761875,-0.0044540493,-0.03608145,-0.00046273557,0.0050602714,0.015088197,-0.00556265,-0.044411387,-0.029570172,-0.011787654,0.02184645,0.024069266,0.08594883,-0.025057184,-0.008863193,-0.040549528,0.0017021934,0.014212542,-0.023979455,0.05155134,-0.0100251185,0.020140048,0.09286426,-0.023642665,-0.012427555,-0.02981715,0.033701465,-0.0014552139,0.020611554,-0.016368,0.012618403,-0.032870714,-0.0053970614,-0.017479407,-0.06592105,-0.026292082,-0.014818765,-0.01688441,-0.04097613,0.0072858925,-0.010215967,0.042839702,0.0016362387,0.0053689955,0.059005626,0.016154699,-0.0028430698,-0.013662452,-0.014886123,-0.04239065,-0.037675586,0.011411572,-0.016233284,-0.048228342,0.0030704031,-0.035744656,0.005279185,-0.0004402829,0.0247653,-0.008324329,-0.02028599,0.0006163961,0.053796608,-0.038932938,-0.038730863,-0.01670479,-0.032758452,0.01829893,0.0369571,0.0072185346,0.014852444,-0.048542682,-0.029278288,-0.028514896,0.010418041,-0.039426897,0.032960527,-0.0061464193,-0.019556278,0.02948036,0.020735044,-0.039157465,-0.0155933825,-0.038102187,0.0125847235,-0.0041060327,-0.006095901,-0.025506238,0.05523358,-0.006202551,0.024091719,0.03031111,0.019444015,-0.022542484,0.0054110945,-0.05222492,0.041919142,-0.017614122,0.04679137,-0.02120655,0.005921893,-0.020184955,-0.01934298,-0.011787654,0.050787948,0.015548477,0.0021358107,-0.021633152,-0.031366386,0.03257883,-0.010047572,0.04710571,0.013527736,0.01100181,-0.017939687,0.013078682,0.008818287,-0.01985939,0.037585776,0.020465612,-0.002977786,-0.031052047,-0.03322996,-0.06264296,0.007066979,0.029502813,0.029345645,0.038192,-0.015110649,-0.024203982,0.0072353743,0.03132148,-0.018792888,-0.015402534,0.04584836,-0.039022747,-0.021947488,0.049979653,0.0040386748,0.046297412,-0.035565037,0.0056524607,0.02145353,0.04266008,0.014942255,-0.011978501,-0.011664164,0.032780904,-0.049350977,-0.061340705,0.051192097,0.06821122,-0.008891259,-0.028088296,0.06641501,-0.0058152424,0.058466762,-0.0118325595,-0.03165827,-0.05456,-0.03284826,0.0017162262,0.02010637,-0.016895637,-0.02436115,0.007089432,0.027594337,0.07023197,0.015761778,0.026359439,-0.0037636296,0.034464855,0.058511667,0.03543032,0.021633152,-0.0054223207,0.013348115,0.0015408148,-0.009800592,0.0016053662,-0.024585677,-0.017973365,0.022688428,0.06363088,0.026045103,0.0032837035,-0.014392164,0.008026831,0.021487208,-0.019904295,-0.04382762,0.047464952,0.01713139,-0.047464952,-0.0044596624,0.042502914,-0.003544716,-0.0055458103,-0.009901629,-0.0033791275,-0.017153842,-0.0088295145,0.016861958,-0.0069154236,0.0012461235,-0.0032444114,-0.05640112,0.0053886417,-0.043894976,0.04652194,0.0029413004,-0.008066123,-0.009222436,-0.0007704074,-0.028290369,0.01688441,-0.009514321,0.005312864,-0.018310156,0.018871473,0.012393876,0.018287703,-0.04039236,0.045781,-0.024024362,-0.0478691,-0.085454874,0.0034605183,0.02292418,0.003988156,-0.008324329,0.038304262,0.032197133,-0.020577876,-0.025438879,-0.024024362,0.01167539,-0.02552869,-0.012393876,-0.019084772,-0.049755126,-0.006365333,-0.0022635101,0.048497777,-0.027482074,0.008442205,-0.0188827,-0.059005626,-0.054200754,-0.014481975,0.008453432,-0.039741233,0.019107226,0.002060033,-0.00921121,0.021947488,-0.01339302,-0.024024362,-0.008189613,0.03518334,0.013045004,-0.022306731,0.008767769,-0.0016306255,-0.007987538,0.004268815,0.032264493,-0.015245366,-0.023395685,0.0055514234,-0.02243022,0.017479407,0.003415613,-0.011686617,0.0016362387,-0.0011233353,-0.021599472,-0.0036064608,0.018849019,0.0080043785,-0.0306479,0.01080535,-0.0146840485,0.005509325,0.060307883,-0.027998485,-0.014964707,0.01847855,0.026606418,0.028694518,0.021599472,-0.02384474,-0.000033284334,-0.0066572176,-0.0073420242,-0.02442851,-0.0060341563,-0.0140666,-0.011209497,0.0045410534,-0.0063372673,-0.018523457,-0.031748082,-0.023126254,-0.005312864,-0.032713547,0.023305876,0.009357152,0.0024375184,-0.0038730863,0.018557135,0.047509857,-0.01225916,0.034240328,-0.036530502,-0.00039222016,-0.019051094,0.015458666,0.008532017,0.00092687446,0.003078823,0.028829234,-0.054380376,-0.011933596,-0.0034577118,0.048901923,-0.0010222984,-0.0010650987,0.008515176,0.0077461726,0.016996674,0.0023098188,-0.008386074,0.028447539,0.0012475267,-0.02255371,0.024720393,0.037832756,-0.022520032,0.040751603,0.024900015,0.040594436,0.00853763,0.005641234,-0.005910666,-0.0032949299,-0.0121356705,-0.000066787936,0.04225593,-0.02249758,0.010614501,0.022228148,-0.0035952344,-0.014167638,-0.022014847,0.0049227485,0.04257027,0.008464658,0.015099423,-0.0017891974,-0.019915521,0.014549333,-0.031388838,-0.007628296,0.0008609197,0.016076114,0.040931225,0.03594673,-0.03141129,0.023440592,0.0023673538,0.050249085,-0.0044877282,0.032197133,0.0054054814,-0.029413003,-0.02010637,0.0051753414,-0.046566844,0.0495306,0.022789463,0.029435456,0.00081110286,0.017030353,-0.03298298,-0.0034212263,0.02243022,0.03760823,0.006786321,0.02963753,-0.015256592,0.042121217,-0.019118452,-0.022463901,-0.0033286088,0.007819144,0.029233381,-0.03242166,-0.0045326333,0.011956049,0.019432789,0.015885267,0.0033903539,-0.025146995,0.0023406912,-0.02031967,-0.01792846,-0.046297412,-0.06830104,-0.01985939,-0.0026409957,-0.013426699,-0.0049704607,0.04490535,0.008616214,0.029615076,-0.0019772386,0.03374637,-0.037046913,0.028155653,-0.009609745,0.020847308,0.0023561274,-0.031096954,-0.02552869,0.020061465,0.018433645,-0.021229003,0.00589944,-0.004125679,0.014212542,0.00003398598,0.010827802,-0.0050153662,-0.0034633249,-0.00283465,-0.0126633085,0.010227193,-0.023620212,0.0057254317,0.003651366,-0.013999242,0.0030563702,-0.017501859,-0.029098665,-0.007763012,-0.023126254,0.019140905,0.005590716,-0.0022494772,0.011260016,0.0013892592,-0.0020698558,0.012685761,-0.010777283,-0.016772147,0.051237002,-0.039763685,-0.009559226,0.016929315,0.01869185,0.03484655,0.0461627,-0.013673678,0.010300164,-0.031052047,0.024720393,-0.035654847,-0.0032921233,-0.022082204,0.0058489214,-0.0080773495,-0.03233185,-0.03677748,0.016626205,0.039359536,-0.019780805,0.0014790699,0.00066656375,0.06169995,0.009306633,-0.044703275,0.0051949876,0.025843028,0.025753217,-0.038910486,0.030356016,-0.021217776,0.026583966,-0.03040092,-0.019197036,-0.0017695514,-0.019545052,-0.0013289177,0.006365333,-0.026224723,0.016311867,0.009542386,-0.020151274,-0.027010567,0.010636955,-0.011237564,0.02019618,-0.0031293414,0.019511374,-0.026830945,-0.011765202,0.060442597,-0.044950254,-0.028402632,0.007229761,0.008919325,-0.015683193,-0.031882796,-0.03141129,-0.03172563,-0.028537348,0.010126156,-0.015088197,0.027526978,-0.020420708,0.03760823,0.037810303,-0.021812772,-0.029951867,-0.017221201,0.0056552673,-0.006393399,-0.040796507,-0.03763068,0.025146995,-0.0057591107,0.004448436,0.019264394,0.037069365,-0.02820056,0.035385415,0.04971022,0.039853495,0.01372981,0.009935308,-0.000624465,0.0036682056,-0.02255371,-0.046611752,0.039516706,0.009385218,0.011332987,0.027324904,0.008543243,0.005001333,-0.010827802,0.035160888,0.06376559,0.05779318,0.015638288,-0.010395588,-0.002103535,0.020117596,-0.022216922,0.03778785,-0.0019267201,-0.040684246,-0.03165827,0.036979552,-0.025977744,-0.011776428,0.02871697,-0.035475224,0.008739703,0.011136526,0.033791274,-0.035250697,-0.009312247,0.044546105,0.013325662,-0.008408526,0.015694419,0.028155653,0.03879822,0.03349939,0.009289794,-0.007763012,-0.009918469,-0.0013731214,-0.010339457,0.014493201,-0.03098469,0.027976032,0.00094652054,0.043288756,0.011175819,-0.00019453137,0.03477919,-0.014807538,0.039359536,0.018209118,0.032556377,0.003266864,0.014908575,0.020274764,-0.008380461,0.0028107942,-0.0361039,-0.028582254,0.027684147,-0.0031012755,0.005882601,0.0012769959,0.012045859,0.005298831,0.04099858,-0.01872553,-0.029772246,0.015032065,0.018310156,-0.009070881,0.025551142,0.014437069,-0.014279901,-0.007897728,0.0041172593,0.011063555,0.002117568,-0.009744461,0.011029876,-0.014279901,-0.061924476,-0.018747984,-0.014908575,-0.015896494,-0.061834663,0.0373837,0.00010708873,0.00682,-0.0077798516,0.0063597197,0.012708213,0.01364,-0.010423654,-0.016222058,-0.019017415,-0.026763588,0.004703835,-0.01364,-0.013684905,0.007908954,0.00898107,-0.008515176,-0.0021638765,0.02981715,-0.028088296,-0.008296263,-0.01792846,-0.02728,-0.0042295223,-0.0015267818,0.002565218,-0.020274764,-0.00623623,-0.033813726,-0.048542682,-0.017647801,-0.03415052,-0.060083356,0.0026676583,-0.032376755,0.019118452,-0.0027743084,0.0072746663,-0.02862716,0.011989728,-0.04560138,-0.00081320776,-0.0006763868,-0.028088296,0.016255736,0.0068929708,0.012427555,0.030041678,0.002128794,0.04140273,-0.039673876,-0.0170079,0.02611246,-0.0041340985,-0.046656657,-0.01238265,-0.05433547,-0.01881534,-0.019601185,-0.00850395,-0.009592905,-0.0055401972,-0.0070333,0.009385218,0.021127965,0.03383618,-0.016929315,0.011220723,-0.041537445,-0.008099802,0.02308135,0.019107226,0.024877563,-0.0017513086,0.01863572,0.008683572,0.0068143867,0.013123588,0.01829893,0.0126633085,-0.0097613,-0.022778237,-0.01863572,0.004566313,-0.016008757,-0.0008525,0.015413761,-0.019365432,-0.041829333,0.013572642,0.024383605,-0.048048723,-0.01645781,-0.015817909,0.01225916,-0.029278288,0.020308444,-0.01339302,-0.0055177445,0.017108938,0.0027911481,0.018613266,-0.005470033,0.039831042,0.011540675,-0.0031012755,-0.012101991,-0.013898205,-0.022452675,-0.013202173,-0.031029595,-0.024563225,-0.0069715553,-0.010154222,0.025461333,-0.00579279,0.030109037,0.0026003004,-0.016233284,0.0033398352,0.010171061,-0.007841596,0.038147092,0.024383605,0.001171749,0.0021147612,-0.012562271,-0.007319572,-0.0014369711,-0.031748082,-0.013696131,-0.041178204,0.010288938,-0.009581679,-0.02292418,-0.014852444,-0.0035868147,0.013696131,0.026134912,-0.01305623,-0.016435357,0.03031111,-0.013247077,0.03390354,0.03736125,-0.0040948065,0.015380082,0.013988016,-0.04045972,-0.00999144,-0.004235136,0.036418237,0.0054335473,-0.0013829444,-0.007701267,-0.0331626,0.0033061563,0.0007423415,-0.012730666,-0.024383605,-0.0110803945,0.0019365432,-0.010906386,-0.057613563,0.015222913,0.020611554,0.005528971,-0.0005220247,0.0027841316,-0.01734469,0.012607177,0.027077924,0.039404444,-0.047464952,-0.02442851,-0.026494155,-0.011765202,0.011192658,0.033432033,0.020678913,0.0004034465,0.0017232427,-0.0033117693,-0.002396823,-0.027594337,0.018220345,-0.0067470283,-0.010737991,0.009968988,0.0012573497,-0.017614122,-0.006522502,0.0029862057,-0.041470088,-0.009379605,0.0062474567,0.023216065,0.024877563,0.022070978,-0.015346402,0.0113386,0.008386074,-0.016749695,-0.008621827,-0.013101135,0.032511473,0.011405959,0.03322996,-0.028335275,0.021318814,0.014380937,-0.021936262,-0.0046617365,-0.031029595,-0.008285036,-0.002022144,0.011652938,-0.008778996,-0.05523358,-0.0063260407,-0.000001110026,-0.013673678,0.0060285428,0.01486367,-0.0035054237,0.00083636213,-0.008896872,0.02963753,0.018972509,-0.0012741892,-0.0063092015,-0.00023557767,0.006825613,0.0066235387,0.056221496,0.014324806,0.009828658,-0.0028767488,0.020544197,-0.0055401972,-0.016222058,-0.029951867,0.00068305247,-0.026381891,0.0001433112,0.0017078065,-0.0009942325,0.0024908434,0.0026213496,0.03475674,0.000015447176,0.02871697,0.04560138,-0.015256592,-0.010586436,0.00862744,-0.0063877855,0.02255371,-0.031703174,0.02077995,0.0008819691,-0.010726765,-0.012708213,-0.007336411,0.017367143,0.022823144,0.011765202,-0.0419865,-0.0130337775,-0.010092477,-0.03980859,-0.015256592,-0.0020586296,-0.011450863,-0.041200656,0.023552855,-0.030243753,0.029570172,0.017625349,-0.032623734,-0.019264394,0.0026059134,0.0008784609,-0.00048799484,-0.0067133494,-0.02154334,0.010440493,0.016749695,-0.03291562,0.0037495967,0.0014320596,-0.019836938,0.009738848,-0.00027697478,-0.0415599,0.01144525,0.028739423,0.025887933,-0.0030619835,0.0036289135,-0.020914666,-0.00999144,-0.058736194,0.01566074,0.058152426,0.004341786,-0.018411193,-0.002852893,0.00623623,0.03491391,-0.022194467,-0.013303209,-0.029457908,-0.004406337,0.019197036,-0.009716394,0.00511079,-0.012887835,-0.020342123,-0.025483785,-0.008509563,-0.002963753,0.010120543,-0.025977744,-0.0120570855,0.030131489,0.020678913,-0.030872427,0.018736757,-0.023238517,-0.014032921,0.012045859,-0.019612411,-0.004529827,0.04584836,-0.0009402057,-0.03929218,-0.016570073,0.0013632983,0.004529827,-0.02988451,0.0201625,-0.020757496,-0.003819761,0.0051753414,-0.019084772,-0.017479407,0.009390831,-0.043962337,0.02620227,-0.0068424526,0.014201316,0.013752263,-0.025573596,0.017906008,-0.027639242,-0.036171257,0.002795358,0.020813629,-0.013808395,-0.024383605,0.04057198,-0.005321284,-0.025169447,0.013965563,-0.01100181,0.028447539,-0.008576921,0.004771193,-0.015043291,0.01452688,0.008778996,0.042727437,-0.005380222,-0.012562271,-0.014874897,-0.022946633,-0.014403391,0.023979455,0.034330137,-0.02393455,0.038820673,0.01410028,0.021554567,0.02326097,-0.03484655,-0.00988479,-0.02963753,-0.010687473,-0.020387027,-0.011209497,0.009744461,0.009261728,0.009435737,0.006219391,0.03361165,-0.0034268394,-0.0018986543,-0.0043445923,0.0012454217,-0.008363621,0.0097332345,-0.005155695,-0.005854535,-0.019657316,-0.030513184,0.008386074,-0.010462946,0.04836306,-0.018018272,-0.019051094,-0.0017793744,-0.02779641,0.05491924,0.008369234,-0.023799835,-0.007072592,0.010502238,-0.007257827,-0.0132583035,0.008717251,-0.008285036,-0.016412904,0.009823045,0.00737009,-0.0027995678,-0.025461333,-0.0042154896,-0.022273052,-0.030849975,-0.05617659,-0.0069210366,-0.025214354,0.0038871192,-0.023979455,-0.029592624,-0.04097613,0.025798121,0.0020361769,-0.019320525,0.0009766914,-0.009722007,-0.0012594546,-0.0149871595,0.058242235,-0.007128724,-0.01179888,-0.043962337,-0.010058798,-0.0066459915,-0.0012089362,0.0150657445,0.019926747,0.01247246,-0.020263538,-0.022172015,-0.008689185,0.00363172,-0.037698038,0.021419851,-0.03491391,-0.030019226,-0.025483785,-0.044770632,0.04223348,0.004120066,0.016368,-0.010176674,0.0044708885,-0.013696131,-0.010361909,0.004423177,-0.0074542877,0.024720393,0.018007044,0.02552869,0.023620212,0.017906008,0.01707526,0.017535537,0.016716016,0.032870714,-0.0075721643,0.020791177,0.009082107,-0.0033426418,-0.008032444,0.004184617,0.0478691,0.014515654,-0.0010994794,-0.030131489,0.019197036,0.019601185,0.010496625,0.01906232,-0.005888214,0.03751842,-0.014156411,-0.03736125,0.003598041,-0.024203982,0.0066852835,0.026920756,0.0022228148,-0.026292082,-0.026000196,-0.02820056,-0.0016502716,-0.037675586,-0.022362864,0.018669399,-0.003713111,-0.007066979,0.034577116,-0.059499588,-0.045287043,-0.001758325,0.01777129,0.034217875,-0.016266963,0.017120164,0.017221201,-0.020050237,0.046297412,-0.0028121974,0.03585692,0.009042814,-0.00238279,-0.018590814,-0.00351665,-0.008571308,0.013404246,0.010687473,-0.015290271,0.03855124,0.033476938,-0.033881087,0.00556265,-0.019230716,-0.0373837,0.018545909,-0.021767868,0.0004571224,-0.013853299,0.009896016,-0.01465037,-0.0088239005,0.0035082302,0.02593284,-0.010872708,-0.014032921,0.02308135,0.03644069,-0.005096757,0.030782616,-0.008846354,-0.012528592,-0.05137172,-0.009519934,0.03248902,-0.019241942,0.048407964,-0.00028293877,0.01599753,-0.019567505,0.0021470368,0.024450962,-0.000087968874,0.012169349,0.047509857,0.013247077,-0.012753119,-0.016895637,0.017569218,-0.008122255,0.0335892,-0.025371522,-0.010339457,-0.0012426152,-0.0055317776,-0.03980859,0.028874138,0.015189234,-0.0044652754,0.01523414,0.019556278,-0.028357727,-0.027145283,-0.01486367,-0.0086049875,-0.034869004,-0.013628773,0.01296642,0.026381891,0.015627062,0.044546105,-0.0005707891,-0.01031139,-0.03257883,-0.009626584,0.010277712,-0.012169349,-0.022104658,0.022183241,0.01008125,0.062777676,0.021655604,0.03365656,0.013224625,-0.003645753,0.0075777774,0.00021242334,0.011069168,0.008711638,-0.026808493,-0.013741037,0.019253168,0.006595473,0.03592428,0.0063765594,-0.038079735,0.015975077]},{"id":"longest-increasing-path-in-matrix","name":"Longest Increasing Path in Matrix","description":"You are given a 2-D grid of integers `matrix`, where each integer is greater than or equal to `0`. \n    \nReturn the length of the longest strictly increasing path within `matrix`.\n\nFrom each cell within the path, you can move either horizontally or vertically. You **may not** move **diagonally**.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/c302dea2-1695-4edb-e1b3-91e96d9bb700/public)\n\n```java\nInput: matrix = [[5,5,3],[2,3,6],[1,1,1]]\n\nOutput: 4\n```\n\nExplanation: The longest increasing path is `[1, 2, 3, 6]` or `[1, 2, 3, 5]`.\n\n**Example 2:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/72004ec9-6f68-464c-93c1-0ba0b384c700/public)\n\n```java\nInput: matrix = [[1,2,3],[2,1,4],[7,6,5]]\n\nOutput: 7\n```\n\nExplanation: The longest increasing path is `[1, 2, 3, 4, 5, 6, 7]`.\n\n**Constraints:**\n* `1 <= matrix.length, matrix[i].length <= 100`\n","difficulty":"Hard","concepts":["Tree Maze","Matrix DFS","2-Dimension DP"],"solutions":{"python":"class Solution:\n    def longestIncreasingPath(self, matrix: List[List[int]]) -> int:\n        ROWS, COLS = len(matrix), len(matrix[0])\n        dp = {}  # (r, c) -> LIP\n\n        def dfs(r, c, prevVal):\n            if r < 0 or r == ROWS or c < 0 or c == COLS or matrix[r][c] <= prevVal:\n                return 0\n            if (r, c) in dp:\n                return dp[(r, c)]\n\n            res = 1\n            res = max(res, 1 + dfs(r + 1, c, matrix[r][c]))\n            res = max(res, 1 + dfs(r - 1, c, matrix[r][c]))\n            res = max(res, 1 + dfs(r, c + 1, matrix[r][c]))\n            res = max(res, 1 + dfs(r, c - 1, matrix[r][c]))\n            dp[(r, c)] = res\n            return res\n\n        for r in range(ROWS):\n            for c in range(COLS):\n                dfs(r, c, -1)\n        return max(dp.values())\n","javascript":"class Solution {\n    /**\n     * @param {number[][]} matrix\n     * @return {number}\n     */\n    longestIncreasingPath(matrix) {\n        if (matrix.length === 0) {\n            return 0;\n        }\n        const rows = matrix.length;\n        const cols = matrix[0].length;\n\n        let maxDist = 0;\n        const memo = Array.from({ length: rows }, () => Array(cols).fill(0));\n\n        const dirs = [\n            [0, 1],\n            [1, 0],\n            [0, -1],\n            [-1, 0],\n        ];\n\n        /**\n         * @param {number} r\n         * @param {number} c\n         * @param {number} prevVal\n         * @return {number}\n         */\n        function dfs(r, c, prevVal) {\n            if (\n                r < 0 ||\n                r === rows ||\n                c < 0 ||\n                c === cols ||\n                matrix[r][c] <= prevVal\n            ) {\n                return 0;\n            }\n            if (memo[r][c] !== 0) {\n                return memo[r][c];\n            }\n\n            let res = 1;\n            for (const dir of dirs) {\n                const newRow = r + dir[0];\n                const newCol = c + dir[1];\n                if (\n                    newRow >= 0 &&\n                    newRow < rows &&\n                    newCol >= 0 &&\n                    newCol < cols &&\n                    matrix[newRow][newCol] > matrix[r][c]\n                ) {\n                    res = Math.max(res, 1 + dfs(newRow, newCol, matrix[r][c]));\n                }\n            }\n            memo[r][c] = res;\n            return res;\n        }\n\n        for (let i = 0; i < rows; ++i) {\n            for (let j = 0; j < cols; ++j) {\n                maxDist = Math.max(maxDist, dfs(i, j, -1));\n            }\n        }\n        return maxDist;\n    }\n}\n","cpp":"class Solution {\npublic:\n    int longestIncreasingPath(vector<vector<int>>& matrix) {\n        if (matrix.empty()) {\n            return 0;\n        }\n        int rows = matrix.size();\n        int cols = matrix[0].size();\n\n        int maxDist = 0;\n        vector<vector<int>> memo(rows, vector<int>(cols, 0));\n\n        vector<vector<int>> dirs = {{0, 1}, {1, 0}, {0, -1}, {-1, 0}};\n\n        for (int i = 0; i < rows; ++i) {\n            for (int j = 0; j < cols; ++j) {\n                maxDist = max(maxDist, dfs(matrix, i, j, memo, dirs));\n            }\n        }\n        return maxDist;\n    }\n\n    int dfs(vector<vector<int>>& matrix, int r, int c, vector<vector<int>>& memo, vector<vector<int>>& dirs) {\n        if (memo[r][c] != 0) {\n            return memo[r][c];\n        }\n\n        int res = 1;\n        for (const auto& dir : dirs) {\n            int newRow = r + dir[0];\n            int newCol = c + dir[1];\n            if (newRow >= 0 && newRow < matrix.size() && newCol >= 0 && newCol < matrix[0].size()\n                && matrix[newRow][newCol] > matrix[r][c]) {\n                res = max(res, 1 + dfs(matrix, newRow, newCol, memo, dirs));\n            }\n        }\n        memo[r][c] = res;\n        return res;\n    }\n};\n","java":"class Solution {\n    \n    public int longestIncreasingPath(int[][] matrix) {\n        if (matrix.length == 0) {\n            return 0;\n        }\n        int rows = matrix.length;\n        int cols = matrix[0].length;\n\n        int maxDist = 0;\n        int[][] memo = new int[rows][cols];\n\n        int[][] dirs = {{0, 1}, {1, 0}, {0, -1}, {-1, 0}};\n\n        for (int i = 0; i < rows; ++i) {\n            for (int j = 0; j < cols; ++j) {\n                maxDist = Math.max(maxDist, dfs(matrix, i, j, memo, dirs));\n            }\n        }\n        return maxDist;\n    }\n\n    private int dfs(int[][] matrix, int r, int c, int[][] memo, int[][] dirs) {\n        if (memo[r][c] != 0) {\n            return memo[r][c];\n        }\n\n        int res = 1;\n        for (int[] dir : dirs) {\n            int newRow = r + dir[0];\n            int newCol = c + dir[1];\n            if (newRow >= 0 && newRow < matrix.length && newCol >= 0 && newCol < matrix[0].length\n                    && matrix[newRow][newCol] > matrix[r][c]) {\n                res = Math.max(res, 1 + dfs(matrix, newRow, newCol, memo, dirs));\n            }\n        }\n        memo[r][c] = res;\n        return res;\n    }\n}\n","csharp":"public class Solution {\n    \n    public int LongestIncreasingPath(int[][] matrix) {\n        if (matrix.Length == 0) {\n            return 0;\n        }\n        int rows = matrix.Length;\n        int cols = matrix[0].Length;\n\n        int maxDist = 0;\n        int[,] memo = new int[rows, cols];\n\n        int[,] dirs = { { 0, 1 }, { 1, 0 }, { 0, -1 }, { -1, 0 } };\n\n        for (int i = 0; i < rows; ++i) {\n            for (int j = 0; j < cols; ++j) {\n                maxDist = Math.Max(maxDist, Dfs(matrix, i, j, memo, dirs));\n            }\n        }\n        return maxDist;\n    }\n\n    private int Dfs(int[][] matrix, int r, int c, int[,] memo, int[,] dirs) {\n        if (memo[r, c] != 0) {\n            return memo[r, c];\n        }\n\n        int res = 1;\n        for (int i = 0; i < dirs.GetLength(0); ++i) {\n            int newRow = r + dirs[i, 0];\n            int newCol = c + dirs[i, 1];\n            if (newRow >= 0 && newRow < matrix.Length && newCol >= 0 && newCol < matrix[0].Length\n                && matrix[newRow][newCol] > matrix[r][c]) {\n                res = Math.Max(res, 1 + Dfs(matrix, newRow, newCol, memo, dirs));\n            }\n        }\n        memo[r, c] = res;\n        return res;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def longestIncreasingPath(self, matrix: List[List[int]]) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[][]} matrix\n     * @return {number}\n     */\n    longestIncreasingPath(matrix) {}\n}\n","cpp":"class Solution {\npublic:\n    int longestIncreasingPath(vector<vector<int>>& matrix) {\n        \n    }\n};\n","java":"class Solution {\n    public int longestIncreasingPath(int[][] matrix) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int LongestIncreasingPath(int[][] matrix) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/wCc_nd-GiEc","embedding":[0.011161235,0.007856209,0.02344943,-0.015192282,-0.000013661592,0.050539806,0.0019803066,-0.014769673,-0.031056408,0.057561632,-0.010175145,-0.009151129,-0.0028309443,-0.037167996,0.029409312,0.01024558,0.038186595,-0.032530125,-0.03929188,0.010559829,0.013816092,0.03448063,0.034307253,0.009817552,0.078757145,-0.008240893,0.005480383,0.022279125,0.011952274,-0.0007862982,0.006182024,-0.0049304483,0.0076123956,0.014932215,-0.06189609,0.0025085688,0.008571395,0.010261835,-0.025573315,0.01855149,0.023991236,0.006344566,-0.01945089,-0.04163249,0.009183638,-0.015994158,0.019418381,-0.004450949,0.014054487,0.042542726,-0.0032698084,0.019060789,-0.027068704,0.012905855,-0.020794572,-0.01931002,0.0146179665,0.019526742,0.04568521,0.014531278,0.032833535,0.0037736893,0.016926067,-0.026743619,0.0041258642,0.056001224,-0.032161694,0.033115275,-0.0038089068,-0.0429545,-0.07325238,-0.037904855,0.01880072,-0.044016443,-0.0072548026,-0.007411927,-0.015961649,0.006463764,0.047679063,-0.006637142,-0.013718566,-0.014433753,0.039248537,-0.00023043751,0.0095087215,0.0024002073,-0.026396863,0.006209114,-0.020556178,-0.03242176,0.0065341988,-0.06133261,0.009443705,0.027870579,0.0057214876,0.020231092,0.054050718,0.029170917,-0.016286734,0.0055535273,0.01657931,-0.0013409737,0.055871192,-0.0011797858,-0.007986243,-0.027198737,0.010570665,-0.0028959613,0.01677436,-0.015885796,-0.0026101577,-0.019353364,0.021119658,-0.00039348772,0.0379482,-0.036279432,-0.02947433,0.0037574351,0.017348677,-0.014509605,-0.0083925985,0.01427121,-0.0022024475,-0.0016877304,-0.03534752,-0.008045842,0.0043019517,-0.040158775,-0.0007558215,0.014314555,-0.016731016,0.01677436,0.04171918,0.0037059635,-0.058081765,-0.024272976,0.004182754,0.05188349,0.032941896,0.03636612,-0.024468027,0.018703196,-0.010803642,0.014065323,0.030362893,0.031923298,0.012049799,0.022625882,-0.0006698095,-0.024337994,0.054050718,0.03437227,0.019884337,0.05227359,-0.01823724,-0.026245156,0.0019071625,0.011757223,0.022430832,0.008560559,0.0050361007,-0.014119504,-0.055351056,0.00020233124,0.027393788,0.042369347,-0.022300797,-0.0034296415,-0.022712572,-0.031923298,0.013165923,-0.07325238,-0.033570394,-0.021358052,0.08352505,-0.0016850213,-0.06688072,0.017381186,-0.03539087,-0.023839531,-0.039248537,0.03257347,-0.044298183,-0.01672018,0.0039172685,0.03003781,0.041589145,-0.022625882,-0.02750215,-0.00678343,0.034350596,0.04590193,-0.0011560818,0.026613586,0.00040093757,-0.021401398,0.06397663,-0.017717106,-0.025790038,0.01092284,-0.017803796,-0.020144403,0.005266369,0.0021889023,-0.009291999,-0.02165063,-0.052360278,0.013469335,-0.021173839,-0.044471562,-0.00869601,-0.03203166,0.0026304754,-0.021954041,0.024446355,0.03465401,0.011843912,0.043452963,0.03963864,0.02882416,-0.031533197,0.029170917,-0.008549723,0.040613893,0.028889177,0.02288595,-0.0007476944,0.0073306556,0.028412387,0.0198735,0.021596448,-0.023557791,0.025638333,-0.062026124,0.027848907,-0.04228266,-0.048632644,-0.018995771,0.024099598,0.009524976,0.02189986,-0.0139136175,0.049716257,0.0014696529,-0.023427757,-0.015506531,-0.020794572,-0.011334613,-0.03647448,-0.0026006761,-0.03478404,0.045555174,-0.03588933,-0.07329572,-0.03354872,0.049196124,-0.019494234,-0.024511373,0.017511219,0.011442975,-0.006463764,0.07515954,-0.05509099,-0.064410076,0.0133501375,-0.02891085,-0.032465108,0.011952274,-0.009893405,0.019299183,0.024858128,-0.00138635,-0.018757377,0.009611665,-0.01643844,-0.015636565,0.03127313,-0.005564363,-0.010890331,-0.02713372,-0.03088303,0.01080906,0.038836762,0.024576388,-0.017576236,-0.027870579,0.046292033,0.015885796,-0.014076159,-0.025031507,-0.0774568,-0.0032589722,-0.021596448,0.04702889,0.0074390173,0.0060140635,-0.061636023,-0.03363541,0.0008655375,0.0027578003,0.009568321,-0.016265063,-0.02029611,0.00433446,-0.025876727,0.027935596,-0.004962957,-0.009140293,-0.031186441,0.03634445,-0.033505376,0.012840838,-0.005274496,0.06037903,-0.009692936,-0.01629757,0.005970719,-0.030774668,0.015105594,-0.018031355,0.010803642,-0.023904547,0.009059022,0.025486626,-0.0061657694,0.016926067,0.011562172,0.039898705,0.02136889,-0.06371656,-0.020166077,0.030731322,-0.014748001,-0.0226909,-0.10307346,0.0096495915,0.0035813476,0.023146017,0.008891061,0.023276052,-0.024858128,0.0175654,0.009243236,0.023427757,-0.020285273,-0.013545188,0.02581171,0.028390715,-0.015549876,0.005856939,-0.039443586,0.0011079963,0.021217182,0.02207324,-0.0031560287,0.013946125,-0.03307193,0.03567261,-0.017695434,0.0028336532,-0.020686211,-0.044319857,-0.032941896,0.011919766,-0.039096832,0.01672018,-0.025638333,0.003749308,0.029409312,0.04002874,0.039660312,0.008690593,-0.028499076,0.011025783,-0.021672301,-0.020025207,-0.017890485,0.031901628,-0.031966645,0.025443282,-0.0150297405,0.036777895,-0.0107657155,0.005128208,0.02119551,0.042607743,-0.037753146,-0.01370773,-0.025681676,-0.00650169,0.047418993,-0.018453965,0.06362987,-0.005415366,-0.00077004393,0.0030395403,0.07802028,0.03127313,0.052880414,0.025118196,0.0007774938,-0.063543186,0.0110908,0.0021008586,-0.015409006,-0.022149092,0.010446049,0.067487545,0.008148785,0.006106171,0.029712724,-0.015517367,0.008137949,0.004272152,0.0026833017,0.017500384,-0.052577,0.015549876,-0.04650876,-0.015614892,-0.016330078,0.02693867,-0.009394943,-0.0072385482,-0.019775974,0.042369347,0.040007066,-0.025334919,-0.024034582,-0.018421456,0.01052732,0.066663995,0.05227359,0.032205038,-0.03070965,0.07502951,0.017327005,0.014704656,-0.013696894,-0.031619888,0.019407546,-0.046552103,0.011096218,-0.0058731935,0.0152573,-0.032941896,0.0017026301,0.045468487,0.0045836917,0.055611122,0.023817858,-0.03701629,0.07615647,0.030167842,-0.011280432,0.010462304,0.019472562,0.0050713182,-0.03636612,-0.0011791086,-0.037471406,-0.018594835,-0.0032860625,-0.007904972,0.009828389,0.008013333,0.0042748614,-0.013621041,0.0068321927,-0.0069676447,-0.018161388,-0.031143095,-0.04070058,-0.014748001,-0.0034811134,0.0529671,0.0030097407,0.005613126,-0.030818012,-0.0072277123,0.006913464,-0.030839683,-0.0012746021,0.033006914,0.032443434,0.014217029,-0.008213802,-0.027913924,-0.0050794454,-0.03822994,-0.03185828,0.031988315,0.0032129185,-0.007834537,-0.002738837,-0.020686211,-0.0133501375,-0.021325544,0.004404895,0.0038603786,0.010175145,-0.0026927835,0.008560559,-0.024728095,0.008658084,-0.010884913,0.008495542,0.027957268,0.05452751,0.043908082,-0.018768212,0.002769991,0.017457038,0.0015685328,0.039053485,0.055871192,0.013523515,0.006994735,-0.019277511,-0.03070965,0.010846986,-0.019721793,-0.0355209,-0.02071872,0.0021943206,-0.024381338,-0.044774972,-0.0032102095,-0.036106054,0.011172071,-0.022062402,0.0097200265,-0.02184568,0.02189986,0.009216146,0.036149397,-0.007271057,-0.005905702,-0.011648862,-0.017034428,0.019342529,0.019862663,-0.018421456,0.0022877823,-0.009405779,-0.056261294,0.033310328,0.003023286,-0.011518828,0.03183661,-0.0061495155,-0.012504918,-0.048762675,-0.030904701,0.0067455037,0.0011432138,-0.018670687,0.020339454,0.023752842,0.02600676,-0.04425484,-0.015744926,0.002545141,-0.028043957,-0.031879954,0.033743773,0.025746694,0.0026521478,0.031533197,0.022387486,-0.012439901,-0.009747117,0.005407239,-0.030102827,0.016893558,0.008701429,-0.044319857,-0.012775822,-0.00025278708,-0.012168997,-0.005101118,0.003031413,-0.017576236,-0.013946125,0.003966031,0.0022728825,-0.040938977,-0.00036504283,0.016286734,0.005965301,-0.04050553,0.02071872,0.0083221635,-0.008826044,-0.045555174,-0.03918352,0.021693973,0.05691146,0.024359666,0.023059327,0.0327035,0.0063283117,0.03534752,-0.0045701466,-0.033765446,-0.005204061,0.009530394,0.050236393,0.014986396,0.010684445,-0.025313247,0.00883688,0.017088609,-0.02826068,-0.021206345,0.00850096,-0.010099292,0.044514906,0.0425644,-0.040548876,-0.005992391,0.0036517826,0.060595755,-0.009178219,-0.017294496,-0.0038007798,-0.026808636,-0.0012698614,-0.025876727,0.021347215,0.0046162,0.0063120574,-0.00895066,0.011703042,-0.005927374,-0.0047977054,0.0061224247,0.013165923,0.0006369625,-0.03419889,0.021683136,0.006284967,-0.03155487,-0.011930602,0.024164615,0.023406085,0.025118196,0.01007762,0.0031912462,-0.01649262,-0.014542114,0.015777435,0.04906609,-0.00089262787,0.017630417,-0.0016904394,0.02279926,-0.070868425,0.026266828,-0.0051417532,-0.0014005725,0.0109065855,0.0064366735,0.016416768,-0.014813018,-0.0043452964,0.005716069,0.025074853,0.019667612,-0.00070028624,0.039790343,0.019775974,0.025334919,-0.0020101059,-0.016330078,-0.012277358,-0.02778389,-0.0064745997,-0.032833535,-0.018053027,0.030362893,0.019515907,0.005710651,0.012678296,-0.020003533,0.0042369347,-0.0067292494,0.011800568,-0.031988315,-0.0018692359,0.007070588,0.02947433,-0.032053333,-0.015333152,0.026613586,-0.022950966,-0.009904241,0.0053422223,0.004047302,-0.06133261,0.037536424,-0.013794419,-0.01691523,0.011898093,-0.017922992,0.0019654068,-0.0221816,-0.024598062,0.039118502,0.00022163313,0.01823724,-0.0030124497,-0.0011256051,-0.017977174,-0.038208265,-0.0030747578,0.0016768943,0.00027090375,0.0012305804,0.006458346,-0.019320857,0.004388641,-0.015820779,-0.043626342,0.006853865,-0.031424835,-0.0045620194,0.004908776,0.00074092177,0.010288925,0.007558215,-0.019895172,0.021076312,-0.0025315955,0.028043957,-0.036561172,0.0044238586,-0.023774514,-0.034588993,0.003161447,-0.025898399,-0.015809944,-0.043387946,-0.048199195,0.01733784,-0.01106371,-0.019071626,0.016871886,-0.040678907,0.0029826504,-0.040917303,0.004621618,0.031511527,-0.016850214,-0.0021509759,0.0017879648,0.02373117,-0.013816092,-0.015181446,-0.013556024,-0.039486933,0.051189974,-0.016026666,-0.047115583,0.04759237,0.011367122,-0.013512679,0.0024408428,-0.02066454,-0.029170917,0.011703042,0.0046487087,0.010538156,-0.0126566235,-0.0005567072,0.0028417804,-0.014206193,-0.0036626188,0.026743619,-0.025746694,-0.023232706,0.021943204,-0.023882875,0.029886102,0.026591914,0.009779626,0.012754149,-0.0064041647,0.050713185,-0.016178373,0.00475707,-0.031489853,-0.0110908,0.02344943,0.024684751,-0.0062958035,0.022474175,-0.025681676,-0.04078727,0.0017825468,0.0055047646,0.0021821298,-0.0066154697,0.0076015596,-0.0069405544,0.015571548,0.00095493573,-0.0085930675,-0.038576696,0.0045620194,-0.020556178,0.020046879,-0.03365708,-0.028845832,0.026418535,0.0007510807,-0.0059544644,-0.05210021,0.00836009,0.03562926,-0.0034296415,-0.0003352434,-0.021748153,0.025638333,-0.025703348,-0.0033971332,-0.014498769,-0.0061928597,0.007867045,0.024749767,0.028889177,0.0013775456,-0.03567261,0.019104132,0.04050553,0.016026666,0.02657024,-0.0670541,0.013371809,0.037644785,-0.015094757,0.041025665,-0.03963864,-0.03929188,-0.014054487,0.0088748075,0.026136795,-0.04737565,0.014011143,-0.041220717,0.0005160717,0.0037980706,-0.018529817,-0.043669686,0.030167842,-0.012494082,0.021726482,0.039205194,-0.0024665787,-0.008343835,-0.00036741322,-0.02826068,0.0049846293,-0.02778389,0.02279926,0.005537273,-0.024641406,-0.0027632182,-0.033028588,-0.020675374,0.028087301,-0.013458499,-0.012439901,-0.014292883,-0.0207729,0.029539347,-0.0170561,-0.010798224,0.022929294,0.048936054,0.000013756831,0.006355402,-0.031533197,0.02995112,-0.027632184,-0.017066937,-0.0011493092,0.03703796,-0.004537638,-0.013588533,0.005269078,-0.02789225,0.004618909,-0.004992756,0.02704703,0.012721641,0.0112587605,-0.009313671,0.06740086,0.010489394,0.038771745,-0.024901474,-0.0026521478,0.020675374,-0.059208725,0.0009887987,0.00007458319,0.0029772322,-0.029214261,-0.010294342,-0.009449123,0.004635163,-0.034610663,-0.004456367,-0.008262564,0.043452963,0.01911497,0.0019613432,-0.008853135,-0.045641866,0.030818012,-0.014249538,0.0010632973,-0.024381338,0.047722407,0.018952427,-0.0011763995,0.006241623,0.058471866,0.0017121118,0.05331386,-0.010727789,0.017327005,0.058255143,-0.01781463,0.0023162272,-0.023622807,0.007774938,0.035022438,0.0027794726,-0.025226558,0.012569934,0.0036842912,-0.042065937,-0.0092974175,-0.04551183,0.025009835,-0.019483399,0.035867658,0.05340055,0.04512173,-0.05981555,0.019201659,-0.04106901,-0.029062556,0.008853135,-0.014780509,0.01483469,0.013675222,-0.0035732207,0.015983323,-0.015224791,0.015376497,-0.010418959,-0.009319089,-0.0020575142,-0.003676164,0.021910695,0.04481832,-0.05210021,-0.02741546,-0.006843029,-0.0072168764,0.019721793,-0.008928988,0.0055291457,0.0067888484,-0.008771864,0.019060789,-0.032183368,0.001410054,-0.011323777,-0.054050718,0.028954193,0.009503304,-0.02165063,-0.03172825,0.00852805,0.010451467,0.023037655,0.07494281,0.032811865,0.037471406,0.013870273,0.0037818165,-0.01092284,0.021878188,0.03617107,0.041112356,0.00003003222,-0.018616507,-0.018627342,0.036431137,0.027870579,-0.01784714,-0.03562926,0.03478404,-0.006669651,-0.037644785,0.0022945548,-0.027567167,-0.044233166,0.0027347736,0.0024340702,0.015799107,-0.027567167,0.0020927317,-0.023557791,-0.014076159,-0.022864277,0.02136889,-0.0055101826,0.0057269055,-0.004399477,-0.023406085,-0.009703773,0.0021049222,0.026982015,-0.0078995535,0.008972333,0.0042884066,-0.0019979153,0.0057919226,0.0038955961,0.0066804867,0.0425644,0.023774514,-0.004323624,0.016167536,-0.0012420937,0.009990931,0.027957268,-0.004320915,-0.0072927293,-0.0037086725,-0.028802488,-0.021412233,-0.018930756,0.021542268,-0.031576544,0.006268713,0.019234167,-0.025204886,0.03467568,-0.018302258,-0.005813595,0.020599522,0.021076312,0.022008222,0.005965301,-0.019721793,-0.020827081,0.0030828847,-0.0050144284,0.0007124769,0.019375037,0.0650169,-0.019407546,-0.018811557,-0.03287688,-0.0023744714,-0.000015968506,-0.008625575,0.010018021,-0.032096677,-0.03296357,-0.042629417,-0.014726329,-0.00489794,0.001083615,0.015549876,-0.0033727519,0.017294496,-0.014639639,-0.016330078,0.0073306556,0.002091377,0.016221717,0.018594835,-0.040613893,0.0383383,0.019765139,0.0032047916,-0.0044374038,-0.037428062,0.010982438,0.0032102095,-0.013556024,0.009367852,-0.0057269055,-0.011811404,0.046682134,0.0015956231,-0.03578097,-0.03185828,-0.010229326,-0.03456732,0.024142943,-0.0014926797,-0.039400242,0.014141176,-0.0040500113,-0.031099752,-0.0023595716,0.021997385,-0.040852286,-0.005019847,-0.0026927835,-0.006046572,-0.027198737,0.006707577,-0.037558097,0.02789225,0.030579617,-0.012190669,-0.0045078387,-0.0076178135,0.017641252,-0.0051119537,0.027307099,-0.014813018,-0.04512173,-0.0136318775,-0.004174627,-0.011107055,-0.024164615,-0.039226864,0.009703773,-0.024923146,0.006100753,0.0019897881,0.0071085147,-0.008603903,-0.011172071,0.029561019,0.0018787176,0.024056254,0.06293636,0.027155394,-0.021964876,-0.009161965,0.009107784,0.033223636,-0.008376344,0.006003227,-0.0092974175,-0.015950814,-0.014282046,-0.039681982,0.0022904912,-0.0069622267,0.0030720485,-0.00024347476,-0.027480477,-0.005997809,0.00041583728,-0.006073662,0.0057377415,-0.04087396,0.005992391,0.00605199,-0.011237088,0.029799413,-0.015658237,0.00909153,-0.021097984,0.004992756,0.0008154203,-0.012699968,0.039985396,-0.011410466,0.029799413,0.0025600404,0.013902781,0.011226252,0.0031397745,-0.021769825,-0.004207135,0.029886102,-0.04106901,0.031533197,-0.009703773,0.014715492,-0.029972792,0.003229173,0.028022286,-0.012418228,-0.018811557,-0.028000612,0.023037655,-0.0054587107,-0.05409406,0.002736128,0.013696894,-0.023601135,0.018898247,0.028954193,-0.01818306,-0.011377958,-0.038988467,0.010706116,0.0037140904,-0.040115427,-0.020675374,0.012721641,-0.028585766,0.005217606,-0.022842605,-0.0076774126,-0.01686105,-0.00015763212,-0.0061495155,0.016665999,-0.013729403,0.03146818,-0.03107808,0.013458499,0.007195204,-0.012049799,-0.012830002,0.00866892,-0.009237818,-0.041003995,-0.0017243024,0.016167536,0.00047949966,0.013155087,0.0064420914,0.06701075,-0.009497886,-0.015766598,0.017327005,-0.026440207,0.0072548026,0.03625776,-0.0040256297,0.027653856,0.037146322,0.000027513663,0.0027185192,-0.047115583,0.0014980978,0.021119658,-0.011973946,0.02325438,-0.03365708,-0.03079634,0.015376497,0.005694397,0.017554564,-0.002710392,0.015636565,0.0043507144,-0.014097831,0.02891085,-0.014422916,-0.052533656,0.018757377,0.0016091684,-0.010874077,0.008652666,-0.011085382,0.015560712,-0.005921956,0.018508146,0.0056618885,0.007807446,0.0034404777,0.03606271,0.017738778,-0.0046324544,0.014986396,0.02010106,-0.0122340135,0.010045111,0.02373117,0.0155932205,-0.019006608,0.03467568,-0.02297264,-0.019949352,0.017099446,0.024468027,-0.0051417532,0.00015610829,0.005781086,0.012678296,-0.028759142,-0.03465401,-0.009638756,0.00410961,-0.012201506,-0.008793536,-0.00027564456,0.006274131,-0.0041421186,-0.014531278,0.02212742,-0.0148888705,-0.0037086725,-0.026418535,0.0016200045,-0.033743773,-0.03890178,0.012569934,-0.06475683,-0.013187595,-0.005399112,-0.004478039,0.019580923,-0.011334613,0.024316322,0.0004368323,-0.0019328983,-0.060985856,0.00295556,0.05244697,-0.016254226,0.01883323,-0.024121271,-0.03259514,-0.0031912462,0.025833383,-0.038880106,-0.017164461,-0.03107808,-0.008761028,0.0068213567,0.009335344,0.013805255,-0.058341835,-0.022907622,0.011919766,-0.012038963,-0.028499076,0.013328465,0.003600311,0.04050553,-0.032920226,-0.050149705,0.055914536,0.025009835,0.0055860355,0.024533045,0.0133501375,0.024272976,0.0122340135,0.029170917,-0.039681982,0.03088303,0.0060953344,0.016362587,0.026591914,0.00090007775,0.020263601,-0.031684905,0.02713372,-0.039790343,-0.04455825,-0.03146818,-0.012266522,-0.048545953,0.006355402,0.011551336,-0.012981708,-0.036431137,-0.055134334,-0.017922992,-0.039226864,0.0021685846,-0.025855055,0.024229633,-0.030948045,0.012429064,-0.009530394,0.021249691,0.024251305,0.01874654,0.017933829,0.023557791,-0.04871933,0.056564704,-0.010272671,-0.0012190669,0.020837918,0.0041908813,0.0020480324,0.036972944,0.024186287,0.018063862,0.027198737,0.00083370635,0.006144097,0.012147324,-0.011768059,0.012559098,-0.0012393848,0.021390561,0.027632184,-0.0028634528,-0.01916915,0.014433753,-0.034740698,-0.027155394,-0.009476214,-0.009741699,-0.009004841,-0.005748578,-0.016254226,0.00852805,0.0014181812,-0.011908929,-0.020762064,-0.013761911,-0.010744043,-0.015430678,-0.029842759,0.01635175,0.015820779,-0.03370043,-0.01939671,-0.0122340135,0.006528781,-0.006073662,0.009324508,0.003107266,-0.01635175,0.039031815,0.011605517,0.032096677,-0.019277511,0.025551643,-0.040527202,0.008479288,-0.020902934,0.037796494,0.016059175,-0.051276665,0.026960341,0.0068159387,-0.050929908,0.035650935,0.027545495,0.04442822,0.024728095,-0.028390715,0.010960766,-0.012743313,0.027437132,0.055047642,0.0891165,0.026050106,-0.015246464,-0.00072940835,0.008972333,-0.029170917,0.042087607,0.0029961956,0.007904972,-0.009568321,0.01300338,0.004239644,-0.027567167,0.025573315,0.0011398275,0.026895326,-0.037059635,0.009183638,-0.0051363353,-0.0046378723,-0.03116477,0.016004995,-0.00954123,0.012494082,0.0129383635,0.0018299549,-0.0154523505,0.023471102,0.033288654,-0.00010099631,0.0026589204,-0.021585612,0.009850061,0.0019315438,-0.012049799,0.00084454246,0.032356746,0.00005197966,0.030406239,-0.02750215,0.022084074,-0.0048627225,-0.0068917917,0.008002497,-0.009589993,-0.039378572,0.017327005,-0.045728553,0.016330078,0.0024476154,-0.007845373,-0.0037655623,0.01168137,0.009270326,-0.011670534,-0.012721641,-0.009985512,0.033787116,0.02279926,0.05526437,0.024012908,0.0023988527,0.02581171,-0.024966491,0.0614193,0.046162,0.030362893,-0.0050604823,0.0133501375,-0.012190669,-0.011025783,0.020144403,0.0058623576,0.03562926,-0.004564728,0.026808636]},{"id":"count-subsequences","name":"Count Subsequences","description":"You are given two strings `s` and `t`, both consisting of english letters.\n    \nReturn the number of distinct **subsequences** of `s` which are equal to `t`.\n\n**Example 1:**\n\n```java\nInput: s = \"caaat\", t = \"cat\"\n\nOutput: 3\n```\n\nExplanation: Rhere are 3 ways you can generate `\"cat\"` from `s`.\n* (c)aa(at)\n* (c)a(a)a(t)\n* (ca)aa(t)\n\n**Example 2:**\n\n```java\nInput: s = \"xxyxy\", t = \"xy\"\n\nOutput: 5\n```\n\nExplanation: There are 5 ways you can generate `\"xy\"` from `s`.\n* (x)x(y)xy\n* (x)xyx(y)\n* x(x)(y)xy\n* x(x)yx(y)\n* xxy(x)(y)\n\n\n**Constraints:**\n* `1 <= s.length, t.length <= 1000`\n* `s` and `t` consist of English letters.\n","difficulty":"Hard","concepts":["Tree Maze","2-Dimension DP","LCS"],"solutions":{"python":"class Solution:\n    def numDistinct(self, s: str, t: str) -> int:\n        cache = {}\n\n        for i in range(len(s) + 1):\n            cache[(i, len(t))] = 1\n        for j in range(len(t)):\n            cache[(len(s), j)] = 0\n\n        for i in range(len(s) - 1, -1, -1):\n            for j in range(len(t) - 1, -1, -1):\n                if s[i] == t[j]:\n                    cache[(i, j)] = cache[(i + 1, j + 1)] + cache[(i + 1, j)]\n                else:\n                    cache[(i, j)] = cache[(i + 1, j)]\n        return cache[(0, 0)]\n","javascript":"class Solution {\n    /**\n     * @param {string} s\n     * @param {string} t\n     * @return {number}\n     */\n    numDistinct(s, t) {\n        const cache = new Array(s.length + 1)\n            .fill(0)\n            .map(() => new Array(t.length + 1).fill(0));\n\n        for (let i = 0; i <= s.length; i++) {\n            cache[i][t.length] = 1;\n        }\n        for (let j = t.length - 1; j >= 0; j--) {\n            cache[s.length][j] = 0;\n        }\n\n        for (let i = s.length - 1; i >= 0; i--) {\n            for (let j = t.length - 1; j >= 0; j--) {\n                if (s[i] === t[j]) {\n                    cache[i][j] = cache[i + 1][j + 1] + cache[i + 1][j];\n                } else {\n                    cache[i][j] = cache[i + 1][j];\n                }\n            }\n        }\n        return cache[0][0];\n    }\n}\n","cpp":"class Solution {\npublic:\n    int numDistinct(string s, string t) {\n        const int MOD = 1e9 + 7;\n        vector<vector<int>> cache(s.length() + 1, vector<int>(t.length() + 1, 0));\n\n        for (int i = 0; i <= s.length(); i++) {\n            cache[i][t.length()] = 1;\n        }\n        for (int j = t.length() - 1; j >= 0; j--) {\n            cache[s.length()][j] = 0;\n        }\n\n        for (int i = s.length() - 1; i >= 0; i--) {\n            for (int j = t.length() - 1; j >= 0; j--) {\n                if (s[i] == t[j]) {\n                    cache[i][j] = (cache[i + 1][j + 1] + cache[i + 1][j]) % MOD;\n                } else {\n                    cache[i][j] = cache[i + 1][j];\n                }\n            }\n        }\n        return cache[0][0];\n    }\n};\n","java":"class Solution {\n    public int numDistinct(String s, String t) {\n        int[][] cache = new int[s.length() + 1][t.length() + 1];\n        \n        for (int i = 0; i <= s.length(); i++) {\n            cache[i][t.length()] = 1;\n        }\n        for (int j = t.length() - 1; j >= 0; j--) {\n            cache[s.length()][j] = 0;\n        }\n        \n        for (int i = s.length() - 1; i >= 0; i--) {\n            for (int j = t.length() - 1; j >= 0; j--) {\n                if (s.charAt(i) == t.charAt(j)) {\n                    cache[i][j] = cache[i + 1][j + 1] + cache[i + 1][j];\n                } else {\n                    cache[i][j] = cache[i + 1][j];\n                }\n            }\n        }\n        return cache[0][0];\n    }\n}\n","csharp":"public class Solution {\n    public int NumDistinct(string s, string t) {\n        int[,] cache = new int[s.Length + 1, t.Length + 1];\n        \n        for (int i = 0; i <= s.Length; i++) {\n            cache[i, t.Length] = 1;\n        }\n        for (int j = t.Length - 1; j >= 0; j--) {\n            cache[s.Length, j] = 0;\n        }\n        \n        for (int i = s.Length - 1; i >= 0; i--) {\n            for (int j = t.Length - 1; j >= 0; j--) {\n                if (s[i] == t[j]) {\n                    cache[i, j] = cache[i + 1, j + 1] + cache[i + 1, j];\n                } else {\n                    cache[i, j] = cache[i + 1, j];\n                }\n            }\n        }\n        return cache[0, 0];\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def numDistinct(self, s: str, t: str) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {string} s\n     * @param {string} t\n     * @return {number}\n     */\n    numDistinct(s, t) {}\n}\n","cpp":"class Solution {\npublic:\n    int numDistinct(string s, string t) {\n        \n    }\n};\n","java":"class Solution {\n    public int numDistinct(String s, String t) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int NumDistinct(string s, string t) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/-RDzMJ33nx8","embedding":[0.016639736,-0.055075645,0.032639056,-0.053353153,-0.0059183133,-0.0013132638,0.0038176433,0.0074531,-0.009054136,0.01741265,0.020327639,-0.026080329,-0.0061281044,-0.019455351,0.044608183,-0.00915351,-0.01842848,0.0054407627,-0.011803502,0.020272432,0.031733643,-0.010583402,0.052734822,0.0012297615,0.048141506,0.021277219,-0.02093493,-0.01328308,-0.022315133,0.019576808,0.010081007,-0.01538099,0.026676577,-0.001979212,0.0026665535,0.04818567,0.016639736,0.031115312,-0.0030944166,-0.025285332,0.0026458504,-0.015160157,-0.025263248,-0.012167876,0.010947775,-0.03849112,0.037519455,0.017799107,-0.06850227,0.00427035,0.00096545246,0.02263534,-0.0600223,-0.03186614,-0.064924784,-0.027913239,-0.06881143,0.039529033,0.033434052,-0.01429891,0.010804234,-0.008452367,-0.008021744,0.015668072,0.027361158,-0.009799446,0.006067375,0.015358906,-0.012002251,-0.039396532,-0.07684974,0.044608183,-0.0044967034,-0.033235304,-0.021564303,0.022834089,-0.022591174,0.010467465,0.020106807,-0.017633483,0.025219081,-0.037696123,0.035134465,0.017986814,-0.007419975,0.0044552973,-0.016584527,0.0057306057,-0.051144827,-0.024578666,-0.055208147,0.034471966,0.009528927,0.0026044443,0.013095372,-0.050923996,0.07919057,0.014497659,-0.025572414,0.016385779,-0.00399707,0.008684241,0.026124494,0.046507344,-0.00684581,0.0153478645,0.026367411,-0.008529658,-0.026036162,0.0074917455,0.0031054583,-0.010207986,0.060684796,-0.036282793,0.032175306,0.007546954,-0.06620561,-0.03462655,0.014806825,0.006564249,0.033169053,-0.031424478,0.044674434,-0.033986136,-0.040876113,0.014475576,0.019344935,-0.07570141,0.003991549,-0.05785814,0.044343185,-0.06324645,0.002466424,0.012885582,0.011682044,-0.0593598,-0.03186614,0.018594103,-0.002039941,0.018406397,-0.015712239,-0.0016148383,-0.023452422,0.022348259,0.030850312,-0.034030303,-0.077468075,0.024711166,-0.0063765408,0.03544363,-0.007210184,-0.026610326,0.046860676,0.05405982,-0.006796123,-0.07486225,0.032241557,-0.018671395,0.0394407,0.020349722,-0.019521601,-0.03517863,-0.0076187244,0.0014947606,0.016584527,-0.04162694,0.024137001,0.0019240039,-0.021553261,-0.030695729,-0.008932678,-0.042068608,-0.026146578,0.020625765,0.026367411,-0.022337217,-0.053927317,-0.007916848,-0.022359299,0.00084330444,-0.041229445,0.001741817,-0.0055594603,-0.016164945,0.03151281,-0.008104556,0.0224918,-0.04127361,-0.0018936394,0.02114472,-0.011014026,0.032285724,0.02561658,0.010108612,-0.0063047702,-0.020217223,0.025859496,0.0089105945,-0.046507344,0.002487127,-0.055208147,-0.016496195,-0.01898056,0.0012421833,0.028001573,-0.03701154,-0.021321386,-0.021155762,0.00041164574,-0.013702662,0.01334933,0.024622833,-0.0037624352,-0.013338288,0.012830373,-0.011693086,-0.004085403,-0.039374452,-0.0071936217,0.041781526,-0.039551117,0.038910702,-0.0048969625,0.031358227,0.0393082,0.01036809,-0.028995318,-0.018892229,0.019079935,-0.0003685144,0.0026858763,0.02594783,0.027184492,-0.03868987,0.012278291,-0.0053717527,-0.010666214,-0.01328308,0.015038699,-0.026477827,-0.018185563,-0.025285332,-0.0009412989,-0.014541826,0.008148722,-0.013846203,-0.031247811,0.060154796,-0.012013293,-0.010528194,-0.0061281044,0.034803215,-0.010268715,-0.054236483,-0.016551403,0.019289726,0.029591566,-0.021222012,0.022381382,0.03314697,-0.08179639,0.004206861,-0.06227479,-0.09186636,-0.030386563,-0.035554048,0.021873469,0.0349578,0.018262856,0.034935717,-0.0055898246,-0.013393496,-0.015093908,-0.024357835,-0.0050184205,-0.026168661,0.00037230994,-0.022789923,0.016308486,-0.041582774,-0.06598478,-0.03531113,0.022812007,-0.029304484,-0.0055152937,-0.029304484,0.0018825978,0.03840279,-0.04186986,-0.07344892,0.0016548642,0.029105734,-0.007933411,0.016904734,-0.06483645,-0.021122636,-0.026676577,-0.0018605145,0.0013270659,-0.024931999,0.010859443,-0.043393604,0.014254743,0.045094013,-0.05834397,-0.04363652,0.0047479006,-0.02778074,-0.019212436,-0.009357781,-0.012797249,-0.009954029,-0.014630159,0.015237449,-0.01287454,-0.041582774,-0.022745756,-0.00616675,0.024755333,0.0041240486,0.018936394,-0.01443141,0.06801644,0.03760779,0.0015623906,0.014409326,-0.03727654,-0.021575343,-0.004524308,-0.038137786,-0.0028515009,-0.0010593063,0.012896623,0.01958785,-0.04480693,-0.002398794,0.046728175,0.003218635,0.023032838,0.05684231,0.0016838484,-0.017920565,0.030408647,0.020073682,-0.0004113007,-0.0029370734,0.015093908,0.027559906,0.027736573,0.0021972843,0.034516133,0.005802376,-0.0038369661,-0.04242194,-0.010511631,-0.0018066866,-0.03219739,0.031071145,-0.03252864,-0.016308486,0.03570863,0.009595176,0.018627228,-0.024843667,-0.0014740576,0.024667,0.004885921,0.019930141,0.024181169,0.019201394,-0.011135483,0.009672468,-0.0034532696,-0.007806432,-0.027096158,0.010092049,-0.012477041,0.04438735,0.031137396,0.037144043,0.0007936171,0.016474111,-0.027316991,-0.004281392,0.02114472,0.03599571,0.050791495,-0.020824512,-0.054324817,-0.061303128,-0.01389037,-0.009252885,0.06439478,0.040368196,-0.010721422,0.012156834,0.0044580577,0.056974806,-0.032683223,0.069694765,0.032020725,0.02161951,0.026389495,-0.02154222,0.009567572,0.034295302,-0.024821583,0.017644525,0.016319528,0.012443916,0.011163088,0.03632696,0.00011429812,-0.011461211,-0.009523406,0.010953296,-0.010986421,0.034692798,0.029105734,-0.012035376,0.00013577753,-0.019367019,0.04343777,-0.0039142575,0.015336823,0.019565767,-0.029989066,-0.020327639,-0.00020720308,-0.009059657,-0.016187029,0.019698266,0.009114865,-0.0066525815,-0.036371127,0.072388925,-0.0034367072,0.04202444,-0.008126639,-0.031556975,-0.021188887,-0.032616973,-0.004378006,0.013393496,-0.0019253842,-0.009876737,0.041980274,0.031755727,0.10069966,0.026963659,0.026610326,0.024976166,-0.0061557083,-0.012885582,-0.0146743255,-0.003028167,0.0007556615,0.022513883,0.014619118,-0.029260319,-0.00040854028,0.00759112,-0.03517863,-0.003414624,0.052204825,-0.0020302795,0.006790602,-0.00982705,0.036547795,-0.03740904,0.0337653,-0.02270159,-0.004424933,0.028796569,0.008987886,0.007442058,0.029834483,0.04602151,-0.0019309049,-0.044210684,0.006823727,-0.026080329,-0.029503234,0.008800179,-0.05821147,-0.044939432,0.052955654,-0.004090924,-0.00030122945,-0.0012594359,-0.012112668,0.004328319,0.015160157,-0.00833643,0.0088112205,0.029304484,0.07093143,-0.028421154,-0.015303698,-0.026786992,-0.01145017,-0.0052944613,-0.004032955,0.018329104,0.0061115418,0.029944899,0.019830767,-0.033124886,0.042002358,0.025793247,0.013879328,-0.045226514,-0.0027824906,-0.012057459,0.035642378,-0.014442451,-0.02121097,-0.009600697,-0.04107486,0.0091976775,0.0016258799,-0.033787385,-0.014155369,0.022789923,0.017235983,-0.03990445,-0.028376987,-0.055605646,-0.05719564,-0.012388708,0.018892229,-0.019400142,-0.018737646,0.0348253,-0.00055863743,-0.0057361266,-0.0077567445,-0.005244774,-0.012355583,0.0045629535,-0.0016120779,0.0072598713,0.013581204,-0.013647454,-0.03645946,-0.01673911,0.0057030017,0.013393496,0.0018522333,-0.01667286,0.0059183133,-0.00044822114,0.00691206,-0.012355583,-0.014895158,-0.017655564,-0.023121173,0.005280659,0.010693818,0.019521601,-0.019477434,-0.02033868,0.033721138,-0.03475905,0.008584867,0.04085403,0.010235591,0.033014473,-0.023452422,-0.0022483517,0.009114865,-0.036349043,-0.023143254,-0.030408647,0.0069010183,0.010152779,-0.018494729,-0.008778095,-0.006337895,0.022944506,0.0055263354,0.030607397,0.019102018,0.01592203,-0.03531113,-0.016253278,0.0088112205,0.008634554,0.00894372,-0.042797357,-0.00867872,0.035333212,0.062716454,-0.0022897578,-0.013945578,-0.021133678,-0.0015416875,-0.007088726,0.01084288,0.012090584,0.0015209845,0.020824512,0.013735787,-0.028686153,-0.0014009067,-0.0012249307,0.02555033,0.049908165,0.011030587,0.029083652,0.019378059,-0.018273897,0.000094975265,-0.020095766,0.026014078,-0.007331642,-0.016794318,0.019775558,0.015358906,0.025064498,0.051807325,0.03184406,0.03701154,-0.00019219336,0.026168661,0.0067243525,-0.041914023,0.004085403,-0.008673199,0.023077006,-0.0441886,0.0224918,0.019135144,0.0064483117,-0.0017431972,0.040831946,0.014652242,0.050791495,0.014696409,-0.0172139,0.05388315,-0.023275755,-0.0010820797,-0.001165582,0.007265392,-0.0043310793,0.010346007,-0.000711495,0.010881525,-0.019897016,0.020636804,-0.0033732178,0.038999036,-0.012973915,0.027692406,0.00010929488,0.008071431,-0.056533143,-0.038999036,0.008176327,0.015093908,0.018616186,0.019124102,-0.009473718,-0.0061777914,-0.055649813,0.0024898874,-0.032550722,0.021630552,-0.010566839,0.023077006,0.0018867385,0.07601058,0.017567232,-0.03963945,0.01891431,0.030938646,-0.011869752,-0.06576394,-0.030717812,0.011969126,0.02568283,0.0070003932,0.013426621,-0.0006065995,-0.008021744,-0.023364088,0.018174522,-0.027736573,0.0013608808,-0.018516812,-0.014585992,-0.026455743,-0.014530784,0.031004895,-0.010931213,0.00014785431,0.011240379,0.020559514,-0.06624977,-0.006939664,0.0098933,0.0040467572,-0.0034587905,-0.010163819,0.0075248703,0.019775558,-0.018384313,-0.0024291584,0.03557613,-0.003483634,0.018097231,-0.011008505,0.0220943,-0.04107486,-0.0026003036,0.007210184,0.023496587,0.017456817,-0.036415294,0.015270573,0.04032403,-0.00027897366,-0.009092782,-0.0075800787,-0.0070224763,-0.012189959,-0.01410016,0.039197784,-0.013249955,-0.021244096,0.038093623,0.0026969179,0.005189566,0.013581204,-0.022679506,0.00017218041,0.022878256,-0.0044000894,-0.033632804,-0.044829015,0.024976166,-0.00873945,-0.012145792,0.02663241,0.029083652,-0.012587458,0.022392424,-0.040942363,0.009816009,-0.021696802,0.00542144,0.034206968,-0.008198409,-0.021045346,0.02290034,0.0445861,0.023960335,-0.03347822,0.040809862,-0.009092782,0.0020178577,-0.0072212256,0.032351974,0.03796112,0.004963212,-0.039396532,0.0042372253,-0.046374843,-0.00084054406,-0.035156548,-0.04769984,-0.008408201,-0.017467858,-0.014541826,-0.028487403,-0.011969126,-0.0011510899,0.0033594158,-0.023474503,-0.0055097733,0.008049347,-0.010009237,-0.011163088,0.003400822,0.02744949,-0.001009619,-0.016628694,0.048539,-0.0103018405,0.010042362,-0.000087686065,0.0037044666,-0.012300375,0.0037375914,0.00024619384,0.019632017,-0.04487318,-0.012278291,-0.019234518,-0.0017666607,0.006580811,0.012532249,0.010268715,-0.026544077,-0.0031965517,-0.010544756,-0.025726996,-0.0007466902,0.012929748,-0.013514955,0.012388708,-0.015303698,-0.0043007145,0.019609934,0.00007923232,-0.04025778,0.024667,0.054854814,0.0007894765,-0.022745756,-0.0057913344,0.0052834195,0.029856566,-0.004137851,-0.046374843,0.007778828,-0.030187815,0.013746829,-0.0018881186,0.024909915,0.00359129,-0.010047883,0.022944506,0.054854814,0.037386958,0.028288655,-0.0053938357,-0.037386958,0.026212828,-0.016904734,0.005901751,-0.048229836,-0.05224899,-0.041163195,-0.0045850365,-0.0027824906,-0.018262856,0.028575737,-0.04641901,0.0044552973,0.034295302,0.010047883,-0.006050813,-0.0062109167,0.021696802,0.010307361,0.02568283,-0.005211649,0.03252864,0.01077111,-0.0037293104,0.0035636858,-0.03504613,0.012775165,0.047964837,-0.017622441,0.015778488,-0.029149901,-0.026676577,0.014177452,0.04716984,-0.020968053,-0.015811613,0.016639736,-0.021199929,0.023297839,0.008838824,-0.00048479653,-0.020990137,0.02404867,-0.0026513713,-0.036194462,0.016109737,0.0052668573,-0.012554333,0.0033759782,0.0073206,0.006796123,-0.015016616,0.036547795,-0.01728015,0.012234125,-0.05189566,-0.019488476,-0.005048785,0.019102018,-0.017732857,0.03610613,0.0015485885,0.0025644184,0.00032641817,-0.0048224316,0.031623226,-0.028421154,0.01775494,-0.015358906,0.013470788,-0.03259489,0.01951056,-0.022988671,-0.009920904,-0.016982026,0.034118634,0.013537037,-0.008916115,-0.027361158,0.016628694,0.020305557,0.048141506,-0.011008505,-0.016959943,0.015303698,-0.022944506,0.016750151,-0.00017131778,0.01944431,0.011958085,0.0024098356,0.034052383,0.031004895,0.009429552,0.018748688,-0.0049107648,-0.028222404,-0.03504613,-0.012554333,-0.011328712,0.041604858,-0.010848401,-0.034913633,-0.011152046,-0.039683618,-0.0045519117,-0.037099876,-0.018693479,0.027802823,-0.029436983,0.025991995,0.025373664,0.04209069,-0.03118156,-0.008430284,-0.005396596,-0.0007377189,0.0071660173,-0.018737646,-0.023010755,0.010682777,0.009009969,0.03550988,0.01043434,0.018075148,0.012201,-0.014850992,0.01016934,-0.0025782206,0.007977577,-0.020327639,-0.065410614,0.000752211,0.00018615497,-0.027074074,-0.0023684294,-0.036194462,-0.030519063,0.019797642,0.01315058,0.0045160265,-0.020879721,-0.0010082388,-0.002636189,0.0111134,0.006221958,-0.008281222,0.0018398114,-0.011196212,0.030541146,0.009501322,0.032307807,0.045712344,0.011682044,-0.0032296765,-0.014343076,-0.045712344,-0.035598215,0.010798713,-0.0020620243,-0.040169448,-0.00012111287,-0.015237449,-0.03789487,0.03383155,0.02140972,-0.021310344,0.006580811,-0.0073702876,0.008005181,-0.016705986,0.0499965,-0.02256909,-0.0122230835,0.0049494104,0.0030640522,0.014563909,0.010931213,0.037939038,-0.0060894587,-0.031799894,-0.01436516,-0.0034118635,-0.007922369,-0.027272824,-0.015734322,0.011036108,0.01267579,-0.02561658,0.019135144,-0.022789923,0.050173163,-0.012311417,0.0017307753,-0.0013629511,0.013658496,-0.002045462,0.025528247,0.046684008,-0.015358906,0.005230972,0.006967268,-0.019775558,-0.009512364,-0.0021848625,-0.02121097,-0.008275702,0.014078078,-0.009208719,0.022326175,-0.018141396,-0.012885582,-0.0047699837,0.04092028,-0.019609934,-0.01640786,0.020714097,0.030607397,0.013658496,0.01863827,-0.016849527,0.021873469,-0.004927327,0.0015886144,-0.02948115,-0.015668072,-0.001307743,-0.053529818,-0.011234858,-0.02181826,-0.024931999,0.017269108,0.016948901,-0.0032075932,-0.021244096,-0.0120795425,0.006310291,-0.005813418,-0.041582774,0.011141004,0.01688265,-0.02263534,0.0056257104,-0.007972056,-0.023297839,-0.019598892,0.012587458,0.048671503,-0.049952332,0.00051723135,-0.05361815,-0.0058244597,0.03305864,0.0069838306,0.011212775,0.020912847,-0.0009102443,0.0040826425,-0.03259489,-0.049245667,0.016319528,0.032175306,-0.00250783,0.017202858,0.036371127,-0.0298124,-0.023872003,-0.008640075,-0.0052889404,0.045844845,-0.023562837,0.016352654,0.047611505,0.0002046152,-0.018064106,0.02561658,-0.017699732,-0.01599932,0.0046126405,-0.0071218507,-0.026080329,0.0036492585,-0.013272039,-0.022138467,0.021464927,0.033014473,-0.0497315,-0.047523174,-0.006078417,0.023982419,-0.00048548664,0.0009978872,0.034449883,-0.037629873,-0.0028031936,-0.0063875825,-0.0005582924,0.012178917,-0.014309952,-0.016982026,-0.036768626,0.013371414,-0.014563909,-0.013746829,0.0034256654,-0.026256995,0.019455351,0.042399857,-0.0059183133,0.054457314,0.005048785,0.009021011,-0.005322065,-0.016440986,-0.0088112205,-0.013448705,-0.010461944,0.01483995,0.003941862,-0.008352993,0.022834089,-0.0247995,-0.005686439,0.0036961855,0.048892334,-0.024777416,0.024976166,0.02689741,-0.0014754378,0.015679114,0.0125101665,-0.01585578,-0.019278685,-0.0085407,0.024512418,-0.015160157,0.021056388,-0.016297445,-0.0006276476,-0.014210577,-0.008579346,0.008987886,-0.04818567,-0.008684241,-0.029657817,-0.0006894117,-0.022061175,-0.014442451,-0.03789487,-0.023408255,0.017986814,-0.0012794489,0.032793637,0.013901412,-0.014806825,-0.008038307,-0.009644863,0.024137001,0.008590387,-0.017169734,-0.012852456,-0.046904843,-0.0026099652,-0.016507236,-0.040213615,-0.0044635786,-0.034692798,0.004297954,0.009562051,-0.009689029,-0.0104950685,0.01673911,0.008226014,-0.0029260318,-0.032616973,-0.07071059,-0.00036506387,-0.05732814,-0.038579453,0.010903609,0.0054462836,0.0026789752,0.0004316587,0.015778488,0.023938252,-0.021939717,0.015193282,-0.0348253,0.0020965294,0.03321322,0.028774487,-0.016794318,-0.02243659,-0.012355583,-0.017666606,-0.017368482,0.014508701,-0.015601822,-0.013846203,0.0031358227,0.0069783097,-0.012344542,-0.029326567,0.01185871,-0.02391617,0.023960335,0.04681651,-0.017434733,-0.00026396394,0.06496894,-0.00015009716,-0.0017984054,0.027604073,-0.011196212,0.016485153,-0.029701984,0.006613936,0.008005181,-0.007845078,0.009109344,-0.017523065,-0.023364088,-0.017799107,-0.021266177,0.006343416,-0.011902876,0.012896623,-0.020923888,-0.01626432,-0.003469832,-0.012024335,-0.0130401645,-0.0067795604,0.02820032,0.0060066464,-0.015082866,0.032462392,0.007811953,-0.015060782,-0.0043007145,-0.044564016,0.010528194,0.014398284,0.048627336,0.0054932106,-0.0140007865,0.012532249,0.026433662,-0.019400142,-0.0006697438,-0.007839557,-0.036437377,0.009672468,0.010682777,0.04067736,0.019521601,0.002554757,-0.0024402002,-0.020625765,0.06395312,-0.057902303,-0.020526389,-0.0038480079,0.0020827274,0.0009454395,-0.012278291,0.008695283,0.04127361,0.023032838,-0.0049494104,0.016010363,0.03471488,0.01843952,0.0011193452,-0.007149455,-0.005658835,-0.020603681,-0.030121565,0.01870452,-0.013338288,0.008419243,0.014122244,-0.015060782,0.02744949,0.007949973,-0.018715562,0.00298124,0.017534107,0.04085403,0.01213475,0.014519743,0.001247014,-0.0081432015,-0.022304092,-0.020515347,-0.044674434,-0.0073206,-0.004264829,0.027316991,0.037718207,0.00454087,0.006426228,-0.031954475,-0.008192889,-0.010312882,-0.015844738,0.01239975,-0.009308093,0.02181826,-0.0053413883,-0.041096944,-0.033036556,-0.031358227,-0.020184098,-0.021056388,0.0010537856,0.0142437015,0.008270181,-0.028222404,0.050658997,0.02189555,-0.004988056,-0.026809076,-0.020979095,0.0065311235,-0.014696409,0.00921424,0.016065571,-0.0015444478,-0.0052668573,0.0076297657,-0.004723057,0.01593307,-0.03427322,-0.05578231,-0.0015582499,-0.0391757,-0.015800571,-0.0107821515,0.047258172,-0.020901805,0.03610613,-0.009766322,0.04162694,-0.003969466,-0.027206575,0.012267251,0.01986389,0.050570663,0.019632017,0.015414115,0.0032296765,-0.0055208146,-0.0054048775,0.0006500759,0.009004449,0.023805752,0.0003483289,0.03436155,0.024512418,-0.0050460245,-0.0035029568,-0.0072488296,0.018240772,0.04593318,0.008292263,0.00962278,-0.017997855,-0.008623512,0.025704913,-0.0024774657,-0.0064207073,-0.0047948277,0.008921636,-0.023827836,-0.042863604,-0.018417438,-0.03807154,-0.0034919153,-0.008314347,-0.032219473,0.0099650705,-0.004941129,-0.010920172,-0.027537823,-0.044762764,0.019908058,-0.023496587,0.00041578634,0.04012528,-0.025638664,-0.062848955,-0.05366232,-0.017699732,0.026544077,-0.02053743,0.039131533,0.03409655,0.009705592,0.052072324,-0.0025174916,0.0352228,0.053971484,-0.031910308,0.0070169554,-0.00813216,-0.017765982,-0.017710773,0.030784063,-0.018284937,-0.03338989,0.004043997,-0.040368196,0.010732464,-0.03226364,-0.0026113454,0.041759443,-0.0000869097,0.023253672,-0.028111989,0.014232661,-0.004634724,-0.0055870647,0.006337895,0.014619118,0.0028570215,0.013459746,-0.021365553,0.0492015,0.008866428,0.021729926,-0.013779953,0.03740904,-0.0804714,0.009495801,-0.012598499,-0.0242695,0.0071108094,0.011737252,0.025241164,0.023275755,-0.016551403,-0.0035719671,0.0020482223,-0.012764123,0.05388315,0.030033233,0.0058244597,-0.016098695,0.006288208,-0.018627228,0.014320993,-0.0027121003,-0.020581597,0.021840343,0.039926533,-0.020415973,0.04553568,0.0037624352,0.0027479855,0.003367697,0.00051757635,0.0012635764,-0.025263248,0.033434052,-0.0011096838,-0.02764824,-0.011593711,-0.010528194,-0.0017818429,-0.0068734144,0.029724067,0.033102807,0.0019295247,-0.022856172,-0.012918706,-0.0061777914,0.002270435,-0.018185563,0.020162014,0.009920904,0.035156548,0.050747328,0.003963945,0.03517863,0.0026610326,0.0072543505,0.024159085,0.031954475,0.019731391,-0.029149901,-0.04228944,-0.02128826,0.001613458,0.040655278,0.0065366444,-0.0038673307,0.039396532]},{"id":"edit-distance","name":"Edit Distance","description":"You are given two strings `word1` and `word2`, each consisting of lowercase English letters.\n\nYou are allowed to perform three operations on `word1` an unlimited number of times:\n\n* Insert a character at any position\n* Delete a character at any position\n* Replace a character at any position\n\nReturn the minimum number of operations to make `word1` equal `word2`.\n\n**Example 1:**\n\n```java\nInput: word1 = \"monkeys\", word2 = \"money\"\n\nOutput: 2\n```\n\nExplanation: \n`monkeys` -> `monkey` (remove `s`)\n`monkey` -> `monkey`  (remove `k`)\n\n**Example 2:**\n\n```java\nInput: word1 = \"neatcdee\", word2 = \"neetcode\"\n\nOutput: 3\n```\n\nExplanation: \n`neatcdee` -> `neetcdee`  (replace `a` with `e`)\n`neetcdee` -> `neetcde`   (remove last `e`)\n`neetcde`  -> `neetcode`  (insert `o`)\n\n**Constraints:**\n* `0 <= word1.length, word2.length <= 100`\n* `word1` and `word2` consist of lowercase English letters.\n","difficulty":"Medium","concepts":["Tree Maze","2-Dimension DP","LCS"],"solutions":{"python":"class Solution:\n    def minDistance(self, word1: str, word2: str) -> int:\n        dp = [[float(\"inf\")] * (len(word2) + 1) for i in range(len(word1) + 1)]\n\n        for j in range(len(word2) + 1):\n            dp[len(word1)][j] = len(word2) - j\n        for i in range(len(word1) + 1):\n            dp[i][len(word2)] = len(word1) - i\n\n        for i in range(len(word1) - 1, -1, -1):\n            for j in range(len(word2) - 1, -1, -1):\n                if word1[i] == word2[j]:\n                    dp[i][j] = dp[i + 1][j + 1]\n                else:\n                    dp[i][j] = 1 + min(dp[i + 1][j], dp[i][j + 1], dp[i + 1][j + 1])\n        return dp[0][0]\n","javascript":"class Solution {\n    /**\n     * @param {string} word1\n     * @param {string} word2\n     * @return {number}\n     */\n    minDistance(word1, word2) {\n        const dp = new Array(word1.length + 1)\n            .fill(0)\n            .map(() => new Array(word2.length + 1).fill(0));\n\n        for (let j = 0; j <= word2.length; j++) {\n            dp[word1.length][j] = word2.length - j;\n        }\n        for (let i = 0; i <= word1.length; i++) {\n            dp[i][word2.length] = word1.length - i;\n        }\n\n        for (let i = word1.length - 1; i >= 0; i--) {\n            for (let j = word2.length - 1; j >= 0; j--) {\n                if (word1[i] === word2[j]) {\n                    dp[i][j] = dp[i + 1][j + 1];\n                } else {\n                    dp[i][j] =\n                        1 +\n                        Math.min(\n                            dp[i + 1][j],\n                            Math.min(dp[i][j + 1], dp[i + 1][j + 1]),\n                        );\n                }\n            }\n        }\n        return dp[0][0];\n    }\n}\n","cpp":"class Solution {\npublic:\n    int minDistance(string word1, string word2) {\n        vector<vector<int>> dp(word1.length() + 1, vector<int>(word2.length() + 1, 0));\n\n        for (int j = 0; j <= word2.length(); j++) {\n            dp[word1.length()][j] = word2.length() - j;\n        }\n        for (int i = 0; i <= word1.length(); i++) {\n            dp[i][word2.length()] = word1.length() - i;\n        }\n\n        for (int i = word1.length() - 1; i >= 0; i--) {\n            for (int j = word2.length() - 1; j >= 0; j--) {\n                if (word1[i] == word2[j]) {\n                    dp[i][j] = dp[i + 1][j + 1];\n                } else {\n                    dp[i][j] = 1 + min(dp[i + 1][j], min(dp[i][j + 1], dp[i + 1][j + 1]));\n                }\n            }\n        }\n        return dp[0][0];\n    }\n};\n","java":"class Solution {\n    public int minDistance(String word1, String word2) {\n        int[][] dp = new int[word1.length() + 1][word2.length() + 1];\n\n        for (int j = 0; j <= word2.length(); j++) {\n            dp[word1.length()][j] = word2.length() - j;\n        }\n        for (int i = 0; i <= word1.length(); i++) {\n            dp[i][word2.length()] = word1.length() - i;\n        }\n\n        for (int i = word1.length() - 1; i >= 0; i--) {\n            for (int j = word2.length() - 1; j >= 0; j--) {\n                if (word1.charAt(i) == word2.charAt(j)) {\n                    dp[i][j] = dp[i + 1][j + 1];\n                } else {\n                    dp[i][j] = 1 + Math.min(dp[i + 1][j], Math.min(dp[i][j + 1], dp[i + 1][j + 1]));\n                }\n            }\n        }\n        return dp[0][0];\n    }\n}\n","csharp":"public class Solution {\n    public int MinDistance(string word1, string word2) {\n        int[,] dp = new int[word1.Length + 1, word2.Length + 1];\n\n        for (int j = 0; j <= word2.Length; j++) {\n            dp[word1.Length, j] = word2.Length - j;\n        }\n        for (int i = 0; i <= word1.Length; i++) {\n            dp[i, word2.Length] = word1.Length - i;\n        }\n\n        for (int i = word1.Length - 1; i >= 0; i--) {\n            for (int j = word2.Length - 1; j >= 0; j--) {\n                if (word1[i] == word2[j]) {\n                    dp[i, j] = dp[i + 1, j + 1];\n                } else {\n                    dp[i, j] = 1 + Math.Min(dp[i + 1, j], Math.Min(dp[i, j + 1], dp[i + 1, j + 1]));\n                }\n            }\n        }\n        return dp[0, 0];\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def minDistance(self, word1: str, word2: str) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {string} word1\n     * @param {string} word2\n     * @return {number}\n     */\n    minDistance(word1, word2) {}\n}\n","cpp":"class Solution {\npublic:\n    int minDistance(string word1, string word2) {\n        \n    }\n};\n","java":"class Solution {\n    public int minDistance(String word1, String word2) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int MinDistance(string word1, string word2) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/XYi2-LPrwm4","embedding":[0.0033377612,-0.025733307,0.050376732,-0.020334357,-0.039740298,0.0038322443,0.050255634,0.034109246,-0.05199137,0.05388857,-0.028821303,-0.014279462,-0.0300121,0.03237351,0.027933251,-0.03427071,0.024784707,-0.0049397857,0.014541841,0.050255634,-0.039033893,0.026338797,0.0013005411,0.020909574,0.07613022,0.023654459,0.014572116,-0.009208487,0.035118394,-0.042828295,0.0033276698,-0.007144777,-0.01777112,-0.035723884,-0.024239765,0.01716563,-0.022887506,0.02629843,0.009021794,-0.0077250376,-0.047066722,0.025248915,-0.029305695,-0.025592025,-0.015490442,-0.032978997,0.01798304,0.04198061,0.021091219,0.0014847108,-0.034028515,0.046340134,-0.020869207,-0.023371898,-0.015429893,0.0026414483,0.024522327,0.012432719,0.06741117,-0.020041704,0.03996231,0.023634275,0.009168121,-0.007185143,-0.009990578,-0.011938236,0.041193474,-0.007886502,0.020768292,-0.031465273,-0.018830726,0.0010476231,0.0036657348,-0.030577224,-0.027287396,0.038912795,-0.0072658747,0.03439181,0.0017205995,0.008264933,-0.04629977,-0.047752943,0.051829908,-0.0029870819,-0.03340284,-0.021595795,-0.0127455555,0.040043045,-0.0077654035,-0.05913615,0.0017647498,-0.04710709,0.030718504,0.0002710512,0.041738413,0.006307183,0.03253497,-0.015520716,-0.021999454,-0.019829784,-0.007901639,0.0041930154,0.0021936384,0.015641814,-0.033281744,-0.08638318,-0.005817746,-0.014652847,-0.018033497,0.014531749,-0.056552727,0.013139124,-0.017438099,0.030980883,0.05009417,-0.06333421,0.0011119563,-0.02290769,-0.0017344754,-0.018608714,-0.0086484095,-0.033745952,-0.011030002,-0.027549775,-0.02385629,0.016176663,-0.03378632,-0.07919803,0.0036657348,-0.021454513,0.02995155,-0.031021249,0.016045474,0.040608168,-0.024078302,-0.024623243,-0.0019085535,0.012160249,-0.0050507924,0.04488696,0.004137512,-0.032676253,-0.032212045,0.029830452,-0.020849025,-0.0051592756,0.0076291687,0.010585976,-0.02900295,0.0125639085,-0.010303414,-0.031243261,0.0064333268,0.03915499,0.002444664,-0.035380773,0.01277583,0.020990305,0.037076145,-0.016852792,-0.040809996,-0.046824526,-0.023230616,-0.02041509,0.027973618,0.01771057,-0.0156216305,0.004957446,-0.040386155,-0.033907417,-0.016529866,-0.054372963,-0.024441596,-0.020707743,0.03743944,-0.029184597,-0.042545732,-0.04726855,-0.025935136,0.021353599,-0.02656081,-0.004394845,-0.007871364,0.013381319,0.021515062,0.009491049,-0.004107238,0.016085839,-0.03804493,0.0012589138,0.025470927,0.03953847,0.0033125326,-0.02670209,-0.013966626,0.030698322,0.01792249,0.005007903,0.0003118902,-0.011161191,-0.019910514,-0.009551598,-0.033301927,0.0039558653,-0.020849025,-0.04791441,-0.013088666,0.034533087,0.015571173,0.0035093166,-0.0023223048,-0.009496095,0.028276363,-0.03542114,-0.016792243,-0.015439984,0.005550321,0.023755373,0.023957204,0.0004383492,-0.012947385,0.020465547,0.028215814,0.031909302,-0.017296819,-0.014844586,0.015389526,-0.0232508,0.037015595,-0.0019035079,0.027045202,0.006423235,-0.004594152,0.0060044383,0.0007865057,-0.015258337,-0.016580323,0.014844586,-0.032010216,-0.029305695,-0.03976048,-0.04030542,0.03725779,-0.019971063,-0.006670477,-0.045330986,-0.038832065,0.008724095,0.0014001946,-0.030496491,0.017438099,0.031566188,0.014017084,-0.044725496,-0.011030002,0.0074273385,0.008133743,0.015450075,0.036753215,0.016075747,-0.055059183,0.058974683,0.021252684,-0.024683792,-0.0028508466,-0.052919786,0.0043014986,0.019264659,-0.010384146,0.043837443,0.020788476,0.0128666535,0.008169063,-0.0062415884,-0.03378632,-0.00851722,-0.04771258,0.0016587891,-0.043554883,-0.047066722,-0.019627953,0.036410104,0.02569294,-0.031808384,0.016297761,0.012836379,0.030738687,-0.012715281,-0.03933664,-0.04367598,-0.010136904,0.030859785,-0.030577224,0.032434057,-0.015732637,-0.03858987,-0.042343903,-0.0049877204,0.014521658,-0.04860063,0.024703974,0.02169671,0.03455327,0.021716893,-0.053848207,-0.010929086,0.002077586,0.04395854,-0.033362474,-0.008562632,-0.0032469379,0.033645038,-0.014481292,0.020061888,-0.023028787,-0.0063122287,0.0027221802,-0.010081401,-0.008249795,-0.015238154,0.0058530658,-0.03372577,0.057279315,-0.03584498,-0.0023071675,0.003521931,0.010717166,0.00966765,-0.0042409496,-0.038347673,0.002588468,-0.0049524,0.034311075,0.042626467,-0.029668989,0.023775557,-0.032555155,0.060750786,-0.028700205,0.01798304,-0.021131586,-0.028377278,0.012190524,0.03162674,0.00696313,-0.026863554,0.0755651,0.026944285,0.048923556,0.010868538,-0.04002286,-0.01959768,0.011332747,-0.004357002,-0.019163745,0.0347551,-0.010485061,0.02730758,0.002487553,-0.030193746,-0.033039548,-0.021676527,0.000053532214,-0.029568074,-0.009617193,-0.00381963,0.005429223,-0.016923433,-0.0013371228,-0.0030627681,-0.010157088,0.026419528,-0.040063225,0.030335028,-0.040345788,0.00082939456,-0.019294934,0.05699675,-0.014430835,-0.013875803,0.005353537,0.0021734552,-0.06930837,0.008688775,0.01784176,-0.005232439,0.04456403,0.003042585,0.0040113684,-0.039316457,0.040547617,0.023109518,0.055261016,0.036611937,-0.026358979,0.03945774,0.010212591,0.040809996,0.0042914073,0.062244326,0.014905135,-0.027004834,-0.03493675,0.0014178547,-0.03090015,-0.0029996962,-0.0006666692,0.030395577,0.003933159,-0.002762546,0.026419528,0.021515062,0.030133197,-0.015026233,-0.027125932,0.0061255363,0.036268827,0.043030124,0.012351987,-0.03766145,0.013431777,0.03205058,-0.0019867627,0.02629843,0.03996231,0.062082864,0.011746498,0.026338797,0.04399891,-0.019557312,-0.018568346,0.032413874,0.0559876,-0.010848355,-0.059176512,0.0366523,-0.059055414,0.07362753,-0.019264659,-0.019506855,-0.069752395,-0.056027967,-0.01737755,-0.0072103716,0.03184875,0.019375667,0.010485061,0.06668458,0.044362202,0.02155543,0.02710575,-0.025773672,0.031909302,0.028235996,-0.00015263383,-0.039740298,-0.023513177,0.035380773,0.027892886,0.019254569,-0.0020763245,-0.0028029121,-0.047147453,-0.040386155,-0.008138789,0.016075747,0.022887506,0.007407156,-0.008567678,0.036268827,-0.008320436,0.024582876,-0.013240038,-0.026762638,-0.041193474,0.021091219,0.0386706,-0.0019363052,-0.0070943194,-0.0042636557,0.0022352657,-0.026116783,0.0010608681,-0.028740572,-0.011181374,-0.012533634,-0.0011113257,0.01622712,-0.013270313,-0.04387781,-0.017660113,-0.012765738,0.008002554,-0.0048792367,-0.028437827,0.035259675,0.0483988,0.039397188,0.047147453,-0.01784176,-0.020667378,0.0015263383,-0.009718108,-0.0060044383,0.010979544,0.011796955,-0.0048868055,-0.0300121,-0.01730691,0.018073864,-0.03554224,-0.028558925,0.00024030368,-0.0040290286,0.052112468,0.042263173,0.025127817,0.004296453,-0.022625126,-0.0026641542,-0.024663609,-0.0018707105,-0.0064333268,0.014955592,-0.009773611,0.008774553,-0.064181894,-0.03649084,-0.054655526,-0.004894374,-0.008158972,0.011685949,-0.005711785,0.03489638,-0.01763993,-0.0070337704,0.0127455555,-0.013391411,0.0074525676,0.01548035,0.05671419,0.014440926,-0.012412536,-0.038690783,0.0045336033,0.010535519,0.01581337,0.037298158,-0.011564851,-0.010495152,-0.006897535,0.0011018649,-0.01325013,-0.016237212,-0.010707074,-0.019769235,-0.01169604,-0.019022465,0.005817746,-0.0054443604,-0.008799782,-0.025390197,0.006620019,0.002845801,-0.019749051,0.061154447,-0.0035950942,-0.022120552,-0.0017382597,-0.0005603932,-0.012493268,-0.049407948,-0.015419801,-0.055422477,0.0005367413,-0.00074298616,-0.012523542,0.0011971033,0.032756984,-0.01101991,0.021656344,0.03090015,0.014612482,-0.0376009,-0.020364633,-0.007871364,-0.03630919,-0.01771057,0.0116455825,0.032676253,-0.0014632664,0.013704247,0.055261016,-0.017155537,0.0027902978,-0.019607771,0.018548165,-0.0020271286,-0.008532357,0.021959089,0.009294265,0.024078302,0.003930636,-0.015833553,0.013270313,-0.021878356,0.0695102,0.03150564,0.005888386,0.03372577,-0.011272198,-0.054655526,-0.002516566,0.016550047,0.0021305664,-0.020334357,-0.018699536,-0.020516004,0.03237351,-0.042424634,0.013179489,-0.012432719,0.017720662,-0.02298842,0.00048376093,-0.0031308855,-0.055462845,0.0101167215,-0.009445637,-0.007926867,-0.041819148,0.015470259,0.016792243,-0.0144712,-0.020172894,0.0058984775,-0.009803886,0.033988148,0.031868935,-0.0076493514,-0.023351714,0.022362748,-0.023149885,-0.03429089,-0.0033125326,0.00025149892,-0.0007663227,0.025107633,0.0083456645,0.0025380105,-0.010374054,0.013663881,0.027610324,0.021575611,0.022948055,0.01129238,-0.014148273,-0.02920478,-0.024159033,-0.06244616,0.0024080824,0.031323995,-0.0029769903,0.008734187,0.033967964,-0.034593638,0.0061154445,-0.020172894,0.037479803,0.0066402024,-0.010686891,-0.0279938,0.051062953,0.01736746,-0.040809996,-0.00042005838,0.0023046446,-0.021071037,-0.013391411,0.013875803,0.008093378,-0.0054393145,0.01010663,0.030657955,-0.027751606,0.011231831,-0.0013194627,0.016146388,0.0013964103,-0.03299918,-0.00425861,-0.026782822,0.011393296,0.009052069,0.014925318,-0.0105456095,0.026459893,0.06293055,-0.002767592,-0.07859255,0.010263048,-0.0071145026,0.0038145843,0.037802733,-0.01737755,-0.043353055,-0.0033453298,-0.008229612,0.022362748,0.019436216,0.032131314,0.023775557,-0.013613423,-0.0043090675,-0.023573726,0.02094994,0.010495152,0.039114624,-0.014683122,-0.02385629,-0.015026233,-0.008300253,0.02339208,-0.0115244845,-0.04799514,-0.003781787,-0.0040769633,-0.0041425577,0.037802733,0.0058127,0.009622239,0.0077754953,-0.013098758,0.007962188,0.032171678,-0.012705189,0.0047253417,0.02563239,-0.04367598,0.0033478527,0.0063576405,0.04074945,0.022181101,0.006226451,-0.00851722,0.036410104,-0.03340284,-0.0036026628,-0.04537135,0.026258064,-0.018406883,0.0028584152,-0.007997508,0.0033554214,-0.021010488,0.0137849795,-0.02203982,0.036511023,0.00851722,-0.012967568,0.008522266,0.00451342,-0.03967975,-0.0048615765,0.0024408798,-0.0035269768,-0.06914691,-0.006781483,-0.016267486,0.0038145843,0.005393903,-0.05328308,-0.016065657,0.0357037,0.0014771422,-0.00398614,-0.046824526,0.017417917,0.019516947,-0.021817807,0.0011863811,0.0016058087,-0.013512509,0.01716563,-0.0015742729,-0.023371898,0.011191466,-0.046461232,0.03130381,-0.037762366,-0.020021522,-0.020808658,-0.017024348,-0.0026212654,0.0083456645,-0.017801393,-0.032635886,-0.01365379,0.033564307,-0.028135082,0.031101981,-0.004579015,0.03142491,-0.0050608837,-0.033423025,-0.0032318006,-0.0017597041,-0.02926533,-0.051143687,-0.041657683,-0.01871972,0.046905257,0.019214202,0.022867322,0.017276635,0.039397188,-0.024784707,-0.037903648,0.057561874,0.049367584,-0.009586918,-0.030395577,0.00032545064,0.010807989,-0.034956932,-0.020193078,0.030637773,0.02650026,0.0018921549,0.03184875,0.0061406735,-0.029507525,0.0117666805,0.012422628,0.029285513,0.02886167,0.010384146,0.006947993,-0.037479803,-0.031667106,0.011938236,0.022685675,-0.04516952,-0.02020317,-0.05049783,0.010227728,-0.017145446,-0.010046081,0.0028331866,-0.03412943,-0.0040088454,0.0099048,-0.01628767,-0.021918721,0.003282258,0.034169793,0.022766408,-0.00422329,0.010242865,-0.021030672,0.038024746,-0.0031535914,0.002288246,0.01460239,0.0008249795,0.0032015261,-0.0006799143,-0.008310344,-0.015722545,0.0011561066,0.023170067,0.018295877,0.018861,-0.010828172,0.00093598594,-0.01094927,0.014612482,0.009581872,0.014612482,0.0020586646,0.06753227,0.030314844,0.0118272295,0.014037266,-0.0046849754,-0.041011825,-0.0013421685,0.047349285,0.032171678,-0.028437827,0.026782822,-0.025773672,0.010767623,0.018406883,-0.00979884,-0.006503967,-0.0007789371,0.011252015,0.03142491,0.0035496827,0.0057925167,0.034048695,-0.006367732,0.02650026,-0.026480077,0.015339069,-0.022382932,0.028235996,-0.015692271,-0.036854133,0.018679352,-0.06184067,-0.0128061045,0.014975775,0.026116783,0.00005968172,-0.010111676,-0.015530807,0.034351442,0.06470665,-0.024219582,-0.010767623,-0.01744819,-0.016681237,0.06410116,-0.030738687,-0.023573726,0.021434331,0.03196985,0.001929998,-0.0001882694,0.05049783,0.05191064,0.017044531,0.00926399,-0.03602663,0.010086447,0.003761604,0.046461232,-0.02250403,-0.04581538,0.010989635,-0.022342565,-0.0044730543,-0.014915226,-0.036551386,0.010485061,-0.034109246,-0.017660113,-0.009460774,-0.016691329,-0.021858172,0.028619474,-0.017861942,-0.016398676,0.0038070157,0.00034090324,-0.049650144,0.0044654855,0.004099669,0.061154447,0.0035118395,0.025672758,-0.02041509,-0.005772334,0.0060548955,-0.039215542,0.017337184,0.02744886,-0.049932707,-0.007942005,0.031344175,0.025571844,-0.0021078605,-0.05982237,-0.018749993,-0.0068924897,0.043312687,0.010626342,-0.048156604,0.0054847263,-0.019072922,-0.0012500837,0.02623788,-0.026379162,-0.003920545,0.0013863188,0.03893298,0.005888386,0.001661312,0.03176802,0.059418708,0.017539015,-0.018770177,0.03412943,0.0012008876,-0.0097534275,-0.027226847,-0.012230889,0.01010663,-0.009607101,-0.037681635,-0.024663609,-0.01588401,0.0009366167,0.014017084,-0.0057975627,0.006958084,0.022160918,-0.00425861,-0.022100369,0.0020788475,-0.019254569,0.005747105,0.031122163,-0.008053011,-0.005888386,-0.01622712,0.008592906,0.026823187,-0.003542114,-0.030415758,-0.015308795,0.0040895776,-0.023694824,0.004198061,0.0028130037,0.0042485185,-0.0022806774,0.01129238,0.022160918,0.017993132,0.0046067666,0.02048573,0.015379435,0.017861942,0.021474697,0.0013421685,0.004780845,-0.002158318,0.0309607,-0.035663337,0.0047833677,0.007407156,0.0010848355,0.002117952,-0.0116455825,0.014874861,-0.0010854662,-0.007003496,-0.023109518,0.020253627,-0.014370286,0.0019527038,0.020707743,-0.0043242048,0.015601448,0.019093104,-0.0040038,-0.015187697,-0.026580991,-0.01736746,-0.008749324,-0.0131088495,0.016257394,0.0016915865,0.0059792097,-0.013764796,0.019557312,-0.025914954,0.00584802,0.034048695,-0.031263445,0.016953709,-0.0035900485,-0.020869207,-0.055947237,0.0013018026,0.00045190967,0.016923433,0.0028508466,-0.0031762973,-0.012291438,-0.0009189566,0.015732637,0.01865917,-0.018780269,-0.04666306,0.013068483,0.015914284,0.040063225,-0.013038209,0.0048691453,0.016782153,0.015460167,-0.006034713,-0.0043494334,-0.010384146,0.017882125,0.020748109,-0.004213198,0.030072648,0.017125264,-0.03663212,-0.030435942,-0.040789813,-0.041455854,0.025672758,0.0020460503,0.004034074,0.011595125,-0.019385757,-0.01244281,0.013441868,0.022544395,-0.036430288,0.029184597,0.005212256,0.0007228032,0.03915499,0.009036932,-0.003383173,-0.005454452,0.034916565,-0.015520716,0.023896655,-0.026459893,0.008194292,0.0041829236,-0.009803886,-0.0027322716,-0.058651756,-0.025168182,-0.023109518,0.017327093,0.00058404513,0.0024509714,-0.0060750786,0.022766408,-0.008330528,-0.0010905119,-0.023432447,-0.019486673,-0.0129272025,0.034634,0.025390197,0.035178944,0.046905257,-0.011867596,-0.02393702,0.035723884,0.021676527,0.021878356,-0.06091225,-0.026883736,-0.000557555,-0.03901371,0.015904192,0.009743337,0.0105456095,0.004949877,-0.02940661,0.019103196,0.006327366,0.016519774,0.0024925987,0.007967234,-0.0006203115,-0.018871091,-0.00006382081,0.022221467,-0.017589472,0.030597406,-0.02569294,-0.0029341015,0.00074550905,0.0056663733,0.03249461,0.008189246,-0.0033175782,-0.03346339,0.008628226,0.0007101888,-0.0069782673,-0.013643698,-0.028235996,-0.009173167,-0.01683261,0.033745952,-0.010999727,0.056229796,-0.013855619,-0.012574,0.02791307,-0.011847412,0.0034891337,-0.009445637,0.031727653,-0.017014258,-0.010046081,-0.014905135,0.00699845,-0.03467437,0.0025594549,-0.04185951,0.023634275,0.007624123,0.007538345,-0.010454787,-0.021272866,0.010051127,-0.011796955,-0.037419256,-0.058126997,0.013219856,-0.06910654,-0.03239369,-0.014531749,-0.016983982,-0.035744067,-0.02595532,-0.0009309402,-0.008582815,-0.07023679,-0.010126813,-0.033221193,-0.015803277,0.0010432081,0.007997508,0.011110733,0.010929086,0.00079218217,-0.04456403,0.016650964,0.008310344,0.020314176,0.004672361,-0.021071037,0.027085567,0.011807047,-0.053928938,-0.010929086,0.0018189916,0.006680568,0.03671285,0.0127455555,-0.0029189643,0.04738965,0.024421412,-0.01697389,-0.03162674,0.011030002,-0.00878969,-0.0011296165,0.018215144,0.0054393145,0.017125264,0.008880514,-0.025067268,0.06325348,-0.031081798,-0.009006658,-0.0021721937,-0.015803277,-0.00044591783,-0.018921549,-0.019315118,0.028579108,-0.008507129,0.022160918,0.010646525,0.016610596,0.020970123,0.0087695075,0.026924103,-0.040164143,0.043635614,0.0043469104,0.008925925,0.008542448,-0.01030846,0.014006992,-0.0149455005,-0.0007833521,0.034997296,0.028155265,-0.031202896,-0.0028533696,-0.018194962,-0.027469043,-0.0065342416,0.017256452,0.006226451,-0.018366517,0.02744886,0.029043317,0.009067207,-0.0044881916,0.00712964,-0.033201013,0.015359252,-0.015470259,-0.012321712,-0.024159033,0.008840147,-0.018638987,0.00720028,0.0065392875,0.021050854,0.00246737,0.019870149,0.030052466,-0.030476307,0.00912271,-0.0018707105,-0.020364633,0.020304084,-0.026217699,0.0016978936,0.003224232,0.010999727,0.016328035,-0.036813766,-0.041657683,-0.0015162468,-0.0073516527,0.044523668,-0.016388584,0.00045727077,0.02054628,-0.008396122,0.019072922,-0.018507797,-0.00095301535,-0.008380985,0.018376607,0.005706739,0.015641814,0.018739901,-0.013290496,0.013754705,-0.020304084,0.024441596,-0.033705585,-0.013542783,-0.005827837,0.0018316059,0.022726042,-0.031001065,-0.028478192,-0.000104778075,-0.015106965,0.003958388,-0.0016650963,-0.020364633,0.016782153,-0.029830452,0.027166298,-0.031949665,0.0080076,-0.009697924,-0.01493541,-0.010197453,-0.016398676,-0.0032292777,-0.0044301655,0.013411594,-0.021333415,-0.05590687,0.025592025,0.016196845,-0.042303536,-0.020990305,-0.017357368,0.031747837,-0.041819148,-0.02068756,0.008678684,0.021030672,0.024522327,-0.031868935,0.0070337704,-0.010858446,0.001392626,0.008784644,0.016963799,0.038347673,0.019113287,0.016671145,0.00557555,0.0036077087,0.010197453,0.043635614,0.02224165,0.05962054,0.01622712,0.0038827017,0.012664824,-0.039659567,-0.027569959,-0.000871022,0.029285513,-0.0028811211,0.002053619,-0.015853735,0.03596608,0.05057856,0.0033579443,-0.01507669,-0.027004834,0.012029059,-0.0049271714,0.004314113,-0.042828295,0.010535519,-0.015904192,0.009965349,0.009697924,0.0025203503,0.02805435,-0.03142491,-0.04440257,-0.038751334,0.034512904,0.008628226,-0.0076695345,-0.046743795,0.074919246,-0.03602663,-0.020475639,-0.028780937,-0.0095061865,0.0018732334,0.011211649,0.015359252,-0.0068571693,-0.025410378,0.047833677,0.0045462176,0.03980085,0.01959768,-0.021878356,0.008169063,0.002299599,0.0024976444,-0.010585976,0.014451018,-0.039558653,0.019547222,0.022625126,-0.041072376,0.014622573,0.01027314,0.013492326,0.074919246,-0.021414148,0.038953163,-0.048439164,-0.037762366,-0.010227728,0.032010216,0.003284781,0.01744819,-0.01602529,-0.0001277993,-0.019103196,0.0279938,-0.02750941,-0.022483846,-0.001240623,0.033887234,-0.021111403,-0.019779326,-0.009924984,-0.006569562,-0.007891547,0.01737755,0.033039548,0.03128363,-0.005590687,-0.020970123,0.006155811,0.022524212,0.03731834,0.019900424,0.033201013,-0.0077805407,0.017054623,0.00051214325,0.0128061045,-0.00051908114,0.011867596,0.018840818,-0.006786529,-0.0058934316,0.02155543,-0.014562024,-0.010585976,0.03455327,0.03588535,-0.015207879,-0.0030274477,0.0055452753,-0.023149885,-0.005078544,-0.0008817442,-0.011484119,-0.047833677,0.018830726,0.025773672,0.021333415,-0.000007913543,-0.039558653,-0.012886836,-0.025269099,-0.012129975,-0.008971337,0.010061218,0.011453845,0.04529062,0.016550047,0.043312687,0.024017753,-0.017216086,0.023533361,0.015722545,0.051506978,0.006847078,0.0020119913,-0.024562694,0.0020624488,0.0198096,0.008618135,0.00043424955,0.016933525,0.04642087]},{"id":"burst-balloons","name":"Burst Balloons","description":"You are given an array of integers `nums` of size `n`. The `ith` element represents a balloon with an integer value of `nums[i]`. You must burst all of the balloons.\n\nIf you burst the `ith` balloon, you will receive `nums[i - 1] * nums[i] * nums[i + 1]` coins. If `i - 1` or `i + 1` goes out of bounds of the array, then assume the out of bounds value is 1.\n\nReturn the maximum number of coins you can receive by bursting all of the balloons.\n\n**Example 1:**\n\n```java\nInput: nums = [4,2,3,7]\n\nOutput: 167\n\nExplanation:\nnums = [4,2,3,7] --> [4,3,7] --> [4,7] --> [7] --> []\ncoins =  4*2*3    +   4*3*7   +  1*4*7  + 1*7*1 = 143\n```\n\n**Constraints:**\n* `n == nums.length`\n* `1 <= n <= 300`\n* `0 <= nums[i] <= 100`\n","difficulty":"Hard","concepts":["Tree Maze","2-Dimension DP"],"solutions":{"python":"class Solution:\n    def maxCoins(self, nums: List[int]) -> int:\n        cache = {}\n        nums = [1] + nums + [1]\n\n        for offset in range(2, len(nums)):\n            for left in range(len(nums) - offset):\n                right = left + offset\n                for pivot in range(left + 1, right):\n                    coins = nums[left] * nums[pivot] * nums[right]\n                    coins += cache.get((left, pivot), 0) + cache.get((pivot, right), 0)\n                    cache[(left, right)] = max(coins, cache.get((left, right), 0))\n        return cache.get((0, len(nums) - 1), 0)\n","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {number}\n     */\n    maxCoins(nums) {\n        const cache = new Map();\n        const newNums = [1, ...nums, 1];\n\n        for (let offset = 2; offset < newNums.length; offset++) {\n            for (let left = 0; left < newNums.length - offset; left++) {\n                const right = left + offset;\n                for (let pivot = left + 1; pivot < right; pivot++) {\n                    let coins = newNums[left] * newNums[pivot] * newNums[right];\n                    coins += cache.get(`${left}-${pivot}`) || 0;\n                    coins += cache.get(`${pivot}-${right}`) || 0;\n                    cache.set(\n                        `${left}-${right}`,\n                        Math.max(coins, cache.get(`${left}-${right}`) || 0),\n                    );\n                }\n            }\n        }\n\n        return cache.get('0-' + (newNums.length - 1)) || 0;\n    }\n}\n","cpp":"class Solution {\npublic:\n    int maxCoins(std::vector<int>& nums) {\n        std::unordered_map<long, int> cache; // Using long for key to combine two integers uniquely\n        nums.insert(nums.begin(), 1);\n        nums.push_back(1);\n        \n        auto getKey = [](int left, int right) -> long {\n            return static_cast<long>(left) << 32 | static_cast<long>(right);\n        };\n        \n        for (int offset = 2; offset < nums.size(); ++offset) {\n            for (int left = 0; left < nums.size() - offset; ++left) {\n                int right = left + offset;\n                for (int pivot = left + 1; pivot < right; ++pivot) {\n                    int coins = nums[left] * nums[pivot] * nums[right];\n                    coins += cache[getKey(left, pivot)] + cache[getKey(pivot, right)];\n                    long key = getKey(left, right);\n                    cache[key] = std::max(coins, cache[key]);\n                }\n            }\n        }\n        return cache[getKey(0, nums.size() - 1)];\n    }\n};\n","java":"class Solution {\n    public int maxCoins(int[] nums) {\n        int[][] cache = new int[nums.length + 2][nums.length + 2];\n        int[] newNums = new int[nums.length + 2];\n        newNums[0] = newNums[nums.length + 1] = 1;\n        for (int i = 0; i < nums.length; i++) {\n            newNums[i + 1] = nums[i];\n        }\n\n        for (int offset = 2; offset < newNums.length; offset++) {\n            for (int left = 0; left < newNums.length - offset; left++) {\n                int right = left + offset;\n                for (int pivot = left + 1; pivot < right; pivot++) {\n                    int coins = newNums[left] * newNums[pivot] * newNums[right];\n                    coins += cache[left][pivot] + cache[pivot][right];\n                    cache[left][right] = Math.max(coins, cache[left][right]);\n                }\n            }\n        }\n        return cache[0][newNums.length - 1];\n    }\n}\n","csharp":"public class Solution {\n    public int MaxCoins(int[] nums) {\n        int[,] cache = new int[nums.Length + 2, nums.Length + 2];\n        int[] newNums = new int[nums.Length + 2];\n        newNums[0] = newNums[nums.Length + 1] = 1;\n        for (int i = 0; i < nums.Length; i++) {\n            newNums[i + 1] = nums[i];\n        }\n\n        for (int offset = 2; offset < newNums.Length; offset++) {\n            for (int left = 0; left < newNums.Length - offset; left++) {\n                int right = left + offset;\n                for (int pivot = left + 1; pivot < right; pivot++) {\n                    int coins = newNums[left] * newNums[pivot] * newNums[right];\n                    coins += cache[left, pivot] + cache[pivot, right];\n                    cache[left, right] = Math.Max(coins, cache[left, right]);\n                }\n            }\n        }\n        return cache[0, newNums.Length - 1];\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def maxCoins(self, nums: List[int]) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {number}\n     */\n    maxCoins(nums) {}\n}\n","cpp":"class Solution {\npublic:\n    int maxCoins(vector<int>& nums) {\n        \n    }\n};\n","java":"class Solution {\n    public int maxCoins(int[] nums) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int MaxCoins(int[] nums) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/VFskby7lUbw","embedding":[0.008547833,-0.024789771,0.02244992,-0.028394407,-0.0060498845,-0.0066928165,-0.03779597,0.009485882,-0.031577446,-0.026202112,0.032315236,-0.035645835,-0.030734256,-0.018075874,0.04565871,0.015303889,-0.029448392,0.013375093,-0.0015216935,0.017865077,0.002686349,0.030038625,0.0042791865,-0.009475342,0.049326584,0.0012292122,-0.016779471,0.03615175,0.021206215,-0.03362218,0.026918825,0.00063535647,0.015725484,0.03935587,-0.037880287,-0.027572297,-0.012595143,-0.025380004,0.012468665,-0.0071460307,-0.009538581,-0.032230917,0.010508249,-0.027551217,0.018244512,-0.0016718867,0.04072605,-0.023040153,0.016231397,0.029005717,0.004092104,0.008326496,-0.0030565618,0.01594682,-0.004974818,-0.02171213,-0.0100286845,0.055819143,0.0049036737,0.00641878,-0.021859687,-0.0042238524,0.0024992663,0.024747612,0.03136665,0.018139115,0.03507668,0.022723956,-0.006829835,-0.04738725,-0.05699961,-0.018666107,0.008885109,-0.05076001,0.00044267447,0.00089325383,0.017422402,0.0035071413,0.02645507,-0.00045222623,-0.01755942,-0.038575917,0.03931371,-0.017981015,0.009190765,-0.010929843,-0.014112884,0.019488217,-0.027719853,-0.06893074,-0.02407306,-0.032483876,0.025337843,-0.0039656255,0.0014070724,0.009949636,0.038048927,0.0024136298,0.00085241185,0.052530706,0.029321915,-0.0028141448,0.016294636,-0.011182801,-0.0004845046,0.044773363,0.0014465969,0.008431895,-0.048652034,-0.01999413,-0.029469473,0.010608378,-0.02495841,-0.008326496,-0.020426266,0.008979968,-0.07841662,-0.0013306584,0.04342426,-0.023124471,0.020110069,-0.014734737,0.030713176,-0.040009342,-0.03903967,0.006840375,0.004321346,-0.0451528,0.043677215,-0.011636015,0.02641291,-0.009238195,0.033305984,0.00027683625,-0.04226487,-0.036531184,-0.009164415,-0.021859687,0.016157618,0.012542443,0.02818361,-0.013765069,-0.02639183,0.0064978288,0.008985238,-0.025127046,-0.04249675,0.023799023,-0.042939425,0.0030671018,0.044225287,-0.026771266,0.025506482,0.06264898,-0.00799976,-0.032526035,-0.02493733,0.004313441,0.00051348924,-0.009701949,-0.026855584,-0.011319819,-0.05366901,-0.019635774,0.03954559,0.026665868,-0.016979728,-0.013533191,-0.013712369,0.011551696,0.036678743,-0.008479324,0.008384465,-0.0208584,-0.003367488,-0.051813994,-0.08216882,-0.03206228,-0.06433536,0.017822918,-0.040536333,-0.039166152,-0.005190885,-0.049537383,-0.00520406,0.03866024,0.03511884,-0.055819143,-0.00044530944,0.0025730454,0.06737084,0.007040632,0.03206228,0.025611881,-0.02721394,0.006814025,0.04169572,0.05463868,-0.0010335658,-0.024536815,-0.04511064,0.03056562,0.029427312,-0.005939216,0.03939803,-0.066274695,-0.0005770578,0.023419589,-0.012184088,-0.035139922,0.008479324,0.0076624844,0.020373566,-0.034823727,-0.028605204,-0.0128481,0.051687516,-0.020289248,-0.018202353,0.03750085,0.029996466,0.0018181273,-0.0016666168,0.008758631,0.030523458,0.00282205,-0.012310566,0.05025409,0.020236548,0.04890499,-0.010023415,-0.04104225,-0.0056441,-0.031977963,-0.02481085,0.012795401,-0.007462227,-0.00012845465,-0.0070037427,-0.010803365,0.019403897,0.011119561,0.0020289246,-0.0018734616,-0.05366901,-0.014344761,-0.065937415,0.06167931,-0.007694104,-0.0070986017,0.0035440307,0.016178697,0.030186184,-0.03511884,0.00800503,0.009022128,-0.010755936,0.00053193397,-0.017106207,-0.00018016588,-0.016452735,-0.0020684493,-0.087523066,-0.04346642,0.021459172,-0.040662814,-0.025105966,-0.0009222385,0.009928556,0.01360697,-0.017991556,-0.005670449,0.023567146,-0.0063133813,0.0025045362,-0.029469473,0.02641291,-0.00006653292,0.006966853,-0.063112736,-0.023546066,-0.0043687755,0.0081420485,0.031577446,0.023061233,-0.022154804,0.01438692,0.019530376,0.013301314,-0.047092132,-0.035055604,-0.029174356,-0.017042967,0.039018594,0.0013365871,-0.01933012,-0.059782133,-0.003757463,0.044604722,-0.053078778,-0.0063028415,0.0121208485,-0.012964038,0.013143216,-0.04315022,-0.047724526,0.021206215,0.021406474,-0.016147079,0.023103392,0.009275084,0.021775369,-0.0016745216,0.0111090215,0.031219091,-0.033474624,-0.011414678,-0.022913674,0.040367696,-0.01361751,0.025358923,0.039819624,0.037374374,0.03697386,0.014102344,0.0056441,-0.014060184,0.023335269,-0.0021791179,-0.04658622,-0.021669969,0.0054174922,-0.010186783,0.03199904,-0.091654696,0.031556368,0.037079256,0.011467377,-0.0014189298,-0.01122496,0.03442321,0.014766356,0.015029852,-0.0112882,0.0112460395,-0.00059912563,0.04083145,0.013765069,-0.0010750666,-0.007941791,0.00520406,-0.0048351646,0.03543504,0.0056282897,-0.022808276,-0.0071091414,-0.04093685,-0.001678474,-0.05611426,-0.0014070724,-0.01844477,0.018002095,0.030818576,-0.038575917,0.0047719255,0.0009709854,-0.012595143,-0.031050453,-0.00093936577,0.06113124,-0.00021063269,0.004176423,-0.01843423,-0.014924454,-0.0020302422,-0.025021648,-0.016284097,0.021901846,0.0036652393,-0.029406233,-0.0063028415,-0.0054701916,0.017843997,0.028162528,0.06146851,0.058264393,0.009886397,-0.03598311,-0.0053331736,-0.049326584,0.010239482,-0.03374866,0.06947881,0.0000029437524,-0.0006995838,-0.0072408896,0.062438183,0.06087828,-0.022639638,0.014018025,0.007825852,0.039608825,0.0208584,-0.0078416625,0.012078689,-0.031113692,0.0073462883,0.033854056,0.022829356,-0.04797748,0.017706979,0.025232445,0.0015519956,-0.032252,0.008505674,0.02961703,-0.0068825344,-0.010329071,-0.04991682,-0.013733448,0.01994143,0.015883582,0.010908764,0.0084424345,0.03992502,-0.016220858,-0.0015006138,-0.085541576,-0.018539628,-0.0059128664,-0.038259722,-0.023503907,0.004316076,0.022154804,-0.075802736,0.046965655,-0.00006953843,0.06863562,-0.025253525,-0.07491738,-0.035898793,-0.065431505,0.007362098,-0.012300027,0.009896937,0.0017996825,0.018908525,0.027698774,0.0623117,0.01846585,0.090895824,-0.015841423,0.02970135,0.0060551544,-0.022808276,-0.004798275,0.069015056,0.06631685,-0.0465019,0.036193907,-0.019456597,0.012363266,-0.000071761686,-0.00279043,0.049368743,-0.018645028,-0.0022739766,0.034886964,0.036236066,-0.009775728,0.025991315,0.008616342,-0.03446537,0.04877851,0.0041869627,-0.05130808,0.017970476,0.037964605,0.03927155,0.0098916665,-0.015072012,-0.02405198,-0.019519836,-0.030396981,0.0023662006,0.012321106,0.025464322,0.015556846,0.0024189,-0.008932538,-0.052530706,0.0071460307,-0.034865886,-0.0067033563,0.022850435,0.008774441,0.020637063,0.0033121537,-0.013322393,-0.0021672605,0.033959456,-0.07458011,0.01127766,0.034971286,0.006987933,0.019045543,0.010866605,-0.007388448,-0.017496182,0.07668808,-0.013754528,0.016937569,-0.005517621,-0.0075887055,0.0003804234,0.016515974,-0.005272569,-0.044984158,0.015672784,-0.008389736,-0.025885917,0.0077468036,0.028310087,0.030333742,0.026876666,-0.018033715,-0.06597958,-0.004421475,-0.0319358,0.012700542,-0.0015770278,0.011446297,-0.013870467,0.033369225,-0.015346048,0.011151181,0.00481145,0.0054122224,-0.013575351,-0.05291014,0.013923166,0.0066980864,-0.039566666,-0.0050011678,-0.0027719855,-0.029153276,0.051561035,0.035624757,-0.026792346,-0.00805246,-0.009896937,-0.0177386,-0.033411384,-0.008268527,0.013765069,-0.035730153,-0.008890379,0.021986166,0.023904422,0.037079256,-0.0123948855,-0.020468425,0.023693625,0.0068614543,-0.018181274,-0.01766482,-0.002953798,0.03992502,0.0064503998,-0.011267119,-0.02554864,0.035940953,0.011351438,-0.019699015,0.019699015,0.0011870527,-0.020689761,-0.0058970563,-0.016589753,0.045869507,-0.0059497557,-0.011899511,0.0030855464,-0.0047851005,-0.008700661,0.013206455,-0.012584603,0.0058127376,0.037627332,-0.02563296,-0.018645028,0.034254573,0.037268974,0.009570201,-0.026117794,-0.025190286,-0.016484354,0.031008294,0.016452735,0.0011145911,0.015556846,0.04258107,-0.0032541845,-0.0012496331,-0.016884869,-0.0056282897,-0.0042870915,0.03954559,0.004405665,0.026054556,0.006181633,-0.02807821,0.0068614543,-0.035519358,-0.03444429,-0.010787555,0.02006791,0.021922927,-0.021090277,-0.009912746,0.050338414,-0.0038207024,0.03202012,0.019214181,-0.020457884,-0.01755942,-0.047471568,0.039482348,0.017749138,0.0053279037,-0.029090038,0.020921638,-0.00801557,-0.008532024,0.015461987,0.037395455,-0.0068825344,-0.020731922,0.0067244363,-0.023841182,0.06652765,-0.0032172948,-0.034359973,-0.026054556,0.0053964127,0.010856065,0.017443482,-0.0034755217,0.013765069,-0.017137825,-0.022787197,0.011361978,0.012363266,-0.017981015,0.002459742,-0.028246848,0.026265353,-0.04102117,-0.02012061,-0.0020183849,0.008263257,-0.021901846,0.023082312,0.00963344,0.03438105,-0.059065424,0.012373806,0.033179507,0.06694925,0.016663533,-0.016062759,0.032441717,0.0043635056,0.006545258,-0.0015691229,0.026939904,-0.011699254,0.003852322,-0.033959456,0.0018905889,0.00885876,0.0073462883,-0.030734256,0.031767163,-0.009080097,0.01681109,0.0048667844,0.011372518,-0.01674785,0.023356348,-0.014523939,0.009512232,-0.018265592,-0.020573823,0.024621133,-0.012468665,-0.0022884689,0.020742461,-0.0019037637,-0.042812947,-0.0029590682,-0.011509537,0.020953258,-0.0077626132,-0.055776983,0.005680989,0.0064714793,-0.021248374,-0.0040578493,0.008595263,0.0033516781,0.009059017,-0.002966973,-0.023103392,-0.031092612,0.055102434,0.016515974,0.005702069,0.0051803454,-0.0627333,-0.009501692,0.027825253,-0.022260202,-0.0037126688,-0.020563284,0.0061763627,0.0011745367,-0.0033016137,0.015641164,0.046965655,0.011604396,-0.047007814,-0.01920364,-0.0035361259,-0.0032199298,-0.037184656,-0.0011475282,0.013111596,-0.044183128,-0.006518909,-0.0057336884,0.030144025,0.017812379,-0.0462911,0.020510584,-0.00639243,-0.03518208,0.023672545,-0.065305024,0.030776417,-0.024768692,0.0039023864,0.06551582,0.01604168,0.038786717,0.031282328,0.005538701,0.0038259723,-0.020352487,0.004974818,0.0010737492,0.026729107,-0.03290547,-0.00021195017,0.024410335,-0.017148366,-0.0140074855,0.015356588,-0.03524532,0.029912148,-0.0019775429,-0.04156924,0.0068456447,-0.021206215,0.02002575,-0.035856634,-0.02567512,-0.012942959,-0.029026797,-0.017021887,-0.015725484,0.012637302,-0.013975866,-0.0067033563,0.014323682,-0.016252477,0.020679222,0.000964398,0.04245459,-0.017053507,0.012247327,-0.024347097,0.002252897,0.002206785,0.004165883,0.037100337,-0.018170733,0.020405186,0.0032568194,-0.045616552,0.013722909,0.00078258524,0.0049036737,-0.02405198,-0.012605683,0.008758631,0.008700661,-0.018655566,-0.01592574,-0.0160733,-0.014797975,0.034107015,-0.006645387,-0.010545138,0.035793394,0.024241697,-0.0054174922,-0.03269467,0.006666467,0.0030987214,0.012985118,0.00238728,-0.023693625,0.0025427432,0.017348623,-0.015135251,-0.029490553,0.021301074,0.040662814,0.0025651406,0.04801964,0.001482169,-0.04464688,0.03056562,0.016347336,0.037585173,0.021501333,-0.00091630983,-0.0014716291,0.0071038716,-0.0048272596,0.04068389,-0.03043914,-0.031113692,0.008300146,-0.007520196,0.010618918,-0.0037785429,0.0022871515,-0.024536815,0.0021132436,0.005227775,0.020510584,-0.007130221,0.009280354,0.0055545107,0.034760486,0.044183128,-0.025485402,-0.009912746,0.012595143,0.018824205,0.014260442,-0.025105966,-0.04258107,0.03286331,-0.045405753,-0.016357876,-0.0017759679,-0.0042027724,0.03041806,0.025590802,-0.030059705,-0.023672545,0.02232344,0.0013807227,-0.008969428,-0.009707219,-0.0177386,0.034402132,0.009185496,0.016558133,-0.012321106,0.026602628,0.005459652,-0.050169773,0.011467377,0.011498997,-0.02314555,-0.003438632,0.02164889,-0.015324969,-0.0020855765,-0.014998233,-0.01604168,0.011414678,0.016958648,-0.010086654,0.026792346,0.004553223,-0.0046876064,-0.0055018114,-0.000540827,0.0041869627,0.00877971,0.010360691,-0.013290774,0.0075939754,0.0191931,-0.0020236548,0.004487349,0.012690002,0.028415486,-0.010898224,0.0289214,0.018845284,0.009485882,0.007520196,0.011130101,0.0007298859,0.0096756,-0.022745036,-0.025358923,-0.008447705,0.04072605,-0.0073041287,-0.0042291223,0.0077942326,0.020436805,0.010476629,0.050802168,-0.0030275772,-0.011815192,-0.0071144113,-0.044225287,0.013079977,0.0036441595,-0.01282702,0.022829356,-0.015261729,-0.024347097,0.0007918076,0.009896937,-0.053542532,0.0039050214,-0.032526035,0.039650984,-0.027298259,0.0050169774,0.027066382,0.04801964,-0.053373896,-0.013122137,-0.037964605,-0.017548881,-0.0039682607,-0.008479324,0.04175896,0.019287959,0.00882187,0.04024122,-0.03277899,-0.008468784,0.0034307272,-0.02014169,-0.024684371,0.0024333922,0.022218043,-0.003910291,-0.031198012,0.017011348,0.010608378,0.0080103,0.010761206,-0.033811897,-0.030375902,0.017759679,-0.018887445,0.0044530947,0.010218402,-0.01367021,0.0071881902,-0.022281282,0.010276372,0.010650537,0.009438452,-0.037922446,0.0021804352,0.012384346,0.013564811,0.043002665,0.037985686,0.0010375183,0.009396293,0.001476899,-0.01122496,-0.05198263,0.032294158,-0.022892594,-0.032568194,0.0043187113,-0.039566666,-0.00018395364,-0.008437165,-0.026181033,-0.03686846,0.026075635,0.0032146599,-0.022892594,0.008305416,-0.015166871,-0.035877712,-0.0091538755,0.025885917,0.026286433,-0.014682037,0.03457077,-0.0048641493,0.016884869,-0.035392877,-0.025801599,0.0007634817,0.0075834356,0.020531664,-0.030186184,-0.017791297,0.028120369,0.054301403,0.0026059826,0.017527802,-0.009275084,-0.021901846,-0.022302361,0.009180225,-0.017569961,0.03769057,-0.0123527255,-0.00722508,0.016452735,-0.011488456,0.0050222473,0.0045426833,0.004669162,-0.028120369,0.003288439,0.01689541,-0.033263825,0.016642453,-0.03298979,0.03130341,-0.011741414,0.022070484,-0.008737551,0.0022225948,0.0033806628,0.00560194,0.030165104,0.0021514506,0.015588465,0.018971764,-0.009027397,-0.021859687,0.0047587506,-0.012479205,0.026054556,-0.0023859628,-0.002318771,-0.0013794053,-0.035709076,-0.014892834,0.014155043,0.013881007,-0.032547113,-0.010524059,-0.029891066,-0.040747132,-0.038322963,-0.005512351,0.025485402,0.031050453,-0.017380243,-0.010950923,-0.010218402,-0.007514926,-0.009496422,0.040114738,0.009570201,-0.00045420247,-0.01997305,0.005277839,0.04553223,0.031113692,0.043023743,0.010344881,-0.0024966314,-0.00320939,-0.0032225647,-0.015514687,-0.017959936,0.002160673,0.020268166,0.01365967,-0.018149653,-0.019677935,0.018497469,-0.0041922326,0.008126238,0.050675686,0.009259274,-0.018666107,0.021311615,0.015588465,-0.02242884,0.0037917178,-0.027572297,-0.066696286,0.0017904602,0.00719873,0.008157859,-0.03210444,0.025358923,-0.018950684,0.0010480582,0.044984158,-0.047724526,0.0030038625,0.0028457644,0.022281282,-0.012637302,0.017865077,-0.030628858,-0.06724436,-0.028225768,-0.01605222,0.013427792,-0.0014097075,-0.0055914004,-0.0017008713,-0.0077204537,0.010334341,-0.005902326,-0.027129622,-0.007673024,-0.013585891,0.04549007,0.01524065,0.010919304,0.045405753,0.013301314,0.008268527,0.050717846,0.012458124,0.03615175,0.01917202,-0.019519836,0.03366434,-0.05923406,-0.0055545107,-0.01909824,-0.00038602267,-0.021754289,-0.0129007995,-0.039018594,-0.011267119,-0.004735036,0.01038177,0.0037838127,0.0056335595,0.00401042,-0.025316764,-0.012616223,-0.0053964127,0.006734976,-0.022955833,0.03366434,-0.011056322,-0.0071881902,0.0032278348,0.01361751,-0.00400515,0.017042967,0.0026823964,0.015504147,0.010866605,0.03427565,-0.0075728954,-0.015746564,-0.016726771,0.020468425,0.017917776,0.033305984,-0.03518208,-0.016589753,-0.020004671,0.0047719255,-0.0021962451,0.021754289,-0.010128814,-0.009543851,0.0058759768,0.0016310447,-0.034676168,-0.027698774,0.044225287,-0.014502859,-0.014819055,0.027066382,0.032652512,-0.018697727,-0.018118033,0.0026441896,-0.01682163,-0.010313261,-0.06028805,0.0042949966,-0.027972812,-0.025906997,-0.0059128664,0.008943078,-0.029153276,0.0047086864,0.05383765,0.0068245647,0.0038707666,0.009227655,-0.006508369,0.046754856,0.052572865,0.047007814,-0.009174956,-0.0029959576,-0.045827348,-0.030692097,0.021237835,0.050675686,-0.017833458,0.020658143,-0.013101056,0.027509056,-0.029827828,-0.007609785,-0.0021685779,-0.0108771445,-0.011815192,0.03041806,-0.006165823,-0.0020710842,0.010929843,0.047007814,-0.011498997,-0.02002575,-0.026686948,0.01361751,0.01594682,0.03944019,0.033558942,-0.0046032877,0.011867892,0.021543492,0.013322393,-0.011435757,-0.04072605,0.023862263,-0.009164415,-0.016705692,-0.007319939,-0.020384105,-0.0026125698,-0.0023543432,0.02803605,0.012321106,-0.018023176,0.010376501,-0.01609438,0.010993083,-0.017085128,-0.036531184,0.032357395,0.022513159,-0.009528041,0.0019709554,0.039777465,0.013459412,-0.0027087461,0.018750425,0.02965919,0.010307992,-0.012721621,0.032378476,-0.034676168,0.010961464,-0.008300146,-0.0015045663,-0.0018826841,-0.005696799,-0.0018378895,0.021406474,-0.0005273228,-0.014018025,0.03275791,0.0082790665,-0.005040692,-0.038597,-0.02885816,-0.010550409,0.024895169,0.010692697,0.0062764916,-0.012584603,0.012310566,0.020573823,0.015556846,-0.029553792,-0.022281282,0.03126125,0.019035002,0.019393358,0.032357395,-0.0016824265,-0.002002575,-0.0106031075,0.034233492,-0.03145097,0.01199437,-0.027719853,-0.0022713416,0.026771266,-0.0017114112,0.00954912,-0.027993891,0.040325537,0.009712488,0.0014452795,-0.033305984,-0.01920364,0.021269456,0.023756864,0.019003384,-0.0014505495,0.03280007,-0.03448645,0.000049982034,0.0063028415,-0.024515735,0.03054454,-0.024410335,0.03929263,0.023061233,-0.026012396,-0.05923406,0.0160206,-0.00090840494,-0.020668682,0.0368263,0.015778184,-0.003528221,0.009148606,0.015662245,0.012679461,0.017074587,0.057336885,0.0057389583,-0.0034649817,-0.011804652,0.012595143,-0.045869507,0.039482348,-0.018539628,-0.004113184,-0.0055070813,0.041105486,-0.028605204,-0.03851268,0.013058897,-0.04097901,-0.04578519,-0.045405753,0.010845524,-0.043550737,-0.010250022,0.030354822,0.025864838,-0.010724316,-0.015377668,0.015862502,0.03581447,0.017148366,0.010118274,0.003528221,-0.013986406,-0.00719873,0.01278486,-0.021859687,0.0072619696,-0.0016956014,-0.021838607,0.002364883,0.028457645,0.032610353,-0.013354014,-0.006893074,0.05375333,-0.020721382,0.020289248,-0.019635774,-0.016958648,-0.014365841,0.033959456,0.017432943,-0.00638716,-0.006993203,0.043888014,-0.027045302,-0.026602628,-0.0004607899,-0.024916248,-0.017369702,-0.027993891,-0.0007509656,0.0059866454,-0.010039225,-0.01445016,-0.033369225,-0.006023535,0.0023306285,-0.024452494,-0.022091564,0.03041806,-0.0070827915,-0.06264898,-0.019530376,-0.019572536,0.014913914,-0.013765069,0.029090038,0.048483394,0.0040156897,0.06290194,-0.0063133813,-0.001719316,0.0033464083,0.019287959,-0.039102912,0.021986166,-0.013754528,-0.012742701,-0.009059017,0.004474174,0.024621133,0.020584363,-0.041484922,0.032483876,-0.027087463,0.014270982,0.05046489,-0.03206228,0.0289214,-0.038027845,-0.016779471,0.04662838,0.019129861,0.002538791,0.0005289696,0.016779471,-0.008105159,-0.053542532,0.007778423,0.021438092,-0.01836045,-0.01845531,0.016547594,-0.026181033,-0.016273556,-0.012890259,-0.017201066,-0.014408001,-0.02232344,0.026602628,0.0114779165,-0.001561218,-0.022660717,0.013122137,0.026328592,0.038070004,0.026054556,0.027804174,-0.021564571,0.014523939,-0.008178938,-0.008342306,0.008985238,-0.011488456,0.016168159,0.036594424,-0.01838153,-0.002457107,0.015367128,0.012510824,0.034233492,-0.00007423197,0.005277839,0.0041289935,0.004732401,0.03210444,-0.017865077,-0.022597479,-0.026033476,-0.023524987,0.002658682,0.030144025,0.013427792,-0.00524095,-0.016589753,0.0005101955,-0.013153756,0.0150193125,-0.021691049,0.0023714704,0.0005042668,-0.0011705841,0.026054556,0.025401084,0.065305024,0.00017094349,0.01832883,0.010144624,-0.007388448,0.02164889,0.006097314,0.006987933,-0.0177386,0.020689761,0.04078929,-0.031577446,0.0527415,0.016252477]},{"id":"regular-expression-matching","name":"Regular Expression Matching","description":"You are given an input string `s` consisting of lowercase english letters, and a pattern `p` consisting of lowercase english letters, as well as `'.'`, and `'*'` characters.\n    \nReturn `true` if the pattern matches the **entire** input string, otherwise return `false`.\n\n* `'.'` Matches any single character\n* `'*'` Matches zero or more of the preceding element.\n\n**Example 1:**\n\n```java\nInput: s = \"aa\", p = \".b\"\n\nOutput: false\n```\n\nExplanation: Regardless of which character we choose for the `'.'` in the pattern, we cannot match the second character in the input string.\n\n**Example 2:**\n\n```java\nInput: s = \"nnn\", p = \"n*\"\n\nOutput: true\n```\n\nExplanation: `'*'` means zero or more of the preceding element, `'n'`. We choose `'n'` to repeat three times.\n\n**Example 3:**\n\n```java\nInput: s = \"xyz\", p = \".*z\"\n\nOutput: true\n```\n\nExplanation: The pattern `\".*\"` means zero or more of any character, so we choose `\"..\"` to match `\"xy\"` and `\"z\"` to match `\"z\"`.\n\n**Constraints:**\n* `1 <= s.length <= 20`\n* `1 <= p.length <= 20`\n* Each appearance of `'*'`, will be preceded by a valid character or `'.'`.\n","difficulty":"Hard","concepts":["Tree Maze","2-Dimension DP"],"solutions":{"python":"class Solution:\n    def isMatch(self, s: str, p: str) -> bool:\n        cache = [[False] * (len(p) + 1) for i in range(len(s) + 1)]\n        cache[len(s)][len(p)] = True\n\n        for i in range(len(s), -1, -1):\n            for j in range(len(p) - 1, -1, -1):\n                match = i < len(s) and (s[i] == p[j] or p[j] == \".\")\n\n                if (j + 1) < len(p) and p[j + 1] == \"*\":\n                    cache[i][j] = cache[i][j + 2]\n                    if match:\n                        cache[i][j] = cache[i + 1][j] or cache[i][j]\n                elif match:\n                    cache[i][j] = cache[i + 1][j + 1]\n\n        return cache[0][0]\n","javascript":"class Solution {\n    /**\n     * @param {string} s\n     * @param {string} p\n     * @return {boolean}\n     */\n    isMatch(s, p) {\n        const cache = new Array(s.length + 1)\n            .fill(false)\n            .map(() => new Array(p.length + 1).fill(false));\n        cache[s.length][p.length] = true;\n\n        for (let i = s.length; i >= 0; i--) {\n            for (let j = p.length - 1; j >= 0; j--) {\n                const match = i < s.length && (s[i] === p[j] || p[j] === '.');\n\n                if (j + 1 < p.length && p[j + 1] === '*') {\n                    cache[i][j] = cache[i][j + 2];\n                    if (match) {\n                        cache[i][j] = cache[i + 1][j] || cache[i][j];\n                    }\n                } else if (match) {\n                    cache[i][j] = cache[i + 1][j + 1];\n                }\n            }\n        }\n\n        return cache[0][0];\n    }\n}\n","cpp":"class Solution {\npublic:\n    bool isMatch(string s, string p) {\n        vector<vector<bool>> cache(s.length() + 1, vector<bool>(p.length() + 1, false));\n        cache[s.length()][p.length()] = true;\n\n        for (int i = s.length(); i >= 0; i--) {\n            for (int j = p.length() - 1; j >= 0; j--) {\n                bool match = i < s.length() && (s[i] == p[j] || p[j] == '.');\n\n                if ((j + 1) < p.length() && p[j + 1] == '*') {\n                    cache[i][j] = cache[i][j + 2];\n                    if (match) {\n                        cache[i][j] = cache[i + 1][j] || cache[i][j];\n                    }\n                } else if (match) {\n                    cache[i][j] = cache[i + 1][j + 1];\n                }\n            }\n        }\n\n        return cache[0][0];\n    }\n};\n","java":"class Solution {\n    public boolean isMatch(String s, String p) {\n        boolean[][] cache = new boolean[s.length() + 1][p.length() + 1];\n        cache[s.length()][p.length()] = true;\n\n        for (int i = s.length(); i >= 0; i--) {\n            for (int j = p.length() - 1; j >= 0; j--) {\n                boolean match = i < s.length() && (s.charAt(i) == p.charAt(j) || p.charAt(j) == '.');\n\n                if ((j + 1) < p.length() && p.charAt(j + 1) == '*') {\n                    cache[i][j] = cache[i][j + 2];\n                    if (match) {\n                        cache[i][j] = cache[i + 1][j] || cache[i][j];\n                    }\n                } else if (match) {\n                    cache[i][j] = cache[i + 1][j + 1];\n                }\n            }\n        }\n\n        return cache[0][0];\n    }\n}\n","csharp":"public class Solution {\n    public bool IsMatch(string s, string p) {\n        bool[,] cache = new bool[s.Length + 1, p.Length + 1];\n        cache[s.Length, p.Length] = true;\n\n        for (int i = s.Length; i >= 0; i--) {\n            for (int j = p.Length - 1; j >= 0; j--) {\n                bool match = i < s.Length && (s[i] == p[j] || p[j] == '.');\n\n                if ((j + 1) < p.Length && p[j + 1] == '*') {\n                    cache[i, j] = cache[i, j + 2];\n                    if (match) {\n                        cache[i, j] = cache[i + 1, j] || cache[i, j];\n                    }\n                } else if (match) {\n                    cache[i, j] = cache[i + 1, j + 1];\n                }\n            }\n        }\n\n        return cache[0, 0];\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def isMatch(self, s: str, p: str) -> bool:\n        ","javascript":"class Solution {\n    /**\n     * @param {string} s\n     * @param {string} p\n     * @return {boolean}\n     */\n    isMatch(s, p) {}\n}\n","cpp":"class Solution {\npublic:\n    bool isMatch(string s, string p) {\n        \n    }\n};\n","java":"class Solution {\n    public boolean isMatch(String s, String p) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public bool IsMatch(string s, string p) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/HAA8mgxlov8","embedding":[0.010721704,-0.029131517,0.02243397,-0.032868635,-0.0036386254,0.03136028,0.022107534,-0.016220447,0.0036020423,0.035300013,0.020666717,-0.047997214,0.02277166,-0.0008660379,-0.018708106,0.05587668,-0.0426842,0.012899814,0.0012079505,0.009173951,0.053535353,-0.0023638401,0.011065023,-0.013136198,0.07172567,0.018741876,-0.022175072,0.0079132365,0.020081386,0.017976442,-0.019496053,-0.009432848,0.0037793303,-0.03241838,0.000839304,0.051013924,-0.016096625,0.015533807,-0.019147106,-0.025912192,-0.008295953,-0.027893314,-0.011458997,-0.04723178,0.014171785,-0.022917993,-0.0041113934,0.032148227,-0.022490252,-0.0018122775,-0.008003288,-0.0027831404,-0.0012016188,-0.054931145,-0.049212903,-0.050158437,-0.015848985,0.022895481,0.026587574,0.017593725,0.029266594,0.021589741,-0.03347648,-0.021375868,-0.0092752585,-0.0023483627,0.014531989,0.017717546,-0.008335351,-0.0005712614,-0.01564637,0.05024849,-0.00967486,-0.020790538,-0.03394925,0.019338464,0.014734604,0.043314558,0.055606525,-0.016242959,-0.026992803,-0.046556395,0.021049434,-0.010597884,-0.031495355,0.053085096,-0.028456133,0.013271274,-0.05195946,-0.02753311,-0.032058176,-0.014858424,0.005104769,-0.02321066,0.05065372,-0.035029862,0.016310498,0.00089488237,-0.013282531,0.0114871375,-0.007401071,-0.029018953,0.025146758,0.05042859,0.00090965634,-0.021657279,0.05083382,0.010868037,-0.024178708,-0.037596315,-0.010350243,0.01409299,0.017458647,0.05983893,0.025664551,0.029446695,-0.048312392,-0.050878845,0.021330845,0.025011681,0.0022175072,-0.010006923,-0.0025129872,-0.050158437,-0.045250654,0.0114196,-0.020914357,-0.0791999,0.03649319,-0.046736497,-0.019270927,-0.044957988,0.023041815,0.015758935,-0.039149698,-0.024133682,0.0030476653,-0.009314656,-0.004798033,0.061279744,-0.0021274562,-0.003416312,-0.042301483,0.056011755,0.005279243,-0.022861712,-0.04380984,-0.00058251776,-0.00086814846,0.03484976,-0.0061459844,-0.015117321,0.027015317,0.057812776,-0.0426842,-0.045363218,0.0065118168,-0.009055759,0.028231006,0.02940167,-0.028973928,-0.020914357,0.019608617,0.00018643383,0.043179482,-0.025011681,0.029829413,-0.030482283,-0.020722998,-0.04504804,-0.012967352,-0.033589043,-0.03561519,0.025597012,0.011171959,-0.010541602,-0.056011755,-0.010417782,-0.033251353,0.01023768,-0.0031067615,0.039712515,0.03129274,-0.037416212,0.046151165,-0.012629661,0.054120686,-0.0033375171,-0.018820671,0.02899644,0.020047616,0.0014295605,0.046736497,-0.027172906,-0.06465666,-0.03178802,0.040230308,-0.027488085,-0.016783265,0.03561519,-0.033814173,0.0047220523,-0.03665078,0.033611555,0.006433022,-0.023503326,-0.020891845,0.0073279045,-0.046556395,-0.01698588,-0.010406525,0.00224002,0.021758586,0.0055493964,0.011762919,-0.04358471,0.018674338,-0.057542626,0.009483502,0.039712515,-0.03388171,0.025732089,0.064971834,0.06906916,0.006348599,0.016681958,-0.015950292,-0.026249882,-0.00022161003,-0.027623162,0.0006542772,0.026857728,0.031090127,-0.01829162,0.017998954,-0.020554153,-0.051914435,-0.01866308,-0.020835564,-0.020452846,-0.009100785,0.0069958414,0.00206836,0.015826473,0.00849294,-0.004986577,-0.007569917,0.054751042,0.033251353,-0.018190313,0.036875907,0.009939386,-0.036132988,-0.0643865,-0.0051526087,0.037641343,0.028771313,-0.025034193,0.02712788,-0.041175846,-0.056507036,0.060649388,-0.030864999,-0.07577796,-0.052814946,-0.045498297,0.023773478,0.035930373,0.0080820825,-0.023998607,0.03111264,0.0044378284,0.020261487,-0.05808293,0.0030195245,-0.01913585,-0.03658324,0.014835912,-0.009607322,0.0072659943,-0.106350295,-0.030324694,0.052319665,-0.011571561,0.0037596317,0.020351538,-0.002445449,-0.0109806005,-0.08455794,-0.044417683,-0.024719015,-0.023188148,-0.008476055,0.046736497,-0.015815217,-0.020317769,-0.026294908,0.01095246,0.018798158,-0.042233944,0.025619525,-0.028793825,0.011340804,0.051329102,-0.031157665,-0.017481161,0.024719015,-0.013068659,-0.03356653,-0.022681609,-0.00418456,0.009809937,-0.0022709752,-0.003329075,-0.03885703,-0.07276125,-0.02211879,-0.011582817,-0.012066841,-0.0074066995,0.0006799558,0.010699191,0.03300371,0.010434666,0.0068213674,0.055291347,-0.02647501,0.0123369945,0.023143122,-0.021837382,0.0062360354,-0.00022952467,0.00448004,-0.0023624331,-0.07501253,0.034917295,0.04284179,0.024606451,-0.03520996,0.007997659,-0.059118517,-0.0013711681,0.011515278,0.014464451,-0.01629924,-0.006810111,-0.0075417757,0.0075868014,0.030234642,0.021859894,0.038541853,0.03340894,-0.003390985,-0.0040157144,0.02361589,0.014318118,-0.046241216,0.0155675765,-0.008459171,-0.0036048563,0.032283302,0.0023779108,-0.007395443,-0.005932113,-0.055426426,0.062495433,0.012978609,-0.039622463,0.004857129,0.012753481,-0.047952186,0.029874438,0.031135153,0.006213523,-0.026114807,0.008926311,-0.030392231,0.037168574,-0.022782916,0.021814868,0.004989391,0.02728547,-0.031315256,0.013091172,0.016423061,0.021038178,0.027668187,-0.014464451,-0.024786552,-0.056326937,-0.0018516749,-0.014385656,0.027488085,-0.012550866,0.017627494,0.016715728,0.027645674,0.009072644,-0.038136624,0.025597012,-0.023570864,-0.0027761052,-0.045745935,-0.0067763417,-0.060649388,0.009213349,-0.028928902,0.021105716,0.017559957,0.0068551367,-0.004097323,0.016659446,0.019766206,-0.001708156,-0.007040867,0.018314134,0.018437954,-0.00889817,0.03836175,-0.008014544,0.043269534,-0.054841094,0.019867513,-0.0027620348,0.020790538,0.024471374,0.011329548,-0.022343919,-0.020632949,0.008020172,-0.032080688,0.02386353,0.014475707,0.017030906,-0.03917221,0.032958686,-0.004513809,0.051734332,-0.015916524,-0.03241838,-0.051149,-0.025867166,-0.008127108,0.0089375675,-0.011965534,-0.0319231,0.03662827,0.030212129,0.011841713,0.01767252,0.014475707,-0.0075305197,0.010355871,-0.019462284,0.043697275,-0.00412265,0.0027817334,0.021826124,0.0456784,-0.02834357,-0.0026171089,-0.0049105966,-0.014509477,0.0025833396,0.08644901,0.020610435,0.008391633,0.0025411283,0.021409638,0.0037652599,0.016355524,-0.0024581123,0.032058176,0.06312579,-0.018370416,-0.02622737,0.0023497697,0.0373937,-0.008374748,-0.08433282,-0.0025903748,-0.035480116,0.0013979019,0.029829413,-0.029424183,-0.0012037293,-0.02040782,-0.007851327,0.003886266,-0.009567925,0.009123297,-0.020756768,0.008397261,-0.009303399,0.010181397,0.026092293,0.049753208,-0.026204858,0.013822837,-0.002738115,-0.016636932,0.025259322,-0.018100262,0.012719711,0.022422712,0.0072772508,-0.0003301286,-0.034624632,0.025844652,0.00784007,-0.025506962,-0.017199751,-0.006275433,-0.0154099865,0.0014661438,-0.032778583,-0.019057054,0.0010531752,-0.02321066,0.034061812,-0.019304695,-0.03145033,-0.0025819326,0.0061403564,-0.012348251,-0.060964566,-0.05083382,-0.05938867,-0.07433715,-0.01760498,0.001003225,-0.018280365,0.02859121,0.030257154,-0.024313785,-0.008504197,0.0007984996,-0.0038721955,0.009044503,0.0032953059,0.004592604,-0.016017832,-0.008234044,0.025439423,-0.0026213299,0.0052201473,0.029041465,0.017256033,-0.0023174076,-0.023886042,-0.006072818,-0.0021626323,-0.0038496826,-0.035570167,0.007226597,-0.015308679,-0.01959736,-0.005802665,-0.020734256,0.029199054,-0.0035767155,-0.014565758,0.03469217,-0.0008878471,0.01832539,0.031495355,0.012809763,-0.0022470553,0.005425576,-0.009759283,0.00796389,-0.026294908,-0.030504795,-0.014306862,0.035502627,-0.020981897,-0.026812702,-0.008386005,-0.02712788,0.012573379,0.014025452,0.020891845,0.005192006,-0.013293787,-0.01869685,-0.041918766,-0.0012374985,-0.015376218,0.013653992,-0.027398033,0.010496576,0.01172915,0.044125017,-0.010879293,-0.00049422553,-0.028636236,0.004662956,-0.022332663,-0.022343919,-0.032395866,-0.0019487612,-0.01008009,0.03689842,-0.016040344,0.0024693687,-0.017120957,0.009922501,0.037528776,-0.014802142,0.012888557,0.018989516,-0.0130236335,-0.008858773,-0.010507832,0.026610088,0.012562122,-0.031990636,-0.005071,0.034331966,-0.023041815,0.057947855,0.04437266,0.05245474,0.05213956,0.023075582,0.0023638401,-0.043201994,0.027375521,-0.020925613,0.031630434,0.00244967,0.025732089,0.014858424,0.010552858,0.020948127,-0.0043843607,0.04464281,0.0080877105,0.022051252,-0.0064724195,0.022253867,-0.023593377,0.015803961,-0.025056707,-0.014667066,-0.0133613255,0.013068659,0.022175072,0.029379157,-0.0023919812,-0.0013767962,0.021015665,0.013282531,-0.012494584,0.021274561,-0.008110223,-0.026204858,-0.020959383,-0.04097323,-0.01654688,0.003917221,-0.0020852447,-0.021432152,-0.04518312,-0.007986403,-0.02426876,0.015612601,0.0075642886,0.023233172,-0.029559258,-0.0027732912,0.0066750343,0.052274637,0.0038102854,-0.02989695,-0.013924144,0.013507659,-0.007755647,-0.052904997,0.014486964,0.0059096003,0.028118443,-0.013912888,0.026159832,0.012562122,0.012325739,-0.036470678,0.021443408,-0.062045176,-0.021668535,-0.0066637783,-0.025732089,-0.047546957,-0.048357416,0.049257927,0.0063767405,0.018246595,0.035637707,0.024336297,-0.062495433,-0.006100959,-0.004888084,0.027060343,-0.0036808369,-0.025349373,-0.04642132,0.011391458,-0.0043871747,-0.007356046,0.008858773,-0.014982244,0.026587574,-0.018269109,0.03714606,-0.040275335,0.026902752,0.010958088,-0.014228066,0.020182693,-0.04169364,-0.021612253,0.0019051427,-0.026835214,-0.01592778,-0.030347206,-0.015173603,-0.0109806005,0.004007272,0.005096327,0.023041815,0.020745512,0.013395094,-0.0036667665,0.0051469808,0.03714606,-0.017154725,0.005037231,0.037168574,-0.037168574,-0.02044159,-0.013935401,0.006523073,-0.016974624,0.0071421745,-0.013305044,0.019259669,-0.030752435,0.0319231,-0.022310149,0.010147628,0.008143992,0.0059996517,0.03602042,-0.027555622,-0.014183042,0.008250928,0.03484976,0.040432923,-0.051058948,0.007721878,0.032283302,0.004243656,-0.029671824,0.0125170965,0.04252661,0.01954108,-0.05466099,0.003686465,-0.0017053419,0.0153987305,-0.011036882,-0.01916962,0.027578136,0.0023244428,0.013856607,-0.035367552,-0.01073296,0.0066243806,0.0031180177,-0.017132213,0.0022526835,-0.000582166,-0.018640568,0.002735301,-0.0012177998,0.032913662,-0.0000043475575,-0.008909427,0.02370594,-0.02426876,0.0017475534,0.015038527,-0.010372756,-0.028771313,0.011397087,-0.016220447,0.013687761,-0.036335602,-0.015500038,0.00041894848,0.029806899,0.009067016,0.030414743,0.019473542,-0.014689579,-0.00045975286,-0.02022772,-0.00056985434,0.010434666,0.002887262,0.0032896777,0.04520563,-0.040590513,0.0010883515,0.008211531,0.023908556,-0.057452574,0.028028391,0.056957293,0.042414047,-0.0071872,0.0080820825,0.022298893,-0.005842062,-0.010749845,-0.020959383,0.034512065,0.008324094,0.010794871,0.017188495,-0.0038187276,-0.006748201,-0.0014358922,0.04097323,0.029671824,0.069249265,0.024899118,0.0020852447,-0.021983715,0.033048738,-0.00040171214,0.04095072,-0.01113819,-0.076633446,-0.01825785,0.036448166,-0.003621741,-0.045655884,-0.0032474662,-0.017346084,0.018921979,0.017616238,0.028388595,-0.00200645,-0.004046669,0.021510946,-0.015083551,0.023390763,0.00083226874,0.035525143,0.017987698,0.03822667,0.028501159,-0.035074886,-0.014340631,0.053940583,-0.0042774254,-0.020058872,-0.0143744,-0.029829413,0.0060897027,0.043449633,0.01278725,-0.02532686,0.0007872432,-0.030594846,0.027600648,0.032913662,0.033769146,-0.015094808,0.027172906,0.012055585,-0.020745512,0.03347648,0.00024429866,-0.02964931,-0.016817035,0.01515109,0.028276032,-0.028118443,0.038812004,-0.026565062,0.0039932015,0.0329812,-0.028793825,0.017098444,-0.011526535,-0.004539136,0.023120608,0.0017925788,-0.006449907,-0.0008604097,-0.012303226,0.009089529,-0.0024538913,-0.01527491,0.008903798,0.027172906,-0.007220969,0.0037708879,-0.01801021,-0.028276032,-0.035525143,0.031900585,0.011526535,0.0013338813,-0.017751314,0.021657279,0.038721953,0.033026226,0.00013375748,-0.0055296975,-0.0004499035,-0.030842487,0.03532253,-0.033048738,-0.013912888,0.037416212,0.015016014,-0.0049359235,0.013665248,0.004812103,-0.00059307064,-0.0013177003,-0.0073504173,-0.017199751,-0.04164861,0.005481858,0.025034193,-0.03322884,0.007429212,-0.026362447,-0.031472843,0.0015998132,-0.01829162,-0.033679094,0.013980427,-0.033341404,-0.006449907,0.015466269,-0.011841713,-0.021803612,-0.0245164,-0.018550517,-0.0108117545,0.00017887095,-0.045093067,0.0023469557,0.0048796413,-0.010513461,0.019225901,0.003241838,0.020058872,0.008943195,0.011335176,0.027735725,-0.010063206,-0.014149272,0.014880937,-0.023570864,-0.02989695,0.02056541,-0.0004203555,0.032530945,-0.021364613,-0.04041041,0.027330495,0.024719015,0.011875483,-0.0053242687,0.009838078,-0.008971336,0.00936531,0.013642735,-0.005448089,0.01629924,-0.008363492,0.03860939,0.008903798,0.03602042,0.035727758,0.012809763,0.030437257,-0.0067650857,-0.01266343,-0.011278895,0.03430945,0.015184859,-0.01857303,0.039442364,-0.014925962,-0.036042936,0.027217932,0.030819973,-0.06821367,-0.03145033,-0.043201994,0.019698668,-0.042886816,0.050923873,-0.025349373,-0.023030557,0.010170141,0.0012895593,0.014104246,0.039464876,0.01735734,0.015162347,-0.016726984,-0.03446704,-0.010575371,-0.019676156,-0.025304347,-0.0025270577,-0.02321066,-0.0014647366,-0.008020172,-0.006523073,-0.030009514,0.030527309,-0.0015463454,0.020025104,-0.004924667,0.0043224506,0.00020208723,0.04131092,0.032553457,0.0051779356,-0.018156543,0.008487312,0.03077495,0.02793834,-0.0009166916,-0.027510598,-0.04432763,0.021229537,0.007969518,-0.014363144,-0.009404707,-0.0026396215,-0.033701606,0.042751737,0.004536322,-0.003241838,0.032035664,-0.014194298,-0.004389989,-0.000046388606,-0.031810537,0.031135153,0.00055859797,0.0074517247,-0.0036386254,-0.0035260615,0.040568,-0.01008009,-0.0070858924,-0.014678322,-0.04178369,-0.0059208567,0.0069508157,0.0096185785,-0.026610088,-0.03714606,-0.01266343,-0.0065343296,-0.075642884,0.0087743495,0.015545064,0.0069114184,0.009573553,-0.02171356,-0.024809066,-0.014464451,0.008841888,0.0059602545,-0.05628191,0.0014956917,-0.029379157,-0.014475707,0.03136028,0.00784007,0.0040382273,-0.0059377416,0.019833745,-0.0006662371,-0.02834357,-0.0067031756,0.0068889055,0.01592778,0.015308679,0.010851152,0.022490252,-0.0114927655,-0.027443059,0.0003992498,-0.055156272,0.008267812,-0.035525143,-0.0023342923,0.03349899,0.03030218,-0.021893663,0.0042774254,0.030437257,-0.039757542,-0.02305307,-0.0012719712,0.01095246,0.014014196,0.027578136,0.014565758,0.046781525,0.017481161,-0.028636236,-0.021837382,0.00061980454,0.034512065,0.007012726,0.008746209,0.026294908,-0.04079313,-0.033296376,-0.014509477,0.01695211,-0.019090824,-0.0047248662,-0.008459171,-0.012607148,0.00365551,0.019901283,-0.005071,0.014824655,-0.008892542,0.02924408,0.014250579,-0.004440643,0.047366854,0.032711048,0.002649471,-0.0016560951,-0.01783011,-0.0041761175,0.0101307435,-0.008386005,0.025236808,-0.022512764,0.007508007,0.0048177317,-0.01695211,-0.009646719,-0.002444042,0.014002939,-0.023593377,0.013507659,0.03953241,-0.0031686716,-0.020216461,0.021578483,0.022006227,-0.023773478,-0.018415442,0.014430681,-0.028703773,-0.013113685,-0.03941985,0.0058251778,0.013732786,-0.0063204584,-0.019248413,-0.044012453,0.016040344,-0.026204858,-0.011019998,0.011397087,0.015443756,-0.0395099,-0.006748201,0.026745163,-0.018899465,0.08190144,0.034354478,-0.011008741,-0.0033825429,-0.023683427,-0.0005631709,-0.015725166,-0.021263305,-0.026992803,-0.010991857,-0.0028070603,-0.021814868,-0.03322884,-0.016693214,-0.047862135,0.0027606278,0.0027324867,-0.017222265,0.010057577,0.024021119,0.0033825429,-0.0066862907,-0.014802142,-0.033341404,0.0002928418,-0.07559786,0.013462633,-0.034354478,0.0024285645,0.01160533,-0.011228241,0.03282361,0.020385308,-0.0049105966,0.011717893,-0.019709924,0.0011601108,0.04527317,-0.025687063,-0.031652946,-0.004097323,-0.002207658,0.0026902752,-0.009871847,0.0040804385,0.019057054,0.0017897647,0.007947005,0.028478647,-0.021623509,-0.018798158,0.02040782,-0.0059208567,0.0058308057,0.04045544,-0.004266169,-0.0075248913,0.03698847,-0.0047811484,-0.015297423,-0.0052257753,-0.0015871498,0.020610435,-0.029536746,0.019372234,0.023368249,-0.009534156,0.027983366,-0.03275607,0.023255685,-0.0077387625,-0.041040767,0.0031152037,-0.026497522,0.03273356,0.011256382,-0.016659446,0.012460815,0.017728802,-0.03219325,0.0118304575,-0.01213438,0.011239497,0.016310498,0.012809763,0.005797037,0.0028478645,-0.0040410412,-0.017706288,-0.0022822313,0.009354053,0.037821442,0.0010503611,0.021555971,0.0027465571,-0.01792016,-0.01132392,0.014441938,0.017008394,-0.0059433696,-0.004215515,0.013124941,0.03746124,-0.0005786484,0.035142425,-0.008008916,-0.011751663,0.025146758,-0.055516474,-0.0036273692,-0.0011340805,-0.013732786,-0.0021598183,0.0012853381,0.025934704,0.00933154,0.0116503555,0.01723352,0.010164513,0.0008463392,0.030662384,-0.0024581123,0.034354478,-0.0015519736,-0.036380626,-0.010260192,0.0043421495,0.0034275684,-0.006449907,-0.012280713,-0.0045616487,0.020205205,-0.00041437557,-0.015792703,0.02016018,-0.009961898,0.0026368075,-0.0034697796,-0.011301408,0.024201222,-0.020891845,-0.027555622,-0.028456133,0.0018404184,-0.018426698,-0.0020120782,0.026204858,0.038721953,-0.016839547,0.0033403314,0.0014886565,-0.011616586,-0.009432848,-0.030189617,-0.010457179,0.031405307,-0.01589401,-0.038721953,-0.06605245,0.0022836386,-0.014250579,-0.019923797,-0.012303226,0.001708156,-0.0019951938,-0.0062641767,0.007181572,0.035502627,0.00448004,-0.01515109,-0.013327557,-0.007547404,0.0037511892,-0.009517271,-0.0040860665,0.024201222,0.022659097,-0.003832798,-0.02516927,0.010620397,-0.003860939,-0.02305307,-0.018404184,-0.0118304575,-0.035975397,-0.022265123,-0.0061291,0.020599179,-0.023548352,0.029671824,-0.015601345,0.025484448,0.025011681,-0.0027887686,0.016693214,0.0073166485,0.029941976,0.010828639,0.0425041,0.032080688,0.0055212555,-0.022478994,-0.0006799558,0.01148151,0.014757116,-0.002921031,0.025597012,0.031472843,0.012629661,0.0038102854,-0.007975146,0.060424257,0.009686117,0.027060343,0.008132736,-0.01421681,-0.011672868,0.031540383,0.014475707,0.01611914,0.02924408,-0.029424183,-0.026767677,-0.026520036,-0.021285819,-0.045430757,0.0005072407,0.0010637281,-0.038069084,-0.0012754888,0.00038306875,-0.0044378284,-0.038136624,-0.024741527,0.0035401322,-0.018156543,-0.0042295856,0.015443756,-0.066232555,-0.04813229,-0.01620919,-0.014813399,0.04295435,-0.026925266,0.05065372,0.0003271386,-0.0150610395,0.055111244,-0.01032773,0.037528776,0.00006661491,-0.021173254,0.009928129,0.007462981,0.0051497947,-0.004657328,0.003624555,-0.016648188,0.016175421,0.008622388,-0.010896178,-0.00037040532,-0.030009514,-0.014588271,0.03786647,0.008875657,0.009477873,0.016411806,0.0064386507,0.024223734,0.004654514,0.015736422,0.03698847,-0.028861362,0.010654165,-0.009252746,0.054615967,0.0044125016,0.037416212,-0.010535973,0.043449633,-0.06411635,0.009871847,0.0114196,-0.016895829,0.025281833,-0.0002143989,0.024336297,0.0013247355,-0.0052876854,0.055246323,0.019068312,-0.0018699665,0.030482283,0.014081734,-0.0014886565,-0.008048313,0.013417607,-0.008262184,0.037911493,-0.010485319,0.0057688956,-0.013665248,0.031157665,-0.004924667,0.035119914,-0.0075305197,0.008982593,0.011740406,0.0072097126,-0.012989865,-0.0018024282,-0.0019867513,-0.009590438,-0.008194646,-0.011920509,-0.004924667,0.017098444,0.020948127,0.031720486,0.014903449,0.01698588,-0.034917295,-0.019642387,-0.0016701657,0.0029801272,-0.00737293,-0.009472245,0.038879544,0.061955128,0.012449559,0.023480812,0.013001122,-0.011278895,0.022141304,0.008532338,-0.009838078,-0.01897826,0.0014330781,-0.023323223,0.0029013325,0.004617931,0.021803612,0.0059658824,-0.028028391,0.0136990165]},{"id":"jump-game-ii","name":"Jump Game II","description":"You are given an array of integers `nums`, where `nums[i]` represents the maximum length of a jump towards the right from index `i`. For example, if you are at `nums[i]`, you can jump to any index `i + j` where:\n\n* `j <= nums[i]`\n* `i + j < nums.length`\n\nYou are initially positioned at `nums[0]`.\n\nReturn the minimum number of jumps to reach the last position in the array (index `nums.length - 1`). You may assume there is always a valid answer.\n\n**Example 1:**\n\n```java\nInput: nums = [2,4,1,1,1,1]\n\nOutput: 2\n```\n\nExplanation: Jump from index `0` to index `1`, then jump from index `1` to the last index.\n\n**Example 2:**\n\n```java\nInput: nums = [2,1,2,1,0]\n\nOutput: 2\n```\n\n**Constraints:**\n* `1 <= nums.length <= 1000`\n* `0 <= nums[i] <= 100`\n","difficulty":"Medium","concepts":[],"solutions":{"python":"class Solution:\n    def jump(self, nums: List[int]) -> int:\n        l, r = 0, 0\n        res = 0\n        while r < (len(nums) - 1):\n            maxJump = 0\n            for i in range(l, r + 1):\n                maxJump = max(maxJump, i + nums[i])\n            l = r + 1\n            r = maxJump\n            res += 1\n        return res\n","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {number}\n     */\n    jump(nums) {\n        let l = 0;\n        let r = 0;\n        let res = 0;\n        while (r < nums.length - 1) {\n            let maxJump = 0;\n            for (let i = l; i <= r; i++) {\n                maxJump = Math.max(maxJump, i + nums[i]);\n            }\n            l = r + 1;\n            r = maxJump;\n            res++;\n        }\n        return res;\n    }\n}\n","cpp":"class Solution {\npublic:\n    int jump(vector<int>& nums) {\n        int l = 0, r = 0;\n        int res = 0;\n        while (r < nums.size() - 1) {\n            int maxJump = 0;\n            for (int i = l; i <= r; i++) {\n                maxJump = max(maxJump, i + nums[i]);\n            }\n            l = r + 1;\n            r = maxJump;\n            res++;\n        }\n        return res;\n    }\n};\n","java":"class Solution {\n    public int jump(int[] nums) {\n        int l = 0, r = 0;\n        int res = 0;\n        while (r < nums.length - 1) {\n            int maxJump = 0;\n            for (int i = l; i <= r; i++) {\n                maxJump = Math.max(maxJump, i + nums[i]);\n            }\n            l = r + 1;\n            r = maxJump;\n            res++;\n        }\n        return res;\n    }\n}\n","csharp":"public class Solution {\n    public int Jump(int[] nums) {\n        int l = 0, r = 0;\n        int res = 0;\n        while (r < nums.Length - 1) {\n            int maxJump = 0;\n            for (int i = l; i <= r; i++) {\n                maxJump = Math.Max(maxJump, i + nums[i]);\n            }\n            l = r + 1;\n            r = maxJump;\n            res++;\n        }\n        return res;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def jump(self, nums: List[int]) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {number}\n     */\n    jump(nums) {}\n}\n","cpp":"class Solution {\npublic:\n    int jump(vector<int>& nums) {\n        \n    }\n};\n","java":"class Solution {\n    public int jump(int[] nums) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int Jump(int[] nums) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/dJ7sWiOoK7g","embedding":[-0.019159954,0.007930445,0.026244486,-0.060355972,0.023685595,0.00434324,-0.058452666,0.008892672,0.007491627,0.031298824,0.013672086,-0.016685655,-0.04214767,-0.0037008743,0.022670498,0.023304934,0.008876811,-0.01707689,-0.0013534626,0.015723428,-0.01709804,0.045044925,0.043860648,-0.018969623,0.077274255,-0.017806493,0.010912292,0.046609867,0.017658457,-0.0054878676,0.041830454,-0.0048825103,-0.013999878,0.038742866,-0.0046921796,-0.013101094,0.005093989,-0.014042174,-0.03282147,-0.026159894,0.00045203534,-0.019836687,-0.009479525,-0.027111547,0.03457674,0.036564637,0.03466133,0.0016455672,0.009521821,0.04168242,0.012160015,0.006746165,0.0013851844,0.022289837,-0.035338063,-0.030643238,0.0015662628,0.048978426,0.020999817,-0.019953,0.04597543,-0.027534503,-0.009278621,0.005144215,0.0020103678,0.052023716,0.014581445,0.02935322,0.0046578147,-0.028845672,-0.04343769,-0.005297537,0.008776359,-0.012149441,0.00659813,0.025631197,0.015575393,0.028422713,0.02167655,0.0030214994,0.034344114,-0.03161604,0.027978608,-0.019022493,0.03161604,0.012572398,-0.013862417,-0.002453151,0.009823178,-0.063274376,0.0022985071,-0.022881977,-0.018631259,0.049697455,0.046060022,-0.00046855712,0.016167533,0.012096572,0.031108491,0.056295585,0.016347291,-0.007021087,0.034724776,-0.036310863,-0.009828464,0.023410672,-0.0063655037,0.008316393,-0.024996761,-0.016368438,-0.004755623,-0.002198055,-0.02283968,-0.013756678,0.008226515,-0.013682661,-0.023875926,-0.036289714,0.02719614,-0.015480228,0.010954588,-0.016167533,-0.015427358,-0.059552353,-0.017859362,-0.02256476,0.010669092,-0.05566115,0.05781823,0.014560296,0.016653934,-0.01171591,0.031193083,-0.0018742285,-0.038806308,-0.060398266,-0.009701577,0.009278621,0.002820595,0.036776114,0.038150728,-0.0028946123,-0.045044925,0.010156256,0.05337718,-0.0033677956,-0.021433348,0.0354861,-0.0236433,0.0014882801,0.036205124,-0.0055195894,0.0076502357,0.0374317,0.003737883,-0.029670438,-0.0048164236,-0.013005929,0.015839742,0.016072368,-0.011292953,-0.0025311336,0.008723489,-0.008279384,0.022733942,-0.013894139,-0.037833508,0.006159312,-0.015681133,0.028401567,0.040836502,-0.06805379,0.0045335707,-0.004430475,0.030960456,-0.018885033,-0.04783644,-0.083237946,-0.050712552,-0.009479525,-0.015427358,0.013397165,-0.02186688,-0.049697455,0.029585846,0.024235439,0.03112964,-0.022395575,-0.017605588,0.012910764,0.03282147,0.033498198,0.053292587,-0.0040471703,-0.00059544423,-0.0017936022,0.03702989,0.048217103,-0.008818654,-0.024489213,-0.015934907,0.023474116,0.014433409,-0.009828464,0.024785284,-0.03996944,-0.020714322,0.009569404,0.00493538,-0.057733636,0.053842433,-0.0013706452,0.04686364,-0.030981604,-0.03948304,0.007280148,0.07350994,0.0009998969,-0.018758146,0.017806493,0.009194029,0.010156256,-0.027513357,0.010764257,0.044283602,-0.004784702,0.0010283143,0.017753622,0.032038998,0.055280488,-0.012921338,-0.022628203,0.009521821,-0.0354438,0.0011651145,0.005347763,-0.005752216,-0.039356153,-0.003727309,0.018028544,0.029924212,-0.0050358325,-0.00009177838,0.023199195,0.004742406,-0.0064712428,-0.051939126,0.05671854,-0.011092049,-0.01319626,0.001509428,0.01756329,0.0017817066,-0.043776054,0.0013131495,0.057860523,-0.004340597,0.019773243,-0.008570167,0.031383414,-0.04261292,0.005593607,-0.048217103,-0.0699148,0.031298824,-0.053123407,-0.01088057,0.012054276,0.0319967,0.0010441752,-0.031383414,-0.024087405,0.016167533,-0.023875926,-0.016230976,-0.019329138,0.056380175,-0.01502555,0.017859362,-0.07998118,-0.029903064,-0.017267222,0.024594953,-0.015945481,0.034513295,-0.021845732,0.00059676595,0.013608643,0.008845089,-0.042295706,-0.060990408,-0.028147792,-0.0081736455,0.043564577,0.014718905,0.00903542,-0.018187154,0.0017645239,0.025271684,-0.044114422,0.008945541,-0.022860829,-0.034026895,-0.031193083,-0.04559477,-0.01836691,-0.0013693235,0.034809366,-0.03288491,0.014105618,-0.028528454,0.045171812,-0.007021087,0.024087405,0.00920989,-0.06885741,-0.008771072,-0.021369904,0.018240023,-0.0049829627,0.0030479343,0.022310985,0.04246489,0.06944955,0.006169886,0.037600882,-0.0034999696,0.028316975,0.015363915,-0.030093394,-0.035909053,-0.03821417,-0.009426655,0.016178107,-0.06331667,0.047498077,0.016516473,-0.01774305,0.022501316,0.0315103,0.06691181,0.01669623,0.032863762,0.0115573015,0.006312634,-0.0034233087,0.014021026,-0.014792923,0.0055301636,0.014951532,0.02127474,-0.009135872,0.03772777,0.02658285,-0.016823117,0.023854777,-0.029881915,-0.022459019,-0.040011737,0.002615725,-0.037452847,-0.010679666,0.027069252,-0.026117599,0.0028390992,0.016875986,-0.00861775,-0.04952827,0.019614633,0.08120775,0.011705336,0.04273981,0.014105618,-0.01817658,-0.010542205,-0.00618046,-0.021644827,-0.005342476,0.0044436925,-0.005620042,-0.052023716,0.011546727,0.0016561412,-0.010526343,0.0071162526,0.036268566,0.027703688,-0.05050107,-0.023220342,-0.027999757,0.001468454,-0.037072185,0.05477294,-0.009653995,0.017013447,-0.008897959,0.06479702,0.027597947,-0.033730824,-0.007798271,0.008126062,-0.021211296,0.019921277,-0.002692386,-0.019001346,-0.058029708,-0.0069576437,0.041386347,0.04164012,-0.046060022,-0.01270986,0.017002873,0.018800441,-0.009754447,0.019466598,0.04134405,-0.01491981,-0.02768254,-0.036712673,0.0036982307,-0.041470937,-0.030748978,0.013005929,0.009706864,0.02916289,0.010589787,-0.009548255,-0.06471243,0.031552598,0.00588439,0.0140844695,-0.022374429,-0.04164012,0.008110202,-0.06771542,0.09330433,-0.013439461,0.060990408,-0.00035819176,-0.07076071,-0.021169001,-0.03950419,0.036903,0.012762729,-0.008527871,0.0017737761,-0.03131997,0.04007518,0.0124137895,-0.030748978,0.050627958,-0.024108551,0.04284555,0.006175173,-0.045552474,0.03956763,0.053842433,-0.009236325,-0.016061794,-0.008157784,-0.06437407,0.023283785,0.007026374,-0.0007144009,0.02275509,-0.015882038,-0.0067567388,0.019508895,0.048597764,0.022310985,0.021718845,-0.004544145,-0.010817126,0.042211115,-0.021993767,0.0064183734,0.01734124,0.080700204,0.0039625787,-0.024954466,-0.013640365,-0.052869633,0.0036453612,-0.027640244,0.0055777463,-0.027957462,0.014518001,-0.01718263,-0.013185686,0.0043538143,-0.043395393,0.002881395,0.0241297,-0.007496914,0.030347168,0.0021808723,0.010526343,0.0043326663,-0.025758084,-0.019783815,-0.006571695,-0.09245841,0.015036123,0.011673614,0.033942305,0.003227691,0.0006787139,-0.0051204236,-0.01502555,0.07304468,-0.011240084,-0.017404683,0.030389464,-0.011673614,0.006925922,0.023981664,-0.0004196527,-0.03601479,0.010024082,-0.008543733,-0.015882038,0.021803437,0.012868469,0.014613166,0.017626734,-0.014898662,-0.032525398,-0.014147913,-0.032292772,0.018536093,-0.009849613,0.025525458,0.013206834,0.025673494,-0.016537622,0.040159773,0.005783938,0.000035356567,-0.029205184,-0.038637128,-0.013947009,0.04707512,-0.012508955,0.0013442104,-0.007867001,-0.0241297,0.043099325,0.0112718055,-0.024594953,0.00061328773,-1.8328828e-7,-0.021602532,-0.008099628,-0.032758024,0.007867001,-0.024341179,0.006069434,0.023685595,0.01648475,0.018694703,-0.04216882,-0.00856488,0.0056147547,0.024996761,0.0077929837,-0.024637248,-0.008242375,-0.0126569895,0.010198552,-0.0029739167,0.017679606,0.017616162,0.036691524,-0.03476707,0.025631197,-0.0359725,-0.044283602,-0.018060267,-0.012117719,0.03614168,-0.013101094,-0.037516292,-0.0043511707,-0.012995356,-0.022628203,-0.005979555,-0.030220281,0.0011545406,0.017869936,-0.029120592,0.010605648,0.021317035,0.03675497,0.009537682,-0.018377485,-0.023135751,-0.04656757,0.009368499,0.03673382,0.0016746456,0.016474178,0.025927268,0.0121282935,-0.0062227556,-0.015839742,0.0026831338,0.006619278,0.04303588,0.012974207,0.011345823,-0.018102562,-0.0067884605,-0.008110202,-0.030389464,-0.01432767,-0.006339069,0.0280632,0.03457674,-0.0076766703,-0.0038832745,-0.0052684587,-0.0036427176,0.035803314,0.02649826,-0.006265051,-0.019456025,-0.05003582,0.029564697,0.009352637,-0.002126681,-0.02895141,-0.0010362448,-0.004726545,-0.012815598,0.0037854656,0.030220281,-0.010753683,-0.04973975,-0.020957522,-0.030558648,0.03819302,0.03464018,-0.0059531205,-0.034534443,0.0058156596,0.017256647,-0.007713679,-0.0058420943,0.0120859975,-0.02962814,0.0057892245,0.016928855,0.019212823,-0.012593546,0.009537682,-0.003907066,-0.015078419,-0.04872465,-0.009891908,0.0060641468,-0.01147271,-0.021697696,0.045721658,0.029078297,0.036881857,-0.026561704,0.020915227,-0.0021742636,0.057691343,0.0016389586,-0.031658337,0.027301878,-0.00006968052,-0.044156715,0.007734827,-0.0006787139,0.007306583,0.028190088,-0.0275768,-0.008543733,-0.003523761,0.0016151672,-0.02294542,0.046356093,0.0020605938,0.008771072,-0.00451771,0.007570931,-0.029945359,0.027132696,-0.0015517237,-0.04028666,-0.0030928734,-0.0045864405,0.05189683,-0.028718784,0.011789928,0.025398571,-0.015480228,-0.076978184,0.027597947,-0.01290019,0.028782228,0.026561704,-0.038404502,-0.031002752,0.009706864,0.0014301236,-0.0137884,-0.00647653,0.005477294,0.02157081,0.0071056783,-0.007084531,-0.030960456,0.03722022,-0.0014142627,-0.038277615,-0.012022554,-0.05337718,-0.021739993,0.014835219,-0.016706804,-0.025102502,-0.007327731,0.023854777,0.023579856,-0.0011988189,0.039757963,0.009262759,-0.00832168,-0.013058799,-0.029564697,0.0039335005,0.012614694,-0.040603876,-0.0275768,0.00820008,-0.03121423,-0.044537377,-0.020397104,0.0013118277,0.03713563,-0.0073594525,0.015977202,0.014951532,-0.012318624,0.019804964,-0.052235197,0.038806308,-0.0059161116,0.003722022,0.024912171,0.004634023,0.029966507,0.017108614,-0.018377485,0.0035290478,0.01909651,0.017552719,0.017150909,0.033921156,-0.014116191,0.008104915,0.041915044,0.012635842,-0.015300471,0.038890902,-0.0035528392,0.039757963,-0.0071003917,-0.014866941,-0.0022178811,-0.04834399,0.010478761,-0.027365321,-0.037093334,0.008660045,-0.000024823945,-0.016230976,-0.019508895,0.02176114,0.006455382,0.005598894,0.011218936,0.0048058494,0.017510422,0.013894139,0.020344235,-0.024552656,0.0034682478,-0.040117476,0.0008346793,-0.031552598,0.032377362,0.025631197,-0.006888913,0.0062439037,0.0034233087,-0.023601003,0.021644827,0.02719614,0.016928855,-0.019656928,0.013640365,0.018356336,0.0112718055,0.009241612,-0.0015239671,0.009188742,-0.0010725927,0.03387886,-0.00719027,-0.0039916574,0.017764196,0.00077850535,-0.0013316538,-0.020312512,-0.02649826,-0.00844328,-0.001983933,0.029374367,-0.017510422,-0.004715971,0.009363212,-0.015321619,0.010325439,0.0105792135,0.022205245,0.027999757,-0.0023394811,0.021909175,-0.049189907,0.024975615,-0.025631197,0.043860648,0.0068043214,-0.01284732,-0.021739993,0.025863824,-0.0011208362,0.03601479,-0.010357161,-0.060905814,-0.006212182,0.028972559,0.008268811,-0.025948415,0.018937903,-0.03910238,-0.0010507839,0.012244606,0.03614168,-0.02343182,0.005461433,0.017394109,0.021369904,0.035993647,-0.028401567,-0.018969623,0.016463604,-0.0038859178,0.0056729116,-0.02668859,-0.035591837,0.025652345,-0.039271563,-0.008971976,-0.006069434,-0.019392582,0.052827336,0.029860768,-0.033413608,-0.020724896,0.008945541,0.033984598,-0.029755028,0.010066378,0.010367734,-0.008956116,0.032842614,0.0100981,-0.03859483,0.049359087,-0.023854777,-0.051981423,0.023770187,-0.00037008742,-0.0016019498,-0.027597947,0.026921216,-0.014528574,-0.01890618,-0.017637309,-0.009950065,-0.009960638,0.022141801,-0.008311106,0.045848545,-0.026371373,-0.007692531,-0.018684128,0.011610171,0.0049618147,0.029733881,0.013460608,0.019191677,0.012075424,0.005783938,-0.01314339,0.014010453,0.010013509,0.0034391696,-0.0031880387,0.04914761,0.025165945,0.0046023014,-0.0020368025,0.015945481,-0.004115901,0.034238372,-0.038425647,-0.030685535,0.0044278316,0.0369453,0.00025955684,-0.0035924914,-0.002483551,0.013904713,0.01039417,0.039060082,0.008020323,-0.013767252,-0.021391053,-0.027492208,-0.03504199,-0.022184098,0.030347168,0.012318624,0.0011082797,-0.021845732,0.0045626494,-0.01270986,-0.034217227,0.013968157,-0.027344173,0.009056568,-0.022797385,0.0046974667,0.032842614,0.049782045,-0.04176701,0.021243017,-0.028782228,-0.030368317,-0.0016376368,-0.0034338825,0.038489092,0.011060327,0.01551195,0.0084591415,-0.04295129,0.0007124183,0.0027307165,0.007021087,-0.044156715,0.020492269,0.028380418,-0.00002562938,-0.042866696,0.0036480045,0.0028020905,-0.0055354503,0.0403924,-0.018282318,0.018652406,-0.024277736,-0.021200722,0.015903186,0.00076000096,0.035591837,0.02442577,-0.0035264045,-0.0069735046,-0.0026011858,0.014507427,-0.006910061,0.010764257,-0.0003757048,0.007047522,0.022903124,0.017806493,0.0019310632,-0.030368317,0.020798912,-0.023875926,-0.03861598,0.029818472,-0.01575515,-0.032631136,-0.012593546,-0.035782166,0.006154025,0.0023487334,0.0067937477,-0.04855547,0.063781925,0.0081736455,-0.022543611,-0.0057204943,-0.006783174,-0.024996761,-0.0107008135,-0.00439611,0.007845853,-0.0023381594,0.052911926,0.0275768,0.0024306814,-0.03161604,-0.015194732,0.027217286,-0.019350285,0.022141801,-0.027513357,-0.02353756,0.005358337,0.057733636,0.0010507839,0.0031378127,-0.014581445,-0.009817891,-0.016653934,-0.016960578,-0.007438757,0.030156838,0.0015781585,-0.012995356,0.0022852898,0.0030109256,-0.008231802,0.014348818,-0.008057332,0.009500673,-0.017542144,-0.009252186,-0.019857833,-0.0058103725,-0.04551018,0.028084349,-0.01117664,0.025102502,-0.011493858,-0.016664509,-0.007909297,0.01777477,0.016315568,0.017922806,-0.018144857,0.007766549,0.004895728,-0.044452786,-0.010425892,0.015607115,0.02294542,-0.011705336,-0.01734124,-0.01753157,-0.032546546,-0.0040313094,0.011789928,-0.008543733,-0.019530041,0.028443862,-0.011567876,-0.026117599,-0.03605709,-0.0063813645,0.016981727,-0.019128233,-0.014613166,-0.0026685947,-0.034830514,0.0022918985,0.022247542,0.04864006,0.0045705796,0.00814721,-0.02628678,-0.014063322,0.015924333,0.0708876,0.0044331187,0.013608643,0.006428947,0.018525518,-0.0018755501,-0.0129424855,0.018271744,-0.0049221627,0.034428705,-0.008501437,-0.006603417,-0.037960395,0.00499618,-0.016749099,0.0015226454,0.026709737,-0.011546727,-0.03546495,0.009389646,0.037939247,-0.013365443,-0.003996944,-0.008089053,-0.055788036,-0.0075022005,0.013101094,-0.0026606643,0.0021398982,-0.0010567318,-0.027745983,-0.0062386165,0.015300471,-0.058368072,-0.03455559,-0.0056623374,0.02590612,-0.0031642474,0.038954344,-0.0031536736,-0.0551536,-0.03675497,-0.01260412,-0.008908533,0.003309639,0.0048217103,-0.022860829,0.018303467,0.028211236,0.014877514,-0.025546607,-0.02658285,0.00309023,0.013058799,0.01807084,0.0015979846,0.045721658,0.008416845,-0.016178107,0.021560235,-0.03210244,0.041090276,0.02787287,-0.008284671,0.043099325,-0.0630629,0.007988601,-0.015046697,-0.027005808,0.0014843149,-0.0032409085,-0.027449913,0.011303527,-0.015226454,0.015924333,-0.02561005,0.004359101,0.03867942,0.010240847,-0.0051574325,-0.002192768,0.013058799,-0.033054095,0.05083944,-0.021581383,0.015036123,0.0024690118,0.023199195,0.001223932,0.010399456,0.0102937175,0.024637248,-0.0018636545,-0.008596602,-0.005482581,0.0025945771,-0.04075191,0.029606994,0.012635842,0.017912231,0.0029051863,-0.007285435,-0.017922806,0.001060697,-0.0022866116,0.0070422348,-0.0044357623,-0.011356397,0.015934907,-0.008289958,-0.03170063,-0.033223275,0.02914174,-0.03112964,0.0075603575,0.005736355,-0.010806553,-0.017764196,-0.0012986104,0.024087405,-0.031827517,-0.02264935,-0.055999514,-0.016389586,-0.025440866,-0.01707689,0.0015504019,-0.004610232,-0.00570992,0.029585846,0.05967924,0.0033836565,-0.01640016,0.022903124,-0.008067906,0.024193143,0.037199073,0.036395453,-0.0057046334,-0.009141159,-0.019878982,-0.01610409,0.0172355,0.035761017,-0.020798912,-0.006154025,0.025060205,0.05967924,-0.0047899885,-0.016082942,-0.012212885,-0.01712976,-0.014687183,0.027555652,-0.041513234,-0.0070422348,0.0006281573,0.022776237,-0.009003698,0.007010513,-0.0018993415,0.016379012,0.011546727,0.009902482,-0.009431942,0.013661513,-0.006312634,0.024446918,-0.010563352,-0.017975675,0.020027017,0.019223398,-0.0050596236,0.0315103,0.0026170467,-0.023516413,0.008062619,0.0039784396,-0.00898255,0.002926334,0.005374198,0.02157081,-0.011980259,0.031150786,0.018937903,-0.01545908,0.032631136,0.015141862,-0.002749221,-0.004626093,0.03605709,0.02964929,-0.009241612,0.03201785,0.02827468,0.0034206652,-0.029014854,0.009595838,-0.0024333247,-0.011070901,-0.0091517335,-0.0037008743,0.008871525,0.002891969,0.021211296,0.0053609805,0.013724957,0.003928214,0.011620745,-0.024573805,0.012477233,-0.019878982,-0.01545908,-0.0007685923,0.030833568,0.006175173,0.0019865765,-0.0038013265,0.03142571,0.01457087,-0.0004374962,-0.0129847815,-0.00102501,0.024446918,-0.016675081,-0.008268811,0.007988601,0.001641602,0.0062597645,-0.002320977,0.029416664,-0.06741936,-0.009194029,-0.018187154,-0.0115573015,0.04885154,-0.008897959,0.012234033,-0.0310239,0.007354166,0.012720433,0.0009774273,-0.023008864,-0.017806493,0.026011858,0.028803375,0.025927268,-0.0020434114,0.027301878,-0.006021851,0.006767313,-0.020375956,-0.044537377,-0.0068148957,-0.0021940898,0.0413652,0.008633611,-0.031045048,-0.055111304,0.05261586,0.006143451,-0.006122303,0.032440808,0.027703688,-0.00009640447,-0.009416081,0.026921216,-0.023178047,-0.028486157,0.021507366,0.020513417,0.002228455,-0.01979439,0.0179651,-0.019138807,0.025863824,-0.00025542642,0.005445572,-0.036162827,0.014644888,-0.041386347,-0.04216882,0.0036585785,-0.014232505,-0.041386347,-0.030875865,0.014930384,-0.008215941,-0.020280791,0.019413728,0.014718905,-0.019202251,0.017753622,0.007623801,0.02628678,0.0049591716,0.021739993,0.033011798,0.0065452605,0.0072008437,0.01782764,-0.020058738,0.0053371894,-0.007465192,-0.018166006,0.007930445,0.010600361,0.009278621,0.016971152,-0.0037669612,0.07820476,0.0023540203,0.02609645,0.0019812894,-0.00820008,-0.0039599356,-0.0050437627,0.016114663,0.017838214,-0.008099628,-0.0045705796,-0.026181042,-0.031552598,0.004242788,0.008971976,0.0036982307,-0.009775595,-0.0036427176,-0.029416664,-0.039271563,-0.004885154,-0.022628203,0.004914232,0.016410735,-0.048005626,-0.013122243,0.015120715,-0.02827468,-0.06428947,-0.011134344,-0.026878921,0.0204394,-0.04252833,0.046229206,0.03977911,-0.0031853954,0.05130469,-0.010975735,0.03320213,-0.0074176094,0.013291425,-0.031975552,0.04512952,-0.0037590307,0.013048225,0.010684952,-0.004890441,0.02186688,0.019604059,-0.022670498,0.020608582,0.02216295,0.008252949,0.03673382,-0.019530041,0.0006697921,-0.017013447,-0.006999939,0.04305703,0.010764257,0.023601003,-0.0065082517,0.027153842,-0.017869936,-0.03910238,0.025546607,0.02501791,0.008480289,-0.02294542,0.007708392,-0.04694823,-0.0015054628,-0.01822945,-0.03819302,0.009024846,-0.029078297,0.031827517,0.03535921,-0.0021848376,-0.0025787163,0.024996761,0.071522035,0.039271563,0.0009080359,0.018218875,-0.051431578,0.008067906,-0.0036109958,0.0115995975,-0.028422713,-0.015141862,0.0472866,0.018536093,-0.0031906823,0.019953,0.026878921,-0.00045864406,0.011049753,0.023770187,0.015332193,-0.003941431,0.02111613,0.04872465,-0.02393937,-0.015289897,-0.0184515,-0.01704517,0.0026500903,0.022691647,-0.00492745,0.014962106,-0.017415257,0.0012774625,0.0061117294,0.004604945,-0.044748858,0.019181103,0.012625268,0.0033466476,0.03002995,0.0020843851,0.038806308,0.00044179187,0.011197788,0.013851844,-0.01438054,-0.01462374,-0.021412201,0.017552719,-0.009463664,0.02766139,0.062682234,-0.030220281,0.009484812,0.009384359]},{"id":"gas-station","name":"Gas Station","description":"There are `n` gas stations along a circular route. You are given two integer arrays `gas` and `cost` where:\n\n* `gas[i]` is the amount of gas at the `ith` station.\n* `cost[i]` is the amount of gas needed to travel from the `ith` station to the `(i + 1)th` station. (The last station is connected to the first station)\n\nYou have a car that can store an unlimited amount of gas, but you begin the journey with an empty tank at one of the gas stations.\n\nReturn the starting gas station's index such that you can travel around the circuit once in the clockwise direction. If it's impoosible, then return `-1`.\n\nIt's guranteed that at most one solution exists.\n\n**Example 1:**\n\n```java\nInput: gas = [1,2,3,4], cost = [2,2,4,1]\n\nOutput: 3\n```\n\nExplanation: Start at station 3 (index 3) and fill up with 4 unit of gas. Your tank = 0 + 4 = 4\nTravel to station 0. Your tank = 4 - 1 + 1 = 3\nTravel to station 1. Your tank = 3 - 2 + 2 = 3\nTravel to station 2. Your tank = 3 - 2 + 3 = 4\nTravel to station 3. Your tank = 2 - 4 + 4 = 2\n\n**Example 2:**\n\n```java\nInput: gas = [1,2,3], cost = [2,3,2]\n\nOutput: -1\n```\n\nExplanation:\nYou can't start at station 0 or 1, since there isn't enough gas to travel to the next station.\nIf you start at station 2, you can move to station 0, and then station 1. \nAt station 1 your tank = 0 + 3 - 2 + 1 - 2 = 0.\nYou're stuck at station 1, so you can't travel around the circuit.\n\n**Constraints:**\n* `1 <= gas.length == cost.length <= 1000`\n* `0 <= gas[i], cost[i] <= 1000`\n","difficulty":"Medium","concepts":[],"solutions":{"python":"class Solution:\n    def canCompleteCircuit(self, gas: List[int], cost: List[int]) -> int:\n        if sum(gas) < sum(cost):\n            return -1\n\n        total = 0\n        res = 0\n        for i in range(len(gas)):\n            total += (gas[i] - cost[i])\n\n            if total < 0:\n                total = 0\n                res = i + 1\n        \n        return res\n","javascript":"class Solution {\n    /**\n     * @param {number[]} gas\n     * @param {number[]} cost\n     * @return {number}\n     */\n    canCompleteCircuit(gas, cost) {\n        if (\n            gas.reduce((acc, val) => acc + val, 0) <\n            cost.reduce((acc, val) => acc + val, 0)\n        ) {\n            return -1;\n        }\n\n        let total = 0;\n        let res = 0;\n        for (let i = 0; i < gas.length; i++) {\n            total += gas[i] - cost[i];\n\n            if (total < 0) {\n                total = 0;\n                res = i + 1;\n            }\n        }\n\n        return res;\n    }\n}\n","cpp":"class Solution {\npublic:\n    int canCompleteCircuit(vector<int>& gas, vector<int>& cost) {\n        if (accumulate(gas.begin(), gas.end(), 0) < accumulate(cost.begin(), cost.end(), 0)) {\n            return -1;\n        }\n\n        int total = 0;\n        int res = 0;\n        for (int i = 0; i < gas.size(); i++) {\n            total += (gas[i] - cost[i]);\n\n            if (total < 0) {\n                total = 0;\n                res = i + 1;\n            }\n        }\n\n        return res;\n    }\n};\n","java":"class Solution {\n    public int canCompleteCircuit(int[] gas, int[] cost) {\n        if (Arrays.stream(gas).sum() < Arrays.stream(cost).sum()) {\n            return -1;\n        }\n\n        int total = 0;\n        int res = 0;\n        for (int i = 0; i < gas.length; i++) {\n            total += (gas[i] - cost[i]);\n\n            if (total < 0) {\n                total = 0;\n                res = i + 1;\n            }\n        }\n\n        return res;\n    }\n}\n","csharp":"public class Solution {\n    public int CanCompleteCircuit(int[] gas, int[] cost) {\n        if (gas.Sum() < cost.Sum()) {\n            return -1;\n        }\n\n        int total = 0;\n        int res = 0;\n        for (int i = 0; i < gas.Length; i++) {\n            total += (gas[i] - cost[i]);\n\n            if (total < 0) {\n                total = 0;\n                res = i + 1;\n            }\n        }\n\n        return res;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def canCompleteCircuit(self, gas: List[int], cost: List[int]) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} gas\n     * @param {number[]} cost\n     * @return {number}\n     */\n    canCompleteCircuit(gas, cost) {}\n}\n","cpp":"class Solution {\npublic:\n    int canCompleteCircuit(vector<int>& gas, vector<int>& cost) {\n        \n    }\n};\n","java":"class Solution {\n    public int canCompleteCircuit(int[] gas, int[] cost) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int CanCompleteCircuit(int[] gas, int[] cost) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/lJwbPZGo05A","embedding":[0.013302687,-0.027667658,-0.025567234,-0.012198154,-0.007749841,0.029623225,-0.024891235,0.014920255,-0.001072846,0.040873773,0.043891624,-0.032109935,-0.017684607,0.010097729,0.060936447,0.013375116,-0.025132664,0.027643515,0.02493952,0.046040334,0.03587621,0.0337275,0.011594583,-0.024106594,0.0076472345,-0.0070798784,0.041767057,0.022996025,0.01582561,-0.026146661,0.04633005,-0.019229745,-0.06759986,0.009747659,-0.02510852,0.022935668,-0.012783617,0.03034751,0.017093107,-0.0071583423,-0.052245036,-0.027402086,-0.01182394,-0.017913964,-0.01255426,-0.029140368,0.04374677,0.02218724,-0.00924066,-0.011129835,-0.030299224,0.034355216,0.023490952,-0.031409793,-0.026146661,-0.061902158,-0.023430595,0.022247598,0.022295883,-0.014220114,0.0030042706,-0.02458945,0.057121884,-0.015922181,-0.023140881,0.05948788,0.015632467,0.02571209,0.0050518825,-0.013616543,-0.07962298,0.01591011,0.028271228,-0.017177608,0.0042581875,-0.007755877,0.019652246,0.00020879756,0.041380774,-0.011570441,-0.022633882,-0.05509389,0.033317074,-0.047078475,0.018095035,0.0062590227,-0.082664974,-0.01165494,-0.065378726,-0.09521923,-0.028609227,-0.008449983,0.00769552,0.017962249,0.03686607,-0.018251963,0.05012047,-0.020907672,0.01650161,0.014316685,0.008932839,-0.017913964,0.041501485,0.03845949,0.04203263,0.036914352,0.009934765,0.047150902,-0.032399647,0.031506363,0.045798905,0.023152953,-0.031144222,0.009663159,0.015873896,-0.012222297,-0.022597669,-0.04773033,0.0022950757,-0.041066915,-0.022151027,-0.0113591915,0.015125469,-0.0486719,-0.023949666,0.015765253,-0.018662391,-0.071173,0.026170803,-0.0021140047,-0.016272252,-0.01088237,0.035827927,0.010260694,-0.00017164028,-0.004249134,-0.03911135,0.009693338,-0.023080524,0.004819508,0.02846437,0.021885455,-0.016211895,0.011878261,0.033027362,0.010761657,0.024686022,0.019314246,-0.069676146,0.0069470927,0.0490099,0.012904331,0.0012539171,-0.008280983,0.034355216,-0.033461932,-0.023442667,0.025398234,-0.013532043,-0.026774373,0.016574038,-0.026726088,-0.0066694506,-0.025591375,0.030806223,0.035972785,0.016296396,0.009457945,-0.01951946,-0.025856948,0.026870945,-0.009144088,-0.013507901,-0.025567234,0.0557216,-0.052245036,-0.0768707,0.0059874165,0.025687948,-0.0031295114,-0.017636321,-0.02133017,-0.017382821,-0.028850656,0.005163543,-0.0007706837,0.009898551,-0.014823684,-0.020738672,-0.026967516,-0.00086536875,-0.009210481,0.024323879,0.012868117,-0.033172216,-0.0062529873,0.04891333,0.0276918,0.024408378,0.0021939776,-0.032834217,-0.008667268,0.07030386,0.015427254,0.019845389,-0.020690387,-0.034113787,-0.0416222,0.017382821,-0.051231038,0.009035446,-0.009681266,-0.002311674,-0.0028518692,0.033341218,0.021475028,0.0058003096,0.01901246,0.021631956,0.039256204,-0.00907166,0.040004633,-0.0151133975,0.01883139,0.015499682,0.025518948,0.026436374,0.01332683,0.04092206,-0.0048255436,-0.017950177,0.0053717745,-0.0024052272,-0.016839609,-0.031627078,-0.052293323,0.012831902,-0.0049704006,-0.023454737,-0.00636163,-0.000106473555,0.0152582545,0.020026458,-0.0020642101,-0.00020653417,-0.005401953,-0.016549895,0.031216651,-0.047223333,0.011667012,0.016912038,0.04384334,0.030878652,-0.04695776,-0.016248109,0.035369214,0.02356338,-0.027667658,0.054369602,-0.021909598,-0.027498659,0.030468224,-0.012210225,-0.05562503,-0.011129835,-0.019193532,0.029816367,0.041066915,-0.016622324,0.018927962,0.011787726,0.0206421,0.026726088,-0.01238526,-0.025398234,-0.016610252,0.04997561,0.019036604,-0.02166817,-0.02991294,-0.060501877,0.027377944,0.04393991,0.04608862,0.0036968675,-0.00376326,0.0064823437,-0.0107133705,0.009584695,-0.057797883,-0.02716066,0.010484015,-0.028319513,0.03672121,0.015861824,-0.012095546,-0.045605764,-0.04232234,0.040704776,-0.021957884,0.000017741662,0.018445104,-0.05977759,0.030926937,-0.018927962,0.021318099,0.04927547,-0.019845389,-0.015946325,0.028222943,-0.011335048,0.025060235,0.028802369,0.04490562,-0.0055015422,-0.045267764,-0.031916793,-0.06658586,0.02829537,-0.040463347,0.045460906,0.021607812,0.05031361,0.0276918,0.025784519,0.041115202,-0.018107105,0.030685509,-0.005453257,-0.0044543482,-0.043819197,0.042612057,-0.010834085,-0.004372866,-0.046812903,0.040366776,0.032592792,0.021318099,-0.04152563,-0.006723772,0.0006378982,-0.0028986458,0.011811868,0.040897917,-0.025518948,0.03807321,0.0208111,-0.004946258,0.06484758,0.01117812,-0.01737075,0.0003595015,-0.01702068,0.014195971,0.010484015,-0.000016385988,-0.036600497,0.0010849175,-0.018336462,0.01967639,-0.023177095,0.028367799,-0.02372031,0.010502121,0.00065675983,0.041573916,-0.012916402,-0.03652807,-0.026798517,0.04490562,0.033510216,0.02159574,0.015523826,-0.021716455,0.022633882,-0.022537312,-0.03223065,0.034862213,0.028271228,-0.0037240281,0.0060055233,-0.0029273154,-0.02201824,-0.009578659,0.02544652,0.027233087,-0.016984465,-0.0121559035,-0.026870945,-0.046281762,0.069917575,-0.06286787,0.03749378,-0.027909085,0.02269424,-0.007345449,0.046209335,0.041863628,-0.0106168,0.021969955,0.0024067361,-0.025325805,-0.06465444,0.038580205,0.045895476,0.015016827,0.038556065,0.023696166,-0.004065045,-0.025639663,0.033751644,0.005863684,0.028657513,0.015451397,-0.00057527784,-0.03266522,-0.020279959,0.027884943,-0.012771545,-0.040873773,-0.009777837,-0.023684094,0.03394479,-0.021716455,-0.0054804175,0.002655709,0.010429693,-0.036986783,-0.020617958,-0.03879749,0.009518302,0.016815465,-0.011449726,0.017901892,-0.029599082,0.034524214,0.012294725,-0.006971236,-0.040535774,-0.044398624,-0.04222577,-0.03826635,0.07368385,0.01831232,-0.00950623,-0.04944447,0.015849752,0.019760888,0.013278544,0.018372677,0.013157831,-0.037952494,0.028053943,0.011878261,-0.08536897,0.038845778,0.041646343,0.027740085,0.0037029032,0.0020883528,-0.024987806,0.04309491,0.009820087,0.021945812,0.0104478,-0.012270582,0.0032079755,0.0015511754,0.0036184033,-0.001960094,-0.04307077,-0.026050089,0.001987255,-0.021957884,0.010514193,0.0017050857,0.014570184,0.0644613,-0.03266522,0.003606332,-0.07305614,-0.026508803,0.014715041,-0.004372866,0.01755182,0.015366897,0.0021849242,-0.04558162,-0.056301028,-0.0036546176,0.018541677,0.00210646,0.03179608,-0.012065368,-0.014992683,-0.035562355,-0.037179925,0.0115764765,0.020352388,-0.0125180455,-0.035489928,-0.033123933,0.013399258,-0.04548505,0.020062674,0.024818806,0.019905744,-0.021788884,-0.012602545,0.022983953,-0.04058406,0.012161939,0.00066090934,-0.008600875,0.015089255,0.0064461296,0.00015655102,-0.030154366,-0.005791256,0.002187942,0.019797102,-0.026798517,0.022549383,-0.025325805,-0.035731357,-0.0052872747,0.019302174,-0.03894235,-0.019121103,-0.011069478,-0.0149685405,-0.005830488,0.004517723,0.033461932,-0.019857459,0.016803395,-0.008419804,-0.023201238,-0.0414532,-0.007888663,0.0116489045,0.015511754,-0.036093496,0.033751644,-0.021426741,-0.0030359582,0.007061771,0.004840633,-0.036841925,-0.010900478,0.0049130614,-0.020605886,-0.019447032,-0.021354314,-0.027184801,-0.04524362,0.00061601883,0.0034826,0.019217676,-0.014316685,-0.0056222565,-0.03998049,-0.0038779385,-0.0034946713,0.014401184,-0.0021758706,0.009814051,-0.0033769752,-0.0018167463,-0.013399258,0.016996536,0.011799797,-0.0099166585,-0.03981149,0.046402477,-0.029261082,-0.015427254,-0.0025274502,0.0031506363,-0.016308466,-0.006844486,-0.02201824,0.0051544895,-0.0065728794,-0.015487611,0.008329269,-0.038845778,0.025591375,0.005791256,-0.027836658,-0.07474613,0.026146661,0.029961225,-0.007188521,-0.037228208,-0.025180949,-0.0041314377,0.059536163,-0.012071404,0.022537312,0.016018752,-0.015837682,0.0024836913,0.03172365,-0.044736624,0.0026194947,0.01461847,0.057508167,0.008395662,0.01169719,-0.017346608,0.006741879,0.0033377432,-0.006476308,-0.0038960455,0.0012350555,-0.02020753,0.050361898,0.028512657,-0.0046082586,0.019121103,0.0053415964,-0.009101839,0.0026210037,0.0019268978,0.01341133,-0.027281372,0.04352948,0.03034751,0.01349583,-0.024891235,0.0034735464,-0.023937594,-0.012324903,-0.0012154395,0.0025063253,-0.012355082,0.049734183,0.019145247,-0.042418912,0.020738672,-0.03466907,-0.012964687,-0.0637853,0.0064038797,0.023611667,0.001478747,-0.0020551565,0.03544164,-0.017817393,0.012421475,0.03128908,-0.018034678,-0.016368823,-0.00023784438,0.037976637,-0.003564082,-0.029381797,-0.037179925,-0.015934253,0.001680943,0.008552589,0.017382821,0.01925389,-0.029043797,-0.030830365,0.0060688984,0.016199823,0.02477052,0.0007227753,-0.02665366,0.06320587,0.0024836913,-0.019881602,-0.034524214,0.023092596,0.028874798,-0.008890589,-0.046595618,0.0075084134,-0.020557601,-0.0058606667,0.013278544,0.07151099,-0.011461798,-0.007888663,-0.0095605515,0.0062469514,-0.01134712,0.01960396,-0.00838359,0.03800078,-0.033775788,0.03621421,0.015342754,-0.024239378,0.03534507,0.012843974,-0.002998235,-0.050506752,-0.0061624516,-0.028995512,0.023490952,-0.01349583,-0.022609739,-0.016018752,0.014992683,0.02287531,0.0074540917,0.00769552,-0.006983307,0.009270838,-0.010761657,0.00021803973,-0.018131249,0.06851729,-0.016344681,-0.00034214885,0.047682047,-0.050506752,-0.02725723,0.020448959,-0.0138459,-0.0090535525,-0.02166817,0.007846412,0.02520509,0.02544652,0.009639016,-0.021982027,0.002833762,-0.030685509,-0.03293079,0.025253376,0.016924107,0.0027236105,-0.025060235,-0.0011784708,-0.0029695653,-0.050796468,-0.04109106,0.005326507,0.05398332,-0.0203041,0.0025832804,0.018336462,-0.036431495,0.040873773,-0.053114176,-0.002103442,-0.012282654,0.007671377,0.026436374,-0.03223065,-0.00085405185,0.0006043247,0.0037602424,-0.0070919497,0.016175682,-0.0024429504,-0.016272252,0.0018076927,-0.03189265,0.0042189555,0.024601521,0.052389894,-0.022416597,-0.0075506633,0.019929888,0.008582768,0.029502511,-0.024130736,0.0024218254,-0.0035489928,-0.03285836,-0.011479905,-0.01358033,-0.039666634,0.0050307577,0.0015496665,-0.0106409425,0.024142807,-0.046547335,0.010556443,-0.009276873,0.010791835,0.053065892,0.0113591915,-0.031216651,-0.039328635,-0.005184668,-0.04420548,-0.015101327,0.018167462,0.03293079,-0.006826379,-0.013604472,-0.020847315,0.045847192,-0.018131249,0.017274179,0.003343779,0.02716066,-0.02347888,0.025494805,0.028560942,0.008124054,-0.002023469,0.010834085,0.000820101,0.031965077,0.042925913,0.0025847894,0.027571086,-0.022151027,0.028585084,-0.026701946,-0.0004568272,-0.017648393,0.004801401,-0.0012727786,0.00942173,0.004206884,-0.008250805,0.009017339,0.025132664,0.027643515,0.017853606,0.0076049846,0.044229623,-0.027546944,0.025591375,-0.013918329,0.018940033,-0.005510596,0.015982538,0.033679217,-0.041863628,0.005220882,0.029043797,0.0053204712,0.039956346,-0.022549383,-0.023008095,0.002467093,0.026098374,-0.039232064,-0.026267374,0.010828049,-0.007912805,-0.02020753,0.014316685,0.0019782013,-0.009349302,0.019483246,-0.015885968,-0.0280298,0.010876335,0.029502511,0.018674461,0.034838073,-0.003926224,-0.016622324,-0.023273667,0.0011995957,-0.018807247,0.02467395,-0.0034976893,-0.029719796,-0.023527166,0.045412622,-0.030323366,-0.013399258,-0.016670609,-0.013628615,0.0010170158,0.029043797,-0.048985757,0.025687948,-0.022947738,0.021462956,-0.009584695,0.0029665474,0.036576353,0.017829463,-0.026315661,0.013906257,0.0146063985,0.016646465,0.014497756,0.000023553384,-0.01616361,0.04739233,0.0059240414,-0.040994488,-0.009572623,0.0117213335,0.0022286829,0.044760767,0.0011407477,0.017600106,0.0022362275,0.00033120916,0.008576732,0.00061601883,-0.009964944,-0.040873773,-0.004511687,-0.023140881,-0.026025947,-0.012240403,-0.021644028,0.042515483,0.02020753,-0.01857789,0.043553624,0.0076834485,0.017901892,0.032375503,0.003920188,-0.0058998987,-0.0115764765,0.0074601276,-0.001842398,0.024963664,0.015149612,-0.011232441,0.0042370628,-0.005809363,-0.000921199,0.041742913,0.035224356,-0.02347888,0.017575964,-0.012904331,0.004475473,0.0149685405,-0.016670609,-0.002998235,0.009500195,-0.04524362,-0.0064521655,-0.031675365,-0.020424815,-0.01728625,-0.036793638,0.0145339705,-0.027039945,0.024963664,0.027619371,0.043046627,-0.07242842,0.04092206,-0.010411586,-0.0076653413,-0.014642613,0.020533457,0.016187752,0.027740085,-0.02648466,0.022428669,0.0016749073,-0.008932839,0.011172084,-0.012747402,0.012095546,0.018758962,-0.020883529,-0.01720175,-0.056977026,-0.016380895,-0.0012018591,-0.011316941,0.022802882,-0.0075506633,-0.026436374,-0.01735868,-0.009331196,0.0039171707,-0.03017851,-0.0034524214,-0.0028624316,-0.016899966,0.0563976,0.005570953,-0.0022226472,-0.010079622,0.025422376,0.038556065,0.019072818,0.031337366,0.039956346,0.029864654,-0.004846669,0.019374603,-0.004940222,-0.024118666,-0.006476308,-0.0053385785,0.009307052,-0.016948251,-0.0062590227,0.019072818,0.018626176,-0.020847315,-0.08145783,0.00097099354,0.03585207,-0.05074818,0.004481509,-0.008528447,-0.008353411,0.020835243,0.0137614,0.015704896,-0.0072609494,-0.0057972916,-0.021909598,-0.015499682,-0.029019656,-0.0008095385,0.006868629,0.018348534,0.02159574,-0.0342345,0.0032049578,0.010822014,0.05407989,-0.011196227,0.020871457,-0.0110030845,-0.022175169,-0.0073213065,-0.005776167,0.0032230648,0.022126883,0.031192508,0.016344681,-0.012795688,0.0091984095,0.019314246,0.02442045,0.008359447,0.0055166315,-0.014835755,-0.005948184,-0.014377042,-0.008950946,0.026025947,0.0017835499,-0.016561966,0.03360679,-0.021354314,0.034886356,0.008154233,-0.024480807,-0.009572623,0.00013089928,-0.021342242,0.0055377567,-0.019748816,-0.03720407,-0.016042896,-0.011027227,-0.00034724147,-0.00558906,-0.03360679,-0.01117812,-0.023104668,-0.0033799931,-0.013049187,0.020267887,-0.0044845263,0.013532043,-0.014546041,-0.03870092,-0.052051894,0.015873896,0.0108582275,0.033751644,0.018734818,0.023659952,-0.017177608,-0.00053114176,0.013254401,0.002352415,-0.019072818,0.03034751,-0.026460517,0.034693215,0.012421475,0.0069470927,0.00047342537,0.0017729874,-0.030299224,0.008950946,-0.0007171168,0.039932203,-0.016042896,0.002207558,-0.0208111,0.026243232,0.024010023,-0.041380774,0.029985366,-0.016670609,-0.020786958,0.017298322,0.01633261,-0.016187752,0.0017050857,-0.001842398,0.010025301,-0.00631938,-0.023841023,-0.015403111,0.026243232,0.00752652,-0.029719796,-0.000860842,-0.04017363,-0.008661232,0.0016447288,0.01745525,-0.019628102,0.03034751,-0.040101204,0.031916793,0.0059753447,0.021052528,-0.015366897,-0.02795737,-0.021788884,-0.044229623,-0.005018686,-0.009645051,0.0023448702,-0.0056071673,0.018879676,0.007254914,-0.0051062037,-0.0065789153,0.0023373256,-0.017708749,0.018964175,0.008389626,0.013544115,0.06417158,0.029188655,0.017938105,0.028102228,-0.0010984978,0.014135614,0.0018921925,-0.0052752034,0.039908063,-0.0042612054,-0.0045026336,0.0009249713,0.014630541,-0.035562355,-0.005875756,0.01925389,-0.0009936275,-0.006008541,-0.0040590097,-0.014992683,-0.0061865943,-0.02304431,0.025060235,0.013145759,-0.0034463857,-0.0030601008,-0.011962761,0.036310785,0.0029831456,0.023080524,0.019567745,0.021040456,-0.0054562744,0.007429949,0.023841023,0.0024791646,-0.02829537,0.00959073,-0.021897526,0.0044875443,-0.03720407,0.042612057,-0.003096315,0.024070378,0.02149917,0.01088237,0.0028201817,0.024529092,0.0048889187,-0.005863684,0.017105179,-0.031916793,0.009892516,-0.0032532434,-0.016658537,-0.00008398113,0.0054170424,-0.012167975,0.015463469,0.026267374,-0.032882504,-0.048696045,0.0490099,0.022320027,0.0077800197,-0.025953518,-0.035127785,-0.052051894,-0.035200212,-0.017950177,-0.01015205,-0.03010608,0.02159574,0.024746377,0.01779325,0.021088742,-0.037324782,0.028053943,-0.013302687,-0.0074540917,0.037614495,0.007019521,0.0104236575,-0.02477052,-0.017877748,-0.0029242975,0.0042280094,0.017588036,-0.009880444,-0.01994196,0.014244257,0.03705921,-0.020400673,-0.010743549,-0.012017082,-0.035658926,0.005712792,0.017237965,-0.02863337,-0.040149488,0.045605764,0.004384937,0.016960323,0.012614617,-0.044495195,0.011419548,-0.0023810845,-0.022682168,0.00056320644,-0.011552334,0.007918841,-0.009880444,-0.0153306825,-0.034862213,-0.024601521,0.020943886,0.0066332365,-0.0029605117,0.0043004374,-0.010984978,0.028947227,-0.020002317,-0.02176474,-0.007345449,0.03276179,0.025736233,-0.008371519,0.0077438056,-0.0077317343,-0.036407355,0.048213188,0.05374189,-0.01650161,0.029140368,0.042587914,0.02374445,-0.015499682,0.0030404849,0.017382821,0.020412743,-0.0056946846,-0.0027130481,-0.03061308,0.012783617,-0.0050488645,0.030299224,0.0015066621,-0.000071108116,-0.0084016975,0.012892259,0.012421475,-0.00081481977,-0.010484015,-0.0022105759,-0.065620154,-0.015451397,-0.017467322,0.014690898,0.01718968,-0.040825486,-0.010182229,0.010339158,0.0035972784,-0.014497756,-0.012904331,0.00877591,0.040390916,0.04591962,-0.028947227,0.014328756,0.017262107,0.007254914,-0.004611276,-0.009765766,0.027281372,-0.0011150959,0.040873773,-0.035417497,-0.004007706,0.0058606667,-0.028053943,0.00081481977,-0.04232234,-0.035658926,-0.009958908,-0.012493903,-0.007333378,-0.0016070056,-0.0034946713,0.004071081,0.010248622,-0.013857972,0.007297164,-0.011600619,-0.023177095,0.001599461,-0.02415488,-0.012795688,-0.031192508,0.037348922,-0.0076411986,-0.0020898618,-0.041718774,-0.015354826,-0.043577768,0.002006871,0.011510083,0.0066332365,0.008238733,-0.026050089,0.023092596,-0.04109106,0.013870043,-0.010194301,0.019833317,-0.016417108,0.008359447,-0.016537823,0.005118275,0.005036793,-0.03128908,-0.03672121,-0.0032260828,0.028247084,-0.030033654,-0.026581232,-0.0016975412,-0.05108618,-0.0419602,-0.006699629,0.0054291137,-0.0049945433,0.01918146,0.02520509,0.0026813606,-0.01960396,-0.02691923,-0.0074420203,0.010954799,0.010876335,0.02493952,0.008287019,-0.013954543,-0.0126629025,0.007242842,-0.033679217,0.0032109935,-0.029623225,0.01633261,0.0057610776,-0.0044060624,-0.0008668777,-0.0023343076,-0.005118275,0.0031476186,-0.0069350214,-0.016743038,-0.023080524,0.012988831,-0.013302687,0.016730966,0.04642662,-0.019024532,0.0275228,0.043119054,-0.0019163353,-0.04275691,0.0011377299,0.0016311484,-0.00700745,0.000900074,-0.008643125,-0.028150514,-0.007206628,0.0075506633,-0.009566587,-0.004861758,-0.0046022227,0.00376326,-0.02716066,0.035127785,-0.06600644,-0.03551407,-0.025494805,0.03128908,0.0011679083,0.029792225,0.031023508,0.02812637,0.032037504,0.015716968,0.006228844,0.03947349,-0.033920646,0.022211384,-0.01977296,0.018445104,-0.0053385785,0.018976247,-0.027305515,-0.0031264937,-0.006379737,0.028512657,-0.05012047,0.05055504,-0.03978735,-0.0002814146,0.031627078,0.02149917,0.026557088,-0.037904207,0.017431106,-0.0034916536,0.020678315,0.043046627,-0.0030223778,0.027715944,0.0025802625,-0.035127785,0.02176474,0.025760375,-0.0026391107,0.0028503602,-0.029478367,-0.0065306295,0.006271094,0.001581354,-0.012952616,0.0012116672,-0.025060235,0.019978173,-0.010695264,0.0114316195,-0.0010864263,0.0347415,-0.0047078477,0.029357655,-0.017044822,0.022899453,0.001093971,-0.0002140788,0.012107618,0.030806223,-0.0007393735,-0.0208956,0.005450239,0.04705433,0.01943496,-0.0044875443,0.044422768,-0.0059391307,-0.021209456,0.0032713504,-0.011485941,0.017165536,0.02648466,0.006228844,-0.0062650586,0.020448959,-0.016549895,-0.024323879,-0.014401184,0.025784519,0.02046103,-0.026050089,-0.0023252543,-0.0029650386,-0.044157196,0.0051575075,-0.024118666,0.02252524,0.042781055,0.052245036,0.021185314,-0.008039555,0.03611764,-0.014244257,0.0007001414,-0.015547968,0.040149488,0.011878261,-0.034524214,0.027836658,-0.04340877,0.003684796,0.036648784,-0.0041797236,0.025615519,0.035272643]},{"id":"hand-of-straights","name":"Hand of Straights","description":"You are given an integer array `hand` where `hand[i]` is the value written on the `ith` card and an integer `groupSize`.\n    \nYou want to rearrange the cards into groups so that each group is of size `groupSize`, and card values are consecutively increasing by `1`.\n\nReturn `true` if it's possible to rearrange the cards in this way, otherwise, return `false`.\n\n**Example 1:**\n\n```java\nInput: hand = [1,2,4,2,3,5,3,4], groupSize = 4\n\nOutput: true\n```\n\nExplanation: The cards can be rearranged as `[1,2,3,4]` and `[2,3,4,5]`.\n\n**Example 2:**\n\n```java\nInput: hand = [1,2,3,3,4,5,6,7], groupSize = 4\n\nOutput: false\n```\n\nExplanation: The closest we can get is `[1,2,3,4]` and `[3,5,6,7]`, but the cards in the second group are not consecutive.\n\n**Constraints:**\n* `1 <= hand.length <= 1000`\n* `0 <= hand[i] <= 1000`\n* `1 <= groupSize <= hand.length`\n","difficulty":"Medium","concepts":["Heap Properties","Push and Pop","Heapify"],"solutions":{"python":"class Solution:\n    def isNStraightHand(self, hand: List[int], groupSize: int) -> bool:\n        if len(hand) % groupSize:\n            return False\n\n        count = {}\n        for n in hand:\n            count[n] = 1 + count.get(n, 0)\n\n        minH = list(count.keys())\n        heapq.heapify(minH)\n        while minH:\n            first = minH[0]\n            for i in range(first, first + groupSize):\n                if i not in count:\n                    return False\n                count[i] -= 1\n                if count[i] == 0:\n                    if i != minH[0]:\n                        return False\n                    heapq.heappop(minH)\n        return True\n","javascript":"/**\n * const { MinPriorityQueue } = require('@datastructures-js/priority-queue');\n */\n\nclass Solution {\n    /**\n     * @param {number[]} hand\n     * @param {number} groupSize\n     * @return {boolean}\n     */\n    isNStraightHand(hand, groupSize) {\n        if (hand.length % groupSize !== 0) {\n            return false;\n        }\n\n        const count = {};\n        for (const n of hand) {\n            count[n] = (count[n] || 0) + 1;\n        }\n\n        const minPQ = new MinPriorityQueue();\n        for (const key in count) {\n            minPQ.enqueue(Number(key));\n        }\n\n        while (!minPQ.isEmpty()) {\n            const first = minPQ.front();\n            for (let i = first; i < first + groupSize; i++) {\n                if (!(i in count) || count[i] === 0) {\n                    return false;\n                }\n                count[i] -= 1;\n                if (count[i] === 0) {\n                    if (i !== minPQ.front()) {\n                        return false;\n                    }\n                    minPQ.dequeue();\n                }\n            }\n        }\n        return true;\n    }\n}\n","cpp":"class Solution {\npublic:\n    bool isNStraightHand(vector<int>& hand, int groupSize) {\n        if (hand.size() % groupSize != 0)\n            return false;\n\n        unordered_map<int, int> count;\n        for (int n : hand)\n            count[n] = 1 + count[n];\n\n        priority_queue<int, vector<int>, greater<int>> minH;\n        for (auto& pair : count)\n            minH.push(pair.first);\n\n        while (!minH.empty()) {\n            int first = minH.top();\n            for (int i = first; i < first + groupSize; i++) {\n                if (count.find(i) == count.end())\n                    return false;\n                count[i] -= 1;\n                if (count[i] == 0) {\n                    if (i != minH.top())\n                        return false;\n                    minH.pop();\n                }\n            }\n        }\n        return true;\n    }\n};\n","java":"class Solution {\n    public boolean isNStraightHand(int[] hand, int groupSize) {\n        if (hand.length % groupSize != 0)\n            return false;\n\n        Map<Integer, Integer> count = new HashMap<>();\n        for (int n : hand)\n            count.put(n, 1 + count.getOrDefault(n, 0));\n\n        PriorityQueue<Integer> minH = new PriorityQueue<>(count.keySet());\n        while (!minH.isEmpty()) {\n            int first = minH.peek();\n            for (int i = first; i < first + groupSize; i++) {\n                if (!count.containsKey(i))\n                    return false;\n                count.put(i, count.get(i) - 1);\n                if (count.get(i) == 0) {\n                    if (i != minH.peek())\n                        return false;\n                    minH.poll();\n                }\n            }\n        }\n        return true;\n    }\n}\n","csharp":"public class Solution {\n    public bool IsNStraightHand(int[] hand, int groupSize) {\n        if (hand.Length % groupSize != 0)\n            return false;\n\n        var count = new Dictionary<int, int>();\n        foreach (int num in hand) {\n            if (count.ContainsKey(num))\n                count[num]++;\n            else\n                count[num] = 1;\n        }\n\n        var minH = new PriorityQueue<int, int>();\n        foreach (var num in count.Keys)\n            minH.Enqueue(num, num);\n\n        while (minH.Count > 0) {\n            int first = minH.Peek();\n            for (int i = first; i < first + groupSize; i++) {\n                if (!count.ContainsKey(i) || count[i] == 0)\n                    return false;\n                \n                count[i]--;\n                if (count[i] == 0) {\n                    if (i != minH.Peek())\n                        return false;\n                    minH.Dequeue();\n                }\n            }\n        }\n        return true;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def isNStraightHand(self, hand: List[int], groupSize: int) -> bool:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} hand\n     * @param {number} groupSize\n     * @return {boolean}\n     */\n    isNStraightHand(hand, groupSize) {}\n}\n","cpp":"class Solution {\npublic:\n    bool isNStraightHand(vector<int>& hand, int groupSize) {\n        \n    }\n};\n","java":"class Solution {\n    public boolean isNStraightHand(int[] hand, int groupSize) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public bool IsNStraightHand(int[] hand, int groupSize) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/amnrMCVd2YI","embedding":[0.010359268,-0.009667031,0.019273339,0.0091266,0.0047788653,0.012156655,-0.017026605,-0.007147045,0.019661963,0.0033002708,0.035146214,-0.020597091,-0.0102985455,0.005871871,0.022042288,0.0033336682,-0.014379101,0.03721078,0.009849198,0.026985103,0.030749902,0.041509937,0.043817397,-0.0095577305,0.001688087,0.050715476,0.009758115,-0.023863964,0.019576952,0.020281333,0.015338518,-0.0050976584,0.005635053,-0.0024167576,-0.06451164,0.04644061,-0.0020114346,0.044473197,0.02904967,-0.005109803,0.030385567,-0.0033549212,-0.021167882,-0.047387883,-0.0017457735,-0.0060843998,0.05639911,-0.00027382077,-0.053241536,0.01822891,-0.026402166,-0.002351481,0.022030143,-0.016868725,-0.016565112,-0.010638592,-0.036336377,-0.0032061508,0.04253008,0.05814792,0.03203722,-0.039833996,0.027470883,0.004869949,-0.014318379,-0.020524224,-0.025454896,0.008343279,0.0014558232,-0.03801232,-0.054067362,-0.0007199418,-0.020937137,0.01305535,-0.044594646,0.046513475,0.021228606,0.0068130707,0.0014345704,-0.0008341761,-0.0092541175,-0.04748504,0.047557905,0.0043113013,-0.020949282,-0.014063343,-0.06324861,-0.027276572,-0.07660758,-0.034344677,0.0010004041,-0.027130837,0.010511074,0.015289939,0.02334175,-0.051444147,0.04862662,0.0019309772,-0.00003406156,0.009023372,0.011628369,0.034563277,0.051589884,0.019443363,-0.014694858,0.053824473,0.005376982,0.052269977,-0.038400944,0.017475951,0.01012245,-0.032620158,-0.03752654,0.017305927,0.008555808,0.041922852,-0.0012341859,-0.06839789,0.00627264,0.003971255,0.004205037,-0.036967892,0.011458346,-0.016346512,-0.072672755,0.03480617,0.00756603,-0.044303175,0.027543752,-0.025527762,0.035389107,0.010092089,-0.0008842722,0.03330025,0.0020342055,-0.0026232144,0.0013670165,0.008045739,-0.023766808,0.024155432,-0.012253812,-0.008039666,-0.021252895,0.012399546,0.07553886,-0.010857193,-0.03798803,0.028709624,-0.0013609442,0.021095015,0.0032274039,0.0034156437,0.025284871,0.040319778,-0.009976716,-0.04595483,-0.0027249246,0.03228011,0.013553274,0.030434145,0.043865975,-0.041169893,0.040878423,0.02977834,-0.00095713924,0.043550216,0.029219693,-0.0007499236,0.0038467739,-0.016055044,0.029219693,0.022928836,-0.011409768,-0.031624306,0.033397406,-0.021034293,0.00015360909,-0.018398935,-0.03869241,-0.04046551,0.021568652,0.03701647,-0.032547288,-0.061451226,-0.04816513,-0.006491241,0.05285291,-0.043088727,-0.032450132,-0.009175178,0.040854134,0.026547901,0.010207461,-0.019224761,0.019795554,-0.03905675,0.034587566,0.0011757405,0.017378796,-0.060236774,0.0068555763,0.0013396913,-0.046756368,-0.022783102,-0.007529597,-0.04585767,-0.053630162,0.021981565,-0.037089337,0.022515923,-0.025187716,-0.0012751736,0.0021328798,-0.016273644,0.005962955,0.006491241,0.005018719,-0.033178803,0.013237517,0.09254117,-0.008233978,0.038959593,0.021932987,0.0362878,-0.026013542,0.023317462,0.055524703,0.023693942,0.016650125,-0.04444891,-0.027130837,-0.0017184482,0.042141452,-0.0011856079,0.012618147,-0.008391857,-0.042578656,-0.0026065158,-0.06776637,-0.00032941985,-0.0073777903,0.019309772,0.002589817,0.0048335153,-0.04379311,-0.025527762,-0.018107466,0.04000402,-0.016710848,-0.009849198,0.009843126,-0.025916386,-0.012751737,-0.0690294,-0.04272439,0.061742693,-0.027203705,-0.027276572,0.02274667,0.0066187587,-0.002164759,-0.004709034,-0.027349439,-0.051541306,-0.023171727,0.006230134,-0.010316762,0.06732917,-0.0041473503,0.055767596,0.016480101,0.03745367,-0.00067895406,-0.019722685,0.00054194883,-0.031429995,0.01254528,0.0031757897,-0.049841072,-0.036214933,-0.041121315,-0.010826832,0.038789567,0.03847381,0.019151894,0.018265344,-0.0058566905,-0.0009389225,-0.04165567,-0.012606002,-0.002397023,-0.029292561,0.0041959286,0.031624306,-0.03699218,0.014585557,-0.02931685,0.007317068,0.0066187587,-0.01798602,-0.009278406,-0.012496701,-0.02880678,0.0019658927,-0.005534861,-0.054504566,0.009770259,0.030361278,0.00039697372,-0.0050946223,-0.01513206,0.0606254,0.023414617,0.016467957,-0.047217857,-0.023438906,-0.02124075,0.02781093,-0.009697392,-0.02458049,-0.020803547,0.030191254,0.045614783,0.07568459,0.011713381,0.0079607265,-0.0005404307,0.004863877,0.00861653,-0.026620768,0.012138438,-0.045080423,0.01588502,0.019018304,-0.035899173,-0.04670779,0.02657219,0.05192993,-0.04918527,0.002492661,0.005024791,0.0019097243,0.01389332,0.05586475,-0.0429187,0.018107466,0.017184483,0.027252283,-0.026523612,-0.0011795356,0.047752216,-0.003543161,-0.01429409,0.046246298,-0.05207566,0.0060297498,-0.036870737,-0.012715303,-0.002706708,0.017718842,-0.021957276,0.02382753,-0.031842906,-0.02108287,0.004299157,0.06645476,-0.012861037,0.039518237,0.015848586,0.065094575,0.0051492727,0.020609235,0.0502297,-0.05314438,-0.013565418,-0.012593858,0.003016393,0.0050278273,0.019540519,0.0008296219,-0.053241536,-0.030142676,0.0052403565,-0.034150366,0.007171334,0.030458434,0.0058566905,0.00149757,-0.04267581,-0.03609349,0.03128426,-0.03745367,0.043307327,0.0126910135,0.00726849,-0.028272422,0.036554977,0.043064434,-0.016006466,-0.000098389515,0.02977834,-0.014840593,0.014597702,-0.00499443,-0.037672274,-0.008567953,-0.05188135,0.057030622,-0.03648211,-0.013856887,0.045614783,0.019844132,0.0013723298,-0.010565724,0.028709624,0.00694666,-0.030142676,-0.004872985,0.0051674894,0.014087632,0.022661658,-0.031235682,0.018653968,-0.016346512,0.029365428,0.017937442,-0.006624831,-0.025746364,0.019880565,-0.0022892402,-0.022273034,0.014634136,0.024507623,0.020754969,-0.036166355,0.046076275,-0.007183478,0.020050587,0.0112883225,-0.044788957,-0.029608319,-0.030361278,0.02221231,-0.0010565724,0.06310288,0.015508541,-0.02258879,-0.0054043075,0.010887554,-0.05785645,-0.0014778352,-0.01763383,0.053095803,0.027349439,0.039639685,0.028831068,0.053435847,0.04051409,-0.0028327073,0.03825521,-0.018994015,-0.040829845,-0.02385182,0.03351885,-0.014962037,0.0135168405,-0.0074749463,-0.004514722,0.009223756,0.019200472,0.0017928334,-0.010146739,0.016407235,0.033421695,-0.0033154516,-0.0147798695,-0.0020949282,0.07029243,-0.015690709,-0.014500546,-0.019431217,-0.044667512,-0.003898388,0.023548206,0.077919185,0.030895635,0.017694553,0.0007704174,-0.008926216,-0.012095933,0.00047591302,0.0044570356,0.017597396,-0.011883404,0.023681797,0.012533136,0.049282424,-0.025697784,0.00023093546,-0.03801232,0.009709536,-0.01147049,-0.0043932768,0.015217072,0.025382027,-0.02484767,-0.0044539995,-0.043598793,0.0054953913,0.03670071,0.01303106,0.024325455,-0.004639203,-0.00003493919,0.0012979446,0.015702853,0.008276484,-0.004232362,-0.03997973,0.0027962737,-0.016856581,0.007171334,0.0017503276,-0.03028841,-0.006491241,-0.05960526,0.012460268,-0.022175876,-0.021665808,0.007821065,-0.036967892,0.0016774606,0.009909921,0.034101788,-0.028491022,-0.013796165,-0.012715303,-0.028223844,0.023232449,-0.034611855,0.013528985,0.033810318,-0.03555913,0.005902232,0.013759731,-0.012873182,-0.051444147,0.026256433,0.010389629,-0.019382639,-0.012138438,-0.0010990782,0.0043204096,-0.016285788,0.007881788,-0.005112839,-0.012958193,0.029948363,0.00096624764,0.028636757,0.0039955443,-0.024920536,-0.01526565,-0.0047697565,-0.033470273,0.033421695,0.013747586,0.0076449695,0.053824473,-0.020232756,0.03446612,0.0018550741,0.0008531519,-0.036603555,0.014901315,-0.020815691,-0.0014171127,-0.01712376,-0.0065033855,0.02931685,-0.022382334,-0.036433533,-0.012187017,-0.0028494059,-0.042020008,-0.01564213,-0.018556813,0.022770958,0.023912542,-0.0427001,0.026645057,-0.01798602,0.03376174,0.01128225,-0.027762352,-0.03504906,-0.040441222,-0.001093006,0.0050399723,-0.018823992,-0.006369796,0.0055652224,0.03723507,-0.025552051,0.0033154516,-0.019576952,-0.00075409823,0.0066126864,0.030871347,0.025066271,-0.011786248,0.024483334,0.01601861,-0.01109401,0.0056897034,-0.008901927,-0.0018884714,0.054796033,0.02657219,-0.04393884,0.03670071,0.021908699,0.019285483,0.017901009,0.004542047,0.013832598,0.048067976,0.058002185,0.024289021,0.03206151,-0.043113016,-0.036409244,-0.009223756,-0.005246429,-0.05785645,0.006136014,-0.0022740597,0.007863571,0.04449749,0.0054073436,0.009928138,-0.050326854,-0.005914377,0.0057382816,0.011458346,0.028709624,0.009673103,-0.033130225,0.0005184188,0.0018216766,0.028685335,-0.00008254472,0.03944537,0.008671181,0.016200777,0.009302695,-0.051978506,-0.071166836,-0.0051432005,0.006099581,0.037623696,0.01889686,0.016225066,0.017670263,-0.0071652615,-0.027640907,-0.0135168405,0.018508235,0.021872263,-0.0072199116,0.019904854,0.036409244,0.048140842,0.0025306125,-0.020427067,0.011828754,-0.00022125781,-0.010681097,-0.03779372,0.01677157,0.012423835,0.020487789,-0.0027370693,0.030774191,0.009399852,0.008276484,0.022418767,0.0069527323,-0.027908087,-0.01986842,0.008756192,-0.030847058,-0.028369578,0.002688491,0.040659823,0.0061451225,0.02145935,0.042117164,-0.019698396,-0.02759233,-0.0005373946,0.012763881,0.036919314,-0.010802543,-0.05756498,-0.015447818,-0.006424446,0.038862433,0.010881482,0.0055500413,-0.024944825,0.02907396,-0.026669346,0.03679787,-0.03774514,-0.009922066,-0.0038832074,-0.027738063,0.028491022,-0.013541129,-0.011264034,0.0065944693,-0.017645974,-0.026499324,-0.012138438,0.014573413,-0.018435368,-0.0144519685,0.020329911,-0.028199555,-0.024507623,-0.022224454,0.024799092,-0.0098856315,0.00694666,0.016808003,-0.006527675,0.034174655,-0.022576645,-0.026499324,0.0045056134,0.0320858,0.0022725416,-0.011215456,0.0004891961,-0.019419072,-0.02581923,0.032668736,-0.04051409,0.014877026,-0.007535669,0.008027522,-0.023147438,0.023572495,0.015763575,-0.0009480309,-0.025673496,0.015180639,0.029292561,0.024118999,0.035389107,-0.0050672973,-0.019637674,-0.0029738871,0.019200472,0.024835525,-0.024969114,0.008999082,0.018435368,-0.0077846316,0.012217378,0.010717531,0.02907396,-0.001759436,-0.013322528,-0.04566336,-0.0110150715,0.0060783275,0.040659823,-0.018581102,-0.024641212,-0.015168495,0.030166965,0.011257961,-0.006060111,0.062277053,0.034903325,0.010249968,0.011251889,-0.016067188,-0.019176183,0.009090167,0.005704884,0.005871871,-0.0021981564,-0.02283168,0.022503778,-0.0387167,0.015071338,-0.010274257,-0.025552051,-0.007201695,0.030628456,-0.036846448,0.013492552,-0.022540212,-0.008537591,-0.0063333623,-0.010942204,-0.010517146,0.009430213,0.06587183,-0.010383557,-0.0050460445,0.024568345,0.026936525,0.018010309,0.013091783,0.017743131,-0.00066225533,0.01661369,-0.037599407,0.032571577,-0.019066881,-0.02880678,0.0059325937,0.023548206,-0.010098161,0.004232362,0.02705797,-0.012994627,0.0021920842,-0.024374034,0.031114237,-0.005443777,-0.004854768,0.014136211,0.02533345,0.0034794023,0.0029086103,-0.012247739,-0.020451356,-0.021180026,-0.035097636,-0.011367262,0.00584151,0.0073109954,0.020912848,0.042262897,-0.023159582,0.017488096,0.024871958,0.023414617,0.008889782,0.011002927,-0.0052646454,0.002615624,0.022285178,0.010650736,0.043598793,0.052707177,0.0062483507,-0.0020296513,-0.018192478,0.02083998,0.014694858,0.02347534,-0.016140055,-0.035291947,-0.0014004139,-0.015411384,0.02137434,0.010098161,0.014609846,-0.014099778,0.019079026,-0.011865187,0.038133763,0.011640513,-0.021957276,0.035413396,-0.048043687,-0.03631209,0.0424815,-0.008798698,-0.06140265,0.03521908,0.0043173735,0.013346817,-0.017220916,0.039105326,0.009090167,-0.016140055,-0.018666113,-0.023487484,0.0040289415,0.01962553,-0.020827835,0.038133763,0.032863047,-0.017815998,-0.0141605,-0.008167184,0.012326678,-0.011051505,-0.025066271,-0.002609552,-0.011264034,0.026475035,-0.0065033855,0.0037253287,-0.055767596,-0.023633217,0.020123454,0.031235682,0.001165873,-0.020099165,0.025794942,0.01577572,0.017075183,-0.0011810537,-0.01235704,-0.0137354415,0.007408152,0.028709624,-0.0042687957,0.010359268,0.009897777,0.014743436,-0.006721987,0.011349046,0.024289021,0.0064790966,-0.008100389,-0.06213132,-0.05960526,-0.048796646,0.024641212,-0.029511161,-0.019297628,-0.039931152,-0.006776637,-0.042432923,0.02584352,-0.02557634,0.005744354,0.020427067,-0.025527762,-0.00294808,-0.008294701,0.010996855,0.0036281727,0.023147438,-0.01252099,-0.0076449695,-0.04017404,0.018083178,0.03478188,-0.019419072,-0.0080761,-0.0081550395,-0.0051705255,0.054067362,-0.0013905466,0.02119217,0.022843825,0.0153870955,0.012642436,0.010395701,-0.03626351,-0.028029531,0.0041959286,-0.008142894,0.025722073,-0.0035947752,-0.06431733,0.0040623387,0.0036403171,-1.8086308e-7,-0.03179433,0.0033154516,-0.014901315,-0.0064123017,0.008167184,0.025357738,-0.013528985,0.020074876,0.013079639,0.002447119,-0.0034794023,0.0058536544,0.064025864,0.0036190643,0.0058809794,-0.00071424904,-0.015690709,-0.02374252,0.014318379,0.026742212,0.00256401,-0.000677436,-0.009849198,0.024046132,-0.013480407,-0.0132132275,-0.05610764,0.029389717,-0.0123327505,0.015071338,-0.0016091478,-0.043890264,0.012800314,0.001092247,-0.014172644,0.023888253,0.029851208,0.038619544,0.021301473,-0.017658118,-0.040854134,-0.003260801,0.005513608,0.013067494,0.0046149143,0.01588502,-0.040368356,0.0007916703,0.040635534,-0.01488917,0.012496701,0.0028433336,0.012861037,0.0013563901,0.039663974,0.0056168362,-0.016431523,0.0023196016,-0.025187716,0.027349439,0.033081647,0.036603555,0.029972654,-0.011877332,-0.008944432,-0.026523612,-0.008549736,-0.0000657037,-0.0013662574,-0.037137914,-0.012715303,-0.0012645472,0.02420401,-0.014427679,0.00016015575,0.012338823,0.03135713,0.007675331,0.02051208,0.03793945,-0.017342363,0.009909921,-0.035486262,0.0014702448,0.0007506826,0.022552356,-0.02781093,-0.017791709,-0.054358833,-0.04617343,-0.039299637,0.021714386,-0.014682714,0.023135293,0.021180026,-0.009915994,-0.031600017,0.009132672,0.027446594,-0.01862968,-0.012593858,0.05717636,0.0016501354,-0.0011210901,-0.009193394,0.0021116268,0.02705797,0.0006083641,0.0062483507,-0.03667642,0.014184789,0.025989253,-0.02504198,0.016941592,0.012023066,-0.013334673,0.019455507,0.029705474,-0.003591739,-0.009818837,0.0017442554,-0.042991567,0.008331135,0.01292176,-0.022394478,-0.03449041,0.00880477,-0.018435368,0.008932288,-0.03599633,-0.0029298633,0.015800009,-0.019188328,0.0362878,0.008652964,-0.026353588,-0.036190644,0.016419379,-0.03424752,-0.018690402,-0.016067188,0.034951903,-0.015702853,0.0013973778,-0.0013981368,-0.030021232,-0.006369796,-0.017378796,0.004542047,-0.00041291336,0.012193089,0.001877845,-0.026134988,-0.036725,-0.018690402,0.010778254,0.005446813,-0.017451663,0.0035279805,0.00920554,0.021556508,0.008355424,0.016467957,0.05188135,-0.017099472,0.009928138,-0.0027780568,-0.027519463,0.06344292,0.009436285,-0.012861037,0.009837054,0.006679481,-0.011154734,0.015338518,0.0034763662,0.042627234,0.012946049,0.023487484,0.0058627627,-0.04345306,-0.011865187,-0.00375569,0.041339915,0.006527675,0.002090374,0.012241667,0.008531519,0.007110611,0.026717924,0.0080761,-0.0014877026,-0.001115777,-0.0122234505,0.019091172,0.049306713,0.0058627627,0.011707309,-0.017585251,0.008543664,0.019261194,-0.01723306,-0.016965881,-0.0026991176,-0.032935914,0.0069952384,-0.024969114,-0.0056441613,0.008112533,0.018168189,0.007790704,0.049841072,0.03203722,0.000042576947,-0.015374951,0.0183625,0.001665316,-0.033640295,0.0053557293,0.01130654,-0.005547005,0.012824603,-0.0025351667,-0.009478791,-0.00008036251,-0.03247442,0.051006947,0.0075174524,0.009405924,0.015326373,0.023791097,-0.0076206806,-0.0047424315,-0.037162203,-0.024058277,-0.023050282,-0.02657219,0.011476563,0.021095015,-0.00056016556,0.027033681,0.006205845,0.025430607,0.013577564,0.028369578,0.011731598,-0.034538988,0.007049889,0.018107466,-0.022236599,-0.008039666,-0.009958499,-0.031187104,-0.01898187,-0.002755286,0.038133763,0.022333756,-0.016212922,-0.016334368,0.053970207,-0.015702853,-0.048796646,0.010590013,-0.025770653,-0.0004588348,0.008410074,-0.031988643,-0.0070620333,0.016492246,0.01198056,0.00275984,-0.0073109954,0.015180639,0.033931762,-0.0036615701,0.0037253287,0.0095273685,-0.0059599187,0.0034551134,0.028369578,-0.016832292,-0.018848281,-0.034441832,0.015544974,-0.004372024,-0.006041894,-0.0057170284,-0.0035461972,0.01760954,-0.01305535,-0.0053618015,0.013456118,0.0016486173,0.02099786,0.0019416037,0.0077421255,0.031600017,0.020682102,-0.015800009,0.015629986,-0.021532217,0.010881482,0.0026733105,-0.019819843,0.0046726004,-0.012472413,-0.019637674,0.004630095,0.021981565,-0.0050096107,-0.022248745,-0.008816915,0.01074182,0.024993403,0.012824603,-0.0043872045,0.011081866,0.018435368,-0.01103936,-0.03079848,0.03648211,-0.027495172,-0.04816513,0.0018262308,-0.0028220806,0.033421695,0.0382795,0.004019833,0.009867415,0.0078089205,0.025746364,-0.018192478,0.01849609,-0.023645364,-0.00009525851,-0.0061117252,0.003543161,0.029996943,-0.012083788,0.008470796,-0.010292473,-0.011033288,0.037672274,-0.02484767,0.012302389,-0.029972654,-0.031818617,0.03206151,0.008847277,0.013589708,0.014925604,-0.008974793,-0.046270587,-0.042627234,-0.017548818,-0.014913459,-0.019054737,0.030944213,0.043137304,0.01074182,0.0045268666,-0.04379311,-0.0047667203,0.028418155,0.022625225,-0.04126705,-0.0010315244,0.006794854,0.012423835,-0.019929143,-0.03206151,0.010164956,0.016419379,-0.040319778,0.020985715,-0.0037951597,-0.010590013,0.005134092,0.03594775,-0.0033397404,-0.025600629,0.014828448,-0.016965881,0.01841108,0.012642436,-0.007414224,-0.025770653,0.04143707,-0.04323446,-0.02878249,0.0059204493,-0.008932288,0.01103936,-0.0586337,-0.03725936,-0.012994627,-0.041582804,-0.030507011,0.013966188,-0.021823686,0.0003694588,-0.020536369,-0.00043796143,-0.01429409,-0.032134376,0.0037405093,0.00059356296,0.00632729,0.005486283,0.02345105,0.006685553,0.050278276,0.012308462,-0.018617535,-0.013844742,-0.012460268,-0.0075842473,0.03177004,0.035656285,0.022625225,0.015994322,0.041072737,0.039348215,-0.010164956,0.018568957,0.0028190445,0.000022877697,0.023924686,-0.04517758,0.004138242,0.0015006062,0.040805556,0.0045238305,-0.009715608,-0.06057682,-0.008452579,-0.0008592241,-0.03203722,-0.023268882,-0.0114826355,-0.012739592,-0.02730086,0.0015514613,-0.02907396,-0.028903937,0.013091783,0.013079639,-0.01650439,0.032668736,-0.06825215,-0.02247949,-0.0182532,0.0072138393,0.029171115,-0.014099778,0.031405706,0.04865091,0.0019203508,0.03174575,0.0022755777,0.029584028,-0.011950199,0.030701324,-0.007207767,0.031478573,0.019929143,0.034150366,-0.0032972347,0.0006197496,0.004174676,0.033397406,-0.032425843,-0.003376174,-0.036967892,-0.014925604,0.049209557,-0.00075485726,0.014136211,-0.005112839,0.029924074,-0.011130445,-0.008161112,-0.0067705647,0.014427679,-0.00490031,-0.018848281,-0.0046240226,0.023548206,-0.029268272,0.012211306,-0.0047120703,-0.023900397,-0.003974291,-0.001590931,0.005395199,-0.008203617,0.01898187,-0.01141584,0.002119217,-0.07345,0.06285999,-0.0071349,0.027980953,0.008051811,0.010389629,0.011512997,0.05090979,0.005486283,-0.00589616,-0.026620768,0.025867809,-0.041315626,-0.0015233771,0.029438294,0.0032911624,-0.033397406,0.013371106,0.037599407,-0.004605806,0.017743131,0.008288628,-0.022248745,0.034879036,0.0008372122,0.05814792,-0.030944213,-0.019783407,-0.017245205,-0.027179416,0.0075538857,0.05610764,-0.0052160677,-0.037599407,-0.03483046,-0.0045541916,0.020754969,0.03247442,-0.010857193,0.020815691,0.0160429,0.02659648,0.014427679,0.018022453,0.0010649218,0.019844132,0.0012326678,0.037866585,0.01612791,-0.00856188,-0.054796033,0.014281945,-0.014901315,0.009551658,0.005349657,0.022151588,-0.022868114,-0.00893836]},{"id":"merge-triplets-to-form-target","name":"Merge Triplets to Form Target","description":"You are given a 2D array of integers `triplets`, where `triplets[i] = [ai, bi, ci]` represents the `ith` **triplet**. You are also given an array of integers `target = [x, y, z]` which is the triplet we want to obtain.\n    \nTo obtain `target`, you may apply the following operation on `triplets` zero or more times:\n\nChoose two **different** triplets `triplets[i]` and `triplets[j]` and update `triplets[j]` to become `[max(ai, aj), max(bi, bj), max(ci, cj)]`.\n    * E.g. if `triplets[i] = [1, 3, 1]` and `triplets[j] = [2, 1, 2]`, `triplets[j]` will be updated to `[max(1, 2), max(3, 1), max(1, 2)] = [2, 3, 2]`.\n\nReturn `true` if it is possible to obtain `target` as an **element** of `triplets`, or `false` otherwise.\n\n**Example 1:**\n\n```java\nInput: triplets = [[1,2,3],[7,1,1]], target = [7,2,3]\n\nOutput: true\n```\n\nExplanation: \nChoose the first and second triplets, update the second triplet to be [max(1, 7), max(2, 1), max(3, 1)] = [7, 2, 3].\n\n**Example 2:**\n\n```java\nInput: triplets = [[2,5,6],[1,4,4],[5,7,5]], target = [5,4,6]\n\nOutput: false\n```\n\n**Constraints:**\n* `1 <= triplets.length <= 1000`\n* `1 <= ai, bi, ci, x, y, z <= 100`\n","difficulty":"Medium","concepts":[],"solutions":{"python":"class Solution:\n    def mergeTriplets(self, triplets: List[List[int]], target: List[int]) -> bool:\n        good = set()\n\n        for t in triplets:\n            if t[0] > target[0] or t[1] > target[1] or t[2] > target[2]:\n                continue\n            for i, v in enumerate(t):\n                if v == target[i]:\n                    good.add(i)\n        return len(good) == 3\n","javascript":"class Solution {\n    /**\n     * @param {number[][]} triplets\n     * @param {number[]} target\n     * @return {boolean}\n     */\n    mergeTriplets(triplets, target) {\n        const good = new Set();\n\n        for (const t of triplets) {\n            if (t[0] > target[0] || t[1] > target[1] || t[2] > target[2]) {\n                continue;\n            }\n            for (let i = 0; i < t.length; i++) {\n                if (t[i] === target[i]) {\n                    good.add(i);\n                }\n            }\n        }\n        return good.size === 3;\n    }\n}\n","cpp":"class Solution {\npublic:\n    bool mergeTriplets(vector<vector<int>>& triplets, vector<int>& target) {\n        unordered_set<int> good;\n\n        for (const auto& t : triplets) {\n            if (t[0] > target[0] || t[1] > target[1] || t[2] > target[2]) {\n                continue;\n            }\n            for (int i = 0; i < t.size(); i++) {\n                if (t[i] == target[i]) {\n                    good.insert(i);\n                }\n            }\n        }\n        return good.size() == 3;\n    }\n};\n","java":"class Solution {\n    public boolean mergeTriplets(int[][] triplets, int[] target) {\n        Set<Integer> good = new HashSet<>();\n\n        for (int[] t : triplets) {\n            if (t[0] > target[0] || t[1] > target[1] || t[2] > target[2]) {\n                continue;\n            }\n            for (int i = 0; i < t.length; i++) {\n                if (t[i] == target[i]) {\n                    good.add(i);\n                }\n            }\n        }\n        return good.size() == 3;\n    }\n}\n","csharp":"public class Solution {\n    public bool MergeTriplets(int[][] triplets, int[] target) {\n        HashSet<int> good = new HashSet<int>();\n\n        foreach (var t in triplets) {\n            if (t[0] > target[0] || t[1] > target[1] || t[2] > target[2]) {\n                continue;\n            }\n            for (int i = 0; i < t.Length; i++) {\n                if (t[i] == target[i]) {\n                    good.Add(i);\n                }\n            }\n        }\n        return good.Count == 3;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def mergeTriplets(self, triplets: List[List[int]], target: List[int]) -> bool:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[][]} triplets\n     * @param {number[]} target\n     * @return {boolean}\n     */\n    mergeTriplets(triplets, target) {}\n}\n","cpp":"class Solution {\npublic:\n    bool mergeTriplets(vector<vector<int>>& triplets, vector<int>& target) {\n        \n    }\n};\n","java":"class Solution {\n    public boolean mergeTriplets(int[][] triplets, int[] target) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public bool MergeTriplets(int[][] triplets, int[] target) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/kShkQLQZ9K4","embedding":[-0.01868863,-0.036575366,0.046287216,-0.022007588,0.020526309,0.004457762,0.0076347175,0.013309245,-0.016360905,0.010920264,-0.014823938,-0.026418015,-0.024368728,-0.0036057474,-0.041809965,0.0004197424,0.009856638,-0.036352616,-0.0032354274,0.05488532,0.01084787,0.06967585,0.04784646,-0.031652614,0.04169859,-0.012741235,0.034347877,0.022987684,0.015180335,-0.0057135085,0.06798296,-0.012162088,-0.021461854,0.008386495,-0.0295365,0.028200008,0.0075790305,0.08388723,-0.02343318,-0.008921092,-0.0017068132,0.0019295621,-0.012752373,-0.02770996,-0.026262091,-0.015068961,0.028311381,0.027353562,-0.009778676,0.02588342,-0.020459484,0.036397167,-0.023410907,0.04535167,0.0009842715,-0.041542664,-0.0032966833,-0.01036896,0.02770996,0.009283059,0.03563982,-0.013442894,0.024725124,-0.033300955,-0.0053682476,0.0298929,0.041208543,-0.023633655,0.0020033477,-0.057959255,-0.07644741,0.023366356,-0.019022753,-0.04038437,-0.030405222,0.052345984,0.016193843,0.043369204,0.029113278,-0.051677737,0.015670383,-0.026150718,0.041587215,-0.0032131525,-0.019902611,0.00036683955,-0.015313985,-0.022196924,-0.053994328,-0.030338397,-0.017931284,0.02278721,0.015714932,0.010474766,0.02539337,-0.03067252,0.054618023,-0.013186733,-0.026128443,0.0059975134,-0.017519198,0.034080576,0.01546991,0.034303326,0.008687206,-0.0298929,0.042411387,-0.027041713,0.032009013,-0.008514576,0.016271805,0.054484375,0.044104278,0.01063069,0.030004272,0.005724646,-0.019724412,-0.0066212104,0.03216494,0.01681754,0.008258414,-0.024324177,-0.007139101,-0.008163746,0.010068249,0.035706643,0.054573473,-0.024391001,0.020426072,-0.010602847,-0.011772278,0.0007768367,0.052746933,0.05550902,-0.00019194688,-0.029291477,0.014578913,-0.0020646036,-0.017886734,0.031385317,-0.011376899,0.01777536,-0.004530155,0.0022553324,0.050207596,-0.030026548,-0.020225598,0.024524651,-0.042812333,0.0345038,0.0071558077,-0.021550953,0.0047194916,0.004527371,-0.02383413,-0.0686512,-0.010942538,0.02160664,0.048202857,-0.056533664,-0.010335548,-0.020971807,0.0021843312,0.0056438996,0.028645504,0.067671105,0.016182706,0.012362562,-0.003903674,-0.051098593,0.025950244,-0.027420387,-0.027219912,0.008709481,0.027153088,-0.017652849,-0.034281053,-0.036330342,-0.06388438,-0.017786497,0.005524172,0.013576544,-0.060142197,-0.018588394,-0.038223706,-0.002792714,0.021628916,-0.011549529,-0.0142336525,0.011243249,0.00008701128,0.029180102,0.010168486,0.013988629,0.00766813,-0.06326068,0.03851328,-0.016193843,0.020181049,0.02352228,0.0013107379,0.004775179,-0.007005452,0.0118947895,-0.02352228,-0.06709196,-0.012997396,-0.013754743,-0.0494057,0.006487561,0.04107489,-0.003085072,-0.018332232,-0.002615907,0.015236023,0.0012696686,0.002575534,-0.0046693734,0.043101907,0.021762565,-0.026128443,-0.003249349,0.01838792,0.010352254,-0.014846212,0.035840295,0.015169199,-0.009700714,0.022987684,0.0021202909,-0.012206638,-0.032476787,0.0069553335,-0.02597252,-0.0085814,-0.044594325,-0.011560666,-0.024123702,-0.009115998,0.012206638,0.006827253,0.040941242,-0.0037143375,-0.0248365,0.015280573,-0.015570146,-0.026729865,0.018176308,-0.04503982,0.0442602,0.049851198,-0.01232915,0.032075837,-0.065621816,-0.027286736,0.018154033,-0.006108888,-0.013621094,-0.03773366,0.0110205,-0.021328205,0.02139503,-0.06700286,-0.079476796,-0.014712563,-0.0024794734,0.029157827,0.039693847,0.017129388,0.035929393,-0.0010893812,-0.034793373,0.054127976,-0.037444085,0.012072989,-0.010096093,-0.0011631667,-0.029157827,0.0345038,-0.07591282,-0.05729101,0.010675239,0.05488532,0.01485735,0.041765414,-0.0197801,0.02566067,0.016271805,-0.041008066,0.02147299,-0.032120388,0.0009995856,-0.008937798,0.052212335,-0.008804149,-0.0029180103,-0.029269202,-0.042099535,-0.022776073,-0.016104743,0.013699056,0.005546447,-0.024435552,0.06455262,-0.007506637,-0.010391235,0.0010135074,-0.040941242,0.008347514,0.011393605,-0.03978295,0.0045719207,-0.0031853088,-0.021818252,-0.041676313,-0.081526086,-0.020025123,0.019624176,-0.036664464,0.015247161,0.0064374423,-0.00788531,0.026484841,0.07172514,0.026351191,0.017018015,-0.013565406,-0.033122756,-0.024925599,-0.021417305,-0.007501068,-0.044906173,-0.016461141,-0.011493842,-0.04089669,0.013030809,0.0017346569,-0.0036920626,-0.002784361,0.034860197,-0.0296256,-0.0033969204,0.041809965,0.005067537,-0.01185024,0.021283654,0.029959723,0.0025588276,0.07168059,0.016895503,0.03290001,-0.014868488,0.009611614,0.0132535575,-0.079476796,0.004583058,-0.054038875,0.021985313,-0.008152609,0.021539817,-0.009177254,-0.0012842865,-0.020626545,-0.02661849,-0.009316471,0.055820867,-0.02566067,-0.0013030809,-0.02008081,0.052568734,0.00485871,-0.018198583,0.05510807,-0.011738866,-0.025437921,0.003110131,0.016305218,0.04029527,-0.018900242,-0.010992656,-0.03214266,-0.014100004,-0.0008262591,0.017229626,-0.00225394,0.05288058,-0.0036308067,-0.039404277,-0.049004752,-0.020804744,0.0118947895,0.009310903,0.03628579,-0.0010580572,0.059696697,-0.006443011,0.025304273,0.07978865,-0.012429387,0.005869433,0.012507349,-0.009945737,0.018443607,0.01773081,-0.0060086506,0.018332232,-0.014022041,0.06330523,0.018532706,-0.043057356,0.0069609024,-0.0063761864,0.024190528,0.0053598946,0.020281285,0.054618023,-0.029959723,0.022453086,0.00914941,-0.046019915,-0.024212802,-0.017307587,0.0351275,0.003951008,0.025415646,-0.016940052,0.02361138,-0.024257353,0.013342657,-0.015369672,-0.016828677,-0.002723105,0.017808773,-0.019445976,0.0054100133,0.048692904,-0.0035305696,0.061389588,0.003895321,-0.0026479273,-0.028912803,-0.041988164,0.020882707,-0.008937798,-0.02561612,-0.013509719,0.014177966,0.05123224,0.04392608,0.0146457385,-0.0247474,0.03537252,0.0059808074,0.040807594,0.018588394,0.011582942,-0.004535724,-0.011738866,0.019234365,0.03942655,-0.012640999,-0.010318842,-0.005858295,-0.026083892,0.031296216,-0.016182706,0.032922283,-0.016940052,0.00211333,-0.04078532,0.017140526,-0.01925664,0.05105404,0.0021509188,-0.009817656,-0.004413212,0.048247404,0.04301281,-0.0073562814,-0.0031741713,-0.015971094,-0.022553323,-0.043725602,0.031474415,-0.016516829,-0.011527254,0.006743722,-0.05136589,-0.016527966,-0.022709247,0.035751194,0.037354987,-0.0048865536,-0.009221803,0.057691958,0.017875597,-0.015191473,-0.026128443,0.04107489,0.009199528,0.0051343613,-0.03294456,-0.0035138635,0.012295738,0.0120841265,-0.02866778,-0.031652614,-0.06851755,-0.03385783,0.045552146,-0.0086537935,-0.052568734,0.008035665,0.00034456467,-0.010018131,-0.007161376,-0.03305593,0.010374528,0.00028748525,0.0248365,-0.008815287,-0.05158864,0.0126855485,-0.028200008,-0.016672753,-0.021729153,-0.010268723,0.005802608,-0.06633461,-0.04579717,-0.009739694,0.0074175373,-0.01015178,0.023967778,-0.045017548,0.0052902857,0.031273942,0.0005854119,-0.011983889,-0.024301901,-0.0117054535,0.019334601,-0.034236502,-0.009154978,0.0041848943,-0.0130642215,0.020860432,0.017975833,-0.029046454,-0.021762565,-0.0019045029,-0.0029263634,0.0043603093,-0.022987684,0.012485074,-0.038780577,-0.004404859,0.017998109,0.003193662,0.023299532,-0.0053710323,-0.013387207,-0.025950244,-0.01647228,-0.015258297,0.042545035,-0.0046749418,-0.007150239,0.016115882,-0.03227631,0.056043617,0.0041403444,-0.020236734,-0.046777263,0.013242421,-0.025994793,-0.020548584,-0.042188637,-0.029603325,-0.016238393,-0.027264463,-0.040651668,-0.009856638,-0.019267777,-0.0081804525,-0.005237383,-0.046064466,0.042923708,0.038491007,-0.011187562,0.029447401,-0.015536734,0.058137454,0.0076625613,0.0034581763,-0.01542536,-0.03294456,-0.014690288,-0.008091353,0.0008269552,0.0011617746,0.032833185,-0.00032437805,-0.05724646,-0.026596215,0.026172992,0.052435085,0.023722755,-0.0030822875,0.015926544,0.008208296,-0.0122734625,-0.01756375,0.011917065,-0.0024029035,-0.03795641,-0.011287799,0.034436975,0.03367963,0.00042600723,0.0012794138,0.031518966,0.0043324656,0.029826075,-0.014512089,0.023099057,-0.010758771,-0.0014979861,-0.024947874,0.03327868,-0.06637917,-0.00011407179,-0.0008443574,-0.02766541,-0.018198583,-0.02165119,0.007411969,-0.006888509,0.014267066,0.009455689,0.010842301,-0.0026353975,0.0034748823,-0.00225394,-0.024368728,-0.0032047995,-0.049004752,0.047000013,0.010931401,-0.0028497933,0.03715451,-0.035773467,0.003394136,-0.0029876193,0.019033892,0.004251719,-0.04074077,-0.026930338,0.0043268967,-0.0053292667,-0.03323413,0.006827253,0.035929393,0.0055965655,-0.010446922,0.0028790291,-0.0050257714,0.01476825,0.015436497,-0.026239818,0.020581996,-0.02178484,0.028690055,-0.008620381,0.0196019,0.018354507,0.013932942,-0.017652849,-0.026551666,-0.023009958,0.003502726,-0.0011589902,-0.027687686,0.0011562059,-0.05127679,0.0017012445,-0.05368248,-0.026774414,-0.054217074,-0.016060194,0.0002606858,-0.005167774,-0.019813512,-0.0028901666,0.017541474,0.0037087686,-0.0016594791,-0.006125594,0.0058527268,-0.007785073,0.0038284962,-0.0030572282,-0.037020862,-0.050073948,0.00025668327,-0.0023653146,0.00618685,-0.0009473788,0.019947162,-0.007105689,-0.008971211,0.038981054,-0.025460197,-0.009951306,-0.025281997,0.011248818,-0.02025901,0.0054434254,0.0042712097,-0.010012561,-0.003973283,-0.0016789696,-0.038446456,0.018354507,-0.011605216,-0.008915524,-0.0044549773,0.01294171,-0.022920858,-0.029425126,0.023099057,-0.0101406425,-0.04330238,0.012451662,0.023967778,-0.006225831,0.0056578214,0.03209811,-0.022564461,0.0020256226,0.012429387,0.00714467,0.00095782016,0.01991375,0.020771332,0.04686636,0.0037310435,0.031652614,-0.05738011,0.007445381,-0.033523705,0.004822513,0.013075359,-0.031184843,-0.017095976,-0.0023249413,0.025927968,-0.0012202462,0.011571804,-0.0005986376,0.03290001,0.012707823,-0.044416126,-0.017964697,0.024524651,0.04056257,-0.048381057,0.02866778,0.018800005,0.020125361,0.010775477,-0.04713366,0.026217543,-0.050385796,0.0047250604,-0.0170737,-0.027019437,0.025950244,0.012741235,-0.003903674,-0.017942421,0.035951667,-0.016282942,-0.0007837976,-0.0026451428,0.03327868,0.010636259,-0.0040066955,0.012072989,-0.015915407,-0.00010302135,0.03290001,-0.026640765,0.0343256,0.008854268,-0.0037561029,-0.011928203,-0.024457825,0.016450005,-0.019056166,-0.041141715,0.002862323,0.046955463,0.023254983,-0.0033662922,-0.052657835,-0.023878679,0.010942538,-0.0020548583,0.03641944,-0.02762086,0.05902845,0.0194237,-0.013777018,-0.00649313,-0.010213036,-0.018666355,0.014890762,0.013298107,-0.007094552,-0.0031518966,-0.0059418264,0.039359726,0.01542536,0.017006876,-0.030271571,0.03546162,-0.0032298586,0.03514977,0.038067784,0.023990054,0.016628204,-0.027509486,0.008553557,0.03399148,0.01677299,-0.0006059465,0.0023611381,-0.012518487,0.044928446,-0.026083892,0.009878913,-0.031095743,-0.0591621,-0.027398111,0.007729386,-0.03209811,-0.023789579,0.03697631,-0.010051543,0.019401427,-0.0086705,0.02848958,0.016282942,-0.0063483426,0.019178677,-0.013944079,-0.007957703,0.011627492,0.02235285,-0.018632943,0.00836422,0.018621806,-0.022508774,0.021517541,-0.007244907,-0.0298038,-0.005802608,0.00043818878,-0.012607587,-0.015158061,0.0012494819,0.0009557319,0.00823614,0.034347877,-0.013932942,0.0295365,0.0341474,0.013520856,-0.0022636855,0.045128923,0.005808177,-0.0072170636,0.045708068,-0.040451195,-0.0055659376,0.026818965,-0.004546861,0.010864576,-0.017151663,0.03811233,-0.010575003,0.028021809,-0.022686973,-0.05096494,-0.021829389,0.006966471,-0.00070165895,0.016672753,0.021550953,-0.02008081,-0.01982465,0.040985793,0.041275367,0.017229626,-0.0046944325,0.0055742906,-0.019457115,0.005841589,-0.024168253,-0.042723235,-0.016962327,-0.03998342,0.04713366,-0.013621094,0.013944079,-0.007857466,0.014634601,0.021428442,-0.0072616134,-0.04749006,0.0007211495,-0.00095294754,-0.033946928,0.053548828,0.009372159,0.004713923,-0.0011151365,-0.020849295,-0.01372133,-0.0023667067,0.0026813396,-0.02251991,-0.0010037621,-0.03149669,0.0039315177,0.014968724,-0.017719673,0.023232708,-0.017630573,-0.050073948,0.015714932,-0.05497442,-0.009355453,-0.027398111,-0.022664698,-0.014489814,-0.0040401076,0.032922283,0.02383413,0.029759249,-0.046376314,0.018944792,-0.02784361,-0.017363274,-0.017329862,-0.010290998,-0.018554982,0.012095264,0.018142896,0.0073395753,0.044906173,-0.018788867,0.00640403,0.00418211,0.014422989,0.0297147,-0.0062369686,-0.0083697885,-0.016494554,-0.0026632412,-0.046465416,0.03773366,-0.0025880635,-0.012730098,-0.008776305,0.024257353,0.010263154,0.0060754754,-0.0589839,0.018766593,-0.016049055,-0.05176684,0.013431757,0.002421002,0.022508774,-0.04129764,0.016171569,-0.006108888,0.021161143,0.0494948,-0.00008370485,0.0140443165,0.012752373,-0.014489814,0.007105689,-0.01546991,-0.018176308,-0.00030593167,-0.014868488,-0.026061619,-0.036798112,0.0001842899,0.009728557,-0.02138389,-0.05145499,0.05078674,0.016138155,-0.0033050363,0.0039454396,-0.022085551,0.008948936,0.021439578,0.023856405,-0.022898585,-0.01185024,0.04129764,-0.011638628,0.0009418101,0.0046777264,-0.014478677,0.024235077,0.008509007,0.022943133,-0.0047640414,-0.006209125,0.012351425,-0.011493842,-0.0025142778,0.0060364944,0.008124765,0.009572633,0.027554035,-0.012707823,0.0022650775,0.0022957055,0.0395602,0.00177503,0.04056257,-0.008926661,-0.019546214,-0.0047556884,-0.020203322,0.010096093,-0.03145214,-0.006866234,-0.00897678,0.0024878264,-0.012863748,0.012251188,-0.0023291179,0.058449306,-0.040050246,-0.010881282,0.028912803,-0.013999767,0.030783894,0.008475594,0.0008972603,-0.01433389,0.02160664,-0.043101907,-0.026952613,0.0035779038,-0.00022048657,0.0037059844,-0.0074954997,-0.046955463,0.005808177,-0.021807116,-0.0033161738,-0.03327868,-0.05114314,0.019746687,-0.030316122,-0.018699767,-0.03249906,-0.014779388,0.017318726,-0.009088154,0.040941242,-0.005526956,-0.0052123237,0.035194322,0.0075177746,0.011727728,-0.025192898,-0.010775477,-0.030828444,0.023099057,-0.008703913,0.028600955,0.010897988,0.008252846,-0.0019072872,-0.0065376796,-0.011917065,0.0016316355,0.049049303,0.0056745275,-0.022965409,0.02539337,-0.008425476,-0.028133182,-0.0075511867,-0.026462566,-0.03341233,-0.0045802738,0.002252548,0.0043519563,0.016260667,-0.033367783,0.008124765,0.026908064,-0.035951667,-0.04252276,0.030160198,-0.002106369,0.04339148,-0.009867775,0.009594908,-0.027821334,0.04096352,0.033479154,-0.0063093617,-0.024190528,-0.036308065,0.004544077,-0.0036586502,0.046287216,-0.03305593,-0.019891474,-0.03067252,-0.0400057,-0.015269435,-0.041899063,-0.05283603,-0.009082586,-0.016394317,0.0018084424,0.023121333,0.02112773,0.0062592435,-0.018198583,0.029514225,0.0035611975,-0.0046276078,0.060142197,-0.006387324,-0.032610435,0.00006886943,0.0076959734,0.0056745275,-0.022029864,-0.0042628567,-0.0036391597,-0.019457115,-0.009227372,-0.00028748525,0.0065154047,-0.057959255,0.007768367,0.016450005,-0.014155691,0.007907585,0.048381057,-0.04927205,0.011337917,0.0016427729,0.00588057,0.03145214,-0.03363508,0.016973464,0.01298626,0.02112773,-0.00862595,0.017140526,-0.016004506,0.017964697,-0.008971211,-0.013264695,0.009054742,-0.026351191,-0.035172045,-0.0059975134,0.01185024,-0.014679151,-0.04238911,0.015369672,-0.008943367,0.034659725,0.017029151,-0.009032466,0.002909657,0.012195501,0.0025031404,0.0087651685,-0.02744266,-0.03214266,-0.0247474,0.01045806,-0.0129528465,-0.001944876,0.01176114,-0.047891006,0.017998109,0.019635312,-0.0246583,-0.0012745413,-0.019490527,-0.00017698095,0.0026117305,-0.016962327,-0.041943613,-0.018477019,-0.043057356,0.00914941,0.03704314,0.0003480451,0.028289108,0.015503322,0.002575534,0.02753176,0.0048169442,0.011605216,-0.043792427,0.0041069323,0.032254037,0.001442299,-0.00008653272,-0.020960668,-0.03655309,-0.02356683,0.0021592719,0.010758771,0.0004844788,0.009422277,0.010814458,0.037488636,0.01080332,-0.04125309,0.0019629744,-0.0074787936,-0.005746921,0.025682945,-0.016049055,-0.024145978,0.033122756,-0.01494645,0.015559008,0.04430475,-0.046376314,0.0038396337,-0.042277735,0.01494645,0.0048642787,-0.008531282,0.00043784076,0.023099057,-0.033211857,-0.014634601,-0.0059139826,0.050920393,-0.01115415,-0.034882475,0.01925664,-0.020726783,0.021461854,0.00019125079,-0.033969205,-0.02048176,0.010285429,-0.010051543,0.0063483426,0.03294456,0.0020200538,-0.036218967,0.00771268,0.0050007124,0.012106401,0.008403202,0.023544556,0.0033829985,-0.00011859637,0.009550358,0.034971572,0.012841472,-0.035483897,0.018766593,-0.0036697877,0.006459717,-0.0056327623,0.021506405,-0.022018727,0.015837444,-0.00041417367,0.022141239,-0.00007896274,-0.0347711,-0.019635312,-0.052702382,0.0001033694,0.009216235,-0.0016984602,0.011271093,0.0001588826,-0.01572607,-0.0039983424,0.051855937,0.048782002,0.012741235,-0.012262326,-0.030472046,0.007367419,0.0197801,0.03044977,-0.017374411,0.05096494,-0.010263154,-0.023032233,-0.011694316,0.018855693,-0.012362562,0.014255928,0.010998226,0.034837924,0.048514705,-0.0020465052,0.008325239,0.0029569913,0.02064882,-0.011616354,-0.019691,-0.012473937,0.010062681,-0.028066358,0.009923462,0.017786497,0.012251188,0.021517541,-0.031741716,0.023277257,-0.016895503,-0.02139503,0.01529171,-0.01232915,0.033479154,0.029024178,-0.030182471,-0.03093982,0.034080576,0.011460429,-0.014400715,0.0075901677,-0.011237681,0.0073117316,-0.009177254,0.0688294,-0.003210368,-0.0448839,-0.020982943,0.0015982231,-0.0007914546,0.016873227,0.047801908,0.013944079,0.006220262,-0.02644029,-0.020815883,-0.01642773,0.001968543,-0.020125361,-0.01777536,0.0040930104,-0.00111096,-0.026640765,-0.040540297,0.0247474,-0.025281997,0.004179326,0.0072226324,0.0056578214,-0.004221091,-0.038713753,0.0119727515,0.022152375,0.0011854416,0.0018223642,0.019657588,0.0036363753,0.04918295,-0.01925664,0.0059863757,0.001103303,-0.0015689874,-0.00407352,0.043547403,0.0008276513,-0.009617182,0.008280689,-0.0072950255,0.034459252,0.007890879,-0.0035194322,-0.0020353678,0.014913037,-0.037265886,0.00718922,0.031786263,-0.039938875,0.011861377,0.009739694,-0.018655218,-0.029001903,-0.026551666,0.010201898,-0.005694018,-0.0006689427,0.0018167954,-0.03272181,-0.0017986972,-0.009522514,-0.0130642215,-0.02561612,0.017218487,-0.020893844,0.0040679513,0.026217543,-0.01895593,-0.020871568,-0.0053571104,-0.01738555,0.0016831461,-0.0016483417,-0.00053877383,0.015581284,0.00076639536,0.01921209,0.016850952,0.0688294,0.0105193155,-0.015124649,-0.004850357,-0.009639458,-0.0016163215,-0.0056132716,0.016127018,-0.033390056,-0.0059529636,0.052435085,-0.05359338,0.029915174,-0.012228913,0.018076072,0.032989107,-0.016327493,0.0066601913,-0.0050034965,-0.0036697877,-0.022764934,0.005499113,-0.0021383893,0.031184843,0.0019768963,-0.028110908,-0.0075734616,0.010296566,-0.01642773,0.006326068,-0.002091055,-0.05145499,-0.010513747,-0.011337917,0.0136656435,0.00060907897,0.04029527,-0.010703083,-0.0037533185,0.018577255,0.012262326,0.013286971,0.025059247,-0.0069386275,0.01912299,0.009594908,0.013988629,-0.005479622,0.012496212,-0.0015773404,0.0022386261,0.00059585326,-0.015670383,0.041676313,0.008458888,-0.01633863,0.039872047,0.03463745,0.008486732,0.030182471,0.06504267,-0.03751091,0.009784244,0.023589106,0.017051427,-0.026484841,-0.006164575,-0.017741948,0.013788155,0.0043825842,0.034971572,0.03399148,-0.0017485786,-0.014601189,-0.006749291,0.023099057,0.0060364944,0.01084787,0.032476787,0.015358535,0.019356877,0.037444085,0.017652849,0.007874172,0.01672844,-0.011928203,-0.026061619,-0.015948819,-0.035662096,-0.022965409,-0.014467539,-0.01241825,-0.0050313403,0.040094797,0.013476307,0.0075623244,0.0010135074]},{"id":"partition-labels","name":"Partition Labels","description":"You are given a string `s` consisting of lowercase english letters. \n    \nWe want to split the string into as many substrings as possible, while ensuring that each letter appears in at most one substring.\n\nReturn a list of integers representing the size of these substrings in the order they appear in the string.\n\n**Example 1:**\n\n```java\nInput: s = \"xyxxyzbzbbisl\"\n\nOutput: [5, 5, 1, 1, 1]\n```\n\nExplanation: The string can be split into `[\"xyxxy\", \"zbzbb\", \"i\", \"s\", \"l\"]`.\n\n**Example 2:**\n\n```java\nInput: s = \"abcabc\"\n\nOutput: [6]\n```\n\n**Constraints:**\n* `1 <= s.length <= 100`\n","difficulty":"Medium","concepts":[],"solutions":{"python":"class Solution:\n    def partitionLabels(self, S: str) -> List[int]:\n        count = {}\n        res = []\n        i, length = 0, len(S)\n        for j in range(length):\n            c = S[j]\n            count[c] = j\n\n        curLen = 0\n        goal = 0\n        while i < length:\n            c = S[i]\n            goal = max(goal, count[c])\n            curLen += 1\n\n            if goal == i:\n                res.append(curLen)\n                curLen = 0\n            i += 1\n        return res\n","javascript":"class Solution {\n    /**\n     * @param {string} S\n     * @return {number[]}\n     */\n    partitionLabels(S) {\n        const count = new Map();\n        const res = [];\n        let i = 0;\n            const length = S.length;\n        for (let j = 0; j < length; j++) {\n            const c = S[j];\n            count.set(c, j);\n        }\n\n        let curLen = 0;\n        let goal = 0;\n        while (i < length) {\n            const c = S[i];\n            goal = Math.max(goal, count.get(c));\n            curLen++;\n\n            if (goal === i) {\n                res.push(curLen);\n                curLen = 0;\n            }\n            i++;\n        }\n        return res;\n    }\n}\n","cpp":"class Solution {\npublic:\n    vector<int> partitionLabels(string S) {\n        unordered_map<char, int> count;\n        vector<int> res;\n        int i = 0, length = S.length();\n        for (int j = 0; j < length; j++) {\n            char c = S[j];\n            count[c] = j;\n        }\n\n        int curLen = 0;\n        int goal = 0;\n        while (i < length) {\n            char c = S[i];\n            goal = max(goal, count[c]);\n            curLen++;\n\n            if (goal == i) {\n                res.push_back(curLen);\n                curLen = 0;\n            }\n            i++;\n        }\n        return res;\n    }\n};\n","java":"class Solution {\n    public List<Integer> partitionLabels(String S) {\n        Map<Character, Integer> count = new HashMap<>();\n        List<Integer> res = new ArrayList<>();\n        int i = 0, length = S.length();\n        for (int j = 0; j < length; j++) {\n            char c = S.charAt(j);\n            count.put(c, j);\n        }\n\n        int curLen = 0;\n        int goal = 0;\n        while (i < length) {\n            char c = S.charAt(i);\n            goal = Math.max(goal, count.get(c));\n            curLen++;\n\n            if (goal == i) {\n                res.add(curLen);\n                curLen = 0;\n            }\n            i++;\n        }\n        return res;\n    }\n}\n","csharp":"public class Solution {\n    public List<int> PartitionLabels(string S) {\n        Dictionary<char, int> count = new Dictionary<char, int>();\n        List<int> res = new List<int>();\n        int i = 0, length = S.Length;\n        for (int j = 0; j < length; j++) {\n            char c = S[j];\n            count[c] = j;\n        }\n\n        int curLen = 0;\n        int goal = 0;\n        while (i < length) {\n            char c = S[i];\n            goal = Math.Max(goal, count[c]);\n            curLen++;\n\n            if (goal == i) {\n                res.Add(curLen);\n                curLen = 0;\n            }\n            i++;\n        }\n        return res;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def partitionLabels(self, s: str) -> List[int]:\n        ","javascript":"class Solution {\n    /**\n     * @param {string} S\n     * @return {number[]}\n     */\n    partitionLabels(S) {}\n}\n","cpp":"class Solution {\npublic:\n    vector<int> partitionLabels(string s) {\n        \n    }\n};\n","java":"class Solution {\n    public List<Integer> partitionLabels(String s) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public List<int> PartitionLabels(string s) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/B7m8UmZE-vw","embedding":[0.035107173,-0.0091167595,0.01660168,-0.033815302,-0.018584816,-0.002039797,-0.026608018,-0.01520782,-0.045238163,0.030438304,0.015774429,-0.020273315,-0.033430006,-0.017576251,0.0073092724,0.0068673166,0.023389671,0.02595075,0.007280942,0.051765513,0.014153924,0.0146072125,0.017904885,0.017610246,0.045328822,0.025021508,-0.016681006,0.0120914625,0.03129955,0.017700905,0.02554279,-0.0121594565,-0.00763224,0.013643975,-0.00298037,0.0318435,0.0007365933,-0.002053962,-0.014063267,-0.01978603,-0.030460967,0.03880147,-0.052354787,-0.017961545,0.040184,-0.00047028653,0.036399044,0.0082895085,-0.015309809,0.012907382,-0.026562689,0.028783802,0.014765863,-0.055890437,-0.013881952,0.014006605,-0.0632337,0.046280727,0.06414028,-0.024998846,0.046122074,-0.038778808,0.0190721,0.0056661027,0.009241413,0.012771395,0.018890787,0.015887752,0.019774698,-0.048637826,-0.030914256,0.003966272,-0.049000457,-0.005736929,-0.020647278,-0.01081659,-0.020590616,0.005595276,0.017372271,-0.00987035,-0.0364897,-0.039277423,0.036512364,0.011128225,0.009394398,0.03762292,-0.036580358,0.0011204717,-0.043198366,-0.06110325,-0.014165256,-0.032138135,-0.047957893,0.022007143,0.042926393,-0.029781036,0.036104407,0.0033288354,-0.029101104,-0.028035875,-0.041203897,0.005527283,0.031322215,-0.032342114,-0.022596417,-0.010929912,0.027333278,0.008091195,0.014561884,-0.039844032,0.005360133,0.00783622,0.020239318,-0.015513789,0.05602642,-0.0034081608,-0.0863514,-0.021247884,0.023412336,-0.0048501836,0.00018078409,-0.01232944,0.02898778,-0.020443298,-0.056933,0.0013818208,0.015649775,-0.08018669,0.040116005,0.008147855,0.023004377,-0.0732967,-0.0031305216,-0.026993312,0.00039379412,-0.038053546,-0.012998039,-0.005909745,-0.0063686995,0.05144821,-0.012748731,-0.0028542993,-0.0111338915,-0.0026928151,0.05874615,-0.019185424,-0.07288875,0.04233712,-0.05385064,0.040002685,0.045827437,-0.003869948,0.043968957,0.06554548,0.021655845,-0.04143054,0.0018032371,-0.003699965,0.046371385,0.027355943,0.014380569,-0.032568756,0.021259217,0.011377534,-0.0051136576,-0.01860748,0.043946292,-0.01747426,-0.018675474,-0.051312227,0.009218749,-0.059834044,0.014833856,-0.041158568,0.0056632697,-0.0034959854,-0.012442761,-0.005966406,-0.04415027,0.0110489,-0.009672037,0.021338543,-0.06382298,-0.06346035,0.014675206,0.038461503,0.013655308,-0.025089502,-0.0019675542,0.0019165592,0.011184886,-0.0077115656,0.031208893,0.031050242,-0.019729368,-0.009258412,0.04054663,0.0044988855,-0.021905152,0.026540024,-0.060015358,0.018516824,-0.028194526,0.0063800314,-0.0013421581,-0.026585354,-0.07900813,-0.0013910282,0.025202824,-0.01721362,0.021757834,-0.0077002333,0.011337872,-0.026086736,0.03041564,0.023616316,-0.006357367,0.002385429,0.034291252,0.024930852,-0.0025879925,0.031684846,0.00237693,0.035220493,0.020431966,0.020726603,0.014958511,0.009660705,0.011762829,-0.0063743657,-0.02533881,0.010827922,0.018890787,-0.004204248,-0.033316683,-0.05579978,-0.03485786,-0.012782727,-0.043515667,-0.0117175,-0.016862322,0.00907143,0.0018825625,0.029123768,0.060921934,-0.027061306,-0.011683503,0.032614086,-0.031231558,-0.008788126,-0.006782325,0.007275276,-0.04913644,-0.05838352,-0.025248153,0.07384065,0.020069335,-0.028715808,0.01676033,-0.007915545,-0.08041333,-0.018528156,-0.0622818,-0.03601375,0.029373076,-0.0545759,0.003915277,0.008640806,0.0005496119,-0.022619082,-0.039073445,-0.0452155,0.0049436744,0.0096437065,0.010895915,-0.0035016513,0.0043798974,0.04696066,-0.0441956,-0.02810387,-0.021950481,0.01382529,0.015989741,-0.0073772655,0.019876689,-0.01696431,0.021723837,0.028443836,-0.0190721,-0.012397433,0.028670479,0.0284665,0.030121,0.02307237,-0.027945219,-0.011088563,-0.04090926,0.005836086,0.015479792,-0.016658342,0.0053856303,-0.053623997,0.030030344,0.020737935,-0.030755606,-0.084220946,-0.019854024,0.011910148,-0.0000045760416,-0.010102661,-0.0029548726,-0.016737668,0.020352641,0.03401928,0.0053204703,-0.0762884,-0.023253685,-0.041226562,0.018777464,-0.012884717,-0.027061306,-0.026698675,0.049453743,0.035991084,0.05566379,0.042994387,-0.04691533,0.0015312643,0.009167754,-0.02574677,-0.00479069,-0.017122962,0.005025833,0.030256988,-0.049725715,0.004249577,0.061647195,0.029622385,-0.015604447,0.044127606,0.008510486,0.006136389,0.0009766944,0.010555949,-0.015593114,-0.0073546013,0.022199789,0.03370198,-0.00642536,-0.040569294,0.013507988,0.0043374016,0.003640471,-0.011434195,-0.011558849,0.011762829,-0.0040569296,-0.013621311,-0.039186765,-0.022517093,0.021542521,0.0024520059,0.031548858,-0.064865544,-0.01218212,0.045918096,-0.0038557828,-0.013904615,0.02785456,0.00894111,0.06064996,0.0015085998,0.015808426,-0.011604178,-0.017542254,-0.023910953,-0.008601144,0.038053546,-0.041249227,0.034245923,-0.022709738,0.028534492,-0.00981369,0.03721496,0.033996616,0.022619082,-0.007133623,0.029917022,-0.03766825,-0.013700636,-0.013485325,-0.01983136,0.07823754,0.021293214,0.023797631,-0.031412873,0.040229328,0.057522275,-0.021236552,0.022335777,-0.0052213133,0.016375037,0.018822793,0.0056066085,-0.026245387,-0.005853084,-0.0021304546,0.034767207,0.021338543,0.0117175,0.041589193,-0.012703402,0.014187921,-0.010448293,0.013870619,0.02348033,-0.009694702,0.012737399,-0.013270012,0.01978603,0.0054337922,-0.026947984,0.034041945,-0.00512499,0.027174627,-0.0064423587,0.0077058994,-0.040795937,-0.013304009,0.01865281,0.023570986,0.039504066,0.0073829317,-0.025134832,-0.02281173,0.034200594,0.007853218,0.020375306,-0.005637772,0.0005071162,0.0023103533,-0.029373076,0.05566379,-0.0021304546,-0.0007316355,-0.058927465,0.034268588,0.048184536,0.024046939,-0.005501786,0.026222723,-0.021508526,-0.0021403702,-0.01587642,-0.013836622,0.011604178,-0.018290179,-0.00082654273,0.013111361,-0.049363084,0.015604447,0.053216036,-0.013802626,-0.014505222,-0.014629877,-0.005243978,-0.018301511,-0.030143665,0.055527806,0.011966809,0.011887483,-0.0011757163,0.005011668,0.03859749,-0.04276774,0.028670479,-0.034767207,0.02574677,-0.054938532,-0.028307848,-0.0007982122,-0.026494695,-0.02250576,-0.008680469,0.024228254,-0.007343269,0.03227412,-0.04464889,-0.015355138,-0.00920175,-0.04383297,-0.012941378,0.033475336,-0.009383066,0.008091195,-0.03551513,0.028081205,-0.055029187,0.004130589,-0.007059964,0.014017938,-0.016635677,0.022641746,0.0030851928,0.022653079,-0.0041107573,-0.013213351,-0.013949945,0.00094411435,0.015695104,0.016420366,0.010771261,0.016443029,-0.02260775,0.009456725,0.0013754464,-0.014482558,-0.021701174,-0.03880147,0.0076549044,-0.015559117,-0.01158718,0.007082628,-0.020737935,-0.0037792905,-0.00763224,-0.029894358,-0.030075673,-0.028942453,-0.03508451,-0.019332742,-0.032500766,-0.0001794561,0.020771932,-0.025270818,0.024046939,0.023548322,-0.015819758,0.0014356488,0.016782995,0.012318107,0.019400734,-0.008924112,-0.0031390209,-0.0009731531,-0.04512484,0.018108863,0.017202288,-0.004467722,-0.0016587515,-0.027061306,-0.011434195,0.02260775,-0.041067913,-0.034313917,-0.047459275,0.014346572,0.022437766,0.0026049907,0.016771663,-0.0013400333,-0.017360939,0.042178467,-0.013949945,-0.013881952,0.008357502,0.012510754,0.0311409,0.030959584,-0.0042127473,-0.017530922,-0.017802894,-0.005144821,-0.057295628,0.009853353,-0.031775504,-0.0035101506,-0.03410994,0.018074866,0.018267514,-0.0047113644,0.0058927466,0.0008789542,-0.037124306,-0.025361475,-0.012726067,0.012476758,-0.0047283624,-0.026857326,-0.06377765,0.009377399,0.020137329,0.043039717,0.015015172,-0.036716346,-0.030143665,-0.016737668,0.003988936,-0.014244582,-0.01705497,-0.004980504,0.053986624,0.0057737585,-0.02070394,-0.027265286,-0.02440957,0.004479054,0.04374231,0.019434731,0.044784874,0.015355138,-0.030188994,0.00042991553,-0.03299938,0.017281612,-0.009808023,0.015740434,-0.009655039,0.018460162,-0.012601412,0.011139558,0.027469266,0.010527618,0.024250919,0.021395203,0.050043017,-0.0024959182,-0.002899628,-0.010068664,0.054349255,-0.02919176,0.036580358,-0.007994871,0.010493622,-0.0027749736,0.0324781,0.025089502,0.02461355,0.063097715,0.013032036,0.05108558,-0.04220113,0.0030681945,-0.030936921,0.02765058,0.015661107,0.027219957,0.02554279,0.006023067,-0.005898413,0.02183716,0.020159993,0.023933617,0.017836891,-0.005643438,0.04630339,0.027106635,-0.03596842,0.006448025,0.010346304,-0.012068799,0.015955744,0.04634872,-0.010051666,0.0044535566,-0.050043017,0.02281173,-0.026132066,0.03410994,-0.017292945,-0.014890518,0.050904267,0.0515842,-0.012397433,-0.0026687344,-0.0049493406,0.029577056,-0.019876689,-0.021825828,0.0028061373,-0.0006374365,0.024726871,-0.0033373344,0.022494428,-0.015808426,-0.016624345,-0.02780923,0.030642282,-0.018596148,-0.020885253,-0.021565186,0.0025894088,-0.030914256,-0.0047340286,0.05652504,0.0013874868,0.006827654,0.043968957,0.0039124438,-0.04872848,0.011258546,0.0024265083,-0.01664701,0.01058428,-0.037282955,0.025021508,-0.03503918,0.026540024,-0.00157376,-0.015083165,0.00024116349,0.03021166,-0.034359246,0.021066569,-0.030642282,0.019174092,0.01793888,-0.017644243,0.040229328,-0.012057466,-0.032432772,-0.04224646,-0.002929375,-0.0045527136,0.010238647,-0.010006337,0.02697065,-0.02919176,0.040410645,-0.026562689,0.031118235,0.035696447,-0.0123861,-0.008544482,-0.0086521385,-0.0066520046,-0.05036032,0.04804855,-0.014913182,-0.0057114316,-0.016511023,0.013202019,0.06459357,0.0021049571,0.014527887,0.038008217,-0.03485786,0.030846262,-0.06849185,-0.009292408,-0.038710814,0.005898413,0.043402348,-0.02230178,0.012805392,0.03129955,0.014516555,0.008584145,0.018879455,-0.0031163564,0.005096659,0.05298939,0.00009402189,-0.026857326,0.024908187,0.013247347,-0.020397969,0.014629877,-0.011547517,0.01855082,-0.01516249,-0.016681006,0.029146431,0.015026504,0.0036688014,-0.03037031,-0.0016431698,0.0271293,-0.042019818,0.015049169,-0.0053969626,-0.009315073,-0.01356465,0.008589812,-0.02533881,0.01968404,-0.011247214,0.013247347,0.044376917,-0.063143045,-0.00981369,-0.024114933,-0.038008217,-0.022267783,-0.0005736929,-0.0072866078,-0.0028868793,-0.03580977,-0.030755606,-0.0042325784,-0.0057000993,0.003309004,-0.008119525,0.0019973011,-0.0021630346,0.0006381448,0.014788528,-0.00917342,-0.03544714,0.010425629,0.017088965,0.024794865,-0.0044507235,0.037441608,0.03352066,-0.008884449,-0.05149354,0.022517093,0.04492086,0.025520125,-0.0032466769,-0.033905957,0.010527618,-0.015819758,-0.021825828,-0.023820296,0.03766825,0.005266642,0.018562153,0.014357904,-0.018641477,-0.00040087677,-0.009779693,0.02687999,0.046643358,0.052173473,0.0053573,-0.013338005,-0.019174092,0.007456591,-0.024318913,0.024001611,-0.017179623,-0.04322103,-0.017598914,-0.016635677,0.015525121,-0.025112167,0.011683503,-0.04140788,0.019774698,0.045759443,-0.0091167595,-0.008725798,-0.02826252,0.029373076,0.01936674,0.015219152,-0.005762426,0.010788259,0.029690377,-0.018834125,0.0041645854,-0.04650737,-0.0062780418,0.000035944337,-0.002123372,0.046076745,-0.062961735,-0.0019278914,0.025814764,0.009133757,0.020749267,-0.0016757499,0.015661107,-0.03977604,0.0030625286,-0.018006874,0.036807,0.033384677,0.014505222,0.005507452,0.0042382446,0.034676548,0.024273584,-0.04603142,0.06110325,0.0031078572,0.03592309,-0.007201616,0.03139021,-0.00991568,0.03186616,0.0092130825,0.013485325,0.03139021,0.0029067106,-0.0068106554,0.037373614,0.0005088868,0.008793791,-0.041294556,-0.020737935,0.044127606,-0.00997234,0.006300706,-0.0324781,-0.010878917,-0.03041564,-0.009995005,0.00043026966,-0.010997905,-0.00860681,0.036195062,-0.012034802,0.036603022,-0.027537258,-0.014777196,0.052898735,0.010958242,0.013111361,-0.029690377,0.042405114,-0.017995542,0.0019675542,-0.0015185155,-0.0037339616,0.018074866,0.019548055,0.041385215,0.01936674,0.018301511,0.0067653265,0.026744004,-0.029985014,-0.0046405382,-0.011258546,0.0010935578,0.019899352,-0.005926743,0.006561347,-0.0065953434,-0.027446602,0.0049550068,-0.013428663,-0.025021508,0.021576518,-0.061375223,0.047912564,-0.0051533203,0.020896586,-0.022131797,-0.0007904213,-0.0247722,-0.026064072,-0.0069806385,-0.0104709575,-0.0050428314,0.04034265,-0.032976717,0.02091925,-0.017202288,0.032840732,-0.0101083275,0.013666639,0.003141854,0.014709203,-0.005853084,-0.017870888,-0.053578667,0.031231558,-0.028489163,-0.03601375,0.0321608,-0.0066066757,-0.024069604,-0.009966674,-0.023185693,0.020171326,-0.024522891,0.03254609,-0.04723263,-0.026608018,-0.00348182,-0.032523427,-0.046212733,0.004294906,0.0053714653,-0.0058814143,0.029078439,0.031684846,0.039844032,0.03277274,-0.02230178,-0.042745076,-0.009269744,-0.0121594565,0.023412336,0.01014799,0.021157227,-0.0076492387,-0.05385064,0.019933349,0.007252611,-0.00035129837,-0.025066838,-0.0026149063,0.018233519,-0.010419963,0.052762747,-0.0041022585,-0.0046235397,0.00033748723,0.016930314,0.037509598,0.03685233,0.00391811,0.008833454,-0.0073772655,-0.021780498,0.0037962887,-0.0017522422,-0.012714734,0.019933349,-0.00873713,-0.0045583798,0.01788222,0.03925476,-0.022698406,0.028375842,-0.031480867,-0.01526448,-0.013507988,0.032863393,0.012318107,0.01685099,0.027945219,0.007943876,-0.02769591,0.015015172,0.028239856,0.050496306,0.00014368883,0.010629608,0.0040512634,-0.029214425,-0.006419694,0.03324869,-0.0015071833,-0.0048983456,0.016284378,0.011876151,-0.020477295,-0.028443836,0.025157496,0.008283842,0.029735707,0.014153924,-0.012034802,0.024636215,-0.03601375,0.0024477562,-0.0050201667,0.0021899487,0.00981369,-0.0036773006,0.014663873,-0.042949058,-0.015819758,0.006357367,-0.0005329678,0.014550552,-0.026789334,0.004816187,0.0021941983,-0.008833454,-0.017644243,-0.013847955,0.017338274,-0.018675474,0.0011353453,0.00028206568,-0.0115645155,-0.009383066,0.0009901514,0.023593651,-0.03447257,0.01269207,-0.052853405,-0.022199789,0.012057466,0.020533957,-0.009094095,0.014731866,-0.020601949,-0.023321679,0.0021786164,0.00025550582,-0.028171862,0.012454093,0.010295308,0.024953516,-0.00094623916,-0.06028733,0.029871693,-0.045782108,-0.0120914625,0.042677086,-0.005532949,-0.016046403,0.021621848,0.012964043,-0.014289911,0.035175163,-0.011944144,-0.046394046,0.021270549,-0.0026857327,-0.009791025,0.01346266,-0.02122522,-0.011071565,0.009077096,0.017258948,-0.035333816,-0.017972877,-0.011473858,0.041861165,0.018471494,0.0074792556,-0.010567281,-0.049499072,-0.0069806385,0.000967487,-0.017621579,0.03129955,-0.004646204,-0.019661376,-0.017689573,-0.013326673,-0.0125220865,0.0066236737,0.013983942,-0.018822793,0.009122425,0.03576444,0.02481753,0.050904267,0.021723837,-0.022335777,-0.037373614,0.006142055,-0.00028277392,-0.004371398,-0.009394398,0.01081659,-0.0001783937,0.035628453,0.01742893,-0.025474798,-0.031435538,0.009434061,0.041294556,-0.0016559184,0.0021191223,0.03277274,-0.006918311,-0.0019151426,0.017066302,0.008878782,-0.020975912,0.006181718,-0.012046134,-0.010244314,0.024862858,-0.031367544,-0.015343806,-0.016715003,-0.028126534,0.007921211,-0.030664947,-0.0054961196,-0.010102661,0.0057057654,0.0048388517,-0.009037433,0.0019519724,-0.030846262,0.026993312,0.016839657,0.050949596,0.011502189,-0.031684846,-0.007246945,0.010323639,0.011439861,0.0016417532,-0.022596417,-0.019536722,0.015219152,-0.010742931,-0.052445445,-0.0035979752,0.017746232,-0.020873923,0.023797631,-0.00025957832,-0.033679314,0.00078971306,0.016839657,0.02667601,0.012782727,-0.030596955,-0.057023656,-0.016715003,-0.024001611,-0.032092806,-0.018052204,0.015491124,-0.040931925,0.010810924,0.024318913,0.006419694,-0.006119391,0.010102661,-0.011286876,0.021474529,0.02667601,-0.031888824,-0.02554279,-0.0044252262,-0.0011424279,-0.010810924,-0.015151158,0.02086259,-0.005428126,0.0030540293,0.033112705,0.03556046,-0.0060343994,-0.0025256653,-0.007722898,-0.020125996,-0.01232944,0.02615473,0.005076828,-0.043946292,0.037237626,-0.016884986,0.006736996,0.0042609093,-0.009343403,0.033430006,-0.040773273,0.02765058,0.017406268,-0.039073445,0.042835735,-0.013949945,-0.017258948,-0.0054989527,0.0058247535,0.016613012,-0.009995005,0.02615473,-0.01014799,-0.0053516338,0.021644512,-0.02055662,0.006850318,-0.008527485,0.040886596,0.04313037,-0.035220493,0.013519321,0.035855096,0.019446064,0.01958205,0.007292274,0.015117162,0.02323102,0.014629877,0.014040602,-0.017156959,0.0054196273,-0.038416177,0.023389671,-0.004581044,0.032500766,-0.0010949743,-0.013077365,-0.005527283,0.03186616,-0.0049465075,-0.017530922,0.003376997,-0.03397395,0.016635677,-0.050586965,-0.013541985,-0.0071392893,0.012374768,0.018958779,-0.0020327142,0.023525657,0.029939687,0.020737935,0.016046403,0.014051935,0.009354736,-0.017338274,0.0069296435,-0.012567416,-0.0104709575,-0.0137799615,-0.00044833036,0.030868927,-0.013202019,-0.0027395606,0.0053912965,-0.0037962887,0.012374768,-0.012998039,-0.0058247535,-0.0054989527,0.008317838,0.024250919,0.011660839,0.0057255966,-0.008873116,-0.0050456645,-0.022109132,-0.024477564,0.007110959,0.00079325435,0.015604447,0.046008755,0.04460356,0.01392728,0.00760391,-0.04410494,-0.014244582,-0.004255243,0.020216655,0.00046249563,-0.017734902,0.02903311,-0.013111361,0.002403844,-0.02436424,-0.008561481,0.009003437,-0.02518016,0.02003534,-0.021032574,0.012420096,0.008329171,0.039640054,-0.042427775,-0.02260775,-0.0034959854,-0.0066690026,-0.021610515,-0.025044173,-0.00960971,-0.014357904,0.01048229,0.008765461,0.010102661,-0.017066302,0.00041787507,-0.026404038,-0.012238782,-0.03494852,-0.037010983,-0.0227664,-0.042745076,0.040410645,-0.018630145,0.0016035071,0.011473858,0.0073602675,0.016227718,-0.01479986,0.015763097,0.02440957,0.008266844,0.022290448,0.0066973334,0.01609173,0.0041702515,0.014414565,-0.018097531,0.014833856,0.012533419,0.010969575,-0.035152502,0.03771358,-0.004691533,0.037532263,-0.014663873,0.009621042,0.030800933,0.008890115,0.014187921,0.025293482,0.009179086,0.002643237,0.015683772,0.020533957,0.0027905556,0.015774429,-0.008992105,-0.022369772,-0.024341578,-0.016057735,0.018981444,-0.027265286,0.015944412,-0.002457672,-0.016896319,-0.013145358,-0.015955744,-0.0032948386,0.031979483,-0.0113832,-0.008164854,0.054802544,-0.021440532,-0.013666639,-0.033747308,-0.007921211,0.028375842,-0.005286474,0.04136255,0.021882487,0.025066838,0.018641477,-0.02189382,0.030347645,-0.008057198,0.008788126,-0.016227718,0.034268588,-0.025474798,0.027537258,0.013292677,-0.0010829339,0.022007143,0.008346169,-0.042994387,0.0146072125,-0.0024831695,0.036467038,0.020375306,-0.0056037754,0.00031004206,-0.012340771,0.013575981,-0.020125996,0.016205054,0.010023336,-0.0067029996,-0.008057198,-0.009621042,-0.024341578,0.01222745,0.010153656,0.011762829,-0.0031276885,0.02821719,-0.037056312,-0.016839657,-0.015071833,-0.015695104,-0.0044280593,-0.01705497,0.03485786,0.0029378743,0.008249845,0.042541098,0.03855216,0.01670367,0.009485056,0.016658342,0.017326942,-0.00492101,0.03900545,0.032750074,-0.015899085,-0.026698675,-0.011145224,0.02307237,0.015593114,-0.040206663,0.020103332,-0.016975643,-0.022528423,0.028035875,-0.025860092,0.023185693,0.024228254,0.02903311,0.03218346,-0.020001343,-0.013757297,-0.002155952,-0.011417197,-0.005297806,0.041951824,-0.022109132,-0.01721362,-0.038914792,-0.027514594,0.01402927,0.0021205388,-0.026358709,0.013077365,0.02765058,0.04424093,0.03494852,0.019264748,0.0020582117,0.005008835,0.026132066,0.011626842,0.061012592,0.002657402,-0.0038472838,-0.0068163215,-0.033769973,0.011077231,0.013859287,0.0010928495,0.020635946,-0.0009363234]},{"id":"valid-parenthesis-string","name":"Valid Parenthesis String","description":"You are given a string `s` which contains only three types of characters: `'('`, `')'` and `'*'`. \n    \nReturn `true` if `s` is **valid**, otherwise return `false`.\n\nA string is valid if it follows all of the following rules:\n\n* Every left parenthesis `'('` must have a corresponding right parenthesis `')'`.\n* Every right parenthesis `')'` must have a corresponding left parenthesis `'('`.\n* Left parenthesis `'('` must go before the corresponding right parenthesis `')'`.\n* A `'*'` could be treated as a right parenthesis `')'` character or a left parenthesis `'('` character, or as an empty string `\"\"`.\n\n**Example 1:**\n\n```java\nInput: s = \"((**)\"\n\nOutput: true\n```\n\nExplanation: One of the `'*'` could be a `')'` and the other could be an empty string.\n\n**Example 2:**\n\n```java\nInput: s = \"(((*)\"\n\nOutput: false\n```\n\nExplanation: The string is not valid because there is an extra `'('` at the beginning, regardless of the extra `'*'`.\n\n**Constraints:**\n* `1 <= s.length <= 100`\n","difficulty":"Medium","concepts":[],"solutions":{"python":"class Solution:\n    def checkValidString(self, s: str) -> bool:\n        leftMin, leftMax = 0, 0\n\n        for c in s:\n            if c == \"(\":\n                leftMin, leftMax = leftMin + 1, leftMax + 1\n            elif c == \")\":\n                leftMin, leftMax = leftMin - 1, leftMax - 1\n            else:\n                leftMin, leftMax = leftMin - 1, leftMax + 1\n            if leftMax < 0:\n                return False\n            if leftMin < 0:\n                leftMin = 0\n        return leftMin == 0\n","javascript":"class Solution {\n    /**\n     * @param {string} s\n     * @return {boolean}\n     */\n    checkValidString(s) {\n        let leftMin = 0;\n            let leftMax = 0;\n\n        for (const c of s) {\n            if (c === '(') {\n                leftMin++;\n                leftMax++;\n            } else if (c === ')') {\n                leftMin--;\n                leftMax--;\n            } else {\n                leftMin--;\n                leftMax++;\n            }\n            if (leftMax < 0) {\n                return false;\n            }\n            if (leftMin < 0) {\n                leftMin = 0;\n            }\n        }\n        return leftMin === 0;\n    }\n}\n","cpp":"class Solution {\npublic:\n    bool checkValidString(string s) {\n        int leftMin = 0, leftMax = 0;\n\n        for (char c : s) {\n            if (c == '(') {\n                leftMin++;\n                leftMax++;\n            } else if (c == ')') {\n                leftMin--;\n                leftMax--;\n            } else {\n                leftMin--;\n                leftMax++;\n            }\n            if (leftMax < 0) {\n                return false;\n            }\n            if (leftMin < 0) {\n                leftMin = 0;\n            }\n        }\n        return leftMin == 0;\n    }\n};\n","java":"class Solution {\n    public boolean checkValidString(String s) {\n        int leftMin = 0, leftMax = 0;\n\n        for (char c : s.toCharArray()) {\n            if (c == '(') {\n                leftMin++;\n                leftMax++;\n            } else if (c == ')') {\n                leftMin--;\n                leftMax--;\n            } else {\n                leftMin--;\n                leftMax++;\n            }\n            if (leftMax < 0) {\n                return false;\n            }\n            if (leftMin < 0) {\n                leftMin = 0;\n            }\n        }\n        return leftMin == 0;\n    }\n}\n","csharp":"public class Solution {\n    public bool CheckValidString(string s) {\n        int leftMin = 0, leftMax = 0;\n\n        foreach (char c in s) {\n            if (c == '(') {\n                leftMin++;\n                leftMax++;\n            } else if (c == ')') {\n                leftMin--;\n                leftMax--;\n            } else {\n                leftMin--;\n                leftMax++;\n            }\n            if (leftMax < 0) {\n                return false;\n            }\n            if (leftMin < 0) {\n                leftMin = 0;\n            }\n        }\n        return leftMin == 0;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def checkValidString(self, s: str) -> bool:\n        ","javascript":"class Solution {\n    /**\n     * @param {string} s\n     * @return {boolean}\n     */\n    checkValidString(s) {}\n}\n","cpp":"class Solution {\npublic:\n    bool checkValidString(string s) {\n        \n    }\n};\n","java":"class Solution {\n    public boolean checkValidString(String s) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public bool CheckValidString(string s) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/QhPdNS143Qg","embedding":[0.01791833,-0.014880197,0.0029882363,-0.018982785,0.026367443,0.020269003,-0.012562789,0.00322663,0.017142165,0.07287083,0.018860817,-0.056948356,-0.03290941,0.05743623,-0.00058974704,0.05570649,-0.025768688,0.036036246,0.01578942,0.023551073,0.063734256,0.023595424,0.000078049656,0.009252999,0.104316615,0.001029805,-0.013893358,0.0008336847,0.024526823,0.019004961,-0.012784551,-0.013926622,-0.020302266,-0.0011607829,-0.02718796,0.025147755,-0.007905798,0.01445885,0.013438747,-0.044684943,-0.012196883,0.001325718,0.00043035593,0.0039418107,-0.008160824,-0.013937711,0.011387453,0.04763437,-0.042334273,-0.027675835,-0.046924736,-0.009203102,0.05335582,-0.035770133,-0.03279853,-0.006752638,-0.031135315,0.023063198,0.040648885,0.018051388,0.009580097,-0.00849901,-0.023595424,0.04056018,-0.008049943,0.019426309,0.0142481765,-0.026921848,0.0102010295,-0.0011510808,-0.061206177,0.038630854,0.027431898,-0.031090964,-0.04741261,0.021588482,0.02995998,0.04470712,0.05991996,-0.0015786648,-0.05685965,-0.046082042,0.029605161,-0.0021580167,-0.038342565,0.06049654,-0.053311467,0.02148869,-0.06577446,-0.025746511,-0.02995998,-0.03486091,0.031068787,-0.02143325,0.08444678,-0.018029211,0.012939784,-0.015656363,0.005860048,-0.020246826,-0.009862843,0.0029355679,0.033020288,0.04282215,-0.0002898492,0.027875422,0.041912924,0.016565586,-0.021765891,-0.03370775,0.003101889,0.003517692,-0.02293014,0.0004230794,0.026567029,-0.019969624,-0.03854215,-0.030159565,0.018517086,0.007018752,0.03761075,-0.019282164,0.047678724,-0.057524934,-0.033020288,-0.002634804,0.0011566249,-0.047678724,-0.0038669663,0.0021316826,-0.014070768,-0.04016101,0.0443523,0.013172634,-0.013427659,-0.0072571454,-0.026278738,-0.029582985,0.02247553,0.026256563,-0.0015135224,0.027853245,-0.035881013,0.021133872,0.046082042,-0.021921124,-0.0209232,0.05007375,-0.034639146,0.07641902,0.034727853,-0.0050755665,0.032754175,0.05091644,-0.016576672,0.010012533,-0.010561392,-0.013006313,0.07872534,0.027986303,0.000043789234,-0.016432527,-0.0043576136,-0.0074012903,-0.007617508,-0.0024407627,0.058323275,-0.013161546,-0.014525379,-0.0443523,0.0018794287,-0.044374477,-0.0539324,-0.002048522,0.021765891,0.008715227,-0.009652169,0.004235645,-0.02172154,0.04763437,-0.010877402,0.023462368,-0.003686785,-0.049275406,0.030203918,-0.0019265531,-0.004831629,-0.015855948,0.0152461035,-0.03987272,0.02368413,-0.0052197115,0.028496353,0.0062481305,0.019204546,-0.050428566,0.01261823,-0.0074290107,0.002206527,0.026456147,-0.042422976,-0.0209232,-0.022009829,0.007495539,0.018993873,-0.0139931515,-0.006614037,0.0155343935,0.0052058515,-0.050206807,-0.00093139836,0.01647688,0.011664655,0.017297398,0.047856133,0.05322276,0.0419351,-0.0089480765,0.03497179,-0.011819889,-0.039894894,-0.00095080247,0.06697197,0.046924736,0.018162267,0.011171236,0.03266547,0.023240605,0.020845583,-0.0069854874,0.024172004,0.015279368,-0.020557292,0.0037616296,-0.025103403,-0.06918959,-0.018395117,0.030093037,-0.02022465,-0.011553775,-0.02056838,0.015567658,0.013682685,-0.0056466023,0.027298842,-0.00763414,-0.0053998926,0.0626698,-0.027609307,0.022841435,0.0231519,-0.005715903,-0.019914184,-0.044551887,-0.008576626,0.023528896,0.014713876,-0.0510495,0.03601407,-0.04665862,-0.053444523,0.0029993244,-0.024149828,-0.09420429,-0.0043409816,-0.027298842,0.018938433,0.047545668,-0.0047651003,-0.017552424,-0.013338955,0.014292529,0.03053656,-0.029205991,0.0015855948,-0.021477602,0.059254676,0.05623872,-0.03111314,0.015589834,-0.09535745,-0.0062425863,0.03922961,-0.0034123552,0.0059487526,0.018384028,0.025790863,-0.057258822,-0.04503976,-0.04532805,-0.00967989,0.020701436,-0.012030561,0.038098626,-0.03634671,-0.0094304085,-0.0040831836,0.028762467,0.03122402,-0.040737588,0.026411796,0.029893452,-0.0063922754,0.008953621,-0.042556033,-0.04539458,-0.00619269,0.040116657,-0.036945466,0.023418015,0.018528175,0.023063198,0.020501852,-0.018916257,-0.01977004,-0.050251156,-0.036923293,-0.008438026,0.018794287,-0.018195532,0.002504519,-0.011010459,0.03785469,0.0004133773,0.00058212393,0.043110438,0.015811596,0.033397283,0.0022827575,-0.015778331,-0.02811936,-0.02581304,0.025857393,0.0053333645,-0.06599622,0.022564234,-0.012629318,-0.005391577,-0.008537818,0.06994358,-0.005749167,-0.01866123,0.05916597,0.0568153,-0.018871905,-0.02956081,0.0020984183,0.0037089612,0.06125053,0.023528896,0.00737357,-0.000038461763,-0.0011878101,-0.024415942,0.0021081204,-0.0036119407,-0.05583955,0.032598943,-0.053976752,0.011237765,0.03288723,-0.022885788,-0.014447763,-0.0064089075,-0.043642666,0.03530443,-0.014869109,0.0009300123,-0.028962053,0.0010880174,-0.03838692,-0.006176058,0.028873349,-0.022165062,0.010267558,-0.010777609,-0.027387546,0.025103403,0.0062481305,0.021843508,-0.050339863,0.06337944,-0.033042464,0.0039002306,-0.0029910083,0.013150457,0.025325164,-0.016166413,0.017596776,-0.017131077,0.011786624,-0.0074400986,0.0062370426,-0.0026056978,0.05335582,0.022054182,0.017607864,0.057170115,-0.011642479,-0.0033513708,0.030336974,-0.010927298,-0.008809476,-0.006780358,-0.0120970905,-0.0014677839,-0.024415942,0.047501314,0.04113676,0.015756154,0.05650483,-0.02448247,0.030691793,-0.030603088,0.029716043,0.003401267,-0.021610659,0.046702974,0.04741261,-0.0097519625,-0.006747094,-0.028075008,0.009036781,-0.024504647,0.020013977,0.007412378,0.040914997,-0.05007375,-0.021521954,-0.004404738,0.012839992,-0.013405483,0.0060873535,0.013915535,-0.034350857,0.010383982,0.0014594679,0.031889305,0.005469193,-0.042777795,-0.044330124,-0.020191384,0.014702788,-0.0041968366,0.031623192,-0.004022199,0.010383982,0.05180349,-0.0030076404,0.022608586,0.030447856,-0.0012820588,0.035991892,-0.0089480765,-0.031889305,0.024460295,0.014192737,-0.022996668,0.012108179,0.029582985,-0.039894894,0.00881502,-0.014702788,0.023484543,0.056904003,0.00013106452,-0.0395179,-0.0015259964,-0.007506627,-0.03894132,-0.014447763,-0.02257532,0.023351487,0.042356446,0.0096854335,-0.022952316,0.011952945,-0.003797666,0.015722891,-0.07593114,-0.025480397,-0.0026375758,0.027409723,-0.017208694,-0.023994595,0.010306366,0.027321018,-0.0231519,-0.020590557,-0.027010553,-0.0265005,-0.0051143747,-0.031002259,-0.008909268,-0.021167137,-0.0074456427,0.02909511,0.0063867313,-0.010627921,-0.023462368,0.01503543,-0.013117193,0.0023756202,0.0039168624,0.04228992,-0.03865303,-0.0048621213,-0.021355633,-0.0054581054,-0.008022223,-0.05065033,-0.021754803,-0.0037311374,-0.009480304,-0.015068695,-0.008964709,0.009607817,0.007961238,-0.03175625,0.028740292,0.0063756434,-0.04515064,-0.0015800508,-0.0003335085,-0.030093037,-0.04648121,0.021300193,-0.019282164,-0.035237905,-0.046126395,-0.010184397,-0.021610659,0.012950872,0.012263412,-0.0069910316,-0.015855948,0.0078559015,0.023861539,0.0003814991,-0.025081227,0.015811596,-0.006043001,0.012485173,0.014525379,-0.004598779,-0.0102010295,0.00015393367,0.02137781,-0.021244753,-0.021943301,0.021344544,-0.011631391,-0.020135945,0.0009840667,-0.012363204,-0.0010568321,-0.01964807,-0.017197605,-0.025014699,0.03262112,0.008487922,-0.030048685,0.016643202,-0.010012533,-0.003661837,-0.025946097,-0.0015675767,0.01694258,-0.027609307,0.0003073476,0.051714785,0.009313983,-0.019393044,-0.00849901,0.059032913,-0.06400037,0.021056255,0.02016921,-0.0028385473,-0.017031284,0.020424236,0.016510144,-0.008859373,-0.027165785,0.0018946748,-0.021987654,-0.01232994,-0.019459572,-0.0100735165,-0.042312097,-0.025280813,0.03024827,0.044684943,0.010378439,-0.0014968902,-0.010217662,-0.02430506,-0.014048591,-0.001474714,-0.0031933656,0.011930769,-0.006802534,0.059432086,0.033685572,0.008953621,0.0022841436,0.018184444,0.034417387,0.024548998,-0.0036091686,0.0096854335,-0.01676517,-0.023750657,-0.003966759,0.0035648162,0.016499056,-0.015767243,0.051005147,0.02437159,-0.007828182,0.016510144,0.044463184,0.014503202,0.01215253,0.028274592,-0.014048591,-0.03279853,0.016521232,0.018217707,0.018583614,-0.041225463,0.025036875,0.018117916,0.003090801,-0.006492068,-0.025901744,0.049807634,-0.034661323,-0.007611964,-0.009862843,0.02051294,-0.03847562,0.0052058515,-0.030802673,-0.008876004,0.0013998696,-0.0010963335,0.03716723,0.022486618,-0.0035731322,0.01751916,0.054242864,0.024593351,0.011631391,-0.014569731,0.019492837,-0.027476251,-0.033375107,-0.0289177,-0.012939784,0.032111067,-0.010533672,0.019880919,-0.025657807,0.02465988,-0.06014172,0.018860817,-0.009125486,0.030470032,-0.033330753,-0.02523646,0.01578942,0.028673762,-0.02707708,-0.027698012,-0.04069324,0.0041718883,-0.003209998,-0.04200163,0.038985673,-0.004249505,0.001898833,-0.028452002,0.0110381795,-0.02114496,0.001623017,0.00055232475,0.012651494,-0.013760301,-0.031423606,0.010450511,-0.017807448,-0.013948799,-0.030381327,0.01325025,-0.0095911855,0.018472733,0.0051864474,0.016787346,-0.065552704,0.016898228,-0.014558643,0.036612824,-0.033508163,-0.017352838,-0.012496261,0.021821333,-0.033752102,-0.013139369,-0.00085447484,-0.0081774555,0.01774092,-0.004867665,0.0071019125,-0.024526823,-0.008853829,0.0054581054,-0.009458128,0.020590557,-0.03173407,-0.020257914,0.003074169,-0.010278646,-0.01648797,-0.033197697,0.016343823,0.017075635,0.01261823,-0.01244082,0.012241235,0.0018877449,0.0055468096,-0.023839362,0.013150457,0.035060495,-0.02776454,0.014469938,0.039939247,-0.033020288,-0.015878124,-0.0025128352,0.030292623,-0.009408232,0.01797377,-0.012917608,0.01330569,-0.029627338,0.019892007,-0.05663789,0.04200163,0.003842018,0.005297328,0.030492207,-0.025214283,-0.0056576906,0.018572526,0.01923781,0.005993105,-0.0035038318,-0.023196254,0.0046431315,0.009541289,-0.021699363,0.013616157,0.02275273,0.03628018,-0.02397242,0.0103618065,0.023750657,0.0053832605,-0.011320925,-0.017219782,0.043487433,0.0078559015,-0.022708379,0.0076729483,-0.02581304,-0.049053647,0.021333458,-0.0056715505,0.0026639102,0.0067193736,-0.023994595,0.01613315,-0.013172634,0.019736774,-0.008615434,0.0068801506,0.05419851,-0.051670432,0.005771343,0.010611288,-0.05091644,-0.008194088,-0.0059653847,-0.03936267,-0.030625265,-0.024127653,0.035060495,-0.036967643,0.008598803,-0.020213561,0.024792938,-0.01272911,0.029449929,-0.011720096,-0.021111695,-0.007772741,0.0050228983,-0.04477365,0.0012397855,0.032399356,-0.04384225,0.0014151157,0.004548883,0.031445783,-0.039784014,0.03295376,0.016177502,0.020379882,0.038519975,0.0146362595,-0.006203778,-0.014658436,-0.0031656455,-0.03962878,0.019880919,0.010738801,-0.018805375,0.06129488,-0.032044537,0.017995946,-0.034084745,0.026123505,0.024061123,0.049186703,0.030980082,0.007611964,-0.0028718116,0.026145682,-0.000884274,-0.0031684176,-0.012019474,-0.039030027,0.00016320261,-0.0021497007,-0.04257821,-0.021865685,0.0051116026,-0.027010553,0.010533672,-0.030603088,0.021643924,-0.014802581,-0.021688275,0.01624403,0.012928696,0.017230868,-0.00679699,0.0017089497,0.029472105,0.023085373,-0.007074192,-0.026145682,-0.012684759,0.030026508,0.004127536,-0.020036152,-0.0260348,-0.0020415918,0.04038277,-0.0010083219,-0.005316732,-0.0021621748,-0.0027567728,-0.019892007,0.030403502,-0.010561392,0.021699363,-0.036768056,0.035149198,-0.0059542963,0.003088029,0.022142887,0.0134831,-0.04186857,-0.023551073,-0.013338955,-0.0042273286,-0.0052391156,0.015778331,0.0060485452,-0.00053881115,0.0019875376,-0.008277249,0.0049175615,0.008072119,-0.01434797,0.034195624,0.018627966,0.003672925,0.039961424,-0.013372219,0.030026508,-0.011509422,-0.00944704,0.02091211,-0.013660509,-0.012063826,-0.0013506662,-0.01146507,-0.06448825,0.03266547,0.03168972,-0.009180927,0.017785273,-0.0013458151,-0.019725686,0.0031850496,0.016044445,0.0034040392,-0.03922961,-0.024282886,-0.020767964,0.007822637,-0.06142794,-0.022264855,0.020767964,-0.018539263,-0.009258543,-0.00013721493,0.028762467,-0.0076008756,0.0070076636,-0.019182371,0.008255072,-0.011320925,-0.00146224,0.048654474,-0.00093486335,-0.03007086,-0.020812318,-0.046170745,-0.014481027,-0.023595424,-0.033286404,0.010389526,-0.048255306,-0.0039196345,-0.000015473495,-0.013272426,-0.0051143747,0.001322253,-0.011476158,-0.029117286,-0.009435953,-0.03191148,0.016609937,0.01641035,-0.0130950175,0.013959887,-0.009962636,0.018384028,-0.0003463291,0.023950243,0.0033070184,0.01739719,-0.016232943,0.004130308,-0.029117286,-0.040538006,-0.015434601,-0.0054775095,0.028540706,-0.020479675,-0.028474178,0.033264227,0.028740292,0.0143147055,-0.009790771,0.003808754,0.023129726,-0.0067914464,0.011365278,0.002508677,-0.0014885741,-0.017042372,0.009058958,0.032044537,0.018461647,0.005993105,-0.0022744415,0.021854596,0.0071019125,0.023994595,-0.004224557,-0.005860048,0.030514384,0.004124764,0.0180403,0.0130174,-0.011509422,0.0071019125,0.0385865,-0.017752009,-0.054597683,-0.023041021,0.016554497,-0.06559706,0.039650958,-0.04275562,-0.0133500425,-0.03479438,0.06781467,0.019880919,0.028452002,0.0046459036,0.0044989865,-0.019537188,-0.018483821,-0.013072841,-0.0058156955,0.024925994,0.015745068,-0.0008461588,0.022453353,-0.0042994013,0.016055534,-0.026700085,0.046525564,-0.030026508,0.03071397,0.003096345,0.040138833,0.017984858,0.040826295,0.06599622,-0.0075786994,-0.030847026,-0.017674392,0.012174707,-0.013970975,0.029627338,-0.003354143,-0.033108994,0.0057990635,0.00959673,-0.04211251,-0.01169792,-0.009574553,-0.00996818,0.03013739,-0.010821962,0.010639008,-0.009275175,-0.020679262,0.030048685,0.0049563698,-0.012973049,0.03395169,0.008648699,-0.017596776,-0.007179529,-0.035814483,0.038187332,0.001020103,-0.0212004,0.0069688554,-0.04264474,0.020313354,-0.028496353,-0.014447763,-0.037211582,0.01768548,-0.023595424,-0.026323091,-0.044662766,-0.03929614,-0.000880116,0.0077505647,0.034661323,-0.02257532,-0.030226093,0.011875329,-0.024682056,-0.017097812,-0.039074376,0.0040610074,-0.01670973,-0.009341704,0.019271076,0.0010450511,-0.00018278,0.018461647,0.0065253326,-0.016122062,-0.0056188824,0.026478324,-0.013405483,0.052912295,0.01699802,-0.034616973,0.0075676115,-0.05419851,-0.0059764725,-0.016809523,-0.031955834,0.0071296324,-0.015800508,-0.009535745,0.034483913,0.011104708,-0.024282886,0.027875422,-0.01901605,-0.029228168,-0.00026801956,0.01319481,-0.008837196,-0.0037449975,0.0076064197,0.0025987676,0.019215634,0.009197558,-0.01688714,-0.03244371,0.010533672,0.0047872765,-0.0057602553,0.0027540007,0.0062370426,-0.026810966,-0.021300193,-0.01405968,-0.0012051353,0.011631391,0.014614084,0.0083382325,0.0034428474,-0.012429733,0.020978639,-0.002338198,0.021477602,-0.010882946,0.02621221,-0.0016715274,0.029161638,0.049585875,0.030980082,0.017929418,0.020013977,0.02465988,0.015013254,-0.008271704,-0.0034400753,0.00823844,-0.0136715975,-0.006331291,0.00006986354,-0.024615528,0.0015024343,-0.007329218,0.014591907,-0.021067344,0.014902374,0.043598313,0.0034317593,0.00041303082,0.019947447,0.033485986,0.00904787,-0.0012889887,0.01613315,-0.021111695,0.016876051,-0.008094295,-0.0016257891,0.010212118,0.0346835,0.0006957767,0.002514221,-0.02016921,-0.06794772,-0.02339584,0.02718796,-0.0007934904,0.00033506777,-0.034350857,0.013727037,-0.0008676419,0.03767728,0.017763097,-0.006907871,0.0050423024,-0.0065696845,-0.00009780029,-0.0039279507,-0.006602949,-0.041336346,0.010328542,0.006758182,-0.029316872,-0.022275943,0.00584896,-0.062137574,0.008055487,0.02195439,-0.0017879521,-0.0009210033,0.035215728,0.001765776,-0.0029993244,-0.015867036,-0.04994069,0.022619674,-0.08462419,0.024216358,0.008454657,0.015855948,-0.017984858,0.009585641,0.011875329,0.0039085466,-0.006564141,0.016665377,-0.03681241,-0.025946097,0.026589205,-0.051714785,-0.010345174,-0.018461647,0.00028932947,-0.0070076636,0.0029688322,0.0058711357,0.019736774,-0.019171283,-0.0034650236,0.016332734,0.009785227,-0.0063978196,-0.024682056,-0.01624403,-0.016088797,0.059299026,0.026944023,0.006115074,0.07535456,-0.037122875,-0.010505952,-0.006336835,0.010328542,-0.022730555,-0.010156677,-0.006619581,-0.020313354,-0.04326567,0.010189941,0.0007934904,-0.013627245,0.012684759,-0.03749987,-0.023528896,-0.019969624,0.01653232,-0.0017449859,-0.029272519,0.046747327,-0.016232943,-0.015567658,-0.009247455,0.0060818093,0.022032006,-0.0027650888,0.046924736,0.004995178,-0.026722262,0.00046604566,0.0050811106,-0.0072238813,0.018483821,0.066040576,-0.005264064,0.028607234,0.010494864,0.0011566249,-0.00933616,-0.008676419,-0.011642479,-0.01417056,-0.026700085,-0.00061088364,0.01861688,-0.009291807,0.043132614,0.014514291,0.030957907,0.006148338,-0.049408466,-0.02177698,-0.009546833,-0.03843127,-0.0025474853,-0.018295325,0.03295376,-0.007484451,-0.009264087,-0.000513863,0.02044641,0.021189312,0.013261338,-0.0027595449,0.0015232244,0.028052831,-0.0019196231,-0.0043770177,0.023861539,0.0035592723,-0.0073680263,0.018860817,-0.0028177572,0.02195439,-0.017264133,0.0077505647,-0.012341028,-0.01797377,0.012063826,-0.016454704,-0.010400615,0.0025904516,-0.030891377,-0.009474761,-0.026877495,0.013749214,-0.022907963,0.014469938,0.043066084,0.02177698,-0.009690978,0.0016604393,-0.011298749,-0.012806728,-0.00017948823,-0.045549814,-0.0395179,0.005571758,-0.0069522234,-0.027742365,-0.05224701,0.001029805,-0.0120970905,-0.03335293,-0.021311281,-0.015079782,0.011049267,0.008354865,-0.0011524669,0.02851853,-0.029339047,-0.011282117,-0.037145052,0.0029882363,0.0117422715,-0.010821962,0.0019972397,-0.011398542,0.00080596446,0.0022938456,-0.02736537,0.018273149,0.007329218,-0.028784644,-0.011631391,-0.04142505,-0.034661323,-0.044086188,-0.036745884,0.0044795824,-0.0021178224,0.007556523,-0.008199632,0.0034151273,0.0055634417,-0.023351487,0.052557476,0.015368072,-0.013660509,0.03370775,0.037455518,0.022608586,0.017840713,0.03151231,0.013472011,-0.0035038318,0.031357076,0.022974493,0.025147755,0.038453445,-0.0008274476,0.033020288,-0.013050665,0.041957278,-0.015168487,0.0018142863,-0.0052141673,0.013815742,-0.018849729,-0.0005734614,0.015711803,0.0071573528,0.033108994,-0.013494188,-0.0035980805,-0.01964807,-0.020379882,-0.016842786,0.016842786,-0.005125463,-0.0462151,-0.0037145054,-0.0061206175,-0.0019570454,-0.028252415,0.0033014745,0.027210137,-0.01175336,-0.015878124,0.04477365,-0.011875329,-0.05260183,-0.02978257,-0.042245567,0.020989727,-0.024992522,0.0437979,0.019614805,-0.02448247,0.0040887278,0.0024255165,0.026012626,0.0042855414,-0.02034662,0.006298027,0.019858744,0.005000722,-0.0070797363,0.009325071,-0.040471476,-0.010561392,0.02016921,-0.010871858,-0.0031517853,-0.019437397,-0.014015327,0.012928696,0.036391065,0.020978639,-0.012995224,0.0120970905,-0.0018946748,0.0152128395,0.0034899719,0.0051809032,0.007645228,-0.01497999,-0.022342471,0.05007375,0.005749167,0.0103618065,-0.008615434,0.010949475,-0.0419351,0.0024088845,-0.029250342,-0.017774185,0.008094295,0.019570453,0.011420717,0.011248852,0.014658436,0.011642479,0.028030654,-0.008748491,0.058145866,-0.0042301007,-0.0026056978,-0.008094295,0.020557292,0.00043243493,0.013871183,-0.013782478,-0.011620303,0.0018406205,0.046082042,-0.01244082,0.013948799,0.026256563,0.0044740383,0.034661323,0.042201214,-0.023373663,-0.0036119407,-0.004576603,-0.0029189358,-0.035415314,-0.022841435,0.0083382325,-0.009341704,0.008243985,0.044086188,0.01670973,-0.00044456252,-0.038874794,-0.017840713,-0.0146029955,0.00737357,0.006885695,0.0035509563,0.034439564,0.026544852,0.0025890656,0.004540567,0.03237718,0.007861446,0.004889841,0.0015398564,0.0037172772,0.0065419646,-0.013106105,0.0026181717,-0.024349414,-0.0012377064,0.02552475,-0.012352116,-0.030203918,-0.0020914883]},{"id":"minimum-interval-including-query","name":"Minimum Interval to Include Each Query","description":"You are given a 2D integer array `intervals`, where `intervals[i] = [left_i, right_i]` represents the `ith` interval starting at `left_i` and ending at `right_i` **(inclusive)**. \n\nYou are also given an integer array of query points `queries`. The result of `query[j]` is the **length of the shortest interval** `i` such that `left_i <= queries[j] <= right_i`. If no such interval exists, the result of this query is `-1`.\n\nReturn an array `output` where `output[j]` is the result of `query[j]`.\n\nNote: The length of an interval is calculated as `right_i - left_i + 1`.\n\n**Example 1:**\n\n```java\nInput: intervals = [[1,3],[2,3],[3,7],[6,6]], queries = [2,3,1,7,6,8]\n\nOutput: [2,2,3,5,1,-1]\n```\n\nExplanation:\n- Query = 2: The interval `[2,3]` is the smallest one containing 2, it's length is 2.\n- Query = 3: The interval `[2,3]` is the smallest one containing 3, it's length is 2.\n- Query = 1: The interval `[1,3]` is the smallest one containing 1, it's length is 3.\n- Query = 7: The interval `[3,7]` is the smallest one containing 7, it's length is 5.\n- Query = 6: The interval `[6,6]` is the smallest one containing 6, it's length is 1.\n- Query = 8: There is no interval containing 8.\n\n\n**Constraints:**\n* `1 <= intervals.length <= 1000`\n* `1 <= queries.length <= 1000`\n* `1 <= left_i <= right_i <= 10000`\n* `1 <= queries[j] <= 10000`\n","difficulty":"Hard","concepts":["Heap Properties","Push and Pop"],"solutions":{"python":"class Solution:\n    def minInterval(self, intervals: List[List[int]], queries: List[int]) -> List[int]:\n        intervals.sort()\n        minHeap = []\n        res = {}\n        i = 0\n        for q in sorted(queries):\n            while i < len(intervals) and intervals[i][0] <= q:\n                l, r = intervals[i]\n                heapq.heappush(minHeap, (r - l + 1, r))\n                i += 1\n\n            while minHeap and minHeap[0][1] < q:\n                heapq.heappop(minHeap)\n            res[q] = minHeap[0][0] if minHeap else -1\n        return [res[q] for q in queries]\n","javascript":"/**\n * const { MinPriorityQueue } = require('@datastructures-js/priority-queue');\n */\n\nclass Solution {\n    /**\n     * @param {number[][]} intervals\n     * @param {number[]} queries\n     * @return {number[]}\n     */\n    minInterval(intervals, queries) {\n        intervals.sort((a, b) => a[0] - b[0]);\n        const minHeap = new MinPriorityQueue(entry => entry[0]);\n        const res = {};\n        let i = 0;\n\n        const sortedQueries = [...queries].sort((a, b) => a - b);\n\n        for (const q of sortedQueries) {\n            while (i < intervals.length && intervals[i][0] <= q) {\n                const [l, r] = intervals[i];\n                minHeap.enqueue([r - l + 1, r]);\n                i += 1;\n            }\n\n            while (!minHeap.isEmpty() && minHeap.front()[1] < q) {\n                minHeap.dequeue();\n            }\n\n            res[q] = !minHeap.isEmpty() ? minHeap.front()[0] : -1;\n        }\n\n        return queries.map(q => res[q]);\n    }\n}\n","cpp":"class Solution {\npublic:\n    std::vector<int> minInterval(std::vector<std::vector<int>>& intervals, std::vector<int>& queries) {\n        // Sort intervals based on the start value\n        std::sort(intervals.begin(), intervals.end(), [](const std::vector<int>& a, const std::vector<int>& b) {\n            return a[0] < b[0];\n        });\n\n        // Prepare to handle queries\n        std::vector<int> sortedQueries = queries;\n        std::sort(sortedQueries.begin(), sortedQueries.end());\n        std::map<int, int> res;\n\n        // Priority queue to store intervals, sorted by their size then end point\n        auto cmp = [](const std::vector<int>& a, const std::vector<int>& b) {\n            return a[0] > b[0] || (a[0] == b[0] && a[1] > b[1]);\n        };\n        std::priority_queue<std::vector<int>, std::vector<std::vector<int>>, decltype(cmp)> minHeap(cmp);\n\n        int i = 0;\n        for (int q : sortedQueries) {\n            while (i < intervals.size() && intervals[i][0] <= q) {\n                int l = intervals[i][0];\n                int r = intervals[i][1];\n                minHeap.push({r - l + 1, r});\n                i++;\n            }\n\n            while (!minHeap.empty() && minHeap.top()[1] < q) {\n                minHeap.pop();\n            }\n\n            res[q] = minHeap.empty() ? -1 : minHeap.top()[0];\n        }\n\n        // Build the result vector from the map\n        std::vector<int> result(queries.size());\n        for (int j = 0; j < queries.size(); j++) {\n            result[j] = res[queries[j]];\n        }\n        return result;\n    }\n};\n","java":"class Solution {\n    public int[] minInterval(int[][] intervals, int[] queries) {\n        Arrays.sort(intervals, Comparator.comparingInt(a -> a[0]));\n        PriorityQueue<int[]> minHeap = new PriorityQueue<>((a, b) -> Integer.compare(a[0], b[0]));\n        Map<Integer, Integer> res = new HashMap<>();\n        int i = 0;\n        for (int q : Arrays.stream(queries).sorted().toArray()) {\n            while (i < intervals.length && intervals[i][0] <= q) {\n                int l = intervals[i][0];\n                int r = intervals[i][1];\n                minHeap.offer(new int[]{r - l + 1, r});\n                i++;\n            }\n\n            while (!minHeap.isEmpty() && minHeap.peek()[1] < q) {\n                minHeap.poll();\n            }\n            res.put(q, minHeap.isEmpty() ? -1 : minHeap.peek()[0]);\n        }\n        int[] result = new int[queries.length];\n        for (int j = 0; j < queries.length; j++) {\n            result[j] = res.get(queries[j]);\n        }\n        return result;\n    }\n}\n","csharp":"public class Solution {\n    public int[] MinInterval(int[][] intervals, int[] queries) {\n        // Sort the intervals based on the start point\n        Array.Sort(intervals, (a, b) => a[0].CompareTo(b[0]));\n\n        // Initialize the priority queue to keep track of the intervals by their size\n        var minHeap = new PriorityQueue<(int Size, int End), int>();\n        var res = new Dictionary<int, int>();\n        int i = 0;\n\n        // Sort the queries to process in order\n        int[] sortedQueries = queries.OrderBy(q => q).ToArray();\n        foreach (int q in sortedQueries) {\n            // Add new intervals that can cover this query\n            while (i < intervals.Length && intervals[i][0] <= q) {\n                int l = intervals[i][0];\n                int r = intervals[i][1];\n                minHeap.Enqueue((r - l + 1, r), r - l + 1);\n                i++;\n            }\n\n            // Remove intervals that can no longer cover any query point >= q\n            while (minHeap.Count > 0 && minHeap.Peek().End < q) {\n                minHeap.Dequeue();\n            }\n\n            // Store the result for this query\n            res[q] = minHeap.Count == 0 ? -1 : minHeap.Peek().Size;\n        }\n\n        // Prepare the result in the same order as the original queries\n        int[] result = new int[queries.Length];\n        for (int j = 0; j < queries.Length; j++) {\n            result[j] = res[queries[j]];\n        }\n\n        return result;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def minInterval(self, intervals: List[List[int]], queries: List[int]) -> List[int]:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[][]} intervals\n     * @param {number[]} queries\n     * @return {number[]}\n     */\n    minInterval(intervals, queries) {}\n}\n","cpp":"class Solution {\npublic:\n    vector<int> minInterval(vector<vector<int>>& intervals, vector<int>& queries) {\n        \n    }\n};\n","java":"class Solution {\n    public int[] minInterval(int[][] intervals, int[] queries) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int[] MinInterval(int[][] intervals, int[] queries) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/5hQ5WWW5awQ","embedding":[-0.07103345,0.0010597558,0.055855364,-0.038790856,-0.000097149925,-0.009345366,0.01519977,0.016739262,-0.010375307,0.015080514,0.0036752655,-0.03191735,-0.012847167,-0.012305092,0.027905999,0.0057622525,0.014093938,0.012933899,-0.020642199,0.055811998,-0.006157967,-0.0009039093,0.030269444,-0.0452307,0.05138867,0.005315041,0.0370779,0.008591882,0.024111476,0.013226619,0.036470775,-0.0068138773,0.0021642328,0.009106852,0.021769714,0.03657919,-0.02523899,0.004848857,0.013985524,0.020468736,-0.0338905,0.0039300406,-0.037554923,-0.039311245,0.0070632314,-0.005881509,0.015828578,-0.005924875,0.033630304,0.028079461,0.023807915,0.02050126,-0.008179905,-0.007448104,0.025759382,0.008711138,0.010039221,0.02697363,0.07255126,0.021346897,0.027342241,-0.0077462452,-0.0013917764,0.03460604,0.02755907,0.015817735,0.03649246,0.024761965,0.01948216,-0.032155864,-0.0639648,0.0010204554,-0.0006806424,-0.032242596,-0.0031792673,0.018875036,-0.00040249035,0.043669526,-0.014549281,-0.0016831415,-0.022149166,-0.045924556,0.033131596,0.0359287,-0.018647365,-0.019764038,0.0065862057,0.03664424,-0.014083097,-0.05724307,-0.01316157,0.012283409,0.0043013617,0.004648289,0.045534264,-0.028339658,0.110409744,0.042476963,-0.047225535,0.012521923,0.040243614,-0.03664424,-0.0064615286,-0.049567297,-0.008553936,-0.009128535,-0.017216288,0.055508435,-0.04312745,0.031136762,0.021216799,-0.013389242,-0.021552885,-0.030551322,-0.024024744,0.012185836,-0.07237779,-0.020197699,0.038270462,0.0057188864,0.01265202,-0.031093396,0.024306623,-0.030226078,-0.0143649755,0.037164632,0.013736169,-0.046878606,-0.02623641,0.0074372627,0.018506425,0.0008246309,0.045057237,0.017628264,0.00041502583,-0.033998918,-0.061623037,-0.027645802,0.035495043,-0.03295813,-0.015568381,-0.009226109,-0.028946782,0.030529639,0.03918115,0.031353593,-0.027797583,0.03954976,0.030161029,0.047529098,0.012337617,-0.012825484,0.0048298845,0.07220433,0.0028675743,-0.0029705686,-0.0054288767,0.028274609,0.006927713,-0.01759574,-0.023786232,-0.012207519,-0.010315679,-0.06747744,0.008499729,0.009123115,0.0034584356,-0.0065265778,-0.030941615,-0.054337554,0.008412997,-0.066002995,0.038227096,-0.016479066,0.005800198,0.02304901,-0.03484455,-0.047529098,0.0040818215,0.06361787,0.020739773,0.030161029,-0.015590064,-0.013150728,0.032177545,0.030616371,0.0033174963,-0.020566309,-0.024978796,-0.015297344,0.007366793,0.05425082,-0.028014414,0.043929722,0.02079398,-0.01824623,0.021401104,0.026691752,-0.0053340136,-0.00829374,-0.046141386,0.004775677,-0.023851281,0.0018959057,0.030724786,-0.018398011,-0.003967986,-0.021390261,0.035126433,-0.00096014957,0.014050572,0.025824431,0.0277759,-0.023070693,0.033998918,0.0009384666,-0.006152546,-0.0028025254,0.036535826,-0.00035641404,-0.005168681,0.027385607,0.023872964,0.036037117,0.01889672,0.023807915,0.011459456,-0.03627563,0.04310577,0.022485252,-0.0058489842,-0.018690731,-0.04557763,0.015221453,-0.011253468,-0.022940595,0.009665189,-0.032112498,-0.0041062147,-0.056809414,-0.0032687096,-0.013410925,-0.019493,-0.019373745,0.015611747,-0.039853323,-0.048960175,-0.0005166648,0.02536909,0.0031142184,0.0026046683,-0.014408342,-0.023309207,-0.054077357,-0.026062945,0.022441886,-0.015091356,-0.002938044,-0.03497465,-0.018018559,-0.0063314307,0.026214726,-0.008375052,-0.014093938,0.004179395,-0.055161506,0.006694621,-0.023981377,-0.07138038,0.02021938,0.006201333,0.00079142884,0.03484455,-0.028274609,0.019655623,-0.0042878096,0.0057839355,-0.008532253,-0.023005644,-0.058934346,-0.04566436,-0.0040547177,0.009540512,0.0030329071,0.044623576,-0.0027537388,0.015221453,0.00049159385,0.0277759,-0.01090654,-0.011795542,0.02101081,-0.025434138,0.0017590319,0.014299926,0.018126974,0.022962278,-0.0025206467,0.05511814,-0.032741304,0.01010427,-0.011730493,-0.007475208,0.00049430423,-0.02595453,0.0104078315,0.040482126,0.01592615,-0.0055616847,0.014007207,-0.014018048,0.002057173,-0.0033418897,-0.015665954,-0.019178597,-0.04479704,-0.011665445,0.0018864195,0.0057893563,-0.042585377,-0.00007737267,-0.020891553,0.02849144,0.017313862,-0.017975193,-0.025694335,0.038920954,-0.02180224,-0.026930263,-0.06318421,-0.0031277703,-0.016620006,-0.023309207,-0.0012433835,-0.03250279,0.011069163,0.042693794,0.028361341,-0.040005103,0.06834476,0.023786232,-0.011838908,-0.009507988,-0.0022861995,0.002253675,0.025716016,0.03367367,0.029597271,0.0036075062,0.01119926,-0.010803546,-0.016457384,0.04245528,-0.0034042282,0.015373235,-0.016142981,0.015514174,0.005320462,-0.058977712,0.01788846,-0.034345843,-0.024675233,0.047355633,-0.04137113,-0.012998948,0.012370141,-0.0034259113,-0.030876568,-0.050304517,0.027147094,0.03788017,0.00552374,-0.003249737,-0.06327094,-0.041674692,-0.004095373,-0.03482287,0.04783266,0.029640637,-0.012337617,-0.0452307,0.008369631,0.002428494,-0.0033825452,0.041674692,0.0032199228,-0.032893084,0.008190746,-0.08235197,-0.010852332,0.028231243,-0.009388731,0.01853895,-0.00119934,0.020555466,0.012782118,0.022116642,0.048873443,-0.037208,0.019536367,-0.024458405,0.002522002,-0.046184752,0.02974905,-0.069428906,-0.046878606,-0.0061850706,0.04215172,-0.0037159212,-0.060885813,-0.00036183477,-0.023591084,-0.0066133095,0.008320845,-0.01569848,-0.034280796,-0.016912727,-0.0059357164,-0.022528619,-0.032155864,-0.0024325596,-0.0062121744,0.030052613,0.027732534,0.02740729,0.011903957,0.04195657,-0.028556488,-0.0022875546,-0.034714453,-0.018929243,0.007626989,-0.02298396,0.002187271,-0.0023593795,0.01875578,0.05685278,0.00094253215,-0.0047865184,-0.060668983,-0.039614808,-0.07380887,0.008196168,0.004965403,-0.061839864,0.007881764,0.008098594,0.042260133,0.063010745,0.042346865,0.040330347,0.011665445,0.044666942,0.023135742,0.014972099,-0.017357226,0.0035234846,0.04108925,-0.03425911,0.0033988075,-0.039788272,0.008586461,-0.05425082,0.037468195,0.022084117,0.00026443074,0.022702083,-0.045837823,-0.0038568606,-0.013183253,-0.014863685,0.0257377,-0.01286885,0.031180128,-0.04440675,-0.019493,0.0298141,0.024133159,0.0011071872,-0.03352189,0.064224996,-0.051605497,0.02115175,0.0032117919,0.05490131,0.0003896161,-0.0078112944,-0.028990148,-0.01555754,-0.019872453,-0.03343516,0.021411944,-0.02080482,-0.008223271,-0.021487836,0.039159466,-0.002436625,-0.0019677307,0.0025707886,0.0057622525,-0.0066892,-0.04219508,0.013530181,0.015752686,0.022485252,0.03859571,-0.03111508,-0.027212143,0.017628264,0.0056809415,0.0048651192,0.012912216,0.0008856143,-0.007892606,0.0060387105,0.051735595,0.051605497,-0.0067596696,-0.00829374,0.031895667,-0.016121298,-0.017107872,-0.030876568,-0.05663595,-0.00006758992,0.013909633,-0.018690731,0.020392844,-0.04180479,-0.027710851,-0.026843533,0.03089825,-0.0137903765,0.04891681,-0.03575524,0.034909602,-0.0020422658,-0.014711903,-0.011871433,0.004529033,0.0039815377,0.06760754,-0.04822295,0.014224037,-0.0024027454,-0.017097032,0.042628743,0.012467715,-0.025022162,0.010743918,0.00004781267,-0.0011241271,-0.005125315,0.0024162973,0.034345843,-0.0019907688,-0.018604,-0.005174102,0.03232933,0.014115621,-0.036687605,-0.0005200528,0.017823411,-0.014722745,-0.019731514,0.017270496,0.030529639,0.0035370365,-0.043365963,-0.00283505,0.013313351,-0.02173719,-0.002734766,-0.06487548,0.03191735,-0.0051605497,-0.018278753,-0.02762412,0.012814643,0.021531202,-0.012977265,-0.0038134945,-0.015503332,-0.011058321,-0.01010969,-0.013822901,-0.006548261,0.03343516,0.031180128,-0.012511081,-0.014256561,0.013226619,0.010039221,-0.007301744,0.0059953444,-0.045534264,-0.005897771,0.034367528,-0.0048759608,-0.00083140685,0.0124785565,0.04848315,0.010987851,-0.020522943,-0.049610663,0.044536844,0.029900832,0.018712414,-0.013681962,0.016305603,-0.026041262,-0.038205415,0.010602978,-0.013215777,-0.028903415,-0.0442116,0.0039083576,0.00089306786,0.013183253,-0.039397977,0.058977712,0.014636013,0.0016031855,0.027363924,0.04514397,0.014646854,-0.053253405,-0.02632314,-0.008727401,-0.0124785565,-0.023092376,0.015091356,-0.04405982,-0.0139963655,-0.02588948,-0.007881764,-0.013074839,0.014928733,-0.009719397,-0.025911164,0.04267211,0.002130353,-0.030941615,-0.034085646,0.011437773,-0.022268422,-0.011096266,0.0057893563,-0.016674213,-0.012576129,-0.009188164,0.0010570454,0.021411944,-0.023656134,0.005496636,0.035148114,-0.021769714,-0.060365424,0.01948216,-0.026453238,0.0026493894,0.0151455635,0.043561112,0.060322057,0.029315392,-0.017920984,0.02740729,0.015828578,0.04718217,0.0028404708,-0.008922547,-0.01955805,0.031136762,-0.0031006665,0.003111508,-0.0060820766,0.030638054,-0.00014187107,0.0045263227,-0.0024406908,-0.0038514398,0.010678869,-0.018679889,0.023656134,-0.021531202,-0.011123369,0.027277192,0.0070361276,-0.01955805,-0.02938044,0.0076595135,0.017476484,-0.026995312,-0.027298875,-0.0060658143,0.0042552855,-0.0066349925,0.03673097,-0.011622079,-0.020631358,0.0052906475,0.0009540512,0.021975702,-0.007903447,-0.030226078,0.023309207,-0.0077083004,0.008320845,0.013768693,-0.011481139,0.034909602,0.0007968496,-0.0017251523,-0.00053089426,-0.01671758,0.0042552855,0.0034340422,0.005691783,0.007887185,-0.0043149134,0.001773939,0.027992731,0.015297344,-0.0018471191,-0.0032117919,0.011990689,-0.004041166,0.0019934792,0.0050927904,-0.04458021,-0.019254489,0.02086987,0.016414018,-0.0017237971,0.005054845,-0.011426931,-0.027472338,0.03553841,-0.016544115,-0.008152802,-0.021639617,0.018159498,0.010705972,-0.0065536816,0.011231785,0.04557763,-0.029597271,0.023092376,-0.03859571,0.027038679,-0.01767163,0.0041902363,-0.0121099455,0.028383024,0.014083097,-0.02465355,-0.013020631,0.013280827,-0.0026087337,-0.029293709,0.0004973534,0.016479066,-0.07740825,-0.005176812,0.014321609,0.042043302,-0.054467652,-0.01564427,0.0031521635,0.010857753,0.0069331336,-0.025802748,0.015286502,0.012044896,0.016110456,-0.029488856,-0.01286885,0.032459423,-0.033109915,-0.00003269387,0.007919709,-0.006391059,0.013562705,-0.0032958132,-0.0031657154,0.030789835,0.014809477,0.0055128983,0.015741846,-0.022051593,-0.017465642,0.01767163,-0.016620006,-0.016685056,0.011903957,-0.051605497,-0.020750614,-0.021325214,0.015319027,-0.04028698,0.0022712925,0.018126974,0.02043621,-0.06331431,-0.014505915,0.012196678,-0.01040241,-0.031808935,-0.04041708,0.005729728,0.011166736,0.03731641,0.025564237,0.0018118842,0.06821466,0.02137942,-0.010608399,-0.013768693,0.01170881,0.06387807,0.0069819205,0.021650458,0.004762125,-0.022376837,-0.018853353,-0.021498676,0.011426931,-0.016424859,0.00015779452,0.03256784,0.036102165,-0.017552374,0.0016492618,0.026279775,0.032416057,0.02660502,0.0044612736,-0.009681451,-0.023894647,0.026843533,0.027385607,0.021639617,0.009638086,-0.0069385543,-0.021281848,0.030356174,-0.022702083,0.0012501595,0.021921495,-0.009058066,0.009182743,0.021997385,0.03046459,0.020663882,-0.0021533913,-0.018083608,0.013345876,0.022788815,-0.012218361,0.023829598,0.006266382,-0.027580753,-0.004005931,-0.008499729,-0.039614808,-0.0062067537,0.011828067,-0.0046862345,-0.01090112,-0.03519148,0.017769204,0.04783266,-0.03306655,0.009535091,-0.0052093365,0.001642486,-0.03213418,0.016793469,0.0035153534,0.019503843,0.040308665,0.023547718,-0.014972099,0.044623576,0.0015272951,-0.009865757,-0.002450177,-0.002611444,0.036882754,-0.0045832405,0.064224996,-0.016327286,0.025542554,-0.0021777845,-0.02523899,-0.0015909888,0.024566818,-0.007101177,0.03540831,0.05190906,-0.018560633,-0.00036081838,0.017075349,0.018094448,0.0032253435,-0.009854916,-0.0039734063,0.03447594,0.021325214,-0.0025856956,-0.025607603,-0.028729951,0.016793469,0.024176525,-0.0055616847,0.01941711,-0.0076866173,0.023005644,0.033456843,-0.00083276205,0.011036638,-0.029597271,-0.017845094,0.017064506,0.02842639,-0.038118683,-0.043908037,0.031375274,0.060885813,-0.018148657,0.051648863,0.01570932,-0.0038541502,-0.0068518226,-0.04458021,-0.0015137432,0.028773317,0.00835879,0.014776953,0.0130531555,-0.015243136,-0.05000096,-0.025217308,-0.0005264899,-0.0024203628,-0.030659737,0.034866236,-0.029597271,-0.038574025,-0.007496891,0.013681962,-0.043365963,0.041544594,0.013638596,-0.016489908,0.020197699,-0.0075348364,0.026019579,0.035018016,0.016045406,0.047919393,-0.004076401,-0.004501929,-0.009930806,0.022116642,0.022441886,0.025607603,-0.00559963,-0.002573499,-0.004493798,0.016630847,0.0015218743,0.02298396,0.024480088,-0.0042932304,-0.013963841,-0.011567871,-0.011643762,0.0071879085,-0.0018498295,0.025130576,-0.00008749422,-0.03278467,-0.03068142,0.012174995,0.012294251,-0.022051593,0.020273589,0.0078112944,0.029597271,0.049784128,0.015178087,0.011361883,0.006878926,0.029141929,0.00632601,-0.007990179,-0.0013091101,0.027103728,-0.018235387,0.0030193552,-0.012380983,-0.014505915,0.0011173512,-0.01024521,-0.060668983,0.0020612385,-0.029944198,-0.01076018,-0.006282644,-0.08347948,-0.0153081855,0.0038053633,0.022355154,0.03293645,-0.0030518798,-0.0015232295,0.013573547,-0.0433226,0.0024013903,0.02028443,-0.02500048,0.008109435,-0.0077625075,-0.030876568,-0.01606709,0.028578172,0.045317434,0.024328306,0.016132139,-0.011426931,-0.02762412,-0.011329358,0.00210867,-0.014863685,-0.005751411,0.007144543,-0.03425911,0.014495074,0.035126433,-0.007068652,-0.021032494,-0.00647237,0.015958674,-0.027385607,-0.011009534,-0.029467173,0.01889672,0.04761583,0.002473215,0.055985462,0.022051593,-0.028014414,0.030876568,0.017270496,0.020056758,0.0073613725,-0.0044016456,-0.015958674,0.0062284367,-0.04557763,-0.015622589,-0.0020476866,0.0057134656,0.010575875,-0.025564237,-0.017866777,-0.018723255,-0.017606582,0.0044585634,-0.016479066,-0.04340933,-0.019612258,0.01846306,0.006114601,0.02239852,-0.070209496,-0.026431555,-0.010115111,0.010201843,0.008445522,0.031028347,0.0045859506,-0.018040242,0.013335034,0.016012883,0.00045127707,0.017368069,-0.000086308435,-0.0003970696,0.0051442874,0.008450942,-0.0039896686,0.006727145,0.0008937454,-0.011622079,-0.010630082,-0.0070361276,-0.008450942,0.015796052,0.042281814,0.0149178915,0.0055887885,-0.047529098,0.01634897,-0.01090654,-0.0018403431,0.010288575,0.02487038,0.014711903,-0.027732534,-0.028187877,-0.009795288,0.031440325,-0.040807374,-0.03278467,0.034627724,-0.025065528,0.04575109,0.0022347025,-0.0117196515,-0.02122764,0.0013402794,0.052386086,-0.018885877,0.0056321546,0.00952425,0.008678613,0.020653041,-0.002566723,0.0032985236,-0.0073559517,-0.03642741,-0.029553905,-0.009253212,0.010586716,0.019276172,-0.00705239,-0.024892064,0.007605306,-0.004209209,-0.026518287,-0.0069548166,-0.001614027,0.010852332,-0.0011417445,-0.0069548166,0.048049487,0.021032494,-0.0454909,0.029553905,0.028968465,0.048439782,0.00042959407,0.010532509,-0.0028160773,-0.05815376,-0.01787762,-0.005255413,-0.02974905,0.0026670068,-0.0018769332,0.023938013,-0.0012332196,0.023764549,-0.011773859,0.0011586844,-0.020230222,0.0044910875,0.0030139345,0.0053313035,-0.02283218,0.008011862,-0.010163898,0.020587992,-0.00087748317,0.0073884763,0.010462039,-0.026713435,-0.021119224,0.018202864,-0.014278244,0.0068084565,-0.027472338,0.02682185,0.014701062,0.008575619,-0.018343803,0.022376837,-0.010050062,-0.015904468,-0.010803546,-0.0019745065,-0.028231243,0.03935461,-0.0049084853,0.011459456,-0.021271005,0.0013050445,0.013432607,-0.014039731,-0.036384046,-0.044666942,0.017541533,0.0067867734,0.021336054,0.042932305,-0.011361883,-0.009838653,0.006580785,0.0022943306,0.002848602,-0.03534326,-0.028361341,0.0009953844,-0.049827494,-0.018593157,0.019026818,-0.022062434,0.009350786,0.005821881,0.05876088,-0.007914289,0.008727401,0.026106311,0.000031677482,-0.016554957,0.023352573,0.0004570366,-0.06595963,-0.023591084,-0.020685565,-0.017823411,0.012034055,0.030529639,0.010342782,0.009632665,-0.020468736,0.04297567,-0.023027327,-0.02341762,-0.046184752,-0.041262716,-0.029792417,0.034194063,-0.015362393,0.006824719,0.03232933,0.007719142,-0.016825994,-0.019677306,-0.023894647,0.026062945,0.023135742,-0.014115621,-0.0013890661,0.0043935142,0.026496604,-0.029293709,0.005393642,-0.022116642,-0.03532158,0.039072733,-0.005125315,0.0018864195,-0.004407066,-0.025607603,0.036665924,0.016880201,-0.013042314,0.01534071,0.0159912,0.0063422723,-0.012348458,0.04340933,-0.030768152,-0.0053855106,-0.021693824,0.017931826,0.029900832,0.049697395,0.030356174,0.006672938,-0.011361883,0.021346897,0.005371959,-0.0154924905,-0.024219891,0.03599375,-0.052819744,0.03031281,0.015622589,0.006223016,-0.019644782,0.04085074,0.03642741,-0.020587992,0.0011268375,-0.013172411,0.0033391793,0.014809477,0.019026818,0.016435701,0.040395398,-0.043561112,0.012305092,-0.011459456,-0.019449634,0.008998438,0.006922292,0.019319538,0.018452218,-0.014961258,0.009562195,0.030377857,0.025781065,-0.0014459839,-0.017541533,0.018332962,0.013280827,-0.02391633,0.0061091804,-0.009036383,-0.0136060715,-0.05620229,-0.01469022,0.04275884,-0.044493478,0.012511081,0.014310768,0.03859571,-0.03354357,-0.0027307007,-0.039441343,-0.0021696533,0.0151455635,-0.013172411,0.022225058,-0.012077421,0.0452307,-0.015871944,-0.009995854,-0.016045406,0.007795032,0.030009247,-0.014191512,0.028361341,0.0016167373,-0.03709958,-0.0058652465,0.007009024,-0.007903447,0.017042823,0.020186856,0.00945378,-0.008559357,-0.0034421734,0.02966232,-0.04471031,0.0046916553,0.014343292,0.033023182,0.010272313,0.009990434,0.030854885,-0.02588948,0.010635503,-0.015004624,-0.011730493,-0.016923567,0.0017414145,0.004320334,-0.03837888,0.021758873,-0.007496891,-0.018202864,-0.035234846,-0.01629476,-0.022073276,-0.0009113629,0.0143649755,0.021823922,-0.035885334,0.00552374,-0.0011973071,0.020653041,0.031505372,0.024588501,0.022138325,0.0024122319,-0.013421766,0.012099104,-0.0029109404,0.017649947,0.044536844,-0.012630337,-0.016901884,0.026800167,0.027016995,0.019720672,-0.009274895,0.022073276,0.025022162,-0.023612767,0.0123593,0.021943178,0.017780045,0.01686936,-0.0014093939,-0.034063965,0.023591084,-0.016424859,-0.023959696,-0.026930263,0.011242626,-0.015351552,0.008255796,-0.037923537,0.0002796766,0.0036047958,-0.033847135,-0.022918912,-0.03317496,-0.021607092,0.006694621,0.017942667,0.0090147,0.031808935,-0.0070036035,-0.032416057,-0.026886897,-0.01374701,0.024328306,0.00035167087,-0.00038419533,0.037056215,-0.0065916264,0.06916872,0.036080483,0.015058831,0.03744651,0.016142981,-0.05299321,0.00023648003,-0.011730493,-0.019493,0.0024881223,-0.032307643,0.0038162048,0.02682185,-0.04566436,0.040005103,-0.021216799,-0.004645579,0.018604,0.012554447,0.021260165,-0.024610184,-0.02304901,0.020739773,-0.004320334,0.0147552695,0.0029461752,0.0022672268,0.0061471253,-0.0637046,0.04195657,0.01025605,-0.007968496,0.0049382993,0.022181692,-0.017855937,0.0019257199,0.0020327796,0.00034099878,-0.02363445,-0.027602436,0.01388795,-0.0043528588,0.0074264216,0.018885877,0.010098849,0.014115621,0.07376551,0.030182712,-0.0120882625,-0.013530181,0.026431555,0.0043609897,-0.006748828,0.014191512,-0.013844584,0.021065017,0.026127994,0.016262237,0.020750614,-0.013475973,0.035256527,0.03692612,0.03627563,0.020327795,0.03343516,0.0024623736,0.003599375,0.018332962,-0.021260165,0.029033514,-0.015113039,0.011567871,0.0063856384,0.018528108,-0.02814451,-0.02660502,-0.015741846,0.021173432,-0.033760402,0.007523995,0.00066912326,-0.01294474,-0.020707248,0.02623641,0.03154874,0.014115621,-0.0082341125,0.024978796,-0.0012623562,0.010819809,0.028816683,-0.021281848,0.014668537,-0.01243519,0.02660502,0.0267568,-0.02400306,0.03039954,0.0049545616]},{"id":"non-cyclical-number","name":"Non-Cyclical Number","description":"A **non-cyclical number** is an integer defined by the following algorithm:\n\n* Given a positive integer, replace it with the sum of the squares of its digits.\n* Repeat the above step until the number equals `1`, or it **loops infinitely in a cycle** which does not include `1`.\n* If it stops at `1`, then the number is a **non-cyclical number**.\n\nGiven a positive integer `n`, return `true` if it is a **non-cyclical number**, otherwise return `false`.\n\n**Example 1:**\n\n```java\nInput: n = 100\n\nOutput: true\n```\n\nExplanation: 1^2 + 0^2 + 0^2 = 1\n\n**Example 2:**\n\n```java\nInput: n = 101\n\nOutput: false\n```\n\nExplanation:\n1^2 + 0^2 + 1^2 = 2\n2^2 = 4\n4^2 = 16\n1^2 + 6^2 = 37\n3^2 + 7^2 = 58\n5^2 + 8^2 = 89\n8^2 + 9^2 = 145\n1^2 + 4^2 + 5^2 = 42\n4^2 + 2^2 = 20\n2^2 + 0^2 = 4 (This number has already been seen)\n\n**Constraints:**\n* `1 <= n <= 1000`\n","difficulty":"Easy","concepts":["Fast and Slow Pointers"],"solutions":{"python":"class Solution:\n    def isHappy(self, n: int) -> bool:\n        slow, fast = n, self.sumSquareDigits(n)\n\n        while slow != fast:\n            fast = self.sumSquareDigits(fast)\n            fast = self.sumSquareDigits(fast)\n            slow = self.sumSquareDigits(slow)\n\n        return True if fast == 1 else False\n\n    def sumSquareDigits(self, n):\n        output = 0\n        while n:\n            output += (n % 10) ** 2\n            n = n // 10\n        return output\n","javascript":"class Solution {\n    /**\n     * @param {number} n\n     * @return {boolean}\n     */\n    isHappy(n) {\n        let slow = n;\n        let fast = this.sumSquareDigits(n);\n\n        while (slow !== fast) {\n            fast = this.sumSquareDigits(fast);\n            fast = this.sumSquareDigits(fast);\n            slow = this.sumSquareDigits(slow);\n        }\n\n        return fast === 1;\n    }\n\n    /**\n     * @param {number} n\n     * @return {number}\n     */\n    sumSquareDigits(n) {\n        let output = 0;\n        while (n !== 0) {\n            output += (n % 10) ** 2;\n            n = Math.floor(n / 10);\n        }\n        return output;\n    }\n}\n","cpp":"class Solution {\npublic:\n    bool isHappy(int n) {\n        int slow = n, fast = sumSquareDigits(n);\n\n        while (slow != fast) {\n            fast = sumSquareDigits(fast);\n            fast = sumSquareDigits(fast);\n            slow = sumSquareDigits(slow);\n        }\n\n        return fast == 1;\n    }\n\nprivate:\n    int sumSquareDigits(int n) {\n        int output = 0;\n        while (n != 0) {\n            output += (n % 10) * (n % 10);\n            n /= 10;\n        }\n        return output;\n    }\n};\n","java":"class Solution {\n    \n    public boolean isHappy(int n) {\n        int slow = n, fast = sumSquareDigits(n);\n\n        while (slow != fast) {\n            fast = sumSquareDigits(fast);\n            fast = sumSquareDigits(fast);\n            slow = sumSquareDigits(slow);\n        }\n\n        return fast == 1;\n    }\n\n    private int sumSquareDigits(int n) {\n        int output = 0;\n        while (n != 0) {\n            output += (n % 10) * (n % 10);\n            n /= 10;\n        }\n        return output;\n    }\n}\n","csharp":"public class Solution {\n    \n    public bool IsHappy(int n) {\n        int slow = n, fast = SumSquareDigits(n);\n\n        while (slow != fast) {\n            fast = SumSquareDigits(fast);\n            fast = SumSquareDigits(fast);\n            slow = SumSquareDigits(slow);\n        }\n\n        return fast == 1;\n    }\n\n    private int SumSquareDigits(int n) {\n        int output = 0;\n        while (n != 0) {\n            output += (n % 10) * (n % 10);\n            n /= 10;\n        }\n        return output;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def isHappy(self, n: int) -> bool:\n        ","javascript":"class Solution {\n    /**\n     * @param {number} n\n     * @return {boolean}\n     */\n    isHappy(n) {}\n}\n","cpp":"class Solution {\npublic:\n    bool isHappy(int n) {\n        \n    }\n};\n","java":"class Solution {\n    public boolean isHappy(int n) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public bool IsHappy(int n) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/ljz85bxOYJ0","embedding":[0.025396379,-0.052446928,0.003834391,-0.003995551,0.04398147,0.049771063,-0.0046553947,-0.019132426,0.0032961776,0.023498949,0.013622579,-0.023036754,-0.057117525,0.00004772559,0.036391746,0.017733678,-0.03157519,0.0004131625,0.0146199465,0.011427154,0.05925822,0.04028391,0.0465357,-0.03612416,0.04838448,0.006616681,-0.03797294,-0.022039386,0.052544232,-0.011938001,0.0025937634,-0.024484152,-0.012771168,-0.028996632,-0.04254623,0.022598885,0.0056862105,-0.0049290624,0.0047010058,-0.023352992,-0.011183894,-0.06616681,-0.039505478,0.0067139855,0.022915123,-0.015386216,0.016383583,0.027147854,0.005908185,0.05526875,-0.0074802553,0.019533806,0.035224095,-0.008562764,-0.07365923,-0.050695453,-0.010283831,0.021990735,-0.005801759,0.020616313,0.06621546,-0.05672831,0.02422873,-0.012831982,0.00004285563,0.0010650242,-0.044492316,0.00017474835,-0.009693924,-0.045465358,-0.038362157,0.07010763,0.042157017,-0.013452296,-0.015982203,0.026855942,0.043519273,0.006628844,0.045830246,-0.012321136,-0.02403412,-0.035102468,0.0143037075,0.021978572,0.00059408735,-0.007693108,-0.027707351,0.015605151,-0.05502549,-0.024703087,0.008653986,0.052398276,0.009864206,0.009584458,0.035175443,-0.03325369,0.056631006,0.034445662,0.013050917,0.03048052,0.0049047363,0.028753372,0.014887532,0.02649105,0.00826477,0.062469255,0.012686026,-0.03417808,-0.07370788,0.017685026,-0.019947348,-0.008149222,-0.0011980572,-0.0054125423,-0.007607967,0.03237795,-0.0030483562,-0.021783963,0.019266218,-0.0323293,0.0069329194,0.002648497,-0.037681025,-0.027439766,-0.029653436,-0.004874329,-0.025493683,-0.007382951,0.036099833,0.034859207,-0.009779066,0.022343462,0.03490786,0.02962911,-0.014571294,-0.015264586,0.01423073,-0.0011874145,-0.010934552,0.06139891,0.0069450825,0.009097937,0.004317871,0.024520641,0.022647537,0.017575558,0.026734311,0.0036397828,-0.031502213,-0.0007951572,0.009426338,-0.016784962,0.05702022,0.012181262,0.020579824,-0.0036154566,-0.004612824,-0.0073768697,0.0063490947,0.04366523,0.020166282,-0.013464459,-0.02826685,0.013549601,0.024240892,0.058869,-0.03293745,-0.05536605,-0.01894998,-0.0036154566,0.055122793,0.0035272748,0.021516377,-0.02027575,0.052057713,-0.0059294705,0.03096704,-0.044297706,-0.06991302,0.005008122,-0.021187976,0.0026469766,-0.027561396,-0.089471154,0.06675064,-0.022428602,-0.027658701,-0.023048917,0.007905961,0.004269219,0.0054855207,0.03524842,0.024581457,0.0010019285,-0.00083240645,-0.049162913,0.05955013,-0.024690924,-0.035588987,-0.020397378,-0.04286247,-0.013610416,0.046097834,-0.0038404725,0.03797294,-0.03551601,-0.015337564,0.014924021,-0.0018077283,-0.0045094383,0.00080579985,-0.008009346,0.032888796,-0.025761269,0.0058564926,0.041986734,0.01705255,-0.022440765,0.014218567,0.05200906,-0.02790196,0.030139955,0.0176607,0.032037385,0.006397747,0.031599518,-0.027756004,-0.0040654885,0.03678096,0.030261585,-0.014802392,-0.013330666,0.01572678,0.027634375,-0.034153752,-0.00090462435,-0.002386992,0.002169578,-0.04208404,0.037437767,0.002713873,0.008879002,0.026199138,-0.0045884983,0.0045459275,0.0128806345,-0.058187872,0.019035121,0.018718883,0.0015561059,-0.030918388,0.00023793902,-0.0050932635,-0.07375653,-0.055852573,-0.029483153,-0.0075167445,-0.016103834,0.047314133,-0.00060473,0.0018381359,-0.033350993,-0.05395514,-0.094579615,-0.0009069049,-0.020068977,-0.00903104,0.04446799,-0.013172547,0.026320769,0.016760638,-0.039578456,0.034810554,-0.02290296,0.001676976,-0.04619514,0.02398547,0.014875369,0.000794397,-0.069523804,-0.047679026,0.00519969,0.015398379,0.02605318,0.038240526,-0.015106467,0.0012071794,0.0069694086,-0.0013120854,-0.059404172,-0.017599884,-0.023997633,-0.033156384,0.038118895,-0.0009806432,-0.03386184,-0.03140491,0.021151487,-0.0040533254,-0.03862974,0.010977123,-0.017636374,-0.010344646,0.026466724,-0.0417678,-0.015775433,-0.011755556,0.027488418,0.030383216,0.0066045183,0.0082951775,-0.020166282,-0.0046736393,0.038191874,-0.03931087,-0.05434436,-0.02624779,-0.0020768351,0.035297073,-0.032548234,0.022343462,-0.009578376,0.053711884,0.054782227,0.026418073,0.0061636087,0.0061788126,0.003100049,0.0022668822,-0.02281782,0.00774176,-0.01612816,-0.017830983,0.026028857,-0.07915691,-0.0029236851,0.030042652,-0.046024855,-0.045757268,0.045854572,0.010107467,-0.009170915,0.0050689373,0.012266402,0.019156752,0.018682394,0.016602518,0.03096704,0.015933553,-0.0024295626,-0.016140323,-0.002777729,0.03583225,0.02309757,0.0019521642,-0.02156503,-0.030894063,0.0147780655,-0.023693556,0.020312238,-0.06572894,-0.009341197,0.009931103,0.02612616,0.0013257688,0.03685394,0.014948348,0.004399971,0.0020859574,0.05852844,-0.04862774,0.06786963,0.03330234,-0.0040685292,-0.021419073,-0.0039681843,0.009432419,-0.006750474,0.011579192,-0.008228281,-0.035613313,0.03189143,0.017320136,-0.0038313502,-0.017429603,0.06874537,0.01935136,-0.0074620107,-0.021917757,-0.034275383,0.055949878,-0.046511374,-0.010095304,0.008234362,0.012710352,-0.029702086,-0.009912859,0.037802655,-0.008574927,0.025177445,0.020823084,0.0070849573,0.022525907,0.02217318,-0.018232362,-0.04286247,-0.0014907297,0.0066774962,-0.0069815717,-0.0002063912,-0.018755373,0.0007031744,0.021686658,-0.01600653,0.034883533,-0.024411175,-0.060620476,0.024058446,0.022282647,-0.0208839,-0.02161368,-0.041378584,0.03704855,-0.0453194,0.029775064,-0.0047709434,-0.007413359,-0.041256953,0.029921021,0.015775433,0.03833783,0.025177445,-0.016602518,0.014510479,-0.011080508,0.00947499,0.000040028677,0.036221463,0.0056010694,0.0033843594,-0.041986734,-0.037316136,0.028169546,-0.012892798,-0.020020325,-0.008197873,-0.058723044,0.012467092,0.05366323,-0.036318768,-0.0056618843,-0.020689292,0.05745809,-0.0011539662,-0.03371588,-0.008070162,0.04619514,0.02084741,0.037754003,-0.010794678,-0.0035303156,-0.009985837,-0.014753739,0.006397747,0.04132993,0.006090631,-0.033034753,0.02225832,-0.0018791861,0.013768535,-0.03249958,-0.043251686,0.06509647,0.026904592,-0.00512063,0.025469357,0.019691924,0.090930715,0.0033235443,-0.04040554,-0.030942714,0.00067808817,0.011591355,0.017879635,0.0041932,-0.03257256,0.024471989,-0.012235994,-0.020032488,-0.0004884211,0.03206171,-0.014814555,0.022112364,-0.012315054,-0.014060447,0.009669598,0.01701606,-0.009547968,-0.028023591,-0.0090857735,-0.05132793,0.020020325,-0.02612616,-0.008988469,0.025590988,-0.035345726,0.018353993,-0.046681657,-0.031599518,0.018268852,-0.0029966633,-0.007005898,-0.0075775594,-0.00064996124,0.0087816985,0.007413359,0.009912859,-0.004004673,-0.011275116,-0.0015393818,-0.0023246566,-0.0139874695,0.0046584355,0.0048439214,0.021869104,-0.025055815,-0.0041962406,-0.02649105,-0.046341095,0.006866023,-0.012990102,0.0050294073,0.018694557,0.01701606,-0.038045917,0.018779699,0.018001264,-0.008410726,-0.004378686,-0.008574927,0.023596253,0.0074924184,-0.015301075,0.012205588,-0.0018442174,-0.010636558,-0.019801391,0.00003893591,-0.028096568,-0.018974306,0.003797902,-0.017916124,0.015629476,-0.016505213,-0.01935136,-0.023547601,-0.040527172,0.022988101,-0.010551417,0.04427338,-0.0018411767,-0.047922287,0.0092438925,-0.017685026,0.006866023,0.018171547,-0.00459762,0.0045580906,0.011445398,0.03994335,-0.0052270563,-0.006270035,-0.024374686,-0.06918324,0.011123079,-0.018281015,-0.022611048,0.009590539,-0.030869737,0.02342597,0.0065984367,-0.0576527,-0.031818453,-0.040064976,-0.024253055,0.004479031,-0.0057591884,0.0042388113,0.022793494,-0.023121895,-0.00826477,0.031356256,0.053079404,0.0036823533,0.00487737,-0.03206171,-0.040648803,-0.009268219,-0.017855309,-0.012503581,0.00015574363,-0.0032596884,0.029385848,-0.00487737,-0.007796494,0.006695741,-0.0071092835,0.04060015,0.00047587804,0.007693108,-0.040332563,0.0040137954,0.010782515,-0.015592988,-0.013841513,0.009742577,0.022829982,0.0453194,0.0057561477,-0.0104297865,-0.017332299,0.036707986,0.035491683,0.0058564926,0.0030742025,0.021516377,-0.02753707,0.04716818,-0.01632277,0.031502213,-0.01842697,0.004773984,-0.017125528,-0.0126617,-0.021552866,0.02096904,-0.00020734142,0.021321768,0.026320769,-0.02926422,0.043324664,-0.012187343,0.008678312,-0.015252423,-0.005591947,0.026734311,-0.031502213,-0.017502582,0.009669598,-0.030504845,0.028850676,0.022513743,0.01834183,-0.018268852,0.008471541,0.021321768,-0.060766432,-0.046778962,-0.038678393,-0.0060298154,-0.009298626,0.00754107,-0.0038131056,-0.022744842,-0.023377318,0.010940634,0.011311606,0.008112732,0.0376567,-0.014510479,-0.006707904,0.020008162,0.014036121,0.012339381,0.0003282114,0.011986653,0.016115997,-0.01898647,-0.023413807,-0.0051510376,-0.008751291,-0.009693924,-0.020032488,0.0100344885,0.038848676,0.007632293,0.019436501,0.027099201,-0.007936369,-0.028923653,-0.020956878,0.0040776515,-0.039043285,-0.0037188423,0.016578192,-0.024119262,0.063199036,-0.0041354257,0.023328666,-0.08275717,-0.021844778,0.012363707,-0.021455562,0.0035850492,-0.013476622,-0.01060615,-0.01947299,0.016055182,-0.002648497,0.007857309,0.015069977,-0.013415808,0.011986653,0.022525907,-0.020190608,-0.00063589774,-0.0046219463,0.0058473703,0.013525275,-0.03544303,0.0058716964,-0.0027199546,-0.023657067,-0.019205403,0.043203037,0.0034603782,0.0370972,0.041378584,-0.0057014143,0.025347726,-0.0082951775,0.0034451745,-0.012625211,0.011603518,0.013719883,0.0019992958,-0.021333931,0.032110363,0.012150854,-0.027926287,-0.024143588,0.0442004,0.005959878,0.003375237,0.04115965,-0.0069207563,-0.036221463,-0.010265586,-0.03184278,0.002282086,-0.014559131,0.008039754,0.0068173707,-0.0046341093,0.005905145,-0.015617314,-0.022221832,0.023377318,0.011494051,0.014340197,-0.00087269646,-0.014206404,-0.0043878085,-0.0067565558,0.0012391073,0.03325369,-0.019521642,0.01511863,-0.033350993,0.0020312238,-0.0028309422,0.014206404,0.030115629,-0.033934817,0.028729046,-0.04140291,-0.01806208,-0.028169546,0.033034753,0.0001725628,-0.056339093,-0.010739944,0.016444398,0.025955878,-0.0008141619,0.016407909,0.029945347,-0.029483153,-0.002250158,-0.027391113,-0.022854308,0.011433235,-0.04322736,-0.024727413,-0.01616465,0.027610049,0.018767536,-0.040794756,-0.0017362706,-0.024727413,0.00991894,-0.026782963,0.0442004,-0.036586355,-0.00086129364,0.028291177,-0.035734944,0.033448298,-0.024520641,0.033691555,0.04950348,0.051425233,-0.009012795,0.029872369,0.011840696,0.009043203,-0.00479831,0.008106651,0.0048925737,0.011871104,0.032231994,0.009249974,0.0042205667,0.003192792,0.011116997,0.015592988,-0.008203954,0.00024497075,0.025201771,0.06684794,-0.016201138,-0.0003971985,-0.051181976,0.024544967,-0.005789596,0.022148853,0.04398147,0.04347062,-0.012552233,0.042667862,0.008349911,0.019132426,-0.022489417,-0.031818453,0.005071978,0.0127225155,0.0064403173,-0.012783331,0.0412083,-0.03157519,-0.016480887,0.022075875,0.029215567,-0.02741544,-0.015106467,-0.0026317728,0.01395098,0.010356809,-0.0028126976,0.010423705,0.019740576,0.040867735,0.010022325,-0.005923389,-0.016845778,0.012965776,-0.011487969,-0.017113365,-0.034567293,-0.006428154,-0.021467725,-0.013367156,0.0074498476,0.0176607,-0.00010357569,0.008483704,0.016103834,-0.03979739,-0.0051115076,-0.008003265,0.03955413,0.000054638553,0.017113365,0.03948115,-0.015507846,-0.0364404,-0.01116565,-0.01649305,-0.015641639,-0.032815818,0.024982836,-0.0258829,0.038118895,-0.025955878,-0.028096568,0.024094936,0.041232627,0.012400196,0.06485321,-0.025566662,-0.011889349,-0.028072242,0.0075349887,-0.0040502846,-0.010077059,-0.01983788,-0.008179628,0.021625843,-0.041378584,-0.012029223,-0.0024858166,0.0038039836,-0.00435436,0.038167547,0.036659334,0.00021437317,0.001487689,0.0066714147,0.034202404,0.008945899,0.04724116,-0.014133425,0.01508214,-0.03359425,0.00044851124,0.0027670863,0.007936369,-0.01048452,0.026904592,-0.017125528,0.027561396,-0.01935136,-0.015021326,0.0028917573,-0.04692492,-0.04378686,-0.024204403,-0.0017271484,0.058187872,-0.024277382,-0.026782963,0.016955245,-0.038970307,-0.021151487,-0.015045651,-0.00008955971,0.020373054,-0.04539238,-0.035345726,0.009590539,0.025736943,-0.01116565,0.0008552121,-0.022477254,-0.005780474,-0.013914491,0.019485153,0.028558763,-0.012734679,0.026515376,-0.00548248,-0.013257688,0.012637374,-0.020141955,0.0019932145,0.0126617,-0.00006817941,0.015994366,0.036099833,-0.061836775,0.008313422,0.015957877,-0.05672831,0.0073951143,0.004132385,-0.03439701,0.010095304,0.016906593,0.027342461,-0.016955245,0.017344462,0.01435236,-0.009681761,0.031064345,0.027318135,0.007881635,0.028169546,0.0074680923,0.0024128384,0.025761269,0.0012482296,0.003375237,0.027877634,-0.029239893,-0.017064713,0.020287912,-0.024873368,0.022221832,-0.022185342,0.010800759,-0.03337532,-0.019035121,0.058431134,0.035297073,-0.0051753637,-0.023815187,0.029166915,-0.004652354,0.0037887797,-0.0057561477,-0.016176812,0.017526908,-0.00519969,-0.023839513,0.028193872,-0.00038294497,0.016067345,0.021589356,-0.02814522,-0.024678761,-0.033642903,0.0037887797,0.014449663,0.008672231,-0.0030209892,-0.00516016,-0.009420256,0.024812555,-0.035783596,0.02833983,0.009037121,0.021443399,-0.022988101,-0.0077478415,-0.00081796286,0.029337196,0.017368788,-0.014242892,-0.0008088406,0.002592243,0.019521642,-0.005233138,0.04152454,-0.0031471807,-0.030772433,0.043835513,-0.017283646,0.0020068977,-0.007559315,-0.017149854,-0.042351626,0.052398276,0.005905145,-0.0069998163,0.005753107,-0.01649305,0.030456195,0.023912491,0.003326585,0.0057318215,0.0010901104,-0.016699823,-0.026028857,0.0023854717,0.009158752,0.0018077283,-0.041719146,-0.04882235,-0.030529171,-0.017076876,0.004664517,-0.014765902,0.007632293,-0.008319504,-0.018840512,-0.036878265,-0.02358409,-0.019570295,0.00806408,0.004004673,0.037875634,-0.013525275,-0.03906761,-0.008368156,-0.0125643965,0.022440765,-0.00342693,0.0056618843,-0.0024447665,0.014340197,0.0070180604,-0.004281382,-0.007680945,-0.019205403,0.015836248,-0.006707904,0.009888533,0.019971674,-0.01609167,-0.010934552,-0.0062639536,0.0033995633,-0.0044577457,-0.031210301,-0.0370972,-0.0158849,-0.019448664,0.0057561477,-0.016103834,-0.026782963,0.02020277,-0.013269851,0.0009935665,0.017283646,-0.03862974,-0.025736943,0.009128344,0.007005898,0.008726965,0.012844145,0.046633005,-0.011372421,0.01874321,0.016663333,-0.038118895,-0.03901896,0.012266402,0.018779699,-0.0185486,0.042108364,0.038897328,-0.053274013,-0.010490602,-0.035467356,-0.0143037075,0.027731678,0.021479888,-0.050744105,0.009663517,0.027683025,0.0016115997,-0.035345726,0.021260953,-0.002008418,0.015179445,-0.012637374,0.01741744,0.061885428,0.00046067426,0.014498316,-0.020141955,-0.0024812554,0.010587906,0.011226464,-0.00053821347,0.02431387,0.02475174,0.0033235443,-0.011554866,-0.038970307,-0.014340197,-0.013172547,0.030675128,-0.0051023853,0.012588723,-0.01060007,0.0033357074,0.01781882,0.022233995,0.0059720413,0.016699823,-0.008435052,0.009049284,0.012351544,0.034883533,-0.002757964,0.045465358,-0.012357625,0.024532804,0.015617314,0.0081370585,0.044297706,-0.010022325,-0.019035121,0.005664925,-0.012418441,0.028291177,-0.03274284,0.0081370585,0.0025329483,-0.0025816003,0.035491683,-0.016663333,-0.0033600333,0.009517561,0.025931552,0.01330634,0.006665333,-0.03318071,0.022002898,-0.01048452,0.010162201,0.023717882,0.016578192,-0.025712617,0.019959511,0.025372053,-0.00081948325,-0.01370772,0.006750474,-0.0035090302,0.0036975571,-0.014546968,-0.04225432,0.01463211,-0.056193136,0.003128936,0.010229097,-0.010502765,-0.004679721,0.011396747,0.03617281,0.02705055,-0.014960511,0.009316871,-0.006221383,0.008702639,0.022197505,0.004451664,0.0073099732,-0.009383768,-0.038532436,-0.035734944,0.018402644,0.02680729,0.017855309,-0.02079876,-0.011512295,0.03417808,-0.008228281,-0.012047468,0.017271483,-0.0132212,-0.02661268,0.0047162096,-0.020494683,-0.019010795,0.040137954,0.038410805,-0.026418073,0.005850411,0.016298443,-0.020032488,-0.017502582,-0.031210301,0.033959143,-0.031550866,-0.0011798126,-0.0037431684,-0.02225832,-0.019059448,-0.03213469,-0.0063916654,-0.02318271,-0.001515816,-0.01132985,-0.009991919,0.025104467,-0.03279149,-0.047216833,0.013367156,-0.0024934185,0.037924286,0.020519009,0.0185486,-0.0015348207,0.0027518824,0.05959878,0.015386216,0.024143588,0.030456195,0.024654435,0.021260953,0.0034147669,0.0017514745,0.015665965,0.03269419,0.010004081,-0.012132609,0.004378686,-0.03164817,-0.011919756,0.027756004,0.021540703,-0.009693924,-0.01318471,0.031477887,0.019400012,-0.022915123,0.02846146,-0.015288912,0.016699823,-0.005205771,0.010064896,0.033278015,-0.017612047,0.005902104,0.017332299,0.015665965,0.036586355,-0.0032262402,-0.012467092,-0.011524458,0.026539702,-0.011925838,-0.022975938,0.015495683,0.028996632,0.0014534805,-0.013014428,-0.001274076,0.033837512,-0.03914059,-0.009657435,0.0035485602,-0.024909858,0.028753372,0.012454929,-0.010952797,-0.016480887,-0.017028224,-0.024520641,-0.019643271,-0.04023526,-0.0031258953,-0.052641537,-0.0033448297,0.05035489,0.015325401,-0.004789188,-0.021978572,-0.032086037,-0.010326401,-0.017234994,-0.02366923,-0.0055220095,0.032523908,0.027683025,-0.04814122,-0.06324769,0.023073243,-0.045854572,0.008793861,0.012686026,0.007200506,-0.0043726047,0.0126617,0.0122481575,-0.0056862105,-0.009785147,0.00091298646,-0.0060541416,0.020105466,-0.0047466173,-0.011591355,-0.009055366,0.010016244,-0.01616465,0.0052392194,0.020713618,-0.0033965225,-0.016079508,-0.023900328,-0.030115629,-0.009201322,-0.03371588,-0.031064345,0.020932551,0.009207403,0.022562396,-0.010004081,-0.020786596,0.004132385,-0.013452296,0.028096568,0.0057591884,-0.017210668,0.002101161,-0.0025542334,0.02363274,-0.0033934817,-0.0070971204,-0.009408093,0.014315871,0.0078208195,-0.019533806,-0.0002350883,0.021260953,0.045149118,0.023766534,0.000015180015,0.07244293,-0.010812921,0.01423073,-0.027099201,0.018499948,-0.025299074,-0.017162018,0.04274084,-0.015678128,0.026588354,0.00032764126,-0.0105088465,-0.005303075,-0.051425233,0.02302459,-0.0037340461,-0.025396379,-0.015447032,-0.01842697,0.0045094383,-0.0021239668,-0.006270035,-0.0008232842,0.01794045,-0.035540335,-0.03690259,0.0092438925,-0.029750738,-0.04563564,0.013136058,-0.014486153,0.032548234,0.00097380154,0.04845746,0.02508014,-0.027001897,0.021881267,0.0014968113,0.019241892,-0.017137691,-0.014060447,-0.02156503,0.032037385,0.028485784,0.008398563,0.023109732,-0.018317504,0.010849411,0.0057166177,-0.003253607,0.014668598,-0.025834247,0.012083957,0.042667862,0.0122481575,-0.0060146116,-0.0023276974,0.018572927,0.023559764,0.05230097,-0.012333299,0.008550601,-0.015495683,-0.0041263034,-0.010776433,0.038970307,-0.005062856,0.046341095,0.012454929,-0.025542336,-0.042059712,0.016468724,-0.019691924,-0.012193425,0.03721883,-0.025420705,0.021297442,-0.040308237,0.02624779,-0.0084532965,0.021224463,-0.0049989996,0.050890062,0.043081407,0.038191874,-0.015179445,0.010216934,-0.015130793,0.0050142035,-0.050549496,-0.012187343,0.050938714,0.010691292,-0.031696822,0.0191081,0.019850044,-0.0040806923,0.040186606,0.015447032,0.015957877,-0.021455562,0.0036671495,0.028218199,-0.0090067135,-0.019935185,-0.021625843,-0.008538438,-0.0029297667,0.055463355,0.0059933267,-0.0074498476,0.0024052365,-0.03612416,0.050403543,-0.0033083404,-0.031356256,0.03974874,0.01898647,0.03035889,-0.005497684,-0.02060415,0.0014937705,-0.003986429,0.03721883,0.004834799,0.0106669655,-0.014437501,-0.05230097,0.0098763695,-0.001701302,0.014826718,0.012315054,-0.000749926,0.008933736,0.017648537]},{"id":"plus-one","name":"Plus One","description":"You are given an integer array `digits`, where each `digits[i]` is the `ith` digit of a large integer. It is ordered from most significant to least significant digit, and it will not contain any leading zero.\n\nReturn the digits of the given integer after incrementing it by one.\n\n**Example 1:**\n\n```java\nInput: digits = [1,2,3,4]\n\nOutput: [1,2,3,5]\n```\n\nExplanation `1234` + `1` = `1235`.\n\n**Example 2:**\n\n```java\nInput: digits = [9,9,9]\n\nOutput: [1,0,0,0]\n```\n\n\n**Constraints:**\n* `1 <= digits.length <= 100`\n* `0 <= digits[i] <= 9`\n","difficulty":"Easy","concepts":[],"solutions":{"python":"class Solution:\n    def plusOne(self, digits: List[int]) -> List[int]:\n        one = 1\n        i = 0\n        digits = digits[::-1]\n\n        while one:\n            if i < len(digits):\n                if digits[i] == 9:\n                    digits[i] = 0\n                else:\n                    digits[i] += 1\n                    one = 0\n            else:\n                digits.append(one)\n                one = 0\n            i += 1\n        return digits[::-1]\n","javascript":"class Solution {\n    /**\n     * @param {number[]} digits\n     * @return {number[]}\n     */\n    plusOne(digits) {\n        let one = 1;\n        let i = 0;\n        digits.reverse();\n\n        while (one !== 0) {\n            if (i < digits.length) {\n                if (digits[i] === 9) {\n                    digits[i] = 0;\n                } else {\n                    digits[i]++;\n                    one = 0;\n                }\n            } else {\n                digits.push(one);\n                one = 0;\n            }\n            i++;\n        }\n        digits.reverse();\n        return digits;\n    }\n}\n","cpp":"class Solution {\npublic:\n    vector<int> plusOne(vector<int>& digits) {\n        int one = 1;\n        int i = 0;\n        reverse(digits.begin(), digits.end());\n\n        while (one != 0) {\n            if (i < digits.size()) {\n                if (digits[i] == 9) {\n                    digits[i] = 0;\n                } else {\n                    digits[i]++;\n                    one = 0;\n                }\n            } else {\n                digits.push_back(one);\n                one = 0;\n            }\n            i++;\n        }\n        reverse(digits.begin(), digits.end());\n        return digits;\n    }\n};\n","java":"class Solution {\n    public int[] plusOne(int[] digits) {\n        int one = 1;\n        int i = 0;\n        List<Integer> list = new ArrayList<>();\n        for (int digit : digits) {\n            list.add(digit);\n        }\n        Collections.reverse(list);\n\n        while (one != 0) {\n            if (i < list.size()) {\n                if (list.get(i) == 9) {\n                    list.set(i, 0);\n                } else {\n                    list.set(i, list.get(i) + 1);\n                    one = 0;\n                }\n            } else {\n                list.add(one);\n                one = 0;\n            }\n            i++;\n        }\n        Collections.reverse(list);\n        int[] result = new int[list.size()];\n        for (int j = 0; j < list.size(); j++) {\n            result[j] = list.get(j);\n        }\n        return result;\n    }\n}\n","csharp":"public class Solution {\n    public int[] PlusOne(int[] digits) {\n        int one = 1;\n        int i = 0;\n        Array.Reverse(digits);\n\n        while (one != 0) {\n            if (i < digits.Length) {\n                if (digits[i] == 9) {\n                    digits[i] = 0;\n                } else {\n                    digits[i]++;\n                    one = 0;\n                }\n            } else {\n                Array.Resize(ref digits, digits.Length + 1);\n                digits[digits.Length - 1] = one;\n                one = 0;\n            }\n            i++;\n        }\n        Array.Reverse(digits);\n        return digits;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def plusOne(self, digits: List[int]) -> List[int]:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} digits\n     * @return {number[]}\n     */\n    plusOne(digits) {}\n}\n","cpp":"class Solution {\npublic:\n    vector<int> plusOne(vector<int>& digits) {\n        \n    }\n};\n","java":"class Solution {\n    public int[] plusOne(int[] digits) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int[] PlusOne(int[] digits) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/jIaA8boiG1s","embedding":[0.023890411,-0.034854107,0.010733979,0.002957587,-0.006426813,0.020737045,-0.04038816,0.01838768,-0.002725261,0.02478839,-0.017458377,-0.053252228,-0.062566146,-0.050453875,0.03147102,0.048073187,0.019797299,-0.00022743139,-0.005800316,0.029821247,-0.014910623,-0.037443627,0.023013316,-0.014388544,0.011350034,-0.013427915,-0.052458666,0.02453779,0.00472483,-0.019473609,-0.029549766,-0.019713767,-0.04159939,0.0031429257,-0.0017424442,0.013605422,0.021572374,0.012456845,0.015234314,0.018659163,-0.0013417474,-0.04381301,0.014722675,-0.009914312,-0.025080755,0.006943673,-0.00048977695,-0.024454258,0.015046365,0.04418891,0.010018728,0.002800963,0.011579749,0.02685583,-0.023013316,-0.052458666,-0.010984577,0.041536737,-0.02510164,0.05007798,0.04652783,-0.012623911,0.0327449,-0.021018967,0.043854777,0.036838014,-0.0117990235,0.04677843,-0.020601302,-0.038278956,-0.04427244,-0.008295862,-0.015464029,0.002725261,-0.03554325,0.06628336,0.03955283,0.030405978,0.02750321,-0.038111888,0.002207096,-0.061730817,0.013772488,0.0038686178,0.0013404421,0.029612415,-0.044606574,-0.02620845,-0.028630903,-0.02861002,0.017218221,-0.060143694,-0.022345053,0.015704187,0.03558502,0.02491369,0.0037302664,0.05525702,-0.01806399,0.0046569593,-0.011109876,-0.0032264586,0.0028662228,0.040179327,-0.034394674,0.014555609,0.011621515,-0.0046569593,-0.04698726,0.0026365074,0.028881503,0.011913881,-0.00057037314,-0.045066003,0.042810615,-0.0018298927,0.022762718,-0.027419677,-0.016529074,-0.01831459,-0.009021554,-0.0092199445,-0.018011782,-0.011329151,-0.034332026,-0.046068396,-0.016591724,-0.053377528,0.03836249,0.006640866,0.011892998,-0.035397068,0.0149628315,0.025352238,0.0015101184,-0.035230003,0.02349363,0.053795192,0.0027931316,0.048783217,0.043311812,-0.02219887,-0.03330875,-0.014398985,0.036336813,-0.02633375,0.0035814734,-0.0023089019,-0.043311812,-0.020977201,0.014378102,-0.014200594,0.0073091295,0.017844718,-0.0073300125,-0.021822972,-0.016393334,0.013866463,-0.004816194,0.013542772,-0.0068183737,-0.0015819045,-0.030238912,0.018794904,0.006614762,0.031993102,-0.004957156,-0.06945761,-0.008248875,-0.047864355,-0.0006193182,-0.015171664,-0.0016328073,-0.040805824,-0.04130702,-0.010869719,-0.025122521,-0.011402242,-0.08938021,-0.018210175,0.014858415,-0.003487499,-0.033809945,-0.047780823,0.029549766,-0.0199226,0.005066793,-0.012248012,-0.007564949,-0.012060063,0.024182776,0.039302234,0.03147102,0.04748846,-0.03558502,0.010827953,0.039448414,-0.01009704,0.009982183,-0.002220148,-0.003150757,0.023284798,-0.0069019063,0.017980458,0.05972603,-0.043019447,-0.041119073,0.029633299,0.0113918,-0.02453779,0.018210175,-0.026834946,0.031303957,-0.06665926,0.0011355254,0.05287633,0.045191303,-0.037819523,-0.009679375,0.03788217,-0.005377431,-0.0022684406,-0.0035840839,0.000074763586,0.050579175,0.029215634,-0.008807501,0.009856883,0.010086599,0.035438836,0.0023584994,-0.033684645,-0.016121851,-0.019400518,0.023389215,0.005675017,0.010154469,0.002821846,0.011381359,0.028756203,0.014054412,0.017552352,-0.0023519734,0.017113805,-0.009131191,0.0130833415,-0.025247822,0.01301025,-0.06411151,-0.008556902,0.035940032,0.01495239,0.029424466,-0.049994446,-0.027753808,0.022616535,-0.011663282,0.010880161,-0.0078051058,0.023347447,0.0052416897,0.008797059,-0.06741106,-0.062232014,0.00045094718,-0.048574384,0.0079617305,0.024892807,0.008723968,-0.0038947219,0.013949996,-0.029466232,0.015568445,-0.030176263,-0.0003980865,-0.006301514,-0.004737882,-0.014910623,-0.024036594,-0.020747487,-0.023848645,0.012561261,0.013574097,0.028296772,0.041766454,0.02407836,0.007564949,0.0063119554,-0.015850369,-0.06603276,-0.025310472,-0.021739438,-0.014921065,-0.019129036,0.015766837,-0.03282843,0.008452486,-0.0056071463,0.009569739,-0.032849316,0.0050850655,-0.0005631945,-0.033684645,-0.020204522,-0.060728423,0.017761184,-0.030510394,-0.009663713,0.02368158,0.00712118,0.04306121,0.0045864787,0.036065333,0.0388428,0.018116198,-0.053628128,-0.057428874,-0.029048568,0.0062179808,0.0034718364,-0.012028739,0.021248683,-0.002814015,0.033413164,0.017364403,-0.03406054,-0.01922301,0.039761662,0.021990038,-0.06962468,-0.0023271746,-0.042810615,-0.008556902,0.04239295,-0.107256256,0.019003736,0.029340934,-0.023180382,-0.010175352,0.0018612175,-0.012373311,0.009340023,0.03625328,-0.01501504,-0.010264106,0.014806207,0.023890411,0.013897788,-0.005654134,0.008123575,-0.012133155,0.020611744,0.067285754,0.04318651,-0.01430501,0.025769902,-0.0712118,0.0029210413,-0.001889932,-0.016299358,-0.038258072,0.0065991,0.010342418,0.012728327,-0.0027539756,0.0390934,-0.023577163,0.005152936,-0.017959574,0.010013507,0.017218221,0.01145445,0.054338157,0.033162564,-0.01838768,-0.012926717,-0.018627837,0.029863015,-0.005450522,-0.03915605,-0.039448414,0.000034689812,0.036838014,-0.0163098,0.03721391,0.020465562,-0.011527541,-0.038654853,-0.049743846,-0.06077019,0.022992432,-0.035522368,0.028651787,0.0017633275,0.0041322685,-0.015390938,0.008697864,0.036733598,-0.02161414,0.008342849,-0.003150757,-0.017917808,0.02297155,0.019494493,-0.0037015518,-0.037903056,0.007815547,0.033371396,0.047154326,0.021697672,-0.02207357,-0.0064581377,0.022679184,-0.0052025337,0.04736316,0.02071616,-0.012613469,-0.01074442,-0.016978063,-0.024704857,-0.009345244,0.0155997705,0.024036594,-0.026981128,0.013313057,0.0011244313,-0.03330875,-0.0057898746,0.01961979,0.0042810617,0.007194272,0.042935915,-0.038404252,0.012195804,-0.06227378,-0.006886244,-0.038425136,0.058598336,0.019316984,-0.04748846,-0.08278111,-0.021864738,0.04393831,-0.012561261,0.006270189,-0.0356059,-0.031700738,0.041536737,0.018084874,-0.021969154,0.003487499,0.035877384,0.001598872,0.0079460675,-0.03514647,-0.010692212,0.031345725,0.0055236137,0.0078103268,-0.02932005,-0.08679069,-0.010185794,-0.029800365,-0.015202989,0.0042888927,0.012070505,-0.015004599,0.006505125,0.010117923,-0.017677652,-0.044439506,0.02213622,-0.040617876,0.0850365,-0.048449084,0.030071847,0.011433567,0.11076464,-0.028296772,-0.029111218,-0.04032551,-0.0794398,-0.009068541,0.0072778044,-0.038070124,-0.008494252,-0.010911486,-0.034248494,-0.033809945,-0.012644794,0.0062597473,0.008880592,-0.0016328073,-0.0068496983,0.055424083,0.02374423,-0.019379634,-0.038341604,-0.023055082,-0.022094455,-0.022240637,0.0019630233,-0.011527541,-0.012801418,0.010838395,-0.019442284,0.0178656,-0.040304627,0.0014996767,0.042037934,0.002814015,-0.056510013,0.013438356,-0.014879299,0.029236518,0.01533873,0.022804484,-0.04155762,-0.008990229,-0.0021118163,-0.005941278,0.016998947,0.0117990235,0.0131982,0.010995019,-0.04402184,-0.0062232018,0.005455743,-0.031303957,-0.0013913449,-0.025519302,0.023598047,0.014461635,0.03589827,-0.027649391,-0.0017724639,0.023117732,0.018888878,0.005528834,-0.03514647,0.017562794,0.04007491,-0.017228661,0.020820577,-0.01703027,-0.06056136,0.033747293,-0.011621515,-0.044815406,0.0051555466,0.01780295,0.0011205156,-0.040158443,-0.02460044,0.006828815,-0.02207357,-0.0045734267,0.02608315,0.03397701,0.0032055753,-0.025456654,-0.041912638,0.023765111,0.013929112,-0.011120318,0.02892327,0.0067557236,0.019129036,0.03869662,-0.004121827,0.027398793,-0.013908229,-0.0013991762,-0.05358636,-0.021718556,-0.008134017,-0.02472574,-0.006077019,-0.011203852,0.0008901475,-0.014075295,-0.024287192,-0.015296964,-0.036065333,-0.00080987765,-0.003597136,0.0053278334,0.013626305,0.049033817,-0.04187087,-0.03422761,0.048908517,0.0042810617,0.014148386,-0.0016876258,-0.010535588,-0.043562412,0.012227129,0.006395488,-0.011590191,-0.013835138,0.031429257,-0.012070505,0.02802529,0.0033778618,0.0053356644,-0.00080857245,0.048031423,-0.00067348406,-0.0025190392,0.005249521,0.0023728567,0.014075295,-0.03637858,-0.024391608,0.031345725,0.029508,0.067202225,0.022637418,0.0069854395,0.0036258502,0.004497725,0.0229089,0.029403584,0.015307405,0.005779433,-0.030176263,0.015244756,0.0075492864,0.04335358,0.0052260277,0.020225406,-0.011590191,-0.015923461,-0.027837342,0.029006802,-0.0009403978,-0.034666155,0.015505795,-0.040847592,0.042727083,0.003286498,-0.0059621613,-0.025811668,0.029173868,0.019734649,0.010305872,0.030259795,0.0035945254,-0.0012725716,-0.017333077,0.013605422,0.027712042,0.019557143,0.02620845,-0.0046491283,-0.0390934,-0.012770093,-0.035397068,-0.019400518,-0.0077946642,-0.009747246,0.029132102,-0.017228661,0.0043123863,-0.013407032,0.02595785,-0.031345725,0.036838014,0.002239726,-0.06619983,0.022637418,0.016038317,0.019953923,0.0026782737,-0.0006963251,-0.0019343089,-0.021906504,-0.016988505,-0.027774692,0.022052687,-0.00886493,-0.014085736,0.029988313,0.02821324,-0.0067557236,-0.019640675,0.020402912,-0.018377239,0.018304149,-0.021384424,-0.028129706,-0.014075295,0.022303287,0.04523307,-0.047154326,0.04020021,-0.018951528,-0.011276943,-0.035355303,0.0073352335,-0.029528882,-0.019734649,0.00041048593,-0.026104033,0.05429639,0.014179711,-0.0063589425,-0.02510164,-0.022992432,0.023514513,-0.021697672,-0.0137098385,0.030844526,-0.025978735,0.011287384,0.021123383,-0.0041270475,0.00964283,-0.047780823,0.0052886773,-0.0026325919,0.013626305,-0.013125108,0.035397068,0.018617397,0.012895392,0.008181004,0.032285467,0.012634352,-0.006588658,0.017353961,0.005654134,0.0070637516,0.0014526894,-0.018774021,-0.050662708,0.05521525,-0.03541795,-0.008379395,-0.041515853,-0.0329955,0.0014070075,0.012853626,0.009115528,0.03616975,-0.03126219,0.018304149,-0.102661945,-0.0036336815,-0.026563464,0.0032369,0.002490325,-0.028881503,-0.028380305,0.025310472,0.012864067,0.021509724,0.0048527396,0.020298496,-0.016163617,0.011673723,0.02620845,-0.019734649,0.023201264,0.019880831,-0.042727083,0.04418891,0.0099613,0.04995268,-0.02361893,0.0057167835,0.013041575,-0.029006802,0.006024811,-0.037548043,-0.033162564,-0.0199226,0.015161223,-0.022470351,-0.03804924,0.029549766,-0.008243654,0.025936967,0.013626305,-0.004414192,0.025602836,-0.0008555597,0.037840407,-0.043854777,0.0061605517,-0.023869528,-0.041056424,0.030969825,0.038821917,0.0061866557,0.006640866,-0.011924323,0.009554076,-0.031408373,0.0129476,-0.0057376665,-0.01527608,-0.005560159,0.005119001,-0.025686368,-0.01856519,0.023451863,-0.013480123,0.042747963,-0.00060235057,0.029800365,-0.037151262,0.0055653797,-0.010984577,-0.000029407825,-0.012321103,-0.020883227,0.003798137,0.011297826,0.0073091295,-0.0018468604,-0.041766454,0.02238682,0.0105147045,0.012843184,-0.0057950956,0.0424556,0.024871923,0.025247822,-0.033956125,0.022929782,-0.033642877,0.034519974,0.011224735,-0.006181435,0.0038268513,0.0036806688,-0.0034509532,0.015819045,-0.008144459,0.014294568,-0.012122713,-0.023827761,0.008770955,0.0361071,0.008943242,-0.01838768,0.015578887,-0.011621515,0.0034901092,-0.0076850276,0.046820194,-0.00692279,-0.015046365,0.03656653,0.017771626,0.031846922,-0.02324303,-0.019379634,0.01572507,0.029528882,0.028275888,-0.06361031,-0.034332026,0.03009273,0.00841594,-0.011276943,-0.000061752355,-0.02244947,-0.0004982607,-0.009021554,-0.03209752,0.016925855,0.028338538,0.016560398,-0.0035997462,0.021133825,0.012352428,-0.042351183,0.0526675,0.0026939362,-0.032285467,0.0071159597,-0.007872976,-0.012248012,0.013156433,0.0149837155,-0.0045264396,-0.04418891,0.040576108,-0.0017554963,0.0070637516,-0.029215634,-0.021342658,-0.009919533,0.026876712,-0.00057853066,0.059391897,-0.021008527,0.0008620857,-0.016184501,-0.011757256,0.031867802,-0.02750321,0.005920395,-0.033225212,-0.006802711,-0.018533863,0.016539516,0.013480123,-0.038863685,0.01268656,-0.005152936,0.0229089,0.006505125,-0.01624715,-0.01960935,0.02466309,0.016455982,0.013375707,-0.0040852814,0.019964365,-0.008102692,0.0021783817,0.026709648,-0.016069643,0.010133586,0.04677843,0.02284625,0.013323499,0.0043123863,0.00035729897,-0.0023859087,-0.025686368,-0.042810615,-0.0055392757,-0.014660025,-0.0012445098,-0.0076067154,-0.06064489,-0.02633375,-0.015182106,0.010848836,-0.0024446428,-0.039511066,0.021269567,-0.021018967,0.02213622,0.010248443,0.028067056,0.018993294,-0.012456845,-0.037756875,-0.030719226,0.020444678,-0.021927388,0.013970879,0.010232781,-0.0025856046,0.0057846536,-0.050370343,0.013688955,0.026626114,-0.024370726,-0.023848645,-0.0047091674,0.017594118,0.04427244,-0.01780295,0.0029314829,0.014002204,-0.035940032,0.03888457,-0.026646998,-0.0042706197,-0.011318709,-0.014534726,0.011339592,-0.0054609636,0.016518632,-0.018293707,-0.006619983,0.008739631,0.019776415,0.01715557,0.010629563,-0.008227991,-0.008588227,0.0293827,0.036608297,0.028129706,0.032243703,0.0015062027,-0.016362008,0.011120318,-0.024057478,0.02420366,-0.048783217,-0.002136615,0.0029079893,-0.028401189,0.034874987,0.0149732735,-0.013991762,-0.012603028,0.038111888,-0.0008738325,-0.034123193,0.04078494,0.0018664384,-0.048449084,-0.011308268,0.00066271616,0.033496697,0.0023911295,0.013438356,0.0017554963,-0.030364212,-0.045483667,0.04911735,-0.0045159976,0.003837293,0.030865408,-0.028171472,-0.04007491,0.020538654,0.016602166,-0.0075806114,0.0076067154,0.02620845,-0.0009939111,-0.013271291,-0.022616535,-0.018711371,0.028380305,0.04059699,-0.025811668,0.030823642,0.02238682,-0.0113918,0.013219083,0.0130624585,-0.021384424,-0.041056424,0.013177316,-0.0017816003,-0.0012014381,-0.02478839,0.012582144,-0.034540858,0.04991091,-0.01928566,0.0258952,-0.0130520165,0.00006252732,0.043270044,0.02762851,0.02219887,-0.0143154515,-0.0059882654,-0.04045081,-0.01424236,-0.006327618,0.0043176073,0.0062232018,-0.012341987,-0.035835616,-0.03612798,-0.042058818,0.0007857314,0.015651979,-0.011548424,0.022867134,-0.015745953,-0.053962257,-0.0039599817,-0.0016471645,-0.0037563704,-0.006270189,-0.001741139,-0.0076537025,-0.036879778,0.005223417,0.018680045,0.016069643,0.025394004,0.022219753,-0.009606284,-0.009005891,0.013041575,0.0007857314,-0.008791839,-0.030760992,0.0055758217,0.008201887,-0.020006131,0.0092251655,0.011631957,-0.03015538,0.008927579,0.000020985195,0.008760514,-0.008165342,-0.024287192,0.016988505,-0.008452486,0.0009926058,-0.006776607,-0.03339228,0.0032290688,-0.00595172,-0.04757199,0.01119341,0.002213622,-0.031575438,-0.0017398339,-0.004419413,0.019891273,0.002615624,0.016654374,-0.011913881,-0.0056645754,0.0007139453,-0.026772296,-0.028401189,0.008081809,0.048449084,0.0014644363,0.015098573,-0.0018390291,-0.030405978,-0.03145014,-0.02861002,-0.0047143884,-0.015380496,0.0062075392,-0.028651787,-0.008807501,0.05425462,0.0149732735,-0.0024877144,0.00763804,-0.018857554,0.009919533,-0.0026887155,0.03936488,0.04310298,0.019431842,0.026459048,0.021447074,0.014117061,0.016539516,0.013501006,0.0009991318,-0.015390938,-0.020590862,-0.004583868,-0.038091004,-0.006499904,-0.027816458,-0.0061970977,0.0046543493,0.006865361,-0.0015819045,0.03021803,-0.028714437,-0.011088993,0.013020691,-0.001255604,-0.009757687,-0.014472076,0.01119341,0.0130937835,0.030238912,0.036712714,0.013584539,0.004957156,0.013104225,0.048616152,-0.02892327,0.032911964,-0.013354824,-0.0071107387,-0.009627167,0.0011276943,0.009695038,-0.06406974,0.019369192,0.027482327,0.023598047,0.012968483,0.031763386,-0.013542772,0.0060404735,-0.0069071273,-0.010974135,0.0053147813,-0.02343098,0.0011283469,-0.0049310517,-0.01514034,-0.008410719,0.020663952,-0.030928059,0.0023598047,0.019776415,-0.020684836,0.013344382,0.0054191975,0.037756875,0.007857314,-0.03761069,-0.027002012,-0.012237571,-0.029090336,0.0015649368,0.008499473,-0.010953252,-0.03147102,-0.0009945637,0.027816458,-0.0029158206,-0.029006802,0.028171472,-0.017009389,0.027795576,0.024370726,0.007674586,0.055173486,-0.038926333,-0.008040043,-0.03431114,-0.009653271,0.060853723,0.010765303,0.00081444584,0.021467958,0.041515853,-0.001961718,-0.017259987,-0.005079845,-0.02718996,-0.013501006,0.0010617815,-0.04489894,-0.024516908,0.021802088,0.021927388,0.031366605,0.043395344,0.025728134,-0.0048657916,-0.0212278,-0.013187758,-0.005280846,0.0064111506,0.035940032,0.019003736,-0.011360476,0.006943673,-0.015317847,-0.0212278,0.00033608943,0.022804484,-0.028526487,0.012968483,0.025916085,0.00075244874,-0.017458377,0.012780535,0.02466309,-0.00880228,0.0035109925,0.0011772919,0.007909522,-0.0015688525,0.036754478,0.019233452,-0.0049780393,0.008870151,0.026584348,-0.014127503,0.01268656,0.0028636125,0.0077059106,0.008650877,-0.0003889501,0.028651787,0.008927579,0.01359498,-0.009204282,0.02167679,0.0042497367,0.0010656972,-0.0007093771,0.029800365,0.013897788,-0.005774212,0.014002204,-0.015443146,0.011537983,-0.014774883,0.021018967,0.03541795,0.013949996,0.007648482,0.008708306,0.005273015,0.027294377,-0.0032290688,-0.020037455,0.006322397,0.023890411,-0.02537312,-0.032389883,0.022553885,0.0061135646,-0.0016523853,-0.008144459,-0.000634328,0.030948943,-0.018335473,0.023514513,0.013292174,-0.032765783,0.025059871,0.015088132,0.01928566,-0.044230673,0.014618259,-0.012352428,-0.0024159283,-0.01934831,0.0042053596,0.010034391,-0.004147931,0.02497634,0.024224542,-0.0005651523,-0.017510585,-0.0032212378,0.019181244,-0.00035044664,-0.027022894,0.017427053,0.03637858,0.0060143694,-0.030948943,-0.04498247,0.0327449,-0.010880161,-0.005507951,0.00048945064,-0.05287633,0.009308699,-0.0099038705,0.029340934,-0.022428585,0.0062858514,-0.021572374,-0.0046125827,0.012018297,0.018210175,0.010786187,0.01125606,0.045734268,-0.0019917376,-0.0030411198,-0.014733116,0.022157103,0.0010559082,-0.056677077,-0.0099038705,-0.0052469107,-0.013949996,-0.041244373,0.03677536,-0.010337197,-0.012540378,-0.0009913007,-0.0124464035,-0.030781876,0.0063798255,-0.009402673,0.040722292,0.0086352145,0.028630903,0.0017502755,0.0045603747,0.0013430525,0.020402912,-0.002550364,0.02084146,0.0032630041,-0.024496024,0.053126927,-0.019045502,0.028338538,0.04698726,-0.00042647464,0.040931124,0.009094645,0.03936488,0.011266501,-0.044606574,0.0019982636,0.0068496983,0.05333576,0.010003066,-0.013490564,0.017907366,-0.01410662,-0.04297768,-0.035668552,-0.005883849,-0.0049597663,-0.019003736,-0.016988505,-0.0124359615,-0.034582622,0.0039704232,0.028651787,-0.010133586,0.0011224734,-0.010817511,0.004051346,0.0018651332,-0.014200594,-0.02990478,-0.018669605,0.017312195,0.03481234,-0.02336833,0.004226243,0.033768177,0.0053147813,0.028255006,-0.0058420827,0.043019447,0.02064307,0.041369673,-0.0012673509,0.028839735,-0.02065351,0.007591053,-0.0006121396,-0.011736373,0.008034822,-0.008859709,-0.022992432,0.014774883,0.047739055,0.023347447,0.030865408,-0.015829487,-0.015380496,-0.024746623,-0.023785995,0.008353291,0.055799983,0.00035925675,-0.011015902,0.029487116,-0.03330875,-0.019745091,0.016685698,-0.0043202173,0.00977335,-0.010264106,-0.009794233,-0.03422761,0.0008438129,-0.016664814,-0.030301562,0.013991762,-0.004633466,-0.006155331,0.027586743,0.0019147309,-0.032118402,0.027607625,0.01695718,0.0007315655,0.0018298927,0.051163904,-0.0324943,-0.0024681364,0.0009815117,0.012582144,-0.034144077,-0.005398314,0.014879299,0.006745282,-0.027941758,0.023034198,0.0002830656,0.0050589615,0.036482997,0.031533673,0.0212278,0.027231727,-0.02115471,0.04920088,0.002252778,0.019264776,-0.012049622,-0.024349842,-0.005184261,0.033997893,0.02543577,0.012341987,0.0073039085,-0.009418335,-0.01067655,0.024287192,-0.0077111316,0.054797586,0.003469226,0.014847974,0.024955455,0.015004599,-0.0036937208,0.015213431,0.010754862,0.032076634,0.016612606,-0.016560398,-0.019055944,0.03844602,-0.025581952,0.02802529,0.04828202,-0.029863015,-0.010191015,0.0033778618]},{"id":"pow-x-n","name":"Pow(x, n)","description":"`Pow(x, n)` is a mathematical function to calculate the value of `x` raised to the power of `n` (i.e., `x^n`).\n    \nGiven a floating-point value `x` and an integer value `n`, implement the `myPow(x, n)` function, which calculates `x` raised to the power `n`.\n\nYou may **not** use any built-in library functions.\n\n**Example 1:**\n\n```java\nInput: x = 2.00000, n = 5\n\nOutput: 32.00000\n```\n\n**Example 2:**\n\n```java\nInput: x = 1.10000, n = 10\n\nOutput: 2.59374\n```\n\n**Example 3:**\n\n```java\nInput: x = 2.00000, n = -3\n\nOutput: 0.12500\n```\n\n**Constraints:**\n* `-100.0 < x < 100.0`\n* `-1000 <= n <= 1000`\n* `n` is an integer.\n* If `x = 0`, then `n` will be positive.\n","difficulty":"Medium","concepts":["Factorial"],"solutions":{"python":"class Solution:\n    def myPow(self, x: float, n: int) -> float:\n        def helper(x, n):\n            if x == 0:\n                return 0\n            if n == 0:\n                return 1\n\n            res = helper(x * x, n // 2)\n            return x * res if n % 2 else res\n\n        res = helper(x, abs(n))\n        return res if n >= 0 else 1 / res\n","javascript":"class Solution {\n    /**\n     * @param {number} x\n     * @param {number} n\n     * @return {number}\n     */\n    myPow(x, n) {\n        /**\n         * @param {number} x\n         * @param {number} n\n         * @return {number}\n         */\n        function helper(x, n) {\n            if (x === 0) {\n                return 0;\n            }\n            if (n === 0) {\n                return 1;\n            }\n\n            const res = helper(x * x, Math.floor(n / 2));\n            return n % 2 === 0 ? res : x * res;\n        }\n\n        const res = helper(x, Math.abs(n));\n        return n >= 0 ? res : 1 / res;\n    }\n}\n","cpp":"class Solution {\npublic:\n    double myPow(double x, int n) {\n        if (x == 0) {\n            return 0;\n        }\n        if (n == 0) {\n            return 1;\n        }\n\n        double res = helper(x, abs(static_cast<long>(n)));\n        return (n >= 0) ? res : 1 / res;\n    }\n\nprivate:\n    double helper(double x, long n) {\n        if (n == 0) {\n            return 1;\n        }\n        double half = helper(x, n / 2);\n        return (n % 2 == 0) ? half * half : x * half * half;\n    }\n};\n","java":"class Solution {\n    \n    public double myPow(double x, int n) {\n        if (x == 0) {\n            return 0;\n        }\n        if (n == 0) {\n            return 1;\n        }\n\n        double res = helper(x, Math.abs((long) n));\n        return (n >= 0) ? res : 1 / res;\n    }\n\n    private double helper(double x, long n) {\n        if (n == 0) {\n            return 1;\n        }\n        double half = helper(x, n / 2);\n        return (n % 2 == 0) ? half * half : x * half * half;\n    }\n}\n","csharp":"public class Solution {\n    \n    public double MyPow(double x, int n) {\n        if (x == 0) {\n            return 0;\n        }\n        if (n == 0) {\n            return 1;\n        }\n\n        double res = Helper(x, Math.Abs((long) n));\n        return (n >= 0) ? res : 1 / res;\n    }\n\n    private double Helper(double x, long n) {\n        if (n == 0) {\n            return 1;\n        }\n        double half = Helper(x, n / 2);\n        return (n % 2 == 0) ? half * half : x * half * half;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def myPow(self, x: float, n: int) -> float:\n        ","javascript":"class Solution {\n    /**\n     * @param {number} x\n     * @param {number} n\n     * @return {number}\n     */\n    myPow(x, n) {}\n}\n","cpp":"class Solution {\npublic:\n    double myPow(double x, int n) {\n        \n    }\n};\n","java":"class Solution {\n    public double myPow(double x, int n) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public double MyPow(double x, int n) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/g9YQyYi4IQQ","embedding":[0.02667585,-0.03850735,0.0074441675,-0.0055473894,0.044796955,0.020386243,0.005272494,0.00741118,0.015042277,0.011023306,0.005288988,-0.026367968,-0.061532587,-0.021727733,-0.008609724,0.019033758,-0.002307747,0.00039722386,-0.0069713476,0.055198997,-0.010512001,-0.0057563097,0.03800154,-0.04068452,0.045742597,-0.0084118,-0.00399423,0.0037385775,0.039540954,-0.021540804,0.010726419,-0.007724561,-0.0029166404,-0.034460887,0.0021538055,-0.016229825,0.013689792,0.0012061036,0.0061906446,0.01327195,-0.0078070294,-0.0872628,-0.04446708,0.021595784,0.013052034,0.0012521485,-0.0320638,-0.05401145,0.022068603,0.033779148,0.009077046,0.016306795,0.023091214,0.018747866,-0.02126591,-0.022915281,-0.008824143,0.013249959,-0.027709458,0.028523147,0.021089977,-0.03182189,0.03518661,-0.01616385,0.030700319,0.010341565,0.029688705,-0.022013625,0.0149982935,-0.022266528,0.0039777365,0.042883683,-0.005082816,-0.0061906446,-0.013821742,0.021298897,0.015042277,0.011754528,0.022376487,-0.017681273,-0.010099657,-0.021870678,0.006113674,0.025532285,0.015526093,0.0054951594,-0.018341022,-0.019561557,-0.036835983,-0.04112435,-0.028831031,-0.008428293,-0.008356821,0.036857978,0.024894528,-0.012172368,0.04393928,0.04512683,0.03828743,0.031184135,-0.005412691,0.03771565,0.053131785,0.021320889,0.030524386,0.049525157,-0.01907774,-0.006410561,-0.061004788,0.020903047,-0.014327548,0.008246862,-0.0012610827,-0.00081987557,-0.024520671,-0.017802227,0.0046402346,0.012150377,-0.031733926,0.029204888,-0.0014074645,-0.009604845,-0.0268078,-0.03461483,-0.0036341173,-0.022123583,-0.0073342095,-0.04108037,0.028061323,0.024300754,0.05088864,-0.03815548,0.007345205,0.015449122,-0.03322936,-0.039694898,0.008879121,0.0030211005,-0.0062126364,0.052472036,0.02628,0.022112587,-0.03234969,-0.010621958,0.016658662,0.0052560004,0.008439289,-0.025994109,-0.018989775,0.022310512,0.0036423642,0.035516486,0.019935414,0.04108037,0.0041564186,-0.034548856,0.0030403433,0.012645189,0.030370444,0.018044135,-0.009797272,-0.004368088,-0.061004788,-0.0047611883,0.01986944,0.028940989,-0.012865105,-0.053131785,-0.027313609,-0.029028956,-0.0026926005,0.023597023,0.04675421,-0.012139381,0.031865876,-0.008092921,0.009714804,-0.060872838,-0.097554885,0.034526862,-0.040728502,-0.005404444,-0.016119868,-0.03111816,0.05022889,0.018780854,-0.017538328,-0.027313609,-0.0020452219,0.051768303,-0.0052944855,0.016394762,0.018758863,0.024564654,-0.022519432,-0.021408854,0.045346748,-0.08365617,-0.016647667,-0.024564654,-0.030590361,-0.0005693771,0.01198544,0.032283716,0.056782395,-0.06430353,-0.047897775,-0.011166251,-0.028171282,-0.034196988,-0.009654326,-0.05000897,0.048117694,-0.054715183,-0.016306795,0.0072902264,0.042707752,-0.013821742,0.013238963,0.08326032,-0.008087423,0.023772955,0.029974595,0.018758863,0.029798662,0.01792318,0.015800988,0.0054071927,0.009907231,-0.002688477,-0.01931965,0.043125592,0.014349541,0.011270712,0.011435649,-0.02586216,-0.0011916716,-0.011556603,-0.037913576,0.025224403,-0.017043516,0.010698929,0.02168375,0.012909088,-0.019704502,0.0063940673,-0.05106457,0.019693507,-0.0153721515,-0.00091540173,-0.024960503,-0.014712403,0.027401574,-0.02693975,-0.03190986,-0.010165632,0.03164596,-0.0056106155,-0.033999063,-0.01845098,-0.009874243,-0.04987702,-0.027137674,-0.105032034,-0.009835757,-0.011754528,-0.020089356,0.060872838,0.0027090942,-0.0054291845,0.03947498,-0.032767534,-0.0064930297,-0.021024002,-0.025136435,-0.03622022,-0.0064215567,0.016339783,-0.027291616,-0.059861224,-0.046050478,-0.041696135,0.0449509,-0.007246243,0.04525878,-0.0053797034,-0.02951277,-0.0049536154,0.026455933,-0.0541434,-0.045918528,0.014547465,-0.0010184875,0.021903666,-0.010110653,-0.04171813,-0.054979082,-0.011864486,0.044533055,-0.043587416,-0.00707031,-0.004978356,0.00031063182,-0.005811289,-0.021419851,-0.056870364,0.023025239,-0.0105559835,0.013326929,0.030348454,0.006894377,0.0074001844,-0.022255532,0.051812287,-0.06276412,-0.01737339,0.0073836907,-0.007048318,-0.024498679,-0.008417297,-0.009296963,0.00040100366,0.042993642,-0.034856737,0.040618546,-0.013645808,0.0008006329,0.037341792,0.0441592,-0.017934177,-0.05955334,0.008109415,0.02073811,0.021617776,-0.008054435,-0.009088042,0.08282049,-0.04662226,-0.004249883,0.005871766,0.0069713476,0.0075101424,0.004653979,0.0050608246,0.012293323,-0.008312837,0.010610963,0.017703265,0.028721072,0.01253523,-0.010138143,0.02223354,0.021980638,0.00066765223,0.015998913,-0.005580377,-0.07173671,-0.009478394,-0.032151766,0.0044835443,-0.07081306,0.017461356,-0.008994577,-0.01879185,-0.014239582,0.04086045,0.057574093,0.0058002933,0.04000278,0.053923484,-0.007235247,0.086691014,-0.014041658,0.02493851,-0.013019047,-0.005987222,0.0060257073,-0.012909088,0.010902352,-0.05106457,-0.024300754,0.008571239,0.011358678,0.0058442764,-0.015526093,0.036879968,0.06016911,0.0074716574,-0.03336131,-0.036022294,0.025510294,-0.06430353,0.02720365,0.024674611,-0.021122964,-0.024476686,0.0060751885,0.025378345,0.0025111695,0.023662997,-0.03125011,0.016306795,0.005319226,0.0050113434,-0.039804853,-0.038881205,-0.018879816,-0.0097038075,0.011864486,0.041410245,-0.013986679,0.048997357,0.0009992449,-0.026389958,0.016603682,-0.017945172,0.00967082,0.023794947,0.027841408,0.004906883,-0.019484587,-0.0024383222,0.030590361,0.00068242784,0.004291117,-0.011391666,-0.030744303,-0.03892519,0.019891432,0.010577976,0.04987702,0.038969174,-0.015658043,0.024696603,-0.043345507,0.062676154,-0.03918909,0.01232631,0.050448805,0.018703884,-0.0533517,-0.025246395,0.02964472,-0.008521758,-0.034526862,-0.03866129,0.014514478,0.006526017,0.027159667,0.009143021,0.019088738,-0.0014720649,0.06522718,0.019572552,0.0010555984,-0.018956788,0.024608636,0.02557627,0.014470494,0.025136435,0.00094976363,0.031338077,-0.019693507,-0.034966696,0.04070651,-0.004079448,-0.027797423,-0.00033794955,-0.0019751235,0.025994109,0.020826077,0.0034004562,0.010825382,0.0045687617,-0.043059617,-0.002691226,-0.004428565,0.07974166,-0.022134578,-0.004428565,-0.006751431,-0.017076503,-0.00017258278,-0.04846956,0.022871299,0.039936803,0.060301058,0.0050195903,-0.023860922,-0.012095398,0.017736252,-0.02028728,0.030106544,-0.008466778,0.010264594,0.022244537,0.007829022,0.009632335,-0.033163384,0.0055199,-0.038221456,-0.0002085769,-0.054495268,-0.05735418,0.024982495,-0.017296419,0.007993959,-0.008923105,-0.028435182,0.015789993,-0.008582234,-0.022409474,-0.023157189,-0.024850545,-0.034043048,0.014987297,-0.024146812,-0.028369207,-0.01811011,0.014052654,0.018560939,-0.0002568554,-0.023223164,0.033603214,0.0054759164,-0.043829326,-0.0265439,-0.027731448,-0.022398477,-0.019429607,-0.02559826,0.023992872,-0.0097422935,0.028435182,-0.020166326,-0.0055941218,0.021463834,0.015493105,0.006064193,-0.004095942,0.0006422244,0.021661758,-0.03852934,0.0039694896,0.0071582766,0.030920235,0.029930612,0.042311903,-0.01495431,0.006273113,-0.02079309,-0.017758243,-0.0063225944,-0.04943719,-0.024212787,0.018417992,-0.025884151,0.031272102,0.003661607,-0.0017414624,-0.034570847,-0.0119634485,0.0136677995,0.006449046,0.02196964,0.016790612,-0.022057608,0.017736252,-0.0027626988,0.040486597,-0.022585407,0.012370293,-0.0036258704,-0.031623967,0.01198544,-0.03841938,0.004145423,0.023245156,-0.015240202,0.0014115879,0.010457021,-0.006223632,-0.027665474,-0.026301993,0.001285136,-0.03648412,0.020936035,0.007862009,0.01595493,-0.0088516325,-0.0069768457,0.016570695,0.017692268,0.0023860922,-0.004365339,-0.006883381,-0.024168804,0.00074015587,0.025004486,-0.012876101,0.0038457867,0.02641195,0.026609875,0.0063006026,-0.00336472,-0.027181659,-0.0070813056,0.05132847,-0.047194045,0.033911098,-0.010638452,0.00549241,-0.0012768891,-0.009263976,0.0149982935,-0.0328555,0.022651382,0.046798196,0.013733774,0.015262193,-0.021111967,0.018626913,0.015702026,0.027115684,0.020573173,-0.01637277,-0.050712705,0.03987083,0.015339164,0.054847132,-0.007416678,-0.009055055,-0.011688553,0.012084402,-0.028853022,-0.0060751885,0.003411452,-0.01650472,-0.024388721,-0.031865876,0.01482236,-0.00032197125,0.029864637,0.009967707,0.018582929,0.06346785,-0.046050478,0.014558461,0.0005638792,-0.024036855,0.020353256,0.055858746,0.0032107783,-0.04147622,0.004544021,0.020111348,-0.022354495,-0.036572084,-0.04525878,-0.009654326,-0.009126527,-0.0168236,-0.019704502,-0.008142402,0.023553038,-0.012689172,-0.0017785733,-0.008274352,0.042641778,-0.023794947,-0.020705123,0.036835983,-0.035494495,0.009989699,-0.0066249794,0.016438745,-0.00066765223,0.046094462,-0.0015737762,-0.0058937576,-0.011952452,0.01158959,-0.02922688,0.036176234,0.045434713,-0.007834519,-0.01958355,0.012436268,-0.005690335,-0.0165597,-0.014052654,0.0024067094,-0.034548856,-0.011842494,0.01608688,-0.062676154,0.013194979,0.013601825,0.01211739,-0.08862628,-0.014976302,0.032921474,0.008285347,-0.019693507,-0.009846753,-0.05370357,-0.028347215,0.04147622,-0.0034884228,-0.0062016402,0.004673222,0.003532406,-0.038441375,0.055067047,-0.009291464,0.041564185,0.02423478,0.013238963,-0.0053714565,-0.00023056852,0.03243766,-0.0084118,-0.023047231,-0.013843733,-0.019726494,0.0071472805,0.023091214,0.038441375,0.037209842,0.01960554,-0.01763729,-0.020584168,-0.0077520506,-0.0048024226,0.007361699,-0.02383893,0.00565185,0.0037000922,0.017824218,-0.03789158,-0.023926897,-0.011776519,0.013381909,-0.0046787197,0.020012386,-0.023509055,-0.0068119084,-0.010253599,-0.008659205,0.0068009123,-0.018780854,0.0048079207,0.029710695,-0.009450904,-0.012073406,0.0073122177,-0.040244687,0.0012810125,0.025488302,-0.0066249794,-0.02924887,-0.004788678,-0.001705726,-0.00888462,-0.014382528,0.01797816,0.013491867,-0.006998837,0.0016796109,-0.010193122,-0.004007975,-0.014063649,0.010512001,-0.011292703,0.004145423,-0.04987702,-0.0007511517,-0.020804085,-0.009170511,-0.024476686,-0.013986679,0.013722779,0.01758231,-0.0009332699,-0.028897006,0.02262939,0.02317918,-0.017890193,0.028611114,-0.040662527,-0.032019816,-0.0197155,-0.023091214,-0.030766293,0.031733926,0.026895767,-0.00985775,-0.02383893,-0.01635078,-0.021013005,-0.019286662,-0.03208579,0.052384067,-0.036022294,0.006471038,0.02788539,-0.016834594,0.02841319,-0.013337925,0.033625208,0.052999835,0.036286194,-0.03850735,0.023223164,0.009154017,0.0038705273,-0.0056628454,-0.0034169499,0.008796653,0.0036808494,-0.000884476,-0.012018427,0.0062016402,-0.0029248872,-0.0022129081,0.0153721515,-0.000024719111,0.01752733,0.053131785,0.049789056,0.0012308442,-0.004725452,-0.03300944,0.019286662,-0.021584788,0.025356352,0.016009908,0.024960503,-0.023641005,0.02276134,0.0029441298,-0.01569103,0.0015187971,-0.054715183,0.0042938665,0.030788286,-0.017076503,-0.02531237,0.020375248,-0.024146812,-0.019616537,0.0002370973,0.0049453685,-0.03633018,-0.008026946,-0.022651382,0.0010714049,0.0021153202,-0.0040849457,-0.0023764707,0.029050946,-0.00483541,-0.0051048077,-0.008565741,-0.015636051,-0.02357503,-0.023487063,-0.020694125,-0.008362318,-0.0032437658,0.007251741,-0.004893138,-0.013799749,0.004986603,0.0045137824,0.002728337,-0.029072938,-0.0013586705,0.0066194814,-0.024410712,0.046974126,-0.022299515,-0.00026836665,0.01779123,0.0058002933,-0.046006497,-0.023750963,0.0026513662,-0.022277525,-0.034438897,0.004420318,-0.01642775,0.016009908,-0.0105944695,0.016130863,-0.0107759,0.034702796,-0.01790119,0.023245156,-0.020199314,-0.016075883,-0.010896854,0.027401574,-0.014030661,-0.027247634,-0.023025239,0.0076805777,0.03270156,-0.043037627,-0.029798662,0.047721844,-0.009208996,-0.010896854,0.0116665615,0.067514315,0.015031281,0.014030661,-0.0014322051,0.03380114,0.045434713,0.00014578048,-0.00082125,-0.033977073,-0.019638527,0.020364251,0.00019569117,0.00985775,-0.0052917367,0.053659584,-0.0026293746,0.036704034,0.0038705273,-0.02628,0.000012423984,-0.021529809,-0.06399565,-0.030656336,0.0060147117,0.030568369,0.018989775,-0.040244687,0.0122603355,-0.021386864,0.027819416,-0.005209268,0.03219575,0.016955549,-0.03450487,-0.007840017,0.011424653,0.018483967,-0.017043516,-0.011435649,-0.013118009,-0.003054088,-0.021441841,0.024960503,0.010457021,-0.024256771,0.011677557,0.0068119084,-0.04081647,-0.005701331,-0.004711707,-0.0012583337,0.031448036,0.0073122177,0.0035434018,0.04057456,-0.029864637,-0.0030101046,0.040530577,-0.024630629,0.015449122,-0.0014968055,-0.060784873,-0.016141858,0.027093692,-0.0039832345,-0.03353724,-0.0037248328,0.01400867,0.0024259519,0.039980788,0.03151401,0.051548388,0.037759632,-0.03336131,0.0045687617,0.016592687,0.027995348,0.04481895,0.023047231,-0.034526862,0.012018427,0.02113396,-0.00959385,0.016592687,-0.06474337,0.004291117,-0.04807371,-0.046710227,0.036748018,0.014602444,-0.00041955913,0.0005937741,0.057134263,-0.028501157,-0.017417373,0.011479632,-0.001331181,-0.0041784104,-0.05075669,-0.036132254,0.04213597,-0.0081479,0.0197155,0.019297658,-0.021881675,-0.031338077,-0.03296546,-0.012084402,0.0034581842,-0.009500385,0.0016796109,-0.016680654,-0.0042278916,0.00969831,-0.012711164,0.025664235,0.024762578,0.020463213,-0.02693975,-0.023377106,-0.039540954,0.023487063,0.016493725,0.00149818,-0.0012892594,-0.014195599,-0.004423067,-0.014349541,0.009082545,0.025972119,-0.01495431,0.044005256,-0.023487063,0.01797816,-0.021013005,-0.0019009018,-0.049261257,0.039672904,0.0094619,-0.01616385,0.013491867,-0.017164469,0.04367538,0.0110398,-0.008774661,-0.0005638792,-0.004249883,0.023421088,-0.032811515,0.01750534,0.011056294,0.039804853,0.003936502,-0.019275665,-0.052735936,-0.02317918,0.035208605,0.010803389,0.031338077,0.024388721,0.019066745,-0.031470027,-0.03030447,0.0071032974,0.0014569457,-0.040486597,0.031140152,-0.0003635492,-0.03580238,-0.01353585,0.001463818,0.02247545,0.018396001,-0.020705123,-0.0067624273,0.017186461,0.020034377,0.0030156027,-0.013425892,-0.012953072,0.0075651216,-0.028875014,0.033559233,0.030524386,-0.012678176,-0.0094619,0.0006490968,-0.00402172,0.028523147,-0.036528103,-0.04110236,-0.01138067,-0.028655097,-0.013238963,-0.030260487,-0.055111032,0.033427283,-0.0060092136,-0.03815548,0.02667585,-0.022453457,-0.02949078,0.023025239,0.004901385,-0.0009545743,-0.007955473,0.021672754,0.0065370128,-0.028237257,0.025686227,-0.046534296,-0.020452218,0.022937274,0.010094159,0.019495582,0.010176628,-0.0019325147,-0.027137674,0.019704502,-0.043345507,-0.00085423747,0.036726028,0.0019696257,-0.07010932,0.012150377,0.04367538,-0.014382528,-0.030964218,-0.0073507032,-0.0054236865,0.0051048077,-0.028303232,0.007856511,0.03663806,0.028633106,0.013315934,-0.008615222,-0.0021043243,0.06430353,-0.0073397076,-0.017824218,0.01979247,-0.01327195,-0.020386243,-0.03030447,-0.003914511,-0.040398628,0.0019902429,0.008565741,-0.0076091047,0.0013387407,-0.0011147009,0.01797816,-0.008081925,-0.000731909,0.029798662,-0.0013030042,-0.00013710409,0.008532753,-0.021397859,0.039980788,0.01931965,0.02586216,-0.024454696,0.05146042,0.0129970545,0.03138206,0.020650143,0.00014715495,0.00862072,0.004255381,-0.016449742,0.033559233,-0.030700319,-0.0038045524,0.03558246,0.012348302,-0.0055446406,-0.008483272,-0.021804703,-0.01327195,-0.020617155,0.03518661,-0.023399098,0.013920704,0.031030193,-0.0032685064,-0.00045804447,-0.010803389,0.007251741,-0.010676938,0.013722779,0.010231607,-0.0018596675,-0.0051872763,0.015746009,0.01279913,0.011177247,-0.008868126,-0.004071201,0.016581692,-0.024762578,-0.0011518118,-0.011501624,-0.0070868037,-0.007367197,-0.0039172596,0.020331264,-0.0016150106,-0.021089977,0.012887097,0.0064325524,0.0029716194,0.031272102,-0.007889498,0.018198077,0.0004728201,0.010704427,-0.04123431,0.013502862,0.041784104,0.0051872763,-0.018000152,0.006586494,0.037143867,0.0024506925,0.012975063,0.002999109,-0.0070977993,-0.0029468788,0.015306177,0.0058497745,-0.009901732,0.032019816,0.010105155,-0.023333123,0.014228586,0.012909088,0.013920704,-0.030392436,-0.020188319,0.025642244,0.014888335,0.0066084857,-0.03542852,-0.013700787,-0.058013927,-0.037693657,-0.026697842,-0.030634344,0.011754528,-0.03111816,-0.024168804,0.017604303,-0.030084554,-0.026236018,-0.0048793936,-0.03584636,0.05115254,0.033427283,0.03219575,-0.0030733307,0.021089977,0.03325135,0.017351398,0.015713021,-0.014679415,0.048821423,0.030590361,0.017296419,-0.0026953495,0.04268576,0.017956167,-0.018802846,0.028655097,-0.004849155,-0.007840017,-0.022959264,0.02357503,0.020529188,-0.0021689248,0.038177475,0.0121833645,0.040882446,-0.014294561,0.02317918,-0.021782713,0.004304862,-0.016735632,-0.012238343,-0.017736252,0.022563415,-0.0011408159,0.004238887,-0.008329331,0.04486293,0.008213875,-0.004357092,-0.007345205,0.0020410984,-0.023619013,-0.037011918,-0.00037042156,-0.017164469,0.007554126,-0.01056698,-0.008224871,0.020364251,-0.02949078,-0.0031887868,-0.02573021,-0.03298745,0.038221456,0.0029166404,-0.024586646,0.013282946,0.0050058453,-0.010962829,-0.010451524,-0.062676154,-0.01114426,0.0036671048,-0.0035653934,0.038067516,0.016185842,-0.010512001,-0.0011552479,-0.0023586026,-0.013238963,-0.012843113,0.0037908077,-0.0072022597,0.015119247,0.033427283,-0.045566663,-0.0024053347,0.0129970545,-0.0010755283,0.0011834247,0.006460042,0.00538795,0.003936502,-0.0020507197,0.03611026,-0.014217591,0.017164469,-0.018714879,0.013469875,0.02370698,0.01279913,-0.0001836645,-0.015669039,0.006564502,-0.011952452,0.011688553,-0.0041564186,0.005102059,-0.038485356,0.00743867,0.0011339436,-0.0036121258,-0.040354647,-0.0043818327,0.010391046,0.024564654,0.016020905,0.025818177,0.014921322,-0.004508285,0.0015820231,-0.02990862,0.0034911716,-0.023948887,0.015405139,-0.009973206,0.002601885,0.008483272,-0.03151401,-0.021749726,0.0018459227,-0.002630749,-0.008879121,-0.014338545,0.018385004,0.009307958,0.0066854563,0.014327548,0.04943719,-0.005272494,-0.004192155,-0.02693975,-0.0047446946,-0.023816938,0.031316087,0.026983734,0.022464452,0.022178562,0.015240202,-0.005008594,-0.013601825,-0.012073406,0.0055913725,-0.0036561089,-0.01279913,0.0042663766,0.010946335,-0.031030193,-0.033031434,0.0007683327,0.015262193,-0.003955745,-0.018879816,-0.048645493,-0.009159515,0.004065703,-0.023816938,0.010896854,-0.021408854,0.04974507,-0.034570847,0.061136737,0.0147783775,-0.018428989,0.023882912,0.008054435,-0.0033042429,-0.01542713,-0.011325691,-0.008070929,0.021628771,0.019825457,0.0016356277,-0.026214026,0.009137523,0.03450487,-0.02423478,-0.004486293,0.018670896,-0.008400803,0.017406378,0.018692888,-0.011028804,0.009945716,0.010187624,-0.013063029,0.029116921,0.034966696,-0.036044285,0.0057288203,-0.015405139,-0.021419851,-0.022871299,0.018692888,0.026851784,0.03921108,0.037671667,0.0038457867,-0.024960503,0.04393928,0.0039832345,-0.013997674,0.041322276,0.00365336,0.007125289,-0.00018486717,-0.0022720105,-0.028567132,-0.0015091758,0.049129307,0.057706043,0.0008562992,0.030194512,-0.010121649,0.02100201,-0.010803389,0.017219448,0.004670473,0.021243917,0.023509055,0.021386864,-0.006652469,-0.015361155,0.03958494,0.013579833,0.039145105,-0.0040382138,-0.00026785122,0.030700319,0.008087423,0.017703265,0.0000023274836,-0.015625056,0.01597692,-0.0041729123,0.012007431,0.017032519,0.015207214,-0.0059157494,-0.033889107,-0.049481172,-0.0045275274,0.0381115,-0.07547528,0.01811011,0.013194979,0.03516462,0.003356473,-0.017494343,0.017208453,-0.0013229342,0.03595632,0.01710949,0.015647046,-0.026631868,-0.037165858,0.0064985272,0.0021043243,-0.0013016298,0.010962829,-0.022244537,-0.037341792,-0.0037825608]},{"id":"multiply-strings","name":"Multiply Strings","description":"You are given two strings `num1` and `num2` that represent non-negative integers. \n    \nReturn the product of `num1` and `num2` in the form of a string.\n\nAssume that neither `num1` nor `num2` contain any leading zero, unless they are the number `0` itself.\n\n**Note**: You can not use any built-in library to convert the inputs directly into integers.\n\n**Example 1:**\n\n```java\nInput: num1 = \"3\", num2 = \"4\"\n\nOutput: \"12\"\n```\n\n**Example 2:**\n\n```java\nInput: num1 = \"111\", num2 = \"222\"\n\nOutput: \"24642\"\n```\n\n**Constraints:**\n* `1 <= num1.length, num2.length <= 200`\n* `num1` and `num2` consist of digits only.\n","difficulty":"Medium","concepts":[],"solutions":{"python":"class Solution:\n    def multiply(self, num1: str, num2: str) -> str:\n        if \"0\" in [num1, num2]:\n            return \"0\"\n\n        res = [0] * (len(num1) + len(num2))\n        num1, num2 = num1[::-1], num2[::-1]\n        for i1 in range(len(num1)):\n            for i2 in range(len(num2)):\n                digit = int(num1[i1]) * int(num2[i2])\n                res[i1 + i2] += digit\n                res[i1 + i2 + 1] += res[i1 + i2] // 10\n                res[i1 + i2] = res[i1 + i2] % 10\n\n        res, beg = res[::-1], 0\n        while beg < len(res) and res[beg] == 0:\n            beg += 1\n        res = map(str, res[beg:])\n        return \"\".join(res)\n","javascript":"class Solution {\n    /**\n     * @param {string} num1\n     * @param {string} num2\n     * @return {string}\n     */\n    multiply(num1, num2) {\n        if (num1 === '0' || num2 === '0') {\n            return '0';\n        }\n\n        const res = new Array(num1.length + num2.length).fill(0);\n        num1 = num1.split('').reverse().join('');\n        num2 = num2.split('').reverse().join('');\n        for (let i1 = 0; i1 < num1.length; i1++) {\n            for (let i2 = 0; i2 < num2.length; i2++) {\n                const digit = parseInt(num1[i1]) * parseInt(num2[i2]);\n                res[i1 + i2] += digit;\n                res[i1 + i2 + 1] += Math.floor(res[i1 + i2] / 10);\n                res[i1 + i2] %= 10;\n            }\n        }\n\n        let result = '';\n        let i = res.length - 1;\n        while (i >= 0 && res[i] === 0) {\n            i--;\n        }\n        while (i >= 0) {\n            result += res[i--];\n        }\n        return result;\n    }\n}\n","cpp":"class Solution {\npublic:\n    string multiply(string num1, string num2) {\n        if (num1 == \"0\" || num2 == \"0\") {\n            return \"0\";\n        }\n\n        vector<int> res(num1.length() + num2.length(), 0);\n        reverse(num1.begin(), num1.end());\n        reverse(num2.begin(), num2.end());\n        for (int i1 = 0; i1 < num1.length(); i1++) {\n            for (int i2 = 0; i2 < num2.length(); i2++) {\n                int digit = (num1[i1] - '0') * (num2[i2] - '0');\n                res[i1 + i2] += digit;\n                res[i1 + i2 + 1] += res[i1 + i2] / 10;\n                res[i1 + i2] %= 10;\n            }\n        }\n\n        stringstream result;\n        int i = res.size() - 1;\n        while (i >= 0 && res[i] == 0) {\n            i--;\n        }\n        while (i >= 0) {\n            result << res[i--];\n        }\n        return result.str();\n    }\n};\n","java":"class Solution {\n    public String multiply(String num1, String num2) {\n        if (num1.equals(\"0\") || num2.equals(\"0\")) {\n            return \"0\";\n        }\n\n        int[] res = new int[num1.length() + num2.length()];\n        num1 = new StringBuilder(num1).reverse().toString();\n        num2 = new StringBuilder(num2).reverse().toString();\n        for (int i1 = 0; i1 < num1.length(); i1++) {\n            for (int i2 = 0; i2 < num2.length(); i2++) {\n                int digit = Character.getNumericValue(num1.charAt(i1)) * Character.getNumericValue(num2.charAt(i2));\n                res[i1 + i2] += digit;\n                res[i1 + i2 + 1] += res[i1 + i2] / 10;\n                res[i1 + i2] %= 10;\n            }\n        }\n\n        StringBuilder result = new StringBuilder();\n        int i = res.length - 1;\n        while (i >= 0 && res[i] == 0) {\n            i--;\n        }\n        while (i >= 0) {\n            result.append(res[i--]);\n        }\n        return result.toString();\n    }\n}\n","csharp":"public class Solution {\n    public string Multiply(string num1, string num2) {\n        if (new string[] { num1, num2 }.Contains(\"0\")) {\n            return \"0\";\n        }\n\n        int[] res = new int[num1.Length + num2.Length];\n        num1 = new string(num1.Reverse().ToArray());\n        num2 = new string(num2.Reverse().ToArray());\n        for (int i1 = 0; i1 < num1.Length; i1++) {\n            for (int i2 = 0; i2 < num2.Length; i2++) {\n                int digit = (num1[i1] - '0') * (num2[i2] - '0');\n                res[i1 + i2] += digit;\n                res[i1 + i2 + 1] += res[i1 + i2] / 10;\n                res[i1 + i2] %= 10;\n            }\n        }\n\n        Array.Reverse(res);\n        int beg = 0;\n        while (beg < res.Length && res[beg] == 0) {\n            beg++;\n        }\n\n        string[] result = res.Skip(beg).Select(x => x.ToString()).ToArray();\n        return string.Join(\"\", result);\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def multiply(self, num1: str, num2: str) -> str:\n        ","javascript":"class Solution {\n    /**\n     * @param {string} num1\n     * @param {string} num2\n     * @return {string}\n     */\n    multiply(num1, num2) {}\n}\n","cpp":"class Solution {\npublic:\n    string multiply(string num1, string num2) {\n        \n    }\n};\n","java":"class Solution {\n    public String multiply(String num1, String num2) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public string Multiply(string num1, string num2) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/1vZswirL8Y8","embedding":[0.0036381136,-0.053562175,-0.007919088,-0.033447787,-0.019790577,0.010685768,0.021123916,0.026533468,-0.022076301,0.039466865,-0.032876357,-0.009981003,-0.04384784,-0.031866826,0.0047428813,-0.02700966,0.028000142,-0.0082476605,0.0061238403,0.020400103,-0.0064666993,-0.004621452,0.023695357,-0.0025595368,0.0075524193,0.0049428823,-0.022781068,-0.031809684,0.016390558,-0.03801924,0.011514344,-0.011990537,-0.009933383,0.0031857304,-0.046743095,0.006752415,-0.038133528,0.01738104,0.008947664,0.013971499,0.023409642,-0.0057714577,0.009047665,0.018895334,0.0038404956,0.020838201,0.022285827,-0.0026309658,0.035162084,0.044076413,0.0120667275,0.0022726306,0.008766711,-0.023657262,-0.028495383,0.00066488434,-0.037885904,0.052152645,-0.025942989,0.013352448,0.048152626,-0.023790596,0.023942979,-0.010095289,0.06552414,0.038704958,0.006285746,-0.008423852,-0.011771488,-0.022381065,-0.04346689,0.0010101241,-0.008376233,0.036076374,-0.030076344,0.08198137,-0.057714578,0.04777167,0.035962086,-0.026419181,0.03935258,-0.059314586,0.017276278,0.07371466,0.0088048065,0.02293345,-0.04095259,-0.036133517,-0.015000076,-0.053866938,-0.028857289,-0.028914431,-0.020285817,0.020209625,0.05942887,0.0074762283,0.006504795,-0.029162053,-0.01634294,0.025276318,0.03251445,0.05203836,0.019057238,0.060190782,-0.031371586,0.012323872,0.028914431,-0.0055905045,-0.024209647,-0.0026928708,-0.0045762137,0.048495483,0.004350022,0.0042595454,0.053828843,0.0062666982,0.00027113233,-0.012809589,-0.0099238595,-0.01600008,-0.015552459,-0.06735272,0.0055714566,-0.016142938,-0.0254287,-0.004630976,-0.044800226,-0.030457297,0.0056333616,-0.044038318,0.027390614,-0.047238335,-0.018457236,0.034304935,-0.0152667435,-0.065981284,-0.006223841,0.004264307,-0.010971484,0.05200026,0.0125333965,-0.04026687,-0.024666792,0.014504835,0.022362018,0.025657272,-0.038914483,-0.010161956,-0.04727643,-0.002397631,-0.016800085,-0.023619168,-0.03977163,0.028647764,0.023371547,-0.0075238477,-0.009604811,0.008604805,0.025238223,0.0029666817,-0.025904894,0.0057238387,-0.053066935,-0.0072524175,0.018085806,0.010742911,-0.0075095617,-0.044609748,-0.026533468,-0.007914326,-0.01821914,0.0033809694,-0.020133436,-0.043543078,-0.03175254,-0.045143086,-0.030114438,-0.077333726,-0.0508574,0.016685799,-0.011666725,0.001239292,-0.026723946,-0.037466858,0.00040119252,0.020114388,-0.02600013,-0.004473832,0.012676255,0.0054571703,0.009914336,0.011885774,0.032781117,0.029562054,-0.031676352,0.017333422,0.04160021,-0.01254292,-0.03150492,0.018381046,-0.019485813,0.0029166813,0.023028689,-0.014619121,0.04369546,-0.051733594,-0.0324954,-0.026171561,0.047619287,0.03685733,0.009742906,-0.006161936,0.021238202,-0.03760019,-0.0053238366,-0.0047071665,0.016057225,0.0014464359,-0.024038216,-0.015190553,0.007223846,0.00095952867,0.024285838,0.025562035,0.041904975,-0.00602384,0.001804771,0.033943027,0.033981126,-0.0023797739,0.011114342,0.0179239,0.021523919,0.010361957,0.043809745,-0.0026642992,0.013542926,0.025295366,-0.014361978,-0.0035857325,-0.018847715,0.007861945,0.014219119,0.010438148,-0.025981084,0.024800126,-0.05660981,0.006652415,0.012485777,0.0045119277,-0.0009779811,0.029238243,0.0131524475,-0.050057396,-0.007419085,-0.03493351,0.013723879,0.013019114,0.033828743,-0.0010131004,-0.03158111,0.019885816,-0.06350508,-0.056990765,0.025771558,0.0098000495,-0.000056138677,0.053752653,0.011761964,0.029295387,0.044076413,-0.03201921,0.013761974,-0.006552414,-0.040381156,-0.018600093,-0.005942887,0.011066723,-0.01930486,-0.013390544,-0.04819072,-0.016133415,0.05969554,-0.06735272,0.01592389,0.015161982,0.0035309703,0.0152667435,-0.021542966,-0.074514665,0.008776234,0.0102952905,0.0073714657,0.0011636964,-0.03251445,-0.055466946,-0.0066667004,0.0030285867,-0.010504815,-0.026971566,-0.002466679,-0.019390574,-0.0051809787,0.021619158,-0.10346719,0.0019083429,-0.0625146,0.004428594,-0.013600069,-0.0078095635,-0.0067476532,0.03133349,0.022533447,0.02192392,-0.009452429,-0.016600084,-0.01846676,-0.019333431,-0.01930486,-0.006352413,0.051238354,-0.048990723,0.026038228,-0.0057238387,0.026914421,0.03051444,0.0006315508,0.030990632,-0.019152477,-0.034000173,-0.0013928642,-0.04518118,0.006309556,0.036476374,-0.0241906,0.037828762,0.022800116,-0.02809538,0.01221911,0.006019078,0.000024088664,-0.0120953,-0.010685768,-0.017038181,0.0034333507,-0.038362097,0.07447657,0.046590712,0.004447642,0.011304819,-0.006371461,0.033809695,-0.027390614,0.015609602,0.012276253,0.026781088,-0.044914514,0.02925729,0.0046547856,-0.017323896,-0.02367631,0.0073952754,-0.004388117,-0.021162013,-0.0054428848,-0.0047619287,0.034628745,0.03158111,-0.022209637,-0.0053143124,-0.017390564,0.027695378,0.0131334,0.046819285,0.006609557,-0.030228725,-0.016571512,0.045562137,-0.03483827,-0.019162001,0.0074000373,0.008233375,0.0022750115,0.012790541,0.014609598,0.035809703,0.055885997,0.013266734,-0.014971504,-0.06281937,0.018571522,0.0038976388,0.042590693,0.004957168,0.015742937,0.003559542,-0.0006904797,0.056076474,-0.0024404884,-0.0007500038,0.075505145,-0.015942939,0.018838191,0.009866716,0.006361937,0.003285731,0.0029357292,-0.005961935,0.040647823,0.044000223,-0.059505064,0.0017261992,0.0037119235,0.0007196465,0.019342955,0.024609648,-0.033619218,0.050324064,0.021219155,-0.04426689,-0.023257261,0.031390633,0.05112407,-0.0046452614,0.019066764,0.0088048065,-0.024038216,-0.02742871,0.02017153,-0.01683818,-0.02283821,0.02851443,-0.00030044795,-0.0065143188,-0.021047726,0.04026687,-0.05737172,0.061409835,0.0047643096,-0.022990592,-0.036209706,-0.015952462,0.010066718,-0.020038197,0.0069190827,-0.0019381051,-0.005780982,0.053828843,0.0458669,-0.0027619188,-0.0026523944,0.029543007,0.04278117,0.032571595,0.0005000025,-0.03152397,0.028343001,0.023219164,-0.009952432,-0.037543047,0.00047113333,-0.022609638,-0.031904925,-0.047505002,-0.0006851225,-0.0061809835,-0.009347666,0.0041762115,0.0030523965,-0.027733473,0.0010881007,0.013990547,-0.051543117,0.0125619685,-0.05485742,0.009385762,0.05611457,0.045295466,0.012761969,-0.01572389,-0.0044643083,-0.04175259,-0.03274302,-0.016457226,-0.10430529,-0.009142904,0.020990582,-0.0025262032,-0.015095314,-0.02977158,0.044076413,-0.026247751,0.023809643,-0.0029214434,0.022038206,0.030247772,-0.0027333472,-0.02184773,-0.006733367,0.005966697,-0.013838165,-0.026076322,-0.005419075,-0.04986692,0.06678129,0.012247681,0.01851438,-0.052381217,-0.016295321,0.03569542,0.010276242,-0.085029,0.0131238755,0.0055095516,0.003942877,0.014895313,-0.023466785,0.0043952605,-0.0033714457,-0.0119429175,-0.02142868,-0.016485797,-0.00095179054,0.04929549,0.019600099,-0.035828754,-0.014561978,-0.05535266,-0.027162042,-0.027295377,0.03942877,0.028228715,-0.009990526,0.04426689,-0.015590555,-0.004678595,0.024857268,-0.004100021,-0.010628625,-0.023790596,0.007285751,-0.0025833463,0.011238152,-0.015342935,-0.03643828,-0.017361993,0.042133547,0.021523919,-0.008842902,-0.027885856,0.00535717,-0.033581123,0.027904904,-0.012104823,-0.017152468,-0.032419212,-0.029352529,0.020628676,0.02767633,-0.016476274,-0.024076313,-0.03495256,0.015057219,0.0019654862,0.001970248,0.03441922,-0.01567627,0.01735247,0.011619107,0.01663818,-0.00831909,-0.043657362,-0.009214332,0.014790551,-0.03520018,-0.022152493,-0.057333622,0.00308573,-0.019962005,-0.029162053,-0.00071012264,0.015666746,-0.007547657,-0.07325751,0.0042357356,-0.009761954,0.016428655,-0.029466815,0.026495373,-0.019285811,-0.0060762214,0.040571634,0.024609648,-0.014695313,0.0130286375,-0.018819142,0.010771483,-0.026247751,0.019981053,-0.010057194,0.01221911,0.026495373,0.010076242,0.021600109,0.008547663,-0.012847684,0.04377165,0.016381035,-0.01609532,0.023542976,-0.012142919,0.0018726286,0.0051714545,-0.008561948,-0.008361947,0.0082476605,0.0354478,0.034990653,0.00735718,0.019657243,0.018381046,0.035828754,0.038552575,0.002945253,0.025714416,-0.01350483,-0.023619168,0.021942968,0.023200117,0.041638307,-0.022400113,0.008790521,0.009052427,-0.012771493,-0.0134953065,0.04045735,0.022895355,-0.025676321,-0.015485792,-0.021542966,-0.0029190623,0.02718109,0.029162053,0.00065476523,0.0032285878,-0.00086726627,-0.0020666772,0.024000121,-0.008009564,-0.012552445,-0.0032095402,0.006366699,0.010123861,-0.0036285897,0.029962057,-0.044381175,-0.03158111,-0.03274302,-0.057981245,-0.014019119,0.00049791916,0.002676204,-0.00072976557,-0.016752467,0.026133465,-0.017123897,-0.0017011991,-0.013476259,0.042171642,0.025581082,0.024228694,0.014552454,-0.019790577,0.028952528,-0.022742972,0.0015714365,-0.01120958,0.020095339,-0.0026904899,-0.022971544,0.010228624,0.016181035,0.016457226,0.038952578,-0.008990522,0.027276328,0.005280979,0.00019791767,-0.017171515,-0.019152477,-0.011714345,-0.042819265,-0.0041214493,0.031981114,0.056571715,-0.01059053,0.060190782,0.012781017,0.007419085,-0.07462895,0.024628697,-0.037543047,0.010247671,0.01992391,-0.005361932,-0.0177239,0.0034119221,0.003547637,-0.018933428,0.023142975,0.035809703,-0.014142929,0.0000044945355,-0.016790561,-0.02293345,0.0098286215,0.016419131,0.020971535,-0.013933403,-0.028038237,0.043504983,0.008919093,0.007866707,-0.0099238595,-0.0053238366,-0.02142868,0.01698104,0.017590566,0.03550494,0.022000112,0.030552536,0.016352464,-0.019438194,0.012209586,0.031790636,-0.057486005,-0.010828626,-0.0125333965,0.008733378,-0.0038452575,-0.030152533,-0.006423842,-0.0020333435,0.029028717,0.012504825,0.07127655,-0.031733494,0.016428655,-0.037009712,0.02118106,-0.012961971,0.0006708367,0.01942867,-0.0054428848,-0.014314358,0.016295321,0.0017785805,-0.020838201,-0.0021797728,0.0069286064,-0.019866766,0.026457276,-0.0030262058,0.002811919,0.017561994,0.013238162,-0.007119084,0.047009762,-0.048495483,0.039581154,-0.06312413,-0.031923972,-0.0216763,-0.019076288,0.008576234,-0.0092095705,-0.031866826,-0.024704887,0.012457206,-0.04735262,-0.02259059,0.036133517,-0.003964306,0.010457195,0.020781057,-0.012085776,-0.015638174,-0.03194302,0.027542997,-0.027562045,0.0026476325,-0.009981003,0.00062083645,-0.012914351,0.048152626,0.007785754,-0.027028708,0.009361953,0.0015928652,-0.024800126,-0.018419141,-0.017838186,0.0018523904,-0.020457247,-0.012400063,-0.025238223,-0.036628757,0.024266789,-0.01612389,-0.015447698,0.03478113,0.023200117,-0.021066774,0.011838155,-0.016476274,0.04095259,-0.010847674,0.010000051,0.031466827,0.026533468,-0.0011690535,-0.017733423,-0.0032619212,0.03649542,-0.018628666,0.0010410767,-0.038209718,0.015742937,0.02091439,0.029981105,-0.023276309,-0.0065286043,-0.013400068,0.030800156,0.0241906,0.034609698,0.000318454,0.025581082,0.00043333552,-0.01096196,0.012485777,0.011285772,0.0040143062,-0.014419121,-0.022019159,0.02367631,0.008514329,-0.019114383,0.0065428903,-0.034304935,-0.022552496,-0.0039071627,0.02259059,-0.049409773,-0.035409704,0.041066874,0.022495352,0.016314369,0.0001346733,0.00096369535,0.00041637116,0.016942943,0.0017952472,-0.05302884,0.009190523,0.02784776,0.021142963,-0.007642896,0.025771558,0.03268588,-0.004933358,-0.00414764,-0.012457206,0.013533402,0.043543078,0.005295265,-0.0030166819,-0.011638154,-0.0073143225,-0.015552459,0.024666792,-0.0022952496,-0.016428655,0.02925729,-0.03443827,-0.043504983,0.01671437,0.014857218,0.0038785911,-0.022952497,0.009638144,0.007080988,-0.0020678677,-0.044609748,0.01338102,-0.017895328,0.017266754,0.0029262053,0.046019282,-0.009004807,-0.015809603,0.019733433,-0.018904857,0.028628716,-0.008342899,0.006671462,-0.014971504,0.0119429175,-0.022952497,0.0008136946,0.01375245,-0.026457276,-0.02293345,-0.002101201,0.014438168,-0.00096190965,0.009266714,0.021771539,0.021104869,0.058476485,-0.026628707,-0.0034309698,-0.018847715,-0.009761954,0.02584775,0.015495316,-0.00035506132,-0.030190628,0.046704996,0.017266754,-0.0053333603,-0.0086190915,-0.010666721,-0.03335255,-0.019600099,-0.05344789,-0.05318122,-0.00629527,0.006895273,0.008228613,-0.05862887,0.0035881135,-0.032457307,-0.011076246,-0.012866732,-0.05302884,-0.02535251,-0.027066804,-0.012809589,-0.018752476,0.019638194,-0.016390558,-0.02443822,-0.02977158,-0.004028592,-0.013181019,-0.032666832,-0.04986692,0.026381087,0.05702886,0.010647673,-0.047428813,0.0027881092,-0.0015440554,-0.025200127,0.012885779,-0.022209637,0.037257332,0.012885779,-0.029200148,-0.014171501,0.024895364,-0.05760029,0.013038161,-0.037752572,-0.008580996,-0.006247651,0.011857203,0.013952452,0.017609613,0.0065428903,-0.0014083404,0.0084429,0.02518108,-0.028000142,0.03483827,0.020590581,0.015238172,0.030704917,0.0068524154,0.040076394,0.020800104,0.02026677,-0.0400383,-0.009495286,-0.011590535,-0.01508579,-0.07577181,-0.07158131,0.014323882,0.000578872,-0.051809788,0.031904925,-0.017819138,0.015095314,0.000738099,0.012704826,-0.014809599,-0.031219205,-0.0077381344,-0.0099238595,-0.022952497,-0.015057219,-0.010085765,0.022247732,0.012552445,0.04369546,-0.0077571822,-0.016581036,-0.023790596,-0.0027642997,-0.015247696,-0.015390554,-0.03211445,-0.017247707,-0.005804791,0.010285766,0.005019073,-0.01246673,0.015952462,0.014742931,0.03626685,-0.0037666857,-0.007704801,-0.026133465,0.027142994,0.034876365,-0.014866742,0.018276284,-0.008157184,-0.000425895,-0.027562045,-0.016952466,-0.004426213,-0.014561978,0.023828693,-0.0062190793,-0.029904913,-0.04201926,-0.025657272,-0.01975248,0.020209625,0.007976231,-0.0035119224,0.010942913,-0.015000076,0.03619066,0.05969554,0.015123886,0.0037904955,0.021066774,-0.001054172,-0.021866778,-0.030990632,0.0147048365,-0.010095289,-0.024323933,-0.02634299,-0.012876255,-0.024457267,0.0061143166,-0.005433361,-0.047047857,0.008461948,-0.010247671,-0.028800145,-0.017219136,-0.00080893264,-0.008057184,0.0042595454,0.004683357,0.010447672,-0.014476264,-0.0009482191,0.010228624,0.03051444,-0.010552434,-0.035485893,-0.025409652,0.0042619263,0.035162084,0.008142899,0.0052047884,-0.0045976425,0.015476269,-0.028457288,0.027657283,-0.02742871,0.00030922776,0.009042903,-0.00790004,-0.004947644,0.014990552,-0.015552459,-0.006971464,0.005038121,-0.02243821,-0.005747648,0.002386917,-0.04575261,0.0030666823,0.017952472,-0.020742962,0.019714385,0.009023855,-0.040076394,0.0143334055,0.00449288,-0.006166698,0.007700039,0.02066677,-0.0010631006,-0.002550013,0.019495336,-0.058895536,-0.0013321496,0.0147048365,0.058705058,0.0275049,0.015371506,0.011542915,-0.052495502,-0.008933378,-0.005414313,-0.014409597,0.0028166808,0.000013681245,-0.027581092,0.008823854,0.009481001,0.00446907,-0.028914431,-0.025390605,0.00070595596,0.013181019,0.018190568,0.01192387,0.030876346,0.013447687,0.024304885,0.021238202,0.005661933,0.025485843,-0.0067428914,0.009914336,-0.01204768,-0.01375245,0.028228715,-0.0005488123,0.011038151,-0.0012797684,0.00017931638,0.03887639,0.008795283,0.04434308,0.009895288,0.018762,-0.010571482,0.019885816,-0.020590581,0.0014559597,-0.0042571644,0.010800054,0.008638139,0.003966687,0.027047755,-0.00085476623,0.004623833,0.028914431,0.06125745,-0.044571653,-0.02735252,0.017819138,-0.009895288,-0.031485874,-0.025142984,-0.010790531,-0.01942867,0.008752425,0.009790526,0.03744781,0.005438123,-0.022057254,-0.013466734,-0.007100036,0.012476253,-0.004159545,0.0053095506,-0.029828722,-0.0002837812,-0.009152427,0.02893348,0.0024476314,-0.0075714667,-0.036400184,0.0074571804,0.029543007,-0.0019202478,0.0053190747,-0.005757172,0.028304905,0.0034357316,-0.018114377,-0.06651462,-0.04095259,-0.027028708,-0.015466745,-0.0021916777,-0.027200138,-0.03194302,-0.023047736,0.014971504,0.012447682,-0.020495342,-0.014752456,-0.022457257,-0.005133359,0.021047726,-0.000251787,0.020952487,-0.017152468,-0.03912401,-0.049714535,0.0028762051,0.008095279,-0.015904842,-0.01575246,0.011752441,-0.006609557,0.02659061,-0.0337716,0.020076292,-0.005904792,0.01659056,0.028285857,-0.011123866,-0.0033643027,0.025657272,0.033866838,-0.009942908,0.048952628,-0.020819154,-0.027885856,-0.033047788,0.014266739,0.033371598,0.040914495,0.023752501,0.007200036,0.015038172,-0.049257394,-0.019790577,-0.015647698,0.024495361,0.04636214,-0.022800116,-0.017942948,0.013419116,-0.013533402,0.0032333496,0.014952457,-0.018476283,0.01829533,-0.005642886,0.037314475,-0.016857227,0.029962057,0.032209687,0.0045166896,0.02276202,0.011904822,0.01735247,0.02017153,0.0032214448,-0.0051238355,0.05036216,0.042971645,-0.024800126,0.014276262,0.020495342,0.0031571588,0.004873834,0.029619198,-0.00095357624,-0.0049619297,0.014647693,0.0033595408,0.040876396,-0.014152452,-0.010742911,-0.03226683,0.012333396,-0.020971535,0.00012113157,0.017838186,-0.007957183,0.029562054,0.04876215,0.008223851,-0.020609628,-0.002165487,0.0012976256,-0.011571487,0.021771539,-0.023771549,-0.008280994,0.0053857416,-0.050895497,-0.020133436,-0.0023916787,-0.009414333,0.03533351,-0.02718109,0.006366699,0.025123937,-0.0054476466,0.019019144,0.015228649,-0.018419141,-0.020381056,0.021885825,0.0147048365,-0.034723986,-0.019581052,-0.0110095795,0.00008266411,0.016314369,0.039162103,0.0046524047,0.005476218,-0.008466709,0.01241911,0.007700039,-0.047009762,0.029238243,-0.008238137,0.01496198,0.026133465,-0.03586685,-0.035047796,0.005433361,-0.013419116,-0.0074619427,-0.012361967,-0.0043904986,0.037123997,-0.0098000495,0.04102878,-0.0056524095,-0.0077571822,-0.009328619,0.0019345336,-0.008966712,-0.019847719,0.008733378,0.015400078,0.0033690648,-0.002485727,0.020228675,-0.00038125194,0.023733454,-0.013447687,-0.03177159,-0.0011785774,-0.00913338,-0.025447749,-0.0061381264,0.059505064,-0.021409633,0.028647764,0.0033738266,0.025771558,-0.0028452524,-0.011247676,0.010066718,0.014876266,0.01659056,0.028476335,0.0525336,0.004447642,0.032400165,0.010542911,0.010238147,0.02243821,0.021447727,-0.024971554,0.006371461,-0.000258037,0.0035262082,-0.013038161,-0.011981013,0.058819346,0.032152545,0.021962015,-0.022571543,0.009590524,0.03232397,0.019085811,0.030343011,-0.0029738245,-0.0017131038,0.00873814,0.013114352,0.009485763,-0.04468594,0.0007761944,0.032381117,0.016200082,-0.043885935,0.02241916,-0.037485905,-0.011247676,-0.0073333704,-0.0131238755,0.011190533,-0.0039143055,-0.0068095583,0.018904857,-0.018561998,-0.046057377,0.009609573,0.0047405004,0.05542885,-0.028609669,0.033314455,0.011647678,-0.02076201,0.024628697,-0.0044404985,0.032819215,0.009138142,-0.010133385,-0.032819215,-0.02893348,-0.019342955,-0.011828631,0.02600013,-0.023409642,0.011952441,-0.006423842,-0.012742922,0.0086809965,0.0058619343,-0.0044404985,0.046476427,-0.0075095617,0.0009148856,-0.04609547,-0.041562114,-0.017114373,0.034609698,-0.021200107,0.011876251,0.015609602,-0.017704852,-0.006547652,0.022209637,-0.01525722,0.017952472,0.012790541,0.0058714584,-0.041371636,0.005642886,-0.004792881,-0.03601923,0.033866838,0.016066749,0.0078428965,0.010676244,-0.000006729015,-0.04327641,0.032381117,0.03520018,0.05927649,0.0073857517,0.04643833,-0.020590581,0.0006125031,-0.015981033,0.00681432,-0.010504815,-0.012114347,0.015781032,0.040304966,-0.031028729,0.018819142,0.0031857304,0.005342884,0.030038247,0.021238202,0.002145249,-0.0009053617,0.005214312,0.013600069,-0.017657232,0.02876205,-0.006104793,-0.02784776,0.044647846,0.013838165,-0.008923855,0.0036762091,-0.01775247,-0.004430975,-0.0500193,0.0045857374,-0.028476335,0.007990517,-0.0051809787,0.02900967,0.04224783,0.009619096,0.037143044,0.010457195,0.018752476,-0.0006803606,-0.0029833484,0.010619101,-0.018381046,-0.0022952496,0.005538123,0.028800145,0.020152483,-0.036133517,0.015466745,0.010742911]},{"id":"count-squares","name":"Count Squares","description":"You are given a stream of points consisting of x-y coordinates on a 2-D plane. Points can be added and queried as follows:\n\n* **Add** - new points can be added to the stream into a data structure. Duplicate points are allowed and should be treated as separate points.\n* **Query** - Given a single query point, **count** the number of ways to choose three additional points from the data structure such that the three points and the query point form a **square**. The square must have all sides parallel to the x-axis and y-axis, i.e. no diagonal squares are allowed. Recall that a **square** must have four equal sides.\n\n\nImplement the `CountSquares` class:\n* `CountSquares()` Initializes the object.\n* `void add(int[] point)` Adds a new point `point = [x, y]`.\n* `int count(int[] point)` Counts the number of ways to form valid **squares** with point `point = [x, y]` as described above.\n\n**Example 1:**\n\n![](https://imagedelivery.net/CLfkmk9Wzy8_9HRyug4EVA/4ff69d9c-cd7d-43fa-bad1-e718fc207600/public)\n\n```java\nInput: \n[\"CountSquares\", \"add\", [[1, 1]], \"add\", [[2, 2]], \"add\", [[1, 2]], \"count\", [[2, 1]], \"count\", [[3, 3]], \"add\", [[2, 2]], \"count\", [[2, 1]]]\n       \nOutput:\n[null, null, null, null, 1, 0, null, 2]\n\nExplanation:\nCountSquares countSquares = new CountSquares();\ncountSquares.add([1, 1]);\ncountSquares.add([2, 2]);\ncountSquares.add([1, 2]);\n\ncountSquares.count([2, 1]);   // return 1.\ncountSquares.count([3, 3]);   // return 0.\ncountSquares.add([2, 2]);     // Duplicate points are allowed.\ncountSquares.count([2, 1]);   // return 2. \n```\n\n**Constraints:**\n* `point.length == 2`\n* `0 <= x, y <= 1000`\n","difficulty":"Medium","concepts":[],"solutions":{"python":"class CountSquares:\n    def __init__(self):\n        self.ptsCount = defaultdict(int)\n        self.pts = []\n\n    def add(self, point: List[int]) -> None:\n        self.ptsCount[tuple(point)] += 1\n        self.pts.append(point)\n\n    def count(self, point: List[int]) -> int:\n        res = 0\n        px, py = point\n        for x, y in self.pts:\n            if (abs(py - y) != abs(px - x)) or x == px or y == py:\n                continue\n            res += self.ptsCount[(x, py)] * self.ptsCount[(px, y)]\n        return res\n","javascript":"class CountSquares {\n    constructor() {\n        this.ptsCount = new Map();\n        this.pts = [];\n    }\n\n    /**\n     * @param {number[]} point\n     * @return {void}\n     */\n    add(point) {\n        const p = point.join(',');\n        this.ptsCount.set(p, (this.ptsCount.get(p) || 0) + 1);\n        this.pts.push(point);\n    }\n\n    /**\n     * @param {number[]} point\n     * @return {number}\n     */\n    count(point) {\n        let res = 0;\n        const [px, py] = point;\n        for (const [x, y] of this.pts) {\n            if (Math.abs(py - y) !== Math.abs(px - x) || x === px || y === py) {\n                continue;\n            }\n            res +=\n                (this.ptsCount.get(`${x},${py}`) || 0) *\n                (this.ptsCount.get(`${px},${y}`) || 0);\n        }\n        return res;\n    }\n}\n","cpp":"class CountSquares {\nprivate:\n    // Mapping from a combined key of coordinates to their count\n    unordered_map<long, int> ptsCount;\n    // All points added so far (to iterate over during count)\n    vector<vector<int>> pts;\n\n    // Combines two integers into a long key\n    long getKey(int x, int y) {\n        return (static_cast<long>(x) << 32) | static_cast<long>(y);\n    }\n\npublic:\n    CountSquares() {\n    }\n\n    void add(vector<int> point) {\n        long key = getKey(point[0], point[1]);\n        ptsCount[key]++; // Increment the count for this point\n        pts.push_back(point); // Store the point for later iteration\n    }\n    \n    int count(vector<int> point) {\n        int res = 0;\n        int px = point[0], py = point[1];\n\n        // Iterate over all points to find potential square corners\n        for (const auto& pt : pts) {\n            int x = pt[0], y = pt[1];\n            // Skip if it doesn't form a square side\n            if (abs(py - y) != abs(px - x) || x == px || y == py) continue;\n\n            // Check for other two corners of the square\n            res += ptsCount[getKey(x, py)] * ptsCount[getKey(px, y)];\n        }\n        return res;\n    }\n};\n","java":"class CountSquares {\n    \n    private Map<List<Integer>, Integer> ptsCount;\n    private List<List<Integer>> pts;\n\n    public CountSquares() {\n        ptsCount = new HashMap<>();\n        pts = new ArrayList<>();\n    }\n\n    public void add(int[] point) {\n        List<Integer> p = Arrays.asList(point[0], point[1]);\n        ptsCount.put(p, ptsCount.getOrDefault(p, 0) + 1);\n        pts.add(p);\n    }\n\n    public int count(int[] point) {\n        int res = 0;\n        int px = point[0], py = point[1];\n        for (List<Integer> pt : pts) {\n            int x = pt.get(0), y = pt.get(1);\n            if (Math.abs(py - y) != Math.abs(px - x) || x == px || y == py) {\n                continue;\n            }\n            res += ptsCount.getOrDefault(Arrays.asList(x, py), 0) * ptsCount.getOrDefault(Arrays.asList(px, y), 0);\n        }\n        return res;\n    }\n}\n","csharp":"public class CountSquares {\n    \n    private Dictionary<(int, int), int> ptsCount;\n    private List<int[]> pts;\n\n    public CountSquares() {\n        ptsCount = new Dictionary<(int, int), int>();\n        pts = new List<int[]>();\n    }\n\n    public void Add(int[] point) {\n        var tuplePoint = (point[0], point[1]);\n        if (!ptsCount.ContainsKey(tuplePoint))\n            ptsCount[tuplePoint] = 0;\n        \n        ptsCount[tuplePoint]++;\n        pts.Add(point);\n    }\n\n    public int Count(int[] point) {\n        int res = 0;\n        int px = point[0];\n        int py = point[1];\n        \n        foreach (var pt in pts) {\n            int x = pt[0];\n            int y = pt[1];\n\n            if (Math.Abs(py - y) != Math.Abs(px - x) || x == px || y == py)\n                continue;\n\n            res += ptsCount.GetValueOrDefault((x, py)) * ptsCount.GetValueOrDefault((px, y));\n        }\n        return res;\n    }\n}\n"},"starterCode":{"python":"class CountSquares:\n\n    def __init__(self):\n        \n\n    def add(self, point: List[int]) -> None:\n        \n\n    def count(self, point: List[int]) -> int:\n        \n","javascript":"class CountSquares {\n    constructor() {}\n\n    /**\n     * @param {number[]} point\n     * @return {void}\n     */\n    add(point) {}\n\n    /**\n     * @param {number[]} point\n     * @return {number}\n     */\n    count(point) {}\n}\n","cpp":"class CountSquares {\npublic:\n    CountSquares() {\n        \n    }\n    \n    void add(vector<int> point) {\n        \n    }\n    \n    int count(vector<int> point) {\n        \n    }\n};\n","java":"class CountSquares {\n\n    public CountSquares() {\n        \n    }\n    \n    public void add(int[] point) {\n        \n    }\n    \n    public int count(int[] point) {\n        \n    }\n}\n","csharp":"public class CountSquares {\n\n    public CountSquares() {\n        \n    }\n    \n    public void Add(int[] point) {\n        \n    }\n    \n    public int Count(int[] point) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/bahebearrDc","embedding":[-0.005631853,-0.026118739,0.04984326,0.008466824,-0.025204582,0.0033246977,-0.003751848,-0.010953546,-0.019273452,-0.005593763,0.036000326,-0.018925201,0.02248388,-0.010126452,0.02794705,-0.01662893,-0.015943313,0.0016528263,-0.0021697597,0.04818907,0.029165924,0.033802,0.04361829,-0.028404128,0.0030254205,0.028208237,-0.023158614,-0.06085666,0.028121173,0.03504264,0.037980996,-0.008689921,-0.03271372,0.016563633,0.04322651,-0.005237351,0.016868351,0.06695103,-0.027511736,0.017586617,0.0061814347,-0.018196054,0.0010671953,-0.044445384,-0.042159997,-0.067386344,0.03290961,0.006404532,-0.019480225,0.03469439,0.036870953,0.038590435,0.010224397,-0.04263884,-0.009174206,-0.015671242,-0.018087225,0.041964106,-0.0036566232,-0.016454805,0.041811746,0.0017983839,0.0076614963,0.033584345,-0.009854382,-0.020372616,0.0051121986,-0.015823603,-0.048624385,-0.029209455,-0.03826395,0.055371724,-0.012145213,-0.009261269,0.018359296,-0.023550395,-0.0018976895,0.07483018,-0.009707464,0.010485585,0.023115084,-0.007846504,0.0053080893,0.011960206,0.016215382,-0.0150944535,-0.050365634,-0.027076425,-0.023833347,-0.011481361,-0.0030363032,0.012645822,0.020949405,0.04024462,0.0014433323,-0.036696825,0.05632941,0.010169984,-0.0031614555,-0.035347357,0.0064208563,0.0027166207,-0.012428166,0.014376189,0.010806628,0.04259531,0.011231057,-0.0061379033,-0.003166897,0.0046524,-0.022146514,0.017913101,0.034106717,-0.040962886,0.015148868,-0.011677252,-0.02883944,-0.020786162,-0.03489028,-0.0262058,-0.0057080323,0.039395764,0.0049244706,0.017575733,-0.0011222895,-0.005438683,-0.0019126534,-0.046839602,0.029644767,-0.0010535918,0.0075145783,-0.036152687,0.016911883,0.028273534,-0.026597582,-0.034215547,-0.019665234,0.017281897,0.032321937,-0.042007636,0.03632681,0.023202145,-0.0039314143,0.017151304,-0.003613092,-0.04322651,-0.06394738,0.03985284,0.005849509,0.009816293,0.03295314,0.042900026,0.07839975,0.0020799765,-0.03062422,-0.04364006,0.016030375,0.03264842,-0.008026071,0.0317778,-0.0060018683,-0.0744384,0.021134412,-0.011307237,-0.00794445,0.014387071,-0.05667766,-0.033932593,-0.02492163,-0.05915894,0.03952636,-0.04853732,0.0055611148,0.019719647,0.032321937,0.014996508,-0.03891692,-0.0269023,-0.068431094,-0.024878098,-0.024986926,-0.012994072,-0.057112973,0.010191749,0.022570942,0.062772036,0.008891254,0.032104284,0.02953594,0.01883814,0.0027397468,0.017815156,-0.005729798,0.044837166,0.013320556,-0.06542744,0.033040203,-0.030167142,-0.04988679,-0.0038715587,-0.043008856,-0.015333876,-0.017586617,0.052150413,0.006404532,-0.06477447,-0.014506782,0.016422156,-0.033932593,-0.0020065177,-0.0048210835,-0.011503127,0.0084505,-0.04061464,-0.007650614,0.035325594,-0.005795095,0.0003968824,-0.024747504,0.038786326,-0.034498498,-0.0012079916,0.022766832,-0.026989363,0.049059696,0.000021319249,-0.006981321,-0.018522538,0.026031675,-0.013146431,-0.02635816,-0.038046293,-0.022396818,-0.009870706,-0.013331439,0.0026486032,0.017488671,-0.0022554619,-0.05585057,0.00945716,-0.0013773553,-0.028469425,-0.005558394,-0.0040375213,0.04446715,0.020459678,-0.02233152,0.042660605,0.028208237,-0.0068452857,0.0021806424,0.02183091,0.019023146,0.020992935,-0.067473404,-0.005419638,0.012330221,-0.0014855032,0.0016664299,-0.010077479,0.008477707,-0.0124064,-0.057461224,-0.08849899,-0.01922992,-0.016095672,-0.028360596,0.015399173,-0.002376533,0.031734265,0.0011596992,0.032779016,0.026488753,-0.013026721,0.018424593,0.0028540161,-0.04168115,0.023485098,0.034302607,-0.04461951,-0.030907173,-0.020046132,0.046143103,0.015322993,0.05480582,-0.021058232,-0.00627938,0.027816456,0.018859906,0.006339235,0.013015837,-0.02903533,-0.025748722,0.032561358,-0.03741509,0.027272316,-0.040832292,-0.002051409,-0.009756437,0.00010024086,-0.020209374,-0.0023398036,-0.0014270081,0.0019085724,-0.02764233,-0.009266711,0.010920897,0.019980835,-0.00025523585,-0.008885812,0.003887883,0.034041423,-0.04213823,0.014310892,0.0004431343,0.009092585,-0.004094656,0.045707792,0.025770487,-0.0066385125,-0.003825307,-0.0040592873,0.03713214,0.03480322,0.010980752,-0.0044837166,-0.031756032,-0.0111439945,0.0046279137,-0.011024284,0.02740291,-0.006263056,-0.028730612,0.098990016,-0.06329441,-0.037893936,0.032996673,0.007492813,-0.008200196,0.039221637,-0.020916756,-0.013668806,0.011481361,-0.019697882,0.0022785878,0.045925446,0.042007636,0.037806872,0.01275465,-0.030994235,0.005490376,-0.026989363,0.02461691,0.047884353,0.019491108,-0.035456188,-0.022592708,-0.017249249,0.010344109,-0.018479006,-0.049712665,0.005729798,-0.022919193,-0.021069115,-0.0058549503,0.009364656,0.0069867624,-0.0016324212,0.0005036699,0.038851622,-0.0050224154,0.067691065,0.01096987,-0.03830748,0.005914806,-0.015693009,0.022277107,0.034955576,-0.036000326,0.004782994,-0.0056590596,0.025248114,0.0067908717,0.018108992,0.03822042,0.01837018,0.05628588,-0.008635508,-0.059637785,-0.0038906035,0.018043695,-0.0262058,0.0031886625,0.0014787015,0.053978726,0.0060943724,0.022745067,0.030363033,-0.0012127529,0.024986926,-0.03952636,0.0015548811,0.0016433039,0.009876148,0.014245595,0.01058353,0.017358078,0.03737156,0.033649642,0.03158191,0.016541867,-0.013864697,0.017488671,-0.0047421833,0.0048401286,-0.04015756,-0.008510356,-0.02097117,-0.013440267,-0.02357216,-0.031451315,0.022124747,0.03489028,-0.027337613,-0.003966783,0.056895316,-0.028643548,-0.024986926,0.016541867,-0.0072044185,0.010322343,0.043357104,0.03360611,-0.012624057,0.0066548367,0.016215382,-0.025574597,0.02109088,-0.0055067004,0.03915634,0.006263056,-0.051453914,-0.001042709,-0.0175975,0.015975961,-0.07578787,0.023441568,-0.00008757259,0.045490135,0.020829692,-0.03830748,-0.0014936653,0.008640949,0.033584345,-0.01100796,-0.025487535,-0.021667669,-0.019251686,0.026575815,-0.017532203,0.01732543,0.06307675,-0.052542195,0.053325757,0.024856333,0.012351986,-0.011503127,0.021722084,0.011492245,-0.028817674,0.02764233,-0.013559978,0.02570519,-0.0063011455,-0.056024693,-0.010958987,-0.031211892,0.022636238,0.0009821734,-0.00062168034,-0.00068357633,-0.03811159,0.03391083,0.0406364,-0.027968815,0.028077643,0.0051883785,-0.016422156,0.03423731,-0.01868578,-0.07718087,0.035303827,0.05141038,-0.008254609,0.00837432,-0.017009828,0.031712502,0.01352733,-0.0093374485,-0.030341268,0.023550395,-0.025269879,0.0003496102,0.03946106,0.0033437426,0.03349728,0.012809064,-0.0012283969,-0.0227886,0.033802,-0.038938686,0.023398036,-0.045272477,-0.010605296,0.012145213,0.024725739,0.012090799,-0.012330221,-0.009979534,0.0013202205,0.0005628452,-0.024486316,-0.04085406,-0.00934289,-0.022810364,-0.036196217,0.016302446,-0.024138067,-0.036196217,-0.040484045,-0.05480582,-0.017390726,-0.031647205,0.011775197,-0.02147178,0.03697978,-0.027533503,-0.023942176,0.004489158,0.007645172,-0.0010801186,-0.004725859,0.016813938,-0.035151467,-0.010632503,0.017009828,0.002190165,0.022549177,-0.02244035,0.005509421,-0.023398036,-0.0153447585,0.018043695,0.009527897,0.0013923192,-0.01674864,-0.016911883,-0.013277025,-0.040919356,-0.011873143,-0.0028621783,-0.015366524,-0.004334078,0.015246813,-0.0061433446,0.008619184,-0.0008563409,-0.021254122,0.05345635,-0.0038117033,-0.0012746488,-0.02127589,0.00076655776,-0.049973853,-0.0030635102,0.0002693495,0.014256477,-0.02357216,-0.006807196,0.014387071,-0.023985708,0.022462115,0.019023146,0.041615855,-0.030711282,0.03767628,0.01213433,0.039373998,0.04065817,0.013712337,-0.041224074,0.042856496,0.01782604,0.011318119,-0.027228784,-0.023615692,-0.029405346,-0.008357996,-0.0022200928,0.047666695,0.0039341347,0.012722001,-0.015671242,-0.013559978,-0.0028948267,-0.009859824,0.026684644,0.06655925,-0.040070496,0.00655145,-0.010806628,0.005286324,0.05249866,-0.056503534,0.014365306,-0.025726957,-0.054414038,-0.008385203,0.017956631,-0.010344109,0.004029359,0.024638675,-0.017009828,0.032474298,-0.01934963,0.022505647,-0.028970033,0.0026309188,-0.044575978,0.049973853,-0.043509465,0.009010964,0.02868708,0.020938521,-0.011318119,0.014049704,0.018783726,0.00070466177,0.062206127,-0.01578007,0.025748722,0.01934963,0.0066439537,-0.0013093378,0.02322391,0.009511573,0.015997726,0.022287989,0.0012501625,-0.017281897,0.0049680015,0.00038940046,0.01988289,-0.010686917,-0.008347114,-0.013505564,-0.0076234066,-0.0150509225,-0.031712502,0.021722084,-0.062859096,0.0006910583,0.029296517,-0.042225294,0.03499911,-0.0036457404,0.009027288,-0.027555268,0.03201722,0.0013657924,-0.01461561,0.0051611713,0.044380087,0.016443921,0.022005036,0.015399173,0.02492163,-0.0049244706,-0.043357104,0.0069758794,0.024856333,0.017075125,-0.020992935,0.034019656,-0.0053788275,-0.013603509,-0.0455772,0.032387234,0.019088443,-0.02764233,-0.00655145,0.017695446,0.0055529526,0.01124194,-0.005373386,-0.01112767,-0.017564852,-0.006050841,0.027468206,-0.0132443765,0.007645172,-0.0025479372,-0.0050332984,0.0046687243,-0.023093317,0.04705726,-0.027119957,0.03062422,-0.018087225,0.0059637786,0.013396736,-0.008439617,-0.01879461,-0.0037627306,-0.05071388,0.042268824,-0.027468206,0.016901,0.054718755,-0.02849119,-0.021580607,-0.00066487154,0.016726876,-0.03086364,-0.03499911,-0.033584345,0.021526193,-0.019447576,0.020416146,-0.010501909,-0.016922766,0.009195972,0.060639,0.025313409,-0.010692358,-0.028404128,-0.02779469,0.018228702,-0.010126452,-0.007900918,-0.08040218,0.008662715,0.0065840986,-0.009174206,0.017423375,0.025770487,-0.045272477,0.022723302,-0.011720784,0.009794527,0.005577439,0.004315033,0.02744644,-0.00013714038,-0.0068670516,0.019904654,-0.025073988,-0.0073241293,0.013995291,0.042769432,-0.0058005364,-0.012330221,-0.002640441,-0.046883136,0.019273452,-0.011056933,0.012112564,0.0027710348,-0.039874606,0.008630066,0.0035967678,-0.04366182,0.013603509,-0.035107937,0.0016841145,-0.031538375,-0.0072860396,-0.042660605,0.0039831074,0.01992642,0.009054496,0.012569643,0.012732885,-0.03360611,0.024355723,-0.00938098,0.014561196,-0.02461691,0.045098353,-0.0358915,0.03325786,-0.0035450745,0.007280598,-0.021896208,0.015137985,0.016345976,-0.0032457972,-0.055502318,-0.007900918,-0.022853896,-0.020416146,0.033192564,-0.0013712337,0.010365874,-0.003822586,-0.008657273,-0.01709689,-0.003248518,0.0031995454,-0.0056645013,0.007242508,0.037284497,-0.025879316,-0.037045076,0.05811419,-0.024116302,-0.0077594416,0.041659385,0.015475352,0.015377407,-0.01578007,-0.02923122,0.008842281,-0.0037899376,0.012526112,0.023680989,0.025052223,-0.000496188,0.012264924,0.021177944,0.020568507,-0.028926503,-0.016824821,0.02248388,0.07469959,0.03543442,0.03351905,-0.019121092,-0.013886462,-0.031037766,0.008200196,0.040832292,-0.026706409,-0.029361814,-0.007182653,-0.012515228,0.025226347,-0.007492813,-0.024943395,0.015464469,0.0042007635,0.010306018,-0.0030607895,-0.032561358,-0.013625274,0.020753514,-0.0037708927,-0.011035167,-0.030645985,0.011361651,0.017532203,-0.023115084,-0.023550395,0.008347114,-0.0150509225,-0.014387071,0.06316382,-0.02783822,0.002609153,-0.035826202,-0.036392108,0.0037028752,-0.0071227974,0.0054686107,-0.048363198,0.032561358,0.015442704,0.029905954,-0.03419378,0.030036548,0.050060913,-0.018707545,0.013233494,0.02496516,0.01488768,-0.00081553037,0.043335337,-0.0019629863,-0.015007392,0.00009632985,-0.002640441,0.0014569359,0.004981605,0.018294,-0.032278407,0.008439617,0.040875826,-0.03116836,0.042072933,0.017183952,0.012417283,-0.048014946,0.0344332,0.017543085,-0.014550313,-0.023789817,-0.013810283,0.02685877,-0.048014946,0.0065568914,0.031799562,-0.033475515,-0.013200846,0.01290701,-0.013440267,0.014017056,0.016639812,0.0117534315,0.029318282,0.031473078,0.029078862,-0.016258914,-0.00395318,0.019371398,0.024899863,-0.01317908,-0.059637785,0.026924066,0.0025220907,-0.029514173,0.05071388,-0.000546521,-0.0035178675,0.02740291,-0.018011047,-0.025901081,-0.0068942583,-0.009201414,0.03637034,-0.0069922036,-0.036413874,-0.0132443765,-0.006486153,0.010469261,-0.03356258,0.024899863,-0.011775197,-0.014637376,0.012515228,0.020524975,-0.009179648,-0.008270933,0.027489971,-0.012384634,-0.02131942,-0.032343704,-0.008439617,-0.060769595,0.007307805,-0.011742549,0.026379924,-0.019436695,-0.005773329,0.0041409084,-0.0100938035,-0.009957769,-0.03956989,0.026641112,0.002747909,-0.017260132,0.055502318,-0.03523853,-0.02318038,-0.0025574598,-0.058984816,-0.043944776,0.013516447,0.012624057,0.025008691,0.033627875,0.0081185745,-0.00008072833,-0.020535858,0.024051005,-0.04496776,0.010436612,0.009435394,-0.000058282534,-0.06756047,0.0009835337,0.028578252,0.015192399,0.020666452,0.015834484,-0.032126047,0.001151537,-0.012123448,0.032974906,-0.012841713,0.007666938,-0.021580607,-0.022810364,0.026837002,0.004178998,-0.022723302,-0.048624385,-0.014789735,-0.022810364,-0.030580688,0.024769269,-0.004981605,-0.015072688,-0.004919029,-0.052585725,0.009391863,-0.014942095,-0.013070252,-0.028230002,-0.025922848,-0.0074601644,-0.008744336,-0.02879591,-0.017858688,0.0006291623,0.019044913,-0.003686551,0.024312193,-0.016160969,0.03674036,0.029862424,-0.0027356658,-0.006339235,-0.0047775526,0.020633804,-0.034498498,0.009843499,-0.023267442,-0.0033328598,0.0043939333,0.03158191,0.007237067,-0.036305044,0.024464551,-0.00360493,-0.0026622068,0.002717981,0.020905873,0.03306197,-0.0033899946,0.0029519615,-0.013004955,0.03260489,-0.040875826,-0.01364704,0.011231057,-0.01372322,0.01655275,-0.0060073095,0.017118655,0.036435638,0.012515228,-0.056024693,-0.03162544,0.0034661742,-0.014909446,-0.042312354,0.00064718694,-0.06973703,-0.054022256,-0.009560546,-0.024246896,-0.0018092667,-0.019915538,-0.012188745,-0.02027467,-0.002303074,-0.048667915,-0.0005849509,0.04442362,-0.03269195,0.023963941,-0.006322911,0.017009828,-0.0044102576,0.012264924,0.010403964,0.025618128,0.002992772,-0.0393087,0.028317064,0.037893936,0.045011293,-0.00034552914,-0.04039698,0.0013038963,0.021602374,0.014593844,0.0014977463,-0.017858688,0.02516105,0.012819947,0.02298449,-0.012874361,-0.03216958,-0.03926517,0.00059515354,-0.009087144,0.0014365306,-0.05201982,-0.0057189153,-0.0065024775,0.025378706,0.012264924,0.025139285,-0.024791036,-0.03423731,0.03752392,0.009000082,0.01818517,0.03151661,0.00821652,-0.0058712745,0.021602374,0.023136849,-0.013113783,-0.023963941,-0.019360514,-0.013092018,-0.010986194,0.039787542,-0.005019695,-0.04274767,-0.0054332414,-0.018206937,-0.041572325,0.011285471,0.007639731,0.0013453871,0.022353286,0.017728094,-0.027141722,-0.038568668,0.028643548,-0.016019493,-0.01042573,0.024638675,0.00043633257,0.05841891,0.043509465,0.0006012751,-0.0022921914,0.04387948,0.025596363,0.007389426,-0.026292862,0.02729408,-0.0059474544,0.0024159832,-0.0014787015,-0.009130675,-0.011231057,-0.00067779486,0.035717376,-0.0020636523,-0.01662893,0.0032077075,-0.02163502,0.02352863,-0.017651914,0.0109753115,0.0021099043,0.010518233,0.0030635102,0.006872493,0.018391944,-0.015399173,-0.007737676,0.02977536,0.021558842,0.0025887478,-0.005675384,0.015464469,-0.0064752703,-0.061117847,0.012395518,-0.030036548,-0.0018664015,-0.015638594,0.010257046,0.03151661,0.01779339,-0.022375053,-0.020252904,-0.020840576,0.018076343,-0.00004027914,-0.01709689,0.039025746,0.028882971,-0.014974743,-0.009451718,-0.01957817,-0.0036076508,-0.00550398,-0.01593243,0.008978316,0.019665234,-0.029427111,-0.014485016,0.01034955,0.0065188017,-0.023071552,0.0106978,-0.038046293,-0.05245513,-0.011209291,-0.024856333,-0.00972923,-0.0059420126,-0.02938358,0.03950459,-0.015486235,-0.013951759,-0.0029982135,-0.019001381,-0.019665234,0.031037766,0.014332658,-0.0061814347,-0.018968733,0.0037028752,-0.022527412,-0.054022256,-0.021809146,0.015453586,-0.020601155,0.018859906,0.0011488163,0.03140778,-0.026706409,-0.02934005,0.0007019411,-0.0074764886,-0.0069051413,0.036348578,0.005275441,0.023158614,0.026771706,0.018272234,0.011154878,0.05349988,0.013200846,0.023615692,0.005150289,-0.00000514117,0.021983271,-0.036870953,-0.009386421,-0.0055529526,-0.0069269068,-0.01880549,0.016498337,0.025052223,-0.018108992,0.023506863,-0.021156177,-0.009919679,0.043052386,-0.029057095,0.0026486032,-0.0019208156,0.022527412,0.0153882895,0.032104284,-0.027729394,-0.024573378,-0.0077431174,-0.004935353,0.035760906,-0.017847804,0.025596363,0.042312354,0.025683425,-0.016715992,0.03965695,-0.008020629,0.03682742,-0.015322993,-0.00033481637,0.015845368,0.01782604,-0.013625274,0.011720784,0.03693625,-0.04035345,-0.023006255,0.010180866,0.031538375,-0.051889226,-0.012809064,0.025988145,-0.0043476815,-0.011524893,-0.007982539,0.020807927,0.009000082,-0.037741575,-0.028600018,-0.027207019,0.02376805,-0.027881753,0.0017725372,-0.0045952653,-0.0039286935,-0.034824982,-0.056242347,0.016868351,0.013233494,0.0013515087,-0.03156014,-0.029470643,0.021384716,-0.021994153,-0.038133357,-0.0068942583,-0.0058059776,0.03158191,-0.013233494,0.0135382125,-0.010877366,-0.0071336804,0.004780273,-0.07256656,-0.03360611,0.0045598964,-0.034259077,-0.0029138718,0.024312193,0.019295217,0.018054577,-0.0065732156,-0.03062422,0.013385853,0.03419378,-0.012602291,-0.008417851,0.019327866,0.018816374,-0.023289207,-0.021101763,-0.0049326327,-0.015801836,-0.031451315,0.018772842,-0.00063596404,0.007383985,0.033323158,0.032387234,-0.017358078,-0.0001170752,0.032126047,-0.0331055,0.03465086,-0.00042374933,0.0066493955,0.016650695,0.021689435,0.002775116,0.026292862,0.021613255,-0.017194835,-0.0013834769,-0.020775279,-0.01794575,0.0013385853,-0.012101682,-0.012994072,-0.011601073,-0.039199874,-0.011709901,0.02097117,-0.001477341,-0.016487453,0.010926339,0.004105539,0.007509137,0.017151304,0.0074710473,-0.02007878,-0.012156096,-0.013168197,-0.004581662,-0.042878263,0.015518883,0.0033546253,0.017379843,0.0015439983,0.023833347,0.009903355,-0.0013385853,-0.017586617,0.008711687,0.0050387396,0.035325594,0.017902218,0.013744986,-0.014865915,0.007318688,0.026662879,0.004461951,-0.014604728,0.009805409,-0.0099251205,-0.034520265,-0.0038307481,-0.019251686,-0.0025411355,-0.008357996,0.013146431,-0.009865265,0.035195,-0.041180544,-0.02709819,0.007786649,-0.0020826973,-0.004943515,-0.019055795,0.050888006,-0.032278407,-0.023550395,-0.040375214,0.0126349395,0.034955576,0.021069115,0.0406364,0.018402828,0.031734265,0.014332658,0.0021139854,0.012602291,0.015649477,-0.016041258,-0.04283473,-0.0070466176,0.002368371,-0.009794527,0.019501992,0.010523675,-0.008673597,-0.011318119,-0.011307237,0.021722084,-0.016574515,0.017020712,0.030841876,-0.0434224,0.02019849,-0.009468042,0.04357476,-0.010055714,0.01818517,-0.019316982,-0.030841876,0.0057515637,-0.033170797,-0.016411273,0.03508617,-0.007873711,0.0011726225,0.018968733,0.024225129,-0.008472266,0.013124665,-0.028121173,-0.011601073,-0.022233576,-0.005729798,0.013973525,-0.0008719849,-0.004124584,-0.0065296846,0.015562414,-0.011503127,0.0037572891,0.02566166,-0.015246813,0.0147570865,0.0005706672,0.015899781,-0.012090799,0.0055611148,-0.010915455,0.0132443765,0.025944613,-0.020165842,0.011040608,-0.0006128381,-0.01504004,-0.005422359,0.01934963,0.00527272,0.0019180948,0.040418748,0.019501992,-0.0067908717,-0.013092018,-0.005221027,-0.031494845,0.0009726509,0.022418583,-0.001073997,-0.022375053,-0.010561764,0.0070575005,-0.012667588,0.03663153,-0.03508617,0.031930156,-0.01476797,0.019959068,0.03584797,0.008096809,0.006056282,-0.023093317,0.014365306,-0.006741899,0.000029332567,0.0093048,-0.023202145,0.0027737555,0.0041409084,0.0073676608,0.0072642737,0.009489808,-0.030471861,-0.0057515637]},{"id":"single-number","name":"Single Number","description":"You are given a **non-empty** array of integers `nums`. Every integer appears twice except for one.\n\nReturn the integer that appears only once.\n\nYou must implement a solution with $O(n)$ runtime complexity and use only $O(1)$ extra space.\n\n**Example 1:**\n\n```java\nInput: nums = [3,2,3]\n\nOutput: 2\n```\n\n**Example 2:**\n\n```java\nInput: nums = [7,6,6,7,8]\n\nOutput: 8\n```\n\n**Constraints:**\n* `1 <= nums.length <= 10000`\n* `-10000 <= nums[i] <= 10000`\n","difficulty":"Easy","concepts":["Bit Operations"],"solutions":{"python":"class Solution:\n    def singleNumber(self, nums: List[int]) -> int:\n        res = 0\n        for n in nums:\n            res = n ^ res\n        return res\n","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {number}\n     */\n    singleNumber(nums) {\n        let res = 0;\n        for (const n of nums) {\n            res ^= n;\n        }\n        return res;\n    }\n}\n","cpp":"class Solution {\npublic:\n    int singleNumber(vector<int>& nums) {\n        int res = 0;\n        for (int n : nums) {\n            res ^= n;\n        }\n        return res;\n    }\n};\n","java":"class Solution {\n    public int singleNumber(int[] nums) {\n        int res = 0;\n        for (int n : nums) {\n            res ^= n;\n        }\n        return res;\n    }\n}\n","csharp":"public class Solution {\n    public int SingleNumber(int[] nums) {\n        int res = 0;\n        foreach (int n in nums) {\n            res ^= n;\n        }\n        return res;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def singleNumber(self, nums: List[int]) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number[]} nums\n     * @return {number}\n     */\n    singleNumber(nums) {}\n}\n","cpp":"class Solution {\npublic:\n    int singleNumber(vector<int>& nums) {\n        \n    }\n};\n","java":"class Solution {\n    public int singleNumber(int[] nums) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int SingleNumber(int[] nums) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/qMPX1AOa83k","embedding":[-0.016306512,-0.03469769,0.012077041,-0.007987886,0.020786542,0.00037991314,-0.049029782,0.013089308,0.0104934955,0.03794496,0.0020345554,-0.038686622,-0.0034376972,0.021768741,0.05123472,0.020626184,-0.008138222,0.025436955,0.008814737,0.017649518,-0.014813168,0.014352135,0.025958123,-0.030227682,0.057969797,-0.027641892,0.014803145,-0.012628276,0.0063442052,0.012678388,0.008649367,-0.015955726,-0.0055373986,0.027902475,-0.039608687,0.0076521337,0.019764254,-0.025797762,-0.018060438,-0.021868967,0.011926705,-0.051395077,-0.025396865,-0.0037959996,0.019513693,0.036221102,-0.0073564714,-0.028283328,0.03120988,0.003194653,0.025597313,0.0023991219,0.023452511,-0.0029240472,-0.009666644,-0.028243238,-0.038686622,0.061617967,-0.002075898,0.014893347,0.020145107,-0.021648472,0.022109505,0.03794496,0.011996862,0.010087587,0.017629474,0.0013768328,-0.00086380914,-0.030027233,-0.05428154,0.018250864,0.010583698,0.011706211,0.004795738,0.07308364,0.03461751,0.04413883,-0.014722966,-0.016637253,0.024194172,0.0006076105,0.0068052374,0.010303069,0.030588489,0.01137547,-0.02722095,-0.049911756,-0.02788243,-0.049671218,-0.011014663,-0.0068703834,-0.024895743,0.012407782,0.03046822,0.015514739,0.0127285,0.025316685,0.03539926,0.07625073,0.008965073,0.034397017,0.018661784,0.02431444,-0.007682201,0.035158724,0.036321327,-0.00147831,-0.032212123,0.0026684748,0.018741965,0.008814737,-0.007070832,-0.037463885,0.002243774,-0.008809726,-0.005838072,-0.00226883,-0.023472557,-0.018882278,0.018892301,-0.03457742,-0.0099422615,-0.039749,-0.023372332,-0.02557727,0.012016906,-0.055404052,0.029145258,-0.008378761,0.028022744,-0.022590581,-0.017398957,0.016867768,-0.043577574,-0.048187897,0.04002963,0.022510402,-0.0072612585,0.056326117,0.05776935,0.014873303,0.006639867,-0.012798657,0.05099418,-0.011876592,-0.058290515,0.0007159781,-0.02874436,-0.011154977,0.015374424,-0.01355034,0.018842189,0.01999477,0.017459093,-0.024575025,0.009416083,-0.016757522,-0.018000305,0.011054752,0.043296944,-0.023191929,-0.022510402,0.0051189614,0.011736278,0.01613613,-0.014873303,-0.025296642,0.013279734,0.0016724948,0.018982504,-0.02114735,0.014011372,-0.025096191,-0.011776368,-0.015214065,-0.028684225,-0.10327123,-0.05712791,0.014111597,-0.030247727,0.007992896,-0.03838595,-0.051114447,0.032091856,0.019122817,0.043256857,-0.034557376,-0.037423793,0.004369784,0.021909056,0.031109657,0.041893803,0.030969342,0.00016192505,0.0069756187,0.012227378,0.04021003,-0.05636621,-0.021608382,-0.030528355,0.023131793,0.018812122,-0.005001198,0.016737476,-0.06526613,-0.014271956,-0.009837026,-0.03050831,0.011064774,0.030327907,0.0062189247,0.040711153,-0.030307861,-0.03207181,0.009832014,0.0381855,-0.018651763,0.015695142,0.026679737,0.039929405,-0.014722966,-0.009175545,0.055243693,0.038426038,0.008017953,-0.010613765,0.02808288,0.025857897,0.016366646,-0.016045928,-0.0003146107,0.014843235,0.016807633,-0.039348103,-0.0096716555,-0.00006334496,-0.007221169,-0.030628579,0.0032297315,-0.016617207,-0.0073113707,0.00015581763,-0.00381855,-0.015524761,0.015464626,-0.03301392,0.04245506,-0.01239776,-0.022350043,-0.024294397,0.025757672,-0.011235156,-0.059813928,-0.033194326,0.025376821,0.017238598,0.0051114447,-0.0238935,0.006539643,-0.045020804,-0.018902324,-0.07031745,-0.09525328,-0.022249818,-0.042174432,-0.025817808,0.03497832,0.015214065,-0.011014663,-0.013540317,-0.016356623,0.03317428,-0.02431444,0.007772403,0.007591999,0.021047127,0.006910473,-0.005632612,-0.070076905,-0.016276443,-0.05271804,0.042976227,0.04109201,-0.010974573,-0.036962762,-0.01564503,0.0049009738,-0.0034026187,-0.039107565,-0.029125214,-0.018551538,0.01396126,0.005517354,-0.01769963,-0.017168442,-0.017238598,0.008559165,0.016597163,-0.03399612,0.02110726,-0.021588339,-0.020175174,-0.027461488,-0.02972656,-0.034016166,0.009411072,0.02028542,-0.0051064338,0.018872255,0.014873303,-0.017759765,-0.026739873,0.017058194,0.04213434,-0.07444669,-0.03038804,0.012818702,0.016947947,0.02357278,0.019613916,0.008614288,0.019784298,0.03227226,0.029866874,0.027341219,0.019042637,0.023191929,0.04915005,0.0018503931,-0.011806435,-0.01748916,0.0004654171,0.052677948,-0.075569205,-0.012758567,0.046464037,-0.014181754,0.0024655205,0.0037183256,0.060896352,0.013820946,0.025256552,0.028203148,0.0069906525,0.0012928948,0.0034351917,-0.00087132596,0.046704575,-0.014853258,0.010864326,-0.006554676,0.056646835,-0.011195066,-0.006339194,0.014732988,-0.07653136,-0.016567094,-0.031550642,0.030648625,-0.032673158,0.025717583,0.025938077,-0.019654006,0.031069567,0.022410179,0.02369305,-0.040991783,-0.021949146,0.061257157,0.020105015,0.04249515,0.013400003,0.0020333028,-0.025336731,-0.007982874,-0.026098436,0.002681003,0.018000305,-0.07107915,-0.027601803,0.015635008,-0.011976817,-0.053519834,-0.02024533,0.05772926,0.013911148,-0.011936727,-0.020265376,-0.040390436,-0.016035905,-0.036942717,0.04746628,-0.018812122,0.03325446,-0.005186613,0.020235308,0.041853715,-0.020726407,-0.009786913,0.0076771895,0.008784669,0.016516982,0.019313244,0.0011632296,-0.029927008,-0.012006884,0.017990282,0.029987143,-0.029365752,-0.012107109,0.010483474,0.012999106,-0.0026083402,0.041813623,-0.0037208311,-0.0037859771,-0.0025494583,-0.009636577,0.006965596,-0.022149595,-0.006274048,0.046584304,-0.023873454,0.021468068,-0.017559316,-0.036140922,-0.04002963,-0.009205612,-0.0040741223,0.002898991,-0.007962829,-0.039107565,0.030167546,-0.054321628,0.060735993,-0.033595223,0.051916245,-0.020445779,-0.030808983,0.0042069196,-0.036622,0.0055825,-0.026298884,-0.025336731,-0.04273569,-0.039708912,0.031570688,0.006454452,-0.032853562,0.04722574,-0.04910996,0.04265551,0.016476892,-0.033274505,-0.035379216,0.078295305,0.021267619,-0.028624091,-0.0019719151,-0.04249515,-0.010343159,0.0114556495,0.009456173,0.025938077,-0.051715795,-0.04057084,-0.0035780114,0.026258795,-0.009761858,0.032753337,0.011265224,-0.0034978318,0.053600013,-0.05776935,-0.017920123,0.02796261,0.08627317,0.0069004507,-0.027982654,-0.025477044,-0.06354228,-0.019844433,0.005722814,0.018250864,0.01186657,0.015705165,0.023372332,-0.0047155586,-0.0033825738,-0.028503822,-0.017589383,0.030207638,-0.005161557,0.011185044,0.028944809,-0.0031069566,-0.025276596,-0.038526263,0.00019950922,-0.015204043,-0.07424624,-0.00505131,0.018802099,0.039749,0.007937773,-0.0056977575,-0.023833364,-0.0061036665,0.06105671,-0.012668366,-0.0069906525,-0.004011482,-0.03580016,-0.022069415,0.0095313415,-0.013500228,-0.06586748,0.0018629212,-0.050232474,-0.00096653914,0.021868967,0.033033963,0.029205393,0.025457,-0.03281347,-0.022390133,-0.03235244,-0.04101183,-0.0037634266,-0.020145107,0.037183255,0.0020257859,0.05548423,-0.0295662,0.018902324,0.016867768,0.011876592,-0.025116237,-0.029846828,-0.005517354,0.0055574435,0.015083773,-0.016787589,-0.011686166,-0.020044882,0.039568596,0.004439941,-0.018501425,-0.0030743838,0.011154977,-0.024113992,0.0034953263,-0.02788243,0.001125019,-0.053199116,-0.0048308163,0.045381613,0.030929253,0.00047825836,-0.042615417,-0.032051764,0.008929995,-0.009546375,0.006865372,-0.012848769,-0.009872104,0.032172035,0.012979061,-0.006183846,-0.03042813,0.02275094,0.027401354,-0.02804279,0.008083099,-0.02635902,-0.022129549,-0.004865895,-0.021909056,0.021628428,-0.006349216,-0.030087367,-0.012327602,-0.042695597,-0.01100464,0.014662831,-0.00040152404,0.013981305,0.025216462,-0.040911604,0.008168289,0.01194675,0.020054905,0.0035153711,-0.0053118938,-0.02443471,-0.034918185,0.0055123423,0.034717735,-0.009100377,0.035579666,0.018431269,0.010713989,0.009957295,0.006760136,0.0020671284,-0.016336579,0.05452208,-0.020145107,0.01198684,0.001523411,0.0041693356,-0.015574873,-0.019754231,-0.0070307422,-0.0022963919,0.043216765,0.044700086,-0.007862605,0.0011237662,0.0013655575,0.025176372,0.025797762,0.018852212,0.00020264123,0.011966795,-0.055203605,0.0407312,0.006178835,0.050593283,-0.059172492,0.0077273017,0.011245179,-0.026860142,-0.0048107714,0.043457303,-0.009416083,-0.014081529,-0.013800901,-0.037624244,0.04534152,-0.002976665,0.020255353,-0.029125214,0.010172778,-0.006519598,0.034497242,-0.01815064,0.0020019826,-0.035098586,0.010052508,0.0009076573,-0.010954528,-0.036722224,0.0032146978,0.006339194,-0.0071660453,-0.038205545,-0.039969493,-0.0101577435,-0.011465672,0.0009828256,0.01860165,0.0015384447,0.017479137,-0.032452665,0.013820946,-0.014111597,0.026519379,-0.017028127,-0.03982918,0.009370983,-0.02369305,-0.0069906525,0.017719675,0.04095169,0.016807633,0.021267619,-0.031731047,0.008975096,0.024154082,0.0030894175,-0.017028127,0.009776891,-0.0055574435,0.011716234,-0.011626031,0.0047531426,-0.008418851,-0.020034859,-0.004713053,-0.024214217,-0.012908904,0.018311,0.023793275,-0.04594287,0.032713246,0.03363531,-0.020455802,-0.014682876,0.011265224,-0.019974725,0.02279103,0.031590734,-0.032091856,-0.0017664552,0.0069054617,0.009085342,-0.013861036,0.0007541887,0.016647274,-0.021828877,0.015504716,-0.0021899033,-0.023632916,0.02303157,0.002416661,-0.017729698,0.01588557,-0.023292152,-0.0051966356,0.020355577,-0.008453929,-0.0102128675,0.03908752,0.008654377,0.003375057,-0.011896637,0.044178918,0.029365752,-0.006930518,-0.021728652,-0.005797982,0.02307166,0.0015597424,-0.051354986,-0.024534935,0.018521471,-0.02287121,-0.06278057,-0.016827678,0.034336884,0.008408828,-0.011475694,-0.0021986729,0.002898991,-0.013540317,0.0238935,-0.07725298,0.0074917744,-0.03848617,0.0015384447,0.050312653,0.01231758,0.0012546843,0.003420158,-0.03580016,0.02279103,-0.003580517,0.008549142,-0.00021360327,0.008714512,0.017829923,0.0036682133,0.03453733,0.02106717,0.0040064706,0.02968647,-0.014652808,0.026118482,-0.036441594,-0.03325446,-0.024895743,-0.037263434,-0.0050964113,-0.012558118,-0.032472707,-0.010242934,-0.031089611,-0.014692898,-0.033675402,0.01055363,0.0058781616,0.00911541,0.011345403,0.0060886326,0.030808983,-0.01100464,0.0219291,-0.06875394,-0.01773972,0.0013329847,-0.012267468,-0.023392377,0.018120574,0.02722095,-0.017278688,-0.013249666,-0.0018629212,-0.042775776,-0.0024580036,0.021347798,0.026559468,-0.020195218,0.009997385,-0.012738522,0.0044649974,-0.006589755,0.009546375,0.0015396975,0.003966381,0.031229926,-0.032993875,0.0137908785,-0.0089149615,-0.017058194,0.0012690916,0.0008193345,-0.021728652,-0.030528355,0.004590278,-0.0048107714,-0.0012672123,-0.0029140247,0.03630128,-0.020566048,-0.021347798,0.02561736,0.053559925,0.012928949,0.01580539,0.025657449,-0.057007644,0.01564503,-0.019303221,0.033976074,0.049550947,0.016807633,-0.0050563216,0.0068703834,0.014893347,0.009401049,-0.025076147,-0.043176677,-0.007386539,0.048067626,-0.010242934,-0.011796413,0.00089199725,-0.038686622,-0.01621631,-0.013540317,0.031570688,-0.020064926,0.010483474,-0.012758567,0.021347798,0.008614288,-0.025477044,-0.012447871,0.02627884,-0.005958341,0.00911541,-0.02381332,-0.011966795,0.01864174,-0.03674227,-0.022450268,0.0009333398,-0.028223194,0.015163953,0.007201124,-0.03998954,-0.025797762,0.015785344,-0.021828877,-0.0045852666,-0.0023678017,-0.0061187004,-0.02553718,0.013229622,0.024214217,-0.033675402,0.037463885,-0.010533585,-0.061577875,0.035158724,0.0071810787,-0.034958273,-0.027381308,0.009436128,-0.033775624,0.0033049,-0.010814214,-0.008208379,-0.034296792,0.037062988,-0.009125432,0.053319387,-0.03301392,-0.034397017,-0.006279059,-0.023392377,0.0109044155,0.005432163,0.017318778,0.0017376407,0.026058346,-0.028363507,-0.016737476,0.01773972,-0.0023051614,0.038085274,0.012247423,0.045381613,0.005367017,-0.00895004,-0.009952283,-0.017098283,0.0099422615,0.0008562923,-0.019814366,-0.03223217,-0.007161034,0.036060743,0.0051014223,-0.0014194282,0.0024880709,0.02710068,0.0024843125,0.043136586,0.00488594,0.014562607,-0.046383858,-0.04730592,-0.027401354,-0.029846828,0.0015447087,0.0031595745,-0.0003251029,-0.029165303,-0.021468068,-0.011465672,-0.0054171295,0.028924765,-0.018912345,0.020024836,-0.042695597,0.004745626,0.02706059,0.054602258,-0.012618253,-0.015264178,-0.005088894,-0.03305401,-0.0056426344,0.016817655,0.014502472,0.03259298,-0.002776216,0.024234261,-0.04562215,0.007566943,-0.0027210927,-0.026098436,-0.035138678,0.021327754,0.0024141555,-0.0010103873,-0.039027385,0.018661784,-0.003039305,-0.046383858,0.0013041701,-0.031751093,-0.0011237662,-0.040470615,0.0036732245,-0.012427826,0.028543912,0.019924613,0.0051114447,-0.016607184,0.02303157,0.020826632,0.0544419,0.00025933067,0.0006267158,0.013991327,0.0147430105,0.018952435,0.02467525,-0.028102925,-0.0064293956,-0.009781903,-0.008423861,-0.046864934,0.03539926,-0.03772447,-0.0070106974,-0.000115414674,-0.044940624,-0.017809877,0.014281978,-0.000008348771,-0.015594918,0.035138678,-0.013861036,-0.016186243,0.0058631278,-0.028383553,-0.013670609,-0.012387737,-0.011275246,0.021909056,-0.012848769,0.046504125,0.011475694,-0.01695797,-0.057168003,0.01654705,0.016086018,-0.022029325,0.015594918,-0.04409874,-0.015374424,-0.006865372,0.024334487,-0.013560362,0.028383553,-0.0014344618,0.0035755057,-0.012898881,-0.022971435,-0.005392073,0.020946901,0.0010943252,-0.005838072,0.009035231,0.0018604156,-0.022470312,0.008022964,0.0010135194,0.01950367,-0.048147805,-0.00019105278,-0.013289756,-0.0011331622,-0.06875394,0.0056025446,-0.02561736,0.019082727,-0.0026709805,-0.02110726,-0.028483776,0.027521623,0.041492905,0.034256704,0.026078392,0.015815413,-0.0016336578,-0.02463516,-0.030187592,0.023091704,0.011605986,-0.009070309,-0.03169096,-0.040971737,-0.0575689,-0.020064926,-0.014031418,-0.004199403,-0.009386016,0.023873454,-0.015163953,-0.0033575178,-0.015584895,-0.0000137514935,-0.013079286,-0.019974725,0.030307861,-0.027782205,-0.03830577,-0.026779963,0.027401354,0.06286075,0.020646228,0.00020232802,-0.012708455,0.019613916,-0.004049066,0.0072662695,0.019854456,0.015284223,-0.0019180446,0.012628276,-0.0009076573,-0.010864326,-0.007501797,-0.0013004116,0.0092607355,-0.0143421125,0.015985793,-0.026880186,0.000094273586,-0.0075869877,0.003071878,0.040089764,-0.015003594,-0.03880689,-0.0069455514,-0.007346449,-0.044820357,0.027541667,-0.05784953,-0.035760067,0.0007078349,-0.013149442,-0.004369784,-0.020125061,0.01100464,-0.011014663,-0.021728652,0.03728348,-0.060174733,-0.021748697,0.023272108,0.027902475,-0.018782055,0.03982918,-0.015955726,-0.03740375,-0.027541667,0.00067275635,0.0041492907,0.0011989345,0.0068954392,-0.046945114,0.020726407,0.024975922,0.016236354,-0.029886918,-0.014702921,0.019613916,-0.007912717,0.014302023,0.0012878836,0.035178766,0.004865895,0.015374424,-0.0040390436,0.012858791,0.038907114,0.017419003,-0.0017601912,0.022029325,-0.041893803,0.01572521,-0.013680632,-0.02557727,-0.00275116,-0.022309953,0.0106338095,0.011305314,0.0013943721,0.002288875,0.003645663,-0.020455802,0.03497832,-0.008188334,-0.02393359,-0.030047277,-0.026960365,-0.026900232,0.053359475,0.007411595,0.019573826,-0.0064644744,0.009847048,0.03289365,0.0011845272,-0.0043948404,0.013620497,0.004557705,0.02463516,-0.017018104,0.00656971,-0.05416127,0.010047497,0.043216765,0.041172188,-0.0069756187,-0.019633962,-0.031510554,-0.007632089,-0.010192823,0.0061187004,-0.032252215,-0.020064926,-0.015053706,-0.0040866504,-0.003926291,-0.008448917,0.058170248,-0.026539423,-0.0011864065,0.0024580036,0.00021156746,0.0009402302,-0.005893195,0.022149595,0.014953482,-0.03453733,-0.046504125,-0.0127285,-0.008148245,-0.025737628,0.0022851166,-0.0030518332,-0.02710068,0.010804191,0.047787,0.024575025,0.0031645857,0.008975096,-0.015815413,0.020335533,0.051435165,0.028584002,0.0019405951,-0.016797611,-0.02639911,-0.036622,-0.015624985,0.051555436,-0.016657297,-0.026579512,-0.015925659,0.045301434,-0.009706734,0.01219731,-0.008273525,-0.007857594,-0.0060886326,0.042535238,-0.01728871,-0.039428283,0.017609429,0.016857745,-0.0044524693,0.0141917765,-0.026018256,-0.0060184756,0.009130443,0.0057578925,0.028363507,-0.0060184756,0.021989236,0.0039062463,-0.037323568,-0.007256247,-0.0075819767,0.0010066289,0.018110551,0.028102925,-0.02032551,-0.032613024,0.0018115562,-0.025056101,-0.016075995,-0.00412674,-0.01707824,0.018331045,-0.0031320127,0.02561736,0.031310104,0.003908752,0.035038453,0.022189684,-0.0054522078,-0.004044055,0.032552887,-0.004204414,-0.0018979998,-0.0022124539,0.013339869,0.026619604,-0.02804279,0.014442338,-0.0045301435,-0.005276815,-0.01014271,0.037965007,0.021347798,-0.0013643048,0.018160664,-0.0106237875,0.014993572,-0.006750114,0.012107109,-0.01876201,0.029285572,-0.013680632,-0.010573675,0.0025394359,0.019643985,-0.005858117,0.003149552,-0.0024692789,0.017599406,0.03780465,-0.00956642,-0.013871058,0.02315184,-0.013319824,-0.010343159,-0.018982504,0.003996448,0.00028501317,-0.005221692,-0.023292152,-0.003908752,-0.0544419,0.027581757,0.0021761225,-0.004081639,0.021628428,0.0058480944,-0.004642896,-0.029445931,0.024474801,0.0069405404,-0.019333288,-0.065346316,-0.011545852,0.02196919,0.014763055,0.03982918,-0.014151687,0.010012418,-0.008473974,0.00037740753,-0.029145258,-0.017168442,0.018992525,0.00010265172,0.047746908,0.012377715,-0.03297383,-0.03273329,0.020355577,-0.017479137,-0.0005534267,0.044419456,0.008173301,-0.01313942,-0.028644135,0.03145042,-0.016086018,-0.018381156,0.013169487,-0.0129590165,0.030408086,-0.0019368368,-0.004675469,-0.03477787,0.0454217,0.0157653,0.017138373,-0.031891406,0.018451314,-0.027742116,-0.0462235,0.017539272,-0.0033575178,-0.023272108,-0.018311,0.011285269,0.005592522,0.008068065,0.029506067,0.03958864,0.010914438,0.009716757,-0.010673899,0.027641892,0.007997908,0.030588489,-0.014302023,0.000089575566,0.017398957,-0.01190666,-0.024113992,-0.0058982065,-0.008383771,-0.037223347,0.035018407,0.006138745,0.021508157,0.0020445779,0.018100528,0.066789545,0.021127306,0.037303526,-0.00054904184,-0.026679737,-0.021808831,0.01276859,0.025436955,0.005276815,-0.0043121553,0.030708758,-0.028363507,-0.02118744,-0.0030242715,-0.006659912,-0.0075519094,-0.008594243,-0.024194172,-0.0103632035,-0.03990936,0.0021974202,-0.034918185,-0.003322439,0.02228991,-0.043657754,-0.0014169225,0.033434864,-0.022931345,-0.05945312,-0.0030493275,0.013800901,0.0422947,-0.012077041,0.03806523,0.03120988,0.008203368,0.002776216,-0.007942785,0.023352288,0.019804344,0.023292152,-0.024875699,0.041733444,-0.0060385205,-0.010393271,0.009842037,-0.014231866,0.02561736,0.014281978,-0.006725058,0.023873454,-0.0061036665,-0.010503518,0.022530448,-0.019002547,-0.005802993,0.0027286096,-0.012217355,0.031831272,0.0203656,0.0031670914,-0.001227749,-0.0051064338,-0.0020746454,-0.03736366,0.026920276,-0.01313942,0.010563653,-0.0021209992,0.017469114,-0.043136586,0.02315184,-0.006705013,-0.027541667,0.020315487,-0.010533585,0.0006173197,0.020686317,0.029786695,-0.0045326487,0.048027538,0.02964638,0.02200928,0.018200753,0.027982654,-0.036040697,0.014161709,-0.022911299,0.0038561341,-0.020746453,0.024955878,0.043136586,0.03457742,0.0011964289,-0.008433884,0.025236506,0.01437218,0.0051966356,0.024294397,0.03936815,-0.0057428586,0.029445931,0.022470312,-0.008514063,0.015945703,-0.04437937,-0.0024843125,0.010257969,0.027722072,0.02118744,-0.004775693,-0.041492905,0.0031871363,0.00013726046,0.018501425,-0.034717735,0.016416758,0.01092446,0.019654006,0.02267076,-0.022530448,0.050072115,0.01239776,0.007256247,0.010197833,-0.005156546,0.014071507,-0.019353334,0.039889313,-0.003149552,0.014101574,0.020646228,-0.02315184,-0.020666273,0.009030219]},{"id":"reverse-integer","name":"Reverse Integer","description":"You are given a signed 32-bit integer `x`.\n    \nReturn `x` after reversing each of its digits. After reversing, if `x` goes outside the signed 32-bit integer range `[-2^31, 2^31 - 1]`, then return `0` instead.\n\nSolve the problem without using integers that are outside the signed 32-bit integer range.\n\n**Example 1:**\n\n```java\nInput: x = 1234\n\nOutput: 4321\n```\n\n**Example 2:**\n\n```java\nInput: x = -1234\n\nOutput: -4321\n```\n\n**Example 3:**\n\n```java\nInput: x = 1234236467\n\nOutput: 0\n```\n\n**Constraints:**\n* `-2^31 <= x <= 2^31 - 1`\n","difficulty":"Medium","concepts":["Bit Operations"],"solutions":{"python":"class Solution:\n    def reverse(self, x: int) -> int:\n        MIN = -2147483648  # -2^31,\n        MAX = 2147483647  #  2^31 - 1\n\n        res = 0\n        while x:\n            digit = int(math.fmod(x, 10))\n            x = int(x / 10)\n\n            if res > MAX // 10 or (res == MAX // 10 and digit > MAX % 10):\n                return 0\n            if res < MIN // 10 or (res == MIN // 10 and digit < MIN % 10):\n                return 0\n            res = (res * 10) + digit\n\n        return res\n","javascript":"class Solution {\n    /**\n     * @param {number} x\n     * @return {number}\n     */\n    reverse(x) {\n        const MIN = -2147483648; // -2^31\n        const MAX = 2147483647; // 2^31 - 1\n\n        let res = 0;\n        while (x !== 0) {\n            const digit = x % 10;\n            x = Math.trunc(x / 10);\n\n            if (res > MAX / 10 || (res === MAX / 10 && digit > MAX % 10))\n                return 0;\n            if (res < MIN / 10 || (res === MIN / 10 && digit < MIN % 10))\n                return 0;\n            res = res * 10 + digit;\n        }\n\n        return res;\n    }\n}\n","cpp":"class Solution {\npublic:\n    int reverse(int x) {\n        const int MIN = -2147483648; // -2^31\n        const int MAX = 2147483647;  // 2^31 - 1\n\n        int res = 0;\n        while (x != 0) {\n            int digit = x % 10;\n            x /= 10;\n\n            if (res > MAX / 10 || (res == MAX / 10 && digit > MAX % 10))\n                return 0;\n            if (res < MIN / 10 || (res == MIN / 10 && digit < MIN % 10))\n                return 0;\n            res = (res * 10) + digit;\n        }\n\n        return res;\n    }\n};\n","java":"class Solution {\n    public int reverse(int x) {\n        final int MIN = -2147483648; // -2^31\n        final int MAX = 2147483647;  // 2^31 - 1\n\n        int res = 0;\n        while (x != 0) {\n            int digit = x % 10;\n            x /= 10;\n\n            if (res > MAX / 10 || (res == MAX / 10 && digit > MAX % 10))\n                return 0;\n            if (res < MIN / 10 || (res == MIN / 10 && digit < MIN % 10))\n                return 0;\n            res = (res * 10) + digit;\n        }\n\n        return res;\n    }\n}\n","csharp":"public class Solution {\n    public int Reverse(int x) {\n        const int MIN = -2147483648; // -2^31\n        const int MAX = 2147483647;  // 2^31 - 1\n\n        int res = 0;\n        while (x != 0) {\n            int digit = x % 10;\n            x /= 10;\n\n            if (res > MAX / 10 || (res == MAX / 10 && digit > MAX % 10))\n                return 0;\n            if (res < MIN / 10 || (res == MIN / 10 && digit < MIN % 10))\n                return 0;\n            res = (res * 10) + digit;\n        }\n\n        return res;\n    }\n}\n"},"starterCode":{"python":"class Solution:\n    def reverse(self, x: int) -> int:\n        ","javascript":"class Solution {\n    /**\n     * @param {number} x\n     * @return {number}\n     */\n    reverse(x) {}\n}\n","cpp":"class Solution {\npublic:\n    int reverse(int x) {\n        \n    }\n};\n","java":"class Solution {\n    public int reverse(int x) {\n        \n    }\n}\n","csharp":"public class Solution {\n    public int Reverse(int x) {\n        \n    }\n}\n"},"videoUrl":"https://www.youtube.com/embed/HAgLH58IgJQ","embedding":[0.041817114,-0.028398683,-0.0075616166,-0.0064342483,0.031918272,0.047470454,-0.04615061,0.008337026,0.02371323,0.0027716763,0.006318762,-0.07932273,-0.06964386,-0.01617911,0.017421965,0.020534601,0.011202191,-0.0016965518,-0.0014655788,0.053145792,-0.005579098,-0.006813704,0.04870231,-0.03260019,0.03440398,0.01696002,-0.009662371,-0.0061042868,0.068763964,0.011845617,-0.014265333,-0.021634473,0.0075341198,-0.00453972,-0.008793472,-0.004094272,-0.009959336,-0.039661366,0.03229223,-0.01121319,-0.0061042868,-0.040453274,-0.04230106,-0.003646074,-0.0070556756,0.016146114,0.00045885265,-0.013231454,0.04887829,0.04725048,0.022030426,-0.024351155,-0.013517421,0.052265894,-0.045930635,-0.030224469,-0.0035498354,0.027892742,0.009777858,0.04467678,0.015772158,-0.037351638,0.013066473,-0.026572896,0.010063824,0.044214834,0.020006662,0.055609502,0.007550618,-0.009403901,-0.050154142,0.042103082,0.0068192035,-0.00796307,-0.035503853,0.011081206,0.028816633,0.047382466,0.012560532,-0.015134232,-0.019819684,-0.041619137,0.034469973,0.0282447,-0.0038550496,0.024109183,0.0003110574,-0.023471259,-0.012516538,-0.011658638,-0.02901461,-0.010635758,0.0120325945,-0.004163014,0.019489722,-0.005067658,0.023801219,0.03559184,0.021865446,0.006120785,-0.023471259,0.031170359,0.09186127,0.019027777,0.014936255,0.026110949,0.009469894,0.00047053877,-0.038385514,-0.029674534,-0.010377288,-0.03721965,0.016806036,-0.046370585,0.0020058907,0.0032061255,-0.038473506,-0.022129415,0.018301861,-0.0053096297,-0.013957369,0.044016857,-0.021689467,-0.046370585,-0.023669235,-0.038891457,0.0040502767,-0.06621227,0.03365607,0.01429833,0.042499036,-0.0041300175,0.02062259,0.0029724028,0.020215638,-0.06647623,0.0119886,-0.0006468619,-0.009645873,0.01763094,0.006720215,-0.009574382,-0.0642325,-0.034887925,0.005375622,-0.001677304,0.006181278,0.015376204,-0.024549132,0.04126718,0.031962264,-0.0028871626,0.019962668,0.028178709,0.024109183,0.016069124,0.036581725,0.015596178,0.0075231213,-0.0015975634,0.014892261,-0.013737395,-0.02952055,-0.030334456,0.00096170016,-0.0094149,-0.005095155,0.015948137,-0.031610306,-0.051473986,-0.008793472,-0.0006283016,0.011141699,-0.068851955,-0.0040365285,0.013682402,0.0117026325,-0.031060372,-0.044192836,0.030532433,-0.041047204,-0.038781468,-0.012516538,-0.03304014,0.036603723,-0.028310692,-0.037351638,-0.06273667,-0.013374438,-0.0042977477,0.020490605,0.07655106,0.026330924,0.027804751,-0.026000962,0.020402616,0.06687219,-0.048218366,-0.013418432,-0.011845617,-0.06137283,0.041201185,-0.0030328957,0.020930555,0.03919942,-0.013660404,-0.0077045998,0.02815671,-0.01472728,-0.028310692,-0.013968368,-0.038979445,0.025539016,-0.035943802,0.041047204,0.042257063,0.061636798,-0.012681519,0.0012002348,0.051517982,-0.01728998,0.018114883,0.010278299,0.021722462,0.024329158,0.009304913,0.013231454,0.02166747,0.03827553,0.0075286203,0.000049923856,0.0075231213,-0.006181278,-0.02019364,0.043268945,-0.03141233,-0.02765077,-0.0071876603,-0.03603179,0.016762042,-0.014364322,0.00436924,-0.020842565,0.012175578,-0.0299605,-0.010228805,-0.020435613,0.0025049574,-0.065596335,-0.015211223,-0.044060852,0.013484425,-0.028530667,-0.056137443,-0.012813503,0.01703701,0.0419491,-0.024725111,-0.020435613,0.0017240486,-0.054245662,-0.048922285,-0.010278299,-0.07377938,0.041883107,-0.031896275,-0.00013593724,0.020358622,-0.019896675,0.019929672,0.025561014,-0.007919075,0.017872913,-0.003373856,-0.05230989,-0.020127648,0.0359658,0.023009311,-0.03134634,-0.019027777,-0.0070171803,0.016476076,0.017212989,0.0325562,0.011790623,-0.031896275,-0.014859264,-0.020688584,0.012791506,-0.038451508,-0.029410563,0.022096418,-0.020699581,-0.014430314,-0.0052876323,-0.0042977477,-0.026440911,-0.003362857,0.0010868105,-0.060228962,0.042235065,-0.010751244,-0.056973346,0.013341442,-0.047558445,-0.02251437,0.0007376013,0.024593128,0.017696932,-0.0010950596,-0.042499036,-0.015200225,0.029102601,0.015827151,-0.021689467,-0.015365205,-0.0042977477,-0.025956968,-0.013803387,-0.055785485,-0.029982498,-0.020369621,0.028398683,0.03040045,0.051342003,0.0009458895,-0.003467345,0.04861432,0.006516739,-0.070391774,-0.03389804,0.008491009,0.004135517,-0.017487956,-0.050022155,0.03229223,0.052529864,-0.025561014,-0.026572896,-0.028376685,0.03757161,0.010349791,0.008969452,0.04852633,-0.009464394,-0.027012844,0.009134433,0.011570648,0.043422926,0.0036268262,-0.06893995,-0.012142582,0.0046277093,-0.013770391,0.021788456,0.01770793,-0.047118496,0.046414576,-0.059569042,0.014518304,-0.05195793,-0.027782755,-0.01019031,-0.018818801,0.047602437,0.005983301,0.003211625,-0.029894508,0.0061867773,0.017125,-0.010124317,0.040541265,-0.009150931,-0.010630258,0.03185228,-0.056137443,0.01780692,0.0001423818,0.027694765,0.026242934,-0.011202191,0.024285164,0.000039784416,-0.028266698,0.027254816,0.049230248,0.016938021,-0.04716249,-0.05948105,-0.01634409,0.004006282,-0.041663133,0.05332177,0.0068686977,0.005015414,-0.041443158,0.017828917,0.04663455,-0.019225754,0.049406227,0.01301148,-0.018422848,-0.0048971777,-0.023339273,-0.028222702,-0.03587781,-0.03776959,-0.0072976477,0.0011466161,-0.0056258426,0.0028060472,-0.0044654785,0.017740928,-0.017905908,0.031786285,0.006153781,0.04725048,0.0057028336,0.04230106,-0.008996949,-0.018554833,0.039661366,0.008183044,0.021612475,0.004003532,0.04177312,-0.04597463,-0.029476557,0.008040061,0.020600593,0.015552184,-0.001780417,-0.04777842,-0.0074461303,-0.07817887,0.032644186,0.022965318,0.047382466,0.010668754,-0.062956646,-0.031654302,-0.01635509,0.05930507,-0.02584698,-0.0005788074,-0.014826268,-0.031368334,0.058161207,0.03064242,-0.033106133,0.060756903,0.0065002404,0.059613034,-0.006043794,-0.05261785,-0.046458572,0.0076386076,0.034645952,-0.014518304,0.05261785,-0.05917309,0.026352922,-0.0111142015,-0.014771274,0.020149646,0.0035250883,-0.0036268262,0.018433847,-0.005018164,0.0006877634,-0.029652536,0.016509071,0.031698298,0.012351557,-0.059701025,0.014144348,0.019544717,0.071447656,-0.0064947414,0.00079328235,-0.004371989,-0.058689144,-0.031654302,-0.05059409,-0.019610709,0.04399486,-0.0138913775,0.015200225,-0.050990045,0.0154091995,0.02584698,0.009612877,0.009920841,-0.008249036,0.04005732,0.03917742,0.027782755,-0.009211424,-0.000255892,0.009293914,-0.017278982,0.0125385355,0.02661689,-0.0025489521,0.027188824,0.026946852,0.022217404,0.0034041023,-0.016938021,0.028728643,0.030752407,-0.0188408,0.006087789,-0.027430795,-0.012461544,0.046414576,0.0018876545,-0.023273282,0.009029945,-0.007204158,0.012659521,-0.036163777,-0.018356856,0.003714816,0.013231454,-0.008392019,-0.018334858,0.004553468,-0.04168513,-0.010910725,0.0062252725,0.031984262,-0.0040090317,0.043510918,0.016234104,-0.052001923,0.0111252,0.009403901,-0.028310692,-0.03315013,0.0074956245,0.039155427,-0.010151814,0.026044957,-0.004099771,-0.0035030907,0.023141297,-0.0028514168,-0.025429029,-0.0048036887,0.005796323,0.018081889,-0.0108667305,-0.041113198,-0.005983301,-0.01900578,-0.023185292,0.046106614,0.031280346,0.010740246,-0.04896628,-0.011493658,0.037967566,-0.0068357014,0.017696932,-0.016729046,-0.0393754,-0.00019282123,0.012098586,-0.0034508468,0.049450222,-0.016487073,0.0033766055,-0.03715366,0.014584296,-0.008227039,-0.022679351,-0.011394669,0.024769107,0.013066473,-0.0020223889,0.016487073,0.01360541,0.003989784,-0.005488359,-0.038781468,-0.02602296,-0.003269368,0.012769508,-0.014507305,-0.025978966,0.013033478,0.0056478404,0.013682402,0.0064397478,-0.021260517,-0.024461143,0.01575016,0.022899324,-0.035789818,0.012593529,0.056621384,0.024681117,0.030928386,-0.0010545019,0.007259152,0.029300578,0.01959971,-0.0073801377,0.03200626,0.005383871,-0.0011005589,-0.0021502487,0.007952071,0.0013899626,0.0074461303,0.04663455,0.049846176,0.026990848,-0.014562299,-0.0019880177,-0.0125385355,0.013253451,0.0106907515,0.024351155,-0.011059208,-0.04227906,0.040607255,0.027144829,0.04186111,-0.02421917,-0.007539619,-0.0018505338,0.018873796,-0.014265333,0.00052209524,-0.0017487957,-0.019170761,-0.044654783,-0.05494958,0.024505137,-0.0020925056,0.006445247,-0.027958734,0.002936657,0.028486673,-0.006126284,0.01643208,-0.017322976,0.012505539,0.010745744,0.023581246,0.048306357,-0.010668754,0.004630459,-0.0011074331,0.017300978,-0.015816152,-0.016674053,0.014144348,0.010729247,0.000078967336,0.010228805,0.0074956245,-0.0015164479,-0.011669637,-0.011878612,-0.051034037,0.08315029,-0.0033326107,-0.027584778,0.011273683,0.0059943,-0.0021282514,-0.020358622,0.005279383,0.01258253,0.0042977477,-0.013693401,-0.009117935,0.009013447,-0.009893345,-0.030488439,0.036757708,-0.011834618,-0.0010476277,-0.01900578,0.04494075,-0.004396736,-0.040563263,0.0092664175,-0.029168593,-0.010399285,0.0065992293,0.022569364,-0.04047527,0.025912972,0.021128532,0.007974069,-0.089221574,0.007347142,0.005075907,0.015134232,0.011570648,-0.028134713,-0.000633801,-0.022657353,0.011823619,-0.014606293,-0.012890494,0.013517421,-0.0066267257,-0.024945086,0.019467726,-0.0014270833,0.031632304,0.04124518,0.0052876323,0.021337507,-0.025912972,-0.0085020065,0.0031703797,-0.023295278,-0.020281631,-0.025495023,0.008436015,-0.016828034,0.03732964,0.0333701,-0.017157996,-0.023911206,-0.014584296,-0.02430716,-0.013209457,-0.0012854749,-0.00077334716,-0.013583413,-0.0082545355,-0.012010597,-0.0031868778,-0.055169556,-0.006489242,0.0042730006,-0.020479608,0.029058605,0.012318561,-0.0017446711,-0.022723345,-0.06687219,-0.018268866,0.001215358,0.005590097,0.03620777,-0.014188343,0.010113318,0.012175578,-0.012384553,-0.025627006,-0.0053618737,-0.005452613,-0.018356856,0.001865657,-0.033260114,-0.017333975,-0.01644308,0.012307562,-0.032380216,0.00075959874,0.008315029,-0.00359658,-0.0027579279,-0.025473025,0.012274566,0.011757626,0.036009792,-0.029344572,-0.019280748,-0.015508188,-0.012340559,-0.036163777,-0.038649485,0.01078974,-0.011405667,0.0155741805,-0.0017089254,-0.0046497067,0.02294332,-0.020248635,0.017685933,-0.016014129,-0.038737476,-0.04159714,0.0038138044,-0.036053788,0.02303131,-0.005796323,0.0019014028,-0.008980451,0.003954038,-0.0038577993,-0.0026589395,-0.009178428,0.038627487,-0.026154945,0.02960854,0.011746628,-0.045182724,0.0030686415,-0.027518785,0.0034206004,-0.0023784721,0.05468561,-0.03715366,0.026682884,0.005128151,0.006307763,-0.022041425,-0.024109183,0.017949903,0.014320327,0.008073057,0.027408797,-0.007908076,0.019896675,0.004201509,0.0138913775,0.016993014,0.032160245,0.038671482,0.037197653,-0.00428125,0.018455844,-0.05195793,0.016630057,0.0035635836,0.022470376,0.0079135755,-0.0026891858,-0.026484907,0.03055443,-0.014958252,-0.00036123904,-0.014595295,-0.06216474,0.012736512,0.0093489075,-0.015882144,-0.024615124,0.052529864,-0.03827553,-0.034293994,0.014606293,0.037593607,0.0053508747,-0.0013274074,-0.024153179,0.026682884,0.017586945,0.011856615,-0.012395552,0.020578597,0.032952152,0.043268945,-0.027320808,-0.018730812,0.013319444,-0.03277617,-0.004696451,0.00035299003,-0.019093769,0.028464675,-0.007974069,-0.036933687,0.01121319,0.022382386,0.025890976,-0.007556117,0.033700064,-0.024109183,-0.016146114,-0.0014257084,0.007182161,-0.017696932,-0.006670721,0.026484907,-0.043532915,-0.012285565,0.007473627,-0.019731695,-0.01764194,-0.017872913,-0.0051418995,0.03944139,-0.02113953,-0.009354407,-0.033854045,0.020831566,-0.023603242,0.0069621867,-0.037703596,-0.011999598,0.016223105,-0.006643224,0.013198459,-0.017487956,-0.013693401,-0.029168593,0.004773442,-0.0037890573,-0.022393383,-0.0013769016,-0.013451428,-0.012813503,0.040255297,0.022679351,0.017432963,0.008908959,-0.0049274242,-0.014540302,0.0350859,-0.0017900409,-0.026990848,-0.012043593,0.011224189,0.04065125,0.008326028,-0.012010597,0.018345857,0.06313262,0.033260114,0.03235822,0.003063142,0.022272399,-0.015739162,0.0008682111,-0.041069202,-0.005840318,-0.029058605,0.025231052,-0.0096788695,-0.05274984,-0.021964435,-0.020809568,-0.0027469292,-0.016531069,-0.03587781,0.034711946,-0.023251284,0.015475192,-0.024175176,-0.008980451,-0.016641056,0.010179311,-0.013572414,-0.009623876,0.0333701,-0.01737797,0.035393864,-0.012725513,0.013209457,-0.0018189126,-0.034293994,-0.0062967646,0.013682402,0.03884746,0.012868497,0.0020828818,0.0015425698,0.07179961,-0.017850915,0.0090079475,0.018598827,-0.018180877,0.024263166,0.007539619,-0.016773041,-0.0090079475,0.014925256,0.013033478,0.0056533394,0.0051996424,-0.006967686,0.011405667,0.0013858381,0.026990848,0.01942373,0.015893143,-0.023009311,0.021513486,0.041729126,0.058601156,0.004006282,0.034535967,-0.010575265,-0.004718449,0.016311094,-0.010778741,-0.02670488,-0.004828436,-0.0011060582,-0.005163897,-0.03271018,0.0014188342,0.013374438,0.007891578,-0.0056478404,0.05112203,-0.024175176,-0.032336224,0.018609826,-0.015607176,-0.0030961384,-0.033436093,-0.012351557,0.019566715,-0.029630538,0.0461946,-0.0009946963,-0.049670197,-0.029102601,0.021843448,-0.016190108,-0.010448779,-0.0057578273,-0.011251685,-0.006401252,0.005056659,0.03972736,0.001541195,0.040893223,-0.034799933,0.011020713,-0.01720199,0.012560532,-0.058205202,0.037857577,0.0061702793,-0.013066473,0.0127145145,0.0006320824,-0.011768625,0.006918192,0.021854447,0.030224469,-0.023823217,0.002301481,-0.02130451,-0.0035883307,-0.0065992293,0.012505539,-0.012703516,0.038825464,-0.031896275,-0.005774325,0.0031511318,-0.0018202873,0.04742646,0.024021193,0.0025654503,0.011614643,-0.002859666,-0.008524004,-0.0188298,-0.0028734144,0.035899807,0.017212989,0.01958871,-0.00047500702,-0.02773876,-0.021293512,0.020743577,0.022899324,-0.011026212,0.004693702,0.02156848,-0.03904544,-0.03482193,0.018818801,-0.0064342483,-0.015299213,0.0075616166,-0.009601878,-0.024153179,0.0053013805,-0.002731806,0.013979367,-0.003912793,0.010168312,-0.011735629,-0.018422848,0.03277617,0.0032308726,0.018565832,0.008051059,-0.036273763,-0.009585381,0.031170359,-0.016399084,0.0075616166,-0.01832386,-0.020776574,-0.015277215,0.016553067,-0.03433799,-0.009975835,-0.010382787,0.015376204,-0.006109786,0.002859666,-0.041663133,0.06300064,0.0025970717,-0.037087668,0.004418734,-0.027782755,-0.037703596,-0.0031318842,0.003965037,-0.00573583,0.012868497,0.0029641537,0.008848466,-0.0047981893,0.01412235,-0.02276734,-0.027496789,0.026726877,-0.0094204,0.041311175,0.0020058907,-0.024087187,-0.00040385907,-0.0351079,-0.00060974126,-0.020479608,-0.004330744,-0.010399285,-0.038759474,-0.024417147,0.02285533,0.011053708,0.00016575407,0.010778741,-0.023273282,0.04436882,-0.00038839213,0.008996949,0.043598905,-0.00009005198,0.022470376,0.028904624,-0.025517019,0.022459377,-0.004913676,-0.012351557,0.016421081,-0.032160245,0.0039732857,0.0048999274,-0.014155346,-0.03776959,-0.006401252,0.019665703,0.005279383,0.022481374,-0.020237636,-0.0019041526,0.0010510647,0.020930555,0.0037258146,-0.013880379,-0.018169878,0.017421965,-0.046414576,0.0027606776,0.04852633,0.020358622,-0.026814867,0.032798167,0.026418913,-0.003175879,0.023691233,0.013704399,0.0075231213,-0.028574662,-0.008952954,0.028728643,-0.03801156,0.019093769,0.0017735428,0.005513106,-0.018136881,0.009326911,0.0009252669,-0.027320808,-0.010778741,0.018928789,-0.004075024,0.0032473707,0.031324342,0.003200626,0.0037670599,0.0051666466,0.021073539,0.00676421,0.021161528,0.020347623,0.012164579,0.0043774885,-0.01958871,0.011246187,0.042389046,-0.034447975,-0.061064865,-0.023229286,-0.0376596,-0.041201185,0.00012416518,0.002372973,-0.011757626,-0.007754094,-0.0004358241,0.008309529,0.0012194825,0.02388921,-0.032226235,0.026638888,0.04150915,0.005579098,0.018631823,-0.033854045,-0.018026894,-0.006109786,0.006736713,0.028112715,0.027320808,-0.020919556,0.015662171,0.03798956,0.0028569163,-0.043532915,-0.013165462,0.0033518584,-0.014111351,0.04177312,-0.018433847,0.005768826,0.013649406,0.0019124016,-0.014166345,0.009656872,0.0021447495,0.0034315991,-0.020391617,-0.024087187,0.020094652,-0.0025530767,0.00693469,-0.0071986592,-0.02936657,-0.005370123,-0.0020182643,-0.023053307,-0.008073057,0.027848747,0.014892261,-0.005100654,0.027188824,-0.0066102277,-0.0024760857,0.00032807104,-0.019027777,0.04769043,0.034469973,0.023581246,-0.0025132063,0.012296564,0.029542549,0.038649485,0.015376204,0.029762523,0.014969251,0.03620777,-0.026308926,0.0014545801,0.00975586,0.0017185493,-0.009018946,0.015288214,0.030686416,-0.00076647295,-0.0282447,0.027232818,0.008210541,0.013110468,0.017762925,0.01694902,0.002003141,-0.01934674,-0.025451027,-0.026990848,-0.0011184318,0.0023496004,-0.0095138885,0.0049961666,0.026242934,-0.015717164,-0.024549132,-0.008353524,0.027386801,0.021557482,-0.024703113,-0.046458572,0.02046861,0.010536769,-0.02276734,-0.008287532,-0.015629174,-0.0014449562,-0.0059448057,-0.007429632,0.0248131,-0.03587781,0.03827553,-0.028222702,-0.030840397,0.03919942,0.021887444,0.005796323,0.030070487,0.007429632,-0.026990848,0.016410083,-0.04331294,0.017949903,-0.008161047,-0.016201107,0.04034329,0.02371323,0.026220936,0.020688584,0.007292148,0.026506903,-0.022723345,0.011526654,-0.034975912,0.038781468,0.025956968,-0.02842068,-0.018554833,0.018444845,-0.007814587,-0.032974146,-0.025890976,-0.032798167,0.026990848,0.011757626,0.024769107,-0.039331406,-0.017861914,0.02721082,0.011680636,0.024439145,-0.015640173,0.007660605,-0.03860549,-0.0012641648,-0.027584778,0.009227922,-0.032468207,0.017971901,-0.027870744,-0.021128532,-0.024395151,-0.017103001,-0.018257868,-0.041751124,-0.0009733863,0.016300095,-0.014947254,0.0239772,-0.009029945,-0.031654302,-0.014177344,-0.021865446,0.028310692,-0.0017941653,0.020864563,0.034799933,0.010998715,0.008892461,0.01832386,-0.013330443,0.009469894,0.044786766,-0.007776092,0.012351557,0.025473025,0.0018546584,0.022877328,0.02661689,0.05384971,0.0060272957,-0.027672768,-0.024967084,-0.0043499917,0.04315896,0.032314226,0.013693401,-0.00045438443,-0.008617493,-0.01959971,-0.007182161,-0.013737395,-0.023515252,-0.003321612,-0.0013617785,-0.024087187,-0.020017661,-0.0076551056,-0.022316393,-0.0065332367,0.010470777,0.013363439,0.005606595,-0.016531069,-0.024879094,0.021238519,-0.010311295,-0.04038728,0.016938021,0.009959336,0.01978669,-0.022294395,-0.004371989,0.024065189,0.008067558,0.02276734,0.052441873,0.02038062,-0.0028239202,0.0029036608,-0.020039659,0.015013246,0.00083933945,0.014782273,0.0040117814,0.0070061814,0.014958252,-0.010586264,-0.034425978,0.029718528,-0.0073416424,-0.004641458,0.020149646,0.0030493939,0.008848466,-0.0018257867,-0.032842163,0.03798956,0.04091522,-0.018719813,0.03392004,-0.002386721,-0.014331326,0.011257185,0.035151895,-0.010223306,0.023273282,-0.030928386,0.023911206,-0.0020127648,0.008089555,-0.030884393,-0.01206559,0.02960854,-0.008458012,0.00041004585,-0.0091729285,-0.0053261276,-0.04553468,0.01696002,0.034425978,0.0376816,0.012747511,0.02303131,-0.012637524,0.025868978,-0.0026039458,0.010437781,-0.032732178,-0.004646957,0.029344572,0.02670488,0.011317678,0.013407433,-0.0196877,0.029564546,0.03348009,0.017421965,0.015255217,0.03913343,-0.006241771,0.042477038,-0.0040200306,-0.03552585,-0.0034975915,-0.005796323,-0.010723747,0.026902856,-0.020391617,-0.004605712,-0.008073057,-0.043290943,-0.014485308,-0.006516739,-0.043510918,0.03706567,0.030444443,0.025978966,0.0049081766,0.0088429665,0.021513486,0.026594894,0.057457287,0.006797206,0.016982017,-0.009491892,-0.02045761,0.007721098,-0.0359658,0.0019550216,0.0063902535,0.0053976197,-0.026154945,0.02892662]}]